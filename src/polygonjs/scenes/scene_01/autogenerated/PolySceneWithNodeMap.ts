import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { CopNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/CopNetwork";
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
import { OrthographicCameraObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/OrthographicCamera";
import { PostProcessNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/PostProcessNetwork";
// sop
import { ActorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor";
import { AttribIdSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribId";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { PlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
import { TextSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Text";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
// mat
import { MeshPhysicalBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshPhysicalBuilder";
import { MeshStandardBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder";
import { MeshStandardMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard";
// post
import { BlurPostNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/post/Blur";
import { NoisePostNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/post/Noise";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  node(path: "/orthographicCamera1"): OrthographicCameraObjNode;
  node(path: "/COP"): CopNetworkObjNode;
  node(path: "/eyes"): GeoObjNode;
  node(path: "/eyes/copy1"): CopySopNode;
  node(path: "/eyes/plane1"): PlaneSopNode;
  node(path: "/eyes/transform1"): TransformSopNode;
  node(path: "/eyes/material1"): MaterialSopNode;
  node(path: "/eyes/sphere1"): SphereSopNode;
  node(path: "/eyes/attribId1"): AttribIdSopNode;
  node(path: "/eyes/actor1"): ActorSopNode;
  node(path: "/eyes/MAT"): MaterialsNetworkSopNode;
  node(path: "/eyes/MAT/meshStandardBuilder1"): MeshStandardBuilderMatNode;
  node(path: "/glass"): GeoObjNode;
  node(path: "/glass/box1"): BoxSopNode;
  node(path: "/glass/material1"): MaterialSopNode;
  node(path: "/glass/MAT"): MaterialsNetworkSopNode;
  node(path: "/glass/MAT/meshPhysicalBuilder1"): MeshPhysicalBuilderMatNode;
  node(path: "/Text"): GeoObjNode;
  node(path: "/Text/text1"): TextSopNode;
  node(path: "/Text/transform1"): TransformSopNode;
  node(path: "/Text/material1"): MaterialSopNode;
  node(path: "/Text/MAT"): MaterialsNetworkSopNode;
  node(path: "/Text/MAT/meshStandard1"): MeshStandardMatNode;
  node(path: "/bg"): GeoObjNode;
  node(path: "/bg/material1"): MaterialSopNode;
  node(path: "/bg/sphere1"): SphereSopNode;
  node(path: "/bg/MAT"): MaterialsNetworkSopNode;
  node(path: "/bg/MAT/meshStandard1"): MeshStandardMatNode;
  node(path: "/postProcessNetwork1"): PostProcessNetworkObjNode;
  node(path: "/postProcessNetwork1/noise1"): NoisePostNode;
  node(path: "/postProcessNetwork1/blur1"): BlurPostNode;
  node(path: "/postProcessNetwork1/blur2"): BlurPostNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "orthographicCamera1--transform"?: ParamValueSerializedTypeMap["folder"];
  "orthographicCamera1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1--t"?: ParamValueSerializedTypeMap["vector3"];
  "orthographicCamera1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--tx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--ty"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--tz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--r"?: ParamValueSerializedTypeMap["vector3"];
  "orthographicCamera1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--rx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--ry"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--rz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--s"?: ParamValueSerializedTypeMap["vector3"];
  "orthographicCamera1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--sx"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--sy"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--sz"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--scale"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "orthographicCamera1--camera"?: ParamValueSerializedTypeMap["folder"];
  "orthographicCamera1--controls"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--display"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--size"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "orthographicCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "orthographicCamera1--layer"?: ParamValueSerializedTypeMap["integer"];
  "orthographicCamera1--render"?: ParamValueSerializedTypeMap["folder"];
  "orthographicCamera1--setScene"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--scene"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--setRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--renderer"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "orthographicCamera1--doPostProcess"?: ParamValueSerializedTypeMap["boolean"];
  "orthographicCamera1--postProcessNode"?: ParamValueSerializedTypeMap["node_path"];
  "eyes--transform"?: ParamValueSerializedTypeMap["folder"];
  "eyes--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "eyes--t"?: ParamValueSerializedTypeMap["vector3"];
  "eyes--t-tx"?: ParamValueSerializedTypeMap["float"];
  "eyes--t-ty"?: ParamValueSerializedTypeMap["float"];
  "eyes--t-tz"?: ParamValueSerializedTypeMap["float"];
  "eyes--tx"?: ParamValueSerializedTypeMap["float"];
  "eyes--ty"?: ParamValueSerializedTypeMap["float"];
  "eyes--tz"?: ParamValueSerializedTypeMap["float"];
  "eyes--r"?: ParamValueSerializedTypeMap["vector3"];
  "eyes--r-rx"?: ParamValueSerializedTypeMap["float"];
  "eyes--r-ry"?: ParamValueSerializedTypeMap["float"];
  "eyes--r-rz"?: ParamValueSerializedTypeMap["float"];
  "eyes--rx"?: ParamValueSerializedTypeMap["float"];
  "eyes--ry"?: ParamValueSerializedTypeMap["float"];
  "eyes--rz"?: ParamValueSerializedTypeMap["float"];
  "eyes--s"?: ParamValueSerializedTypeMap["vector3"];
  "eyes--s-sx"?: ParamValueSerializedTypeMap["float"];
  "eyes--s-sy"?: ParamValueSerializedTypeMap["float"];
  "eyes--s-sz"?: ParamValueSerializedTypeMap["float"];
  "eyes--sx"?: ParamValueSerializedTypeMap["float"];
  "eyes--sy"?: ParamValueSerializedTypeMap["float"];
  "eyes--sz"?: ParamValueSerializedTypeMap["float"];
  "eyes--scale"?: ParamValueSerializedTypeMap["float"];
  "eyes--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "eyes--display"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "eyes--CAD"?: ParamValueSerializedTypeMap["folder"];
  "eyes--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "eyes--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "eyes--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--CSG"?: ParamValueSerializedTypeMap["folder"];
  "eyes--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "eyes--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "eyes--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "eyes--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "eyes--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "eyes--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "eyes--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "eyes--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "eyes--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "eyes--TET"?: ParamValueSerializedTypeMap["folder"];
  "eyes--TetScale"?: ParamValueSerializedTypeMap["float"];
  "eyes--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "eyes--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-copy1--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "eyes-copy1--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "eyes-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "eyes-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "eyes-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "eyes-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "eyes-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "eyes-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-plane1--size"?: ParamValueSerializedTypeMap["vector2"];
  "eyes-plane1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--sizex"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--sizey"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-plane1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "eyes-plane1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-plane1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--directionx"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--directiony"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--directionz"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--center"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-plane1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--centerx"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--centery"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--centerz"?: ParamValueSerializedTypeMap["float"];
  "eyes-plane1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "eyes-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "eyes-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "eyes-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "eyes-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "eyes-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "eyes-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "eyes-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "eyes-material1--group"?: ParamValueSerializedTypeMap["string"];
  "eyes-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "eyes-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "eyes-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "eyes-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "eyes-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "eyes-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "eyes-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-attribId1--class"?: ParamValueSerializedTypeMap["integer"];
  "eyes-attribId1--id"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-attribId1--idName"?: ParamValueSerializedTypeMap["string"];
  "eyes-attribId1--idn"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-attribId1--idnName"?: ParamValueSerializedTypeMap["string"];
  "eyes-actor1--group"?: ParamValueSerializedTypeMap["string"];
  "eyes-actor1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-actor1--node"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "eyes-MAT-meshStandardBuilder1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--opacity"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--textures"?: ParamValueSerializedTypeMap["folder"];
  "eyes-MAT-meshStandardBuilder1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--map"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--emissive"?: ParamValueSerializedTypeMap["color"];
  "eyes-MAT-meshStandardBuilder1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "eyes-MAT-meshStandardBuilder1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "eyes-MAT-meshStandardBuilder1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--metalness"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--roughness"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "eyes-MAT-meshStandardBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "eyes-MAT-meshStandardBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--blending"?: ParamValueSerializedTypeMap["integer"];
  "eyes-MAT-meshStandardBuilder1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "eyes-MAT-meshStandardBuilder1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "eyes-MAT-meshStandardBuilder1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "eyes-MAT-meshStandardBuilder1--ramp1"?: ParamValueSerializedTypeMap["ramp"];
  "eyes-MAT-meshStandardBuilder1--pointer_pos"?: ParamValueSerializedTypeMap["vector3"];
  "eyes-MAT-meshStandardBuilder1--pointer_pos-pointer_posx"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--pointer_pos-pointer_posy"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--pointer_pos-pointer_posz"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--pointer_posx"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--pointer_posy"?: ParamValueSerializedTypeMap["float"];
  "eyes-MAT-meshStandardBuilder1--pointer_posz"?: ParamValueSerializedTypeMap["float"];
  "glass--transform"?: ParamValueSerializedTypeMap["folder"];
  "glass--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "glass--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "glass--t"?: ParamValueSerializedTypeMap["vector3"];
  "glass--t-tx"?: ParamValueSerializedTypeMap["float"];
  "glass--t-ty"?: ParamValueSerializedTypeMap["float"];
  "glass--t-tz"?: ParamValueSerializedTypeMap["float"];
  "glass--tx"?: ParamValueSerializedTypeMap["float"];
  "glass--ty"?: ParamValueSerializedTypeMap["float"];
  "glass--tz"?: ParamValueSerializedTypeMap["float"];
  "glass--r"?: ParamValueSerializedTypeMap["vector3"];
  "glass--r-rx"?: ParamValueSerializedTypeMap["float"];
  "glass--r-ry"?: ParamValueSerializedTypeMap["float"];
  "glass--r-rz"?: ParamValueSerializedTypeMap["float"];
  "glass--rx"?: ParamValueSerializedTypeMap["float"];
  "glass--ry"?: ParamValueSerializedTypeMap["float"];
  "glass--rz"?: ParamValueSerializedTypeMap["float"];
  "glass--s"?: ParamValueSerializedTypeMap["vector3"];
  "glass--s-sx"?: ParamValueSerializedTypeMap["float"];
  "glass--s-sy"?: ParamValueSerializedTypeMap["float"];
  "glass--s-sz"?: ParamValueSerializedTypeMap["float"];
  "glass--sx"?: ParamValueSerializedTypeMap["float"];
  "glass--sy"?: ParamValueSerializedTypeMap["float"];
  "glass--sz"?: ParamValueSerializedTypeMap["float"];
  "glass--scale"?: ParamValueSerializedTypeMap["float"];
  "glass--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "glass--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "glass--display"?: ParamValueSerializedTypeMap["boolean"];
  "glass--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "glass--CAD"?: ParamValueSerializedTypeMap["folder"];
  "glass--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "glass--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "glass--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "glass--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "glass--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "glass--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "glass--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "glass--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "glass--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "glass--CSG"?: ParamValueSerializedTypeMap["folder"];
  "glass--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "glass--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "glass--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "glass--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "glass--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "glass--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "glass--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "glass--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "glass--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "glass--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "glass--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "glass--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "glass--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "glass--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "glass--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "glass--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "glass--TET"?: ParamValueSerializedTypeMap["folder"];
  "glass--TetScale"?: ParamValueSerializedTypeMap["float"];
  "glass--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "glass--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "glass--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "glass--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "glass--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "glass--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "glass--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "glass-box1--size"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "glass-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--divisions"?: ParamValueSerializedTypeMap["vector3"];
  "glass-box1--divisions-divisionsx"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--divisions-divisionsy"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--divisions-divisionsz"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--divisionsx"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--divisionsy"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--divisionsz"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "glass-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "glass-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "glass-material1--group"?: ParamValueSerializedTypeMap["string"];
  "glass-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "glass-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "glass-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "glass-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "glass-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "glass-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "glass-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "glass-MAT-meshPhysicalBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "glass-MAT-meshPhysicalBuilder1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--opacity"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--textures"?: ParamValueSerializedTypeMap["folder"];
  "glass-MAT-meshPhysicalBuilder1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--map"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--emissive"?: ParamValueSerializedTypeMap["color"];
  "glass-MAT-meshPhysicalBuilder1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "glass-MAT-meshPhysicalBuilder1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "glass-MAT-meshPhysicalBuilder1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--metalness"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--roughness"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--clearcoat"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useClearCoatMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--useClearCoatNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatNormalMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatNormalScale"?: ParamValueSerializedTypeMap["vector2"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatNormalScale-clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatNormalScale-clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatRoughness"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useClearCoatRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--clearcoatRoughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--useSheen"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--sheen"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--sheenRoughness"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--sheenColor"?: ParamValueSerializedTypeMap["color"];
  "glass-MAT-meshPhysicalBuilder1--sheenColor-sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--sheenColor-sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--sheenColor-sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useIridescence"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--iridescence"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceIOR"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceThicknessRange"?: ParamValueSerializedTypeMap["vector2"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceThicknessRange-iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceThicknessRange-iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useIridescenceMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--useIridescenceThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--iridescenceThicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--transmission"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useTransmissionMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--transmissionMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--ior"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--thickness"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--thicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--attenuationDistance"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--attenuationColor"?: ParamValueSerializedTypeMap["color"];
  "glass-MAT-meshPhysicalBuilder1--attenuationColor-attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--attenuationColor-attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--attenuationColor-attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "glass-MAT-meshPhysicalBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "glass-MAT-meshPhysicalBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--blending"?: ParamValueSerializedTypeMap["integer"];
  "glass-MAT-meshPhysicalBuilder1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "glass-MAT-meshPhysicalBuilder1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "glass-MAT-meshPhysicalBuilder1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "glass-MAT-meshPhysicalBuilder1--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "glass-MAT-meshPhysicalBuilder1--ramp1"?: ParamValueSerializedTypeMap["ramp"];
  "Text--transform"?: ParamValueSerializedTypeMap["folder"];
  "Text--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "Text--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "Text--t"?: ParamValueSerializedTypeMap["vector3"];
  "Text--t-tx"?: ParamValueSerializedTypeMap["float"];
  "Text--t-ty"?: ParamValueSerializedTypeMap["float"];
  "Text--t-tz"?: ParamValueSerializedTypeMap["float"];
  "Text--tx"?: ParamValueSerializedTypeMap["float"];
  "Text--ty"?: ParamValueSerializedTypeMap["float"];
  "Text--tz"?: ParamValueSerializedTypeMap["float"];
  "Text--r"?: ParamValueSerializedTypeMap["vector3"];
  "Text--r-rx"?: ParamValueSerializedTypeMap["float"];
  "Text--r-ry"?: ParamValueSerializedTypeMap["float"];
  "Text--r-rz"?: ParamValueSerializedTypeMap["float"];
  "Text--rx"?: ParamValueSerializedTypeMap["float"];
  "Text--ry"?: ParamValueSerializedTypeMap["float"];
  "Text--rz"?: ParamValueSerializedTypeMap["float"];
  "Text--s"?: ParamValueSerializedTypeMap["vector3"];
  "Text--s-sx"?: ParamValueSerializedTypeMap["float"];
  "Text--s-sy"?: ParamValueSerializedTypeMap["float"];
  "Text--s-sz"?: ParamValueSerializedTypeMap["float"];
  "Text--sx"?: ParamValueSerializedTypeMap["float"];
  "Text--sy"?: ParamValueSerializedTypeMap["float"];
  "Text--sz"?: ParamValueSerializedTypeMap["float"];
  "Text--scale"?: ParamValueSerializedTypeMap["float"];
  "Text--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "Text--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "Text--display"?: ParamValueSerializedTypeMap["boolean"];
  "Text--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "Text--CAD"?: ParamValueSerializedTypeMap["folder"];
  "Text--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "Text--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "Text--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "Text--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "Text--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "Text--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "Text--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "Text--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "Text--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "Text--CSG"?: ParamValueSerializedTypeMap["folder"];
  "Text--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "Text--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "Text--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "Text--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "Text--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "Text--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "Text--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "Text--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "Text--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "Text--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "Text--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "Text--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "Text--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "Text--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "Text--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "Text--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "Text--TET"?: ParamValueSerializedTypeMap["folder"];
  "Text--TetScale"?: ParamValueSerializedTypeMap["float"];
  "Text--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "Text--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "Text--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "Text--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "Text--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "Text--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "Text--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "Text-text1--font"?: ParamValueSerializedTypeMap["string"];
  "Text-text1--text"?: ParamValueSerializedTypeMap["string"];
  "Text-text1--type"?: ParamValueSerializedTypeMap["integer"];
  "Text-text1--size"?: ParamValueSerializedTypeMap["float"];
  "Text-text1--extrude"?: ParamValueSerializedTypeMap["float"];
  "Text-text1--segments"?: ParamValueSerializedTypeMap["integer"];
  "Text-text1--bevelEnabled"?: ParamValueSerializedTypeMap["boolean"];
  "Text-text1--bevelThickness"?: ParamValueSerializedTypeMap["float"];
  "Text-text1--bevelSize"?: ParamValueSerializedTypeMap["float"];
  "Text-text1--bevelOffset"?: ParamValueSerializedTypeMap["float"];
  "Text-text1--bevelSegments"?: ParamValueSerializedTypeMap["integer"];
  "Text-text1--strokeWidth"?: ParamValueSerializedTypeMap["float"];
  "Text-text1--lineHeight"?: ParamValueSerializedTypeMap["float"];
  "Text-text1--splitPerLetter"?: ParamValueSerializedTypeMap["boolean"];
  "Text-text1--keepEmptyGeometries"?: ParamValueSerializedTypeMap["boolean"];
  "Text-text1--justifyMode"?: ParamValueSerializedTypeMap["integer"];
  "Text-text1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "Text-text1--isCCW"?: ParamValueSerializedTypeMap["boolean"];
  "Text-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "Text-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "Text-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "Text-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "Text-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "Text-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "Text-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "Text-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "Text-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "Text-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "Text-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "Text-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "Text-material1--group"?: ParamValueSerializedTypeMap["string"];
  "Text-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "Text-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "Text-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "Text-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "Text-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "Text-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "Text-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "Text-MAT-meshStandard1--default"?: ParamValueSerializedTypeMap["folder"];
  "Text-MAT-meshStandard1--color"?: ParamValueSerializedTypeMap["color"];
  "Text-MAT-meshStandard1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--colorr"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--colorg"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--colorb"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--opacity"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--textures"?: ParamValueSerializedTypeMap["folder"];
  "Text-MAT-meshStandard1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--map"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--emissive"?: ParamValueSerializedTypeMap["color"];
  "Text-MAT-meshStandard1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "Text-MAT-meshStandard1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "Text-MAT-meshStandard1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--metalness"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "Text-MAT-meshStandard1--roughness"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "Text-MAT-meshStandard1--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--front"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--blending"?: ParamValueSerializedTypeMap["integer"];
  "Text-MAT-meshStandard1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "Text-MAT-meshStandard1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "Text-MAT-meshStandard1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "Text-MAT-meshStandard1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "Text-MAT-meshStandard1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "Text-MAT-meshStandard1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "Text-MAT-meshStandard1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "bg--transform"?: ParamValueSerializedTypeMap["folder"];
  "bg--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "bg--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "bg--t"?: ParamValueSerializedTypeMap["vector3"];
  "bg--t-tx"?: ParamValueSerializedTypeMap["float"];
  "bg--t-ty"?: ParamValueSerializedTypeMap["float"];
  "bg--t-tz"?: ParamValueSerializedTypeMap["float"];
  "bg--tx"?: ParamValueSerializedTypeMap["float"];
  "bg--ty"?: ParamValueSerializedTypeMap["float"];
  "bg--tz"?: ParamValueSerializedTypeMap["float"];
  "bg--r"?: ParamValueSerializedTypeMap["vector3"];
  "bg--r-rx"?: ParamValueSerializedTypeMap["float"];
  "bg--r-ry"?: ParamValueSerializedTypeMap["float"];
  "bg--r-rz"?: ParamValueSerializedTypeMap["float"];
  "bg--rx"?: ParamValueSerializedTypeMap["float"];
  "bg--ry"?: ParamValueSerializedTypeMap["float"];
  "bg--rz"?: ParamValueSerializedTypeMap["float"];
  "bg--s"?: ParamValueSerializedTypeMap["vector3"];
  "bg--s-sx"?: ParamValueSerializedTypeMap["float"];
  "bg--s-sy"?: ParamValueSerializedTypeMap["float"];
  "bg--s-sz"?: ParamValueSerializedTypeMap["float"];
  "bg--sx"?: ParamValueSerializedTypeMap["float"];
  "bg--sy"?: ParamValueSerializedTypeMap["float"];
  "bg--sz"?: ParamValueSerializedTypeMap["float"];
  "bg--scale"?: ParamValueSerializedTypeMap["float"];
  "bg--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "bg--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "bg--display"?: ParamValueSerializedTypeMap["boolean"];
  "bg--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "bg--CAD"?: ParamValueSerializedTypeMap["folder"];
  "bg--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "bg--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "bg--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "bg--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "bg--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "bg--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "bg--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "bg--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "bg--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "bg--CSG"?: ParamValueSerializedTypeMap["folder"];
  "bg--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "bg--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "bg--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "bg--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "bg--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "bg--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "bg--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "bg--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "bg--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "bg--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "bg--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "bg--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "bg--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "bg--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "bg--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "bg--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "bg--TET"?: ParamValueSerializedTypeMap["folder"];
  "bg--TetScale"?: ParamValueSerializedTypeMap["float"];
  "bg--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "bg--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "bg--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "bg--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "bg--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "bg--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "bg--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "bg-material1--group"?: ParamValueSerializedTypeMap["string"];
  "bg-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "bg-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "bg-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "bg-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "bg-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "bg-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "bg-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "bg-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "bg-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "bg-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "bg-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "bg-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "bg-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "bg-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--default"?: ParamValueSerializedTypeMap["folder"];
  "bg-MAT-meshStandard1--color"?: ParamValueSerializedTypeMap["color"];
  "bg-MAT-meshStandard1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--colorr"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--colorg"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--colorb"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--opacity"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--textures"?: ParamValueSerializedTypeMap["folder"];
  "bg-MAT-meshStandard1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--map"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--emissive"?: ParamValueSerializedTypeMap["color"];
  "bg-MAT-meshStandard1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "bg-MAT-meshStandard1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "bg-MAT-meshStandard1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--metalness"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "bg-MAT-meshStandard1--roughness"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "bg-MAT-meshStandard1--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--front"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--blending"?: ParamValueSerializedTypeMap["integer"];
  "bg-MAT-meshStandard1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "bg-MAT-meshStandard1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "bg-MAT-meshStandard1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "bg-MAT-meshStandard1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "bg-MAT-meshStandard1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "bg-MAT-meshStandard1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "bg-MAT-meshStandard1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "postProcessNetwork1--prependRenderPass"?: ParamValueSerializedTypeMap["boolean"];
  "postProcessNetwork1--depthBuffer"?: ParamValueSerializedTypeMap["boolean"];
  "postProcessNetwork1--stencilBuffer"?: ParamValueSerializedTypeMap["boolean"];
  "postProcessNetwork1--sampling"?: ParamValueSerializedTypeMap["integer"];
  "postProcessNetwork1--tTextureType"?: ParamValueSerializedTypeMap["boolean"];
  "postProcessNetwork1--textureType"?: ParamValueSerializedTypeMap["integer"];
  "postProcessNetwork1-noise1--strength"?: ParamValueSerializedTypeMap["float"];
  "postProcessNetwork1-noise1--premultiply"?: ParamValueSerializedTypeMap["boolean"];
  "postProcessNetwork1-blur1--amount"?: ParamValueSerializedTypeMap["float"];
  "postProcessNetwork1-blur1--kernelSize"?: ParamValueSerializedTypeMap["integer"];
  "postProcessNetwork1-blur2--amount"?: ParamValueSerializedTypeMap["float"];
  "postProcessNetwork1-blur2--kernelSize"?: ParamValueSerializedTypeMap["integer"];
}
