{"version":3,"file":"modules/POLY_ANIM.js","mappings":";;;;;AAAA,kBAAkB,mBAAO,CAAC,KAAa;;AAEvC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C,cAAc,mBAAO,CAAC,KAAqB;AAC3C,cAAc,mBAAO,CAAC,KAAqB;AAC3C,cAAc,mBAAO,CAAC,KAAqB;AAC3C,cAAc,mBAAO,CAAC,KAAqB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;AChnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C,4BAA4B,mBAAO,CAAC,KAAuB;;AAE3D;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3CA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA,YAAY,mBAAO,CAAC,KAAY;AAChC,kBAAkB,mBAAO,CAAC,KAAkB;AAC5C,aAAa,mBAAO,CAAC,KAAa;AAClC,YAAY,mBAAO,CAAC,KAAY;AAChC,YAAY,mBAAO,CAAC,KAAY;AAChC,YAAY,mBAAO,CAAC,KAAY;AAChC,uBAAuB,mBAAO,CAAC,KAAuB;AACtD,YAAY,mBAAO,CAAC,KAAY;AAChC,YAAY,mBAAO,CAAC,KAAY;AAChC,YAAY,mBAAO,CAAC,KAAY;AAChC;;;;;;;;AClBA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,6EAA6E;;AAE3F;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpDA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnDA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;;;;;;;;AChFA;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA,UAAU,mBAAO,CAAC,IAAU;AAC5B,WAAW,mBAAO,CAAC,KAAW;AAC9B,aAAa,mBAAO,CAAC,KAAa;AAClC;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,mEAAmE;AACtF,WAAW,QAAQ;AACnB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,oBAAoB,uBAAuB;AAC3C;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,kDAAkD;AACrE,WAAW,QAAQ;AACnB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,oBAAoB,uBAAuB;AAC3C;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;;;;;;;;AC3CA;AACA;AACA;AACA;AACA,WAAW,SAAS;;AAEpB;AACA;AACA,UAAU,mBAAO,CAAC,KAAU;AAC5B;;;;;;;;ACTA,aAAa,mBAAO,CAAC,KAAkB;AACvC,aAAa,mBAAO,CAAC,IAAkB;;AAEvC;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACRA,aAAa,mBAAO,CAAC,KAAkB;;AAEvC;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,aAAa,mBAAO,CAAC,KAAkB;AACvC,aAAa,mBAAO,CAAC,IAAkB;;AAEvC,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA,aAAa,mBAAO,CAAC,IAAkB;;AAEvC,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA;AACA;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,KAAS;AAC1B,UAAU,mBAAO,CAAC,KAAU;AAC5B,cAAc,mBAAO,CAAC,KAAc;AACpC,qBAAqB,mBAAO,CAAC,IAAqB;AAClD,OAAO,mBAAO,CAAC,IAAO;AACtB,WAAW,mBAAO,CAAC,KAAW;AAC9B,cAAc,mBAAO,CAAC,KAAc;AACpC,YAAY,mBAAO,CAAC,KAAY;AAChC,WAAW,mBAAO,CAAC,KAAW;AAC9B,YAAY,mBAAO,CAAC,IAAY;AAChC,mBAAmB,mBAAO,CAAC,KAAmB;AAC9C,aAAa,mBAAO,CAAC,KAAa;AAClC,YAAY,mBAAO,CAAC,IAAY;AAChC;;;;;;;;AC7BA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,eAAe,mBAAO,CAAC,KAAU;AACjC,gBAAgB,mBAAO,CAAC,KAAW;;AAEnC;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpDA,aAAa,mBAAO,CAAC,IAAkB;;AAEvC,gBAAgB,mBAAO,CAAC,KAAW;;AAEnC;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,sCAAsC,aAAa,cAAc,aAAa;AAC9E;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;ACtHA,gBAAgB,mBAAO,CAAC,KAAW;;AAEnC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,wBAAwB,mBAAO,CAAC,KAAmB;;AAEnD;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,aAAa,mBAAO,CAAC,IAAkB;;AAEvC,gBAAgB,mBAAO,CAAC,KAAW;;AAEnC;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;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AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;ACnEA,cAAc,mBAAO,CAAC,KAAU;;AAEhC,mBAAmB,mBAAO,CAAC,KAAc;;AAEzC;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,wBAAwB,mBAAO,CAAC,KAAmB;;AAEnD;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA,cAAc,mBAAO,CAAC,KAAU;;AAEhC,mBAAmB,mBAAO,CAAC,KAAc;;AAEzC;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtBA,aAAa,mBAAO,CAAC,KAAkB;;AAEvC;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc,YAAY;AACnD;;AAEA;;;;;;;;ACnBA,cAAc,mBAAO,CAAC,KAAU;AAChC,YAAY,mBAAO,CAAC,KAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,kBAAkB;AAClE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA,oBAAoB,EAAE;AACtB,oBAAoB,oCAAoC;AACxD;AACA,sBAAsB,GAAG,GAAG,GAAG;AAC/B;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,0CAA0C,mBAAmB,IAAI,uBAAuB;AACxF;AACA;;AAEA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB,SAAS,aAAa;AACtB,SAAS,aAAa;AACtB,SAAS,aAAa;AACtB,SAAS,aAAa;AACtB;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C;AACA;AACA,SAAS,mBAAO,CAAC,KAAS;AAC1B,SAAS,mBAAO,CAAC,KAAS;AAC1B,SAAS,mBAAO,CAAC,KAAS;AAC1B,SAAS,mBAAO,CAAC,KAAS;AAC1B,SAAS,mBAAO,CAAC,KAAS;AAC1B;;;;;;;;ACpBA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAuB;AAC/C,aAAa,mBAAO,CAAC,IAAkB;;AAEvC,mBAAmB,mBAAO,CAAC,KAAc;AACzC,iBAAiB,mBAAO,CAAC,KAAY;;AAErC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,yBAAyB,oDAAoD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAA8D,kBAAkB;;AAExF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;;;;;;;;AC7IA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAuB;AAC/C,aAAa,mBAAO,CAAC,IAAkB;AACvC,aAAa,mBAAO,CAAC,IAAkB;;AAEvC,qBAAqB,mBAAO,CAAC,KAAgB;AAC7C,iBAAiB,mBAAO,CAAC,KAAY;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,2BAA2B;AAC3B,4BAA4B,4CAA4C;AACxE,4BAA4B,kDAAkD;AAC9E;AACA;AACA;AACA;AACA;AACA,QAAQ,0BAA0B,kBAAkB;;AAEpD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AA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;AAEA;;;;;;;;ACvBA,aAAa,mBAAO,CAAC,KAAkB;;AAEvC;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc,YAAY;AACnD;;AAEA;;;;;;;;ACnBA,aAAa,mBAAO,CAAC,IAAkB;AACvC,YAAY,mBAAO,CAAC,KAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA,kDAAkD,iBAAiB;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,MAAM;AACnD;AACA,GAAG;;AAEH;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;;AAEA;;;;;;;;ACxCA,oBAAoB,mBAAO,CAAC,EAAe;AAC3C,aAAa,mBAAO,CAAC,KAAQ;;AAE7B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzFA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW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A;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClFA,aAAa,mBAAO,CAAC,KAAkB;;AAEvC;AACA,WAAW,OAAO;AAClB,aAAa,OAAO,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA,aAAa,mBAAO,CAAC,KAAkB;AACvC,aAAa,mBAAO,CAAC,KAAkB;;AAEvC;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM,8BAA8B;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;ACxDA,aAAa,mBAAO,CAAC,KAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,eAAe,mBAAO,CAAC,KAAoB;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACTA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;;;;;;;;ACTA,aAAa,mBAAO,CAAC,KAAmB;;AAExC;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;AChBA,aAAa,mBAAO,CAAC,KAAkB;AACvC,aAAa,mBAAO,CAAC,KAAkB;;AAEvC,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA,8BAA8B,mBAAO,CAAC,KAAyC;AAC/E,QAAQ,OAAO,EAAE,mBAAO,CAAC,KAAuB;AAChD,aAAa,mBAAO,CAAC,KAAkB;AACvC,YAAY,mBAAO,CAAC,KAAO;AAC3B,iBAAiB,mBAAO,CAAC,KAAY;AACrC,oBAAoB,mBAAO,CAAC,KAAe;AAC3C,cAAc,mBAAO,CAAC,KAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,uBAAuB;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4BAA4B;AAC9C;AACA,gDAAgD,mBAAmB;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,QAAQ,WAAW,KAAK;AAClF;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;AC/DA;AACA,UAAU,mBAAO,CAAC,KAAU;AAC5B,UAAU,mBAAO,CAAC,KAAU;AAC5B,cAAc,mBAAO,CAAC,KAAc;AACpC,SAAS,mBAAO,CAAC,KAAS;AAC1B,gBAAgB,mBAAO,CAAC,KAAgB;AACxC,cAAc,mBAAO,CAAC,KAAc;AACpC,QAAQ,mBAAO,CAAC,KAAQ;AACxB,SAAS,mBAAO,CAAC,KAAS;;AAE1B,YAAY,mBAAO,CAAC,KAAuB;AAC3C,cAAc,mBAAO,CAAC,KAAyB;AAC/C,cAAc,mBAAO,CAAC,KAAyB;AAC/C,SAAS,mBAAO,CAAC,KAAoB;AACrC,aAAa,mBAAO,CAAC,KAAwB;AAC7C,cAAc,mBAAO,CAAC,KAAyB;AAC/C;;;;;;;;AChBA,aAAa,mBAAO,CAAC,KAAQ;;AAE7B,aAAa,mBAAO,CAAC,IAAQ;AAC7B,aAAa,mBAAO,CAAC,KAAQ;;AAE7B;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,MAAM;AAClmBAAmB,WAAW;AAC9B,6BAA6B,mBAAmB;AAChD;AACA;AACA,uBAAuB,WAAW;AAClC;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;;AAEhD;AACA;AACA,aAAa,mBAAO,CAAC,KAAa;AAClC,SAAS,mBAAO,CAAC,KAAS;AAC1B,SAAS,mBAAO,CAAC,KAAS;AAC1B,QAAQ,mBAAO,CAAC,KAAQ;AACxB,SAAS,mBAAO,CAAC,KAAS;AAC1B,SAAS,mBAAO,CAAC,KAAS;AAC1B,QA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CA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9BA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAc;;AAEtC,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD,iBAAiB,mBAAO,CAAC,KAAY;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpDA,aAAa,mBAAO,CAAC,KAAS;;AAE9B,qBAAqB,mBAAO,CAAC,KAAgB;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChDA,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxCA,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxCA,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxCA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA,OAAO,mBAAO,CAAC,KAAO;AACtB,SAAS,mBAAO,CAAC,KAAS;AAC1B,QAAQ,mBAAO,CAAC,KAAQ;AACxB,UAAU,mBAAO,CAAC,KAAU;AAC5B,UAAU,mBAAO,CAAC,KAAU;AAC5B,UAAU,mBAAO,CAAC,KAAU;AAC5B,gBAAgB,mBAAO,CAAC,KAAgB;AACxC,eAAe,mBAAO,CAAC,KAAe;AACtC,yBAAyB,mBAAO,CAAC,KAAyB;AAC1D,mBAAmB,mBAAO,CAAC,KAAmB;AAC9C,cAAc,mBAAO,CAAC,KAAc;AACpC,sBAAsB,mBAAO,CAAC,IAAsB;AACpD,iBAAiB,mBAAO,CAAC,KAAiB;AAC1C,iBAAiB,mBAAO,CAAC,KAAiB;AAC1C,iBAAiB,mBAAO,CAAC,KAAiB;AAC1C,YAAY,mBAAO,CAAC,KAAY;AAChC,cAAc,mBAAO,CAAC,KAAc;AACpC,wBAAwB,mBAAO,CAAC,KAAwB;AACxD,eAAe,mBAAO,CAAC,KAAe;AACtC,iBAAiB,mBAAO,CAAC,KAAiB;AAC1C,YAAY,mBAAO,CAAC,KAAY;AAChC,UAAU,mBAAO,CAAC,KAAU;AAC5B,WAAW,mBAAO,CAAC,KAAW;AAC9B,WAAW,mBAAO,CAAC,KAAW;AAC9B,WAAW,mBAAO,CAAC,KAAW;AAC9B,SAAS,mBAAO,CAAC,KAAS;AAC1B,YAAY,mBAAO,CAAC,KAAY;AAChC,YAAY,mBAAO,CAAC,KAAY;AAChC,aAAa,mBAAO,CAAC,IAAa;AAClC;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACrBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC/BA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClEA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAc;;AAEtC,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD,aAAa,mBAAO,CAAC,KAAQ;;AAE7B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjFA,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9CA,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9CA,QAAQ,WAAW,EAAE,mBAAO,CAAC,KAAuB;;AAEpD;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9CA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;;;;;;;ACTA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB,iBAAiB,iBAAiB;AACvD,qBAAqB,iBAAiB,iBAAiB;AACvD,qBAAqB,iBAAiB,kBAAkB;;AAExD,kBAAkB,cAAc,cAAc;AAC9C,kBAAkB,cAAc,cAAc;AAC9C,kBAAkB,cAAc,eAAe;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AClDA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,aAAa,mBAAO,CAAC,KAAS;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA,aAAa,mBAAO,CAAC,KAAS;;AAE9B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9CA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAc;;AAEtC,aAAa,mBAAO,CAAC,KAAS;;AAE9B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzCA;AACA;AACA;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,SAAS,mBAAO,CAAC,KAAe;AAChC;AACA,wBAAwB;AACxB;AACA;AACA,QAAQ,mBAAO,CAAC,KAAc;AAC9B;AACA,0BAA0B;AAC1B;AACA;AACA,UAAU,mBAAO,CAAC,IAAgB;AAClC;AACA,0BAA0B;AAC1B;AACA;AACA,UAAU,mBAAO,CAAC,KAAgB;AAClC,QAAQ,mBAAO,CAAC,KAAQ;AACxB,sBAAsB,mBAAO,CAAC,KAAsB;AACpD;AACA,8BAA8B;AAC9B;AACA;AACA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AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACtBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA,iCAAiC,qBAAqB,IAAI,qBAAqB;;AAE/E;;;;;;;;ACTA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,YAAY,mBAAO,CAAC,KAAO;;AAE3B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;;;;;;;ACVA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;;;;;;;;ACVA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA,OAAO,mBAAO,CAAC,KAAO;AACtB,OAAO,mBAAO,CAAC,KAAO;AACtB,SAAS,mBAAO,CAAC,KAAS;AAC1B,SAAS,mBAAO,CAAC,KAAS;AAC1B,QAAQ,mBAAO,CAAC,KAAQ;AACxB,UAAU,mBAAO,CAAC,KAAU;AAC5B,SAAS,mBAAO,CAAC,KAAS;AAC1B,YAAY,mBAAO,CAAC,IAAY;AAChC,UAAU,mBAAO,CAAC,KAAU;AAC5B,OAAO,mBAAO,CAAC,KAAO;AACtB,UAAU,mBAAO,CAAC,KAAU;AAC5B,cAAc,mBAAO,CAAC,KAAc;AACpC,cAAc,mBAAO,CAAC,IAAc;AACpC,YAAY,mBAAO,CAAC,KAAY;AAChC,UAAU,mBAAO,CAAC,KAAU;AAC5B,QAAQ,mBAAO,CAAC,KAAQ;AACxB,OAAO,mBAAO,CAAC,KAAO;AACtB,OAAO,mBAAO,CAAC,KAAO;AACtB,YAAY,mBAAO,CAAC,KAAY;AAChC,UAAU,mBAAO,CAAC,KAAU;AAC5B,aAAa,mBAAO,CAAC,KAAa;AAClC,cAAc,mBAAO,CAAC,KAAc;AACpC,WAAW,mBAAO,CAAC,KAAW;AAC9B,WAAW,mBAAO,CAAC,KAAW;AAC9B,WAAW,mBAAO,CAAC,KAAW;AAC9B,SAAS,mBAAO,CAAC,KAAS;AAC1B,QAAQ,mBAAO,CAAC,KAAQ;AACxB,mBAAmB,mBAAO,CAAC,KAAmB;AAC9C,iBAAiB,mBAAO,CAAC,KAAiB;AAC1C,YAAY,mBAAO,CAAC,KAAY;AAChC,YAAY,mBAAO,CAAC,GAAY;AAChC,aAAa,mBAAO,CAAC,KAAa;AAClC;;;;;;;;ACtCA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA,YAAY,mBAAO,CAAC,KAAO;AAC3B,eAAe,mBAAO,CAAC,KAAU;AACjC,cAAc,mBAAO,CAAC,KAAS;;AAE/B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACrBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AChCA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AChCA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC7BA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA,8BAA8B,kBAAkB,IAAI,kBAAkB,IAAI,kBAAkB;;AAE5F;;;;;;;;ACRA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA,eAAe,mBAAO,CAAC,IAAU;;AAEjC;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClBA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;;;;;;;ACVA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;;;;;;;;ACVA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,eAAe,mBAAO,CAAC,IAAU;;AAEjC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA,SAAS,mBAAO,CAAC,KAAS;AAC1B,Q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A;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACjJA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C,2BAA2B,mBAAO,CAAC,KAAsB;;AAEzD;AACA;AACA,WAAW,WAAW;AACtB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;AC3BA,gBAAgB,mBAAO,CAAC,KAAkB;;AAE1C,aAAa,mBAAO,CAAC,KAAe;;AAEpC,cAAc,mBAAO,CAAC,KAAqB;AAC3C,cAAc,mBAAO,CAAC,KAAqB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;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;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,gDAAgD;AACvE;AACA;AACA;AACA;AACA,uBAAuB,8CAA8C;AACrE,UAAU;AACV;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,gDAAgD;AAC1E;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,8CAA8C;AACxE;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;;;;;;;;AC/IA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAA0B;;AAElD,aAAa,mBAAO,CAAC,KAAqB;;AAE1C,cAAc,mBAAO,CAAC,KAA2B;;AAEjD,4BAA4B,mBAAO,CAAC,KAAuB;;AAE3D;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0EAA0E;AAC1E;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,OAAO;AACzC;AACA,uCAAuC,OAAO,OAAO;AACrD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB,OAAO;AAC3C;AACA,sCAAsC,OAAO,OAAO;AACpD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kBAAkB,OAAO;AAC7C;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,OAAO;AACzC;AACA;AACA,uCAAuC,OAAO,OAAO;AACrD;AACA,qBAAqB,OAAO,mBAAmB,kBAAkB,KAAK,qBAAqB;AAC3F;AACA,0BAA0B,OAAO,WAAW,sBAAsB;AAClE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpQA,aAAa,mBAAO,CAAC,KAAQ;AAC7B,wBAAwB,mBAAO,CAAC,KAAmB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjDA;AACA,QAAQ,mBAAO,CAAC,KAAQ;AACxB;;;;;;;;ACFA,aAAa,mBAAO,CAAC,KAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAA0B;;AAElD,cAAc,mBAAO,CAAC,KAAsB;AAC5C,aAAa,mBAAO,CAAC,KAAqB;;AAE1C,cAAc,mBAAO,CAAC,KAA2B;;AAEjD,gCAAgC,mBAAO,CAAC,KAA2B;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,kCAAkC,mCAAmC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxHA,gBAAgB,mBAAO,CAAC,KAAqB;AAC7C,gCAAgC,mBAAO,CAAC,KAAqC;;AAE7E,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;;AAE9C,mBAAmB,mBAAO,CAAC,KAAc;AACzC,mBAAmB,mBAAO,CAAC,KAAc;;AAEzC;AACA;AACA;AACA;AACA,WAAW,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CA,UAAU,kBAAkB,mBAAmB;;AAE/C;AACA,wCAAwC;AACxC,qCAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;AC/NA,aAAa,mBAAO,CAAC,KAAkB;AACvC,aAAa,mBAAO,CAAC,KAAkB;;AAEvC,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA,UAAU,mBAAO,CAAC,KAAU;AAC5B,UAAU,mBAAO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OAAO;AACpB;AACA;AACA;AACA,wCAAwC,aAAa,cAAc,aAAa;AAChF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;AC1FA,QAAQ,2DAA2D,EAAE,mBAAO,CAAC,KAAiB;AAC9F,QAAQ,wBAAwB,EAAE,mBAAO,CAAC,KAAY;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;;AAEA,yDAAyD;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;;;;;;;;AClIA,uBAAuB,mBAAO,CAAC,KAAkB;AACjD,QAAQ,yBAAyB,EAAE,mBAAO,CAAC,KAAc;AACzD,QAAQ,qFAAqF,EAAE,mBAAO,CAAC,KAAiB;AACxH,QAAQ,wBAAwB,EAAE,mBAAO,CAAC,KAAY;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,yEAAyE;AACzE;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC3PA,mBAAmB,mBAAO,CAAC,KAAkB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;;;;;;;;;ACxDnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;;;;;;;;ACrDA,QAAQ,+BAA+B,EAAE,mBAAO,CAAC,KAAc;AAC/D,QAAQ,OAAO,EAAE,mBAAO,CAAC,KAAY;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,IAAI;AACJ,4BAA4B,YAAY;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;;;;;;;;ACpMnB,cAAc,mBAAO,CAAC,KAA2B;AACjD,cAAc,mBAAO,CAAC,KAAsB;AAC5C,aAAa,mBAAO,CAAC,IAAqB;AAC1C,aAAa,mBAAO,CAAC,KAAqB;AAC1C,uBAAuB,mBAAO,CAAC,KAAyB;AACxD,oBAAoB,mBAAO,CAAC,KAAe;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;;;;;;;;ACfnB,aAAa,mBAAO,CAAC,KAAkB;;AAEvC,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;;AAE9C,cAAc,mBAAO,CAAC,KAAS;AAC/B,oBAAoB,mBAAO,CAAC,KAAgB;;AAE5C,qBAAqB,mBAAO,CAAC,KAAgB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sEAAsE,mBAAmB;;AAEnG;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjHA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAuB;AAC/C,cAAc,mBAAO,CAAC,KAAS;AAC/B,aAAa,mBAAO,CAAC,KAAkB;AACvC,0BAA0B,mBAAO,CAAC,KAAqB;AACvD,cAAc,mBAAO,CAAC,KAAwB;;AAE9C;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,oDAAoD,kBAAkB;;AAEhF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAC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AAc;;AAEd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACvFA,cAAc,mBAAO,CAAC,KAAsB;AAC5C,aAAa,mBAAO,CAAC,KAAqB;;AAE1C;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACxCA,eAAe,mBAAO,CAAC,KAAU;;AAEjC,aAAa,mBAAO,CAAC,KAAqB;;AAE1C;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;;;;;;;ACnBA,aAAa,mBAAO,CAAC,KAAqB;;AAE1C;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;;;;;;;AC1BA,aAAa,mBAAO,CAAC,KAAqB;;AAE1C,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;AClCA,aAAa,mBAAO,CAAC,KAAqB;;AAE1C,eAAe,mBAAO,CAAC,KAAU;;AAEjC;AACA;AACA;AACA,WAAW,OAAO;AAC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AAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA,QAAQ,mBAAO,CAAC,KAAQ;AACxB,aAAa,mBAAO,CAAC,KAAa;AAClC;;;;;;;;ACXA,YAAY,mBAAO,CAAC,KAAyB;AAC7C,aAAa,mBAAO,CAAC,KAA0B;AAC/C,cAAc,mBAAO,CAAC,KAA2B;AACjD,YAAY,mBAAO,CAAC,KAAyB;AAC7C,eAAe,mBAAO,CAAC,KAA4B;AACnD,kBAAkB,mBAAO,CAAC,KAA+B;AACzD,cAAc,mBAAO,CAAC,KAA2B;AACjD,iBAAiB,mBAAO,CAAC,KAA8B;;AAEvD;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,KAAY;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,gCAAgC;AAClE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7UA,iBAAiB,mBAAO,CAAC,IAA8B;AACvD,wBAAwB,mBAAO,CAAC,KAAqC;;AAErE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvDA,YAAY,mBAAO,CAAC,KAAyB;;AAE7C,0BAA0B,mBAAO,CAAC,IAAuB;AACzD,uBAAuB,mBAAO,CAAC,KAAoB;;AAEnD,mBAAmB,mBAAO,CAAC,KAAc;AACzC,eAAe,mBAAO,CAAC,KAAU;AACjC,QAAQ,qCAAqC,EAAE,mBAAO,CAAC,IAAQ;;AAE/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mCAAmC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,aAAa,MAAM;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA,gFAAgF;AAChF;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjJA,cAAc,mBAAO,CAAC,KAA2B;AACjD,kBAAkB,mBAAO,CAAC,KAA+B;AACzD,iBAAiB,mBAAO,CAAC,KAA8B;;AAEvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA,kBAAkB,mBAAO,CAAC,KAAa;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,cAAc,mBAAO,CAAC,KAA2B;AACjD,iBAAiB,mBAAO,CAAC,KAA8B;AACvD,sBAAsB,mBAAO,CAAC,KAAmC;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACzCA,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;;;;;;;ACjCA,gBAAgB,mBAAO,CAAC,KAAqB;;AAE7C,uBAAuB,mBAAO,CAAC,KAAmC;;AAElE,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;;AAE9C,qBAAqB,mBAAO,CAAC,KAAgB;AAC7C,sBAAsB,mBAAO,CAAC,KAAiB;AAC/C,yBAAyB,mBAAO,CAAC,KAAoB;AACrD,4BAA4B,mBAAO,CAAC,KAAuB;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8BAA8B,kBAAkB;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,WAAW;AACtB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,cAAc,mBAAO,CAAC,KAAc;AACpC,QAAQ,mBAAO,CAAC,KAAQ;AACxB;;;;;;;;ACVA,kBAAkB,mBAAO,CAAC,KAAuB;AACjD,aAAa,mBAAO,CAAC,KAAkB;AACvC,cAAc,mBAAO,CAAC,KAAwB;;AAE9C;;AAEA,8BAA8B,OAAO;;AAErC;AACA;AACA;AACA;AACA,wBAAwB,SAAS,GAAG,OAAO;AAC3C,4BAA4B,OAAO,GAAG,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS,GAAG,OAAO;AACxC;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;;AAEA;AACA;;AAEA,2BAA2B,UAAU,GAAG,cAAc;AACtD,kCAAkC,cAAc,GAAG,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,4CAA4C,0CAA0C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB,gBAAgB;AAChB,cAAc;AACd,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACrSA,0BAA0B,mBAAO,CAAC,KAAqC;AACvE,aAAa,mBAAO,CAAC,KAAkB;;AAEvC,cAAc,mBAAO,CAAC,KAAwB;;AAE9C;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,QAAQ,GAAG,QAAQ;AACpC;AACA;;AAEA;AACA,iBAAiB,QAAQ,GAAG,QAAQ;AACpC;AACA;;AAEA;AACA,iBAAiB,QAAQ,GAAG,QAAQ;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;AC/MA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAuB;;AAE/C,cAAc,mBAAO,CAAC,KAAmB;AACzC,aAAa,mBAAO,CAAC,IAAkB;AACvC,yBAAyB,mBAAO,CAAC,KAA8B;AAC/D,uCAAuC,mBAAO,CAAC,KAAkD;;AAEjG,QAAQ,6BAA6B,EAAE,mBAAO,CAAC,KAAa;;AAE5D,cAAc,mBAAO,CAAC,KAAwB;;AAE9C;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAA4C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,6BAA6B;AACnD;AACA,yBAAyB,+BAA+B;AACxD,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV,QAAQ;AACR,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;;;;;;;ACxVA,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;;AAE9C,0BAA0B,mBAAO,CAAC,KAAqC;;AAEvE,oCAAoC,mBAAO,CAAC,KAA+B;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACrDA,gBAAgB,mBAAO,CAAC,KAAqB;;AAE7C,aAAa,mBAAO,CAAC,IAAkB;;AAEvC,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;AAC9C,cAAc,mBAAO,CAAC,KAAwB;;AAE9C,uBAAuB,mBAAO,CAAC,KAAmC;;AAElE,qBAAqB,mBAAO,CAAC,KAAgB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACxDA,aAAa,mBAAO,CAAC,KAAkB;;AAEvC,cAAc,mBAAO,CAAC,KAAwB;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA,aAAa,mBAAO,CAAC,KAAkB;AACvC,cAAc,mBAAO,CAAC,KAA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QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA,yBAAyB,mCAAmC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mGAAmG,kBAAkB;;AAE/H;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6BAA6B,8CAA8C;;AAE3E;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/DA,QAAQ,OAAO,EAAE,mBAAO,CAAC,KAAoB;AAC7C,aAAa,mBAAO,CAAC,IAAe;;AAEpC,cAAc,mBAAO,CAAC,KAAqB;;AAE3C,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,KAAgB;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,sDAAsD;AACzE,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,2BAA2B,qDAAqD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe,kBAAkB;;AAEzC;AACA;AACA;AACA;AACA,0GAA0G;;AAE1G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClKA;AACA;AACA,KAAK,mCAAmC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA,cAAc,mBAAO,CAAC,KAAc;AACpC,cAAc,mBAAO,CAAC,IAAc;AACpC;;;;;;;;ACXA,qBAAqB,mBAAO,CAAC,KAAgB;;AAE7C;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA,iBAAiB,wBAAwB;AACzC;AACA,UAAU,eAAe;AACzB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,QAAQ;AAClB,UAAU,QAAQ;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;;;;;;;AC9DA,oBAAoB,mBAAO,CAAC,KAAwC;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;;;;;;;;ACzBA,mBAAmB,mBAAO,CAAC,KAAc;AACzC,qBAAqB,mBAAO,CAAC,KAAgB;;AAE7C;AACA;AACA,UAAU,OAAO,kBAAkB,YAAY,eAAe;AAC9D;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA,mCAAmC,kCAAkC;AACrE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,QAAQ;AACzC;AACA,wBAAwB,qDAAqD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC,QAAQ;AACR,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9FA;AACA,cAAc,mBAAO,CAAC,KAAqB;AAC3C,cAAc,mBAAO,CAAC,KAAqB;AAC3C,cAAc,mBAAO,CAAC,KAAqB;;AAE3C;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;;;;;;;ACRA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;;;;;;;ACTA;AACA;AACA;AACA;;AAEA;;;;;;;;ACLA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA,2BAA2B,mBAAO,CAAC,KAA2B;AAC9D,YAAY,mBAAO,CAAC,KAAY;AAChC,WAAW,mBAAO,CAAC,KAAW;AAC9B,gBAAgB,mBAAO,CAAC,KAAgB;AACxC,gBAAgB,mBAAO,CAAC,IAAgB;AACxC,oBAAoB,mBAAO,CAAC,KAAoB;AAChD,YAAY,mBAAO,CAAC,KAAY;AAChC;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;;;;;;;ACRA,QAAQ,MAAM,EAAE,mBAAO,CAAC,KAAoB;;AAE5C;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,4CAA4C;AAC/D,WAAW,QAAQ,yDAAyD;AAC5E,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACjBkK;;AAElK;AACA,6BAA6B,IAAI;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM,SAAS,KAAyC,EAAE,EAErD;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAyC,EAAE,EAIrD;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAyC,GAAG,CAAS;AAChF,mCAAmC,MAAyC,GAAG,CAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAyC,GAAG,CAA2C,CAAC;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAiE,EAAE,EAStE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6BAA6B,8DAAO;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAO;AACpB;AACA,cAAc,4DAAK;AACnB;AACA;AACA,UAAU,SAAS,mEAAY;AAC/B;AACA;AACA;AACA;AACA,aAAa,8DAAO;AACpB;AACA,cAAc,4DAAK;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAK;AACjB;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAyC,GAAG,CAAoD,CAAC;AACrH;AACA;AACA,UAAU,KAAyC,EAAE,EAE9C,CAAC;AACR;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAyC,EAAE,EAE9C,CAAC;AACN;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAA8D,EAAE,EAEnE;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,8DAAO;AAClD;AACA,+IAA+I,2DAAQ;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,0BAA0B,8DAAO;AACjC;AACA,2BAA2B,6DAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mEAAY;AAC1C;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8DAAO;AAClB;AACA;AACA;AACA;AACA,mBAAmB,8DAAO,YAAY,mEAAY,sCAAsC,6DAAM;AAC9F;AACA;AACA;AACA;AACA,QAAQ,SAAS,iEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6DAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,+DAAQ;AACf;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAyC,EAAE,EAK9C;AACL;AACA,GAAG;AACH;AACA,QAAQ,KAAyC,EAAE,EAK9C;AACL;AACA;AACA;AACA,gDAAgD,6DAAM;AACtD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6DAAM;AACtD,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY;AACtB;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uBAAuB;AACjC;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAyC,EAAE,EAErD;AACH;AACA;AACA;AACA;AACA,IAAI,SAAS,iEAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uBAAuB;AACjC;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAyC,EAAE,EAErD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAyC,GAAG,CAAiD;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,wBAAwB,cAAc;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAyC,EAAE,EAM9C;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM,6DAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM,gEAAgE,iCAAiC;AACzH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,gEAAS;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,+DAAQ;AACf,QAAQ,KAAyC,EAAE,EAE9C;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+DAAQ;AACtC,8BAA8B,+DAAQ;;AAEtC;AACA;AACA;AACA,QAAQ,KAAyC,EAAE,EAM9C,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAyC,EAAE,EAO9C,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAyC,GAAG,CAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAA6D,EAAE,EAElE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iEAAU;AAC/B;AACA;AACA,aAAa,MAAyC,GAAG,CAEpD,CAAC,EAAE,uDAAI;AACZ,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM,KAAmE,EAAE,EAGxE;AACH;AACA;;AAEA,6BAA6B,iEAAiB;AAC9C,cAAc,kDAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqZ;;;;;;;;;;;;;;;;;;;;;;;;AC9tCrZ;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA,kBAAkB,MAAyC,GAAG,CAAiB;AAC/E,kBAAkB,MAAyC,GAAG,CAAiB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,CAAC;AACD,2CAA2C;AAC3C;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6KAA6K,qBAAM,mBAAmB,qBAAM,KAAK;AACjN;AACA;AACA;AACA,yCAAyC,KAAK,eAAe,qBAAqB;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,6EAA6B;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,aAAa,KAAK,EAAE,iDAAiD,KAAK,SAAS;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc,GAAG,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,kEAAkB;AACpD,iCAAiC,iEAAiB;AAClD,kCAAkC,kEAAkB;;AAEpD;AACA,6CAA6C,4EAA4B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,CAAC;AACD,uCAAuC;AACvC;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA,yBAAyB;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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BAAmB,MAAM,gBAAe;AACvF,SAAS,+BAAY,WAAW,0BAAc;AAC9C;AACA;;AAEA,4DAAe,WAAW,EAAC;;;ACnC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAe,OAAO,EAAC;;;ACzBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAe,SAAS,EAAC;;;ACjBK;AACS;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,kCAAW;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAS;;AAE1C,yDAAe,QAAQ,EAAC;;;ACrCxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+CAAe,OAAO,EAAC;;;ACxBvB;AACA,IAAI,yBAAgB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAgB;AAC7D;;AAEA,yDAAe,QAAQ,EAAC;;;AClCkB;AACL;AACQ;;AAE7C;AACA,IAAI,yBAAO;AACX;AACA;AACA;AACA;AACA,IAAI,yBAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,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GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,GAAG;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;;AAGA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;;AAEA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,uBAAuB;AACnC,cAAc;AACd;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kCAAkC;AAClC;AACA;;AAEA,mCAAmC;AACnC;AACA;;AAEA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,kCAAkC,uBAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAE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mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB,IAAI;AAC5D;AACA;AACA;AACA,MAAM,gEAAK;AACX;AACA,mBAAmB,oEAAS;AAC5B,IAAI,SAAS,qEAAU;AACvB;AACA;AACA,IAAI,SAAS,8DAAO;AACpB;AACA,+BAA+B,iEAAU;AACzC;AACA,UAAU,gEAAK;AACf;AACA,eAAe,qEAAU;AACzB;AACA,eAAe,iEAAW;AAC1B;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS,iEAAW;AACxB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,aAAa,uDAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,iEAAU,oBAAoB,iEAAU;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,qBAAqB,qEAAc;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO,+DAAQ;AACf;AACA;AACA,MAAM,8DAAO;AACb,oBAAoB,kBAAkB;AACtC;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AAIE;;;;;;;;;;;;AC/J4B;;AAE9B;AACA,aAAa,uEAAW;;AAExB,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;ACLY;;AAElC;AACA;;AAEA;AACA,IAAI,yBAAc;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sBAAM,GAAG,8CAAkB;;AAEhD;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA,cAAc,yBAAc;AAC5B;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AA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CA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA4BE","sources":["webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/colorNameToRgb.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/colorize.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/cssColors.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/hexToRgb.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/hslToRgb.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/hsvToRgb.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/hueToColorComponent.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/rgbToHex.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/rgbToHsl.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/colors/rgbToHsv.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/curves/bezier/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/curves/bezier/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/curves/bezier/tangentAt.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/curves/bezier/valueAt.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/curves/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/applyTransforms.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/fromCompactBinary.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/isA.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/reverse.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/toCompactBinary.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/toOutlines.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/toPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/toSides.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom2/validate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/applyTransforms.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/fromCompactBinary.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/invert.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/isA.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/toCompactBinary.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/toPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/toPolygons.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/geom3/validate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/appendArc.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/appendBezier.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/appendPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/applyTransforms.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/close.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/concat.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/fromCompactBinary.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/isA.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/reverse.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/toCompactBinary.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/toPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/path2/validate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly2/arePointsInside.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly2/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly2/flip.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly2/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly2/measureArea.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/fromPointsAndPlane.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/invert.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/isA.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/isConvex.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/measureArea.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/measureBoundingBox.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/measureBoundingSphere.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/measureSignedVolume.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/plane.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/toPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/geometries/poly3/validate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/OrthoNormalBasis.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/constants.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/closestPoint.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/copy.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/direction.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/distanceToPoint.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/fromValues.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/intersectPointOfLines.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/origin.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/reverse.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line2/xAtY.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/closestPoint.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/copy.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/direction.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/distanceToPoint.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/fromPlanes.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/fromPointAndDirection.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/intersectPointOfLineAndPlane.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/origin.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/reverse.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/line3/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/add.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/copy.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromRotation.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromScaling.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromTaitBryanRotation.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromTranslation.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromValues.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromVectorRotation.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromXRotation.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromYRotation.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/fromZRotation.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/identity.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/invert.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/isIdentity.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/isMirroring.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/isOnlyTransformScale.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/mirrorByPlane.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/multiply.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/rotate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/rotateX.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/rotateY.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/rotateZ.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/scale.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/subtract.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/mat4/translate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/flip.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/fromNormalAndPoint.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/fromPointsRandom.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/projectionOfPoint.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/signedDistanceToPoint.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/plane/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/utils/aboutEqualNormals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/utils/area.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/utils/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/utils/interpolateBetween2DPointsForY.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/utils/intersect.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/utils/solve2Linear.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/utils/trigonometry.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/abs.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/add.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/angle.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/angleDegrees.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/angleRadians.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/copy.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/cross.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/distance.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/divide.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/dot.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/fromAngleDegrees.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/fromAngleRadians.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/fromScalar.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/fromValues.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/length.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/lerp.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/max.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/min.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/multiply.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/negate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/normal.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/normalize.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/rotate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/scale.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/snap.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/squaredDistance.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/squaredLength.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/subtract.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec2/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/abs.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/add.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/angle.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/copy.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/cross.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/distance.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/divide.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/dot.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/fromScalar.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/fromValues.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/fromVec2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/length.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/lerp.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/max.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/min.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/multiply.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/negate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/normalize.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/orthogonal.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/rotateX.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/rotateY.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/rotateZ.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/scale.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/snap.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/squaredDistance.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/squaredLength.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/subtract.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec3/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/copy.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/dot.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/fromScalar.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/fromValues.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/maths/vec4/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/calculateEpsilonFromBounds.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureAggregateArea.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureAggregateBoundingBox.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureAggregateEpsilon.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureAggregateVolume.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureArea.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureBoundingBox.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureBoundingSphere.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureCenter.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureCenterOfMass.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureDimensions.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureEpsilon.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/measurements/measureVolume.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/fromFakePolygons.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/intersect.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/intersectGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/intersectGeom3.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/intersectGeom3Sub.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/mayOverlap.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/scission.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/scissionGeom3.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/subtract.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/subtractGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/subtractGeom3.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/subtractGeom3Sub.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/to3DWalls.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/trees/Node.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/trees/PolygonTreeNode.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/trees/Tree.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/trees/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/trees/splitLineSegmentByPlane.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/trees/splitPolygonByPlane.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/union.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/unionGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/unionGeom3.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/booleans/unionGeom3Sub.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/expand.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/expandGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/expandGeom3.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/expandPath2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/expandShell.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/extrudePolygon.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/offset.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/offsetFromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/offsetGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/expansions/offsetPath2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/assignHoles.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/eliminateHoles.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/linkedList.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/linkedListSort.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/linkedPolygon.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/polygonHierarchy.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/earcut/triangle.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeFromSlices.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeHelical.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeLinear.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeLinearGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeLinearPath2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeRectangular.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeRectangularGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeRectangularPath2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeRotate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/extrudeWalls.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/project.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/calculatePlane.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/clone.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/create.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/equals.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/fromPoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/fromSides.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/isA.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/repair.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/reverse.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/toEdges.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/toPolygons.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/toString.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/extrusions/slice/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/hull.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/hullChain.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/hullGeom2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/hullGeom3.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/hullPath2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/hullPoints2.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/Face.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/HalfEdge.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/QuickHull.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/Vertex.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/VertexList.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/get-plane-normal.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/quickhull/point-line-distance.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/hulls/toUniquePoints.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/generalize.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/insertTjunctions.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/mergePolygons.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/reTesselateCoplanarPolygons.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/retessellate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/snap.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/snapPolygons.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/modifiers/triangulatePolygons.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/align.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/center.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/mirror.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/rotate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/scale.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/transform.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/operations/transforms/translate.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/arc.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/circle.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/commonChecks.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/cube.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/cuboid.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/cylinder.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/cylinderElliptic.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/ellipse.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/ellipsoid.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/geodesicSphere.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/line.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/polygon.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/polyhedron.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/rectangle.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/roundedCuboid.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/roundedCylinder.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/roundedRectangle.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/sphere.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/square.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/star.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/torus.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/primitives/triangle.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/text/fonts/single-line/hershey/simplex.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/text/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/text/vectorChar.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/text/vectorParams.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/text/vectorText.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/areAllShapesTheSameType.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/degToRad.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/flatten.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/fnNumberSort.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/index.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/insertSorted.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/padArrayToLength.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/radToDeg.js","webpack://@polygonjs/polygonjs/./node_modules/@jscad/modeling/src/utils/radiusToSegments.js","webpack://@polygonjs/polygonjs/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://@polygonjs/polygonjs/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://@polygonjs/polygonjs/./src/core/ArrayUtils.ts","webpack://@polygonjs/polygonjs/./src/core/Color.ts","webpack://@polygonjs/polygonjs/./src/core/CursorMoveMonitor.ts","webpack://@polygonjs/polygonjs/./src/core/DecomposedPath.ts","webpack://@polygonjs/polygonjs/./src/core/FeaturesController.ts","webpack://@polygonjs/polygonjs/./src/core/MapUtils.ts","webpack://@polygonjs/polygonjs/./src/core/MouseButton.ts","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_listCacheClear.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/eq.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_assocIndexOf.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_listCacheDelete.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_listCacheGet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_listCacheHas.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_listCacheSet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_ListCache.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_stackClear.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_stackDelete.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_stackGet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_stackHas.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isFunction.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_coreJsData.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_isMasked.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_toSource.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseIsNative.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getValue.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getNative.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_Map.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_nativeCreate.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_hashClear.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_hashDelete.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_hashGet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_hashHas.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_hashSet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_Hash.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_mapCacheClear.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_isKeyable.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getMapData.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_mapCacheDelete.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_mapCacheGet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_mapCacheHas.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_mapCacheSet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_MapCache.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_stackSet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_Stack.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_arrayEach.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_defineProperty.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseAssignValue.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_assignValue.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_copyObject.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseTimes.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseIsArguments.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isArguments.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isArray.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/stubFalse.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isBuffer.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_isIndex.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isLength.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseIsTypedArray.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseUnary.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_nodeUtil.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isTypedArray.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_arrayLikeKeys.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_isPrototype.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_overArg.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_nativeKeys.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseKeys.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isArrayLike.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/keys.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseAssign.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_nativeKeysIn.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseKeysIn.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/keysIn.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseAssignIn.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_cloneBuffer.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_copyArray.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_arrayFilter.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/stubArray.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getSymbols.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_copySymbols.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_arrayPush.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getPrototype.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getSymbolsIn.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_copySymbolsIn.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseGetAllKeys.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getAllKeys.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getAllKeysIn.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_DataView.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_Promise.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_Set.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_WeakMap.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getTag.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_initCloneArray.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_Uint8Array.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_cloneArrayBuffer.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_cloneDataView.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_cloneRegExp.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_cloneSymbol.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_cloneTypedArray.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_initCloneByTag.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseCreate.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_initCloneObject.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseIsMap.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isMap.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseIsSet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isSet.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseClone.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/cloneDeep.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/clone.js","webpack://@polygonjs/polygonjs/./src/core/ObjectUtils.ts","webpack://@polygonjs/polygonjs/./src/core/RaycastHelper.ts","webpack://@polygonjs/polygonjs/./src/core/SetUtils.ts","webpack://@polygonjs/polygonjs/./src/core/String.ts","webpack://@polygonjs/polygonjs/./src/core/Transform.ts","webpack://@polygonjs/polygonjs/./src/core/TransformSpace.ts","webpack://@polygonjs/polygonjs/./src/core/Type.ts","webpack://@polygonjs/polygonjs/./src/core/UserAgent.ts","webpack://@polygonjs/polygonjs/./src/core/Walker.ts","webpack://@polygonjs/polygonjs/./src/core/actor/ActorCompilationController.ts","webpack://@polygonjs/polygonjs/./src/core/animation/Constant.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/Common.ts","webpack://@polygonjs/polygonjs/./src/core/animation/AnimatedPropertiesRegister.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/StartTimeline.ts","webpack://@polygonjs/polygonjs/./src/core/animation/ParamProxy.ts","webpack://@polygonjs/polygonjs/./src/core/animation/NodeParamProxiesRegister.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/WithOp.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Vector4.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Color.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Vector3.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Vector2.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Number.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Vector.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Quaternion.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/type/Euler.ts","webpack://@polygonjs/polygonjs/./src/core/animation/TimelineBuilderProperty.ts","webpack://@polygonjs/polygonjs/./src/core/animation/TimelineBuilder.ts","webpack://@polygonjs/polygonjs/./src/core/animation/vars/AnimBuilderTypes.ts","webpack://@polygonjs/polygonjs/./src/core/audio/AudioBuilder.ts","webpack://@polygonjs/polygonjs/./src/core/event/CoreEventEmitter.ts","webpack://@polygonjs/polygonjs/./src/core/event/DragEventType.ts","webpack://@polygonjs/polygonjs/./src/core/event/KeyboardEventType.ts","webpack://@polygonjs/polygonjs/./src/core/event/MouseEventType.ts","webpack://@polygonjs/polygonjs/./src/core/event/PointerEventType.ts","webpack://@polygonjs/polygonjs/./src/core/event/TouchEventType.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/Attribute.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/Constant.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/CoreEntity.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/CoreObjectFactory.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/CorePath.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/EntityGroupCollection.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/Event.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/GeometryUtils.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/quad/QuadCoreType.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/Group.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/Instancer.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/Material.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/ObjectContent.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/bvh/ThreeMeshBVHHelper.ts","webpack://@polygonjs/polygonjs/./src/core/reactivity/ObjectAttributeReactivityUpdateRef.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/object/BaseCoreObject.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/object/BaseCoreObjectUtils.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/point/CorePoint.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/point/CorePointUtils.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/primitive/CorePrimitive.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/primitive/CorePrimitiveUtils.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/utils/Common.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/vertex/CoreVertex.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/entities/vertex/CoreVertexUtils.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/cad/CadCommon.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/cad/CadCoreType.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/csg/CsgCommon.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/csg/CsgCoreType.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/quad/QuadCommon.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/tet/TetCoreType.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/CoreThreejsPointUtils.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreejsPrimitiveLineSegment.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreejsPrimitivePoint.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreeModule.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/Geometry.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreejsCoreObject.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreejsPoint.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreejsPrimitive.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreejsPrimitiveTriangle.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/ThreejsVertex.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/builders/Merge.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/builders/Mesh.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/modules/three/builders/_Base.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/util/IndexBuilder.ts","webpack://@polygonjs/polygonjs/./src/core/graph/DirtyController.ts","webpack://@polygonjs/polygonjs/./src/core/graph/CoreGraphNode.ts","webpack://@polygonjs/polygonjs/./src/core/lights/Common.ts","webpack://@polygonjs/polygonjs/./src/core/math/Easing.ts","webpack://@polygonjs/polygonjs/./src/core/math/_Module.ts","webpack://@polygonjs/polygonjs/./src/core/reactivity/CoreReactivity.ts","webpack://@polygonjs/polygonjs/./src/core/reactivity/NodeReactivity.ts","webpack://@polygonjs/polygonjs/./src/core/reactivity/ObjectAttributeReactivity.ts","webpack://@polygonjs/polygonjs/./src/core/reactivity/ObjectAttributeReactivityCreateRef.ts","webpack://@polygonjs/polygonjs/./src/core/reactivity/ObjectHierarchyReactivity.ts","webpack://@polygonjs/polygonjs/./src/core/render/Common.ts","webpack://@polygonjs/polygonjs/./src/core/render/renderPixel/CoreGetDefautCamera.ts","webpack://@polygonjs/polygonjs/./src/core/render/renderPixel/depthRead/DepthRead.vert.glsl","webpack://@polygonjs/polygonjs/./src/core/render/renderPixel/depthRead/DepthRead.frag.glsl","webpack://@polygonjs/polygonjs/./src/core/render/renderPixel/DepthRead.ts","webpack://@polygonjs/polygonjs/./src/core/render/renderPixel/RenderPixelController.ts","webpack://@polygonjs/polygonjs/./src/core/thirdParty/gsap/gsapFactory.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/RenderersController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/PolyLibsController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/BlobsController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/AssetUrlsController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/PerformanceController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/ScenesRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/thirdParty/MarkerTracking.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/ThirdPartyController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/PolyOnSceneUpdatedHooksController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/PolySpecializedChildrenController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/plugins/Plugin.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/plugins/PluginsRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/cameras/PolyCamerasRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/modules/_BaseRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/modules/DynamicModulesRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/expressions/_BaseRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/expressions/ExpressionRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/assemblers/AssemblersRegistry.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/nodes/NodesRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/functions/_BaseRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/functions/FunctionsRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/Poly.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/MethodDependency.ts","webpack://@polygonjs/polygonjs/./node_modules/jsep/dist/jsep.js","webpack://@polygonjs/polygonjs/./src/engine/expressions/traversers/ParsedTree.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/Node.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/param/Multiple.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/param/String.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/param/Ramp.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/nodes/Poly.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/OptimizedNodes.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/Nodes.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/Dispatcher.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/Param.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/ImportReport.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/import/Scene.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/UIData.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/states/Base.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/states/TimeDependent.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/states/Error.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/StatesController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/hierarchy/ParentController.ts","webpack://@polygonjs/polygonjs/./src/core/NodeSelection.ts","webpack://@polygonjs/polygonjs/./src/engine/operations/container/utils/inputs/ClonedStatesController.ts","webpack://@polygonjs/polygonjs/./src/engine/operations/container/utils/InputsController.ts","webpack://@polygonjs/polygonjs/./src/engine/operations/container/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/operations/container/sop.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/NameController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/hierarchy/ChildrenController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/LifeCycleController.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/utils/ContainableMap.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Animation.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Audio.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Event.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Geometry.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Gl.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Js.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Manager.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Material.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Object.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Texture.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/PostProcess.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/Rop.ts","webpack://@polygonjs/polygonjs/./src/engine/containers/utils/ContainerMap.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/ContainerController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/cook/PerformanceController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/CookController.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Button.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Folder.ts","webpack://@polygonjs/polygonjs/./src/engine/params/types/ParamConstructorByType.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/params/ParamsController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/params/ParamsValueAccessor.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/utils/ClonedStatesController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/InputsController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/OutputsController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/ConnectionsController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/SavedConnectionPointsDataController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/connections/ConnectionMap.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/ConnectionPointsSpareParamsController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/ConnectionPointsController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/IOController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/params/ParamsAccessor.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/anim/Subnet.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/anim/SubnetOutput.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/anim/_Base.ts","webpack://@polygonjs/polygonjs/./src/core/Vector.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/event/utils/CursorHelper.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/gl/code/assemblers/materials/OnBeforeCompile.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/gl/code/utils/GLParamConfig.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/js/code/assemblers/_BaseEvaluator.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/js/code/assemblers/actor/ActorEvaluator.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/js/code/assemblers/actor/ActorEvaluatorGenerator.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/js/code/utils/NodeFinder.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/js/utils/Common.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/Audio.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/RootMainCamera.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/Root.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/AutoUpdate.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/Background.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/Env.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/Fog.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/LoadProgress.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/manager/utils/Scene/MaterialOverride.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/sop/utils/group/GroupCommon.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/flags/Base.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/flags/Bypass.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/flags/Display.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/flags/Optimize.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/FlagsController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/code/configs/BaseParamConfig.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/NodeConnection.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/connections/Event.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/connections/Gl.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/connections/Js.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/io/connections/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/params/ParamsConfig.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/sanitize.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/Node.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/Param.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/param/Numeric.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/param/NodePath.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/param/ParamPath.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/param/String.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/param/Ramp.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/nodes/Poly.ts","webpack://@polygonjs/polygonjs/./src/engine/io/json/export/Dispatcher.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/poly/PolyNodeController.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/utils/poly/PolyNodeParamsConfig.ts","webpack://@polygonjs/polygonjs/./src/engine/operations/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/operations/sop/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Boolean.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Color.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Float.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Integer.ts","webpack://@polygonjs/polygonjs/./src/engine/params/NodePath.ts","webpack://@polygonjs/polygonjs/./src/engine/params/ParamPath.ts","webpack://@polygonjs/polygonjs/./src/engine/params/ramp/RampValue.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Ramp.ts","webpack://@polygonjs/polygonjs/./src/engine/params/String.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Vector2.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Vector3.ts","webpack://@polygonjs/polygonjs/./src/engine/params/Vector4.ts","webpack://@polygonjs/polygonjs/./src/engine/params/utils/EmitController.ts","webpack://@polygonjs/polygonjs/./src/engine/params/utils/states/TimeDependent.ts","webpack://@polygonjs/polygonjs/./src/engine/params/utils/states/Error.ts","webpack://@polygonjs/polygonjs/./src/engine/params/utils/StatesController.ts","webpack://@polygonjs/polygonjs/./src/engine/params/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/params/_BasePath.ts","webpack://@polygonjs/polygonjs/./src/engine/params/_BaseString.ts","webpack://@polygonjs/polygonjs/./src/engine/params/_Multiple.ts","webpack://@polygonjs/polygonjs/./src/engine/params/_Numeric.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/LiteralConstructsController.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/traversers/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/Common.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/AttributeRequirementsController.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/traversers/FunctionGenerator.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/traversers/ExpressionStringGenerator.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/DependenciesController.ts","webpack://@polygonjs/polygonjs/./src/engine/expressions/ExpressionManager.ts","webpack://@polygonjs/polygonjs/./src/engine/params/utils/ExpressionController.ts","webpack://@polygonjs/polygonjs/./src/engine/params/utils/OptionsController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/Assert.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/InputCloneMode.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/NodeContext.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/NodeEvent.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/ParamEvent.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/ParamType.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/PolyOnObjectsAddRemoveHooksController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/assemblers/_BaseRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/modules/Common.ts","webpack://@polygonjs/polygonjs/./src/engine/nodes/anim/utils/poly/createPolyAnimNode.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/modules/entryPoints/POLY_ANIM.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/nodes/types/Event.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/registers/nodes/types/Js.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/thirdParty/Mapbox.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/utils/PolyEventName.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/ManualTriggersController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/ActorsKeyboardEventsController.ts","webpack://@polygonjs/polygonjs/./src/core/geometry/util/HierarchyTraverse.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsHoverController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsPointerdownController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsPointerupController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsMouseClickController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsContextmenuController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/_BaseUserInputController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/PointerdownController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/PointerupController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/ActorsManager.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/SceneCamerasController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/Cooker.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/CookController.ts","webpack://@polygonjs/polygonjs/./src/core/graph/CoreGraph.ts","webpack://@polygonjs/polygonjs/./src/core/performance/PerformanceNode.ts","webpack://@polygonjs/polygonjs/./src/core/performance/CorePerformance.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/DispatchController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/SceneExpressionsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/LifeCycleController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/LoadingController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/missingReferences/MissingReference.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/missingReferences/MissingReferencesController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/GraphNodesController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/NodesController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/_BaseEventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/DragEventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/KeyboardEventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/MouseEventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/PointerEventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/WindowEventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/TouchEventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/ConnectionTriggerDispatcher.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/EventsDispatcher.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/ScenePerformanceMonitor.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/ReferencesController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/UniformsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/ViewersRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/WebGLController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/WindowController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/AssetsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/raymarching/_Base.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/raymarching/SpotLight.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/raymarching/DirectionalLight.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/raymarching/PointLight.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/SceneTraverser.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/SceneRenderersRegister.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/WebXREventsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/PolyScene.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/ObjectsController.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/SceneEvent.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/TimeController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/Common.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsClickController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsLongPressController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsSwipeController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/actors/rayObjectIntersection/_BaseRayObjectIntersectionsController.ts","webpack://@polygonjs/polygonjs/./src/engine/scene/utils/events/SceneEventsController.ts","webpack://@polygonjs/polygonjs/./node_modules/@vue-reactivity/watch/dist/index.mjs","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_Symbol.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_getRawTag.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_objectToString.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_baseGetTag.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_freeGlobal.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/_root.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isObject.js","webpack://@polygonjs/polygonjs/./node_modules/lodash-es/isObjectLike.js","webpack://@polygonjs/polygonjs/./node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","webpack://@polygonjs/polygonjs/./node_modules/three/src/math/MathUtils.js"],"sourcesContent":["const cssColors = require('./cssColors')\n\n/**\n * Converts a CSS color name to RGB color.\n *\n * @param {String} s - the CSS color name\n * @return {Array} the RGB color, or undefined if not found\n * @alias module:modeling/colors.colorNameToRgb\n * @example\n * let mysphere = colorize(colorNameToRgb('lightblue'), sphere())\n */\nconst colorNameToRgb = (s) => cssColors[s.toLowerCase()]\n\nmodule.exports = colorNameToRgb\n","const flatten = require('../utils/flatten')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\nconst colorGeom2 = (color, object) => {\n  const newgeom2 = geom2.clone(object)\n  newgeom2.color = color\n  return newgeom2\n}\n\nconst colorGeom3 = (color, object) => {\n  const newgeom3 = geom3.clone(object)\n  newgeom3.color = color\n  return newgeom3\n}\n\nconst colorPath2 = (color, object) => {\n  const newpath2 = path2.clone(object)\n  newpath2.color = color\n  return newpath2\n}\n\nconst colorPoly3 = (color, object) => {\n  const newpoly = poly3.clone(object)\n  newpoly.color = color\n  return newpoly\n}\n\n/**\n * Assign the given color to the given objects.\n * @param {Array} color - RGBA color values, where each value is between 0 and 1.0\n * @param {Object|Array} objects - the objects of which to apply the given color\n * @return {Object|Array} new object, or list of new objects with an additional attribute 'color'\n * @alias module:modeling/colors.colorize\n *\n * @example\n * let redSphere = colorize([1,0,0], sphere()) // red\n * let greenCircle = colorize([0,1,0,0.8], circle()) // green transparent\n * let blueArc = colorize([0,0,1], arc()) // blue\n * let wildcylinder = colorize(colorNameToRgb('fuchsia'), cylinder()) // CSS color\n */\nconst colorize = (color, ...objects) => {\n  if (!Array.isArray(color)) throw new Error('color must be an array')\n  if (color.length < 3) throw new Error('color must contain R, G and B values')\n  if (color.length === 3) color = [color[0], color[1], color[2], 1.0] // add alpha\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (geom2.isA(object)) return colorGeom2(color, object)\n    if (geom3.isA(object)) return colorGeom3(color, object)\n    if (path2.isA(object)) return colorPath2(color, object)\n    if (poly3.isA(object)) return colorPoly3(color, object)\n\n    object.color = color\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = colorize\n","/**\n * @alias module:modeling/colors.cssColors\n * @see CSS color table from http://www.w3.org/TR/css3-color/\n * @enum {Array}\n * @example\n * let newshape = colorize(cssColors.red, oldshape)\n */\nconst cssColors = {\n  // basic color keywords\n  black: [0 / 255, 0 / 255, 0 / 255],\n  silver: [192 / 255, 192 / 255, 192 / 255],\n  gray: [128 / 255, 128 / 255, 128 / 255],\n  white: [255 / 255, 255 / 255, 255 / 255],\n  maroon: [128 / 255, 0 / 255, 0 / 255],\n  red: [255 / 255, 0 / 255, 0 / 255],\n  purple: [128 / 255, 0 / 255, 128 / 255],\n  fuchsia: [255 / 255, 0 / 255, 255 / 255],\n  green: [0 / 255, 128 / 255, 0 / 255],\n  lime: [0 / 255, 255 / 255, 0 / 255],\n  olive: [128 / 255, 128 / 255, 0 / 255],\n  yellow: [255 / 255, 255 / 255, 0 / 255],\n  navy: [0 / 255, 0 / 255, 128 / 255],\n  blue: [0 / 255, 0 / 255, 255 / 255],\n  teal: [0 / 255, 128 / 255, 128 / 255],\n  aqua: [0 / 255, 255 / 255, 255 / 255],\n  // extended color keywords\n  aliceblue: [240 / 255, 248 / 255, 255 / 255],\n  antiquewhite: [250 / 255, 235 / 255, 215 / 255],\n  // 'aqua': [ 0 / 255, 255 / 255, 255 / 255 ],\n  aquamarine: [127 / 255, 255 / 255, 212 / 255],\n  azure: [240 / 255, 255 / 255, 255 / 255],\n  beige: [245 / 255, 245 / 255, 220 / 255],\n  bisque: [255 / 255, 228 / 255, 196 / 255],\n  // 'black': [ 0 / 255, 0 / 255, 0 / 255 ],\n  blanchedalmond: [255 / 255, 235 / 255, 205 / 255],\n  // 'blue': [ 0 / 255, 0 / 255, 255 / 255 ],\n  blueviolet: [138 / 255, 43 / 255, 226 / 255],\n  brown: [165 / 255, 42 / 255, 42 / 255],\n  burlywood: [222 / 255, 184 / 255, 135 / 255],\n  cadetblue: [95 / 255, 158 / 255, 160 / 255],\n  chartreuse: [127 / 255, 255 / 255, 0 / 255],\n  chocolate: [210 / 255, 105 / 255, 30 / 255],\n  coral: [255 / 255, 127 / 255, 80 / 255],\n  cornflowerblue: [100 / 255, 149 / 255, 237 / 255],\n  cornsilk: [255 / 255, 248 / 255, 220 / 255],\n  crimson: [220 / 255, 20 / 255, 60 / 255],\n  cyan: [0 / 255, 255 / 255, 255 / 255],\n  darkblue: [0 / 255, 0 / 255, 139 / 255],\n  darkcyan: [0 / 255, 139 / 255, 139 / 255],\n  darkgoldenrod: [184 / 255, 134 / 255, 11 / 255],\n  darkgray: [169 / 255, 169 / 255, 169 / 255],\n  darkgreen: [0 / 255, 100 / 255, 0 / 255],\n  darkgrey: [169 / 255, 169 / 255, 169 / 255],\n  darkkhaki: [189 / 255, 183 / 255, 107 / 255],\n  darkmagenta: [139 / 255, 0 / 255, 139 / 255],\n  darkolivegreen: [85 / 255, 107 / 255, 47 / 255],\n  darkorange: [255 / 255, 140 / 255, 0 / 255],\n  darkorchid: [153 / 255, 50 / 255, 204 / 255],\n  darkred: [139 / 255, 0 / 255, 0 / 255],\n  darksalmon: [233 / 255, 150 / 255, 122 / 255],\n  darkseagreen: [143 / 255, 188 / 255, 143 / 255],\n  darkslateblue: [72 / 255, 61 / 255, 139 / 255],\n  darkslategray: [47 / 255, 79 / 255, 79 / 255],\n  darkslategrey: [47 / 255, 79 / 255, 79 / 255],\n  darkturquoise: [0 / 255, 206 / 255, 209 / 255],\n  darkviolet: [148 / 255, 0 / 255, 211 / 255],\n  deeppink: [255 / 255, 20 / 255, 147 / 255],\n  deepskyblue: [0 / 255, 191 / 255, 255 / 255],\n  dimgray: [105 / 255, 105 / 255, 105 / 255],\n  dimgrey: [105 / 255, 105 / 255, 105 / 255],\n  dodgerblue: [30 / 255, 144 / 255, 255 / 255],\n  firebrick: [178 / 255, 34 / 255, 34 / 255],\n  floralwhite: [255 / 255, 250 / 255, 240 / 255],\n  forestgreen: [34 / 255, 139 / 255, 34 / 255],\n  // 'fuchsia': [ 255 / 255, 0 / 255, 255 / 255 ],\n  gainsboro: [220 / 255, 220 / 255, 220 / 255],\n  ghostwhite: [248 / 255, 248 / 255, 255 / 255],\n  gold: [255 / 255, 215 / 255, 0 / 255],\n  goldenrod: [218 / 255, 165 / 255, 32 / 255],\n  // 'gray': [ 128 / 255, 128 / 255, 128 / 255 ],\n  // 'green': [ 0 / 255, 128 / 255, 0 / 255 ],\n  greenyellow: [173 / 255, 255 / 255, 47 / 255],\n  grey: [128 / 255, 128 / 255, 128 / 255],\n  honeydew: [240 / 255, 255 / 255, 240 / 255],\n  hotpink: [255 / 255, 105 / 255, 180 / 255],\n  indianred: [205 / 255, 92 / 255, 92 / 255],\n  indigo: [75 / 255, 0 / 255, 130 / 255],\n  ivory: [255 / 255, 255 / 255, 240 / 255],\n  khaki: [240 / 255, 230 / 255, 140 / 255],\n  lavender: [230 / 255, 230 / 255, 250 / 255],\n  lavenderblush: [255 / 255, 240 / 255, 245 / 255],\n  lawngreen: [124 / 255, 252 / 255, 0 / 255],\n  lemonchiffon: [255 / 255, 250 / 255, 205 / 255],\n  lightblue: [173 / 255, 216 / 255, 230 / 255],\n  lightcoral: [240 / 255, 128 / 255, 128 / 255],\n  lightcyan: [224 / 255, 255 / 255, 255 / 255],\n  lightgoldenrodyellow: [250 / 255, 250 / 255, 210 / 255],\n  lightgray: [211 / 255, 211 / 255, 211 / 255],\n  lightgreen: [144 / 255, 238 / 255, 144 / 255],\n  lightgrey: [211 / 255, 211 / 255, 211 / 255],\n  lightpink: [255 / 255, 182 / 255, 193 / 255],\n  lightsalmon: [255 / 255, 160 / 255, 122 / 255],\n  lightseagreen: [32 / 255, 178 / 255, 170 / 255],\n  lightskyblue: [135 / 255, 206 / 255, 250 / 255],\n  lightslategray: [119 / 255, 136 / 255, 153 / 255],\n  lightslategrey: [119 / 255, 136 / 255, 153 / 255],\n  lightsteelblue: [176 / 255, 196 / 255, 222 / 255],\n  lightyellow: [255 / 255, 255 / 255, 224 / 255],\n  // 'lime': [ 0 / 255, 255 / 255, 0 / 255 ],\n  limegreen: [50 / 255, 205 / 255, 50 / 255],\n  linen: [250 / 255, 240 / 255, 230 / 255],\n  magenta: [255 / 255, 0 / 255, 255 / 255],\n  // 'maroon': [ 128 / 255, 0 / 255, 0 / 255 ],\n  mediumaquamarine: [102 / 255, 205 / 255, 170 / 255],\n  mediumblue: [0 / 255, 0 / 255, 205 / 255],\n  mediumorchid: [186 / 255, 85 / 255, 211 / 255],\n  mediumpurple: [147 / 255, 112 / 255, 219 / 255],\n  mediumseagreen: [60 / 255, 179 / 255, 113 / 255],\n  mediumslateblue: [123 / 255, 104 / 255, 238 / 255],\n  mediumspringgreen: [0 / 255, 250 / 255, 154 / 255],\n  mediumturquoise: [72 / 255, 209 / 255, 204 / 255],\n  mediumvioletred: [199 / 255, 21 / 255, 133 / 255],\n  midnightblue: [25 / 255, 25 / 255, 112 / 255],\n  mintcream: [245 / 255, 255 / 255, 250 / 255],\n  mistyrose: [255 / 255, 228 / 255, 225 / 255],\n  moccasin: [255 / 255, 228 / 255, 181 / 255],\n  navajowhite: [255 / 255, 222 / 255, 173 / 255],\n  // 'navy': [ 0 / 255, 0 / 255, 128 / 255 ],\n  oldlace: [253 / 255, 245 / 255, 230 / 255],\n  // 'olive': [ 128 / 255, 128 / 255, 0 / 255 ],\n  olivedrab: [107 / 255, 142 / 255, 35 / 255],\n  orange: [255 / 255, 165 / 255, 0 / 255],\n  orangered: [255 / 255, 69 / 255, 0 / 255],\n  orchid: [218 / 255, 112 / 255, 214 / 255],\n  palegoldenrod: [238 / 255, 232 / 255, 170 / 255],\n  palegreen: [152 / 255, 251 / 255, 152 / 255],\n  paleturquoise: [175 / 255, 238 / 255, 238 / 255],\n  palevioletred: [219 / 255, 112 / 255, 147 / 255],\n  papayawhip: [255 / 255, 239 / 255, 213 / 255],\n  peachpuff: [255 / 255, 218 / 255, 185 / 255],\n  peru: [205 / 255, 133 / 255, 63 / 255],\n  pink: [255 / 255, 192 / 255, 203 / 255],\n  plum: [221 / 255, 160 / 255, 221 / 255],\n  powderblue: [176 / 255, 224 / 255, 230 / 255],\n  // 'purple': [ 128 / 255, 0 / 255, 128 / 255 ],\n  // 'red': [ 255 / 255, 0 / 255, 0 / 255 ],\n  rosybrown: [188 / 255, 143 / 255, 143 / 255],\n  royalblue: [65 / 255, 105 / 255, 225 / 255],\n  saddlebrown: [139 / 255, 69 / 255, 19 / 255],\n  salmon: [250 / 255, 128 / 255, 114 / 255],\n  sandybrown: [244 / 255, 164 / 255, 96 / 255],\n  seagreen: [46 / 255, 139 / 255, 87 / 255],\n  seashell: [255 / 255, 245 / 255, 238 / 255],\n  sienna: [160 / 255, 82 / 255, 45 / 255],\n  // 'silver': [ 192 / 255, 192 / 255, 192 / 255 ],\n  skyblue: [135 / 255, 206 / 255, 235 / 255],\n  slateblue: [106 / 255, 90 / 255, 205 / 255],\n  slategray: [112 / 255, 128 / 255, 144 / 255],\n  slategrey: [112 / 255, 128 / 255, 144 / 255],\n  snow: [255 / 255, 250 / 255, 250 / 255],\n  springgreen: [0 / 255, 255 / 255, 127 / 255],\n  steelblue: [70 / 255, 130 / 255, 180 / 255],\n  tan: [210 / 255, 180 / 255, 140 / 255],\n  // 'teal': [ 0 / 255, 128 / 255, 128 / 255 ],\n  thistle: [216 / 255, 191 / 255, 216 / 255],\n  tomato: [255 / 255, 99 / 255, 71 / 255],\n  turquoise: [64 / 255, 224 / 255, 208 / 255],\n  violet: [238 / 255, 130 / 255, 238 / 255],\n  wheat: [245 / 255, 222 / 255, 179 / 255],\n  // 'white': [ 255 / 255, 255 / 255, 255 / 255 ],\n  whitesmoke: [245 / 255, 245 / 255, 245 / 255],\n  // 'yellow': [ 255 / 255, 255 / 255, 0 / 255 ],\n  yellowgreen: [154 / 255, 205 / 255, 50 / 255]\n}\n\nmodule.exports = cssColors\n","/**\n * Converts CSS color notations (string of hex values) to RGB values.\n *\n * @see https://www.w3.org/TR/css-color-3/\n * @param {String} notation - color notation\n * @return {Array} RGB color values\n * @alias module:modeling/colors.hexToRgb\n *\n * @example\n * let mysphere = colorize(hexToRgb('#000080'), sphere()) // navy blue\n */\nconst hexToRgb = (notation) => {\n  notation = notation.replace('#', '')\n  if (notation.length < 6) throw new Error('the given notation must contain 3 or more hex values')\n\n  const r = parseInt(notation.substring(0, 2), 16) / 255\n  const g = parseInt(notation.substring(2, 4), 16) / 255\n  const b = parseInt(notation.substring(4, 6), 16) / 255\n  if (notation.length >= 8) {\n    const a = parseInt(notation.substring(6, 8), 16) / 255\n    return [r, g, b, a]\n  }\n  return [r, g, b]\n}\n\nmodule.exports = hexToRgb\n","const flatten = require('../utils/flatten')\n\nconst hueToColorComponent = require('./hueToColorComponent')\n\n/**\n * Converts HSL color values to RGB color values.\n *\n * @see http://en.wikipedia.org/wiki/HSL_color_space\n * @param {...Number|Array} values - HSL or HSLA color values\n * @return {Array} RGB or RGBA color values\n * @alias module:modeling/colors.hslToRgb\n *\n * @example\n * let mysphere = colorize(hslToRgb([0.9166666666666666, 1, 0.5]), sphere())\n */\nconst hslToRgb = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain H, S and L values')\n\n  const h = values[0]\n  const s = values[1]\n  const l = values[2]\n\n  let r = l // default is achromatic\n  let g = l\n  let b = l\n\n  if (s !== 0) {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    const p = 2 * l - q\n    r = hueToColorComponent(p, q, h + 1 / 3)\n    g = hueToColorComponent(p, q, h)\n    b = hueToColorComponent(p, q, h - 1 / 3)\n  }\n\n  if (values.length > 3) {\n    // add alpha value if provided\n    const a = values[3]\n    return [r, g, b, a]\n  }\n  return [r, g, b]\n}\n\nmodule.exports = hslToRgb\n","const flatten = require('../utils/flatten')\n\n/**\n * Converts HSV color values to RGB color values.\n *\n * @see http://en.wikipedia.org/wiki/HSV_color_space.\n * @param {...Number|Array} values - HSV or HSVA color values\n * @return {Array} RGB or RGBA color values\n * @alias module:modeling/colors.hsvToRgb\n *\n * @example\n * let mysphere = colorize(hsvToRgb([0.9166666666666666, 1, 1]), sphere())\n */\nconst hsvToRgb = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain H, S and V values')\n\n  const h = values[0]\n  const s = values[1]\n  const v = values[2]\n\n  let r = 0\n  let g = 0\n  let b = 0\n\n  const i = Math.floor(h * 6)\n  const f = h * 6 - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n\n  switch (i % 6) {\n    case 0:\n      r = v\n      g = t\n      b = p\n      break\n    case 1:\n      r = q\n      g = v\n      b = p\n      break\n    case 2:\n      r = p\n      g = v\n      b = t\n      break\n    case 3:\n      r = p\n      g = q\n      b = v\n      break\n    case 4:\n      r = t\n      g = p\n      b = v\n      break\n    case 5:\n      r = v\n      g = p\n      b = q\n      break\n  }\n\n  if (values.length > 3) {\n    // add alpha value if provided\n    const a = values[3]\n    return [r, g, b, a]\n  }\n  return [r, g, b]\n}\n\nmodule.exports = hsvToRgb\n","/**\n * Convert hue values to a color component (ie one of r, g, b)\n * @param  {Number} p\n * @param  {Number} q\n * @param  {Number} t\n * @return {Number} color component\n * @alias module:modeling/colors.hueToColorComponent\n */\nconst hueToColorComponent = (p, q, t) => {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\nmodule.exports = hueToColorComponent\n","/**\n * All shapes (primitives or the results of operations) can be assigned a color (RGBA).\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/colors\n * @example\n * const { colorize, hexToRgb } = require('@jscad/modeling').colors\n */\nmodule.exports = {\n  colorize: require('./colorize'),\n  colorNameToRgb: require('./colorNameToRgb'),\n  cssColors: require('./cssColors'),\n  hexToRgb: require('./hexToRgb'),\n  hslToRgb: require('./hslToRgb'),\n  hsvToRgb: require('./hsvToRgb'),\n  hueToColorComponent: require('./hueToColorComponent'),\n  rgbToHex: require('./rgbToHex'),\n  rgbToHsl: require('./rgbToHsl'),\n  rgbToHsv: require('./rgbToHsv')\n}\n","const flatten = require('../utils/flatten')\n\n/**\n * Convert the given RGB color values to CSS color notation (string)\n * @see https://www.w3.org/TR/css-color-3/\n * @param {...Number|Array} values - RGB or RGBA color values\n * @return {String} CSS color notation\n * @alias module:modeling/colors.rgbToHex\n */\nconst rgbToHex = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain R, G and B values')\n\n  const r = values[0] * 255\n  const g = values[1] * 255\n  const b = values[2] * 255\n\n  let s = `#${Number(0x1000000 + r * 0x10000 + g * 0x100 + b).toString(16).substring(1, 7)}`\n\n  if (values.length > 3) {\n    // convert alpha to opacity\n    s = s + Number(values[3] * 255).toString(16)\n  }\n  return s\n}\n\nmodule.exports = rgbToHex\n","const flatten = require('../utils/flatten')\n\n/**\n * Converts an RGB color value to HSL.\n *\n * @see http://en.wikipedia.org/wiki/HSL_color_space.\n * @see http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n * @param {...Number|Array} values - RGB or RGBA color values\n * @return {Array} HSL or HSLA color values\n * @alias module:modeling/colors.rgbToHsl\n */\nconst rgbToHsl = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain R, G and B values')\n\n  const r = values[0]\n  const g = values[1]\n  const b = values[2]\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h\n  let s\n  const l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0 // achromatic\n  } else {\n    const d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  if (values.length > 3) {\n    // add alpha value if provided\n    const a = values[3]\n    return [h, s, l, a]\n  }\n  return [h, s, l]\n}\n\nmodule.exports = rgbToHsl\n","const flatten = require('../utils/flatten')\n\n/**\n * Converts an RGB color value to HSV.\n *\n * @see http://en.wikipedia.org/wiki/HSV_color_space.\n * @param {...Number|Array} values - RGB or RGBA color values\n * @return {Array} HSV or HSVA color values\n * @alias module:modeling/colors.rgbToHsv\n */\nconst rgbToHsv = (...values) => {\n  values = flatten(values)\n  if (values.length < 3) throw new Error('values must contain R, G and B values')\n\n  const r = values[0]\n  const g = values[1]\n  const b = values[2]\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h\n  const v = max\n\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0 // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  if (values.length > 3) {\n    // add alpha if provided\n    const a = values[3]\n    return [h, s, v, a]\n  }\n  return [h, s, v]\n}\n\nmodule.exports = rgbToHsv\n","/**\n * Represents a bezier easing function.\n * @typedef {Object} bezier\n * @property {Array} points - The control points for the bezier curve. The first and last point will also be the start and end of the curve\n * @property {string} pointType - A reference to the type and dimensionality of the points that the curve was created from\n * @property {number} dimensions - The dimensionality of the bezier\n * @property {Array} permutations - A pre-calculation of the bezier algorithm's co-efficients\n * @property {Array} tangentPermutations - A pre-calculation of the bezier algorithm's tangent co-efficients\n *\n */\n\n/**\n * Creates an object representing a bezier easing curve.\n * Curves can have both an arbitrary number of control points, and an arbitrary number of dimensions.\n *\n * @example\n * const b = bezier.create([0,10]) // a linear progression from 0 to 10\n * const b = bezier.create([0, 0, 10, 10]) // a symmetrical cubic easing curve that starts slowly and ends slowly from 0 to 10\n * const b = bezier.create([0,0,0], [0,5,10], [10,0,-5], [10,10,10]]) // a cubic 3 dimensional easing curve that can generate position arrays for modelling\n * // Usage\n * let position = bezier.valueAt(t,b) // where 0 < t < 1\n * let tangent = bezier.tangentAt(t,b) // where 0 < t < 1\n *\n * @param {Array} points An array with at least 2 elements of either all numbers, or all arrays of numbers that are the same size.\n * @returns {bezier} a new bezier data object\n * @alias module:modeling/curves/bezier.create\n */\nconst create = (points) => {\n  if (!Array.isArray(points)) throw new Error('Bezier points must be a valid array/')\n  if (points.length < 2) throw new Error('Bezier points must contain at least 2 values.')\n  const pointType = getPointType(points)\n\n  return {\n    points: points,\n    pointType: pointType,\n    dimensions: pointType === 'float_single' ? 0 : points[0].length,\n    permutations: getPermutations(points.length - 1),\n    tangentPermutations: getPermutations(points.length - 2)\n  }\n}\n\nconst getPointType = function (points) {\n  let firstPointType = null\n  points.forEach((point) => {\n    let pType = ''\n    if (Number.isFinite(point)) {\n      pType = 'float_single'\n    } else if (Array.isArray(point)) {\n      point.forEach((val) => {\n        if (!Number.isFinite(val)) throw new Error('Bezier point values must all be numbers.')\n      })\n      pType = 'float_' + point.length\n    } else throw new Error('Bezier points must all be numbers or arrays of number.')\n    if (firstPointType == null) {\n      firstPointType = pType\n    } else {\n      if (firstPointType !== pType) {\n        throw new Error('Bezier points must be either all numbers or all arrays of numbers of the same size.')\n      }\n    }\n  })\n  return firstPointType\n}\n\nconst getPermutations = function (c) {\n  const permutations = []\n  for (let i = 0; i <= c; i++) {\n    permutations.push(factorial(c) / (factorial(i) * factorial(c - i)))\n  }\n  return permutations\n}\n\nconst factorial = function (b) {\n  let out = 1\n  for (let i = 2; i <= b; i++) {\n    out *= i\n  }\n  return out\n}\n\nmodule.exports = create\n","/**\n * Represents a bezier easing function.\n * @see {@link bezier} for data structure information.\n * @module modeling/curves/bezier\n */\nmodule.exports = {\n  create: require('./create'),\n  valueAt: require('./valueAt'),\n  tangentAt: require('./tangentAt')\n}\n","/**\n * Calculates the tangent at a specific position along a bezier easing curve.\n * For multidimensional curves, the tangent is the slope of each dimension at that point.\n * See the example called extrudeAlongPath.js\n *\n * @example\n * const b = bezier.create([[0,0,0], [0,5,10], [10,0,-5], [10,10,10]]) // a cubic 3 dimensional easing curve that can generate position arrays for modelling\n * let tangent = bezier.tangentAt(t, b)\n *\n * @param {number} t : the position of which to calculate the bezier's tangent value; 0 < t < 1\n * @param {Object} bezier : an array with at least 2 elements of either all numbers, or all arrays of numbers that are the same size.\n * @return {array | number} the tangent at the requested position.\n * @alias module:modeling/curves/bezier.tangentAt\n */\nconst tangentAt = (t, bezier) => {\n  if (t < 0 || t > 1) {\n    throw new Error('Bezier tangentAt() input must be between 0 and 1')\n  }\n  if (bezier.pointType === 'float_single') {\n    return bezierTangent(bezier, bezier.points, t)\n  } else {\n    const result = []\n    for (let i = 0; i < bezier.dimensions; i++) {\n      const singleDimensionPoints = []\n      for (let j = 0; j < bezier.points.length; j++) {\n        singleDimensionPoints.push(bezier.points[j][i])\n      }\n      result.push(bezierTangent(bezier, singleDimensionPoints, t))\n    }\n    return result\n  }\n}\n\nconst bezierTangent = function (bezier, p, t) {\n  // from https://pages.mtu.edu/~shene/COURSES/cs3621/NOTES/spline/Bezier/bezier-der.html\n  const n = p.length - 1\n  let result = 0\n  for (let i = 0; i < n; i++) {\n    const q = n * (p[i + 1] - p[i])\n    result += bezier.tangentPermutations[i] * Math.pow(1 - t, n - 1 - i) * Math.pow(t, i) * q\n  }\n  return result\n}\n\nmodule.exports = tangentAt\n","/**\n * Calculates the value at a specific position along a bezier easing curve.\n * For multidimensional curves, the tangent is the slope of each dimension at that point.\n * See the example called extrudeAlongPath.js to see this in use.\n * Math and explanation comes from {@link https://www.freecodecamp.org/news/nerding-out-with-bezier-curves-6e3c0bc48e2f/}\n *\n * @example\n * const b = bezier.create([0,0,0], [0,5,10], [10,0,-5], [10,10,10]]) // a cubic 3 dimensional easing curve that can generate position arrays for modelling\n * let position = bezier.valueAt(t,b) // where 0 < t < 1\n *\n * @param {number} t : the position of which to calculate the value; 0 < t < 1\n * @param {Object} bezier : a bezier curve created with bezier.create().\n * @returns {array | number} the value at the requested position.\n * @alias module:modeling/curves/bezier.valueAt\n */\nconst valueAt = (t, bezier) => {\n  if (t < 0 || t > 1) {\n    throw new Error('Bezier valueAt() input must be between 0 and 1')\n  }\n  if (bezier.pointType === 'float_single') {\n    return bezierFunction(bezier, bezier.points, t)\n  } else {\n    const result = []\n    for (let i = 0; i < bezier.dimensions; i++) {\n      const singleDimensionPoints = []\n      for (let j = 0; j < bezier.points.length; j++) {\n        singleDimensionPoints.push(bezier.points[j][i])\n      }\n      result.push(bezierFunction(bezier, singleDimensionPoints, t))\n    }\n    return result\n  }\n}\n\nconst bezierFunction = function (bezier, p, t) {\n  const n = p.length - 1\n  let result = 0\n  for (let i = 0; i <= n; i++) {\n    result += bezier.permutations[i] * Math.pow(1 - t, n - i) * Math.pow(t, i) * p[i]\n  }\n  return result\n}\n\nmodule.exports = valueAt\n","/**\n * Curves are n-dimensional mathematical constructs that define a path from point 0 to point 1.\n * @module modeling/curves\n * @example\n * const { bezier } = require('@jscad/modeling').curves\n\n */\nmodule.exports = {\n  bezier: require('./bezier')\n}\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\n/*\n * Apply the transforms of the given geometry.\n * NOTE: This function must be called BEFORE exposing any data. See toSides().\n * @param {geom2} geometry - the geometry to transform\n * @returns {geom2} the given geometry\n *\n * @example\n * geometry = applyTransforms(geometry)\n */\nconst applyTransforms = (geometry) => {\n  if (mat4.isIdentity(geometry.transforms)) return geometry\n\n  // apply transforms to each side\n  geometry.sides = geometry.sides.map((side) => {\n    const p0 = vec2.transform(vec2.create(), side[0], geometry.transforms)\n    const p1 = vec2.transform(vec2.create(), side[1], geometry.transforms)\n    return [p0, p1]\n  })\n  geometry.transforms = mat4.create()\n  return geometry\n}\n\nmodule.exports = applyTransforms\n","/**\n * Performs a shallow clone of the given geometry.\n * @param {geom2} geometry - the geometry to clone\n * @returns {geom2} new geometry\n * @alias module:modeling/geometries/geom2.clone\n */\nconst clone = (geometry) => Object.assign({}, geometry)\n\nmodule.exports = clone\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Represents a 2D geometry consisting of a list of sides.\n * @typedef {Object} geom2\n * @property {Array} sides - list of sides, each side containing two points\n * @property {mat4} transforms - transforms to apply to the sides, see transform()\n */\n\n/**\n * Create a new 2D geometry composed of unordered sides (two connected points).\n * @param {Array} [sides] - list of sides where each side is an array of two points\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.create\n */\nconst create = (sides) => {\n  if (sides === undefined) {\n    sides = [] // empty contents\n  }\n  return {\n    sides: sides,\n    transforms: mat4.create()\n  }\n}\n\nmodule.exports = create\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Create a new 2D geometry from the given compact binary data.\n * @param {Array} data - compact binary data\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.fromCompactBinary\n */\nconst fromCompactBinary = (data) => {\n  if (data[0] !== 0) throw new Error('invalid compact binary data')\n\n  const created = create()\n\n  created.transforms = mat4.clone(data.slice(1, 17))\n\n  for (let i = 21; i < data.length; i += 4) {\n    const point0 = vec2.fromValues(data[i + 0], data[i + 1])\n    const point1 = vec2.fromValues(data[i + 2], data[i + 3])\n    created.sides.push([point0, point1])\n  }\n  // transfer known properties, i.e. color\n  if (data[17] >= 0) {\n    created.color = [data[17], data[18], data[19], data[20]]\n  }\n  // TODO: how about custom properties or fields ?\n  return created\n}\n\nmodule.exports = fromCompactBinary\n","const vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Create a new 2D geometry from the given points.\n * The direction (rotation) of the points is not relevant,\n * as the points can define a convex or a concave polygon.\n * The geometry must not self intersect, i.e. the sides cannot cross.\n * @param {Array} points - list of points in 2D space\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.fromPoints\n */\nconst fromPoints = (points) => {\n  if (!Array.isArray(points)) {\n    throw new Error('the given points must be an array')\n  }\n  let length = points.length\n  if (length < 3) {\n    throw new Error('the given points must define a closed geometry with three or more points')\n  }\n  // adjust length if the given points are closed by the same point\n  if (vec2.equals(points[0], points[length - 1])) --length\n\n  const sides = []\n  let prevpoint = points[length - 1]\n  for (let i = 0; i < length; i++) {\n    const point = points[i]\n    sides.push([vec2.clone(prevpoint), vec2.clone(point)])\n    prevpoint = point\n  }\n  return create(sides)\n}\n\nmodule.exports = fromPoints\n","/**\n * Represents a 2D geometry consisting of a list of sides.\n * @see {@link geom2} for data structure information.\n * @module modeling/geometries/geom2\n *\n * @example\n * colorize([0.5,0,1,1], square()) // purple square\n *\n * @example\n * {\n *   \"sides\": [[[-1,1],[-1,-1]],[[-1,-1],[1,-1]],[[1,-1],[1,1]],[[1,1],[-1,1]]],\n *   \"transforms\": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],\n *   \"color\": [0.5,0,1,1]\n * }\n */\nmodule.exports = {\n  clone: require('./clone'),\n  create: require('./create'),\n  fromPoints: require('./fromPoints'),\n  fromCompactBinary: require('./fromCompactBinary'),\n  isA: require('./isA'),\n  reverse: require('./reverse'),\n  toOutlines: require('./toOutlines'),\n  toPoints: require('./toPoints'),\n  toSides: require('./toSides'),\n  toString: require('./toString'),\n  toCompactBinary: require('./toCompactBinary'),\n  transform: require('./transform'),\n  validate: require('./validate')\n}\n","/**\n * Determine if the given object is a 2D geometry.\n * @param {Object} object - the object to interrogate\n * @returns {Boolean} true, if the object matches a geom2 based object\n * @alias module:modeling/geometries/geom2.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('sides' in object && 'transforms' in object) {\n      if (Array.isArray(object.sides) && 'length' in object.transforms) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const create = require('./create')\nconst toSides = require('./toSides')\n\n/**\n * Reverses the given geometry so that the sides are flipped in the opposite order.\n * This swaps the left (interior) and right (exterior) edges.\n * @param {geom2} geometry - the geometry to reverse\n * @returns {geom2} the new reversed geometry\n * @alias module:modeling/geometries/geom2.reverse\n *\n * @example\n * let newgeometry = reverse(geometry)\n */\nconst reverse = (geometry) => {\n  const oldsides = toSides(geometry)\n\n  const newsides = oldsides.map((side) => [side[1], side[0]])\n  newsides.reverse() // is this required?\n  return create(newsides)\n}\n\nmodule.exports = reverse\n","/**\n * Produces a compact binary representation from the given geometry.\n * @param {geom2} geometry - the geometry\n * @returns {TypedArray} compact binary representation\n * @alias module:modeling/geometries/geom2.toCompactBinary\n */\nconst toCompactBinary = (geometry) => {\n  const sides = geometry.sides\n  const transforms = geometry.transforms\n  let color = [-1, -1, -1, -1]\n  if (geometry.color) color = geometry.color\n\n  // FIXME why Float32Array?\n  const compacted = new Float32Array(1 + 16 + 4 + (sides.length * 4)) // type + transforms + color + sides data\n\n  compacted[0] = 0 // type code: 0 => geom2, 1 => geom3 , 2 => path2\n\n  compacted[1] = transforms[0]\n  compacted[2] = transforms[1]\n  compacted[3] = transforms[2]\n  compacted[4] = transforms[3]\n  compacted[5] = transforms[4]\n  compacted[6] = transforms[5]\n  compacted[7] = transforms[6]\n  compacted[8] = transforms[7]\n  compacted[9] = transforms[8]\n  compacted[10] = transforms[9]\n  compacted[11] = transforms[10]\n  compacted[12] = transforms[11]\n  compacted[13] = transforms[12]\n  compacted[14] = transforms[13]\n  compacted[15] = transforms[14]\n  compacted[16] = transforms[15]\n\n  compacted[17] = color[0]\n  compacted[18] = color[1]\n  compacted[19] = color[2]\n  compacted[20] = color[3]\n\n  for (let i = 0; i < sides.length; i++) {\n    const ci = i * 4 + 21\n    const point0 = sides[i][0]\n    const point1 = sides[i][1]\n    compacted[ci + 0] = point0[0]\n    compacted[ci + 1] = point0[1]\n    compacted[ci + 2] = point1[0]\n    compacted[ci + 3] = point1[1]\n  }\n  // TODO: how about custom properties or fields ?\n  return compacted\n}\n\nmodule.exports = toCompactBinary\n","const vec2 = require('../../maths/vec2')\n\nconst toSides = require('./toSides')\n\n/*\n * Create a list of edges which SHARE vertices.\n * This allows the edges to be traversed in order.\n */\nconst toSharedVertices = (sides) => {\n  const unique = new Map() // {key: vertex}\n  const getUniqueVertex = (vertex) => {\n    const key = vertex.toString()\n    if (unique.has(key)) {\n      return unique.get(key)\n    } else {\n      unique.set(key, vertex)\n      return vertex\n    }\n  }\n\n  return sides.map((side) => side.map(getUniqueVertex))\n}\n\n/*\n * Convert a list of sides into a map from vertex to edges.\n */\nconst toVertexMap = (sides) => {\n  const vertexMap = new Map()\n  // first map to edges with shared vertices\n  const edges = toSharedVertices(sides)\n  // construct adjacent edges map\n  edges.forEach((edge) => {\n    if (vertexMap.has(edge[0])) {\n      vertexMap.get(edge[0]).push(edge)\n    } else {\n      vertexMap.set(edge[0], [edge])\n    }\n  })\n  return vertexMap\n}\n\n/**\n * Create the outline(s) of the given geometry.\n * @param {geom2} geometry - geometry to create outlines from\n * @returns {Array} an array of outlines, where each outline is an array of ordered points\n * @alias module:modeling/geometries/geom2.toOutlines\n *\n * @example\n * let geometry = subtract(rectangle({size: [5, 5]}), rectangle({size: [3, 3]}))\n * let outlines = toOutlines(geometry) // returns two outlines\n */\nconst toOutlines = (geometry) => {\n  const vertexMap = toVertexMap(toSides(geometry)) // {vertex: [edges]}\n  const outlines = []\n  while (true) {\n    let startSide\n    for (const [vertex, edges] of vertexMap) {\n      startSide = edges.shift()\n      if (!startSide) {\n        vertexMap.delete(vertex)\n        continue\n      }\n      break\n    }\n    if (startSide === undefined) break // all starting sides have been visited\n\n    const connectedVertexPoints = []\n    const startVertex = startSide[0]\n    while (true) {\n      connectedVertexPoints.push(startSide[0])\n      const nextVertex = startSide[1]\n      if (nextVertex === startVertex) break // the outline has been closed\n      const nextPossibleSides = vertexMap.get(nextVertex)\n      if (!nextPossibleSides) {\n        throw new Error(`geometry is not closed at vertex ${nextVertex}`)\n      }\n      const nextSide = popNextSide(startSide, nextPossibleSides)\n      if (nextPossibleSides.length === 0) {\n        vertexMap.delete(nextVertex)\n      }\n      startSide = nextSide\n    } // inner loop\n\n    // due to the logic of fromPoints()\n    // move the first point to the last\n    if (connectedVertexPoints.length > 0) {\n      connectedVertexPoints.push(connectedVertexPoints.shift())\n    }\n    outlines.push(connectedVertexPoints)\n  } // outer loop\n  vertexMap.clear()\n  return outlines\n}\n\n// find the first counter-clockwise edge from startSide and pop from nextSides\nconst popNextSide = (startSide, nextSides) => {\n  if (nextSides.length === 1) {\n    return nextSides.pop()\n  }\n  const v0 = vec2.create()\n  const startAngle = vec2.angleDegrees(vec2.subtract(v0, startSide[1], startSide[0]))\n  let bestAngle\n  let bestIndex\n  nextSides.forEach((nextSide, index) => {\n    const nextAngle = vec2.angleDegrees(vec2.subtract(v0, nextSide[1], nextSide[0]))\n    let angle = nextAngle - startAngle\n    if (angle < -180) angle += 360\n    if (angle >= 180) angle -= 360\n    if (bestIndex === undefined || angle > bestAngle) {\n      bestIndex = index\n      bestAngle = angle\n    }\n  })\n  const nextSide = nextSides[bestIndex]\n  nextSides.splice(bestIndex, 1) // remove side from list\n  return nextSide\n}\n\nmodule.exports = toOutlines\n","const toSides = require('./toSides')\n\n/**\n * Produces an array of points from the given geometry.\n * The returned array should not be modified as the points are shared with the geometry.\n * NOTE: The points returned do NOT define an order. Use toOutlines() for ordered points.\n * @param {geom2} geometry - the geometry\n * @returns {Array} an array of points\n * @alias module:modeling/geometries/geom2.toPoints\n *\n * @example\n * let sharedpoints = toPoints(geometry)\n */\nconst toPoints = (geometry) => {\n  const sides = toSides(geometry)\n  const points = sides.map((side) => side[0])\n  // due to the logic of fromPoints()\n  // move the first point to the last\n  if (points.length > 0) {\n    points.push(points.shift())\n  }\n  return points\n}\n\nmodule.exports = toPoints\n","const applyTransforms = require('./applyTransforms')\n\n/**\n * Produces an array of sides from the given geometry.\n * The returned array should not be modified as the data is shared with the geometry.\n * NOTE: The sides returned do NOT define an order. Use toOutlines() for ordered points.\n * @param {geom2} geometry - the geometry\n * @returns {Array} an array of sides\n * @alias module:modeling/geometries/geom2.toSides\n *\n * @example\n * let sharedsides = toSides(geometry)\n */\nconst toSides = (geometry) => applyTransforms(geometry).sides\n\nmodule.exports = toSides\n","const vec2 = require('../../maths/vec2')\n\nconst toSides = require('./toSides')\n\n/**\n * Create a string representing the contents of the given geometry.\n * @param {geom2} geometry - the geometry\n * @returns {String} a representative string\n * @alias module:modeling/geometries/geom2.toString\n *\n * @example\n * console.out(toString(geometry))\n */\nconst toString = (geometry) => {\n  const sides = toSides(geometry)\n  let result = 'geom2 (' + sides.length + ' sides):\\n[\\n'\n  sides.forEach((side) => {\n    result += '  [' + vec2.toString(side[0]) + ', ' + vec2.toString(side[1]) + ']\\n'\n  })\n  result += ']\\n'\n  return result\n}\n\nmodule.exports = toString\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Transform the given geometry using the given matrix.\n * This is a lazy transform of the sides, as this function only adjusts the transforms.\n * The transforms are applied when accessing the sides via toSides().\n * @param {mat4} matrix - the matrix to transform with\n * @param {geom2} geometry - the geometry to transform\n * @returns {geom2} a new geometry\n * @alias module:modeling/geometries/geom2.transform\n *\n * @example\n * let newgeometry = transform(fromZRotation(degToRad(90)), geometry)\n */\nconst transform = (matrix, geometry) => {\n  const transforms = mat4.multiply(mat4.create(), matrix, geometry.transforms)\n  return Object.assign({}, geometry, { transforms })\n}\n\nmodule.exports = transform\n","const vec2 = require('../../maths/vec2')\nconst isA = require('./isA')\nconst toOutlines = require('./toOutlines')\n\n/**\n * Determine if the given object is a valid geom2.\n * Checks for closedness, self-edges, and valid data points.\n *\n * **If the geometry is not valid, an exception will be thrown with details of the geometry error.**\n *\n * @param {Object} object - the object to interrogate\n * @throws {Error} error if the geometry is not valid\n * @alias module:modeling/geometries/geom2.validate\n */\nconst validate = (object) => {\n  if (!isA(object)) {\n    throw new Error('invalid geom2 structure')\n  }\n\n  // check for closedness\n  toOutlines(object)\n\n  // check for self-edges\n  object.sides.forEach((side) => {\n    if (vec2.equals(side[0], side[1])) {\n      throw new Error(`geom2 self-edge ${side[0]}`)\n    }\n  })\n\n  // check transforms\n  if (!object.transforms.every(Number.isFinite)) {\n    throw new Error(`geom2 invalid transforms ${object.transforms}`)\n  }\n}\n\nmodule.exports = validate\n","const mat4 = require('../../maths/mat4')\n\nconst poly3 = require('../poly3')\n\n/*\n * Apply the transforms of the given geometry.\n * NOTE: This function must be called BEFORE exposing any data. See toPolygons.\n * @param {geom3} geometry - the geometry to transform\n * @returns {geom3} the given geometry\n * @example\n * geometry = applyTransforms(geometry)\n */\nconst applyTransforms = (geometry) => {\n  if (mat4.isIdentity(geometry.transforms)) return geometry\n\n  // apply transforms to each polygon\n  geometry.polygons = geometry.polygons.map((polygon) => poly3.transform(geometry.transforms, polygon))\n  // reset transforms\n  geometry.transforms = mat4.create()\n  return geometry\n}\n\nmodule.exports = applyTransforms\n","/**\n * Performs a shallow clone of the given geometry.\n * @param {geom3} geometry - the geometry to clone\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.clone\n */\nconst clone = (geometry) => Object.assign({}, geometry)\n\nmodule.exports = clone\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Represents a 3D geometry consisting of a list of polygons.\n * @typedef {Object} geom3\n * @property {Array} polygons - list of polygons, each polygon containing three or more points\n * @property {mat4} transforms - transforms to apply to the polygons, see transform()\n */\n\n/**\n * Create a new 3D geometry composed of the given polygons.\n * @param {Array} [polygons] - list of polygons, or undefined\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.create\n */\nconst create = (polygons) => {\n  if (polygons === undefined) {\n    polygons = [] // empty contents\n  }\n  return {\n    polygons,\n    transforms: mat4.create()\n  }\n}\n\nmodule.exports = create\n","const vec3 = require('../../maths/vec3')\nconst mat4 = require('../../maths/mat4')\n\nconst poly3 = require('../poly3')\n\nconst create = require('./create')\n\n/**\n * Construct a new 3D geometry from the given compact binary data.\n * @param {TypedArray} data - compact binary data\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.fromCompactBinary\n */\nconst fromCompactBinary = (data) => {\n  if (data[0] !== 1) throw new Error('invalid compact binary data')\n\n  const created = create()\n\n  created.transforms = mat4.clone(data.slice(1, 17))\n\n  const numberOfVertices = data[21]\n  let ci = 22\n  let vi = data.length - (numberOfVertices * 3)\n  while (vi < data.length) {\n    const verticesPerPolygon = data[ci]\n    ci++\n\n    const vertices = []\n    for (let i = 0; i < verticesPerPolygon; i++) {\n      vertices.push(vec3.fromValues(data[vi], data[vi + 1], data[vi + 2]))\n      vi += 3\n    }\n    created.polygons.push(poly3.create(vertices))\n  }\n\n  // transfer known properties, i.e. color\n  if (data[17] >= 0) {\n    created.color = [data[17], data[18], data[19], data[20]]\n  }\n  // TODO: how about custom properties or fields ?\n  return created\n}\n\nmodule.exports = fromCompactBinary\n","const poly3 = require('../poly3')\n\nconst create = require('./create')\n\n/**\n * Construct a new 3D geometry from a list of points.\n * The list of points should contain sub-arrays, each defining a single polygon of points.\n * In addition, the points should follow the right-hand rule for rotation in order to\n * define an external facing polygon.\n * @param {Array} listofpoints - list of lists, where each list is a set of points to construct a polygon\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.fromPoints\n */\nconst fromPoints = (listofpoints) => {\n  if (!Array.isArray(listofpoints)) {\n    throw new Error('the given points must be an array')\n  }\n\n  const polygons = listofpoints.map((points, index) => {\n    // TODO catch the error, and rethrow with index\n    const polygon = poly3.create(points)\n    return polygon\n  })\n  const result = create(polygons)\n  return result\n}\n\nmodule.exports = fromPoints\n","/**\n * Represents a 3D geometry consisting of a list of polygons.\n * @see {@link geom3} for data structure information.\n * @module modeling/geometries/geom3\n *\n * @example\n * colorize([0,0.5,1,0.6], cube()) // transparent ice cube\n *\n * @example\n * {\n *   \"polygons\": [\n *     {\"vertices\": [[-1,-1,-1], [-1,-1,1], [-1,1,1], [-1,1,-1]]},\n *     {\"vertices\": [[1,-1,-1], [1,1,-1], [1,1,1], [1,-1,1]]},\n *     {\"vertices\": [[-1,-1,-1], [1,-1,-1], [1,-1,1], [-1,-1,1]]},\n *     {\"vertices\": [[-1,1,-1], [-1,1,1], [1,1,1], [1,1,-1]]},\n *     {\"vertices\": [[-1,-1,-1], [-1,1,-1], [1,1,-1], [1,-1,-1]]},\n *     {\"vertices\": [[-1,-1,1], [1,-1,1], [1,1,1], [-1,1,1]]}\n *   ],\n *   \"transforms\": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],\n *   \"color\": [0,0.5,1,0.6]\n * }\n */\nmodule.exports = {\n  clone: require('./clone'),\n  create: require('./create'),\n  fromPoints: require('./fromPoints'),\n  fromCompactBinary: require('./fromCompactBinary'),\n  invert: require('./invert'),\n  isA: require('./isA'),\n  toPoints: require('./toPoints'),\n  toPolygons: require('./toPolygons'),\n  toString: require('./toString'),\n  toCompactBinary: require('./toCompactBinary'),\n  transform: require('./transform'),\n  validate: require('./validate')\n}\n","const poly3 = require('../poly3')\n\nconst create = require('./create')\nconst toPolygons = require('./toPolygons')\n\n/**\n * Invert the given geometry, transposing solid and empty space.\n * @param {geom3} geometry - the geometry to invert\n * @return {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.invert\n */\nconst invert = (geometry) => {\n  const polygons = toPolygons(geometry)\n  const newpolygons = polygons.map((polygon) => poly3.invert(polygon))\n  return create(newpolygons)\n}\n\nmodule.exports = invert\n","/**\n * Determine if the given object is a 3D geometry.\n * @param {Object} object - the object to interrogate\n * @returns {Boolean} true if the object matches a geom3\n * @alias module:modeling/geometries/geom3.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('polygons' in object && 'transforms' in object) {\n      if (Array.isArray(object.polygons) && 'length' in object.transforms) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const poly3 = require('../poly3')\n\n/**\n * Return the given geometry in compact binary representation.\n * @param {geom3} geometry - the geometry\n * @return {TypedArray} compact binary representation\n * @alias module:modeling/geometries/geom3.toCompactBinary\n */\nconst toCompactBinary = (geometry) => {\n  const polygons = geometry.polygons\n  const transforms = geometry.transforms\n\n  const numberOfPolygons = polygons.length\n  const numberOfVertices = polygons.reduce((count, polygon) => count + polygon.vertices.length, 0)\n  let color = [-1, -1, -1, -1]\n  if (geometry.color) color = geometry.color\n\n  // FIXME why Float32Array?\n  const compacted = new Float32Array(1 + 16 + 4 + 1 + numberOfPolygons + (numberOfVertices * 3))\n  // type + transforms + color + numberOfPolygons + numberOfVerticesPerPolygon[] + vertices data[]\n\n  compacted[0] = 1 // type code: 0 => geom2, 1 => geom3 , 2 => path2\n\n  compacted[1] = transforms[0]\n  compacted[2] = transforms[1]\n  compacted[3] = transforms[2]\n  compacted[4] = transforms[3]\n  compacted[5] = transforms[4]\n  compacted[6] = transforms[5]\n  compacted[7] = transforms[6]\n  compacted[8] = transforms[7]\n  compacted[9] = transforms[8]\n  compacted[10] = transforms[9]\n  compacted[11] = transforms[10]\n  compacted[12] = transforms[11]\n  compacted[13] = transforms[12]\n  compacted[14] = transforms[13]\n  compacted[15] = transforms[14]\n  compacted[16] = transforms[15]\n\n  compacted[17] = color[0]\n  compacted[18] = color[1]\n  compacted[19] = color[2]\n  compacted[20] = color[3]\n\n  compacted[21] = numberOfVertices\n\n  let ci = 22\n  let vi = ci + numberOfPolygons\n  polygons.forEach((polygon) => {\n    const points = poly3.toPoints(polygon)\n    // record the number of vertices per polygon\n    compacted[ci] = points.length\n    ci++\n    // convert the vertices\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i]\n      compacted[vi + 0] = point[0]\n      compacted[vi + 1] = point[1]\n      compacted[vi + 2] = point[2]\n      vi += 3\n    }\n  })\n  // TODO: how about custom properties or fields ?\n  return compacted\n}\n\nmodule.exports = toCompactBinary\n","const poly3 = require('../poly3')\n\nconst toPolygons = require('./toPolygons')\n\n/**\n * Return the given geometry as a list of points, after applying transforms.\n * The returned array should not be modified as the points are shared with the geometry.\n * @param {geom3} geometry - the geometry\n * @return {Array} list of points, where each sub-array represents a polygon\n * @alias module:modeling/geometries/geom3.toPoints\n */\nconst toPoints = (geometry) => {\n  const polygons = toPolygons(geometry)\n  const listofpoints = polygons.map((polygon) => poly3.toPoints(polygon))\n  return listofpoints\n}\n\nmodule.exports = toPoints\n","const applyTransforms = require('./applyTransforms')\n\n/**\n * Produces an array of polygons from the given geometry, after applying transforms.\n * The returned array should not be modified as the polygons are shared with the geometry.\n * @param {geom3} geometry - the geometry\n * @returns {Array} an array of polygons\n * @alias module:modeling/geometries/geom3.toPolygons\n *\n * @example\n * let sharedpolygons = toPolygons(geometry)\n */\nconst toPolygons = (geometry) => applyTransforms(geometry).polygons\n\nmodule.exports = toPolygons\n","const poly3 = require('../poly3')\n\nconst toPolygons = require('./toPolygons')\n\n/**\n * Create a string representing the contents of the given geometry.\n * @param {geom3} geometry - the geometry\n * @returns {String} a representative string\n * @alias module:modeling/geometries/geom3.toString\n *\n * @example\n * console.out(toString(geometry))\n */\nconst toString = (geometry) => {\n  const polygons = toPolygons(geometry)\n  let result = 'geom3 (' + polygons.length + ' polygons):\\n'\n  polygons.forEach((polygon) => {\n    result += '  ' + poly3.toString(polygon) + '\\n'\n  })\n  return result\n}\n\nmodule.exports = toString\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Transform the given geometry using the given matrix.\n * This is a lazy transform of the polygons, as this function only adjusts the transforms.\n * See applyTransforms() for the actual application of the transforms to the polygons.\n * @param {mat4} matrix - the matrix to transform with\n * @param {geom3} geometry - the geometry to transform\n * @returns {geom3} a new geometry\n * @alias module:modeling/geometries/geom3.transform\n *\n * @example\n * let newgeometry = transform(fromXRotation(degToRad(90)), geometry)\n */\nconst transform = (matrix, geometry) => {\n  const transforms = mat4.multiply(mat4.create(), matrix, geometry.transforms)\n  return Object.assign({}, geometry, { transforms })\n}\n\nmodule.exports = transform\n","const poly3 = require('../poly3')\nconst isA = require('./isA')\n\n/**\n * Determine if the given object is a valid 3D geometry.\n * Checks for valid data structure, convex polygon faces, and manifold edges.\n *\n * **If the geometry is not valid, an exception will be thrown with details of the geometry error.**\n *\n * @param {Object} object - the object to interrogate\n * @throws {Error} error if the geometry is not valid\n * @alias module:modeling/geometries/geom3.validate\n */\nconst validate = (object) => {\n  if (!isA(object)) {\n    throw new Error('invalid geom3 structure')\n  }\n\n  // check polygons\n  object.polygons.forEach(poly3.validate)\n  validateManifold(object)\n\n  // check transforms\n  if (!object.transforms.every(Number.isFinite)) {\n    throw new Error(`geom3 invalid transforms ${object.transforms}`)\n  }\n\n  // TODO: check for self-intersecting\n}\n\n/*\n * Check manifold edge condition: Every edge is in exactly 2 faces\n */\nconst validateManifold = (object) => {\n  // count of each edge\n  const edgeCount = new Map()\n  object.polygons.forEach(({ vertices }) => {\n    vertices.forEach((v, i) => {\n      const v1 = `${v}`\n      const v2 = `${vertices[(i + 1) % vertices.length]}`\n      // sort for undirected edge\n      const edge = `${v1}/${v2}`\n      const count = edgeCount.has(edge) ? edgeCount.get(edge) : 0\n      edgeCount.set(edge, count + 1)\n    })\n  })\n\n  // check that edges are always matched\n  const nonManifold = []\n  edgeCount.forEach((count, edge) => {\n    const complementEdge = edge.split('/').reverse().join('/')\n    const complementCount = edgeCount.get(complementEdge)\n    if (count !== complementCount) {\n      nonManifold.push(edge.replace('/', ' -> '))\n    }\n  })\n  if (nonManifold.length > 0) {\n    throw new Error(`non-manifold edges ${nonManifold.length}\\n${nonManifold.join('\\n')}`)\n  }\n}\n\nmodule.exports = validate\n","/**\n * Geometries are objects that represent the contents of primitives or the results of operations.\n * Note: Geometries are considered immutable, so never change the contents directly.\n *\n * @see {@link geom2} - 2D geometry consisting of sides\n * @see {@link geom3} - 3D geometry consisting of polygons\n * @see {@link path2} - 2D geometry consisting of ordered points\n * @see {@link poly2} - 2D polygon consisting of ordered vertices\n * @see {@link poly3} - 3D polygon consisting of ordered vertices\n *\n * @module modeling/geometries\n * @example\n * const { geom2, geom3, path2, poly2, poly3 } = require('@jscad/modeling').geometries\n */\nmodule.exports = {\n  geom2: require('./geom2'),\n  geom3: require('./geom3'),\n  path2: require('./path2'),\n  poly2: require('./poly2'),\n  poly3: require('./poly3')\n}\n","const { TAU } = require('../../maths/constants')\nconst vec2 = require('../../maths/vec2')\n\nconst fromPoints = require('./fromPoints')\nconst toPoints = require('./toPoints')\n\n/**\n * Append a series of points to the given geometry that represent an arc.\n * This implementation follows the SVG specifications.\n * @see http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\n * @param {Object} options - options for construction\n * @param {vec2} options.endpoint - end point of arc (REQUIRED)\n * @param {vec2} [options.radius=[0,0]] - radius of arc (X and Y)\n * @param {Number} [options.xaxisrotation=0] - rotation (RADIANS) of the X axis of the arc with respect to the X axis of the coordinate system\n * @param {Boolean} [options.clockwise=false] - draw an arc clockwise with respect to the center point\n * @param {Boolean} [options.large=false] - draw an arc longer than TAU / 2 radians\n * @param {Number} [options.segments=16] - number of segments per full rotation\n * @param {path2} geometry - the path of which to append the arc\n * @returns {path2} a new path with the appended points\n * @alias module:modeling/geometries/path2.appendArc\n *\n * @example\n * let p1 = path2.fromPoints({}, [[27.5,-22.96875]]);\n * p1 = path2.appendPoints([[27.5,-3.28125]], p1);\n * p1 = path2.appendArc({endpoint: [12.5, -22.96875], radius: [15, -19.6875]}, p1);\n */\nconst appendArc = (options, geometry) => {\n  const defaults = {\n    radius: [0, 0], // X and Y radius\n    xaxisrotation: 0,\n    clockwise: false,\n    large: false,\n    segments: 16\n  }\n  let { endpoint, radius, xaxisrotation, clockwise, large, segments } = Object.assign({}, defaults, options)\n\n  // validate the given options\n  if (!Array.isArray(endpoint)) throw new Error('endpoint must be an array of X and Y values')\n  if (endpoint.length < 2) throw new Error('endpoint must contain X and Y values')\n  endpoint = vec2.clone(endpoint)\n\n  if (!Array.isArray(radius)) throw new Error('radius must be an array of X and Y values')\n  if (radius.length < 2) throw new Error('radius must contain X and Y values')\n\n  if (segments < 4) throw new Error('segments must be four or more')\n\n  const decimals = 100000\n\n  // validate the given geometry\n  if (geometry.isClosed) {\n    throw new Error('the given path cannot be closed')\n  }\n\n  const points = toPoints(geometry)\n  if (points.length < 1) {\n    throw new Error('the given path must contain one or more points (as the starting point for the arc)')\n  }\n\n  let xradius = radius[0]\n  let yradius = radius[1]\n  const startpoint = points[points.length - 1]\n\n  // round to precision in order to have determinate calculations\n  xradius = Math.round(xradius * decimals) / decimals\n  yradius = Math.round(yradius * decimals) / decimals\n  endpoint = vec2.fromValues(Math.round(endpoint[0] * decimals) / decimals, Math.round(endpoint[1] * decimals) / decimals)\n\n  const sweepFlag = !clockwise\n  let newpoints = []\n  if ((xradius === 0) || (yradius === 0)) {\n    // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes:\n    // If rx = 0 or ry = 0, then treat this as a straight line from (x1, y1) to (x2, y2) and stop\n    newpoints.push(endpoint)\n  } else {\n    xradius = Math.abs(xradius)\n    yradius = Math.abs(yradius)\n\n    // see http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes :\n    const phi = xaxisrotation\n    const cosphi = Math.cos(phi)\n    const sinphi = Math.sin(phi)\n    const minushalfdistance = vec2.subtract(vec2.create(), startpoint, endpoint)\n    vec2.scale(minushalfdistance, minushalfdistance, 0.5)\n    // F.6.5.1:\n    // round to precision in order to have determinate calculations\n    const x = Math.round((cosphi * minushalfdistance[0] + sinphi * minushalfdistance[1]) * decimals) / decimals\n    const y = Math.round((-sinphi * minushalfdistance[0] + cosphi * minushalfdistance[1]) * decimals) / decimals\n    const startTranslated = vec2.fromValues(x, y)\n    // F.6.6.2:\n    const biglambda = (startTranslated[0] * startTranslated[0]) / (xradius * xradius) + (startTranslated[1] * startTranslated[1]) / (yradius * yradius)\n    if (biglambda > 1.0) {\n      // F.6.6.3:\n      const sqrtbiglambda = Math.sqrt(biglambda)\n      xradius *= sqrtbiglambda\n      yradius *= sqrtbiglambda\n      // round to precision in order to have determinate calculations\n      xradius = Math.round(xradius * decimals) / decimals\n      yradius = Math.round(yradius * decimals) / decimals\n    }\n    // F.6.5.2:\n    let multiplier1 = Math.sqrt((xradius * xradius * yradius * yradius - xradius * xradius * startTranslated[1] * startTranslated[1] - yradius * yradius * startTranslated[0] * startTranslated[0]) / (xradius * xradius * startTranslated[1] * startTranslated[1] + yradius * yradius * startTranslated[0] * startTranslated[0]))\n    if (sweepFlag === large) multiplier1 = -multiplier1\n    const centerTranslated = vec2.fromValues(xradius * startTranslated[1] / yradius, -yradius * startTranslated[0] / xradius)\n    vec2.scale(centerTranslated, centerTranslated, multiplier1)\n    // F.6.5.3:\n    let center = vec2.fromValues(cosphi * centerTranslated[0] - sinphi * centerTranslated[1], sinphi * centerTranslated[0] + cosphi * centerTranslated[1])\n    center = vec2.add(center, center, vec2.scale(vec2.create(), vec2.add(vec2.create(), startpoint, endpoint), 0.5))\n\n    // F.6.5.5:\n    const vector1 = vec2.fromValues((startTranslated[0] - centerTranslated[0]) / xradius, (startTranslated[1] - centerTranslated[1]) / yradius)\n    const vector2 = vec2.fromValues((-startTranslated[0] - centerTranslated[0]) / xradius, (-startTranslated[1] - centerTranslated[1]) / yradius)\n    const theta1 = vec2.angleRadians(vector1)\n    const theta2 = vec2.angleRadians(vector2)\n    let deltatheta = theta2 - theta1\n    deltatheta = deltatheta % TAU\n    if ((!sweepFlag) && (deltatheta > 0)) {\n      deltatheta -= TAU\n    } else if ((sweepFlag) && (deltatheta < 0)) {\n      deltatheta += TAU\n    }\n\n    // Ok, we have the center point and angle range (from theta1, deltatheta radians) so we can create the ellipse\n    let numsteps = Math.ceil(Math.abs(deltatheta) / TAU * segments) + 1\n    if (numsteps < 1) numsteps = 1\n    for (let step = 1; step < numsteps; step++) {\n      const theta = theta1 + step / numsteps * deltatheta\n      const costheta = Math.cos(theta)\n      const sintheta = Math.sin(theta)\n      // F.6.3.1:\n      const point = vec2.fromValues(cosphi * xradius * costheta - sinphi * yradius * sintheta, sinphi * xradius * costheta + cosphi * yradius * sintheta)\n      vec2.add(point, point, center)\n      newpoints.push(point)\n    }\n    // ensure end point is precisely what user gave as parameter\n    if (numsteps) newpoints.push(options.endpoint)\n  }\n  newpoints = points.concat(newpoints)\n  const result = fromPoints({}, newpoints)\n  return result\n}\n\nmodule.exports = appendArc\n","const { TAU } = require('../../maths/constants')\nconst vec2 = require('../../maths/vec2')\nconst vec3 = require('../../maths/vec2')\n\nconst appendPoints = require('./appendPoints')\nconst toPoints = require('./toPoints')\n\n/**\n * Append a series of points to the given geometry that represent a Bezier curve.\n * The Bézier curve starts at the last point in the given geometry, and ends at the last control point.\n * The other control points are intermediate control points to transition the curve from start to end points.\n * The first control point may be null to ensure a smooth transition occurs. In this case,\n * the second to last point of the given geometry is mirrored into the control points of the Bezier curve.\n * In other words, the trailing gradient of the geometry matches the new gradient of the curve.\n * @param {Object} options - options for construction\n * @param {Array} options.controlPoints - list of control points (2D) for the bezier curve\n * @param {Number} [options.segment=16] - number of segments per 360 rotation\n * @param {path2} geometry - the path of which to appended points\n * @returns {path2} a new path with the appended points\n * @alias module:modeling/geometries/path2.appendBezier\n *\n * @example\n * let p5 = path2.create({}, [[10,-20]])\n * p5 = path2.appendBezier({controlPoints: [[10,-10],[25,-10],[25,-20]]}, p5);\n * p5 = path2.appendBezier({controlPoints: [null, [25,-30],[40,-30],[40,-20]]}, p5)\n */\nconst appendBezier = (options, geometry) => {\n  const defaults = {\n    segments: 16\n  }\n  let { controlPoints, segments } = Object.assign({}, defaults, options)\n\n  // validate the given options\n  if (!Array.isArray(controlPoints)) throw new Error('controlPoints must be an array of one or more points')\n  if (controlPoints.length < 1) throw new Error('controlPoints must be an array of one or more points')\n\n  if (segments < 4) throw new Error('segments must be four or more')\n\n  // validate the given geometry\n  if (geometry.isClosed) {\n    throw new Error('the given geometry cannot be closed')\n  }\n\n  const points = toPoints(geometry)\n  if (points.length < 1) {\n    throw new Error('the given path must contain one or more points (as the starting point for the bezier curve)')\n  }\n\n  // make a copy of the control points\n  controlPoints = controlPoints.slice()\n\n  // special handling of null control point (only first is allowed)\n  const firstControlPoint = controlPoints[0]\n  if (firstControlPoint === null) {\n    if (controlPoints.length < 2) {\n      throw new Error('a null control point must be passed with one more control points')\n    }\n    // special handling of a previous bezier curve\n    let lastBezierControlPoint = points[points.length - 2]\n    if ('lastBezierControlPoint' in geometry) {\n      lastBezierControlPoint = geometry.lastBezierControlPoint\n    }\n    if (!Array.isArray(lastBezierControlPoint)) {\n      throw new Error('the given path must contain TWO or more points if given a null control point')\n    }\n    // replace the first control point with the mirror of the last bezier control point\n    const controlpoint = vec2.scale(vec2.create(), points[points.length - 1], 2)\n    vec2.subtract(controlpoint, controlpoint, lastBezierControlPoint)\n\n    controlPoints[0] = controlpoint\n  }\n\n  // add a control point for the previous end point\n  controlPoints.unshift(points[points.length - 1])\n\n  const bezierOrder = controlPoints.length - 1\n  const factorials = []\n  let fact = 1\n  for (let i = 0; i <= bezierOrder; ++i) {\n    if (i > 0) fact *= i\n    factorials.push(fact)\n  }\n\n  const binomials = []\n  for (let i = 0; i <= bezierOrder; ++i) {\n    const binomial = factorials[bezierOrder] / (factorials[i] * factorials[bezierOrder - i])\n    binomials.push(binomial)\n  }\n\n  const v0 = vec2.create()\n  const v1 = vec2.create()\n  const v3 = vec3.create()\n  const getPointForT = (t) => {\n    let tk = 1 // = pow(t,k)\n    let oneMinusTNMinusK = Math.pow(1 - t, bezierOrder) // = pow( 1-t, bezierOrder - k)\n    const invOneMinusT = (t !== 1) ? (1 / (1 - t)) : 1\n    const point = vec2.create() // 0, 0, 0\n    for (let k = 0; k <= bezierOrder; ++k) {\n      if (k === bezierOrder) oneMinusTNMinusK = 1\n      const bernsteinCoefficient = binomials[k] * tk * oneMinusTNMinusK\n      const derivativePoint = vec2.scale(v0, controlPoints[k], bernsteinCoefficient)\n      vec2.add(point, point, derivativePoint)\n      tk *= t\n      oneMinusTNMinusK *= invOneMinusT\n    }\n    return point\n  }\n\n  const newpoints = []\n  const newpointsT = []\n  const numsteps = bezierOrder + 1\n  for (let i = 0; i < numsteps; ++i) {\n    const t = i / (numsteps - 1)\n    const point = getPointForT(t)\n    newpoints.push(point)\n    newpointsT.push(t)\n  }\n\n  // subdivide each segment until the angle at each vertex becomes small enough:\n  let subdivideBase = 1\n  const maxangle = TAU / segments\n  const maxsinangle = Math.sin(maxangle)\n  while (subdivideBase < newpoints.length - 1) {\n    const dir1 = vec2.subtract(v0, newpoints[subdivideBase], newpoints[subdivideBase - 1])\n    vec2.normalize(dir1, dir1)\n    const dir2 = vec2.subtract(v1, newpoints[subdivideBase + 1], newpoints[subdivideBase])\n    vec2.normalize(dir2, dir2)\n    const sinangle = vec2.cross(v3, dir1, dir2) // the sine of the angle\n    if (Math.abs(sinangle[2]) > maxsinangle) {\n      // angle is too big, we need to subdivide\n      const t0 = newpointsT[subdivideBase - 1]\n      const t1 = newpointsT[subdivideBase + 1]\n      const newt0 = t0 + (t1 - t0) * 1 / 3\n      const newt1 = t0 + (t1 - t0) * 2 / 3\n      const point0 = getPointForT(newt0)\n      const point1 = getPointForT(newt1)\n      // remove the point at subdivideBase and replace with 2 new points:\n      newpoints.splice(subdivideBase, 1, point0, point1)\n      newpointsT.splice(subdivideBase, 1, newt0, newt1)\n      // re - evaluate the angles, starting at the previous junction since it has changed:\n      subdivideBase--\n      if (subdivideBase < 1) subdivideBase = 1\n    } else {\n      ++subdivideBase\n    }\n  }\n\n  // append to the new points to the given path\n  // but skip the first new point because it is identical to the last point in the given path\n  newpoints.shift()\n  const result = appendPoints(newpoints, geometry)\n  result.lastBezierControlPoint = controlPoints[controlPoints.length - 2]\n  return result\n}\n\nmodule.exports = appendBezier\n","const concat = require('./concat')\nconst create = require('./create')\n\n/**\n * Append the given list of points to the end of the given geometry.\n * @param {Array} points - the points (2D) to append to the given path\n * @param {path2} geometry - the given path\n * @returns {path2} a new path with the appended points\n * @alias module:modeling/geometries/path2.appendPoints\n * @example\n * let newpath = appendPoints([[3, 4], [4, 5]], oldpath)\n */\nconst appendPoints = (points, geometry) => concat(geometry, create(points))\n\nmodule.exports = appendPoints\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\n/*\n * Apply the transforms of the given geometry.\n * NOTE: This function must be called BEFORE exposing any data. See toPoints.\n * @param {path} geometry - the geometry to transform\n * @returns {path} the given geometry\n * @example\n * geometry = applyTransforms(geometry)\n */\nconst applyTransforms = (geometry) => {\n  if (mat4.isIdentity(geometry.transforms)) return geometry\n\n  geometry.points = geometry.points.map((point) => vec2.transform(vec2.create(), point, geometry.transforms))\n  geometry.transforms = mat4.create()\n  return geometry\n}\n\nmodule.exports = applyTransforms\n","/**\n * Performs a shallow clone of the give geometry.\n * @param {path2} geometry - the geometry to clone\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.clone\n */\nconst clone = (geometry) => Object.assign({}, geometry)\n\nmodule.exports = clone\n","const { EPS } = require('../../maths/constants')\n\nconst vec2 = require('../../maths/vec2')\n\nconst clone = require('./clone')\n\n/**\n * Close the given geometry.\n * @param {path2} geometry - the path to close\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.close\n */\nconst close = (geometry) => {\n  if (geometry.isClosed) return geometry\n\n  const cloned = clone(geometry)\n  cloned.isClosed = true\n\n  if (cloned.points.length > 1) {\n    // make sure the paths are formed properly\n    const points = cloned.points\n    const p0 = points[0]\n    let pn = points[points.length - 1]\n    while (vec2.distance(p0, pn) < (EPS * EPS)) {\n      points.pop()\n      if (points.length === 1) break\n      pn = points[points.length - 1]\n    }\n  }\n  return cloned\n}\n\nmodule.exports = close\n","const fromPoints = require('./fromPoints')\nconst toPoints = require('./toPoints')\n\nconst { equals } = require('../../maths/vec2')\n\n/**\n * Concatenate the given paths.\n *\n * If both contain the same point at the junction, merge it into one.\n * A concatenation of zero paths is an empty, open path.\n * A concatenation of one closed path to a series of open paths produces a closed path.\n * A concatenation of a path to a closed path is an error.\n * @param {...path2} paths - the paths to concatenate\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.concat\n *\n * @example\n * let newpath = concat(fromPoints({}, [[1, 2]]), fromPoints({}, [[3, 4]]))\n */\nconst concat = (...paths) => {\n  // Only the last path can be closed, producing a closed path.\n  let isClosed = false\n  let newpoints = []\n  paths.forEach((path, i) => {\n    const tmp = toPoints(path).slice()\n    if (newpoints.length > 0 && tmp.length > 0 && equals(tmp[0], newpoints[newpoints.length - 1])) tmp.shift()\n    if (tmp.length > 0 && isClosed) {\n      throw new Error(`Cannot concatenate to a closed path; check the ${i}th path`)\n    }\n    isClosed = path.isClosed\n    newpoints = newpoints.concat(tmp)\n  })\n  return fromPoints({ closed: isClosed }, newpoints)\n}\n\nmodule.exports = concat\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Represents a 2D geometry consisting of a list of ordered points.\n * @typedef {Object} path2\n * @property {Array} points - list of ordered points\n * @property {Boolean} isClosed - true if the path is closed where start and end points are the same\n * @property {mat4} transforms - transforms to apply to the points, see transform()\n */\n\n/**\n * Create an empty, open path.\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.create\n *\n * @example\n * let newpath = create()\n */\nconst create = (points) => {\n  if (points === undefined) {\n    points = []\n  }\n  return {\n    points: points,\n    isClosed: false,\n    transforms: mat4.create()\n  }\n}\n\nmodule.exports = create\n","const vec2 = require('../../maths/vec2')\n\nconst toPoints = require('./toPoints')\n\n/**\n  * Determine if the given paths are equal.\n  * For closed paths, this includes equality under point order rotation.\n  * @param {path2} a - the first path to compare\n  * @param {path2} b - the second path to compare\n  * @returns {Boolean}\n  * @alias module:modeling/geometries/path2.equals\n  */\nconst equals = (a, b) => {\n  if (a.isClosed !== b.isClosed) {\n    return false\n  }\n  if (a.points.length !== b.points.length) {\n    return false\n  }\n\n  const apoints = toPoints(a)\n  const bpoints = toPoints(b)\n\n  // closed paths might be equal under graph rotation\n  // so try comparison by rotating across all points\n  const length = apoints.length\n  let offset = 0\n  do {\n    let unequal = false\n    for (let i = 0; i < length; i++) {\n      if (!vec2.equals(apoints[i], bpoints[(i + offset) % length])) {\n        unequal = true\n        break\n      }\n    }\n    if (unequal === false) {\n      return true\n    }\n    // unequal open paths should only be compared once, never rotated\n    if (!a.isClosed) {\n      return false\n    }\n  } while (++offset < length)\n  return false\n}\n\nmodule.exports = equals\n","const mat4 = require('../../maths/mat4')\nconst vec2 = require('../../maths/vec2')\n\nconst create = require('./create')\n\n/**\n * Create a new path from the given compact binary data.\n * @param {TypedArray} data - compact binary data\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.fromCompactBinary\n */\nconst fromCompactBinary = (data) => {\n  if (data[0] !== 2) throw new Error('invalid compact binary data')\n\n  const created = create()\n\n  created.transforms = mat4.clone(data.slice(1, 17))\n\n  created.isClosed = !!data[17]\n\n  for (let i = 22; i < data.length; i += 2) {\n    const point = vec2.fromValues(data[i], data[i + 1])\n    created.points.push(point)\n  }\n  // transfer known properties, i.e. color\n  if (data[18] >= 0) {\n    created.color = [data[18], data[19], data[20], data[21]]\n  }\n  // TODO: how about custom properties or fields ?\n  return created\n}\n\nmodule.exports = fromCompactBinary\n","const { EPS } = require('../../maths/constants')\n\nconst vec2 = require('../../maths/vec2')\n\nconst close = require('./close')\nconst create = require('./create')\n\n/**\n * Create a new path from the given points.\n * The points must be provided an array of points,\n * where each point is an array of two numbers.\n * @param {Object} options - options for construction\n * @param {Boolean} [options.closed=false] - if the path should be open or closed\n * @param {Array} points - array of points (2D) from which to create the path\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.fromPoints\n *\n * @example:\n * my newpath = fromPoints({closed: true}, [[10, 10], [-10, 10]])\n */\nconst fromPoints = (options, points) => {\n  const defaults = { closed: false }\n  let { closed } = Object.assign({}, defaults, options)\n\n  let created = create()\n  created.points = points.map((point) => vec2.clone(point))\n\n  // check if first and last points are equal\n  if (created.points.length > 1) {\n    const p0 = created.points[0]\n    const pn = created.points[created.points.length - 1]\n    if (vec2.distance(p0, pn) < (EPS * EPS)) {\n      // and close automatically\n      closed = true\n    }\n  }\n  if (closed === true) created = close(created)\n\n  return created\n}\n\nmodule.exports = fromPoints\n","/**\n * Represents a 2D geometry consisting of a list of ordered points.\n * @see {@link path2} for data structure information.\n * @module modeling/geometries/path2\n *\n * @example\n * colorize([0,0,0,1], path2.fromPoints({ closed: true }, [[0,0], [4,0], [4,3]]))\n *\n * @example\n * {\n *   \"points\": [[0,0], [4,0], [4,3]],\n *   \"isClosed\": true,\n *   \"transforms\": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],\n *   \"color\": [0,0,0,1]\n * }\n */\nmodule.exports = {\n  appendArc: require('./appendArc'),\n  appendBezier: require('./appendBezier'),\n  appendPoints: require('./appendPoints'),\n  clone: require('./clone'),\n  close: require('./close'),\n  concat: require('./concat'),\n  create: require('./create'),\n  equals: require('./equals'),\n  fromPoints: require('./fromPoints'),\n  fromCompactBinary: require('./fromCompactBinary'),\n  isA: require('./isA'),\n  reverse: require('./reverse'),\n  toPoints: require('./toPoints'),\n  toString: require('./toString'),\n  toCompactBinary: require('./toCompactBinary'),\n  transform: require('./transform'),\n  validate: require('./validate')\n}\n","/**\n * Determine if the given object is a path2 geometry.\n * @param {Object} object - the object to interrogate\n * @returns {Boolean} true if the object matches a path2\n * @alias module:modeling/geometries/path2.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    // see create for the required attributes and types\n    if ('points' in object && 'transforms' in object && 'isClosed' in object) {\n      // NOTE: transforms should be a TypedArray, which has a read-only length\n      if (Array.isArray(object.points) && 'length' in object.transforms) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const clone = require('./clone')\n\n/**\n * Reverses the path so that the points are in the opposite order.\n * This swaps the left (interior) and right (exterior) edges.\n * @param {path2} geometry - the path to reverse\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.reverse\n *\n * @example\n * let newpath = reverse(mypath)\n */\nconst reverse = (geometry) => {\n  // NOTE: this only updates the order of the points\n  const cloned = clone(geometry)\n  cloned.points = geometry.points.slice().reverse()\n  return cloned\n}\n\nmodule.exports = reverse\n","/**\n * Produce a compact binary representation from the given path.\n * @param {path2} geometry - the path geometry\n * @returns {TypedArray} compact binary representation\n * @alias module:modeling/geometries/path2.toCompactBinary\n */\nconst toCompactBinary = (geometry) => {\n  const points = geometry.points\n  const transforms = geometry.transforms\n  let color = [-1, -1, -1, -1]\n  if (geometry.color) color = geometry.color\n\n  // FIXME why Float32Array?\n  const compacted = new Float32Array(1 + 16 + 1 + 4 + (points.length * 2)) // type + transforms + isClosed + color + points data\n\n  compacted[0] = 2 // type code: 0 => geom2, 1 => geom3 , 2 => path2\n\n  compacted[1] = transforms[0]\n  compacted[2] = transforms[1]\n  compacted[3] = transforms[2]\n  compacted[4] = transforms[3]\n  compacted[5] = transforms[4]\n  compacted[6] = transforms[5]\n  compacted[7] = transforms[6]\n  compacted[8] = transforms[7]\n  compacted[9] = transforms[8]\n  compacted[10] = transforms[9]\n  compacted[11] = transforms[10]\n  compacted[12] = transforms[11]\n  compacted[13] = transforms[12]\n  compacted[14] = transforms[13]\n  compacted[15] = transforms[14]\n  compacted[16] = transforms[15]\n\n  compacted[17] = geometry.isClosed ? 1 : 0\n\n  compacted[18] = color[0]\n  compacted[19] = color[1]\n  compacted[20] = color[2]\n  compacted[21] = color[3]\n\n  for (let j = 0; j < points.length; j++) {\n    const ci = j * 2 + 22\n    const point = points[j]\n    compacted[ci] = point[0]\n    compacted[ci + 1] = point[1]\n  }\n  // TODO: how about custom properties or fields ?\n  return compacted\n}\n\nmodule.exports = toCompactBinary\n","const applyTransforms = require('./applyTransforms')\n\n/**\n * Produces an array of points from the given geometry.\n * The returned array should not be modified as the data is shared with the geometry.\n * @param {path2} geometry - the geometry\n * @returns {Array} an array of points\n * @alias module:modeling/geometries/path2.toPoints\n *\n * @example\n * let sharedpoints = toPoints(geometry)\n */\nconst toPoints = (geometry) => applyTransforms(geometry).points\n\nmodule.exports = toPoints\n","const vec2 = require('../../maths/vec2')\n\nconst toPoints = require('./toPoints')\n\n/**\n * Create a string representing the contents of the given path.\n * @param {path2} geometry - the path\n * @returns {String} a representative string\n * @alias module:modeling/geometries/path2.toString\n *\n * @example\n * console.out(toString(path))\n */\nconst toString = (geometry) => {\n  const points = toPoints(geometry)\n  let result = 'path (' + points.length + ' points, ' + geometry.isClosed + '):\\n[\\n'\n  points.forEach((point) => {\n    result += '  ' + vec2.toString(point) + ',\\n'\n  })\n  result += ']\\n'\n  return result\n}\n\nmodule.exports = toString\n","const mat4 = require('../../maths/mat4')\n\n/**\n * Transform the given geometry using the given matrix.\n * This is a lazy transform of the points, as this function only adjusts the transforms.\n * The transforms are applied when accessing the points via toPoints().\n * @param {mat4} matrix - the matrix to transform with\n * @param {path2} geometry - the geometry to transform\n * @returns {path2} a new path\n * @alias module:modeling/geometries/path2.transform\n *\n * @example\n * let newpath = transform(fromZRotation(TAU / 8), path)\n */\nconst transform = (matrix, geometry) => {\n  const transforms = mat4.multiply(mat4.create(), matrix, geometry.transforms)\n  return Object.assign({}, geometry, { transforms })\n}\n\nmodule.exports = transform\n","const vec2 = require('../../maths/vec2')\nconst isA = require('./isA')\n\n/**\n * Determine if the given object is a valid path2.\n * Checks for valid data points, and duplicate points.\n *\n * **If the geometry is not valid, an exception will be thrown with details of the geometry error.**\n *\n * @param {Object} object - the object to interrogate\n * @throws {Error} error if the geometry is not valid\n * @alias module:modeling/geometries/path2.validate\n */\nconst validate = (object) => {\n  if (!isA(object)) {\n    throw new Error('invalid path2 structure')\n  }\n\n  // check for duplicate points\n  if (object.points.length > 1) {\n    for (let i = 0; i < object.points.length; i++) {\n      if (vec2.equals(object.points[i], object.points[(i + 1) % object.points.length])) {\n        throw new Error(`path2 duplicate points ${object.points[i]}`)\n      }\n    }\n  }\n\n  // check for infinity, nan\n  object.points.forEach((point) => {\n    if (!point.every(Number.isFinite)) {\n      throw new Error(`path2 invalid point ${point}`)\n    }\n  })\n\n  // check transforms\n  if (!object.transforms.every(Number.isFinite)) {\n    throw new Error(`path2 invalid transforms ${object.transforms}`)\n  }\n}\n\nmodule.exports = validate\n","const measureArea = require('./measureArea')\nconst flip = require('./flip')\n\n/**\n * Determine if the given points are inside the given polygon.\n *\n * @param {Array} points - a list of points, where each point is an array with X and Y values\n * @param {poly2} polygon - a 2D polygon\n * @return {Integer} 1 if all points are inside, 0 if some or none are inside\n * @alias module:modeling/geometries/poly2.arePointsInside\n */\nconst arePointsInside = (points, polygon) => {\n  if (points.length === 0) return 0 // nothing to check\n\n  const vertices = polygon.vertices\n  if (vertices.length < 3) return 0 // nothing can be inside an empty polygon\n\n  if (measureArea(polygon) < 0) {\n    polygon = flip(polygon) // CCW is required\n  }\n\n  const sum = points.reduce((acc, point) => acc + isPointInside(point, vertices), 0)\n  return sum === points.length ? 1 : 0\n}\n\n/*\n * Determine if the given point is inside the polygon.\n *\n * @see http://erich.realtimerendering.com/ptinpoly/ (Crossings Test)\n * @param {Array} point - an array with X and Y values\n * @param {Array} polygon - a list of points, where each point is an array with X and Y values\n * @return {Integer} 1 if the point is inside, 0 if outside\n */\nconst isPointInside = (point, polygon) => {\n  const numverts = polygon.length\n\n  const tx = point[0]\n  const ty = point[1]\n\n  let vtx0 = polygon[numverts - 1]\n  let vtx1 = polygon[0]\n\n  let yflag0 = (vtx0[1] > ty)\n\n  let insideFlag = 0\n\n  let i = 0\n  for (let j = (numverts + 1); --j;) {\n    /*\n     * check if Y endpoints straddle (are on opposite sides) of point's Y\n     * if so, +X ray could intersect this edge.\n     */\n    const yflag1 = (vtx1[1] > ty)\n    if (yflag0 !== yflag1) {\n      /*\n       * check if X endpoints are on same side of the point's X\n       * if so, it's easy to test if edge hits or misses.\n       */\n      const xflag0 = (vtx0[0] > tx)\n      const xflag1 = (vtx1[0] > tx)\n      if (xflag0 && xflag1) {\n        /* if edge's X values are both right of the point, then the point must be inside */\n        insideFlag = !insideFlag\n      } else {\n        /*\n         * if X endpoints straddle the point, then\n         * the compute intersection of polygon edge with +X ray\n         * if intersection >= point's X then the +X ray hits it.\n         */\n        if ((vtx1[0] - (vtx1[1] - ty) * (vtx0[0] - vtx1[0]) / (vtx0[1] - vtx1[1])) >= tx) {\n          insideFlag = !insideFlag\n        }\n      }\n    }\n    /* move to next pair of vertices, retaining info as possible */\n    yflag0 = yflag1\n    vtx0 = vtx1\n    vtx1 = polygon[++i]\n  }\n  return insideFlag\n}\n\n/*\n * > 0 : p2 is left of the line p0 -> p1\n * = 0 : p2 is on the line p0 -> p1\n * < 0 : p2 is right of the line p0 -> p1\n */\nconst isLeft = (p0, p1, p2) => (p1[0] - p0[0]) * (p2[1] - p0[1]) - (p2[0] - p0[0]) * (p1[1] - p0[1])\n\nmodule.exports = arePointsInside\n","/**\n * Represents a convex 2D polygon consisting of a list of ordered vertices.\n * @typedef {Object} poly2\n * @property {Array} vertices - list of ordered vertices (2D)\n */\n\n/**\n * Creates a new polygon with initial values.\n *\n * @param {Array} [vertices] - list of vertices (2D)\n * @returns {poly2} a new polygon\n * @alias module:modeling/geometries/poly2.create\n *\n * @example\n * let polygon = create()\n */\nconst create = (vertices) => {\n  if (vertices === undefined || vertices.length < 3) {\n    vertices = [] // empty contents\n  }\n  return { vertices: vertices }\n}\n\nmodule.exports = create\n","const create = require('./create')\n\n/**\n * Flip the give polygon, rotating the opposite direction.\n *\n * @param {poly2} polygon - the polygon to flip\n * @returns {poly2} a new polygon\n * @alias module:modeling/geometries/poly2.flip\n */\nconst flip = (polygon) => {\n  const vertices = polygon.vertices.slice().reverse()\n  return create(vertices)\n}\n\nmodule.exports = flip\n","/**\n * Represents a 2D polygon consisting of a list of ordered vertices.\n * @see {@link poly2} for data structure information.\n * @module modeling/geometries/poly2\n *\n * @example\n * poly2.create([[0,0], [4,0], [4,3]])\n *\n * @example\n * {\"vertices\": [[0,0], [4,0], [4,3]]}\n */\nmodule.exports = {\n  arePointsInside: require('./arePointsInside'),\n  create: require('./create'),\n  flip: require('./flip'),\n  measureArea: require('./measureArea')\n}\n","/**\n * Measure the area under the given polygon.\n *\n * @param {poly2} polygon - the polygon to measure\n * @return {Number} the area of the polygon\n * @alias module:modeling/geometries/poly2.measureArea\n */\nconst area = require('../../maths/utils/area')\n\nconst measureArea = (polygon) => area(polygon.vertices)\n\nmodule.exports = measureArea\n","const create = require('./create')\n\nconst vec3 = require('../../maths/vec3')\n\n/**\n * Create a deep clone of the given polygon\n *\n * @param {poly3} [out] - receiving polygon\n * @param {poly3} polygon - polygon to clone\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.clone\n */\nconst clone = (...params) => {\n  let out\n  let poly3\n  if (params.length === 1) {\n    out = create()\n    poly3 = params[0]\n  } else {\n    out = params[0]\n    poly3 = params[1]\n  }\n  // deep clone of vertices\n  out.vertices = poly3.vertices.map((vec) => vec3.clone(vec))\n  return out\n}\n\nmodule.exports = clone\n","\n/**\n * Represents a convex 3D polygon. The vertices used to initialize a polygon must\n * be coplanar and form a convex shape. The vertices do not have to be `vec3`\n * instances but they must behave similarly.\n * @typedef {Object} poly3\n * @property {Array} vertices - list of ordered vertices (3D)\n */\n\n/**\n * Creates a new 3D polygon with initial values.\n *\n * @param {Array} [vertices] - a list of vertices (3D)\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.create\n */\nconst create = (vertices) => {\n  if (vertices === undefined || vertices.length < 3) {\n    vertices = [] // empty contents\n  }\n  return { vertices }\n}\n\nmodule.exports = create\n","const vec3 = require('../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Create a polygon from the given points.\n *\n * @param {Array} points - list of points (3D)\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.fromPoints\n *\n * @example\n * const points = [\n *   [0,  0, 0],\n *   [0, 10, 0],\n *   [0, 10, 10]\n * ]\n * const polygon = fromPoints(points)\n */\nconst fromPoints = (points) => {\n  const vertices = points.map((point) => vec3.clone(point))\n  return create(vertices)\n}\n\nmodule.exports = fromPoints\n","const create = require('./create')\n\n/**\n * Create a polygon from the given vertices and plane.\n * NOTE: No checks are performed on the parameters.\n * @param {Array} vertices - list of vertices (3D)\n * @param {plane} plane - plane of the polygon\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.fromPointsAndPlane\n */\nconst fromPointsAndPlane = (vertices, plane) => {\n  const poly = create(vertices)\n  poly.plane = plane // retain the plane for later use\n  return poly\n}\n\nmodule.exports = fromPointsAndPlane\n","/**\n * Represents a convex 3D polygon consisting of a list of ordered vertices.\n * @see {@link poly3} for data structure information.\n * @module modeling/geometries/poly3\n *\n * @example\n * poly3.create([[0,0,0], [4,0,0], [4,3,12]])\n *\n * @example\n * {\"vertices\": [[0,0,0], [4,0,0], [4,3,12]]}\n */\nmodule.exports = {\n  clone: require('./clone'),\n  create: require('./create'),\n  fromPoints: require('./fromPoints'),\n  fromPointsAndPlane: require('./fromPointsAndPlane'),\n  invert: require('./invert'),\n  isA: require('./isA'),\n  isConvex: require('./isConvex'),\n  measureArea: require('./measureArea'),\n  measureBoundingBox: require('./measureBoundingBox'),\n  measureBoundingSphere: require('./measureBoundingSphere'),\n  measureSignedVolume: require('./measureSignedVolume'),\n  plane: require('./plane'),\n  toPoints: require('./toPoints'),\n  toString: require('./toString'),\n  transform: require('./transform'),\n  validate: require('./validate')\n}\n","const plane = require('../../maths/plane')\nconst create = require('./create')\n\n/**\n * Invert the give polygon to face the opposite direction.\n *\n * @param {poly3} polygon - the polygon to invert\n * @returns {poly3} a new poly3\n * @alias module:modeling/geometries/poly3.invert\n */\nconst invert = (polygon) => {\n  const vertices = polygon.vertices.slice().reverse()\n  const inverted = create(vertices)\n  if (polygon.plane) {\n    // Flip existing plane to save recompute\n    inverted.plane = plane.flip(plane.create(), polygon.plane)\n  }\n  return inverted\n}\n\nmodule.exports = invert\n","/**\n * Determine if the given object is a polygon.\n * @param {Object} object - the object to interrogate\n * @returns {Boolean} true if the object matches a poly3\n * @alias module:modeling/geometries/poly3.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('vertices' in object) {\n      if (Array.isArray(object.vertices)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const plane = require('../../maths/plane')\nconst vec3 = require('../../maths/vec3')\n\n/**\n * Check whether the given polygon is convex.\n * @param {poly3} polygon - the polygon to interrogate\n * @returns {Boolean} true if convex\n * @alias module:modeling/geometries/poly3.isConvex\n */\nconst isConvex = (polygon) => areVerticesConvex(polygon.vertices)\n\nconst areVerticesConvex = (vertices) => {\n  const numvertices = vertices.length\n  if (numvertices > 2) {\n    // note: plane ~= normal point\n    const normal = plane.fromPoints(plane.create(), ...vertices)\n    let prevprevpos = vertices[numvertices - 2]\n    let prevpos = vertices[numvertices - 1]\n    for (let i = 0; i < numvertices; i++) {\n      const pos = vertices[i]\n      if (!isConvexPoint(prevprevpos, prevpos, pos, normal)) {\n        return false\n      }\n      prevprevpos = prevpos\n      prevpos = pos\n    }\n  }\n  return true\n}\n\n// calculate whether three points form a convex corner\n//  prevpoint, point, nextpoint: the 3 coordinates (Vector3D instances)\n//  normal: the normal vector of the plane\nconst isConvexPoint = (prevpoint, point, nextpoint, normal) => {\n  const crossproduct = vec3.cross(\n    vec3.create(),\n    vec3.subtract(vec3.create(), point, prevpoint),\n    vec3.subtract(vec3.create(), nextpoint, point)\n  )\n  const crossdotnormal = vec3.dot(crossproduct, normal)\n  return crossdotnormal >= 0\n}\n\nmodule.exports = isConvex\n","const plane = require('./plane')\n\n/**\n * Measure the area of the given polygon.\n * @see 2000 softSurfer http://geomalgorithms.com\n * @param {poly3} polygon - the polygon to measure\n * @return {Number} area of the polygon\n * @alias module:modeling/geometries/poly3.measureArea\n */\nconst measureArea = (polygon) => {\n  const n = polygon.vertices.length\n  if (n < 3) {\n    return 0 // degenerate polygon\n  }\n  const vertices = polygon.vertices\n\n  // calculate a normal vector\n  const normal = plane(polygon)\n\n  // determine direction of projection\n  const ax = Math.abs(normal[0])\n  const ay = Math.abs(normal[1])\n  const az = Math.abs(normal[2])\n\n  if (ax + ay + az === 0) {\n    // normal does not exist\n    return 0\n  }\n\n  let coord = 3 // ignore Z coordinates\n  if ((ax > ay) && (ax > az)) {\n    coord = 1 // ignore X coordinates\n  } else\n  if (ay > az) {\n    coord = 2 // ignore Y coordinates\n  }\n\n  let area = 0\n  let h = 0\n  let i = 1\n  let j = 2\n  switch (coord) {\n    case 1: // ignore X coordinates\n      // compute area of 2D projection\n      for (i = 1; i < n; i++) {\n        h = i - 1\n        j = (i + 1) % n\n        area += (vertices[i][1] * (vertices[j][2] - vertices[h][2]))\n      }\n      area += (vertices[0][1] * (vertices[1][2] - vertices[n - 1][2]))\n      // scale to get area\n      area /= (2 * normal[0])\n      break\n\n    case 2: // ignore Y coordinates\n      // compute area of 2D projection\n      for (i = 1; i < n; i++) {\n        h = i - 1\n        j = (i + 1) % n\n        area += (vertices[i][2] * (vertices[j][0] - vertices[h][0]))\n      }\n      area += (vertices[0][2] * (vertices[1][0] - vertices[n - 1][0]))\n      // scale to get area\n      area /= (2 * normal[1])\n      break\n\n    case 3: // ignore Z coordinates\n    default:\n      // compute area of 2D projection\n      for (i = 1; i < n; i++) {\n        h = i - 1\n        j = (i + 1) % n\n        area += (vertices[i][0] * (vertices[j][1] - vertices[h][1]))\n      }\n      area += (vertices[0][0] * (vertices[1][1] - vertices[n - 1][1]))\n      // scale to get area\n      area /= (2 * normal[2])\n      break\n  }\n  return area\n}\n\nmodule.exports = measureArea\n","const vec3 = require('../../maths/vec3')\n\n/**\n * @param {poly3} polygon - the polygon to measure\n * @returns {Array} an array of two vectors (3D);  minimum and maximum coordinates\n * @alias module:modeling/geometries/poly3.measureBoundingBox\n */\nconst measureBoundingBox = (polygon) => {\n  const vertices = polygon.vertices\n  const numvertices = vertices.length\n  const min = numvertices === 0 ? vec3.create() : vec3.clone(vertices[0])\n  const max = vec3.clone(min)\n  for (let i = 1; i < numvertices; i++) {\n    vec3.min(min, min, vertices[i])\n    vec3.max(max, max, vertices[i])\n  }\n  return [min, max]\n}\n\nmodule.exports = measureBoundingBox\n","const vec3 = require('../../maths/vec3')\nconst vec4 = require('../../maths/vec4')\n\nconst cache = new WeakMap()\n\n/**\n * Measure the bounding sphere of the given polygon.\n * @param {poly3} polygon - the polygon to measure\n * @returns {vec4} the computed bounding sphere; center point (3D) and radius\n * @alias module:modeling/geometries/poly3.measureBoundingSphere\n */\nconst measureBoundingSphere = (polygon) => {\n  let boundingSphere = cache.get(polygon)\n  if (boundingSphere) return boundingSphere\n\n  const vertices = polygon.vertices\n  const out = vec4.create()\n\n  if (vertices.length === 0) {\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    out[3] = 0\n    return out\n  }\n\n  // keep a list of min/max vertices by axis\n  let minx = vertices[0]\n  let miny = minx\n  let minz = minx\n  let maxx = minx\n  let maxy = minx\n  let maxz = minx\n\n  vertices.forEach((v) => {\n    if (minx[0] > v[0]) minx = v\n    if (miny[1] > v[1]) miny = v\n    if (minz[2] > v[2]) minz = v\n    if (maxx[0] < v[0]) maxx = v\n    if (maxy[1] < v[1]) maxy = v\n    if (maxz[2] < v[2]) maxz = v\n  })\n\n  out[0] = (minx[0] + maxx[0]) * 0.5 // center of sphere\n  out[1] = (miny[1] + maxy[1]) * 0.5\n  out[2] = (minz[2] + maxz[2]) * 0.5\n  const x = out[0] - maxx[0]\n  const y = out[1] - maxy[1]\n  const z = out[2] - maxz[2]\n  out[3] = Math.sqrt(x * x + y * y + z * z) // radius of sphere\n\n  cache.set(polygon, out)\n\n  return out\n}\n\nmodule.exports = measureBoundingSphere\n","const vec3 = require('../../maths/vec3')\n\n/**\n * Measure the signed volume of the given polygon, which must be convex.\n * The volume is that formed by the tetrahedron connected to the axis [0,0,0],\n * and will be positive or negative based on the rotation of the vertices.\n * @see http://chenlab.ece.cornell.edu/Publication/Cha/icip01_Cha.pdf\n * @param {poly3} polygon - the polygon to measure\n * @return {Number} volume of the polygon\n * @alias module:modeling/geometries/poly3.measureSignedVolume\n */\nconst measureSignedVolume = (polygon) => {\n  let signedVolume = 0\n  const vertices = polygon.vertices\n  // calculate based on triangular polygons\n  const cross = vec3.create()\n  for (let i = 0; i < vertices.length - 2; i++) {\n    vec3.cross(cross, vertices[i + 1], vertices[i + 2])\n    signedVolume += vec3.dot(vertices[0], cross)\n  }\n  signedVolume /= 6\n  return signedVolume\n}\n\nmodule.exports = measureSignedVolume\n","const mplane = require('../../maths/plane/')\n\nconst plane = (polygon) => {\n  if (!polygon.plane) {\n    polygon.plane = mplane.fromPoints(mplane.create(), ...polygon.vertices)\n  }\n  return polygon.plane\n}\n\nmodule.exports = plane\n","/**\n * Return the given polygon as a list of points.\n * NOTE: The returned array should not be modified as the points are shared with the geometry.\n * @param {poly3} polygon - the polygon\n * @return {Array} list of points (3D)\n * @alias module:modeling/geometries/poly3.toPoints\n */\nconst toPoints = (polygon) => polygon.vertices\n\nmodule.exports = toPoints\n","const vec3 = require('../../maths/vec3/')\n\n/**\n * @param {poly3} polygon - the polygon to measure\n * @return {String} the string representation\n * @alias module:modeling/geometries/poly3.toString\n */\nconst toString = (polygon) => {\n  let result = 'poly3: vertices: ['\n  polygon.vertices.forEach((vertex) => {\n    result += `${vec3.toString(vertex)}, `\n  })\n  result += ']'\n  return result\n}\n\nmodule.exports = toString\n","const mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Transform the given polygon using the given matrix.\n * @param {mat4} matrix - the matrix to transform with\n * @param {poly3} polygon - the polygon to transform\n * @returns {poly3} a new polygon\n * @alias module:modeling/geometries/poly3.transform\n */\nconst transform = (matrix, polygon) => {\n  const vertices = polygon.vertices.map((vertex) => vec3.transform(vec3.create(), vertex, matrix))\n  if (mat4.isMirroring(matrix)) {\n    // reverse the order to preserve the orientation\n    vertices.reverse()\n  }\n  return create(vertices)\n}\n\nmodule.exports = transform\n","const signedDistanceToPoint = require('../../maths/plane/signedDistanceToPoint')\nconst { NEPS } = require('../../maths/constants')\nconst vec3 = require('../../maths/vec3')\nconst isA = require('./isA')\nconst isConvex = require('./isConvex')\nconst measureArea = require('./measureArea')\nconst plane = require('./plane')\n\n/**\n * Determine if the given object is a valid polygon.\n * Checks for valid data structure, convex polygons, and duplicate points.\n *\n * **If the geometry is not valid, an exception will be thrown with details of the geometry error.**\n *\n * @param {Object} object - the object to interrogate\n * @throws {Error} error if the geometry is not valid\n * @alias module:modeling/geometries/poly3.validate\n */\nconst validate = (object) => {\n  if (!isA(object)) {\n    throw new Error('invalid poly3 structure')\n  }\n\n  // check for empty polygon\n  if (object.vertices.length < 3) {\n    throw new Error(`poly3 not enough vertices ${object.vertices.length}`)\n  }\n  // check area\n  if (measureArea(object) <= 0) {\n    throw new Error('poly3 area must be greater than zero')\n  }\n\n  // check for duplicate points\n  for (let i = 0; i < object.vertices.length; i++) {\n    if (vec3.equals(object.vertices[i], object.vertices[(i + 1) % object.vertices.length])) {\n      throw new Error(`poly3 duplicate vertex ${object.vertices[i]}`)\n    }\n  }\n\n  // check convexity\n  if (!isConvex(object)) {\n    throw new Error('poly3 must be convex')\n  }\n\n  // check for infinity, nan\n  object.vertices.forEach((vertex) => {\n    if (!vertex.every(Number.isFinite)) {\n      throw new Error(`poly3 invalid vertex ${vertex}`)\n    }\n  })\n\n  // check that points are co-planar\n  if (object.vertices.length > 3) {\n    const normal = plane(object)\n    object.vertices.forEach((vertex) => {\n      const dist = Math.abs(signedDistanceToPoint(normal, vertex))\n      if (dist > NEPS) {\n        throw new Error(`poly3 must be coplanar: vertex ${vertex} distance ${dist}`)\n      }\n    })\n  }\n}\n\nmodule.exports = validate\n","module.exports = {\n  colors: require('./colors'),\n  curves: require('./curves'),\n  geometries: require('./geometries'),\n  maths: require('./maths'),\n  measurements: require('./measurements'),\n  primitives: require('./primitives'),\n  text: require('./text'),\n  utils: require('./utils'),\n\n  booleans: require('./operations/booleans'),\n  expansions: require('./operations/expansions'),\n  extrusions: require('./operations/extrusions'),\n  hulls: require('./operations/hulls'),\n  modifiers: require('./operations/modifiers'),\n  transforms: require('./operations/transforms')\n}\n","const mat4 = require('./mat4')\n\nconst vec2 = require('./vec2')\nconst vec3 = require('./vec3')\n\n/*\n * Class OrthoNormalBasis\n * Reprojects points on a 3D plane onto a 2D plane\n * or from a 2D plane back onto the 3D plane\n * @param  {plane} plane\n * @param  {vec3} rightvector\n */\nconst OrthoNormalBasis = function (plane, rightvector) {\n  if (arguments.length < 2) {\n    // choose an arbitrary right hand vector, making sure it is somewhat orthogonal to the plane normal:\n    rightvector = vec3.orthogonal(vec3.create(), plane)\n  }\n  this.v = vec3.normalize(vec3.create(), vec3.cross(vec3.create(), plane, rightvector))\n  this.u = vec3.cross(vec3.create(), this.v, plane)\n  this.plane = plane\n  this.planeorigin = vec3.scale(vec3.create(), plane, plane[3])\n}\n\n// Get an orthonormal basis for the standard XYZ planes.\n// Parameters: the names of two 3D axes. The 2d x axis will map to the first given 3D axis, the 2d y\n// axis will map to the second.\n// Prepend the axis with a \"-\" to invert the direction of this axis.\n// For example: OrthoNormalBasis.GetCartesian(\"-Y\",\"Z\")\n//   will return an orthonormal basis where the 2d X axis maps to the 3D inverted Y axis, and\n//   the 2d Y axis maps to the 3D Z axis.\nOrthoNormalBasis.GetCartesian = function (xaxisid, yaxisid) {\n  const axisid = xaxisid + '/' + yaxisid\n  let planenormal, rightvector\n  if (axisid === 'X/Y') {\n    planenormal = [0, 0, 1]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Y/-X') {\n    planenormal = [0, 0, 1]\n    rightvector = [0, 1, 0]\n  } else if (axisid === '-X/-Y') {\n    planenormal = [0, 0, 1]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Y/X') {\n    planenormal = [0, 0, 1]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-X/Y') {\n    planenormal = [0, 0, -1]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Y/-X') {\n    planenormal = [0, 0, -1]\n    rightvector = [0, -1, 0]\n  } else if (axisid === 'X/-Y') {\n    planenormal = [0, 0, -1]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Y/X') {\n    planenormal = [0, 0, -1]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'X/Z') {\n    planenormal = [0, -1, 0]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Z/-X') {\n    planenormal = [0, -1, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === '-X/-Z') {\n    planenormal = [0, -1, 0]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Z/X') {\n    planenormal = [0, -1, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === '-X/Z') {\n    planenormal = [0, 1, 0]\n    rightvector = [-1, 0, 0]\n  } else if (axisid === '-Z/-X') {\n    planenormal = [0, 1, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === 'X/-Z') {\n    planenormal = [0, 1, 0]\n    rightvector = [1, 0, 0]\n  } else if (axisid === 'Z/X') {\n    planenormal = [0, 1, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === 'Y/Z') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'Z/-Y') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 0, 1]\n  } else if (axisid === '-Y/-Z') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-Z/Y') {\n    planenormal = [1, 0, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === '-Y/Z') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, -1, 0]\n  } else if (axisid === '-Z/-Y') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 0, -1]\n  } else if (axisid === 'Y/-Z') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 1, 0]\n  } else if (axisid === 'Z/Y') {\n    planenormal = [-1, 0, 0]\n    rightvector = [0, 0, 1]\n  } else {\n    throw new Error('OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.')\n  }\n  return new OrthoNormalBasis(new Plane(new Vector3D(planenormal), 0), new Vector3D(rightvector))\n}\n\n/*\n// test code for OrthoNormalBasis.GetCartesian()\nOrthoNormalBasis.GetCartesian_Test=function() {\n  let axisnames=[\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"];\n  let axisvectors=[[1,0,0], [0,1,0], [0,0,1], [-1,0,0], [0,-1,0], [0,0,-1]];\n  for(let axis1=0; axis1 < 3; axis1++) {\n    for(let axis1inverted=0; axis1inverted < 2; axis1inverted++) {\n      let axis1name=axisnames[axis1+3*axis1inverted];\n      let axis1vector=axisvectors[axis1+3*axis1inverted];\n      for(let axis2=0; axis2 < 3; axis2++) {\n        if(axis2 != axis1) {\n          for(let axis2inverted=0; axis2inverted < 2; axis2inverted++) {\n            let axis2name=axisnames[axis2+3*axis2inverted];\n            let axis2vector=axisvectors[axis2+3*axis2inverted];\n            let orthobasis=OrthoNormalBasis.GetCartesian(axis1name, axis2name);\n            let test1=orthobasis.to3D(new Vector2D([1,0]));\n            let test2=orthobasis.to3D(new Vector2D([0,1]));\n            let expected1=new Vector3D(axis1vector);\n            let expected2=new Vector3D(axis2vector);\n            let d1=test1.distanceTo(expected1);\n            let d2=test2.distanceTo(expected2);\n            if( (d1 > 0.01) || (d2 > 0.01) ) {\n              throw new Error(\"Wrong!\");\n  }}}}}}\n  throw new Error(\"OK\");\n};\n*/\n\n// The z=0 plane, with the 3D x and y vectors mapped to the 2D x and y vector\nOrthoNormalBasis.Z0Plane = function () {\n  const plane = new Plane(new Vector3D([0, 0, 1]), 0)\n  return new OrthoNormalBasis(plane, new Vector3D([1, 0, 0]))\n}\n\nOrthoNormalBasis.prototype = {\n\n  getProjectionMatrix: function () {\n    return mat4.fromValues(\n      this.u[0], this.v[0], this.plane[0], 0,\n      this.u[1], this.v[1], this.plane[1], 0,\n      this.u[2], this.v[2], this.plane[2], 0,\n      0, 0, -this.plane[3], 1\n    )\n  },\n\n  getInverseProjectionMatrix: function () {\n    const p = vec3.scale(vec3.create(), this.plane, this.plane[3])\n    return mat4.fromValues(\n      this.u[0], this.u[1], this.u[2], 0,\n      this.v[0], this.v[1], this.v[2], 0,\n      this.plane[0], this.plane[1], this.plane[2], 0,\n      p[0], p[1], p[2], 1\n    )\n  },\n\n  to2D: function (point) {\n    return vec2.fromValues(vec3.dot(point, this.u), vec3.dot(point, this.v))\n  },\n\n  to3D: function (point) {\n    const v1 = vec3.scale(vec3.create(), this.u, point[0])\n    const v2 = vec3.scale(vec3.create(), this.v, point[1])\n\n    const v3 = vec3.add(v1, v1, this.planeorigin)\n    const v4 = vec3.add(v2, v2, v3)\n    return v4\n  },\n\n  line3Dto2D: function (line3d) {\n    const a = line3d.point\n    const b = line3d.direction.plus(a)\n    const a2d = this.to2D(a)\n    const b2d = this.to2D(b)\n    return Line2D.fromPoints(a2d, b2d)\n  },\n\n  line2Dto3D: function (line2d) {\n    const a = line2d.origin()\n    const b = line2d.direction().plus(a)\n    const a3d = this.to3D(a)\n    const b3d = this.to3D(b)\n    return Line3D.fromPoints(a3d, b3d)\n  },\n\n  transform: function (matrix4x4) {\n    // todo: this may not work properly in case of mirroring\n    const newplane = this.plane.transform(matrix4x4)\n    const rightpointTransformed = this.u.transform(matrix4x4)\n    const originTransformed = new Vector3D(0, 0, 0).transform(matrix4x4)\n    const newrighthandvector = rightpointTransformed.minus(originTransformed)\n    const newbasis = new OrthoNormalBasis(newplane, newrighthandvector)\n    return newbasis\n  }\n}\n\nmodule.exports = OrthoNormalBasis\n","/**\n * The resolution of space, currently one hundred nanometers.\n * This should be 1 / EPS.\n * @alias module:modeling/maths.spatialResolution\n * @default\n */\nconst spatialResolution = 1e5\n\n/**\n * Epsilon used during determination of near zero distances.\n * This should be 1 / spacialResolution.\n * @default\n * @alias module:modeling/maths.EPS\n */\nconst EPS = 1e-5\n\n/**\n * Smaller epsilon used for measuring near zero distances.\n * @default\n * @alias module:modeling/maths.NEPS\n */\nconst NEPS = 1e-13\n// NEPS is derived from a series of tests to determine the optimal precision\n// for comparing coplanar polygons, as provided by the sphere primitive at high\n// segmentation. NEPS is for 64 bit Number values.\n\n/**\n * The TAU property represents the ratio of the circumference of a circle to its radius.\n * Approximately 6.28318530717958647692\n * @default\n * @example\n * const { TAU } = require('@jscad/modeling').maths.constants\n */\nconst TAU = Math.PI * 2\n\nmodule.exports = {\n  EPS,\n  NEPS,\n  TAU,\n  spatialResolution\n}\n","/**\n * Maths are computational units for fundamental Euclidean geometry. All maths operate upon array data structures.\n * Note: Maths data structures are considered immutable, so never change the contents directly.\n * @see Most computations are based upon the glMatrix library (glmatrix.net)\n * @module modeling/maths\n * @example\n * const { constants, line2, mat4, vec2, vec3 } = require('@jscad/modeling').maths\n\n */\nmodule.exports = {\n  constants: require('./constants'),\n  line2: require('./line2'),\n  line3: require('./line3'),\n  mat4: require('./mat4'),\n  plane: require('./plane'),\n  utils: require('./utils'),\n  vec2: require('./vec2'),\n  vec3: require('./vec3'),\n  vec4: require('./vec4')\n}\n","const create = require('./create')\n\n/**\n * Create a clone of the given line.\n *\n * @param {line2} line - line to clone\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.clone\n */\nconst clone = (line) => {\n  const out = create()\n  out[0] = line[0]\n  out[1] = line[1]\n  out[2] = line[2]\n  return out\n}\n\nmodule.exports = clone\n","const vec2 = require('../vec2')\n\nconst direction = require('./direction')\nconst origin = require('./origin')\n\n/**\n * Determine the closest point on the given line to the given point.\n *\n * @param {line2} line - line of reference\n * @param {vec2} point - point of reference\n * @returns {vec2} closest point\n * @alias module:modeling/maths/line2.closestPoint\n */\nconst closestPoint = (line, point) => {\n  // linear function of AB\n  const a = origin(line)\n  const b = direction(line)\n  const m1 = (b[1] - a[1]) / (b[0] - a[0])\n  const t1 = a[1] - m1 * a[0]\n  // linear function of PC\n  const m2 = -1 / m1 // perpendicular\n  const t2 = point[1] - m2 * point[0]\n  // c.x * m1 + t1 === c.x * m2 + t2\n  const x = (t2 - t1) / (m1 - m2)\n  const y = m1 * x + t1\n\n  const closest = vec2.fromValues(x, y)\n  return closest\n}\n\nmodule.exports = closestPoint\n","/**\n * Copy the given line to the receiving line.\n *\n * @param {line2} out - receiving line\n * @param {line2} line - line to copy\n * @returns {line2} out\n * @alias module:modeling/maths/line2.copy\n */\nconst copy = (out, line) => {\n  out[0] = line[0]\n  out[1] = line[1]\n  out[2] = line[2]\n  return out\n}\n\nmodule.exports = copy\n","/**\n * Represents a unbounded line in 2D space, positioned at a point of origin.\n * A line is parametrized by a normal vector (perpendicular to the line, rotated 90 degrees counter clockwise) and\n * distance from the origin.\n *\n * Equation: A Point (P) is on Line (L) if dot(L.normal, P) == L.distance\n *\n * The contents of the array are a normal [0,1] and a distance [2].\n * @typedef {Array} line2\n */\n\n/**\n * Create a line, positioned at 0,0, and running along the X axis.\n *\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.create\n */\nconst create = () => [0, 1, 0] // normal and distance\n\nmodule.exports = create\n","const vec2 = require('../vec2')\n\n/**\n * Return the direction of the given line.\n *\n * @param {line2} line - line of reference\n * @return {vec2} a vector in the direction of the line\n * @alias module:modeling/maths/line2.direction\n */\nconst direction = (line) => {\n  const vector = vec2.normal(vec2.create(), line)\n  vec2.negate(vector, vector)\n  return vector\n}\n\nmodule.exports = direction\n","const vec2 = require('../vec2')\n\n/**\n * Calculate the distance (positive) between the given point and line.\n *\n * @param {line2} line - line of reference\n * @param {vec2} point - point of reference\n * @return {Number} distance between line and point\n * @alias module:modeling/maths/line2.distanceToPoint\n */\nconst distanceToPoint = (line, point) => {\n  let distance = vec2.dot(point, line)\n  distance = Math.abs(distance - line[2])\n  return distance\n}\n\nmodule.exports = distanceToPoint\n","/**\n * Compare the given lines for equality.\n *\n * @param {line2} line1 - first line to compare\n * @param {line2} line2 - second line to compare\n * @return {Boolean} true if lines are equal\n * @alias module:modeling/maths/line2.equals\n */\nconst equals = (line1, line2) => (line1[0] === line2[0]) && (line1[1] === line2[1] && (line1[2] === line2[2]))\n\nmodule.exports = equals\n","const vec2 = require('../vec2')\n\n/**\n * Create a new line that passes through the given points.\n *\n * @param {line2} out - receiving line\n * @param {vec2} point1 - start point of the line\n * @param {vec2} point2 - end point of the line\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.fromPoints\n */\nconst fromPoints = (out, point1, point2) => {\n  const vector = vec2.subtract(vec2.create(), point2, point1) // directional vector\n\n  vec2.normal(vector, vector)\n  vec2.normalize(vector, vector) // normalized\n\n  const distance = vec2.dot(point1, vector)\n\n  out[0] = vector[0]\n  out[1] = vector[1]\n  out[2] = distance\n  return out\n}\n\nmodule.exports = fromPoints\n","const create = require('./create')\n\n/**\n * Creates a new line initialized with the given values.\n *\n * @param {Number} x - X coordinate of the unit normal\n * @param {Number} y - Y coordinate of the unit normal\n * @param {Number} d - distance of the line from [0,0]\n * @returns {line2} a new unbounded line\n * @alias module:modeling/maths/line2.fromValues\n */\nconst fromValues = (x, y, d) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  out[2] = d\n  return out\n}\n\nmodule.exports = fromValues\n","/**\n * Represents a unbounded line in 2D space, positioned at a point of origin.\n * @see {@link line2} for data structure information.\n * @module modeling/maths/line2\n */\nmodule.exports = {\n  clone: require('./clone'),\n  closestPoint: require('./closestPoint'),\n  copy: require('./copy'),\n  create: require('./create'),\n  direction: require('./direction'),\n  distanceToPoint: require('./distanceToPoint'),\n  equals: require('./equals'),\n  fromPoints: require('./fromPoints'),\n  fromValues: require('./fromValues'),\n  intersectPointOfLines: require('./intersectPointOfLines'),\n  origin: require('./origin'),\n  reverse: require('./reverse'),\n  toString: require('./toString'),\n  transform: require('./transform'),\n  xAtY: require('./xAtY')\n}\n","const vec2 = require('../vec2')\nconst { solve2Linear } = require('../utils')\n\n/**\n * Return the point of intersection between the given lines.\n *\n * NOTES:\n * The point will have Infinity values if the lines are parallel.\n * The point will have NaN values if the lines are the same.\n *\n * @param {line2} line1 - line of reference\n * @param {line2} line2 - line of reference\n * @return {vec2} the point of intersection\n * @alias module:modeling/maths/line2.intersectPointOfLines\n */\nconst intersectToLine = (line1, line2) => {\n  const point = solve2Linear(line1[0], line1[1], line2[0], line2[1], line1[2], line2[2])\n  return vec2.clone(point)\n}\n\nmodule.exports = intersectToLine\n","const vec2 = require('../vec2')\n\n/**\n * Return the origin of the given line.\n *\n * @param {line2} line - line of reference\n * @return {vec2} the origin of the line\n * @alias module:modeling/maths/line2.origin\n */\nconst origin = (line) => vec2.scale(vec2.create(), line, line[2])\n\nmodule.exports = origin\n","const vec2 = require('../vec2')\n\nconst copy = require('./copy')\nconst fromValues = require('./fromValues')\n\n/**\n * Create a new line in the opposite direction as the given.\n *\n * @param {line2} out - receiving line\n * @param {line2} line - line to reverse\n * @returns {line2} out\n * @alias module:modeling/maths/line2.reverse\n */\nconst reverse = (out, line) => {\n  const normal = vec2.negate(vec2.create(), line)\n  const distance = -line[2]\n  return copy(out, fromValues(normal[0], normal[1], distance))\n}\n\nmodule.exports = reverse\n","/**\n * Return a string representing the given line.\n *\n * @param {line2} line - line of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/line2.toString\n */\nconst toString = (line) => `line2: (${line[0].toFixed(7)}, ${line[1].toFixed(7)}, ${line[2].toFixed(7)})`\n\nmodule.exports = toString\n","const vec2 = require('../vec2')\n\nconst fromPoints = require('./fromPoints')\nconst origin = require('./origin')\nconst direction = require('./direction')\n\n/**\n * Transforms the given line using the given matrix.\n *\n * @param {line2} out - receiving line\n * @param {line2} line - line to transform\n * @param {mat4} matrix - matrix to transform with\n * @returns {line2} out\n * @alias module:modeling/maths/line2.transform\n */\nconst transform = (out, line, matrix) => {\n  const org = origin(line)\n  const dir = direction(line)\n\n  vec2.transform(org, org, matrix)\n  vec2.transform(dir, dir, matrix)\n\n  return fromPoints(out, org, dir)\n}\n\nmodule.exports = transform\n","const origin = require('./origin')\n\n/**\n * Determine the X coordinate of the given line at the Y coordinate.\n *\n * The X coordinate will be Infinity if the line is parallel to the X axis.\n *\n * @param {line2} line - line of reference\n * @param {Number} y - Y coordinate on the line\n * @return {Number} the X coordinate on the line\n * @alias module:modeling/maths/line2.xAtY\n */\nconst xAtY = (line, y) => {\n  let x = (line[2] - (line[1] * y)) / line[0]\n  if (Number.isNaN(x)) {\n    const org = origin(line)\n    x = org[0]\n  }\n  return x\n}\n\nmodule.exports = xAtY\n","const vec3 = require('../vec3')\n\nconst create = require('./create')\n\n/**\n * Create a clone of the given line.\n *\n * @param {line3} line - line to clone\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.clone\n */\nconst clone = (line) => {\n  const out = create()\n  vec3.copy(out[0], line[0])\n  vec3.copy(out[1], line[1])\n  return out\n}\n\nmodule.exports = clone\n","const vec3 = require('../vec3')\n\n/**\n * Determine the closest point on the given line to the given point.\n *\n * @param {line3} line - line of reference\n * @param {vec3} point - point of reference\n * @returns {vec3} a point\n * @alias module:modeling/maths/line3.closestPoint\n */\nconst closestPoint = (line, point) => {\n  const lpoint = line[0]\n  const ldirection = line[1]\n\n  const a = vec3.dot(vec3.subtract(vec3.create(), point, lpoint), ldirection)\n  const b = vec3.dot(ldirection, ldirection)\n  const t = a / b\n\n  const closestpoint = vec3.scale(vec3.create(), ldirection, t)\n  vec3.add(closestpoint, closestpoint, lpoint)\n  return closestpoint\n}\n\nmodule.exports = closestPoint\n","const vec3 = require('../vec3')\n\n/**\n * Copy the given line into the receiving line.\n *\n * @param {line3} out - receiving line\n * @param {line3} line - line to copy\n * @returns {line3} out\n * @alias module:modeling/maths/line3.copy\n */\nconst copy = (out, line) => {\n  vec3.copy(out[0], line[0])\n  vec3.copy(out[1], line[1])\n  return out\n}\n\nmodule.exports = copy\n","const vec3 = require('../vec3')\n\n/**\n * Represents a unbounded line in 3D space, positioned at a point of origin.\n * A line is parametrized by a point of origin and a directional vector.\n *\n * The array contents are two 3D vectors; origin [0,0,0] and directional vector [0,0,1].\n * @see https://en.wikipedia.org/wiki/Hesse_normal_form\n * @typedef {Array} line3\n */\n\n/**\n * Create a line, positioned at 0,0,0 and lying on the X axis.\n *\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.create\n */\nconst create = () => [\n  vec3.fromValues(0, 0, 0), // origin\n  vec3.fromValues(0, 0, 1) // direction\n]\n\nmodule.exports = create\n","/**\n * Return the direction of the given line.\n *\n * @param {line3} line - line for reference\n * @return {vec3} the relative vector in the direction of the line\n * @alias module:modeling/maths/line3.direction\n */\nconst direction = (line) => line[1]\n\nmodule.exports = direction\n","const vec3 = require('../vec3')\n\nconst closestPoint = require('./closestPoint')\n\n/**\n * Calculate the distance (positive) between the given point and line.\n *\n * @param {line3} line - line of reference\n * @param {vec3} point - point of reference\n * @return {Number} distance between line and point\n * @alias module:modeling/maths/line3.distanceToPoint\n */\nconst distanceToPoint = (line, point) => {\n  const closest = closestPoint(line, point)\n  const distancevector = vec3.subtract(vec3.create(), point, closest)\n  return vec3.length(distancevector)\n}\n\nmodule.exports = distanceToPoint\n","const vec3 = require('../vec3')\n\n/**\n * Compare the given lines for equality.\n *\n * @param {line3} line1 - first line to compare\n * @param {line3} line2 - second line to compare\n * @return {Boolean} true if lines are equal\n * @alias module:modeling/maths/line3.equals\n */\nconst equals = (line1, line2) => {\n  // compare directions (unit vectors)\n  if (!vec3.equals(line1[1], line2[1])) return false\n\n  // compare points\n  if (!vec3.equals(line1[0], line2[0])) return false\n\n  // why would lines with the same slope (direction) and different points be equal?\n  // let distance = distanceToPoint(line1, line2[0])\n  // if (distance > EPS) return false\n\n  return true\n}\n\nmodule.exports = equals\n","const vec3 = require('../vec3')\nconst { solve2Linear } = require('../utils')\n\nconst { EPS } = require('../constants')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Create a line the intersection of the given planes.\n *\n * @param {line3} out - receiving line\n * @param {plane} plane1 - first plane of reference\n * @param {plane} plane2 - second plane of reference\n * @returns {line3} out\n * @alias module:modeling/maths/line3.fromPlanes\n */\nconst fromPlanes = (out, plane1, plane2) => {\n  let direction = vec3.cross(vec3.create(), plane1, plane2)\n  let length = vec3.length(direction)\n  if (length < EPS) {\n    throw new Error('parallel planes do not intersect')\n  }\n  length = (1.0 / length)\n  direction = vec3.scale(direction, direction, length)\n\n  const absx = Math.abs(direction[0])\n  const absy = Math.abs(direction[1])\n  const absz = Math.abs(direction[2])\n  let origin\n  let r\n  if ((absx >= absy) && (absx >= absz)) {\n    // find a point p for which x is zero\n    r = solve2Linear(plane1[1], plane1[2], plane2[1], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(0, r[0], r[1])\n  } else if ((absy >= absx) && (absy >= absz)) {\n    // find a point p for which y is zero\n    r = solve2Linear(plane1[0], plane1[2], plane2[0], plane2[2], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], 0, r[1])\n  } else {\n    // find a point p for which z is zero\n    r = solve2Linear(plane1[0], plane1[1], plane2[0], plane2[1], plane1[3], plane2[3])\n    origin = vec3.fromValues(r[0], r[1], 0)\n  }\n  return fromPointAndDirection(out, origin, direction)\n}\n\nmodule.exports = fromPlanes\n","const vec3 = require('../vec3')\n\n/**\n * Create a line from the given point (origin) and direction.\n *\n * The point can be any random point on the line.\n * The direction must be a vector with positive or negative distance from the point.\n *\n * See the logic of fromPoints() for appropriate values.\n *\n * @param {line3} out - receiving line\n * @param {vec3} point - start point of the line segment\n * @param {vec3} direction - direction of the line segment\n * @returns {line3} out\n * @alias module:modeling/maths/line3.fromPointAndDirection\n */\nconst fromPointAndDirection = (out, point, direction) => {\n  const unit = vec3.normalize(vec3.create(), direction)\n\n  vec3.copy(out[0], point)\n  vec3.copy(out[1], unit)\n  return out\n}\n\nmodule.exports = fromPointAndDirection\n","const vec3 = require('../vec3')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Create a line that passes through the given points.\n *\n * @param {line3} out - receiving line\n * @param {vec3} point1 - start point of the line segment\n * @param {vec3} point2 - end point of the line segment\n * @returns {line3} out\n * @alias module:modeling/maths/line3.fromPoints\n */\nconst fromPoints = (out, point1, point2) => {\n  const direction = vec3.subtract(vec3.create(), point2, point1)\n  return fromPointAndDirection(out, point1, direction)\n}\n\nmodule.exports = fromPoints\n","/**\n * Represents a unbounded line in 3D space, positioned at a point of origin.\n * @see {@link line3} for data structure information.\n * @module modeling/maths/line3\n */\nmodule.exports = {\n  clone: require('./clone'),\n  closestPoint: require('./closestPoint'),\n  copy: require('./copy'),\n  create: require('./create'),\n  direction: require('./direction'),\n  distanceToPoint: require('./distanceToPoint'),\n  equals: require('./equals'),\n  fromPlanes: require('./fromPlanes'),\n  fromPointAndDirection: require('./fromPointAndDirection'),\n  fromPoints: require('./fromPoints'),\n  intersectPointOfLineAndPlane: require('./intersectPointOfLineAndPlane'),\n  origin: require('./origin'),\n  reverse: require('./reverse'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","const vec3 = require('../vec3')\n\n/**\n * Determine the closest point on the given plane to the given line.\n *\n * NOTES:\n * The point of intersection will be invalid if the line is parallel to the plane, e.g. NaN.\n *\n * @param {line3} line - line of reference\n * @param {plane} plane - plane of reference\n * @returns {vec3} a point on the line\n * @alias module:modeling/maths/line3.intersectPointOfLineAndPlane\n */\nconst intersectToPlane = (line, plane) => {\n  // plane: plane.normal * p = plane.w\n  const pnormal = plane\n  const pw = plane[3]\n\n  const lpoint = line[0]\n  const ldirection = line[1]\n\n  // point: p = line.point + labda * line.direction\n  const labda = (pw - vec3.dot(pnormal, lpoint)) / vec3.dot(pnormal, ldirection)\n\n  const point = vec3.add(vec3.create(), lpoint, vec3.scale(vec3.create(), ldirection, labda))\n  return point\n}\n\nmodule.exports = intersectToPlane\n","/**\n * Return the origin of the given line.\n *\n * @param {line3} line - line of reference\n * @return {vec3} the origin of the line\n * @alias module:modeling/maths/line3.origin\n */\nconst origin = (line) => line[0]\n\nmodule.exports = origin\n","const vec3 = require('../vec3')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Create a line in the opposite direction as the given.\n *\n * @param {line3} out - receiving line\n * @param {line3} line - line to reverse\n * @returns {line3} out\n * @alias module:modeling/maths/line3.reverse\n */\nconst reverse = (out, line) => {\n  const point = vec3.clone(line[0])\n  const direction = vec3.negate(vec3.create(), line[1])\n  return fromPointAndDirection(out, point, direction)\n}\n\nmodule.exports = reverse\n","/**\n * Return a string representing the given line.\n *\n * @param {line3} line - line of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/line3.toString\n */\nconst toString = (line) => {\n  const point = line[0]\n  const direction = line[1]\n  return `line3: point: (${point[0].toFixed(7)}, ${point[1].toFixed(7)}, ${point[2].toFixed(7)}) direction: (${direction[0].toFixed(7)}, ${direction[1].toFixed(7)}, ${direction[2].toFixed(7)})`\n}\n\nmodule.exports = toString\n","const vec3 = require('../vec3')\n\nconst fromPointAndDirection = require('./fromPointAndDirection')\n\n/**\n * Transforms the given line using the given matrix.\n *\n * @param {line3} out - line to update\n * @param {line3} line - line to transform\n * @param {mat4} matrix - matrix to transform with\n * @returns {line3} a new unbounded line\n * @alias module:modeling/maths/line3.transform\n */\nconst transform = (out, line, matrix) => {\n  const point = line[0]\n  const direction = line[1]\n  const pointPlusDirection = vec3.add(vec3.create(), point, direction)\n\n  const newpoint = vec3.transform(vec3.create(), point, matrix)\n  const newPointPlusDirection = vec3.transform(pointPlusDirection, pointPlusDirection, matrix)\n  const newdirection = vec3.subtract(newPointPlusDirection, newPointPlusDirection, newpoint)\n\n  return fromPointAndDirection(out, newpoint, newdirection)\n}\n\nmodule.exports = transform\n","/**\n * Adds the two matrices (A+B).\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} a - first operand\n * @param {mat4} b - second operand\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.add\n */\nconst add = (out, a, b) => {\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  out[2] = a[2] + b[2]\n  out[3] = a[3] + b[3]\n  out[4] = a[4] + b[4]\n  out[5] = a[5] + b[5]\n  out[6] = a[6] + b[6]\n  out[7] = a[7] + b[7]\n  out[8] = a[8] + b[8]\n  out[9] = a[9] + b[9]\n  out[10] = a[10] + b[10]\n  out[11] = a[11] + b[11]\n  out[12] = a[12] + b[12]\n  out[13] = a[13] + b[13]\n  out[14] = a[14] + b[14]\n  out[15] = a[15] + b[15]\n  return out\n}\n\nmodule.exports = add\n","const create = require('./create')\n\n/**\n * Creates a clone of the given matrix.\n *\n * @param {mat4} matrix - matrix to clone\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.clone\n */\nconst clone = (matrix) => {\n  const out = create()\n  out[0] = matrix[0]\n  out[1] = matrix[1]\n  out[2] = matrix[2]\n  out[3] = matrix[3]\n  out[4] = matrix[4]\n  out[5] = matrix[5]\n  out[6] = matrix[6]\n  out[7] = matrix[7]\n  out[8] = matrix[8]\n  out[9] = matrix[9]\n  out[10] = matrix[10]\n  out[11] = matrix[11]\n  out[12] = matrix[12]\n  out[13] = matrix[13]\n  out[14] = matrix[14]\n  out[15] = matrix[15]\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Creates a copy of the given matrix.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to copy\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.copy\n */\nconst copy = (out, matrix) => {\n  out[0] = matrix[0]\n  out[1] = matrix[1]\n  out[2] = matrix[2]\n  out[3] = matrix[3]\n  out[4] = matrix[4]\n  out[5] = matrix[5]\n  out[6] = matrix[6]\n  out[7] = matrix[7]\n  out[8] = matrix[8]\n  out[9] = matrix[9]\n  out[10] = matrix[10]\n  out[11] = matrix[11]\n  out[12] = matrix[12]\n  out[13] = matrix[13]\n  out[14] = matrix[14]\n  out[15] = matrix[15]\n  return out\n}\n\nmodule.exports = copy\n","/**\n * Represents a 4x4 matrix which is column-major (when typed out it looks row-major).\n * See fromValues().\n * @typedef {Array} mat4\n */\n\n/**\n * Creates a new identity matrix.\n *\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.create\n */\nconst create = () => [\n  1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 0,\n  0, 0, 0, 1\n]\n\nmodule.exports = create\n","/**\n * Returns whether or not the matrices have exactly the same elements in the same position.\n *\n * @param {mat4} a - first matrix\n * @param {mat4} b - second matrix\n * @returns {Boolean} true if the matrices are equal\n * @alias module:modeling/maths/mat4.equals\n */\nconst equals = (a, b) => (\n  a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n  a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n  a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n  a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15]\n)\n\nmodule.exports = equals\n","const { EPS } = require('../constants')\n\nconst { sin, cos } = require('../utils/trigonometry')\n\nconst identity = require('./identity')\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotate(dest, dest, rad, axis)\n *\n * @param {mat4} out - receiving matrix\n * @param {Number} rad - angle to rotate the matrix by\n * @param {vec3} axis - axis of which to rotate around\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.fromRotation\n * @example\n * let matrix = fromRotation(create(), TAU / 4, [0, 0, 3])\n */\nconst fromRotation = (out, rad, axis) => {\n  let [x, y, z] = axis\n  const lengthSquared = x * x + y * y + z * z\n\n  if (Math.abs(lengthSquared) < EPS) {\n    // axis is 0,0,0 or almost\n    return identity(out)\n  }\n\n  const len = 1 / Math.sqrt(lengthSquared)\n  x *= len\n  y *= len\n  z *= len\n\n  const s = sin(rad)\n  const c = cos(rad)\n  const t = 1 - c\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c\n  out[1] = y * x * t + z * s\n  out[2] = z * x * t - y * s\n  out[3] = 0\n  out[4] = x * y * t - z * s\n  out[5] = y * y * t + c\n  out[6] = z * y * t + x * s\n  out[7] = 0\n  out[8] = x * z * t + y * s\n  out[9] = y * z * t - x * s\n  out[10] = z * z * t + c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromRotation\n","/**\n * Creates a matrix from a vector scaling.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.scale(dest, dest, vec)\n *\n * @param {mat4} out - receiving matrix\n * @param {vec3} vector - X, Y, Z factors by which to scale\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.fromScaling\n * @example\n * let matrix = fromScaling([1, 2, 0.5])\n */\nconst fromScaling = (out, vector) => {\n  out[0] = vector[0]\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = vector[1]\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = vector[2]\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromScaling\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Creates a matrix from the given Tait–Bryan angles.\n *\n * Tait-Bryan Euler angle convention using active, intrinsic rotations around the axes in the order z-y-x.\n * @see https://en.wikipedia.org/wiki/Euler_angles\n *\n * @param {mat4} out - receiving matrix\n * @param {Number} yaw - Z rotation in radians\n * @param {Number} pitch - Y rotation in radians\n * @param {Number} roll - X rotation in radians\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.fromTaitBryanRotation\n * @example\n * let matrix = fromTaitBryanRotation(create(), TAU / 4, 0, TAU / 2)\n */\nconst fromTaitBryanRotation = (out, yaw, pitch, roll) => {\n  // precompute sines and cosines of Euler angles\n  const sy = sin(yaw)\n  const cy = cos(yaw)\n  const sp = sin(pitch)\n  const cp = cos(pitch)\n  const sr = sin(roll)\n  const cr = cos(roll)\n\n  // create and populate rotation matrix\n  // left-hand-rule rotation\n  // const els = [\n  //  cp*cy, sr*sp*cy - cr*sy, sr*sy + cr*sp*cy, 0,\n  //  cp*sy, cr*cy + sr*sp*sy, cr*sp*sy - sr*cy, 0,\n  //  -sp, sr*cp, cr*cp, 0,\n  //  0, 0, 0, 1\n  // ]\n  // right-hand-rule rotation\n  out[0] = cp * cy\n  out[1] = cp * sy\n  out[2] = -sp\n  out[3] = 0\n  out[4] = sr * sp * cy - cr * sy\n  out[5] = cr * cy + sr * sp * sy\n  out[6] = sr * cp\n  out[7] = 0\n  out[8] = sr * sy + cr * sp * cy\n  out[9] = cr * sp * sy - sr * cy\n  out[10] = cr * cp\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromTaitBryanRotation\n","/**\n * Creates a matrix from a vector translation.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.translate(dest, dest, vec)\n *\n * @param {mat4} out - receiving matrix\n * @param {vec3} vector - offset (vector) of translation\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.fromTranslation\n * @example\n * let matrix = fromTranslation(create(), [1, 2, 3])\n */\nconst fromTranslation = (out, vector) => {\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = vector[0]\n  out[13] = vector[1]\n  out[14] = vector[2]\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromTranslation\n","const create = require('./create')\n\n/**\n * Create a matrix with the given values.\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromValues\n * @example\n * let matrix = fromValues(\n *   1, 0, 0, 1,\n *   0, 1, 0, 0,\n *   0, 0, 1, 0,\n *   0, 0, 0, 1\n * )\n */\nconst fromValues = (m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) => {\n  const out = create()\n  out[0] = m00\n  out[1] = m01\n  out[2] = m02\n  out[3] = m03\n  out[4] = m10\n  out[5] = m11\n  out[6] = m12\n  out[7] = m13\n  out[8] = m20\n  out[9] = m21\n  out[10] = m22\n  out[11] = m23\n  out[12] = m30\n  out[13] = m31\n  out[14] = m32\n  out[15] = m33\n  return out\n}\n\nmodule.exports = fromValues\n","const vec3 = require('../vec3')\n\nconst fromRotation = require('./fromRotation')\n\n/**\n * Create a matrix that rotates the given source to the given target vector.\n *\n * Each vector must be a directional vector with a length greater than zero.\n * @see https://gist.github.com/kevinmoran/b45980723e53edeb8a5a43c49f134724\n * @param {mat4} out - receiving matrix\n * @param {vec3} source - source vector\n * @param {vec3} target - target vector\n * @returns {mat4} a new matrix\n * @alias module:modeling/maths/mat4.fromVectorRotation\n * @example\n * let matrix = fromVectorRotation(mat4.create(), [1, 2, 2], [-3, 3, 12])\n */\nconst fromVectorRotation = (out, source, target) => {\n  const sourceNormal = vec3.normalize(vec3.create(), source)\n  const targetNormal = vec3.normalize(vec3.create(), target)\n\n  const axis = vec3.cross(vec3.create(), targetNormal, sourceNormal)\n  const cosA = vec3.dot(targetNormal, sourceNormal)\n  if (cosA === -1.0) return fromRotation(out, Math.PI, vec3.orthogonal(axis, sourceNormal))\n\n  const k = 1 / (1 + cosA)\n  out[0] = (axis[0] * axis[0] * k) + cosA\n  out[1] = (axis[1] * axis[0] * k) - axis[2]\n  out[2] = (axis[2] * axis[0] * k) + axis[1]\n  out[3] = 0\n\n  out[4] = (axis[0] * axis[1] * k) + axis[2]\n  out[5] = (axis[1] * axis[1] * k) + cosA\n  out[6] = (axis[2] * axis[1] * k) - axis[0]\n  out[7] = 0\n\n  out[8] = (axis[0] * axis[2] * k) - axis[1]\n  out[9] = (axis[1] * axis[2] * k) + axis[0]\n  out[10] = (axis[2] * axis[2] * k) + cosA\n  out[11] = 0\n\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromVectorRotation\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Creates a matrix from the given angle around the X axis.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateX(dest, dest, radians)\n *\n * @param {mat4} out - receiving matrix\n * @param {Number} radians - angle to rotate the matrix by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.fromXRotation\n * @example\n * let matrix = fromXRotation(create(), TAU / 4)\n */\nconst fromXRotation = (out, radians) => {\n  const s = sin(radians)\n  const c = cos(radians)\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = c\n  out[6] = s\n  out[7] = 0\n  out[8] = 0\n  out[9] = -s\n  out[10] = c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromXRotation\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Creates a matrix from the given angle around the Y axis.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateY(dest, dest, radians)\n *\n * @param {mat4} out - receiving matrix\n * @param {Number} radians - angle to rotate the matrix by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.fromYRotation\n * @example\n * let matrix = fromYRotation(create(), TAU / 4)\n */\nconst fromYRotation = (out, radians) => {\n  const s = sin(radians)\n  const c = cos(radians)\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c\n  out[1] = 0\n  out[2] = -s\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = s\n  out[9] = 0\n  out[10] = c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromYRotation\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Creates a matrix from the given angle around the Z axis.\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateZ(dest, dest, radians)\n *\n * @param {mat4} out - receiving matrix\n * @param {Number} radians - angle to rotate the matrix by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.fromZRotation\n * @example\n * let matrix = fromZRotation(create(), TAU / 4)\n */\nconst fromZRotation = (out, radians) => {\n  const s = sin(radians)\n  const c = cos(radians)\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c\n  out[1] = s\n  out[2] = 0\n  out[3] = 0\n  out[4] = -s\n  out[5] = c\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = fromZRotation\n","/**\n * Set a matrix to the identity transform.\n *\n * @param {mat4} out - receiving matrix\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.identity\n */\nconst identity = (out) => {\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n\nmodule.exports = identity\n","/**\n * Represents a 4x4 matrix which is column-major (when typed out it looks row-major).\n * @see {@link mat4} for data structure information.\n * @module modeling/maths/mat4\n */\nmodule.exports = {\n  add: require('./add'),\n  clone: require('./clone'),\n  copy: require('./copy'),\n  create: require('./create'),\n  invert: require('./invert'),\n  equals: require('./equals'),\n  fromRotation: require('./fromRotation'),\n  fromScaling: require('./fromScaling'),\n  fromTaitBryanRotation: require('./fromTaitBryanRotation'),\n  fromTranslation: require('./fromTranslation'),\n  fromValues: require('./fromValues'),\n  fromVectorRotation: require('./fromVectorRotation'),\n  fromXRotation: require('./fromXRotation'),\n  fromYRotation: require('./fromYRotation'),\n  fromZRotation: require('./fromZRotation'),\n  identity: require('./identity'),\n  isIdentity: require('./isIdentity'),\n  isOnlyTransformScale: require('./isOnlyTransformScale'),\n  isMirroring: require('./isMirroring'),\n  mirrorByPlane: require('./mirrorByPlane'),\n  multiply: require('./multiply'),\n  rotate: require('./rotate'),\n  rotateX: require('./rotateX'),\n  rotateY: require('./rotateY'),\n  rotateZ: require('./rotateZ'),\n  scale: require('./scale'),\n  subtract: require('./subtract'),\n  toString: require('./toString'),\n  translate: require('./translate')\n}\n","/**\n * Creates a invert copy of the given matrix.\n * @author Julian Lloyd\n * code from https://github.com/jlmakes/rematrix/blob/master/src/index.js\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to invert\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.invert\n */\nconst invert = (out, matrix) => {\n  const a00 = matrix[0]\n  const a01 = matrix[1]\n  const a02 = matrix[2]\n  const a03 = matrix[3]\n  const a10 = matrix[4]\n  const a11 = matrix[5]\n  const a12 = matrix[6]\n  const a13 = matrix[7]\n  const a20 = matrix[8]\n  const a21 = matrix[9]\n  const a22 = matrix[10]\n  const a23 = matrix[11]\n  const a30 = matrix[12]\n  const a31 = matrix[13]\n  const a32 = matrix[14]\n  const a33 = matrix[15]\n\n  const b00 = a00 * a11 - a01 * a10\n  const b01 = a00 * a12 - a02 * a10\n  const b02 = a00 * a13 - a03 * a10\n  const b03 = a01 * a12 - a02 * a11\n  const b04 = a01 * a13 - a03 * a11\n  const b05 = a02 * a13 - a03 * a12\n  const b06 = a20 * a31 - a21 * a30\n  const b07 = a20 * a32 - a22 * a30\n  const b08 = a20 * a33 - a23 * a30\n  const b09 = a21 * a32 - a22 * a31\n  const b10 = a21 * a33 - a23 * a31\n  const b11 = a22 * a33 - a23 * a32\n\n  // Calculate the determinant\n  let det =\n    b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\n\n  if (!det) {\n    return null\n  }\n  det = 1.0 / det\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det\n\n  return out\n}\n\nmodule.exports = invert\n","/**\n * Determine whether the given matrix is the identity transform.\n * This is equivalent to (but much faster than):\n *\n *     mat4.equals(mat4.create(), matrix)\n *\n * @param {mat4} matrix - the matrix\n * @returns {Boolean} true if matrix is the identity transform\n * @alias module:modeling/maths/mat4.isIdentity\n * @example\n * if (mat4.isIdentity(mymatrix)) ...\n */\nconst isIdentity = (matrix) => (\n  matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 0 &&\n  matrix[4] === 0 && matrix[5] === 1 && matrix[6] === 0 && matrix[7] === 0 &&\n  matrix[8] === 0 && matrix[9] === 0 && matrix[10] === 1 && matrix[11] === 0 &&\n  matrix[12] === 0 && matrix[13] === 0 && matrix[14] === 0 && matrix[15] === 1\n)\n\nmodule.exports = isIdentity\n","/**\n * Determine whether the given matrix is a mirroring transformation.\n *\n * @param {mat4} matrix - matrix of reference\n * @returns {Boolean} true if matrix is a mirroring transformation\n * @alias module:modeling/maths/mat4.isMirroring\n */\nconst isMirroring = (matrix) => {\n  // const xVector = [matrix[0], matrix[4], matrix[8]]\n  // const yVector = [matrix[1], matrix[5], matrix[9]]\n  // const zVector = [matrix[2], matrix[6], matrix[10]]\n\n  // for a true orthogonal, non-mirrored base, xVector.cross(yVector) == zVector\n  // If they have an opposite direction then we are mirroring\n  // calcuate xVector.cross(yVector)\n  const x = matrix[4] * matrix[9] - matrix[8] * matrix[5]\n  const y = matrix[8] * matrix[1] - matrix[0] * matrix[9]\n  const z = matrix[0] * matrix[5] - matrix[4] * matrix[1]\n  // calcualte dot(cross, zVector)\n  const d = x * matrix[2] + y * matrix[6] + z * matrix[10]\n  return (d < 0)\n}\n\nmodule.exports = isMirroring\n","\n/**\n * Determine whether the given matrix is only translate and/or scale.\n * This code returns true for TAU / 2 rotation as it can be interpreted as scale.\n *\n * @param {mat4} matrix - the matrix\n * @returns {Boolean} true if matrix is for translate and/or scale\n * @alias module:modeling/maths/mat4.isOnlyTransformScale\n */\nconst isOnlyTransformScale = (matrix) => (\n\n  // TODO check if it is worth the effort to add recognition of 90 deg rotations\n\n  isZero(matrix[1]) && isZero(matrix[2]) && isZero(matrix[3]) &&\n  isZero(matrix[4]) && isZero(matrix[6]) && isZero(matrix[7]) &&\n  isZero(matrix[8]) && isZero(matrix[9]) && isZero(matrix[11]) &&\n  matrix[15] === 1\n)\n\nconst isZero = (num) => Math.abs(num) < Number.EPSILON\n\nmodule.exports = isOnlyTransformScale\n","/**\n * Create a matrix for mirroring about the given plane.\n *\n * @param {mat4} out - receiving matrix\n * @param {vec4} plane - plane of which to mirror the matrix\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.mirrorByPlane\n */\nconst mirrorByPlane = (out, plane) => {\n  const [nx, ny, nz, w] = plane\n\n  out[0] = (1.0 - 2.0 * nx * nx)\n  out[1] = (-2.0 * ny * nx)\n  out[2] = (-2.0 * nz * nx)\n  out[3] = 0\n  out[4] = (-2.0 * nx * ny)\n  out[5] = (1.0 - 2.0 * ny * ny)\n  out[6] = (-2.0 * nz * ny)\n  out[7] = 0\n  out[8] = (-2.0 * nx * nz)\n  out[9] = (-2.0 * ny * nz)\n  out[10] = (1.0 - 2.0 * nz * nz)\n  out[11] = 0\n  out[12] = (2.0 * nx * w)\n  out[13] = (2.0 * ny * w)\n  out[14] = (2.0 * nz * w)\n  out[15] = 1\n\n  return out\n}\n\nmodule.exports = mirrorByPlane\n","/**\n * Multiplies the two matrices.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} a - first operand\n * @param {mat4} b - second operand\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.multiply\n */\nconst multiply = (out, a, b) => {\n  const a00 = a[0]\n  const a01 = a[1]\n  const a02 = a[2]\n  const a03 = a[3]\n  const a10 = a[4]\n  const a11 = a[5]\n  const a12 = a[6]\n  const a13 = a[7]\n  const a20 = a[8]\n  const a21 = a[9]\n  const a22 = a[10]\n  const a23 = a[11]\n  const a30 = a[12]\n  const a31 = a[13]\n  const a32 = a[14]\n  const a33 = a[15]\n\n  // Cache only the current line of the second matrix\n  let b0 = b[0]\n  let b1 = b[1]\n  let b2 = b[2]\n  let b3 = b[3]\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n  b0 = b[4]\n  b1 = b[5]\n  b2 = b[6]\n  b3 = b[7]\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n  b0 = b[8]\n  b1 = b[9]\n  b2 = b[10]\n  b3 = b[11]\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n  b0 = b[12]\n  b1 = b[13]\n  b2 = b[14]\n  b3 = b[15]\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n  return out\n}\n\nmodule.exports = multiply\n","const { EPS } = require('../constants')\n\nconst { sin, cos } = require('../utils/trigonometry')\n\nconst copy = require('./copy')\n\n/**\n * Rotates a matrix by the given angle about the given axis.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to rotate\n * @param {Number} radians - angle to rotate the matrix by\n * @param {vec3} axis - axis to rotate around\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.rotate\n */\nconst rotate = (out, matrix, radians, axis) => {\n  let [x, y, z] = axis\n  const lengthSquared = x * x + y * y + z * z\n\n  if (Math.abs(lengthSquared) < EPS) {\n    // axis is 0,0,0 or almost\n    return copy(out, matrix)\n  }\n\n  const len = 1 / Math.sqrt(lengthSquared)\n  x *= len\n  y *= len\n  z *= len\n\n  const s = sin(radians)\n  const c = cos(radians)\n  const t = 1 - c\n\n  const a00 = matrix[0]\n  const a01 = matrix[1]\n  const a02 = matrix[2]\n  const a03 = matrix[3]\n  const a10 = matrix[4]\n  const a11 = matrix[5]\n  const a12 = matrix[6]\n  const a13 = matrix[7]\n  const a20 = matrix[8]\n  const a21 = matrix[9]\n  const a22 = matrix[10]\n  const a23 = matrix[11]\n\n  // Construct the elements of the rotation matrix\n  const b00 = x * x * t + c\n  const b01 = y * x * t + z * s\n  const b02 = z * x * t - y * s\n  const b10 = x * y * t - z * s\n  const b11 = y * y * t + c\n  const b12 = z * y * t + x * s\n  const b20 = x * z * t + y * s\n  const b21 = y * z * t - x * s\n  const b22 = z * z * t + c\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n  return out\n}\n\nmodule.exports = rotate\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Rotates a matrix by the given angle around the X axis.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to rotate\n * @param {Number} radians - angle to rotate the matrix by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.rotateX\n */\nconst rotateX = (out, matrix, radians) => {\n  const s = sin(radians)\n  const c = cos(radians)\n  const a10 = matrix[4]\n  const a11 = matrix[5]\n  const a12 = matrix[6]\n  const a13 = matrix[7]\n  const a20 = matrix[8]\n  const a21 = matrix[9]\n  const a22 = matrix[10]\n  const a23 = matrix[11]\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0] = matrix[0]\n    out[1] = matrix[1]\n    out[2] = matrix[2]\n    out[3] = matrix[3]\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s\n  out[5] = a11 * c + a21 * s\n  out[6] = a12 * c + a22 * s\n  out[7] = a13 * c + a23 * s\n  out[8] = a20 * c - a10 * s\n  out[9] = a21 * c - a11 * s\n  out[10] = a22 * c - a12 * s\n  out[11] = a23 * c - a13 * s\n  return out\n}\n\nmodule.exports = rotateX\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Rotates a matrix by the given angle around the Y axis.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to rotate\n * @param {Number} radians - angle to rotate the matrix by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.rotateY\n */\nconst rotateY = (out, matrix, radians) => {\n  const s = sin(radians)\n  const c = cos(radians)\n  const a00 = matrix[0]\n  const a01 = matrix[1]\n  const a02 = matrix[2]\n  const a03 = matrix[3]\n  const a20 = matrix[8]\n  const a21 = matrix[9]\n  const a22 = matrix[10]\n  const a23 = matrix[11]\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4] = matrix[4]\n    out[5] = matrix[5]\n    out[6] = matrix[6]\n    out[7] = matrix[7]\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s\n  out[1] = a01 * c - a21 * s\n  out[2] = a02 * c - a22 * s\n  out[3] = a03 * c - a23 * s\n  out[8] = a00 * s + a20 * c\n  out[9] = a01 * s + a21 * c\n  out[10] = a02 * s + a22 * c\n  out[11] = a03 * s + a23 * c\n  return out\n}\n\nmodule.exports = rotateY\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Rotates a matrix by the given angle around the Z axis.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to rotate\n * @param {Number} radians - angle to rotate the matrix by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.rotateZ\n */\nconst rotateZ = (out, matrix, radians) => {\n  const s = sin(radians)\n  const c = cos(radians)\n  const a00 = matrix[0]\n  const a01 = matrix[1]\n  const a02 = matrix[2]\n  const a03 = matrix[3]\n  const a10 = matrix[4]\n  const a11 = matrix[5]\n  const a12 = matrix[6]\n  const a13 = matrix[7]\n\n  if (matrix !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8] = matrix[8]\n    out[9] = matrix[9]\n    out[10] = matrix[10]\n    out[11] = matrix[11]\n    out[12] = matrix[12]\n    out[13] = matrix[13]\n    out[14] = matrix[14]\n    out[15] = matrix[15]\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s\n  out[1] = a01 * c + a11 * s\n  out[2] = a02 * c + a12 * s\n  out[3] = a03 * c + a13 * s\n  out[4] = a10 * c - a00 * s\n  out[5] = a11 * c - a01 * s\n  out[6] = a12 * c - a02 * s\n  out[7] = a13 * c - a03 * s\n  return out\n}\n\nmodule.exports = rotateZ\n","/**\n * Scales the matrix by the given dimensions.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to scale\n * @param {vec3} dimensions - dimensions to scale the matrix by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.scale\n */\nconst scale = (out, matrix, dimensions) => {\n  const x = dimensions[0]\n  const y = dimensions[1]\n  const z = dimensions[2]\n\n  out[0] = matrix[0] * x\n  out[1] = matrix[1] * x\n  out[2] = matrix[2] * x\n  out[3] = matrix[3] * x\n  out[4] = matrix[4] * y\n  out[5] = matrix[5] * y\n  out[6] = matrix[6] * y\n  out[7] = matrix[7] * y\n  out[8] = matrix[8] * z\n  out[9] = matrix[9] * z\n  out[10] = matrix[10] * z\n  out[11] = matrix[11] * z\n  out[12] = matrix[12]\n  out[13] = matrix[13]\n  out[14] = matrix[14]\n  out[15] = matrix[15]\n  return out\n}\n\nmodule.exports = scale\n","/**\n * Subtracts matrix b from matrix a. (A-B)\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} a - first operand\n * @param {mat4} b - second operand\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.subtract\n */\nconst subtract = (out, a, b) => {\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  out[2] = a[2] - b[2]\n  out[3] = a[3] - b[3]\n  out[4] = a[4] - b[4]\n  out[5] = a[5] - b[5]\n  out[6] = a[6] - b[6]\n  out[7] = a[7] - b[7]\n  out[8] = a[8] - b[8]\n  out[9] = a[9] - b[9]\n  out[10] = a[10] - b[10]\n  out[11] = a[11] - b[11]\n  out[12] = a[12] - b[12]\n  out[13] = a[13] - b[13]\n  out[14] = a[14] - b[14]\n  out[15] = a[15] - b[15]\n  return out\n}\n\nmodule.exports = subtract\n","/**\n * Return a string representing the given matrix.\n *\n * @param {mat4} mat - matrix of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/mat4.toString\n */\nconst toString = (mat) => mat.map((n) => n.toFixed(7)).toString()\n\nmodule.exports = toString\n","/**\n * Translate the matrix by the given offset vector.\n *\n * @param {mat4} out - receiving matrix\n * @param {mat4} matrix - matrix to translate\n * @param {vec3} offsets - offset vector to translate by\n * @returns {mat4} out\n * @alias module:modeling/maths/mat4.translate\n */\nconst translate = (out, matrix, offsets) => {\n  const x = offsets[0]\n  const y = offsets[1]\n  const z = offsets[2]\n  let a00\n  let a01\n  let a02\n  let a03\n  let a10\n  let a11\n  let a12\n  let a13\n  let a20\n  let a21\n  let a22\n  let a23\n\n  if (matrix === out) {\n  // 0-11 assignments are unnecessary\n    out[12] = matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12]\n    out[13] = matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13]\n    out[14] = matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14]\n    out[15] = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15]\n  } else {\n    a00 = matrix[0]; a01 = matrix[1]; a02 = matrix[2]; a03 = matrix[3]\n    a10 = matrix[4]; a11 = matrix[5]; a12 = matrix[6]; a13 = matrix[7]\n    a20 = matrix[8]; a21 = matrix[9]; a22 = matrix[10]; a23 = matrix[11]\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23\n\n    out[12] = a00 * x + a10 * y + a20 * z + matrix[12]\n    out[13] = a01 * x + a11 * y + a21 * z + matrix[13]\n    out[14] = a02 * x + a12 * y + a22 * z + matrix[14]\n    out[15] = a03 * x + a13 * y + a23 * z + matrix[15]\n  }\n\n  return out\n}\n\nmodule.exports = translate\n","/**\n * Flip the given plane.\n *\n * @param {plane} out - receiving plane\n * @param {plane} plane - plane to flip\n * @return {plane} out\n * @alias module:modeling/maths/plane.flip\n */\nconst flip = (out, plane) => {\n  out[0] = -plane[0]\n  out[1] = -plane[1]\n  out[2] = -plane[2]\n  out[3] = -plane[3]\n  return out\n}\n\nmodule.exports = flip\n","const vec3 = require('../vec3')\n\n/**\n * Represents a plane in 3D coordinate space as determined by a normal (perpendicular to the plane)\n * and distance from 0,0,0.\n *\n * The contents of the array are a normal [0,1,2] and a distance [3].\n * @see https://en.wikipedia.org/wiki/Hesse_normal_form\n * @typedef {Array} plane\n */\n\n/**\n * Create a new plane from the given normal and point values.\n *\n * @param {plane} out - receiving plane\n * @param {vec3} normal - directional vector\n * @param {vec3} point - origin of plane\n * @returns {plane} out\n * @alias module:modeling/maths/plane.fromNormalAndPoint\n */\nconst fromNormalAndPoint = (out, normal, point) => {\n  const u = vec3.normalize(vec3.create(), normal)\n  const w = vec3.dot(point, u)\n\n  out[0] = u[0]\n  out[1] = u[1]\n  out[2] = u[2]\n  out[3] = w\n  return out\n}\n\nmodule.exports = fromNormalAndPoint\n","const vec3 = require('../vec3')\n\n/**\n * Create a plane from the given points.\n *\n * @param {plane} out - receiving plane\n * @param {Array} vertices - points on the plane\n * @returns {plane} out\n * @alias module:modeling/maths/plane.fromPoints\n */\nconst fromPoints = (out, ...vertices) => {\n  const len = vertices.length\n\n  // Calculate normal vector for a single vertex\n  // Inline to avoid allocations\n  const ba = vec3.create()\n  const ca = vec3.create()\n  const vertexNormal = (index) => {\n    const a = vertices[index]\n    const b = vertices[(index + 1) % len]\n    const c = vertices[(index + 2) % len]\n    vec3.subtract(ba, b, a) // ba = b - a\n    vec3.subtract(ca, c, a) // ca = c - a\n    vec3.cross(ba, ba, ca) // ba = ba x ca\n    vec3.normalize(ba, ba)\n    return ba\n  }\n\n  out[0] = 0\n  out[1] = 0\n  out[2] = 0\n  if (len === 3) {\n    // optimization for triangles, which are always coplanar\n    vec3.copy(out, vertexNormal(0))\n  } else {\n    // sum of vertex normals\n    vertices.forEach((v, i) => {\n      vec3.add(out, out, vertexNormal(i))\n    })\n    // renormalize normal vector\n    vec3.normalize(out, out)\n  }\n  out[3] = vec3.dot(out, vertices[0])\n  return out\n}\n\nmodule.exports = fromPoints\n","const { EPS } = require('../constants')\n\nconst vec3 = require('../vec3')\n\n/**\n * Create a new plane from the given points like fromPoints,\n * but allow the vectors to be on one point or one line.\n * In such a case, a random plane through the given points is constructed.\n *\n * @param {plane} out - receiving plane\n * @param {vec3} a - 3D point\n * @param {vec3} b - 3D point\n * @param {vec3} c - 3D point\n * @returns {plane} out\n * @alias module:modeling/maths/plane.fromPointsRandom\n */\nconst fromPointsRandom = (out, a, b, c) => {\n  let ba = vec3.subtract(vec3.create(), b, a)\n  let ca = vec3.subtract(vec3.create(), c, a)\n  if (vec3.length(ba) < EPS) {\n    ba = vec3.orthogonal(ba, ca)\n  }\n  if (vec3.length(ca) < EPS) {\n    ca = vec3.orthogonal(ca, ba)\n  }\n  let normal = vec3.cross(vec3.create(), ba, ca)\n  if (vec3.length(normal) < EPS) {\n    // this would mean that ba == ca.negated()\n    ca = vec3.orthogonal(ca, ba)\n    normal = vec3.cross(normal, ba, ca)\n  }\n  normal = vec3.normalize(normal, normal)\n  const w = vec3.dot(normal, a)\n\n  out[0] = normal[0]\n  out[1] = normal[1]\n  out[2] = normal[2]\n  out[3] = w\n  return out\n}\n\nmodule.exports = fromPointsRandom\n","/**\n * Represents a plane in 3D coordinate space as determined by a normal (perpendicular to the plane)\n * and distance from 0,0,0.\n * @see {@link plane} for data structure information.\n * @module modeling/maths/plane\n */\nmodule.exports = {\n  /**\n   * @see [vec4.clone()]{@link module:modeling/maths/vec4.clone}\n   * @function clone\n   */\n  clone: require('../vec4/clone'),\n  /**\n   * @see [vec4.copy()]{@link module:modeling/maths/vec4.copy}\n   * @function copy\n   */\n  copy: require('../vec4/copy'),\n  /**\n   * @see [vec4.create()]{@link module:modeling/maths/vec4.create}\n   * @function create\n   */\n  create: require('../vec4/create'),\n  /**\n   * @see [vec4.equals()]{@link module:modeling/maths/vec4.equals}\n   * @function equals\n   */\n  equals: require('../vec4/equals'),\n  flip: require('./flip'),\n  fromNormalAndPoint: require('./fromNormalAndPoint'),\n  /**\n   * @see [vec4.fromValues()]{@link module:modeling/maths/vec4.fromValues}\n   * @function fromValues\n   */\n  fromValues: require('../vec4/fromValues'),\n  fromPoints: require('./fromPoints'),\n  fromPointsRandom: require('./fromPointsRandom'),\n  projectionOfPoint: require('./projectionOfPoint'),\n  signedDistanceToPoint: require('./signedDistanceToPoint'),\n  /**\n   * @see [vec4.toString()]{@link module:modeling/maths/vec4.toString}\n   * @function toString\n   */\n  toString: require('../vec4/toString'),\n  transform: require('./transform')\n}\n","const vec3 = require('../vec3')\n\n/**\n * Project the given point on to the given plane.\n *\n * @param {plane} plane - plane of reference\n * @param {vec3} point - point of reference\n * @return {vec3} projected point on plane\n * @alias module:modeling/maths/plane.projectionOfPoint\n */\nconst projectionOfPoint = (plane, point) => {\n  const a = point[0] * plane[0] + point[1] * plane[1] + point[2] * plane[2] - plane[3]\n  const x = point[0] - a * plane[0]\n  const y = point[1] - a * plane[1]\n  const z = point[2] - a * plane[2]\n  return vec3.fromValues(x, y, z)\n}\n\nmodule.exports = projectionOfPoint\n","const vec3 = require('../vec3')\n\n/**\n * Calculate the distance to the given point.\n *\n * @param {plane} plane - plane of reference\n * @param {vec3} point - point of reference\n * @return {Number} signed distance to point\n * @alias module:modeling/maths/plane.signedDistanceToPoint\n */\nconst signedDistanceToPoint = (plane, point) => vec3.dot(plane, point) - plane[3]\n\nmodule.exports = signedDistanceToPoint\n","const mat4 = require('../mat4')\nconst vec3 = require('../vec3')\n\nconst fromPoints = require('./fromPoints')\nconst flip = require('./flip')\n\n/**\n * Transform the given plane using the given matrix\n *\n * @param {plane} out - receiving plane\n * @param {plane} plane - plane to transform\n * @param {mat4} matrix - matrix to transform with\n * @return {plane} out\n * @alias module:modeling/maths/plane.transform\n */\nconst transform = (out, plane, matrix) => {\n  const ismirror = mat4.isMirroring(matrix)\n  // get two vectors in the plane:\n  const r = vec3.orthogonal(vec3.create(), plane)\n  const u = vec3.cross(r, plane, r)\n  const v = vec3.cross(vec3.create(), plane, u)\n  // get 3 points in the plane:\n  let point1 = vec3.fromScalar(vec3.create(), plane[3])\n  vec3.multiply(point1, point1, plane)\n  let point2 = vec3.add(vec3.create(), point1, u)\n  let point3 = vec3.add(vec3.create(), point1, v)\n  // transform the points:\n  point1 = vec3.transform(point1, point1, matrix)\n  point2 = vec3.transform(point2, point2, matrix)\n  point3 = vec3.transform(point3, point3, matrix)\n  // and create a new plane from the transformed points:\n  fromPoints(out, point1, point2, point3)\n  if (ismirror) {\n    // the transform is mirroring so flip the plane\n    flip(out, out)\n  }\n  return out\n}\n\nmodule.exports = transform\n","const { NEPS } = require('../constants')\n\n/**\n * Compare two normals (unit vectors) for near equality.\n * @param {vec3} a - normal a\n * @param {vec3} b - normal b\n * @returns {Boolean} true if a and b are nearly equal\n * @alias module:modeling/maths/utils.aboutEqualNormals\n */\nconst aboutEqualNormals = (a, b) => (Math.abs(a[0] - b[0]) <= NEPS && Math.abs(a[1] - b[1]) <= NEPS && Math.abs(a[2] - b[2]) <= NEPS)\n\nmodule.exports = aboutEqualNormals\n","/**\n * Calculate the area under the given points.\n * @param {Array} points - list of 2D points\n * @return {Number} area under the given points\n * @alias module:modeling/maths/utils.area\n */\nconst area = (points) => {\n  let area = 0\n  for (let i = 0; i < points.length; i++) {\n    const j = (i + 1) % points.length\n    area += points[i][0] * points[j][1]\n    area -= points[j][0] * points[i][1]\n  }\n  return (area / 2.0)\n}\n\nmodule.exports = area\n","/**\n * Utility functions for maths.\n * @module modeling/maths/utils\n * @example\n * const { area, solve2Linear } = require('@jscad/maths').utils\n */\nmodule.exports = {\n  aboutEqualNormals: require('./aboutEqualNormals'),\n  area: require('./area'),\n  cos: require('./trigonometry').cos,\n  interpolateBetween2DPointsForY: require('./interpolateBetween2DPointsForY'),\n  intersect: require('./intersect'),\n  sin: require('./trigonometry').sin,\n  solve2Linear: require('./solve2Linear')\n}\n","/**\n * Get the X coordinate of a point with a certain Y coordinate, interpolated between two points.\n * Interpolation is robust even if the points have the same Y coordinate\n * @param {vec2} point1\n * @param {vec2} point2\n * @param {Number} y\n * @return {Array} X and Y of interpolated point\n * @alias module:modeling/maths/utils.interpolateBetween2DPointsForY\n */\nconst interpolateBetween2DPointsForY = (point1, point2, y) => {\n  let f1 = y - point1[1]\n  let f2 = point2[1] - point1[1]\n  if (f2 < 0) {\n    f1 = -f1\n    f2 = -f2\n  }\n  let t\n  if (f1 <= 0) {\n    t = 0.0\n  } else if (f1 >= f2) {\n    t = 1.0\n  } else if (f2 < 1e-10) { // FIXME Should this be EPS?\n    t = 0.5\n  } else {\n    t = f1 / f2\n  }\n  const result = point1[0] + t * (point2[0] - point1[0])\n  return result\n}\n\nmodule.exports = interpolateBetween2DPointsForY\n","/**\n * Calculate the intersect point of the two line segments (p1-p2 and p3-p4), end points included.\n * Note: If the line segments do NOT intersect then undefined is returned.\n * @see http://paulbourke.net/geometry/pointlineplane/\n * @param {vec2} p1 - first point of first line segment\n * @param {vec2} p2 - second point of first line segment\n * @param {vec2} p3 - first point of second line segment\n * @param {vec2} p4 - second point of second line segment\n * @returns {vec2} intersection point of the two line segments, or undefined\n * @alias module:modeling/maths/utils.intersect\n */\nconst intersect = (p1, p2, p3, p4) => {\n  // Check if none of the lines are of length 0\n  if ((p1[0] === p2[0] && p1[1] === p2[1]) || (p3[0] === p4[0] && p3[1] === p4[1])) {\n    return undefined\n  }\n\n  const denominator = ((p4[1] - p3[1]) * (p2[0] - p1[0]) - (p4[0] - p3[0]) * (p2[1] - p1[1]))\n\n  // Lines are parallel\n  if (Math.abs(denominator) < Number.MIN_VALUE) {\n    return undefined\n  }\n\n  const ua = ((p4[0] - p3[0]) * (p1[1] - p3[1]) - (p4[1] - p3[1]) * (p1[0] - p3[0])) / denominator\n  const ub = ((p2[0] - p1[0]) * (p1[1] - p3[1]) - (p2[1] - p1[1]) * (p1[0] - p3[0])) / denominator\n\n  // is the intersection along the segments\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n    return undefined\n  }\n\n  // Return the x and y coordinates of the intersection\n  const x = p1[0] + ua * (p2[0] - p1[0])\n  const y = p1[1] + ua * (p2[1] - p1[1])\n\n  return [x, y]\n}\n\nmodule.exports = intersect\n","const solve2Linear = (a, b, c, d, u, v) => {\n  const det = a * d - b * c\n  const invdet = 1.0 / det\n  let x = u * d - b * v\n  let y = -u * c + a * v\n  x *= invdet\n  y *= invdet\n  return [x, y]\n}\n\nmodule.exports = solve2Linear\n","const { NEPS } = require('../constants')\n\n/*\n * Returns zero if n is within epsilon of zero, otherwise return n\n */\nconst rezero = (n) => Math.abs(n) < NEPS ? 0 : n\n\n/**\n * Return Math.sin but accurate for TAU / 4 rotations.\n * Fixes rounding errors when sin should be 0.\n *\n * @param {Number} radians - angle in radians\n * @returns {Number} sine of the given angle\n * @alias module:modeling/utils.sin\n * @example\n * sin(TAU / 2) == 0\n * sin(TAU) == 0\n */\nconst sin = (radians) => rezero(Math.sin(radians))\n\n/**\n * Return Math.cos but accurate for TAU / 4 rotations.\n * Fixes rounding errors when cos should be 0.\n *\n * @param {Number} radians - angle in radians\n * @returns {Number} cosine of the given angle\n * @alias module:modeling/utils.cos\n * @example\n * cos(TAU * 0.25) == 0\n * cos(TAU * 0.75) == 0\n */\nconst cos = (radians) => rezero(Math.cos(radians))\n\nmodule.exports = { sin, cos }\n","/**\n * Calculates the absolute coordinates of the given vector.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - vector of reference\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.abs\n */\nconst abs = (out, vector) => {\n  out[0] = Math.abs(vector[0])\n  out[1] = Math.abs(vector[1])\n  return out\n}\n\nmodule.exports = abs\n","/**\n * Adds the coordinates of two vectors (A+B).\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.add\n */\nconst add = (out, a, b) => {\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  return out\n}\n\nmodule.exports = add\n","module.exports = require('./angleRadians')\n","const angleRadians = require('./angleRadians')\n\n/**\n * Calculate the angle of the given vector.\n *\n * @param {vec2} vector - vector of reference\n * @returns {Number} angle in degrees\n * @alias module:modeling/maths/vec2.angleDegrees\n */\nconst angleDegrees = (vector) => angleRadians(vector) * 57.29577951308232\n\nmodule.exports = angleDegrees\n","/**\n * Calculate the angle of the given vector.\n *\n * @param {vec2} vector - vector of reference\n * @returns {Number} angle in radians\n * @alias module:modeling/maths/vec2.angleRadians\n */\nconst angleRadians = (vector) => Math.atan2(vector[1], vector[0]) // y=sin, x=cos\n\nmodule.exports = angleRadians\n","const create = require('./create')\n\n/**\n * Create a clone of the given vector.\n *\n * @param {vec2} vector - vector to clone\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.clone\n */\nconst clone = (vector) => {\n  const out = create()\n  out[0] = vector[0]\n  out[1] = vector[1]\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Create a copy of the given vector.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - source vector\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.copy\n */\nconst copy = (out, vector) => {\n  out[0] = vector[0]\n  out[1] = vector[1]\n  return out\n}\n\nmodule.exports = copy\n","/**\n * Represents a two dimensional vector.\n * See fromValues().\n * @typedef {Array} vec2\n */\n\n/**\n * Creates a new vector, initialized to [0,0].\n *\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.create\n */\nconst create = () => [0, 0]\n\nmodule.exports = create\n","/**\n * Computes the cross product (3D) of two vectors.\n *\n * @param {vec3} out - receiving vector (3D)\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {vec3} out\n * @alias module:modeling/maths/vec2.cross\n */\nconst cross = (out, a, b) => {\n  out[0] = 0\n  out[1] = 0\n  out[2] = a[0] * b[1] - a[1] * b[0]\n  return out\n}\n\nmodule.exports = cross\n","/**\n * Calculates the distance between two vectors.\n *\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {Number} distance\n * @alias module:modeling/maths/vec2.distance\n */\nconst distance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  return Math.sqrt(x * x + y * y)\n}\n\nmodule.exports = distance\n","/**\n * Divides the coordinates of two vectors (A/B).\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.divide\n */\nconst divide = (out, a, b) => {\n  out[0] = a[0] / b[0]\n  out[1] = a[1] / b[1]\n  return out\n}\n\nmodule.exports = divide\n","/**\n * Calculates the dot product of two vectors.\n *\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {Number} dot product\n * @alias module:modeling/maths/vec2.dot\n */\nconst dot = (a, b) => a[0] * b[0] + a[1] * b[1]\n\nmodule.exports = dot\n","/**\n * Compare the given vectors for equality.\n *\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {Boolean} true if a and b are equal\n * @alias module:modeling/maths/vec2.equals\n */\nconst equals = (a, b) => (a[0] === b[0]) && (a[1] === b[1])\n\nmodule.exports = equals\n","const fromAngleRadians = require('./fromAngleRadians')\n\n/**\n * Create a new vector in the direction of the given angle.\n *\n * @param {vec2} out - receiving vector\n * @param {Number} degrees - angle in degrees\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.fromAngleDegrees\n */\nconst fromAngleDegrees = (out, degrees) => fromAngleRadians(out, degrees * 0.017453292519943295)\n\nmodule.exports = fromAngleDegrees\n","const { sin, cos } = require('../utils/trigonometry')\n\n/**\n * Create a new vector in the direction of the given angle.\n *\n * @param {vec2} out - receiving vector\n * @param {Number} radians - angle in radians\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.fromAngleRadians\n */\nconst fromAngleRadians = (out, radians) => {\n  out[0] = cos(radians)\n  out[1] = sin(radians)\n  return out\n}\n\nmodule.exports = fromAngleRadians\n","/**\n * Create a vector from a single scalar value.\n *\n * @param {vec2} out - receiving vector\n * @param {Number} scalar - the scalar value\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.fromScalar\n */\nconst fromScalar = (out, scalar) => {\n  out[0] = scalar\n  out[1] = scalar\n  return out\n}\n\nmodule.exports = fromScalar\n","const create = require('./create')\n\n/**\n * Creates a new vector initialized with the given values.\n *\n * @param {Number} x - X coordinate\n * @param {Number} y - Y coordinate\n * @returns {vec2} a new vector\n * @alias module:modeling/maths/vec2.fromValues\n */\nconst fromValues = (x, y) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  return out\n}\n\nmodule.exports = fromValues\n","/**\n * Represents a two dimensional vector.\n * @module modeling/maths/vec2\n */\nmodule.exports = {\n  abs: require('./abs'),\n  add: require('./add'),\n  angle: require('./angle'),\n  angleDegrees: require('./angleDegrees'),\n  angleRadians: require('./angleRadians'),\n  clone: require('./clone'),\n  copy: require('./copy'),\n  create: require('./create'),\n  cross: require('./cross'),\n  distance: require('./distance'),\n  divide: require('./divide'),\n  dot: require('./dot'),\n  equals: require('./equals'),\n  fromAngleDegrees: require('./fromAngleDegrees'),\n  fromAngleRadians: require('./fromAngleRadians'),\n  fromScalar: require('./fromScalar'),\n  fromValues: require('./fromValues'),\n  length: require('./length'),\n  lerp: require('./lerp'),\n  max: require('./max'),\n  min: require('./min'),\n  multiply: require('./multiply'),\n  negate: require('./negate'),\n  normal: require('./normal'),\n  normalize: require('./normalize'),\n  rotate: require('./rotate'),\n  scale: require('./scale'),\n  snap: require('./snap'),\n  squaredDistance: require('./squaredDistance'),\n  squaredLength: require('./squaredLength'),\n  subtract: require('./subtract'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","/**\n * Calculates the length of the given vector.\n *\n * @param {vec2} vector - vector of reference\n * @returns {Number} length\n * @alias module:modeling/maths/vec2.length\n */\nconst length = (vector) => Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1])\n\nmodule.exports = length\n","/**\n * Performs a linear interpolation between two vectors.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @param {Number} t - interpolation amount between the two vectors\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.lerp\n */\nconst lerp = (out, a, b, t) => {\n  const ax = a[0]\n  const ay = a[1]\n  out[0] = ax + t * (b[0] - ax)\n  out[1] = ay + t * (b[1] - ay)\n  return out\n}\n\nmodule.exports = lerp\n","/**\n * Returns the maximum coordinates of two vectors.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.max\n */\nconst max = (out, a, b) => {\n  out[0] = Math.max(a[0], b[0])\n  out[1] = Math.max(a[1], b[1])\n  return out\n}\n\nmodule.exports = max\n","/**\n * Returns the minimum coordinates of two vectors.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.min\n */\nconst min = (out, a, b) => {\n  out[0] = Math.min(a[0], b[0])\n  out[1] = Math.min(a[1], b[1])\n  return out\n}\n\nmodule.exports = min\n","/**\n * Multiplies the coordinates of two vectors (A*B).\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.multiply\n */\nconst multiply = (out, a, b) => {\n  out[0] = a[0] * b[0]\n  out[1] = a[1] * b[1]\n  return out\n}\n\nmodule.exports = multiply\n","/**\n * Negates the coordinates of the given vector.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - vector to negate\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.negate\n */\nconst negate = (out, vector) => {\n  out[0] = -vector[0]\n  out[1] = -vector[1]\n  return out\n}\n\nmodule.exports = negate\n","const { TAU } = require('../constants')\n\nconst create = require('./create')\nconst rotate = require('./rotate')\n\n/**\n * Calculates the normal of the given vector.\n * The normal value is the given vector rotated 90 degrees.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - given value\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.normal\n */\nconst normal = (out, vector) => rotate(out, vector, create(), (TAU / 4))\n\nmodule.exports = normal\n","/**\n * Normalize the given vector.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - vector to normalize\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.normalize\n */\nconst normalize = (out, vector) => {\n  const x = vector[0]\n  const y = vector[1]\n  let len = x * x + y * y\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n  }\n  out[0] = x * len\n  out[1] = y * len\n  return out\n}\n\n// old this.dividedBy(this.length())\n\nmodule.exports = normalize\n","/**\n * Rotates the given vector by the given angle.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - vector to rotate\n * @param {vec2} origin - origin of the rotation\n * @param {Number} radians - angle of rotation (radians)\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.rotate\n */\nconst rotate = (out, vector, origin, radians) => {\n  const x = vector[0] - origin[0]\n  const y = vector[1] - origin[1]\n  const c = Math.cos(radians)\n  const s = Math.sin(radians)\n\n  out[0] = x * c - y * s + origin[0]\n  out[1] = x * s + y * c + origin[1]\n\n  return out\n}\n\nmodule.exports = rotate\n","/**\n * Scales the coordinates of the given vector.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - vector to scale\n * @param {Number} amount - amount to scale\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.scale\n */\nconst scale = (out, vector, amount) => {\n  out[0] = vector[0] * amount\n  out[1] = vector[1] * amount\n  return out\n}\n\nmodule.exports = scale\n","/**\n * Snaps the coordinates of the given vector to the given epsilon.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - vector to snap\n * @param {Number} epsilon - epsilon of precision, less than 0\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.snap\n */\nconst snap = (out, vector, epsilon) => {\n  out[0] = Math.round(vector[0] / epsilon) * epsilon + 0\n  out[1] = Math.round(vector[1] / epsilon) * epsilon + 0\n  return out\n}\n\nmodule.exports = snap\n","/**\n * Calculates the squared distance between the given vectors.\n *\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {Number} squared distance\n * @alias module:modeling/maths/vec2.squaredDistance\n */\nconst squaredDistance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  return x * x + y * y\n}\n\nmodule.exports = squaredDistance\n","/**\n * Calculates the squared length of the given vector.\n *\n * @param {vec2} vector - vector of reference\n * @returns {Number} squared length\n * @alias module:modeling/maths/vec2.squaredLength\n */\nconst squaredLength = (vector) => {\n  const x = vector[0]\n  const y = vector[1]\n  return x * x + y * y\n}\n\nmodule.exports = squaredLength\n","/**\n * Subtracts the coordinates of two vectors (A-B).\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} a - first operand\n * @param {vec2} b - second operand\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.subtract\n */\nconst subtract = (out, a, b) => {\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  return out\n}\n\nmodule.exports = subtract\n","/**\n * Convert the given vector to a representative string.\n *\n * @param {vec2} vector - vector of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/vec2.toString\n */\nconst toString = (vector) => `[${vector[0].toFixed(7)}, ${vector[1].toFixed(7)}]`\n\nmodule.exports = toString\n","/**\n * Transforms the given vector using the given matrix.\n *\n * @param {vec2} out - receiving vector\n * @param {vec2} vector - vector to transform\n * @param {mat4} matrix - matrix to transform with\n * @returns {vec2} out\n * @alias module:modeling/maths/vec2.transform\n */\nconst transform = (out, vector, matrix) => {\n  const x = vector[0]\n  const y = vector[1]\n  out[0] = matrix[0] * x + matrix[4] * y + matrix[12]\n  out[1] = matrix[1] * x + matrix[5] * y + matrix[13]\n  return out\n}\n\nmodule.exports = transform\n","/**\n * Calculates the absolute coordinates of the give vector.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector of reference\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.abs\n */\nconst abs = (out, vector) => {\n  out[0] = Math.abs(vector[0])\n  out[1] = Math.abs(vector[1])\n  out[2] = Math.abs(vector[2])\n  return out\n}\n\nmodule.exports = abs\n","/**\n * Adds the coordinates of two vectors (A+B).\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.add\n */\nconst add = (out, a, b) => {\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  out[2] = a[2] + b[2]\n  return out\n}\n\nmodule.exports = add\n","const dot = require('./dot')\n\n/**\n * Calculate the angle between two vectors.\n *\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {Number} angle (radians)\n * @alias module:modeling/maths/vec3.angle\n */\nconst angle = (a, b) => {\n  const ax = a[0]\n  const ay = a[1]\n  const az = a[2]\n  const bx = b[0]\n  const by = b[1]\n  const bz = b[2]\n  const mag1 = Math.sqrt(ax * ax + ay * ay + az * az)\n  const mag2 = Math.sqrt(bx * bx + by * by + bz * bz)\n  const mag = mag1 * mag2\n  const cosine = mag && dot(a, b) / mag\n  return Math.acos(Math.min(Math.max(cosine, -1), 1))\n}\n\nmodule.exports = angle\n","const create = require('./create')\n\n/**\n * Create a clone of the given vector.\n *\n * @param {vec3} vector - vector to clone\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.clone\n */\nconst clone = (vector) => {\n  const out = create()\n  out[0] = vector[0]\n  out[1] = vector[1]\n  out[2] = vector[2]\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Create a copy of the given vector.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to copy\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.copy\n */\nconst copy = (out, vector) => {\n  out[0] = vector[0]\n  out[1] = vector[1]\n  out[2] = vector[2]\n  return out\n}\n\nmodule.exports = copy\n","/**\n * Represents a three dimensional vector.\n * See fromValues().\n * @typedef {Array} vec3\n */\n\n/**\n * Creates a new vector initialized to [0,0,0].\n *\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.create\n */\nconst create = () => [0, 0, 0]\n\nmodule.exports = create\n","/**\n * Computes the cross product of the given vectors (AxB).\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.cross\n */\nconst cross = (out, a, b) => {\n  const ax = a[0]\n  const ay = a[1]\n  const az = a[2]\n  const bx = b[0]\n  const by = b[1]\n  const bz = b[2]\n\n  out[0] = ay * bz - az * by\n  out[1] = az * bx - ax * bz\n  out[2] = ax * by - ay * bx\n  return out\n}\n\nmodule.exports = cross\n","/**\n * Calculates the Euclidian distance between the given vectors.\n *\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {Number} distance\n * @alias module:modeling/maths/vec3.distance\n */\nconst distance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  const z = b[2] - a[2]\n  return Math.sqrt(x * x + y * y + z * z)\n}\n\nmodule.exports = distance\n","/**\n * Divides the coordinates of two vectors (A/B).\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - dividend vector\n * @param {vec3} b - divisor vector\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.divide\n */\nconst divide = (out, a, b) => {\n  out[0] = a[0] / b[0]\n  out[1] = a[1] / b[1]\n  out[2] = a[2] / b[2]\n  return out\n}\n\nmodule.exports = divide\n","/**\n * Calculates the dot product of two vectors.\n *\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {Number} dot product\n * @alias module:modeling/maths/vec3.dot\n */\nconst dot = (a, b) => a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n\nmodule.exports = dot\n","/**\n * Compare the given vectors for equality.\n *\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {Boolean} true if a and b are equal\n * @alias module:modeling/maths/vec3.equals\n */\nconst equals = (a, b) => (a[0] === b[0]) && (a[1] === b[1]) && (a[2] === b[2])\n\nmodule.exports = equals\n","/**\n * Creates a vector from a single scalar value.\n * All components of the resulting vector have the given value.\n *\n * @param {vec3} out - receiving vector\n * @param {Number} scalar\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.fromScalar\n */\nconst fromScalar = (out, scalar) => {\n  out[0] = scalar\n  out[1] = scalar\n  out[2] = scalar\n  return out\n}\n\nmodule.exports = fromScalar\n","const create = require('./create')\n\n/**\n * Creates a new vector initialized with the given values.\n *\n * @param {Number} x - X component\n * @param {Number} y - Y component\n * @param {Number} z - Z component\n * @returns {vec3} a new vector\n * @alias module:modeling/maths/vec3.fromValues\n */\nconst fromValues = (x, y, z) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  return out\n}\n\nmodule.exports = fromValues\n","/**\n * Create a new vector by extending a 2D vector with a Z value.\n *\n * @param {vec3} out - receiving vector\n * @param {Array} vector - 2D vector of values\n * @param {Number} [z=0] - Z value\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.fromVec2\n */\nconst fromVector2 = (out, vector, z = 0) => {\n  out[0] = vector[0]\n  out[1] = vector[1]\n  out[2] = z\n  return out\n}\n\nmodule.exports = fromVector2\n","/**\n * Represents a three dimensional vector.\n * @see {@link vec3} for data structure information.\n * @module modeling/maths/vec3\n */\nmodule.exports = {\n  abs: require('./abs'),\n  add: require('./add'),\n  angle: require('./angle'),\n  clone: require('./clone'),\n  copy: require('./copy'),\n  create: require('./create'),\n  cross: require('./cross'),\n  distance: require('./distance'),\n  divide: require('./divide'),\n  dot: require('./dot'),\n  equals: require('./equals'),\n  fromScalar: require('./fromScalar'),\n  fromValues: require('./fromValues'),\n  fromVec2: require('./fromVec2'),\n  length: require('./length'),\n  lerp: require('./lerp'),\n  max: require('./max'),\n  min: require('./min'),\n  multiply: require('./multiply'),\n  negate: require('./negate'),\n  normalize: require('./normalize'),\n  orthogonal: require('./orthogonal'),\n  rotateX: require('./rotateX'),\n  rotateY: require('./rotateY'),\n  rotateZ: require('./rotateZ'),\n  scale: require('./scale'),\n  snap: require('./snap'),\n  squaredDistance: require('./squaredDistance'),\n  squaredLength: require('./squaredLength'),\n  subtract: require('./subtract'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","/**\n * Calculates the length of a vector.\n *\n * @param {vec3} vector - vector to calculate length of\n * @returns {Number} length\n * @alias module:modeling/maths/vec3.length\n */\nconst length = (vector) => {\n  const x = vector[0]\n  const y = vector[1]\n  const z = vector[2]\n  return Math.sqrt(x * x + y * y + z * z)\n}\n\nmodule.exports = length\n","/**\n * Performs a linear interpolation between two vectors.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @param {Number} t - interpolant (0.0 to 1.0) applied between the two inputs\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.lerp\n */\nconst lerp = (out, a, b, t) => {\n  out[0] = a[0] + t * (b[0] - a[0])\n  out[1] = a[1] + t * (b[1] - a[1])\n  out[2] = a[2] + t * (b[2] - a[2])\n  return out\n}\n\nmodule.exports = lerp\n","/**\n * Returns the maximum coordinates of the given vectors.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.max\n */\nconst max = (out, a, b) => {\n  out[0] = Math.max(a[0], b[0])\n  out[1] = Math.max(a[1], b[1])\n  out[2] = Math.max(a[2], b[2])\n  return out\n}\n\nmodule.exports = max\n","/**\n * Returns the minimum coordinates of the given vectors.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.min\n */\nconst min = (out, a, b) => {\n  out[0] = Math.min(a[0], b[0])\n  out[1] = Math.min(a[1], b[1])\n  out[2] = Math.min(a[2], b[2])\n  return out\n}\n\nmodule.exports = min\n","/**\n * Multiply the coordinates of the given vectors (A*B).\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.multiply\n */\nconst multiply = (out, a, b) => {\n  out[0] = a[0] * b[0]\n  out[1] = a[1] * b[1]\n  out[2] = a[2] * b[2]\n  return out\n}\n\nmodule.exports = multiply\n","/**\n * Negates the coordinates of the given vector.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to negate\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.negate\n */\nconst negate = (out, vector) => {\n  out[0] = -vector[0]\n  out[1] = -vector[1]\n  out[2] = -vector[2]\n  return out\n}\n\nmodule.exports = negate\n","/**\n * Normalize the given vector.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to normalize\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.normalize\n */\nconst normalize = (out, vector) => {\n  const x = vector[0]\n  const y = vector[1]\n  const z = vector[2]\n  let len = x * x + y * y + z * z\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n  }\n  out[0] = x * len\n  out[1] = y * len\n  out[2] = z * len\n  return out\n}\n\nmodule.exports = normalize\n","const abs = require('./abs')\nconst create = require('./create')\nconst cross = require('./cross')\n\n/**\n * Create a new vector that is orthogonal to the given vector.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector of reference\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.orthogonal\n */\nconst orthogonal = (out, vector) => {\n  const bV = abs(create(), vector)\n  const b0 = 0 + ((bV[0] < bV[1]) && (bV[0] < bV[2]))\n  const b1 = 0 + ((bV[1] <= bV[0]) && (bV[1] < bV[2]))\n  const b2 = 0 + ((bV[2] <= bV[0]) && (bV[2] <= bV[1]))\n\n  return cross(out, vector, [b0, b1, b2])\n}\n\nmodule.exports = orthogonal\n","/**\n * Rotate the given vector around the given origin, X axis only.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to rotate\n * @param {vec3} origin - origin of the rotation\n * @param {Number} radians - angle of rotation\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.rotateX\n */\nconst rotateX = (out, vector, origin, radians) => {\n  const p = []\n  const r = []\n\n  // translate point to the origin\n  p[0] = vector[0] - origin[0]\n  p[1] = vector[1] - origin[1]\n  p[2] = vector[2] - origin[2]\n\n  // perform rotation\n  r[0] = p[0]\n  r[1] = p[1] * Math.cos(radians) - p[2] * Math.sin(radians)\n  r[2] = p[1] * Math.sin(radians) + p[2] * Math.cos(radians)\n\n  // translate to correct position\n  out[0] = r[0] + origin[0]\n  out[1] = r[1] + origin[1]\n  out[2] = r[2] + origin[2]\n\n  return out\n}\n\nmodule.exports = rotateX\n","/**\n * Rotate the given vector around the given origin, Y axis only.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to rotate\n * @param {vec3} origin - origin of the rotation\n * @param {Number} radians - angle of rotation\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.rotateY\n */\nconst rotateY = (out, vector, origin, radians) => {\n  const p = []\n  const r = []\n\n  // translate point to the origin\n  p[0] = vector[0] - origin[0]\n  p[1] = vector[1] - origin[1]\n  p[2] = vector[2] - origin[2]\n\n  // perform rotation\n  r[0] = p[2] * Math.sin(radians) + p[0] * Math.cos(radians)\n  r[1] = p[1]\n  r[2] = p[2] * Math.cos(radians) - p[0] * Math.sin(radians)\n\n  // translate to correct position\n  out[0] = r[0] + origin[0]\n  out[1] = r[1] + origin[1]\n  out[2] = r[2] + origin[2]\n\n  return out\n}\n\nmodule.exports = rotateY\n","/**\n * Rotate the given vector around the given origin, Z axis only.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to rotate\n * @param {vec3} origin - origin of the rotation\n * @param {Number} radians - angle of rotation in radians\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.rotateZ\n */\nconst rotateZ = (out, vector, origin, radians) => {\n  const p = []\n  const r = []\n  // Translate point to the origin\n  p[0] = vector[0] - origin[0]\n  p[1] = vector[1] - origin[1]\n\n  // perform rotation\n  r[0] = (p[0] * Math.cos(radians)) - (p[1] * Math.sin(radians))\n  r[1] = (p[0] * Math.sin(radians)) + (p[1] * Math.cos(radians))\n\n  // translate to correct position\n  out[0] = r[0] + origin[0]\n  out[1] = r[1] + origin[1]\n  out[2] = vector[2]\n\n  return out\n}\n\nmodule.exports = rotateZ\n","/**\n * Scales the coordinates of the given vector by a scalar number.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to scale\n * @param {Number} amount - amount to scale the vector by\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.scale\n */\nconst scale = (out, vector, amount) => {\n  out[0] = vector[0] * amount\n  out[1] = vector[1] * amount\n  out[2] = vector[2] * amount\n  return out\n}\n\nmodule.exports = scale\n","/**\n * Snaps the coordinates of the given vector to the given epsilon.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to snap\n * @param {Number} epsilon - epsilon of precision, less than 0\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.snap\n */\nconst snap = (out, vector, epsilon) => {\n  out[0] = Math.round(vector[0] / epsilon) * epsilon + 0\n  out[1] = Math.round(vector[1] / epsilon) * epsilon + 0\n  out[2] = Math.round(vector[2] / epsilon) * epsilon + 0\n  return out\n}\n\nmodule.exports = snap\n","/**\n * Calculates the squared distance between two vectors.\n *\n * @param {vec3} a - first operand\n * @param {vec3} b - second operand\n * @returns {Number} squared distance\n * @alias module:modeling/maths/vec3.squaredDistance\n */\nconst squaredDistance = (a, b) => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  const z = b[2] - a[2]\n  return x * x + y * y + z * z\n}\n\nmodule.exports = squaredDistance\n","/**\n * Calculates the squared length of the given vector.\n *\n * @param {vec3} vector - vector to calculate squared length of\n * @returns {Number} squared length\n * @alias module:modeling/maths/vec3.squaredLength\n */\nconst squaredLength = (vector) => {\n  const x = vector[0]\n  const y = vector[1]\n  const z = vector[2]\n  return x * x + y * y + z * z\n}\n\nmodule.exports = squaredLength\n","/**\n * Subtracts the coordinates of two vectors (A-B).\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} a - minuend vector\n * @param {vec3} b - subtrahend vector\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.subtract\n */\nconst subtract = (out, a, b) => {\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  out[2] = a[2] - b[2]\n  return out\n}\n\nmodule.exports = subtract\n","/**\n * Convert the given vector to a representative string.\n * @param {vec3} vec - vector of reference\n * @returns {String} string representation\n * @alias module:modeling/maths/vec3.toString\n */\nconst toString = (vec) => `[${vec[0].toFixed(7)}, ${vec[1].toFixed(7)}, ${vec[2].toFixed(7)}]`\n\nmodule.exports = toString\n","/**\n * Transforms the given vector using the given matrix.\n *\n * @param {vec3} out - receiving vector\n * @param {vec3} vector - vector to transform\n * @param {mat4} matrix - transform matrix\n * @returns {vec3} out\n * @alias module:modeling/maths/vec3.transform\n */\nconst transform = (out, vector, matrix) => {\n  const x = vector[0]\n  const y = vector[1]\n  const z = vector[2]\n  let w = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15]\n  w = w || 1.0\n  out[0] = (matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12]) / w\n  out[1] = (matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13]) / w\n  out[2] = (matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14]) / w\n  return out\n}\n\nmodule.exports = transform\n","const create = require('./create')\n\n/**\n * Create a clone of the given vector.\n *\n * @param {vec4} vector - source vector\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.clone\n */\nconst clone = (vector) => {\n  const out = create()\n  out[0] = vector[0]\n  out[1] = vector[1]\n  out[2] = vector[2]\n  out[3] = vector[3]\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Create a copy of the given vector.\n *\n * @param {vec4} out - receiving vector\n * @param {vec4} vector - source vector\n * @returns {vec4} out\n * @alias module:modeling/maths/vec4.copy\n */\nconst copy = (out, vector) => {\n  out[0] = vector[0]\n  out[1] = vector[1]\n  out[2] = vector[2]\n  out[3] = vector[3]\n  return out\n}\n\nmodule.exports = copy\n","/**\n * Represents a four dimensional vector.\n * See fromValues().\n * @typedef {Array} vec4\n */\n\n/**\n * Creates a new vector initialized to [0,0,0,0].\n *\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.create\n */\nconst create = () => [0, 0, 0, 0]\n\nmodule.exports = create\n","/**\n * Calculates the dot product of the given vectors.\n *\n * @param {vec4} a - first vector\n * @param {vec4} b - second vector\n * @returns {Number} dot product\n * @alias module:modeling/maths/vec4.dot\n */\nconst dot = (a, b) => a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3]\n\nmodule.exports = dot\n","/**\n * Compare the given vectors for equality.\n *\n * @param {vec4} a - first vector\n * @param {vec4} b - second vector\n * @return {Boolean} true if vectors are equal\n * @alias module:modeling/maths/vec4.equals\n */\nconst equals = (a, b) => ((a[0] === b[0]) && (a[1] === b[1]) && (a[2] === b[2]) && (a[3] === b[3]))\n\nmodule.exports = equals\n","/**\n * Create a new vector from the given scalar value.\n *\n * @param {vec4} out - receiving vector\n * @param  {Number} scalar\n * @returns {vec4} out\n * @alias module:modeling/maths/vec4.fromScalar\n */\nconst fromScalar = (out, scalar) => {\n  out[0] = scalar\n  out[1] = scalar\n  out[2] = scalar\n  out[3] = scalar\n  return out\n}\n\nmodule.exports = fromScalar\n","const create = require('./create')\n\n/**\n * Creates a new vector with the given values.\n *\n * @param {Number} x - X component\n * @param {Number} y - Y component\n * @param {Number} z - Z component\n * @param {Number} w - W component\n * @returns {vec4} a new vector\n * @alias module:modeling/maths/vec4.fromValues\n */\nconst fromValues = (x, y, z, w) => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = w\n  return out\n}\n\nmodule.exports = fromValues\n","/**\n * Represents a four dimensional vector.\n * @see {@link vec4} for data structure information.\n * @module modeling/maths/vec4\n */\nmodule.exports = {\n  clone: require('./clone'),\n  copy: require('./copy'),\n  create: require('./create'),\n  dot: require('./dot'),\n  equals: require('./equals'),\n  fromScalar: require('./fromScalar'),\n  fromValues: require('./fromValues'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","/**\n * Convert the given vector to a representative string.\n *\n * @param {vec4} vec - vector to convert\n * @returns {String} representative string\n * @alias module:modeling/maths/vec4.toString\n */\nconst toString = (vec) => `(${vec[0].toFixed(9)}, ${vec[1].toFixed(9)}, ${vec[2].toFixed(9)}, ${vec[3].toFixed(9)})`\n\nmodule.exports = toString\n","/**\n * Transform the given vector using the given matrix.\n *\n * @param {vec4} out - receiving vector\n * @param {vec4} vector - vector to transform\n * @param {mat4} matrix - matrix to transform with\n * @returns {vec4} out\n * @alias module:modeling/maths/vec4.transform\n */\nconst transform = (out, vector, matrix) => {\n  const [x, y, z, w] = vector\n\n  out[0] = matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12] * w\n  out[1] = matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13] * w\n  out[2] = matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14] * w\n  out[3] = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15] * w\n  return out\n}\n\nmodule.exports = transform\n","const { EPS } = require('../maths/constants')\n\nconst calculateEpsilonFromBounds = (bounds, dimensions) => {\n  let total = 0\n  for (let i = 0; i < dimensions; i++) {\n    total += bounds[1][i] - bounds[0][i]\n  }\n  return EPS * total / dimensions\n}\n\nmodule.exports = calculateEpsilonFromBounds\n","/**\n * All shapes (primitives or the results of operations) can be measured, e.g. calculate volume, etc.\n * @module modeling/measurements\n * @example\n * const { measureArea, measureBoundingBox, measureVolume } = require('@jscad/modeling').measurements\n */\nmodule.exports = {\n  measureAggregateArea: require('./measureAggregateArea'),\n  measureAggregateBoundingBox: require('./measureAggregateBoundingBox'),\n  measureAggregateEpsilon: require('./measureAggregateEpsilon'),\n  measureAggregateVolume: require('./measureAggregateVolume'),\n  measureArea: require('./measureArea'),\n  measureBoundingBox: require('./measureBoundingBox'),\n  measureBoundingSphere: require('./measureBoundingSphere'),\n  measureCenter: require('./measureCenter'),\n  measureCenterOfMass: require('./measureCenterOfMass'),\n  measureDimensions: require('./measureDimensions'),\n  measureEpsilon: require('./measureEpsilon'),\n  measureVolume: require('./measureVolume')\n}\n","const flatten = require('../utils/flatten')\n\nconst measureArea = require('./measureArea')\n\n/**\n * Measure the total (aggregate) area for the given geometries.\n * Note: This measurement will not account for overlapping geometry\n * @param {...Object} geometries - the geometries to measure.\n * @return {Number} the total surface area for the group of geometry.\n * @alias module:modeling/measurements.measureAggregateArea\n *\n * @example\n * let totalArea = measureAggregateArea(sphere(),cube())\n */\nconst measureAggregateArea = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateArea: no geometries supplied')\n  const areas = measureArea(geometries)\n  if (geometries.length === 1) {\n    return areas\n  }\n  const result = 0\n  return areas.reduce((result, area) => result + area, result)\n}\n\nmodule.exports = measureAggregateArea\n","const flatten = require('../utils/flatten')\nconst vec3min = require('../maths/vec3/min')\nconst vec3max = require('../maths/vec3/max')\n\nconst measureBoundingBox = require('./measureBoundingBox')\n\n/**\n * Measure the aggregated minimum and maximum bounds for the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the min and max bounds for the group of geometry, i.e. [[x,y,z],[X,Y,Z]]\n * @alias module:modeling/measurements.measureAggregateBoundingBox\n *\n * @example\n * let bounds = measureAggregateBoundingBox(sphere(),cube())\n */\nconst measureAggregateBoundingBox = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateBoundingBox: no geometries supplied')\n  const bounds = measureBoundingBox(geometries)\n  if (geometries.length === 1) {\n    return bounds\n  }\n  const result = [[Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE], [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE]]\n  return bounds.reduce((result, item) => {\n    result = [vec3min(result[0], result[0], item[0]), vec3max(result[1], result[1], item[1])]\n    return result\n  }, result)\n}\n\nmodule.exports = measureAggregateBoundingBox\n","const flatten = require('../utils/flatten')\nconst measureAggregateBoundingBox = require('./measureAggregateBoundingBox')\nconst calculateEpsilonFromBounds = require('./calculateEpsilonFromBounds')\nconst { geom2, geom3, path2 } = require('../geometries')\n\n/**\n * Measure the aggregated Epsilon for the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Number} the aggregated Epsilon for the whole group of geometries\n * @alias module:modeling/measurements.measureAggregateEpsilon\n *\n * @example\n * let groupEpsilon = measureAggregateEpsilon(sphere(),cube())\n */\nconst measureAggregateEpsilon = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateEpsilon: no geometries supplied')\n  const bounds = measureAggregateBoundingBox(geometries)\n\n  let dimensions = 0\n  dimensions = geometries.reduce((dimensions, geometry) => {\n    if (path2.isA(geometry) || geom2.isA(geometry)) return Math.max(dimensions, 2)\n    if (geom3.isA(geometry)) return Math.max(dimensions, 3)\n    return 0\n  }, dimensions)\n  return calculateEpsilonFromBounds(bounds, dimensions)\n}\n\nmodule.exports = measureAggregateEpsilon\n","const flatten = require('../utils/flatten')\n\nconst measureVolume = require('./measureVolume')\n\n/**\n * Measure the total (aggregate) volume for the given geometries.\n * Note: This measurement will not account for overlapping geometry\n * @param {...Object} geometries - the geometries to measure.\n * @return {Number} the volume for the group of geometry.\n * @alias module:modeling/measurements.measureAggregateVolume\n *\n * @example\n * let totalVolume = measureAggregateVolume(sphere(),cube())\n */\nconst measureAggregateVolume = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('measureAggregateVolume: no geometries supplied')\n  const volumes = measureVolume(geometries)\n  if (geometries.length === 1) {\n    return volumes\n  }\n  const result = 0\n  return volumes.reduce((result, volume) => result + volume, result)\n}\n\nmodule.exports = measureAggregateVolume\n","const flatten = require('../utils/flatten')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\nconst cache = new WeakMap()\n\n/*\n * Measure the area of the given geometry.\n * NOTE: paths are infinitely narrow and do not have an area\n *\n * @param {path2} geometry - geometry to measure\n * @returns {Number} area of the geometry\n */\nconst measureAreaOfPath2 = () => 0\n\n/*\n * Measure the area of the given geometry.\n * For a counter clockwise rotating geometry (about Z) the area is positive, otherwise negative.\n *\n * @see http://paulbourke.net/geometry/polygonmesh/\n * @param {geom2} geometry - 2D geometry to measure\n * @returns {Number} area of the geometry\n */\nconst measureAreaOfGeom2 = (geometry) => {\n  let area = cache.get(geometry)\n  if (area) return area\n\n  const sides = geom2.toSides(geometry)\n  area = sides.reduce((area, side) => area + (side[0][0] * side[1][1] - side[0][1] * side[1][0]), 0)\n  area *= 0.5\n\n  cache.set(geometry, area)\n\n  return area\n}\n\n/*\n * Measure the area of the given geometry.\n *\n * @param {geom3} geometry - 3D geometry to measure\n * @returns {Number} area of the geometry\n */\nconst measureAreaOfGeom3 = (geometry) => {\n  let area = cache.get(geometry)\n  if (area) return area\n\n  const polygons = geom3.toPolygons(geometry)\n  area = polygons.reduce((area, polygon) => area + poly3.measureArea(polygon), 0)\n\n  cache.set(geometry, area)\n\n  return area\n}\n\n/**\n * Measure the area of the given geometries.\n * @param {...Objects} geometries - the geometries to measure\n * @return {Number|Array} the area, or a list of areas for each geometry\n * @alias module:modeling/measurements.measureArea\n *\n * @example\n * let area = measureArea(sphere())\n */\nconst measureArea = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureAreaOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureAreaOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureAreaOfGeom3(geometry)\n    return 0\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureArea\n","const flatten = require('../utils/flatten')\n\nconst vec2 = require('../maths/vec2')\nconst vec3 = require('../maths/vec3')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\nconst cache = new WeakMap()\n\n/*\n * Measure the min and max bounds of the given (path2) geometry.\n * @return {Array[]} the min and max bounds for the geometry\n */\nconst measureBoundingBoxOfPath2 = (geometry) => {\n  let boundingBox = cache.get(geometry)\n  if (boundingBox) return boundingBox\n\n  const points = path2.toPoints(geometry)\n\n  let minpoint\n  if (points.length === 0) {\n    minpoint = vec2.create()\n  } else {\n    minpoint = vec2.clone(points[0])\n  }\n  let maxpoint = vec2.clone(minpoint)\n\n  points.forEach((point) => {\n    vec2.min(minpoint, minpoint, point)\n    vec2.max(maxpoint, maxpoint, point)\n  })\n  minpoint = [minpoint[0], minpoint[1], 0]\n  maxpoint = [maxpoint[0], maxpoint[1], 0]\n\n  boundingBox = [minpoint, maxpoint]\n\n  cache.set(geometry, boundingBox)\n\n  return boundingBox\n}\n\n/*\n * Measure the min and max bounds of the given (geom2) geometry.\n * @return {Array[]} the min and max bounds for the geometry\n */\nconst measureBoundingBoxOfGeom2 = (geometry) => {\n  let boundingBox = cache.get(geometry)\n  if (boundingBox) return boundingBox\n\n  const points = geom2.toPoints(geometry)\n\n  let minpoint\n  if (points.length === 0) {\n    minpoint = vec2.create()\n  } else {\n    minpoint = vec2.clone(points[0])\n  }\n  let maxpoint = vec2.clone(minpoint)\n\n  points.forEach((point) => {\n    vec2.min(minpoint, minpoint, point)\n    vec2.max(maxpoint, maxpoint, point)\n  })\n\n  minpoint = [minpoint[0], minpoint[1], 0]\n  maxpoint = [maxpoint[0], maxpoint[1], 0]\n\n  boundingBox = [minpoint, maxpoint]\n\n  cache.set(geometry, boundingBox)\n\n  return boundingBox\n}\n\n/*\n * Measure the min and max bounds of the given (geom3) geometry.\n * @return {Array[]} the min and max bounds for the geometry\n */\nconst measureBoundingBoxOfGeom3 = (geometry) => {\n  let boundingBox = cache.get(geometry)\n  if (boundingBox) return boundingBox\n\n  const polygons = geom3.toPolygons(geometry)\n\n  let minpoint = vec3.create()\n  if (polygons.length > 0) {\n    const points = poly3.toPoints(polygons[0])\n    vec3.copy(minpoint, points[0])\n  }\n  let maxpoint = vec3.clone(minpoint)\n\n  polygons.forEach((polygon) => {\n    poly3.toPoints(polygon).forEach((point) => {\n      vec3.min(minpoint, minpoint, point)\n      vec3.max(maxpoint, maxpoint, point)\n    })\n  })\n\n  minpoint = [minpoint[0], minpoint[1], minpoint[2]]\n  maxpoint = [maxpoint[0], maxpoint[1], maxpoint[2]]\n\n  boundingBox = [minpoint, maxpoint]\n\n  cache.set(geometry, boundingBox)\n\n  return boundingBox\n}\n\n/**\n * Measure the min and max bounds of the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the min and max bounds, or a list of bounds for each geometry\n * @alias module:modeling/measurements.measureBoundingBox\n *\n * @example\n * let bounds = measureBoundingBox(sphere())\n */\nconst measureBoundingBox = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureBoundingBoxOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureBoundingBoxOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureBoundingBoxOfGeom3(geometry)\n    return [[0, 0, 0], [0, 0, 0]]\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureBoundingBox\n","const flatten = require('../utils/flatten')\n\nconst vec2 = require('../maths/vec2')\nconst vec3 = require('../maths/vec3')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\nconst cacheOfBoundingSpheres = new WeakMap()\n\n/*\n * Measure the bounding sphere of the given (path2) geometry.\n * @return {[[x, y, z], radius]} the bounding sphere for the geometry\n */\nconst measureBoundingSphereOfPath2 = (geometry) => {\n  let boundingSphere = cacheOfBoundingSpheres.get(geometry)\n  if (boundingSphere !== undefined) return boundingSphere\n\n  const centroid = vec3.create()\n  let radius = 0\n\n  const points = path2.toPoints(geometry)\n\n  if (points.length > 0) {\n    // calculate the centroid of the geometry\n    let numPoints = 0\n    const temp = vec3.create()\n    points.forEach((point) => {\n      vec3.add(centroid, centroid, vec3.fromVec2(temp, point, 0))\n      numPoints++\n    })\n    vec3.scale(centroid, centroid, 1 / numPoints)\n\n    // find the farthest point from the centroid\n    points.forEach((point) => {\n      radius = Math.max(radius, vec2.squaredDistance(centroid, point))\n    })\n    radius = Math.sqrt(radius)\n  }\n\n  boundingSphere = [centroid, radius]\n  cacheOfBoundingSpheres.set(geometry, boundingSphere)\n\n  return boundingSphere\n}\n\n/*\n * Measure the bounding sphere of the given (geom2) geometry.\n * @return {[[x, y, z], radius]} the bounding sphere for the geometry\n */\nconst measureBoundingSphereOfGeom2 = (geometry) => {\n  let boundingSphere = cacheOfBoundingSpheres.get(geometry)\n  if (boundingSphere !== undefined) return boundingSphere\n\n  const centroid = vec3.create()\n  let radius = 0\n\n  const sides = geom2.toSides(geometry)\n\n  if (sides.length > 0) {\n    // calculate the centroid of the geometry\n    let numPoints = 0\n    const temp = vec3.create()\n    sides.forEach((side) => {\n      vec3.add(centroid, centroid, vec3.fromVec2(temp, side[0], 0))\n      numPoints++\n    })\n    vec3.scale(centroid, centroid, 1 / numPoints)\n\n    // find the farthest point from the centroid\n    sides.forEach((side) => {\n      radius = Math.max(radius, vec2.squaredDistance(centroid, side[0]))\n    })\n    radius = Math.sqrt(radius)\n  }\n\n  boundingSphere = [centroid, radius]\n  cacheOfBoundingSpheres.set(geometry, boundingSphere)\n\n  return boundingSphere\n}\n\n/*\n * Measure the bounding sphere of the given (geom3) geometry.\n * @return {[[x, y, z], radius]} the bounding sphere for the geometry\n */\nconst measureBoundingSphereOfGeom3 = (geometry) => {\n  let boundingSphere = cacheOfBoundingSpheres.get(geometry)\n  if (boundingSphere !== undefined) return boundingSphere\n\n  const centroid = vec3.create()\n  let radius = 0\n\n  const polygons = geom3.toPolygons(geometry)\n\n  if (polygons.length > 0) {\n    // calculate the centroid of the geometry\n    let numPoints = 0\n    polygons.forEach((polygon) => {\n      poly3.toPoints(polygon).forEach((point) => {\n        vec3.add(centroid, centroid, point)\n        numPoints++\n      })\n    })\n    vec3.scale(centroid, centroid, 1 / numPoints)\n\n    // find the farthest point from the centroid\n    polygons.forEach((polygon) => {\n      poly3.toPoints(polygon).forEach((point) => {\n        radius = Math.max(radius, vec3.squaredDistance(centroid, point))\n      })\n    })\n    radius = Math.sqrt(radius)\n  }\n\n  boundingSphere = [centroid, radius]\n  cacheOfBoundingSpheres.set(geometry, boundingSphere)\n\n  return boundingSphere\n}\n\n/**\n * Measure the (approximate) bounding sphere of the given geometries.\n * @see https://en.wikipedia.org/wiki/Bounding_sphere\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the bounding sphere for each geometry, i.e. [centroid, radius]\n * @alias module:modeling/measurements.measureBoundingSphere\n *\n * @example\n * let bounds = measureBoundingSphere(cube())\n */\nconst measureBoundingSphere = (...geometries) => {\n  geometries = flatten(geometries)\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureBoundingSphereOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureBoundingSphereOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureBoundingSphereOfGeom3(geometry)\n    return [[0, 0, 0], 0]\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureBoundingSphere\n","const flatten = require('../utils/flatten')\n\nconst measureBoundingBox = require('./measureBoundingBox')\n\n/**\n * Measure the center of the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the center point for each geometry, i.e. [X, Y, Z]\n * @alias module:modeling/measurements.measureCenter\n *\n * @example\n * let center = measureCenter(sphere())\n */\nconst measureCenter = (...geometries) => {\n  geometries = flatten(geometries)\n\n  const results = geometries.map((geometry) => {\n    const bounds = measureBoundingBox(geometry)\n    return [\n      (bounds[0][0] + ((bounds[1][0] - bounds[0][0]) / 2)),\n      (bounds[0][1] + ((bounds[1][1] - bounds[0][1]) / 2)),\n      (bounds[0][2] + ((bounds[1][2] - bounds[0][2]) / 2))\n    ]\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureCenter\n","const flatten = require('../utils/flatten')\n\nconst vec3 = require('../maths/vec3')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\n\nconst cacheOfCenterOfMass = new WeakMap()\n\n/*\n * Measure the center of mass for the given geometry.\n *\n * @see http://paulbourke.net/geometry/polygonmesh/\n * @return {Array} the center of mass for the geometry\n */\nconst measureCenterOfMassGeom2 = (geometry) => {\n  let centerOfMass = cacheOfCenterOfMass.get(geometry)\n  if (centerOfMass !== undefined) return centerOfMass\n\n  const sides = geom2.toSides(geometry)\n\n  let area = 0\n  let x = 0\n  let y = 0\n  if (sides.length > 0) {\n    for (let i = 0; i < sides.length; i++) {\n      const p1 = sides[i][0]\n      const p2 = sides[i][1]\n\n      const a = p1[0] * p2[1] - p1[1] * p2[0]\n      area += a\n      x += (p1[0] + p2[0]) * a\n      y += (p1[1] + p2[1]) * a\n    }\n    area /= 2\n\n    const f = 1 / (area * 6)\n    x *= f\n    y *= f\n  }\n\n  centerOfMass = vec3.fromValues(x, y, 0)\n\n  cacheOfCenterOfMass.set(geometry, centerOfMass)\n  return centerOfMass\n}\n\n/*\n * Measure the center of mass for the given geometry.\n * @return {Array} the center of mass for the geometry\n */\nconst measureCenterOfMassGeom3 = (geometry) => {\n  let centerOfMass = cacheOfCenterOfMass.get(geometry)\n  if (centerOfMass !== undefined) return centerOfMass\n\n  centerOfMass = vec3.create() // 0, 0, 0\n\n  const polygons = geom3.toPolygons(geometry)\n  if (polygons.length === 0) return centerOfMass\n\n  let totalVolume = 0\n  const vector = vec3.create() // for speed\n  polygons.forEach((polygon) => {\n    // calculate volume and center of each tetrahedron\n    const vertices = polygon.vertices\n    for (let i = 0; i < vertices.length - 2; i++) {\n      vec3.cross(vector, vertices[i + 1], vertices[i + 2])\n      const volume = vec3.dot(vertices[0], vector) / 6\n\n      totalVolume += volume\n\n      vec3.add(vector, vertices[0], vertices[i + 1])\n      vec3.add(vector, vector, vertices[i + 2])\n      const weightedCenter = vec3.scale(vector, vector, 1 / 4 * volume)\n\n      vec3.add(centerOfMass, centerOfMass, weightedCenter)\n    }\n  })\n  vec3.scale(centerOfMass, centerOfMass, 1 / totalVolume)\n\n  cacheOfCenterOfMass.set(geometry, centerOfMass)\n  return centerOfMass\n}\n\n/**\n * Measure the center of mass for the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the center of mass for each geometry, i.e. [X, Y, Z]\n * @alias module:modeling/measurements.measureCenterOfMass\n *\n * @example\n * let center = measureCenterOfMass(sphere())\n */\nconst measureCenterOfMass = (...geometries) => {\n  geometries = flatten(geometries)\n\n  const results = geometries.map((geometry) => {\n    // NOTE: center of mass for geometry path2 is not possible\n    if (geom2.isA(geometry)) return measureCenterOfMassGeom2(geometry)\n    if (geom3.isA(geometry)) return measureCenterOfMassGeom3(geometry)\n    return [0, 0, 0]\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureCenterOfMass\n","const flatten = require('../utils/flatten')\n\nconst measureBoundingBox = require('./measureBoundingBox')\n\n/**\n * Measure the dimensions of the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Array} the dimensions for each geometry, i.e. [width, depth, height]\n * @alias module:modeling/measurements.measureDimensions\n *\n * @example\n * let dimensions = measureDimensions(sphere())\n */\nconst measureDimensions = (...geometries) => {\n  geometries = flatten(geometries)\n\n  const results = geometries.map((geometry) => {\n    const boundingBox = measureBoundingBox(geometry)\n    return [\n      boundingBox[1][0] - boundingBox[0][0],\n      boundingBox[1][1] - boundingBox[0][1],\n      boundingBox[1][2] - boundingBox[0][2]\n    ]\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureDimensions\n","const flatten = require('../utils/flatten')\nconst { geom2, geom3, path2 } = require('../geometries')\n\nconst calculateEpsilonFromBounds = require('./calculateEpsilonFromBounds')\nconst measureBoundingBox = require('./measureBoundingBox')\n\n/*\n * Measure the epsilon of the given (path2) geometry.\n * @return {Number} the epsilon (precision) of the geometry\n */\nconst measureEpsilonOfPath2 = (geometry) => calculateEpsilonFromBounds(measureBoundingBox(geometry), 2)\n\n/*\n * Measure the epsilon of the given (geom2) geometry.\n * @return {Number} the epsilon (precision) of the geometry\n */\nconst measureEpsilonOfGeom2 = (geometry) => calculateEpsilonFromBounds(measureBoundingBox(geometry), 2)\n\n/*\n * Measure the epsilon of the given (geom3) geometry.\n * @return {Float} the epsilon (precision) of the geometry\n */\nconst measureEpsilonOfGeom3 = (geometry) => calculateEpsilonFromBounds(measureBoundingBox(geometry), 3)\n\n/**\n * Measure the epsilon of the given geometries.\n * Epsilon values are used in various functions to determine minimum distances between points, planes, etc.\n * @param {...Object} geometries - the geometries to measure\n * @return {Number|Array} the epsilon, or a list of epsilons for each geometry\n * @alias module:modeling/measurements.measureEpsilon\n *\n * @example\n * let epsilon = measureEpsilon(sphere())\n */\nconst measureEpsilon = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureEpsilonOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureEpsilonOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureEpsilonOfGeom3(geometry)\n    return 0\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureEpsilon\n","const flatten = require('../utils/flatten')\n\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\nconst poly3 = require('../geometries/poly3')\n\nconst cache = new WeakMap()\n\n/*\n * Measure the volume of the given geometry.\n * NOTE: paths are infinitely narrow and do not have an volume\n *\n * @param {Path2} geometry - geometry to measure\n * @returns {Number} volume of the geometry\n */\nconst measureVolumeOfPath2 = () => 0\n\n/*\n * Measure the volume of the given geometry.\n * NOTE: 2D geometry are infinitely thin and do not have an volume\n *\n * @param {Geom2} geometry - 2D geometry to measure\n * @returns {Number} volume of the geometry\n */\nconst measureVolumeOfGeom2 = () => 0\n\n/*\n * Measure the volume of the given geometry.\n *\n * @param {Geom3} geometry - 3D geometry to measure\n * @returns {Number} volume of the geometry\n */\nconst measureVolumeOfGeom3 = (geometry) => {\n  let volume = cache.get(geometry)\n  if (volume) return volume\n\n  const polygons = geom3.toPolygons(geometry)\n  volume = polygons.reduce((volume, polygon) => volume + poly3.measureSignedVolume(polygon), 0)\n\n  cache.set(geometry, volume)\n\n  return volume\n}\n\n/**\n * Measure the volume of the given geometries.\n * @param {...Object} geometries - the geometries to measure\n * @return {Number|Array} the volume, or a list of volumes for each geometry\n * @alias module:modeling/measurements.measureVolume\n *\n * @example\n * let volume = measureVolume(sphere())\n */\nconst measureVolume = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return measureVolumeOfPath2(geometry)\n    if (geom2.isA(geometry)) return measureVolumeOfGeom2(geometry)\n    if (geom3.isA(geometry)) return measureVolumeOfGeom3(geometry)\n    return 0\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = measureVolume\n","const vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst fromFakePolygon = (epsilon, polygon) => {\n  // this can happen based on union, seems to be residuals -\n  // return null and handle in caller\n  if (polygon.vertices.length < 4) {\n    return null\n  }\n  const vert1Indices = []\n  const points3D = polygon.vertices.filter((vertex, i) => {\n    if (vertex[2] > 0) {\n      vert1Indices.push(i)\n      return true\n    }\n    return false\n  })\n\n  if (points3D.length !== 2) {\n    throw new Error('Assertion failed: fromFakePolygon: not enough points found') // TBD remove later\n  }\n\n  const points2D = points3D.map((v3) => {\n    const x = Math.round(v3[0] / epsilon) * epsilon + 0 // no more -0\n    const y = Math.round(v3[1] / epsilon) * epsilon + 0 // no more -0\n    return vec2.fromValues(x, y)\n  })\n\n  if (vec2.equals(points2D[0], points2D[1])) return null\n\n  const d = vert1Indices[1] - vert1Indices[0]\n  if (d === 1 || d === 3) {\n    if (d === 1) {\n      points2D.reverse()\n    }\n  } else {\n    throw new Error('Assertion failed: fromFakePolygon: unknown index ordering')\n  }\n  return points2D\n}\n\n/*\n * Convert the given polygons to a list of sides.\n * The polygons must have only z coordinates +1 and -1, as constructed by to3DWalls().\n */\nconst fromFakePolygons = (epsilon, polygons) => {\n  const sides = polygons.map((polygon) => fromFakePolygon(epsilon, polygon)).filter((polygon) => (polygon !== null))\n  return geom2.create(sides)\n}\n\nmodule.exports = fromFakePolygons\n","/**\n * All shapes (primitives or the results of operations) can be passed to boolean functions\n * to perform logical operations, e.g. remove a hole from a board.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/booleans\n * @example\n * const { intersect, subtract, union } = require('@jscad/modeling').booleans\n */\nmodule.exports = {\n  intersect: require('./intersect'),\n  scission: require('./scission'),\n  subtract: require('./subtract'),\n  union: require('./union')\n}\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\n\nconst intersectGeom2 = require('./intersectGeom2')\nconst intersectGeom3 = require('./intersectGeom3')\n\n/**\n * Return a new geometry representing space in both the first geometry and\n * all subsequent geometries.\n * The given geometries should be of the same type, either geom2 or geom3.\n *\n * @param {...Object} geometries - list of geometries\n * @returns {geom2|geom3} a new geometry\n * @alias module:modeling/booleans.intersect\n *\n * @example\n * let myshape = intersect(cube({size: [5,5,5]}), cube({size: [5,5,5], center: [5,5,5]}))\n *\n * @example\n * +-------+\n * |       |\n * |   A   |\n * |    +--+----+   =   +--+\n * +----+--+    |       +--+\n *      |   B   |\n *      |       |\n *      +-------+\n */\nconst intersect = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only intersect of the types are supported')\n  }\n\n  const geometry = geometries[0]\n  // if (path.isA(geometry)) return pathintersect(matrix, geometries)\n  if (geom2.isA(geometry)) return intersectGeom2(geometries)\n  if (geom3.isA(geometry)) return intersectGeom3(geometries)\n  return geometry\n}\n\nmodule.exports = intersect\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst fromFakePolygons = require('./fromFakePolygons')\nconst to3DWalls = require('./to3DWalls')\nconst intersectGeom3 = require('./intersectGeom3')\n\n/*\n * Return a new 2D geometry representing space in both the first geometry and\n * in the subsequent geometries. None of the given geometries are modified.\n * @param {...geom2} geometries - list of 2D geometries\n * @returns {geom2} new 2D geometry\n */\nconst intersect = (...geometries) => {\n  geometries = flatten(geometries)\n  const newgeometries = geometries.map((geometry) => to3DWalls({ z0: -1, z1: 1 }, geometry))\n\n  const newgeom3 = intersectGeom3(newgeometries)\n  const epsilon = measureEpsilon(newgeom3)\n\n  return fromFakePolygons(epsilon, geom3.toPolygons(newgeom3))\n}\n\nmodule.exports = intersect\n","const flatten = require('../../utils/flatten')\n\nconst retessellate = require('../modifiers/retessellate')\n\nconst intersectSub = require('./intersectGeom3Sub')\n\n/*\n * Return a new 3D geometry representing space in both the first geometry and\n * in the subsequent geometries. None of the given geometries are modified.\n * @param {...geom3} geometries - list of 3D geometries\n * @returns {geom3} new 3D geometry\n */\nconst intersect = (...geometries) => {\n  geometries = flatten(geometries)\n\n  let newgeometry = geometries.shift()\n  geometries.forEach((geometry) => {\n    newgeometry = intersectSub(newgeometry, geometry)\n  })\n\n  newgeometry = retessellate(newgeometry)\n  return newgeometry\n}\n\nmodule.exports = intersect\n","const geom3 = require('../../geometries/geom3')\n\nconst mayOverlap = require('./mayOverlap')\nconst { Tree } = require('./trees')\n\n/*\n * Return a new 3D geometry representing the space in both the first geometry and\n * the second geometry. None of the given geometries are modified.\n * @param {geom3} geometry1 - a geometry\n * @param {geom3} geometry2 - a geometry\n * @returns {geom3} new 3D geometry\n */\nconst intersectGeom3Sub = (geometry1, geometry2) => {\n  if (!mayOverlap(geometry1, geometry2)) {\n    return geom3.create() // empty geometry\n  }\n\n  const a = new Tree(geom3.toPolygons(geometry1))\n  const b = new Tree(geom3.toPolygons(geometry2))\n\n  a.invert()\n  b.clipTo(a)\n  b.invert()\n  a.clipTo(b)\n  b.clipTo(a)\n  a.addPolygons(b.allPolygons())\n  a.invert()\n\n  const newpolygons = a.allPolygons()\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = intersectGeom3Sub\n","const { EPS } = require('../../maths/constants')\n\nconst measureBoundingBox = require('../../measurements/measureBoundingBox')\n\n/*\n * Determine if the given geometries overlap by comparing min and max bounds.\n * NOTE: This is used in union for performance gains.\n * @param {geom3} geometry1 - geometry for comparison\n * @param {geom3} geometry2 - geometry for comparison\n * @returns {boolean} true if the geometries overlap\n */\nconst mayOverlap = (geometry1, geometry2) => {\n  // FIXME accessing the data structure of the geometry should not be allowed\n  if ((geometry1.polygons.length === 0) || (geometry2.polygons.length === 0)) {\n    return false\n  }\n\n  const bounds1 = measureBoundingBox(geometry1)\n  const min1 = bounds1[0]\n  const max1 = bounds1[1]\n\n  const bounds2 = measureBoundingBox(geometry2)\n  const min2 = bounds2[0]\n  const max2 = bounds2[1]\n\n  if ((min2[0] - max1[0]) > EPS) return false\n  if ((min1[0] - max2[0]) > EPS) return false\n  if ((min2[1] - max1[1]) > EPS) return false\n  if ((min1[1] - max2[1]) > EPS) return false\n  if ((min2[2] - max1[2]) > EPS) return false\n  if ((min1[2] - max2[2]) > EPS) return false\n  return true\n}\n\nmodule.exports = mayOverlap\n","const flatten = require('../../utils/flatten')\n\n// const geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\n\n// const scissionGeom2 = require('./scissionGeom2')\nconst scissionGeom3 = require('./scissionGeom3')\n\n/**\n * Scission (divide) the given geometry into the component pieces.\n *\n * @param {...Object} objects - list of geometries\n * @returns {Array} list of pieces from each geometry\n * @alias module:modeling/booleans.scission\n *\n * @example\n * let figure = require('./my.stl')\n * let pieces = scission(figure)\n *\n * @example\n * +-------+            +-------+\n * |       |            |       |\n * |   +---+            | A +---+\n * |   |    +---+   =   |   |    +---+\n * +---+    |   |       +---+    |   |\n *      +---+   |            +---+   |\n *      |       |            |    B  |\n *      +-------+            +-------+\n */\nconst scission = (...objects) => {\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    // if (path2.isA(object)) return path2.transform(matrix, object)\n    // if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return scissionGeom3(object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = scission\n","const vec3 = require('../../maths/vec3')\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst geom3 = require('../../geometries/geom3')\n\n// returns array numerically sorted and duplicates removed\nconst sortNb = (array) => array.sort((a, b) => a - b).filter((item, pos, ary) => !pos || item !== ary[pos - 1])\n\nconst insertMapping = (map, point, index) => {\n  const key = `${point}`\n  const mapping = map.get(key)\n  if (mapping === undefined) {\n    map.set(key, [index])\n  } else {\n    mapping.push(index)\n  }\n}\n\nconst findMapping = (map, point) => {\n  const key = `${point}`\n  return map.get(key)\n}\n\nconst scissionGeom3 = (geometry) => {\n  // construit table de correspondance entre polygones\n  // build polygons lookup table\n  const eps = measureEpsilon(geometry)\n  const polygons = geom3.toPolygons(geometry)\n  const pl = polygons.length\n\n  const indexesPerPoint = new Map()\n  const temp = vec3.create()\n  polygons.forEach((polygon, index) => {\n    polygon.vertices.forEach((point) => {\n      insertMapping(indexesPerPoint, vec3.snap(temp, point, eps), index)\n    })\n  })\n\n  const indexesPerPolygon = polygons.map((polygon) => {\n    let indexes = []\n    polygon.vertices.forEach((point) => {\n      indexes = indexes.concat(findMapping(indexesPerPoint, vec3.snap(temp, point, eps)))\n    })\n    return { e: 1, d: sortNb(indexes) } // for each polygon, push the list of indexes\n  })\n\n  indexesPerPoint.clear()\n\n  // regroupe les correspondances des polygones se touchant\n  // boucle ne s'arrêtant que quand deux passages retournent le même nb de polygones\n  // merge lookup data from linked polygons as long as possible\n  let merges = 0\n  const ippl = indexesPerPolygon.length\n  for (let i = 0; i < ippl; i++) {\n    const mapi = indexesPerPolygon[i]\n    // merge mappings if necessary\n    if (mapi.e > 0) {\n      const indexes = new Array(pl)\n      indexes[i] = true // include ourself\n      do {\n        merges = 0\n        // loop through the known indexes\n        indexes.forEach((e, j) => {\n          const mapj = indexesPerPolygon[j]\n          // merge this mapping if necessary\n          if (mapj.e > 0) {\n            mapj.e = -1 // merged\n            for (let d = 0; d < mapj.d.length; d++) {\n              indexes[mapj.d[d]] = true\n            }\n            merges++\n          }\n        })\n      } while (merges > 0)\n      mapi.indexes = indexes\n    }\n  }\n\n  // construit le tableau des geometry à retourner\n  // build array of geometry to return\n  const newgeometries = []\n  for (let i = 0; i < ippl; i++) {\n    if (indexesPerPolygon[i].indexes) {\n      const newpolygons = []\n      indexesPerPolygon[i].indexes.forEach((e, p) => newpolygons.push(polygons[p]))\n      newgeometries.push(geom3.create(newpolygons))\n    }\n  }\n\n  return newgeometries\n}\n\nmodule.exports = scissionGeom3\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\n\nconst subtractGeom2 = require('./subtractGeom2')\nconst subtractGeom3 = require('./subtractGeom3')\n\n/**\n * Return a new geometry representing space in the first geometry but\n * not in all subsequent geometries.\n * The given geometries should be of the same type, either geom2 or geom3.\n *\n * @param {...Object} geometries - list of geometries\n * @returns {geom2|geom3} a new geometry\n * @alias module:modeling/booleans.subtract\n *\n * @example\n * let myshape = subtract(cuboid({size: [5,5,5]}), cuboid({size: [5,5,5], center: [5,5,5]}))\n *\n * @example\n * +-------+            +-------+\n * |       |            |       |\n * |   A   |            |       |\n * |    +--+----+   =   |    +--+\n * +----+--+    |       +----+\n *      |   B   |\n *      |       |\n *      +-------+\n */\nconst subtract = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only subtract of the types are supported')\n  }\n\n  const geometry = geometries[0]\n  // if (path.isA(geometry)) return pathsubtract(matrix, geometries)\n  if (geom2.isA(geometry)) return subtractGeom2(geometries)\n  if (geom3.isA(geometry)) return subtractGeom3(geometries)\n  return geometry\n}\n\nmodule.exports = subtract\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst fromFakePolygons = require('./fromFakePolygons')\nconst to3DWalls = require('./to3DWalls')\nconst subtractGeom3 = require('./subtractGeom3')\n\n/*\n * Return a new 2D geometry representing space in the first geometry but\n * not in the subsequent geometries. None of the given geometries are modified.\n * @param {...geom2} geometries - list of geometries\n * @returns {geom2} new 2D geometry\n */\nconst subtract = (...geometries) => {\n  geometries = flatten(geometries)\n  const newgeometries = geometries.map((geometry) => to3DWalls({ z0: -1, z1: 1 }, geometry))\n\n  const newgeom3 = subtractGeom3(newgeometries)\n  const epsilon = measureEpsilon(newgeom3)\n\n  return fromFakePolygons(epsilon, geom3.toPolygons(newgeom3))\n}\n\nmodule.exports = subtract\n","const flatten = require('../../utils/flatten')\n\nconst retessellate = require('../modifiers/retessellate')\n\nconst subtractSub = require('./subtractGeom3Sub')\n\n/*\n * Return a new 3D geometry representing space in this geometry but not in the given geometries.\n * Neither this geometry nor the given geometries are modified.\n * @param {...geom3} geometries - list of geometries\n * @returns {geom3} new 3D geometry\n */\nconst subtract = (...geometries) => {\n  geometries = flatten(geometries)\n\n  let newgeometry = geometries.shift()\n  geometries.forEach((geometry) => {\n    newgeometry = subtractSub(newgeometry, geometry)\n  })\n\n  newgeometry = retessellate(newgeometry)\n  return newgeometry\n}\n\nmodule.exports = subtract\n","const geom3 = require('../../geometries/geom3')\n\nconst mayOverlap = require('./mayOverlap')\nconst { Tree } = require('./trees')\n\n/*\n * Return a new 3D geometry representing the space in the first geometry but not\n * in the second geometry. None of the given geometries are modified.\n * @param {geom3} geometry1 - a geometry\n * @param {geom3} geometry2 - a geometry\n * @returns {geom3} new 3D geometry\n */\nconst subtractGeom3Sub = (geometry1, geometry2) => {\n  if (!mayOverlap(geometry1, geometry2)) {\n    return geom3.clone(geometry1)\n  }\n\n  const a = new Tree(geom3.toPolygons(geometry1))\n  const b = new Tree(geom3.toPolygons(geometry2))\n\n  a.invert()\n  a.clipTo(b)\n  b.clipTo(a, true)\n  a.addPolygons(b.allPolygons())\n  a.invert()\n\n  const newpolygons = a.allPolygons()\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = subtractGeom3Sub\n","const vec3 = require('../../maths/vec3')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\n/*\n * Create a polygon (wall) from the given Z values and side.\n */\nconst to3DWall = (z0, z1, side) => {\n  const points = [\n    vec3.fromVec2(vec3.create(), side[0], z0),\n    vec3.fromVec2(vec3.create(), side[1], z0),\n    vec3.fromVec2(vec3.create(), side[1], z1),\n    vec3.fromVec2(vec3.create(), side[0], z1)\n  ]\n  return poly3.create(points)\n}\n\n/*\n * Create a 3D geometry with walls, as constructed from the given options and geometry.\n *\n * @param {Object} options - options with Z offsets\n * @param {geom2} geometry - geometry used as base of walls\n * @return {geom3} the new geometry\n */\nconst to3DWalls = (options, geometry) => {\n  const sides = geom2.toSides(geometry)\n\n  const polygons = sides.map((side) => to3DWall(options.z0, options.z1, side))\n\n  const result = geom3.create(polygons)\n  return result\n}\n\nmodule.exports = to3DWalls\n","const plane = require('../../../maths/plane')\nconst poly3 = require('../../../geometries/poly3')\n\n// # class Node\n// Holds a node in a BSP tree.\n// A BSP tree is built from a collection of polygons by picking a polygon to split along.\n// Polygons are not stored directly in the tree, but in PolygonTreeNodes, stored in this.polygontreenodes.\n// Those PolygonTreeNodes are children of the owning Tree.polygonTree.\n// This is not a leafy BSP tree since there is no distinction between internal and leaf nodes.\nclass Node {\n  constructor (parent) {\n    this.plane = null\n    this.front = null\n    this.back = null\n    this.polygontreenodes = []\n    this.parent = parent\n  }\n\n  // Convert solid space to empty space and empty space to solid space.\n  invert () {\n    const queue = [this]\n    let node\n    for (let i = 0; i < queue.length; i++) {\n      node = queue[i]\n      if (node.plane) node.plane = plane.flip(plane.create(), node.plane)\n      if (node.front) queue.push(node.front)\n      if (node.back) queue.push(node.back)\n      const temp = node.front\n      node.front = node.back\n      node.back = temp\n    }\n  }\n\n  // clip polygontreenodes to our plane\n  // calls remove() for all clipped PolygonTreeNodes\n  clipPolygons (polygontreenodes, alsoRemovecoplanarFront) {\n    let current = { node: this, polygontreenodes: polygontreenodes }\n    let node\n    const stack = []\n\n    do {\n      node = current.node\n      polygontreenodes = current.polygontreenodes\n\n      if (node.plane) {\n        const plane = node.plane\n\n        const backnodes = []\n        const frontnodes = []\n        const coplanarfrontnodes = alsoRemovecoplanarFront ? backnodes : frontnodes\n        const numpolygontreenodes = polygontreenodes.length\n        for (let i = 0; i < numpolygontreenodes; i++) {\n          const treenode = polygontreenodes[i]\n          if (!treenode.isRemoved()) {\n            // split this polygon tree node using the plane\n            // NOTE: children are added to the tree if there are spanning polygons\n            treenode.splitByPlane(plane, coplanarfrontnodes, backnodes, frontnodes, backnodes)\n          }\n        }\n\n        if (node.front && (frontnodes.length > 0)) {\n          // add front node for further splitting\n          stack.push({ node: node.front, polygontreenodes: frontnodes })\n        }\n        const numbacknodes = backnodes.length\n        if (node.back && (numbacknodes > 0)) {\n          // add back node for further splitting\n          stack.push({ node: node.back, polygontreenodes: backnodes })\n        } else {\n          // remove all back nodes from processing\n          for (let i = 0; i < numbacknodes; i++) {\n            backnodes[i].remove()\n          }\n        }\n      }\n      current = stack.pop()\n    } while (current !== undefined)\n  }\n\n  // Remove all polygons in this BSP tree that are inside the other BSP tree\n  // `tree`.\n  clipTo (tree, alsoRemovecoplanarFront) {\n    let node = this\n    const stack = []\n    do {\n      if (node.polygontreenodes.length > 0) {\n        tree.rootnode.clipPolygons(node.polygontreenodes, alsoRemovecoplanarFront)\n      }\n      if (node.front) stack.push(node.front)\n      if (node.back) stack.push(node.back)\n      node = stack.pop()\n    } while (node !== undefined)\n  }\n\n  addPolygonTreeNodes (newpolygontreenodes) {\n    let current = { node: this, polygontreenodes: newpolygontreenodes }\n    const stack = []\n    do {\n      const node = current.node\n      const polygontreenodes = current.polygontreenodes\n\n      if (polygontreenodes.length === 0) {\n        current = stack.pop()\n        continue\n      }\n      if (!node.plane) {\n        let index = 0 // default\n        index = Math.floor(polygontreenodes.length / 2)\n        // index = polygontreenodes.length >> 1\n        // index = Math.floor(Math.random()*polygontreenodes.length)\n        const bestpoly = polygontreenodes[index].getPolygon()\n        node.plane = poly3.plane(bestpoly)\n      }\n      const frontnodes = []\n      const backnodes = []\n      const n = polygontreenodes.length\n      for (let i = 0; i < n; ++i) {\n        polygontreenodes[i].splitByPlane(node.plane, node.polygontreenodes, backnodes, frontnodes, backnodes)\n      }\n\n      if (frontnodes.length > 0) {\n        if (!node.front) node.front = new Node(node)\n\n        // unable to split by any of the current nodes\n        const stopCondition = n === frontnodes.length && backnodes.length === 0\n        if (stopCondition) node.front.polygontreenodes = frontnodes\n        else stack.push({ node: node.front, polygontreenodes: frontnodes })\n      }\n      if (backnodes.length > 0) {\n        if (!node.back) node.back = new Node(node)\n\n        // unable to split by any of the current nodes\n        const stopCondition = n === backnodes.length && frontnodes.length === 0\n\n        if (stopCondition) node.back.polygontreenodes = backnodes\n        else stack.push({ node: node.back, polygontreenodes: backnodes })\n      }\n\n      current = stack.pop()\n    } while (current !== undefined)\n  }\n}\n\nmodule.exports = Node\n","const { EPS } = require('../../../maths/constants')\n\nconst vec3 = require('../../../maths/vec3')\n\nconst poly3 = require('../../../geometries/poly3')\n\nconst splitPolygonByPlane = require('./splitPolygonByPlane')\n\n// # class PolygonTreeNode\n// This class manages hierarchical splits of polygons.\n// At the top is a root node which does not hold a polygon, only child PolygonTreeNodes.\n// Below that are zero or more 'top' nodes; each holds a polygon.\n// The polygons can be in different planes.\n// splitByPlane() splits a node by a plane. If the plane intersects the polygon, two new child nodes\n// are created holding the splitted polygon.\n// getPolygons() retrieves the polygons from the tree. If for PolygonTreeNode the polygon is split but\n// the two split parts (child nodes) are still intact, then the unsplit polygon is returned.\n// This ensures that we can safely split a polygon into many fragments. If the fragments are untouched,\n// getPolygons() will return the original unsplit polygon instead of the fragments.\n// remove() removes a polygon from the tree. Once a polygon is removed, the parent polygons are invalidated\n// since they are no longer intact.\nclass PolygonTreeNode {\n  // constructor creates the root node\n  constructor (parent, polygon) {\n    this.parent = parent\n    this.children = []\n    this.polygon = polygon\n    this.removed = false  // state of branch or leaf\n  }\n\n  // fill the tree with polygons. Should be called on the root node only; child nodes must\n  // always be a derivate (split) of the parent node.\n  addPolygons (polygons) {\n    // new polygons can only be added to root node; children can only be splitted polygons\n    if (!this.isRootNode()) {\n      throw new Error('Assertion failed')\n    }\n    const _this = this\n    polygons.forEach((polygon) => {\n      _this.addChild(polygon)\n    })\n  }\n\n  // remove a node\n  // - the siblings become toplevel nodes\n  // - the parent is removed recursively\n  remove () {\n    if (!this.removed) {\n      this.removed = true\n      this.polygon = null\n\n      // remove ourselves from the parent's children list:\n      const parentschildren = this.parent.children\n      const i = parentschildren.indexOf(this)\n      if (i < 0) throw new Error('Assertion failed')\n      parentschildren.splice(i, 1)\n\n      // invalidate the parent's polygon, and of all parents above it:\n      this.parent.recursivelyInvalidatePolygon()\n    }\n  }\n\n  isRemoved () {\n    return this.removed\n  }\n\n  isRootNode () {\n    return !this.parent\n  }\n\n  // invert all polygons in the tree. Call on the root node\n  invert () {\n    if (!this.isRootNode()) throw new Error('Assertion failed') // can only call this on the root node\n    this.invertSub()\n  }\n\n  getPolygon () {\n    if (!this.polygon) throw new Error('Assertion failed') // doesn't have a polygon, which means that it has been broken down\n    return this.polygon\n  }\n\n  getPolygons (result) {\n    let children = [this]\n    const queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; ++i) { // queue size can change in loop, don't cache length\n      children = queue[i]\n      for (j = 0, l = children.length; j < l; j++) { // ok to cache length\n        node = children[j]\n        if (node.polygon) {\n          // the polygon hasn't been broken yet. We can ignore the children and return our polygon:\n          result.push(node.polygon)\n        } else {\n          // our polygon has been split up and broken, so gather all subpolygons from the children\n          if (node.children.length > 0) queue.push(node.children)\n        }\n      }\n    }\n  }\n\n  // split the node by a plane; add the resulting nodes to the frontnodes and backnodes array\n  // If the plane doesn't intersect the polygon, the 'this' object is added to one of the arrays\n  // If the plane does intersect the polygon, two new child nodes are created for the front and back fragments,\n  //  and added to both arrays.\n  splitByPlane (plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\n    if (this.children.length) {\n      const queue = [this.children]\n      let i\n      let j\n      let l\n      let node\n      let nodes\n      for (i = 0; i < queue.length; i++) { // queue.length can increase, do not cache\n        nodes = queue[i]\n        for (j = 0, l = nodes.length; j < l; j++) { // ok to cache length\n          node = nodes[j]\n          if (node.children.length > 0) {\n            queue.push(node.children)\n          } else {\n            // no children. Split the polygon:\n            node._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes)\n          }\n        }\n      }\n    } else {\n      this._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes)\n    }\n  }\n\n  // only to be called for nodes with no children\n  _splitByPlane (splane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\n    const polygon = this.polygon\n    if (polygon) {\n      const bound = poly3.measureBoundingSphere(polygon)\n      const sphereradius = bound[3] + EPS // ensure radius is LARGER then polygon\n      const spherecenter = bound\n      const d = vec3.dot(splane, spherecenter) - splane[3]\n      if (d > sphereradius) {\n        frontnodes.push(this)\n      } else if (d < -sphereradius) {\n        backnodes.push(this)\n      } else {\n        const splitresult = splitPolygonByPlane(splane, polygon)\n        switch (splitresult.type) {\n          case 0:\n            // coplanar front:\n            coplanarfrontnodes.push(this)\n            break\n\n          case 1:\n            // coplanar back:\n            coplanarbacknodes.push(this)\n            break\n\n          case 2:\n            // front:\n            frontnodes.push(this)\n            break\n\n          case 3:\n            // back:\n            backnodes.push(this)\n            break\n\n          case 4:\n            // spanning:\n            if (splitresult.front) {\n              const frontnode = this.addChild(splitresult.front)\n              frontnodes.push(frontnode)\n            }\n            if (splitresult.back) {\n              const backnode = this.addChild(splitresult.back)\n              backnodes.push(backnode)\n            }\n            break\n        }\n      }\n    }\n  }\n\n  // PRIVATE methods from here:\n  // add child to a node\n  // this should be called whenever the polygon is split\n  // a child should be created for every fragment of the split polygon\n  // returns the newly created child\n  addChild (polygon) {\n    const newchild = new PolygonTreeNode(this, polygon)\n    this.children.push(newchild)\n    return newchild\n  }\n\n  invertSub () {\n    let children = [this]\n    const queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; i++) {\n      children = queue[i]\n      for (j = 0, l = children.length; j < l; j++) {\n        node = children[j]\n        if (node.polygon) {\n          node.polygon = poly3.invert(node.polygon)\n        }\n        if (node.children.length > 0) queue.push(node.children)\n      }\n    }\n  }\n\n  // private method\n  // remove the polygon from the node, and all parent nodes above it\n  // called to invalidate parents of removed nodes\n  recursivelyInvalidatePolygon () {\n    this.polygon = null\n    if (this.parent) {\n      this.parent.recursivelyInvalidatePolygon()\n    }\n  }\n\n  clear () {\n    let children = [this]\n    const queue = [children]\n    for (let i = 0; i < queue.length; ++i) { // queue size can change in loop, don't cache length\n      children = queue[i]\n      const l = children.length\n      for (let j = 0; j < l; j++) {\n        const node = children[j]\n        if (node.polygon) {\n          node.polygon = null\n        }\n        if (node.parent) {\n          node.parent = null\n        }\n        if (node.children.length > 0) queue.push(node.children)\n        node.children = []\n      }\n    }\n  }\n\n  toString () {\n    let result = ''\n    let children = [this]\n    const queue = [children]\n    let i, j, l, node\n    for (i = 0; i < queue.length; ++i) { // queue size can change in loop, don't cache length\n      children = queue[i]\n      const prefix = ' '.repeat(i)\n      for (j = 0, l = children.length; j < l; j++) { // ok to cache length\n        node = children[j]\n        result += `${prefix}PolygonTreeNode (${node.isRootNode()}): ${node.children.length}`\n        if (node.polygon) {\n          result += `\\n ${prefix}polygon: ${node.polygon.vertices}\\n`\n        } else {\n          result += '\\n'\n        }\n        if (node.children.length > 0) queue.push(node.children)\n      }\n    }\n    return result\n  }\n}\n\nmodule.exports = PolygonTreeNode\n","const Node = require('./Node')\nconst PolygonTreeNode = require('./PolygonTreeNode')\n\n// # class Tree\n// This is the root of a BSP tree.\n// This separate class for the root of the tree in order to hold the PolygonTreeNode root.\n// The actual tree is kept in this.rootnode\nclass Tree {\n  constructor (polygons) {\n    this.polygonTree = new PolygonTreeNode()\n    this.rootnode = new Node(null)\n    if (polygons) this.addPolygons(polygons)\n  }\n\n  invert () {\n    this.polygonTree.invert()\n    this.rootnode.invert()\n  }\n\n  // Remove all polygons in this BSP tree that are inside the other BSP tree\n  // `tree`.\n  clipTo (tree, alsoRemovecoplanarFront = false) {\n    this.rootnode.clipTo(tree, alsoRemovecoplanarFront)\n  }\n\n  allPolygons () {\n    const result = []\n    this.polygonTree.getPolygons(result)\n    return result\n  }\n\n  addPolygons (polygons) {\n    const polygontreenodes = new Array(polygons.length)\n    for (let i = 0; i < polygons.length; i++) {\n      polygontreenodes[i] = this.polygonTree.addChild(polygons[i])\n    }\n    this.rootnode.addPolygonTreeNodes(polygontreenodes)\n  }\n\n  clear () {\n    this.polygonTree.clear()\n  }\n\n  toString () {\n    const result = 'Tree: ' + this.polygonTree.toString('')\n    return result\n  }\n}\n\nmodule.exports = Tree\n","module.exports = {\n  Tree: require('./Tree')\n}\n","const vec3 = require('../../../maths/vec3')\n\nconst splitLineSegmentByPlane = (plane, p1, p2) => {\n  const direction = vec3.subtract(vec3.create(), p2, p1)\n  let lambda = (plane[3] - vec3.dot(plane, p1)) / vec3.dot(plane, direction)\n  if (Number.isNaN(lambda)) lambda = 0\n  if (lambda > 1) lambda = 1\n  if (lambda < 0) lambda = 0\n\n  vec3.scale(direction, direction, lambda)\n  vec3.add(direction, p1, direction)\n  return direction\n}\n\nmodule.exports = splitLineSegmentByPlane\n","const { EPS } = require('../../../maths/constants')\n\nconst plane = require('../../../maths/plane')\nconst vec3 = require('../../../maths/vec3')\n\nconst poly3 = require('../../../geometries/poly3')\n\nconst splitLineSegmentByPlane = require('./splitLineSegmentByPlane')\n\n// Returns object:\n// .type:\n//   0: coplanar-front\n//   1: coplanar-back\n//   2: front\n//   3: back\n//   4: spanning\n// In case the polygon is spanning, returns:\n// .front: a Polygon3 of the front part\n// .back: a Polygon3 of the back part\nconst splitPolygonByPlane = (splane, polygon) => {\n  const result = {\n    type: null,\n    front: null,\n    back: null\n  }\n  // cache in local lets (speedup):\n  const vertices = polygon.vertices\n  const numvertices = vertices.length\n  const pplane = poly3.plane(polygon)\n  if (plane.equals(pplane, splane)) {\n    result.type = 0\n  } else {\n    let hasfront = false\n    let hasback = false\n    const vertexIsBack = []\n    const MINEPS = -EPS\n    for (let i = 0; i < numvertices; i++) {\n      const t = vec3.dot(splane, vertices[i]) - splane[3]\n      const isback = (t < MINEPS)\n      vertexIsBack.push(isback)\n      if (t > EPS) hasfront = true\n      if (t < MINEPS) hasback = true\n    }\n    if ((!hasfront) && (!hasback)) {\n      // all points coplanar\n      const t = vec3.dot(splane, pplane)\n      result.type = (t >= 0) ? 0 : 1\n    } else if (!hasback) {\n      result.type = 2\n    } else if (!hasfront) {\n      result.type = 3\n    } else {\n      // spanning\n      result.type = 4\n      const frontvertices = []\n      const backvertices = []\n      let isback = vertexIsBack[0]\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        const vertex = vertices[vertexindex]\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex >= numvertices) nextvertexindex = 0\n        const nextisback = vertexIsBack[nextvertexindex]\n        if (isback === nextisback) {\n          // line segment is on one side of the plane:\n          if (isback) {\n            backvertices.push(vertex)\n          } else {\n            frontvertices.push(vertex)\n          }\n        } else {\n          // line segment intersects plane:\n          const nextpoint = vertices[nextvertexindex]\n          const intersectionpoint = splitLineSegmentByPlane(splane, vertex, nextpoint)\n          if (isback) {\n            backvertices.push(vertex)\n            backvertices.push(intersectionpoint)\n            frontvertices.push(intersectionpoint)\n          } else {\n            frontvertices.push(vertex)\n            frontvertices.push(intersectionpoint)\n            backvertices.push(intersectionpoint)\n          }\n        }\n        isback = nextisback\n      } // for vertexindex\n      // remove duplicate vertices:\n      const EPS_SQUARED = EPS * EPS\n      if (backvertices.length >= 3) {\n        let prevvertex = backvertices[backvertices.length - 1]\n        for (let vertexindex = 0; vertexindex < backvertices.length; vertexindex++) {\n          const vertex = backvertices[vertexindex]\n          if (vec3.squaredDistance(vertex, prevvertex) < EPS_SQUARED) {\n            backvertices.splice(vertexindex, 1)\n            vertexindex--\n          }\n          prevvertex = vertex\n        }\n      }\n      if (frontvertices.length >= 3) {\n        let prevvertex = frontvertices[frontvertices.length - 1]\n        for (let vertexindex = 0; vertexindex < frontvertices.length; vertexindex++) {\n          const vertex = frontvertices[vertexindex]\n          if (vec3.squaredDistance(vertex, prevvertex) < EPS_SQUARED) {\n            frontvertices.splice(vertexindex, 1)\n            vertexindex--\n          }\n          prevvertex = vertex\n        }\n      }\n      if (frontvertices.length >= 3) {\n        result.front = poly3.fromPointsAndPlane(frontvertices, pplane)\n      }\n      if (backvertices.length >= 3) {\n        result.back = poly3.fromPointsAndPlane(backvertices, pplane)\n      }\n    }\n  }\n  return result\n}\n\nmodule.exports = splitPolygonByPlane\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\n\nconst unionGeom2 = require('./unionGeom2')\nconst unionGeom3 = require('./unionGeom3')\n\n/**\n * Return a new geometry representing the total space in the given geometries.\n * The given geometries should be of the same type, either geom2 or geom3.\n *\n * @param {...Object} geometries - list of geometries\n * @returns {geom2|geom3} a new geometry\n * @alias module:modeling/booleans.union\n *\n * @example\n * let myshape = union(cube({size: [5,5,5]}), cube({size: [5,5,5], center: [5,5,5]}))\n *\n * @example\n * +-------+            +-------+\n * |       |            |       |\n * |   A   |            |       |\n * |    +--+----+   =   |       +----+\n * +----+--+    |       +----+       |\n *      |   B   |            |       |\n *      |       |            |       |\n *      +-------+            +-------+\n */\nconst union = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only unions of the same type are supported')\n  }\n\n  const geometry = geometries[0]\n  // if (path.isA(geometry)) return pathunion(matrix, geometries)\n  if (geom2.isA(geometry)) return unionGeom2(geometries)\n  if (geom3.isA(geometry)) return unionGeom3(geometries)\n  return geometry\n}\n\nmodule.exports = union\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst fromFakePolygons = require('./fromFakePolygons')\nconst to3DWalls = require('./to3DWalls')\nconst unionGeom3 = require('./unionGeom3')\n\n/*\n * Return a new 2D geometry representing the total space in the given 2D geometries.\n * @param {...geom2} geometries - list of 2D geometries to union\n * @returns {geom2} new 2D geometry\n */\nconst union = (...geometries) => {\n  geometries = flatten(geometries)\n  const newgeometries = geometries.map((geometry) => to3DWalls({ z0: -1, z1: 1 }, geometry))\n\n  const newgeom3 = unionGeom3(newgeometries)\n  const epsilon = measureEpsilon(newgeom3)\n\n  return fromFakePolygons(epsilon, geom3.toPolygons(newgeom3))\n}\n\nmodule.exports = union\n","const flatten = require('../../utils/flatten')\n\nconst retessellate = require('../modifiers/retessellate')\n\nconst unionSub = require('./unionGeom3Sub')\n\n/*\n * Return a new 3D geometry representing the space in the given 3D geometries.\n * @param {...objects} geometries - list of geometries to union\n * @returns {geom3} new 3D geometry\n */\nconst union = (...geometries) => {\n  geometries = flatten(geometries)\n\n  // combine geometries in a way that forms a balanced binary tree pattern\n  let i\n  for (i = 1; i < geometries.length; i += 2) {\n    geometries.push(unionSub(geometries[i - 1], geometries[i]))\n  }\n  let newgeometry = geometries[i - 1]\n  newgeometry = retessellate(newgeometry)\n  return newgeometry\n}\n\nmodule.exports = union\n","const geom3 = require('../../geometries/geom3')\n\nconst mayOverlap = require('./mayOverlap')\nconst { Tree } = require('./trees')\n\n/*\n * Return a new 3D geometry representing the space in the given geometries.\n * @param {geom3} geometry1 - geometry to union\n * @param {geom3} geometry2 - geometry to union\n * @returns {geom3} new 3D geometry\n */\nconst unionSub = (geometry1, geometry2) => {\n  if (!mayOverlap(geometry1, geometry2)) {\n    return unionForNonIntersecting(geometry1, geometry2)\n  }\n\n  const a = new Tree(geom3.toPolygons(geometry1))\n  const b = new Tree(geom3.toPolygons(geometry2))\n\n  a.clipTo(b, false)\n  // b.clipTo(a, true); // ERROR: doesn't work\n  b.clipTo(a)\n  b.invert()\n  b.clipTo(a)\n  b.invert()\n\n  const newpolygons = a.allPolygons().concat(b.allPolygons())\n  const result = geom3.create(newpolygons)\n  return result\n}\n\n// Like union, but when we know that the two solids are not intersecting\n// Do not use if you are not completely sure that the solids do not intersect!\nconst unionForNonIntersecting = (geometry1, geometry2) => {\n  let newpolygons = geom3.toPolygons(geometry1)\n  newpolygons = newpolygons.concat(geom3.toPolygons(geometry2))\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = unionSub\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst expandGeom2 = require('./expandGeom2')\nconst expandGeom3 = require('./expandGeom3')\nconst expandPath2 = require('./expandPath2')\n\n/**\n * Expand the given geometry using the given options.\n * Both internal and external space is expanded for 2D and 3D shapes.\n *\n * Note: Contract is expand using a negative delta.\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+/-) of expansion\n * @param {String} [options.corners='edge'] - type of corner to create after expanding; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {...Objects} objects - the geometries to expand\n * @return {Object|Array} new geometry, or list of new geometries\n * @alias module:modeling/expansions.expand\n *\n * @example\n * let newarc = expand({delta: 5, corners: 'edge'}, arc({}))\n * let newsquare = expand({delta: 5, corners: 'chamfer'}, square({size: 30}))\n * let newsphere = expand({delta: 2, corners: 'round'}, cuboid({size: [20, 25, 5]}))\n */\nconst expand = (options, ...objects) => {\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return expandPath2(options, object)\n    if (geom2.isA(object)) return expandGeom2(options, object)\n    if (geom3.isA(object)) return expandGeom3(options, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = expand\n","const geom2 = require('../../geometries/geom2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\n/*\n * Expand the given geometry (geom2) using the given options (if any).\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+/-) of expansion\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {geom2} geometry - the geometry to expand\n * @returns {geom2} expanded geometry\n */\nconst expandGeom2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    segments: 16\n  }\n  const { delta, corners, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  // convert the geometry to outlines, and generate offsets from each\n  const outlines = geom2.toOutlines(geometry)\n  const newoutlines = outlines.map((outline) => {\n    options = {\n      delta,\n      corners,\n      closed: true,\n      segments\n    }\n    return offsetFromPoints(options, outline)\n  })\n\n  // create a composite geometry from the new outlines\n  const allsides = newoutlines.reduce((sides, newoutline) => sides.concat(geom2.toSides(geom2.fromPoints(newoutline))), [])\n  return geom2.create(allsides)\n}\n\nmodule.exports = expandGeom2\n","const geom3 = require('../../geometries/geom3')\n\nconst union = require('../booleans/union')\n\nconst expandShell = require('./expandShell')\n\n/*\n * Expand the given geometry (geom3) using the given options (if any).\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+/-) of expansion\n * @param {String} [options.corners='round'] - type corner to create during of expansion; round\n * @param {Integer} [options.segments=12] - number of segments when creating round corners\n * @param {geom3} geometry - the geometry to expand\n * @returns {geom3} expanded geometry\n */\nconst expandGeom3 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'round',\n    segments: 12\n  }\n  const { delta, corners, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'round')) {\n    throw new Error('corners must be \"round\" for 3D geometries')\n  }\n\n  const polygons = geom3.toPolygons(geometry)\n  if (polygons.length === 0) throw new Error('the given geometry cannot be empty')\n\n  options = { delta, corners, segments }\n  const expanded = expandShell(options, geometry)\n  return union(geometry, expanded)\n}\n\nmodule.exports = expandGeom3\n","const area = require('../../maths/utils/area')\n\nconst vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\nconst createGeometryFromClosedOffsets = (paths) => {\n  let { external, internal } = paths\n  if (area(external) < 0) {\n    external = external.reverse()\n  } else {\n    internal = internal.reverse()\n  }\n  // NOTE: creating path2 from the points ensures proper closure\n  const externalPath = path2.fromPoints({ closed: true }, external)\n  const internalPath = path2.fromPoints({ closed: true }, internal)\n  const externalSides = geom2.toSides(geom2.fromPoints(path2.toPoints(externalPath)))\n  const internalSides = geom2.toSides(geom2.fromPoints(path2.toPoints(internalPath)))\n  externalSides.push(...internalSides)\n  return geom2.create(externalSides)\n}\n\nconst createGeometryFromExpandedOpenPath = (paths, segments, corners, delta) => {\n  const { points, external, internal } = paths\n  const capSegments = Math.floor(segments / 2) // rotation is 180 degrees\n  const e2iCap = []\n  const i2eCap = []\n  if (corners === 'round' && capSegments > 0) {\n    // added round caps to the geometry\n    const step = Math.PI / capSegments\n    const eCorner = points[points.length - 1]\n    const e2iStart = vec2.angle(vec2.subtract(vec2.create(), external[external.length - 1], eCorner))\n    const iCorner = points[0]\n    const i2eStart = vec2.angle(vec2.subtract(vec2.create(), internal[0], iCorner))\n    for (let i = 1; i < capSegments; i++) {\n      let radians = e2iStart + (step * i)\n      let point = vec2.fromAngleRadians(vec2.create(), radians)\n      vec2.scale(point, point, delta)\n      vec2.add(point, point, eCorner)\n      e2iCap.push(point)\n\n      radians = i2eStart + (step * i)\n      point = vec2.fromAngleRadians(vec2.create(), radians)\n      vec2.scale(point, point, delta)\n      vec2.add(point, point, iCorner)\n      i2eCap.push(point)\n    }\n  }\n  const allPoints = []\n  allPoints.push(...external, ...e2iCap, ...internal.reverse(), ...i2eCap)\n  return geom2.fromPoints(allPoints)\n}\n\n/*\n * Expand the given geometry (path2) using the given options (if any).\n * @param {Object} options - options for expand\n * @param {Number} [options.delta=1] - delta (+) of expansion\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {path2} geometry - the geometry to expand\n * @returns {geom2} expanded geometry\n */\nconst expandPath2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    segments: 16\n  }\n\n  options = Object.assign({ }, defaults, options)\n  const { delta, corners, segments } = options\n\n  if (delta <= 0) throw new Error('the given delta must be positive for paths')\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  const closed = geometry.isClosed\n  const points = path2.toPoints(geometry)\n  if (points.length === 0) throw new Error('the given geometry cannot be empty')\n\n  const paths = {\n    points: points,\n    external: offsetFromPoints({ delta, corners, segments, closed }, points),\n    internal: offsetFromPoints({ delta: -delta, corners, segments, closed }, points)\n  }\n\n  if (geometry.isClosed) {\n    return createGeometryFromClosedOffsets(paths)\n  } else {\n    return createGeometryFromExpandedOpenPath(paths, segments, corners, delta)\n  }\n}\n\nmodule.exports = expandPath2\n","const { EPS, TAU } = require('../../maths/constants')\n\nconst mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst fnNumberSort = require('../../utils/fnNumberSort')\n\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst sphere = require('../../primitives/sphere')\n\nconst retessellate = require('../modifiers/retessellate')\n\nconst unionGeom3Sub = require('../booleans/unionGeom3Sub')\n\nconst extrudePolygon = require('./extrudePolygon')\n\n/*\n * Collect all planes adjacent to each vertex\n */\nconst mapPlaneToVertex = (map, vertex, plane) => {\n  const key = vertex.toString()\n  if (!map.has(key)) {\n    const entry = [vertex, [plane]]\n    map.set(key, entry)\n  } else {\n    const planes = map.get(key)[1]\n    planes.push(plane)\n  }\n}\n\n/*\n * Collect all planes adjacent to each edge.\n * Combine undirected edges, no need for duplicate cylinders.\n */\nconst mapPlaneToEdge = (map, edge, plane) => {\n  const key0 = edge[0].toString()\n  const key1 = edge[1].toString()\n  // Sort keys to make edges undirected\n  const key = key0 < key1 ? `${key0},${key1}` : `${key1},${key0}`\n  if (!map.has(key)) {\n    const entry = [edge, [plane]]\n    map.set(key, entry)\n  } else {\n    const planes = map.get(key)[1]\n    planes.push(plane)\n  }\n}\n\nconst addUniqueAngle = (map, angle) => {\n  const i = map.findIndex((item) => item === angle)\n  if (i < 0) {\n    map.push(angle)\n  }\n}\n\n/*\n * Create the expanded shell of the solid:\n * All faces are extruded to 2 times delta\n * Cylinders are constructed around every side\n * Spheres are placed on every vertex\n * the result is a true expansion of the solid\n * @param  {Number} delta\n * @param  {Integer} segments\n */\nconst expandShell = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    segments: 12\n  }\n  const { delta, segments } = Object.assign({ }, defaults, options)\n\n  let result = geom3.create()\n  const vertices2planes = new Map() // {vertex: [vertex, [plane, ...]]}\n  const edges2planes = new Map() // {edge: [[vertex, vertex], [plane, ...]]}\n\n  const v1 = vec3.create()\n  const v2 = vec3.create()\n\n  // loop through the polygons\n  // - extruded the polygon, and add to the composite result\n  // - add the plane to the unique vertice map\n  // - add the plane to the unique edge map\n  const polygons = geom3.toPolygons(geometry)\n  polygons.forEach((polygon, index) => {\n    const extrudevector = vec3.scale(vec3.create(), poly3.plane(polygon), 2 * delta)\n    const translatedpolygon = poly3.transform(mat4.fromTranslation(mat4.create(), vec3.scale(vec3.create(), extrudevector, -0.5)), polygon)\n    const extrudedface = extrudePolygon(extrudevector, translatedpolygon)\n    result = unionGeom3Sub(result, extrudedface)\n\n    const vertices = polygon.vertices\n    for (let i = 0; i < vertices.length; i++) {\n      mapPlaneToVertex(vertices2planes, vertices[i], poly3.plane(polygon))\n      const j = (i + 1) % vertices.length\n      const edge = [vertices[i], vertices[j]]\n      mapPlaneToEdge(edges2planes, edge, poly3.plane(polygon))\n    }\n  })\n\n  // now construct a cylinder on every side\n  // The cylinder is always an approximation of a true cylinder, having polygons\n  // around the sides. We will make sure though that the cylinder will have an edge at every\n  // face that touches this side. This ensures that we will get a smooth fill even\n  // if two edges are at, say, 10 degrees and the segments is low.\n  edges2planes.forEach((item) => {\n    const edge = item[0]\n    const planes = item[1]\n    const startpoint = edge[0]\n    const endpoint = edge[1]\n\n    // our x,y and z vectors:\n    const zbase = vec3.subtract(vec3.create(), endpoint, startpoint)\n    vec3.normalize(zbase, zbase)\n    const xbase = planes[0]\n    const ybase = vec3.cross(vec3.create(), xbase, zbase)\n\n    // make a list of angles that the cylinder should traverse:\n    let angles = []\n\n    // first of all equally spaced around the cylinder:\n    for (let i = 0; i < segments; i++) {\n      addUniqueAngle(angles, (i * TAU / segments))\n    }\n\n    // and also at every normal of all touching planes:\n    for (let i = 0, iMax = planes.length; i < iMax; i++) {\n      const planenormal = planes[i]\n      const si = vec3.dot(ybase, planenormal)\n      const co = vec3.dot(xbase, planenormal)\n      let angle = Math.atan2(si, co)\n\n      if (angle < 0) angle += TAU\n      addUniqueAngle(angles, angle)\n      angle = Math.atan2(-si, -co)\n      if (angle < 0) angle += TAU\n      addUniqueAngle(angles, angle)\n    }\n\n    // this will result in some duplicate angles but we will get rid of those later.\n    angles = angles.sort(fnNumberSort)\n\n    // Now construct the cylinder by traversing all angles:\n    const numangles = angles.length\n    let prevp1\n    let prevp2\n    const startfacevertices = []\n    const endfacevertices = []\n    const polygons = []\n    for (let i = -1; i < numangles; i++) {\n      const angle = angles[(i < 0) ? (i + numangles) : i]\n      const si = Math.sin(angle)\n      const co = Math.cos(angle)\n      vec3.scale(v1, xbase, co * delta)\n      vec3.scale(v2, ybase, si * delta)\n      vec3.add(v1, v1, v2)\n      const p1 = vec3.add(vec3.create(), startpoint, v1)\n      const p2 = vec3.add(vec3.create(), endpoint, v1)\n      let skip = false\n      if (i >= 0) {\n        if (vec3.distance(p1, prevp1) < EPS) {\n          skip = true\n        }\n      }\n      if (!skip) {\n        if (i >= 0) {\n          startfacevertices.push(p1)\n          endfacevertices.push(p2)\n          const points = [prevp2, p2, p1, prevp1]\n          const polygon = poly3.create(points)\n          polygons.push(polygon)\n        }\n        prevp1 = p1\n        prevp2 = p2\n      }\n    }\n    endfacevertices.reverse()\n    polygons.push(poly3.create(startfacevertices))\n    polygons.push(poly3.create(endfacevertices))\n\n    const cylinder = geom3.create(polygons)\n    result = unionGeom3Sub(result, cylinder)\n  })\n\n  // build spheres at each unique vertex\n  // We will try to set the x and z axis to the normals of 2 planes\n  // This will ensure that our sphere tesselation somewhat matches 2 planes\n  vertices2planes.forEach((item) => {\n    const vertex = item[0]\n    const planes = item[1]\n    // use the first normal to be the x axis of our sphere:\n    const xaxis = planes[0]\n    // and find a suitable z axis. We will use the normal which is most perpendicular to the x axis:\n    let bestzaxis = null\n    let bestzaxisorthogonality = 0\n    for (let i = 1; i < planes.length; i++) {\n      const normal = planes[i]\n      const cross = vec3.cross(v1, xaxis, normal)\n      const crosslength = vec3.length(cross)\n      if (crosslength > 0.05) { // FIXME why 0.05?\n        if (crosslength > bestzaxisorthogonality) {\n          bestzaxisorthogonality = crosslength\n          bestzaxis = normal\n        }\n      }\n    }\n    if (!bestzaxis) {\n      bestzaxis = vec3.orthogonal(v1, xaxis)\n    }\n    const yaxis = vec3.cross(v1, xaxis, bestzaxis)\n    vec3.normalize(yaxis, yaxis)\n    const zaxis = vec3.cross(v2, yaxis, xaxis)\n    const corner = sphere({\n      center: [vertex[0], vertex[1], vertex[2]],\n      radius: delta,\n      segments: segments,\n      axes: [xaxis, yaxis, zaxis]\n    })\n    result = unionGeom3Sub(result, corner)\n  })\n  return retessellate(result)\n}\n\nmodule.exports = expandShell\n","const mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\n// Extrude a polygon in the direction of the offsetvector.\n// Returns (geom3) a new geometry\nconst extrudePolygon = (offsetvector, polygon1) => {\n  const direction = vec3.dot(poly3.plane(polygon1), offsetvector)\n  if (direction > 0) {\n    polygon1 = poly3.invert(polygon1)\n  }\n\n  const newpolygons = [polygon1]\n\n  const polygon2 = poly3.transform(mat4.fromTranslation(mat4.create(), offsetvector), polygon1)\n  const numvertices = polygon1.vertices.length\n  for (let i = 0; i < numvertices; i++) {\n    const nexti = (i < (numvertices - 1)) ? i + 1 : 0\n    const sideFacePolygon = poly3.create([\n      polygon1.vertices[i],\n      polygon2.vertices[i],\n      polygon2.vertices[nexti],\n      polygon1.vertices[nexti]\n    ])\n    newpolygons.push(sideFacePolygon)\n  }\n  newpolygons.push(poly3.invert(polygon2))\n\n  return geom3.create(newpolygons)\n}\n\nmodule.exports = extrudePolygon\n","/**\n * All shapes (primitives or the results of operations) can be expanded (or contracted.)\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/expansions\n * @example\n * const { expand, offset } = require('@jscad/modeling').expansions\n */\nmodule.exports = {\n  expand: require('./expand'),\n  offset: require('./offset')\n}\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst offsetGeom2 = require('./offsetGeom2')\nconst offsetPath2 = require('./offsetPath2')\n\n/**\n * Create offset geometry from the given geometry using the given options.\n * Offsets from internal and external space are created.\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type of corner to create after offseting; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {...Object} objects - the geometries to offset\n * @return {Object|Array} new geometry, or list of new geometries\n * @alias module:modeling/expansions.offset\n *\n * @example\n * let small = offset({ delta: -4, corners: 'chamfer' }, square({size: 40})) // contract\n */\nconst offset = (options, ...objects) => {\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return offsetPath2(options, object)\n    if (geom2.isA(object)) return offsetGeom2(options, object)\n    // if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = offset\n","const { EPS, TAU } = require('../../maths/constants')\n\nconst intersect = require('../../maths/utils/intersect')\nconst line2 = require('../../maths/line2')\nconst vec2 = require('../../maths/vec2')\nconst area = require('../../maths/utils/area')\n\n/*\n * Create a set of offset points from the given points using the given options (if any).\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {Integer} [options.closed=false] - is the last point connected back to the first point?\n * @param {Array} points - array of 2D points\n * @returns {Array} new set of offset points, plus points for each rounded corner\n */\nconst offsetFromPoints = (options, points) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    closed: false,\n    segments: 16\n  }\n  let { delta, corners, closed, segments } = Object.assign({ }, defaults, options)\n\n  if (Math.abs(delta) < EPS) return points\n\n  let rotation = options.closed ? area(points) : 1.0 // + counter clockwise, - clockwise\n  if (rotation === 0) rotation = 1.0\n\n  // use right hand normal?\n  const orientation = ((rotation > 0) && (delta >= 0)) || ((rotation < 0) && (delta < 0))\n  delta = Math.abs(delta) // sign is no longer required\n\n  let previousSegment = null\n  let newPoints = []\n  const newCorners = []\n  const of = vec2.create()\n  const n = points.length\n  for (let i = 0; i < n; i++) {\n    const j = (i + 1) % n\n    const p0 = points[i]\n    const p1 = points[j]\n    // calculate the unit normal\n    orientation ? vec2.subtract(of, p0, p1) : vec2.subtract(of, p1, p0)\n    vec2.normal(of, of)\n    vec2.normalize(of, of)\n    // calculate the offset vector\n    vec2.scale(of, of, delta)\n    // calculate the new points (edge)\n    const n0 = vec2.add(vec2.create(), p0, of)\n    const n1 = vec2.add(vec2.create(), p1, of)\n\n    const currentSegment = [n0, n1]\n    if (previousSegment != null) {\n      if (closed || (!closed && j !== 0)) {\n        // check for intersection of new line segments\n        const ip = intersect(previousSegment[0], previousSegment[1], currentSegment[0], currentSegment[1])\n        if (ip) {\n          // adjust the previous points\n          newPoints.pop()\n          // adjust current points\n          currentSegment[0] = ip\n        } else {\n          newCorners.push({ c: p0, s0: previousSegment, s1: currentSegment })\n        }\n      }\n    }\n    previousSegment = [n0, n1]\n\n    if (j === 0 && !closed) continue\n\n    newPoints.push(currentSegment[0])\n    newPoints.push(currentSegment[1])\n  }\n  // complete the closure if required\n  if (closed && previousSegment != null) {\n    // check for intersection of closing line segments\n    const n0 = newPoints[0]\n    const n1 = newPoints[1]\n    const ip = intersect(previousSegment[0], previousSegment[1], n0, n1)\n    if (ip) {\n      // adjust the previous points\n      newPoints[0] = ip\n      newPoints.pop()\n    } else {\n      const p0 = points[0]\n      const cursegment = [n0, n1]\n      newCorners.push({ c: p0, s0: previousSegment, s1: cursegment })\n    }\n  }\n\n  // generate corners if necessary\n\n  if (corners === 'edge') {\n    // map for fast point index lookup\n    const pointIndex = new Map() // {point: index}\n    newPoints.forEach((point, index) => pointIndex.set(point, index))\n\n    // create edge corners\n    const line0 = line2.create()\n    const line1 = line2.create()\n    newCorners.forEach((corner) => {\n      line2.fromPoints(line0, corner.s0[0], corner.s0[1])\n      line2.fromPoints(line1, corner.s1[0], corner.s1[1])\n      const ip = line2.intersectPointOfLines(line0, line1)\n      if (Number.isFinite(ip[0]) && Number.isFinite(ip[1])) {\n        const p0 = corner.s0[1]\n        const i = pointIndex.get(p0)\n        newPoints[i] = ip\n        newPoints[(i + 1) % newPoints.length] = undefined\n      } else {\n        // paralell segments, drop one\n        const p0 = corner.s1[0]\n        const i = pointIndex.get(p0)\n        newPoints[i] = undefined\n      }\n    })\n    newPoints = newPoints.filter((p) => p !== undefined)\n  }\n\n  if (corners === 'round') {\n    // create rounded corners\n    let cornersegments = Math.floor(segments / 4)\n    const v0 = vec2.create()\n    newCorners.forEach((corner) => {\n      // calculate angle of rotation\n      let rotation = vec2.angle(vec2.subtract(v0, corner.s1[0], corner.c))\n      rotation -= vec2.angle(vec2.subtract(v0, corner.s0[1], corner.c))\n      if (orientation && rotation < 0) {\n        rotation = rotation + Math.PI\n        if (rotation < 0) rotation = rotation + Math.PI\n      }\n      if ((!orientation) && rotation > 0) {\n        rotation = rotation - Math.PI\n        if (rotation > 0) rotation = rotation - Math.PI\n      }\n\n      if (rotation !== 0.0) {\n        // generate the segments\n        cornersegments = Math.floor(segments * (Math.abs(rotation) / TAU))\n        const step = rotation / cornersegments\n        const start = vec2.angle(vec2.subtract(v0, corner.s0[1], corner.c))\n        const cornerpoints = []\n        for (let i = 1; i < cornersegments; i++) {\n          const radians = start + (step * i)\n          const point = vec2.fromAngleRadians(vec2.create(), radians)\n          vec2.scale(point, point, delta)\n          vec2.add(point, point, corner.c)\n          cornerpoints.push(point)\n        }\n        if (cornerpoints.length > 0) {\n          const p0 = corner.s0[1]\n          let i = newPoints.findIndex((point) => vec2.equals(p0, point))\n          i = (i + 1) % newPoints.length\n          newPoints.splice(i, 0, ...cornerpoints)\n        }\n      } else {\n        // paralell segments, drop one\n        const p0 = corner.s1[0]\n        const i = newPoints.findIndex((point) => vec2.equals(p0, point))\n        newPoints.splice(i, 1)\n      }\n    })\n  }\n  return newPoints\n}\n\nmodule.exports = offsetFromPoints\n","const geom2 = require('../../geometries/geom2')\nconst poly2 = require('../../geometries/poly2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\n/*\n * Create a offset geometry from the given geom2 using the given options (if any).\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {geom2} geometry - geometry from which to create the offset\n * @returns {geom2} offset geometry, plus rounded corners\n */\nconst offsetGeom2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    segments: 0\n  }\n  const { delta, corners, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  // convert the geometry to outlines, and generate offsets from each\n  const outlines = geom2.toOutlines(geometry)\n  const newoutlines = outlines.map((outline) => {\n    const level = outlines.reduce((acc, polygon) => acc + poly2.arePointsInside(outline, poly2.create(polygon)), 0)\n    const outside = (level % 2) === 0\n\n    options = {\n      delta: outside ? delta : -delta,\n      corners,\n      closed: true,\n      segments\n    }\n    return offsetFromPoints(options, outline)\n  })\n\n  // create a composite geometry from the new outlines\n  const allsides = newoutlines.reduce((sides, newoutline) => sides.concat(geom2.toSides(geom2.fromPoints(newoutline))), [])\n  return geom2.create(allsides)\n}\n\nmodule.exports = offsetGeom2\n","const path2 = require('../../geometries/path2')\n\nconst offsetFromPoints = require('./offsetFromPoints')\n\n/*\n * Create a offset geometry from the given path using the given options (if any).\n * @param {Object} options - options for offset\n * @param {Float} [options.delta=1] - delta of offset (+ to exterior, - from interior)\n * @param {String} [options.corners='edge'] - type corner to create during of expansion; edge, chamfer, round\n * @param {Integer} [options.segments=16] - number of segments when creating round corners\n * @param {path2} geometry - geometry from which to create the offset\n * @returns {path2} offset geometry, plus rounded corners\n */\nconst offsetPath2 = (options, geometry) => {\n  const defaults = {\n    delta: 1,\n    corners: 'edge',\n    closed: geometry.isClosed,\n    segments: 16\n  }\n  const { delta, corners, closed, segments } = Object.assign({ }, defaults, options)\n\n  if (!(corners === 'edge' || corners === 'chamfer' || corners === 'round')) {\n    throw new Error('corners must be \"edge\", \"chamfer\", or \"round\"')\n  }\n\n  options = { delta, corners, closed, segments }\n  const newpoints = offsetFromPoints(options, path2.toPoints(geometry))\n  return path2.fromPoints({ closed: closed }, newpoints)\n}\n\nmodule.exports = offsetPath2\n","const { area } = require('../../../maths/utils')\nconst { toOutlines } = require('../../../geometries/geom2')\nconst { arePointsInside } = require('../../../geometries/poly2')\n\n/*\n * Constructs a polygon hierarchy of solids and holes.\n * The hierarchy is represented as a forest of trees. All trees shall be depth at most 2.\n * If a solid exists inside the hole of another solid, it will be split out as its own root.\n *\n * @param {geom2} geometry\n * @returns {Array} an array of polygons with associated holes\n * @alias module:modeling/geometries/geom2.toTree\n *\n * @example\n * const geometry = subtract(rectangle({size: [5, 5]}), rectangle({size: [3, 3]}))\n * console.log(assignHoles(geometry))\n * [{\n *   \"solid\": [[-2.5,-2.5],[2.5,-2.5],[2.5,2.5],[-2.5,2.5]],\n *   \"holes\": [[[-1.5,1.5],[1.5,1.5],[1.5,-1.5],[-1.5,-1.5]]]\n * }]\n */\nconst assignHoles = (geometry) => {\n  const outlines = toOutlines(geometry)\n  const solids = [] // solid indices\n  const holes = [] // hole indices\n  outlines.forEach((outline, i) => {\n    const a = area(outline)\n    if (a < 0) {\n      holes.push(i)\n    } else if (a > 0) {\n      solids.push(i)\n    }\n  })\n\n  // for each hole, determine what solids it is inside of\n  const children = [] // child holes of solid[i]\n  const parents = [] // parent solids of hole[i]\n  solids.forEach((s, i) => {\n    const solid = outlines[s]\n    children[i] = []\n    holes.forEach((h, j) => {\n      const hole = outlines[h]\n      // check if a point of hole j is inside solid i\n      if (arePointsInside([hole[0]], { vertices: solid })) {\n        children[i].push(h)\n        if (!parents[j]) parents[j] = []\n        parents[j].push(i)\n      }\n    })\n  })\n\n  // check if holes have multiple parents and choose one with fewest children\n  holes.forEach((h, j) => {\n    // ensure at least one parent exists\n    if (parents[j] && parents[j].length > 1) {\n      // the solid directly containing this hole\n      const directParent = minIndex(parents[j], (p) => children[p].length)\n      parents[j].forEach((p, i) => {\n        if (i !== directParent) {\n          // Remove hole from skip level parents\n          children[p] = children[p].filter((c) => c !== h)\n        }\n      })\n    }\n  })\n\n  // map indices back to points\n  return children.map((holes, i) => ({\n    solid: outlines[solids[i]],\n    holes: holes.map((h) => outlines[h])\n  }))\n}\n\n/*\n * Find the item in the list with smallest score(item).\n * If the list is empty, return undefined.\n */\nconst minIndex = (list, score) => {\n  let bestIndex\n  let best\n  list.forEach((item, index) => {\n    const value = score(item)\n    if (best === undefined || value < best) {\n      bestIndex = index\n      best = value\n    }\n  })\n  return bestIndex\n}\n\nmodule.exports = assignHoles\n","const { filterPoints, linkedPolygon, locallyInside, splitPolygon } = require('./linkedPolygon')\nconst { area, pointInTriangle } = require('./triangle')\n\n/*\n * link every hole into the outer loop, producing a single-ring polygon without holes\n *\n * Original source from https://github.com/mapbox/earcut\n * Copyright (c) 2016 Mapbox\n */\nconst eliminateHoles = (data, holeIndices, outerNode, dim) => {\n  const queue = []\n\n  for (let i = 0, len = holeIndices.length; i < len; i++) {\n    const start = holeIndices[i] * dim\n    const end = i < len - 1 ? holeIndices[i + 1] * dim : data.length\n    const list = linkedPolygon(data, start, end, dim, false)\n    if (list === list.next) list.steiner = true\n    queue.push(getLeftmost(list))\n  }\n\n  queue.sort((a, b) => a.x - b.x) // compare X\n\n  // process holes from left to right\n  for (let i = 0; i < queue.length; i++) {\n    outerNode = eliminateHole(queue[i], outerNode)\n    outerNode = filterPoints(outerNode, outerNode.next)\n  }\n\n  return outerNode\n}\n\n/*\n * find a bridge between vertices that connects hole with an outer ring and link it\n */\nconst eliminateHole = (hole, outerNode) => {\n  const bridge = findHoleBridge(hole, outerNode)\n  if (!bridge) {\n    return outerNode\n  }\n\n  const bridgeReverse = splitPolygon(bridge, hole)\n\n  // filter colinear points around the cuts\n  const filteredBridge = filterPoints(bridge, bridge.next)\n  filterPoints(bridgeReverse, bridgeReverse.next)\n\n  // Check if input node was removed by the filtering\n  return outerNode === bridge ? filteredBridge : outerNode\n}\n\n/*\n * David Eberly's algorithm for finding a bridge between hole and outer polygon\n */\nconst findHoleBridge = (hole, outerNode) => {\n  let p = outerNode\n  const hx = hole.x\n  const hy = hole.y\n  let qx = -Infinity\n  let m\n\n  // find a segment intersected by a ray from the hole's leftmost point to the left\n  // segment's endpoint with lesser x will be potential connection point\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y)\n      if (x <= hx && x > qx) {\n        qx = x\n        if (x === hx) {\n          if (hy === p.y) return p\n          if (hy === p.next.y) return p.next\n        }\n\n        m = p.x < p.next.x ? p : p.next\n      }\n    }\n\n    p = p.next\n  } while (p !== outerNode)\n\n  if (!m) return null\n\n  if (hx === qx) return m // hole touches outer segment; pick leftmost endpoint\n\n  // look for points inside the triangle of hole point, segment intersection and endpoint\n  // if there are no points found, we have a valid connection\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  const stop = m\n  const mx = m.x\n  const my = m.y\n  let tanMin = Infinity\n\n  p = m\n\n  do {\n    if (hx >= p.x && p.x >= mx && hx !== p.x &&\n        pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      const tan = Math.abs(hy - p.y) / (hx - p.x) // tangential\n\n      if (locallyInside(p, hole) && (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n        m = p\n        tanMin = tan\n      }\n    }\n\n    p = p.next\n  } while (p !== stop)\n\n  return m\n}\n\n/*\n * whether sector in vertex m contains sector in vertex p in the same coordinates\n */\nconst sectorContainsSector = (m, p) => area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0\n\n/*\n * find the leftmost node of a polygon ring\n */\nconst getLeftmost = (start) => {\n  let p = start\n  let leftmost = start\n  do {\n    if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p\n    p = p.next\n  } while (p !== start)\n\n  return leftmost\n}\n\nmodule.exports = eliminateHoles\n","const eliminateHoles = require('./eliminateHoles')\nconst { removeNode, sortLinked } = require('./linkedList')\nconst { cureLocalIntersections, filterPoints, isValidDiagonal, linkedPolygon, splitPolygon } = require('./linkedPolygon')\nconst { area, pointInTriangle } = require('./triangle')\n\n/*\n * An implementation of the earcut polygon triangulation algorithm.\n *\n * Original source from https://github.com/mapbox/earcut\n * Copyright (c) 2016 Mapbox\n *\n * @param {data} A flat array of vertex coordinates.\n * @param {holeIndices} An array of hole indices if any.\n * @param {dim} The number of coordinates per vertex in the input array.\n */\nconst triangulate = (data, holeIndices, dim = 2) => {\n  const hasHoles = holeIndices && holeIndices.length\n  const outerLen = hasHoles ? holeIndices[0] * dim : data.length\n  let outerNode = linkedPolygon(data, 0, outerLen, dim, true)\n  const triangles = []\n\n  if (!outerNode || outerNode.next === outerNode.prev) return triangles\n\n  let minX, minY, maxX, maxY, invSize\n\n  if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim)\n\n  // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n  if (data.length > 80 * dim) {\n    minX = maxX = data[0]\n    minY = maxY = data[1]\n\n    for (let i = dim; i < outerLen; i += dim) {\n      const x = data[i]\n      const y = data[i + 1]\n      if (x < minX) minX = x\n      if (y < minY) minY = y\n      if (x > maxX) maxX = x\n      if (y > maxY) maxY = y\n    }\n\n    // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n    invSize = Math.max(maxX - minX, maxY - minY)\n    invSize = invSize !== 0 ? 1 / invSize : 0\n  }\n\n  earcutLinked(outerNode, triangles, dim, minX, minY, invSize)\n\n  return triangles\n}\n\n/*\n * main ear slicing loop which triangulates a polygon (given as a linked list)\n */\nconst earcutLinked = (ear, triangles, dim, minX, minY, invSize, pass) => {\n  if (!ear) return\n\n  // interlink polygon nodes in z-order\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize)\n\n  let stop = ear\n  let prev\n  let next\n\n  // iterate through ears, slicing them one by one\n  while (ear.prev !== ear.next) {\n    prev = ear.prev\n    next = ear.next\n\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim)\n      triangles.push(ear.i / dim)\n      triangles.push(next.i / dim)\n\n      removeNode(ear)\n\n      // skipping the next vertex leads to less sliver triangles\n      ear = next.next\n      stop = next.next\n\n      continue\n    }\n\n    ear = next\n\n    // if we looped through the whole remaining polygon and can't find any more ears\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1)\n\n        // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim)\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2)\n\n        // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize)\n      }\n\n      break\n    }\n  }\n}\n\n/*\n * check whether a polygon node forms a valid ear with adjacent nodes\n */\nconst isEar = (ear) => {\n  const a = ear.prev\n  const b = ear\n  const c = ear.next\n\n  if (area(a, b, c) >= 0) return false // reflex, can't be an ear\n\n  // now make sure we don't have other points inside the potential ear\n  let p = ear.next.next\n\n  while (p !== ear.prev) {\n    if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {\n      return false\n    }\n    p = p.next\n  }\n\n  return true\n}\n\nconst isEarHashed = (ear, minX, minY, invSize) => {\n  const a = ear.prev\n  const b = ear\n  const c = ear.next\n\n  if (area(a, b, c) >= 0) return false // reflex, can't be an ear\n\n  // triangle bbox; min & max are calculated like this for speed\n  const minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x)\n  const minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y)\n  const maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x)\n  const maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y)\n\n  // z-order range for the current triangle bbox\n  const minZ = zOrder(minTX, minTY, minX, minY, invSize)\n  const maxZ = zOrder(maxTX, maxTY, minX, minY, invSize)\n\n  let p = ear.prevZ\n  let n = ear.nextZ\n\n  // look for points inside the triangle in both directions\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (p !== ear.prev && p !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n      area(p.prev, p, p.next) >= 0) return false\n    p = p.prevZ\n\n    if (n !== ear.prev && n !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n      area(n.prev, n, n.next) >= 0) return false\n    n = n.nextZ\n  }\n\n  // look for remaining points in decreasing z-order\n  while (p && p.z >= minZ) {\n    if (p !== ear.prev && p !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n      area(p.prev, p, p.next) >= 0) return false\n    p = p.prevZ\n  }\n\n  // look for remaining points in increasing z-order\n  while (n && n.z <= maxZ) {\n    if (n !== ear.prev && n !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n      area(n.prev, n, n.next) >= 0) return false\n    n = n.nextZ\n  }\n\n  return true\n}\n\n/*\n * try splitting polygon into two and triangulate them independently\n */\nconst splitEarcut = (start, triangles, dim, minX, minY, invSize) => {\n  // look for a valid diagonal that divides the polygon into two\n  let a = start\n  do {\n    let b = a.next.next\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        let c = splitPolygon(a, b)\n\n        // filter colinear points around the cuts\n        a = filterPoints(a, a.next)\n        c = filterPoints(c, c.next)\n\n        // run earcut on each half\n        earcutLinked(a, triangles, dim, minX, minY, invSize)\n        earcutLinked(c, triangles, dim, minX, minY, invSize)\n        return\n      }\n\n      b = b.next\n    }\n\n    a = a.next\n  } while (a !== start)\n}\n\n/*\n * interlink polygon nodes in z-order\n */\nconst indexCurve = (start, minX, minY, invSize) => {\n  let p = start\n  do {\n    if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize)\n    p.prevZ = p.prev\n    p.nextZ = p.next\n    p = p.next\n  } while (p !== start)\n\n  p.prevZ.nextZ = null\n  p.prevZ = null\n\n  sortLinked(p, (p) => p.z)\n}\n\n/*\n * z-order of a point given coords and inverse of the longer side of data bbox\n */\nconst zOrder = (x, y, minX, minY, invSize) => {\n  // coords are transformed into non-negative 15-bit integer range\n  x = 32767 * (x - minX) * invSize\n  y = 32767 * (y - minY) * invSize\n\n  x = (x | (x << 8)) & 0x00FF00FF\n  x = (x | (x << 4)) & 0x0F0F0F0F\n  x = (x | (x << 2)) & 0x33333333\n  x = (x | (x << 1)) & 0x55555555\n\n  y = (y | (y << 8)) & 0x00FF00FF\n  y = (y | (y << 4)) & 0x0F0F0F0F\n  y = (y | (y << 2)) & 0x33333333\n  y = (y | (y << 1)) & 0x55555555\n\n  return x | (y << 1)\n}\n\nmodule.exports = triangulate\n","const sortLinked = require('./linkedListSort')\n\nclass Node {\n  constructor (i, x, y) {\n    // vertex index in coordinates array\n    this.i = i\n\n    // vertex coordinates\n    this.x = x\n    this.y = y\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null\n    this.next = null\n\n    // z-order curve value\n    this.z = null\n\n    // previous and next nodes in z-order\n    this.prevZ = null\n    this.nextZ = null\n\n    // indicates whether this is a steiner point\n    this.steiner = false\n  }\n}\n\n/*\n * create a node and optionally link it with previous one (in a circular doubly linked list)\n */\nconst insertNode = (i, x, y, last) => {\n  const p = new Node(i, x, y)\n\n  if (!last) {\n    p.prev = p\n    p.next = p\n  } else {\n    p.next = last.next\n    p.prev = last\n    last.next.prev = p\n    last.next = p\n  }\n\n  return p\n}\n\n/*\n * remove a node and join prev with next nodes\n */\nconst removeNode = (p) => {\n  p.next.prev = p.prev\n  p.prev.next = p.next\n\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ\n}\n\nmodule.exports = { Node, insertNode, removeNode, sortLinked }\n","\n// Simon Tatham's linked list merge sort algorithm\n// https://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nconst sortLinked = (list, fn) => {\n  let i, p, q, e, numMerges\n  let inSize = 1\n\n  do {\n    p = list\n    list = null\n    let tail = null\n    numMerges = 0\n\n    while (p) {\n      numMerges++\n      q = p\n      let pSize = 0\n      for (i = 0; i < inSize; i++) {\n        pSize++\n        q = q.nextZ\n        if (!q) break\n      }\n\n      let qSize = inSize\n\n      while (pSize > 0 || (qSize > 0 && q)) {\n        if (pSize !== 0 && (qSize === 0 || !q || fn(p) <= fn(q))) {\n          e = p\n          p = p.nextZ\n          pSize--\n        } else {\n          e = q\n          q = q.nextZ\n          qSize--\n        }\n\n        if (tail) tail.nextZ = e\n        else list = e\n\n        e.prevZ = tail\n        tail = e\n      }\n\n      p = q\n    }\n\n    tail.nextZ = null\n    inSize *= 2\n  } while (numMerges > 1)\n\n  return list\n}\n\nmodule.exports = sortLinked\n","const { Node, insertNode, removeNode } = require('./linkedList')\nconst { area } = require('./triangle')\n\n/*\n * create a circular doubly linked list from polygon points in the specified winding order\n */\nconst linkedPolygon = (data, start, end, dim, clockwise) => {\n  let last\n\n  if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n    for (let i = start; i < end; i += dim) {\n      last = insertNode(i, data[i], data[i + 1], last)\n    }\n  } else {\n    for (let i = end - dim; i >= start; i -= dim) {\n      last = insertNode(i, data[i], data[i + 1], last)\n    }\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last)\n    last = last.next\n  }\n\n  return last\n}\n\n/*\n * eliminate colinear or duplicate points\n */\nconst filterPoints = (start, end) => {\n  if (!start) return start\n  if (!end) end = start\n\n  let p = start\n  let again\n  do {\n    again = false\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p)\n      p = end = p.prev\n      if (p === p.next) break\n      again = true\n    } else {\n      p = p.next\n    }\n  } while (again || p !== end)\n\n  return end\n}\n\n/*\n * go through all polygon nodes and cure small local self-intersections\n */\nconst cureLocalIntersections = (start, triangles, dim) => {\n  let p = start\n  do {\n    const a = p.prev\n    const b = p.next.next\n\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim)\n      triangles.push(p.i / dim)\n      triangles.push(b.i / dim)\n\n      // remove two nodes involved\n      removeNode(p)\n      removeNode(p.next)\n\n      p = start = b\n    }\n\n    p = p.next\n  } while (p !== start)\n\n  return filterPoints(p)\n}\n\n/*\n * check if a polygon diagonal intersects any polygon segments\n */\nconst intersectsPolygon = (a, b) => {\n  let p = a\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n        intersects(p, p.next, a, b)) return true\n    p = p.next\n  } while (p !== a)\n\n  return false\n}\n\n/*\n * check if a polygon diagonal is locally inside the polygon\n */\nconst locallyInside = (a, b) => area(a.prev, a, a.next) < 0\n  ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n  : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0\n\n/*\n * check if the middle point of a polygon diagonal is inside the polygon\n */\nconst middleInside = (a, b) => {\n  let p = a\n  let inside = false\n  const px = (a.x + b.x) / 2\n  const py = (a.y + b.y) / 2\n  do {\n    if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n        (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x)) { inside = !inside }\n    p = p.next\n  } while (p !== a)\n\n  return inside\n}\n\n/*\n * link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two\n * if one belongs to the outer ring and another to a hole, it merges it into a single ring\n */\nconst splitPolygon = (a, b) => {\n  const a2 = new Node(a.i, a.x, a.y)\n  const b2 = new Node(b.i, b.x, b.y)\n  const an = a.next\n  const bp = b.prev\n\n  a.next = b\n  b.prev = a\n\n  a2.next = an\n  an.prev = a2\n\n  b2.next = a2\n  a2.prev = b2\n\n  bp.next = b2\n  b2.prev = bp\n\n  return b2\n}\n\n/*\n * check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n */\nconst isValidDiagonal = (a, b) => a.next.i !== b.i &&\n    a.prev.i !== b.i &&\n    !intersectsPolygon(a, b) && // doesn't intersect other edges\n    (\n      locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n        (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n        equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0\n    )\n\n/*\n * check if two segments intersect\n */\nconst intersects = (p1, q1, p2, q2) => {\n  const o1 = Math.sign(area(p1, q1, p2))\n  const o2 = Math.sign(area(p1, q1, q2))\n  const o3 = Math.sign(area(p2, q2, p1))\n  const o4 = Math.sign(area(p2, q2, q1))\n\n  if (o1 !== o2 && o3 !== o4) return true // general case\n\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true // p1, q1 and p2 are colinear and p2 lies on p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true // p1, q1 and q2 are colinear and q2 lies on p1q1\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true // p2, q2 and p1 are colinear and p1 lies on p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true // p2, q2 and q1 are colinear and q1 lies on p2q2\n\n  return false\n}\n\n/*\n * for colinear points p, q, r, check if point q lies on segment pr\n */\nconst onSegment = (p, q, r) => q.x <= Math.max(p.x, r.x) &&\n    q.x >= Math.min(p.x, r.x) &&\n    q.y <= Math.max(p.y, r.y) &&\n    q.y >= Math.min(p.y, r.y)\n\nconst signedArea = (data, start, end, dim) => {\n  let sum = 0\n  for (let i = start, j = end - dim; i < end; i += dim) {\n    sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1])\n    j = i\n  }\n\n  return sum\n}\n\n/*\n * check if two points are equal\n */\nconst equals = (p1, p2) => p1.x === p2.x && p1.y === p2.y\n\nmodule.exports = { cureLocalIntersections, filterPoints, isValidDiagonal, linkedPolygon, locallyInside, splitPolygon }\n","const geom2 = require('../../../geometries/geom2')\nconst plane = require('../../../maths/plane')\nconst vec2 = require('../../../maths/vec2')\nconst vec3 = require('../../../maths/vec3')\nconst calculatePlane = require('../slice/calculatePlane')\nconst assignHoles = require('./assignHoles')\n\n/*\n * Constructs a polygon hierarchy which associates holes with their outer solids.\n * This class maps a 3D polygon onto a 2D space using an orthonormal basis.\n * It tracks the mapping so that points can be reversed back to 3D losslessly.\n */\nclass PolygonHierarchy {\n  constructor (slice) {\n    this.plane = calculatePlane(slice)\n\n    // create an orthonormal basis\n    // choose an arbitrary right hand vector, making sure it is somewhat orthogonal to the plane normal\n    const rightvector = vec3.orthogonal(vec3.create(), this.plane)\n    const perp = vec3.cross(vec3.create(), this.plane, rightvector)\n    this.v = vec3.normalize(perp, perp)\n    this.u = vec3.cross(vec3.create(), this.v, this.plane)\n\n    // map from 2D to original 3D points\n    this.basisMap = new Map()\n\n    // project slice onto 2D plane\n    const projected = slice.edges.map((e) => e.map((v) => this.to2D(v)))\n\n    // compute polygon hierarchies, assign holes to solids\n    const geometry = geom2.create(projected)\n    this.roots = assignHoles(geometry)\n  }\n\n  /*\n   * project a 3D point onto the 2D plane\n   */\n  to2D (vector3) {\n    const vector2 = vec2.fromValues(vec3.dot(vector3, this.u), vec3.dot(vector3, this.v))\n    this.basisMap.set(vector2, vector3)\n    return vector2\n  }\n\n  /*\n   * un-project a 2D point back into 3D\n   */\n  to3D (vector2) {\n    // use a map to get the original 3D, no floating point error\n    const original = this.basisMap.get(vector2)\n    if (original) {\n      return original\n    } else {\n      console.log('Warning: point not in original slice')\n      const v1 = vec3.scale(vec3.create(), this.u, vector2[0])\n      const v2 = vec3.scale(vec3.create(), this.v, vector2[1])\n\n      const planeOrigin = vec3.scale(vec3.create(), plane, plane[3])\n      const v3 = vec3.add(v1, v1, planeOrigin)\n      return vec3.add(v2, v2, v3)\n    }\n  }\n}\n\nmodule.exports = PolygonHierarchy\n","\n/*\n * check if a point lies within a convex triangle\n */\nconst pointInTriangle = (ax, ay, bx, by, cx, cy, px, py) => (\n  (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n      (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n      (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0\n)\n\n/*\n * signed area of a triangle\n */\nconst area = (p, q, r) => (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y)\n\nmodule.exports = { area, pointInTriangle }\n","const mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst slice = require('./slice')\nconst repairSlice = require('./slice/repair')\n\nconst extrudeWalls = require('./extrudeWalls')\n\nconst defaultCallback = (progress, index, base) => {\n  let baseSlice = null\n  if (geom2.isA(base)) baseSlice = slice.fromSides(geom2.toSides(base))\n  if (poly3.isA(base)) baseSlice = slice.fromPoints(poly3.toPoints(base))\n\n  return progress === 0 || progress === 1 ? slice.transform(mat4.fromTranslation(mat4.create(), [0, 0, progress]), baseSlice) : null\n}\n\n/**\n * Extrude a solid from the slices as returned by the callback function.\n * @see slice\n *\n * @param {Object} options - options for extrude\n * @param {Integer} [options.numberOfSlices=2] the number of slices to be generated by the callback\n * @param {Boolean} [options.capStart=true] the solid should have a cap at the start\n * @param {Boolean} [options.capEnd=true] the solid should have a cap at the end\n * @param {Boolean} [options.close=false] the solid should have a closing section between start and end\n * @param {Boolean} [options.repair=true] - repair gaps in the geometry\n * @param {Function} [options.callback] the callback function that generates each slice\n * @param {Object} base - the base object which is used to create slices (see the example for callback information)\n * @return {geom3} the extruded shape\n * @alias module:modeling/extrusions.extrudeFromSlices\n *\n * @example\n * // Parameters:\n * //   progress : the percent complete [0..1]\n * //   index : the index of the current slice [0..numberOfSlices - 1]\n * //   base : the base object as given\n * // Return Value:\n * //   slice or null (to skip)\n * const callback = (progress, index, base) => {\n *   ...\n *   return slice\n * }\n */\nconst extrudeFromSlices = (options, base) => {\n  const defaults = {\n    numberOfSlices: 2,\n    capStart: true,\n    capEnd: true,\n    close: false,\n    repair: true,\n    callback: defaultCallback\n  }\n  const { numberOfSlices, capStart, capEnd, close, repair, callback: generate } = Object.assign({ }, defaults, options)\n\n  if (numberOfSlices < 2) throw new Error('numberOfSlices must be 2 or more')\n\n  // Repair gaps in the base slice\n  if (repair) {\n    // note: base must be a slice, if base is geom2 this doesn't repair\n    base = repairSlice(base)\n  }\n\n  const sMax = numberOfSlices - 1\n\n  let startSlice = null\n  let endSlice = null\n  let prevSlice = null\n  let polygons = []\n  for (let s = 0; s < numberOfSlices; s++) {\n    // invoke the callback function to get the next slice\n    // NOTE: callback can return null to skip the slice\n    const currentSlice = generate(s / sMax, s, base)\n\n    if (currentSlice) {\n      if (!slice.isA(currentSlice)) throw new Error('the callback function must return slice objects')\n\n      const edges = slice.toEdges(currentSlice)\n      if (edges.length === 0) throw new Error('the callback function must return slices with one or more edges')\n\n      if (prevSlice) {\n        polygons = polygons.concat(extrudeWalls(prevSlice, currentSlice))\n      }\n\n      // save start and end slices for caps if necessary\n      if (s === 0) startSlice = currentSlice\n      if (s === (numberOfSlices - 1)) endSlice = currentSlice\n\n      prevSlice = currentSlice\n    }\n  }\n\n  if (capEnd) {\n    // create a cap at the end\n    const endPolygons = slice.toPolygons(endSlice)\n    polygons = polygons.concat(endPolygons)\n  }\n  if (capStart) {\n    // create a cap at the start\n    const startPolygons = slice.toPolygons(startSlice).map(poly3.invert)\n    polygons = polygons.concat(startPolygons)\n  }\n  if (!capStart && !capEnd) {\n    // create walls between end and start slices\n    if (close && !slice.equals(endSlice, startSlice)) {\n      polygons = polygons.concat(extrudeWalls(endSlice, startSlice))\n    }\n  }\n  return geom3.create(polygons)\n}\n\nmodule.exports = extrudeFromSlices\n","const { TAU } = require('../../maths/constants')\nconst slice = require('./slice')\nconst mat4 = require('../../maths/mat4')\nconst extrudeFromSlices = require('./extrudeFromSlices')\nconst geom2 = require('../../geometries/geom2')\n\n/**\n * Perform a helical extrude of the geometry, using the given options.\n *\n * @param {Object} options - options for extrusion\n * @param {Number} [options.angle=TAU] - angle of the extrusion (RADIANS) positive for right-hand rotation, negative for left-hand\n * @param {Number} [options.startAngle=0] - start angle of the extrusion (RADIANS)\n * @param {Number} [options.pitch=10] - elevation gain for each turn\n * @param {Number} [options.height] - total height of the helix path. Ignored if pitch is set.\n * @param {Number} [options.endOffset=0] - offset the final radius of the extrusion, allowing for tapered helix, and or spiral\n * @param {Number} [options.segmentsPerRotation=32] - number of segments per full rotation of the extrusion\n * @param {geom2} geometry - the geometry to extrude\n * @returns {geom3} the extruded geometry\n * @alias module:modeling/extrusions.extrudeHelical\n *\n * @example\n * const myshape = extrudeHelical(\n *  {\n *      angle: Math.PI * 4,\n *      pitch: 10,\n *      segmentsPerRotation: 64\n *  },\n *  circle({size: 3, center: [10, 0]})\n * )\n */\nconst extrudeHelical = (options, geometry) => {\n  const defaults = {\n    angle: TAU,\n    startAngle: 0,\n    pitch: 10,\n    endOffset: 0,\n    segmentsPerRotation: 32\n  }\n  const { angle, endOffset, segmentsPerRotation, startAngle } = Object.assign({}, defaults, options)\n\n  let pitch\n  // ignore height if pitch is set\n  if(!options.pitch && options.height) {\n    pitch = options.height / (angle / TAU)\n  } else {\n    pitch = options.pitch ? options.pitch : defaults.pitch\n  }\n\n  // needs at least 3 segments for each revolution\n  const minNumberOfSegments = 3\n\n  if (segmentsPerRotation < minNumberOfSegments)\n    throw new Error(`The number of segments per rotation needs to be at least 3.`)\n\n  let shapeSides = geom2.toSides(geometry)\n  if (shapeSides.length === 0) throw new Error('the given geometry cannot be empty')\n\n  // const pointsWithNegativeX = shapeSides.filter((s) => (s[0][0] < 0))\n  const pointsWithPositiveX = shapeSides.filter((s) => (s[0][0] >= 0))\n  \n  let baseSlice = slice.fromSides(shapeSides)\n  \n  if(pointsWithPositiveX.length === 0) {\n    // only points in negative x plane, reverse\n    baseSlice = slice.reverse(baseSlice)\n  }\n\n  const calculatedSegments = Math.round(segmentsPerRotation / TAU * Math.abs(angle))\n  const segments = calculatedSegments >= 2 ? calculatedSegments : 2\n  // define transform matrix variables for performance increase\n  const step1 = mat4.create()\n  let matrix\n  const sliceCallback = (progress, index, base) => {\n    const zRotation = startAngle + angle / segments * index\n    const xOffset = endOffset / segments * index\n    const zOffset = (zRotation - startAngle) / TAU * pitch\n\n    // TODO: check for valid geometry after translations\n    // ie all the points have to be either x > -xOffset or x < -xOffset\n    // this would have to be checked for every transform, and handled\n    //\n    // not implementing, as this currently doesn't break anything,\n    // only creates inside-out polygons\n\n    // create transformation matrix\n    mat4.multiply(\n      step1,\n      // then apply offsets\n      mat4.fromTranslation(mat4.create(), [xOffset, 0, zOffset * Math.sign(angle)]),\n      // first rotate \"flat\" 2D shape from XY to XZ plane\n      mat4.fromXRotation(mat4.create(), -TAU / 4 * Math.sign(angle)) // rotate the slice correctly to not create inside-out polygon\n    )\n\n    matrix = mat4.create()\n    mat4.multiply(\n      matrix,\n      // finally rotate around Z axis\n      mat4.fromZRotation(mat4.create(), zRotation),\n      step1\n    )\n    return slice.transform(matrix, base)\n  }\n\n  return extrudeFromSlices(\n    {\n      // \"base\" slice is counted as segment, so add one for complete final rotation\n      numberOfSlices: segments + 1,\n      callback: sliceCallback\n    },\n    baseSlice\n  )\n}\n\nmodule.exports = extrudeHelical\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst extrudeLinearGeom2 = require('./extrudeLinearGeom2')\nconst extrudeLinearPath2 = require('./extrudeLinearPath2')\n\n/**\n * Extrude the given geometry in an upward linear direction using the given options.\n * Accepts path2 or geom2 objects as input. Paths must be closed.\n *\n * @param {Object} options - options for extrude\n * @param {Number} [options.height=1] the height of the extrusion\n * @param {Number} [options.twistAngle=0] the final rotation (RADIANS) about the origin of the shape (if any)\n * @param {Integer} [options.twistSteps=1] the resolution of the twist about the axis (if any)\n * @param {...Object} objects - the geometries to extrude\n * @return {Object|Array} the extruded geometry, or a list of extruded geometry\n * @alias module:modeling/extrusions.extrudeLinear\n *\n * @example\n * let myshape = extrudeLinear({height: 10}, rectangle({size: [20, 25]}))\n */\nconst extrudeLinear = (options, ...objects) => {\n  const defaults = {\n    height: 1,\n    twistAngle: 0,\n    twistSteps: 1,\n    repair: true\n  }\n  const { height, twistAngle, twistSteps, repair } = Object.assign({ }, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  options = { offset: [0, 0, height], twistAngle, twistSteps, repair }\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return extrudeLinearPath2(options, object)\n    if (geom2.isA(object)) return extrudeLinearGeom2(options, object)\n    // if (geom3.isA(object)) return geom3.extrude(options, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = extrudeLinear\n","const mat4 = require('../../maths/mat4')\nconst vec3 = require('../../maths/vec3')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst slice = require('./slice')\n\nconst extrudeFromSlices = require('./extrudeFromSlices')\n\n/*\n * Extrude the given geometry using the given options.\n *\n * @param {Object} [options] - options for extrude\n * @param {Array} [options.offset] - the direction of the extrusion as a 3D vector\n * @param {Number} [options.twistAngle] - the final rotation (RADIANS) about the origin\n * @param {Integer} [options.twistSteps] - the number of steps created to produce the twist (if any)\n * @param {Boolean} [options.repair] - repair gaps in the geometry\n * @param {geom2} geometry - the geometry to extrude\n * @returns {geom3} the extruded 3D geometry\n*/\nconst extrudeGeom2 = (options, geometry) => {\n  const defaults = {\n    offset: [0, 0, 1],\n    twistAngle: 0,\n    twistSteps: 12,\n    repair: true\n  }\n  let { offset, twistAngle, twistSteps, repair } = Object.assign({ }, defaults, options)\n\n  if (twistSteps < 1) throw new Error('twistSteps must be 1 or more')\n\n  if (twistAngle === 0) {\n    twistSteps = 1\n  }\n\n  // convert to vector in order to perform transforms\n  const offsetv = vec3.clone(offset)\n\n  const baseSides = geom2.toSides(geometry)\n  if (baseSides.length === 0) throw new Error('the given geometry cannot be empty')\n\n  const baseSlice = slice.fromSides(baseSides)\n  if (offsetv[2] < 0) slice.reverse(baseSlice, baseSlice)\n\n  const matrix = mat4.create()\n  const createTwist = (progress, index, base) => {\n    const Zrotation = index / twistSteps * twistAngle\n    const Zoffset = vec3.scale(vec3.create(), offsetv, index / twistSteps)\n    mat4.multiply(matrix, mat4.fromZRotation(matrix, Zrotation), mat4.fromTranslation(mat4.create(), Zoffset))\n\n    return slice.transform(matrix, base)\n  }\n\n  options = {\n    numberOfSlices: twistSteps + 1,\n    capStart: true,\n    capEnd: true,\n    repair,\n    callback: createTwist\n  }\n  return extrudeFromSlices(options, baseSlice)\n}\n\nmodule.exports = extrudeGeom2\n","const geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst extrudeLinearGeom2 = require('./extrudeLinearGeom2')\n\n/*\n * Extrude the given geometry using the given options.\n *\n * @param {Object} [options] - options for extrude\n * @param {Array} [options.offset] - the direction of the extrusion as a 3D vector\n * @param {Number} [options.twistAngle] - the final rotation (RADIANS) about the origin\n * @param {Integer} [options.twistSteps] - the number of steps created to produce the twist (if any)\n * @param {path2} geometry - the geometry to extrude\n * @returns {geom3} the extruded 3D geometry\n*/\nconst extrudePath2 = (options, geometry) => {\n  if (!geometry.isClosed) throw new Error('extruded path must be closed')\n  // Convert path2 to geom2\n  const points = path2.toPoints(geometry)\n  const geometry2 = geom2.fromPoints(points)\n  return extrudeLinearGeom2(options, geometry2)\n}\n\nmodule.exports = extrudePath2\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst extrudeRectangularPath2 = require('./extrudeRectangularPath2')\nconst extrudeRectangularGeom2 = require('./extrudeRectangularGeom2')\n\n/**\n * Extrude the given geometry by following the outline(s) with a rectangle.\n * @See expand for addition options\n * @param {Object} options - options for extrusion, if any\n * @param {Number} [options.size=1] - size of the rectangle\n * @param {Number} [options.height=1] - height of the extrusion\n * @param {...Object} objects - the geometries to extrude\n * @return {Object|Array} the extruded object, or a list of extruded objects\n * @alias module:modeling/extrusions.extrudeRectangular\n *\n * @example\n * let mywalls = extrudeRectangular({size: 1, height: 3}, square({size: 20}))\n * let mywalls = extrudeRectangular({size: 1, height: 300, twistAngle: TAU / 2}, square({size: 20}))\n */\nconst extrudeRectangular = (options, ...objects) => {\n  const defaults = {\n    size: 1,\n    height: 1\n  }\n  const { size, height } = Object.assign({}, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  if (size <= 0) throw new Error('size must be positive')\n  if (height <= 0) throw new Error('height must be positive')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return extrudeRectangularPath2(options, object)\n    if (geom2.isA(object)) return extrudeRectangularGeom2(options, object)\n    // if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = extrudeRectangular\n","const { area } = require('../../maths/utils')\n\nconst geom2 = require('../../geometries/geom2')\nconst path2 = require('../../geometries/path2')\n\nconst expand = require('../expansions/expand')\n\nconst extrudeLinearGeom2 = require('./extrudeLinearGeom2')\n\n/*\n * Expand and extrude the given geometry (geom2).\n * @see expand for additional options\n * @param {Object} options - options for extrusion, if any\n * @param {Number} [options.size=1] - size of the rectangle\n * @param {Number} [options.height=1] - height of the extrusion\n * @param {geom2} geometry - the geometry to extrude\n * @return {geom3} the extruded geometry\n */\nconst extrudeRectangularGeom2 = (options, geometry) => {\n  const defaults = {\n    size: 1,\n    height: 1\n  }\n  const { size, height } = Object.assign({ }, defaults, options)\n\n  options.delta = size\n  options.offset = [0, 0, height]\n\n  // convert the geometry to outlines\n  const outlines = geom2.toOutlines(geometry)\n  if (outlines.length === 0) throw new Error('the given geometry cannot be empty')\n\n  // expand the outlines\n  const newparts = outlines.map((outline) => {\n    if (area(outline) < 0) outline.reverse() // all outlines must wind counter clockwise\n    return expand(options, path2.fromPoints({ closed: true }, outline))\n  })\n\n  // create a composite geometry\n  const allsides = newparts.reduce((sides, part) => sides.concat(geom2.toSides(part)), [])\n  const newgeometry = geom2.create(allsides)\n\n  return extrudeLinearGeom2(options, newgeometry)\n}\n\nmodule.exports = extrudeRectangularGeom2\n","const path2 = require('../../geometries/path2')\n\nconst expand = require('../expansions/expand')\n\nconst extrudeLinearGeom2 = require('./extrudeLinearGeom2')\n\n/*\n * Expand and extrude the given geometry (path2).\n * @See expand for addition options\n * @param {Object} options - options for extrusion, if any\n * @param {Number} [options.size=1] - size of the rectangle\n * @param {Number} [options.height=1] - height of the extrusion\n * @param {path2} geometry - the geometry to extrude\n * @return {geom3} the extruded geometry\n */\nconst extrudeRectangularPath2 = (options, geometry) => {\n  const defaults = {\n    size: 1,\n    height: 1\n  }\n  const { size, height } = Object.assign({ }, defaults, options)\n\n  options.delta = size\n  options.offset = [0, 0, height]\n\n  const points = path2.toPoints(geometry)\n  if (points.length === 0) throw new Error('the given geometry cannot be empty')\n\n  const newgeometry = expand(options, geometry)\n  return extrudeLinearGeom2(options, newgeometry)\n}\n\nmodule.exports = extrudeRectangularPath2\n","const { TAU } = require('../../maths/constants')\nconst mat4 = require('../../maths/mat4')\n\nconst { mirrorX } = require('../transforms/mirror')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst slice = require('./slice')\n\nconst extrudeFromSlices = require('./extrudeFromSlices')\n\n/**\n * Rotate extrude the given geometry using the given options.\n *\n * @param {Object} options - options for extrusion\n * @param {Number} [options.angle=TAU] - angle of the extrusion (RADIANS)\n * @param {Number} [options.startAngle=0] - start angle of the extrusion (RADIANS)\n * @param {String} [options.overflow='cap'] - what to do with points outside of bounds (+ / - x) :\n * defaults to capping those points to 0 (only supported behaviour for now)\n * @param {Number} [options.segments=12] - number of segments of the extrusion\n * @param {geom2} geometry - the geometry to extrude\n * @returns {geom3} the extruded geometry\n * @alias module:modeling/extrusions.extrudeRotate\n *\n * @example\n * const myshape = extrudeRotate({segments: 8, angle: TAU / 2}, circle({size: 3, center: [4, 0]}))\n */\nconst extrudeRotate = (options, geometry) => {\n  const defaults = {\n    segments: 12,\n    startAngle: 0,\n    angle: TAU,\n    overflow: 'cap'\n  }\n  let { segments, startAngle, angle, overflow } = Object.assign({}, defaults, options)\n\n  if (segments < 3) throw new Error('segments must be greater then 3')\n\n  startAngle = Math.abs(startAngle) > TAU ? startAngle % TAU : startAngle\n  angle = Math.abs(angle) > TAU ? angle % TAU : angle\n\n  let endAngle = startAngle + angle\n  endAngle = Math.abs(endAngle) > TAU ? endAngle % TAU : endAngle\n\n  if (endAngle < startAngle) {\n    const x = startAngle\n    startAngle = endAngle\n    endAngle = x\n  }\n  let totalRotation = endAngle - startAngle\n  if (totalRotation <= 0.0) totalRotation = TAU\n\n  if (Math.abs(totalRotation) < TAU) {\n    // adjust the segments to achieve the total rotation requested\n    const anglePerSegment = TAU / segments\n    segments = Math.floor(Math.abs(totalRotation) / anglePerSegment)\n    if (Math.abs(totalRotation) > (segments * anglePerSegment)) segments++\n  }\n\n  // console.log('startAngle: '+startAngle)\n  // console.log('endAngle: '+endAngle)\n  // console.log(totalRotation)\n  // console.log(segments)\n\n  // convert geometry to an array of sides, easier to deal with\n  let shapeSides = geom2.toSides(geometry)\n  if (shapeSides.length === 0) throw new Error('the given geometry cannot be empty')\n\n  // determine if the rotate extrude can be computed in the first place\n  // ie all the points have to be either x > 0 or x < 0\n\n  // generic solution to always have a valid solid, even if points go beyond x/ -x\n  // 1. split points up between all those on the 'left' side of the axis (x<0) & those on the 'righ' (x>0)\n  // 2. for each set of points do the extrusion operation IN OPOSITE DIRECTIONS\n  // 3. union the two resulting solids\n\n  // 1. alt : OR : just cap of points at the axis ?\n\n  const pointsWithNegativeX = shapeSides.filter((s) => (s[0][0] < 0))\n  const pointsWithPositiveX = shapeSides.filter((s) => (s[0][0] >= 0))\n  const arePointsWithNegAndPosX = pointsWithNegativeX.length > 0 && pointsWithPositiveX.length > 0\n\n  // FIXME actually there are cases where setting X=0 will change the basic shape\n  // - Alternative #1 : don't allow shapes with both negative and positive X values\n  // - Alternative #2 : remove one half of the shape (costly)\n  if (arePointsWithNegAndPosX && overflow === 'cap') {\n    if (pointsWithNegativeX.length > pointsWithPositiveX.length) {\n      shapeSides = shapeSides.map((side) => {\n        let point0 = side[0]\n        let point1 = side[1]\n        point0 = [Math.min(point0[0], 0), point0[1]]\n        point1 = [Math.min(point1[0], 0), point1[1]]\n        return [point0, point1]\n      })\n      // recreate the geometry from the (-) capped points\n      geometry = geom2.reverse(geom2.create(shapeSides))\n      geometry = mirrorX(geometry)\n    } else if (pointsWithPositiveX.length >= pointsWithNegativeX.length) {\n      shapeSides = shapeSides.map((side) => {\n        let point0 = side[0]\n        let point1 = side[1]\n        point0 = [Math.max(point0[0], 0), point0[1]]\n        point1 = [Math.max(point1[0], 0), point1[1]]\n        return [point0, point1]\n      })\n      // recreate the geometry from the (+) capped points\n      geometry = geom2.create(shapeSides)\n    }\n  }\n\n  const rotationPerSlice = totalRotation / segments\n  const isCapped = Math.abs(totalRotation) < TAU\n  const baseSlice = slice.fromSides(geom2.toSides(geometry))\n  slice.reverse(baseSlice, baseSlice)\n\n  const matrix = mat4.create()\n  const createSlice = (progress, index, base) => {\n    let Zrotation = rotationPerSlice * index + startAngle\n    // fix rounding error when rotating TAU radians\n    if (totalRotation === TAU && index === segments) {\n      Zrotation = startAngle\n    }\n    mat4.multiply(matrix, mat4.fromZRotation(matrix, Zrotation), mat4.fromXRotation(mat4.create(), TAU / 4))\n\n    return slice.transform(matrix, base)\n  }\n\n  options = {\n    numberOfSlices: segments + 1,\n    capStart: isCapped,\n    capEnd: isCapped,\n    close: !isCapped,\n    callback: createSlice\n  }\n  return extrudeFromSlices(options, baseSlice)\n}\n\nmodule.exports = extrudeRotate\n","const { EPS } = require('../../maths/constants')\nconst vec3 = require('../../maths/vec3')\n\nconst poly3 = require('../../geometries/poly3')\n\nconst slice = require('./slice')\n\n// https://en.wikipedia.org/wiki/Greatest_common_divisor#Using_Euclid's_algorithm\nconst gcd = (a, b) => {\n  if (a === b) { return a }\n  if (a < b) { return gcd(b, a) }\n  if (b === 1) { return 1 }\n  if (b === 0) { return a }\n  return gcd(b, a % b)\n}\n\nconst lcm = (a, b) => (a * b) / gcd(a, b)\n\n// Return a set of edges that encloses the same area by splitting\n// the given edges to have newlength total edges.\nconst repartitionEdges = (newlength, edges) => {\n  // NOTE: This implementation splits each edge evenly.\n  const multiple = newlength / edges.length\n  if (multiple === 1) {\n    return edges\n  }\n\n  const divisor = vec3.fromValues(multiple, multiple, multiple)\n\n  const newEdges = []\n  edges.forEach((edge) => {\n    const increment = vec3.subtract(vec3.create(), edge[1], edge[0])\n    vec3.divide(increment, increment, divisor)\n\n    // repartition the edge\n    let prev = edge[0]\n    for (let i = 1; i <= multiple; ++i) {\n      const next = vec3.add(vec3.create(), prev, increment)\n      newEdges.push([prev, next])\n      prev = next\n    }\n  })\n  return newEdges\n}\n\nconst EPSAREA = (EPS * EPS / 2) * Math.sin(Math.PI / 3)\n\n/*\n * Extrude (build) walls between the given slices.\n * Each wall consists of two triangles, which may be invalid if slices are overlapping.\n */\nconst extrudeWalls = (slice0, slice1) => {\n  let edges0 = slice.toEdges(slice0)\n  let edges1 = slice.toEdges(slice1)\n\n  if (edges0.length !== edges1.length) {\n    // different shapes, so adjust one or both to the same number of edges\n    const newlength = lcm(edges0.length, edges1.length)\n    if (newlength !== edges0.length) edges0 = repartitionEdges(newlength, edges0)\n    if (newlength !== edges1.length) edges1 = repartitionEdges(newlength, edges1)\n  }\n\n  const walls = []\n  edges0.forEach((edge0, i) => {\n    const edge1 = edges1[i]\n\n    const poly0 = poly3.create([edge0[0], edge0[1], edge1[1]])\n    const poly0area = poly3.measureArea(poly0)\n    if (Number.isFinite(poly0area) && poly0area > EPSAREA) walls.push(poly0)\n\n    const poly1 = poly3.create([edge0[0], edge1[1], edge1[0]])\n    const poly1area = poly3.measureArea(poly1)\n    if (Number.isFinite(poly1area) && poly1area > EPSAREA) walls.push(poly1)\n  })\n  return walls\n}\n\nmodule.exports = extrudeWalls\n","/**\n * All 2D shapes (primitives or the results of operations) can be extruded in various ways.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/extrusions\n * @example\n * const { extrudeLinear, extrudeRectangular, extrudeRotate } = require('@jscad/modeling').extrusions\n */\nmodule.exports = {\n  extrudeFromSlices: require('./extrudeFromSlices'),\n  extrudeLinear: require('./extrudeLinear'),\n  extrudeRectangular: require('./extrudeRectangular'),\n  extrudeRotate: require('./extrudeRotate'),\n  extrudeHelical: require('./extrudeHelical'),\n  project: require('./project'),\n  slice: require('./slice')\n}\n","const flatten = require('../../utils/flatten')\n\nconst aboutEqualNormals = require('../../maths/utils/aboutEqualNormals')\nconst plane = require('../../maths/plane')\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst unionGeom2 = require('../booleans/unionGeom2')\n\nconst projectGeom3 = (options, geometry) => {\n  // create a plane from the options, and verify\n  const projplane = plane.fromNormalAndPoint(plane.create(), options.axis, options.origin)\n  if (Number.isNaN(projplane[0]) || Number.isNaN(projplane[1]) || Number.isNaN(projplane[2]) || Number.isNaN(projplane[3])) {\n    throw new Error('project: invalid axis or origin')\n  }\n\n  const epsilon = measureEpsilon(geometry)\n  const epsilonArea = (epsilon * epsilon * Math.sqrt(3) / 4)\n\n  if (epsilon === 0) return geom2.create()\n\n  // project the polygons to the plane\n  const polygons = geom3.toPolygons(geometry)\n  let projpolys = []\n  for (let i = 0; i < polygons.length; i++) {\n    const newpoints = polygons[i].vertices.map((v) => plane.projectionOfPoint(projplane, v))\n    const newpoly = poly3.create(newpoints)\n    // only keep projections that face the same direction as the plane\n    const newplane = poly3.plane(newpoly)\n    if (!aboutEqualNormals(projplane, newplane)) continue\n    // only keep projections that have a measurable area\n    if (poly3.measureArea(newpoly) < epsilonArea) continue\n    projpolys.push(newpoly)\n  }\n\n  // rotate the polygons to lay on X/Y axes if necessary\n  if (!aboutEqualNormals(projplane, [0, 0, 1])) {\n    const rotation = mat4.fromVectorRotation(mat4.create(), projplane, [0, 0, 1])\n    projpolys = projpolys.map((p) => poly3.transform(rotation, p))\n  }\n\n  // sort the polygons to allow the union to ignore small pieces efficiently\n  projpolys = projpolys.sort((a, b) => poly3.measureArea(b) - poly3.measureArea(a))\n\n  // convert polygons to geometry, and union all pieces into a single geometry\n  const projgeoms = projpolys.map((p) => geom2.fromPoints(p.vertices))\n  return unionGeom2(projgeoms)\n}\n\n/**\n * Project the given 3D geometry on to the given plane.\n * @param {Object} options - options for project\n * @param {Array} [options.axis=[0,0,1]] the axis of the plane (default is Z axis)\n * @param {Array} [options.origin=[0,0,0]] the origin of the plane\n * @param {...Object} objects - the list of 3D geometry to project\n * @return {geom2|Array} the projected 2D geometry, or a list of 2D projected geometry\n * @alias module:modeling/extrusions.project\n *\n * @example\n * let myshape = project({}, sphere({radius: 20, segments: 5}))\n */\nconst project = (options, ...objects) => {\n  const defaults = {\n    axis: [0, 0, 1], // Z axis\n    origin: [0, 0, 0]\n  }\n  const { axis, origin } = Object.assign({ }, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  options = { axis, origin }\n\n  const results = objects.map((object) => {\n    // if (path.isA(object)) return project(options, object)\n    // if (geom2.isA(object)) return project(options, object)\n    if (geom3.isA(object)) return projectGeom3(options, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = project\n","const plane = require('../../../maths/plane')\nconst vec3 = require('../../../maths/vec3')\n\n/**\n * Calculate the plane of the given slice.\n * NOTE: The slice (and all points) are assumed to be planar from the beginning.\n * @param {slice} slice - the slice\n * @returns {plane} the plane of the slice\n * @alias module:modeling/extrusions/slice.calculatePlane\n *\n * @example\n * let myplane = calculatePlane(slice)\n */\nconst calculatePlane = (slice) => {\n  const edges = slice.edges\n  if (edges.length < 3) throw new Error('slices must have 3 or more edges to calculate a plane')\n\n  // find the midpoint of the slice, which will lie on the plane by definition\n  const midpoint = edges.reduce((point, edge) => vec3.add(vec3.create(), point, edge[0]), vec3.create())\n  vec3.scale(midpoint, midpoint, 1 / edges.length)\n\n  // find the farthest edge from the midpoint, which will be on an outside edge\n  let farthestEdge\n  let distance = 0\n  edges.forEach((edge) => {\n    // Make sure that the farthest edge is not a self-edge\n    if (!vec3.equals(edge[0], edge[1])) {\n      const d = vec3.squaredDistance(midpoint, edge[0])\n      if (d > distance) {\n        farthestEdge = edge\n        distance = d\n      }\n    }\n  })\n  // find the before edge\n  const beforeEdge = edges.find((edge) => vec3.equals(edge[1], farthestEdge[0]))\n\n  return plane.fromPoints(plane.create(), beforeEdge[0], farthestEdge[0], farthestEdge[1])\n}\n\nmodule.exports = calculatePlane\n","const create = require('./create')\n\nconst vec3 = require('../../../maths/vec3')\n\n/**\n * Create a deep clone of the given slice.\n *\n * @param {slice} [out] - receiving slice\n * @param {slice} slice - slice to clone\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.clone\n */\nconst clone = (...params) => {\n  let out\n  let slice\n  if (params.length === 1) {\n    out = create()\n    slice = params[0]\n  } else {\n    out = params[0]\n    slice = params[1]\n  }\n  // deep clone of edges\n  out.edges = slice.edges.map((edge) => [vec3.clone(edge[0]), vec3.clone(edge[1])])\n  return out\n}\n\nmodule.exports = clone\n","/**\n * Represents a 3D geometry consisting of a list of edges.\n * @typedef {Object} slice\n * @property {Array} edges - list of edges, each edge containing two points (3D)\n */\n\n/**\n * Creates a new empty slice.\n *\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.create\n */\nconst create = (edges) => {\n  if (!edges) {\n    edges = []\n  }\n  return { edges }\n}\n\nmodule.exports = create\n","const vec3 = require('../../../maths/vec3')\n\n/**\n * Determine if the given slices have the same edges.\n * @param {slice} a - the first slice to compare\n * @param {slice} b - the second slice to compare\n * @returns {Boolean} true if the slices are equal\n * @alias module:modeling/extrusions/slice.equals\n */\nconst equals = (a, b) => {\n  const aedges = a.edges\n  const bedges = b.edges\n\n  if (aedges.length !== bedges.length) {\n    return false\n  }\n\n  const isEqual = aedges.reduce((acc, aedge, i) => {\n    const bedge = bedges[i]\n    const d = vec3.squaredDistance(aedge[0], bedge[0])\n    return acc && (d < Number.EPSILON)\n  }, true)\n\n  return isEqual\n}\n\nmodule.exports = equals\n","const vec3 = require('../../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Create a slice from the given points.\n *\n * @param {Array} points - list of points, where each point is either 2D or 3D\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.fromPoints\n *\n * @example\n * const points = [\n *   [0,  0],\n *   [0, 10],\n *   [0, 10]\n * ]\n * const slice = fromPoints(points)\n */\nconst fromPoints = (points) => {\n  if (!Array.isArray(points)) throw new Error('the given points must be an array')\n  if (points.length < 3) throw new Error('the given points must contain THREE or more points')\n\n  // create a list of edges from the points\n  const edges = []\n  let prevpoint = points[points.length - 1]\n  points.forEach((point) => {\n    if (point.length === 2) edges.push([vec3.fromVec2(vec3.create(), prevpoint), vec3.fromVec2(vec3.create(), point)])\n    if (point.length === 3) edges.push([prevpoint, point])\n    prevpoint = point\n  })\n  return create(edges)\n}\n\nmodule.exports = fromPoints\n","const vec3 = require('../../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Create a slice from the given sides (see geom2).\n *\n * @param {Array} sides - list of sides from geom2\n * @returns {slice} a new slice\n * @alias module:modeling/extrusions/slice.fromSides\n *\n * @example\n * const myshape = circle({radius: 10})\n * const slice = fromSides(geom2.toSides(myshape))\n */\nconst fromSides = (sides) => {\n  if (!Array.isArray(sides)) throw new Error('the given sides must be an array')\n\n  // create a list of edges from the sides\n  const edges = []\n  sides.forEach((side) => {\n    edges.push([vec3.fromVec2(vec3.create(), side[0]), vec3.fromVec2(vec3.create(), side[1])])\n  })\n  return create(edges)\n}\n\nmodule.exports = fromSides\n","/**\n * Represents a 3D geometry consisting of a list of edges.\n * @see {@link slice} for data structure information.\n * @module modeling/extrusions/slice\n */\nmodule.exports = {\n  calculatePlane: require('./calculatePlane'),\n  clone: require('./clone'),\n  create: require('./create'),\n  equals: require('./equals'),\n  fromPoints: require('./fromPoints'),\n  fromSides: require('./fromSides'),\n  isA: require('./isA'),\n  reverse: require('./reverse'),\n  toEdges: require('./toEdges'),\n  toPolygons: require('./toPolygons'),\n  toString: require('./toString'),\n  transform: require('./transform')\n}\n","/**\n * Determine if the given object is a slice.\n * @param {slice} object - the object to interrogate\n * @returns {Boolean} true if the object matches a slice\n * @alias module:modeling/extrusions/slice.isA\n */\nconst isA = (object) => {\n  if (object && typeof object === 'object') {\n    if ('edges' in object) {\n      if (Array.isArray(object.edges)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = isA\n","const vec3 = require('../../../maths/vec3')\nconst create = require('./create')\n\n/*\n * Mend gaps in a 2D slice to make it a closed polygon\n */\nconst repair = (slice) => {\n  if (!slice.edges) return slice\n  let edges = slice.edges\n  const vertexMap = new Map() // string key to vertex map\n  const edgeCount = new Map() // count of (in - out) edges\n\n  // Remove self-edges\n  edges = edges.filter((e) => !vec3.equals(e[0], e[1]))\n\n  // build vertex and edge count maps\n  edges.forEach((edge) => {\n    const inKey = edge[0].toString()\n    const outKey = edge[1].toString()\n    vertexMap.set(inKey, edge[0])\n    vertexMap.set(outKey, edge[1])\n    edgeCount.set(inKey, (edgeCount.get(inKey) || 0) + 1) // in\n    edgeCount.set(outKey, (edgeCount.get(outKey) || 0) - 1) // out\n  })\n\n  // find vertices which are missing in or out edges\n  const missingIn = []\n  const missingOut = []\n  edgeCount.forEach((count, vertex) => {\n    if (count < 0) missingIn.push(vertex)\n    if (count > 0) missingOut.push(vertex)\n  })\n\n  // pairwise distance of bad vertices\n  missingIn.forEach((key1) => {\n    const v1 = vertexMap.get(key1)\n\n    // find the closest vertex that is missing an out edge\n    let bestDistance = Infinity\n    let bestReplacement\n    missingOut.forEach((key2) => {\n      const v2 = vertexMap.get(key2)\n      const distance = vec3.distance(v1, v2)\n      if (distance < bestDistance) {\n        bestDistance = distance\n        bestReplacement = v2\n      }\n    })\n    console.warn(`slice.repair: repairing vertex gap ${v1} to ${bestReplacement} distance ${bestDistance}`)\n\n    // merge broken vertices\n    edges = edges.map((edge) => {\n      if (edge[0].toString() === key1) return [bestReplacement, edge[1]]\n      if (edge[1].toString() === key1) return [edge[0], bestReplacement]\n      return edge\n    })\n  })\n\n  return create(edges)\n}\n\nmodule.exports = repair\n","const create = require('./create')\n\n/**\n * Reverse the edges of the given slice.\n *\n * @param {slice} [out] - receiving slice\n * @param {slice} slice - slice to reverse\n * @returns {slice} reverse of the slice\n * @alias module:modeling/extrusions/slice.reverse\n */\nconst reverse = (...params) => {\n  let out\n  let slice\n  if (params.length === 1) {\n    out = create()\n    slice = params[0]\n  } else {\n    out = params[0]\n    slice = params[1]\n  }\n  // reverse the edges\n  out.edges = slice.edges.map((edge) => [edge[1], edge[0]])\n  return out\n}\n\nmodule.exports = reverse\n","/**\n * Produces an array of edges from the given slice.\n * The returned array should not be modified as the data is shared with the slice.\n * @param {slice} slice - the slice\n * @returns {Array} an array of edges, each edge contains an array of two points (3D)\n * @alias module:modeling/extrusions/slice.toEdges\n *\n * @example\n * let sharededges = toEdges(slice)\n */\nconst toEdges = (slice) => slice.edges\n\nmodule.exports = toEdges\n","const poly3 = require('../../../geometries/poly3')\nconst earcut = require('../earcut')\nconst PolygonHierarchy = require('../earcut/polygonHierarchy')\n\n/**\n * Return a list of polygons which are enclosed by the slice.\n * @param {slice} slice - the slice\n * @return {Array} a list of polygons (3D)\n * @alias module:modeling/extrusions/slice.toPolygons\n */\nconst toPolygons = (slice) => {\n  const hierarchy = new PolygonHierarchy(slice)\n\n  const polygons = []\n  hierarchy.roots.forEach(({ solid, holes }) => {\n    // hole indices\n    let index = solid.length\n    const holesIndex = []\n    holes.forEach((hole, i) => {\n      holesIndex.push(index)\n      index += hole.length\n    })\n\n    // compute earcut triangulation for each solid\n    const vertices = [solid, ...holes].flat()\n    const data = vertices.flat()\n    // Get original 3D vertex by index\n    const getVertex = (i) => hierarchy.to3D(vertices[i])\n    const indices = earcut(data, holesIndex)\n    for (let i = 0; i < indices.length; i += 3) {\n      // Map back to original vertices\n      const tri = indices.slice(i, i + 3).map(getVertex)\n      polygons.push(poly3.fromPointsAndPlane(tri, hierarchy.plane))\n    }\n  })\n\n  return polygons\n}\n\nmodule.exports = toPolygons\n","const vec3 = require('../../../maths/vec3')\n\nconst edgesToString = (edges) =>\n  edges.reduce((result, edge) => (\n    result += `[${vec3.toString(edge[0])}, ${vec3.toString(edge[1])}], `\n  ), '')\n\n/**\n * @param {slice} slice - the slice\n * @return {String} the string representation\n * @alias module:modeling/extrusions/slice.toString\n */\nconst toString = (slice) => `[${edgesToString(slice.edges)}]`\n\nmodule.exports = toString\n","const vec3 = require('../../../maths/vec3')\n\nconst create = require('./create')\n\n/**\n * Transform the given slice using the given matrix.\n * @param {mat4} matrix - transform matrix\n * @param {slice} slice - slice to transform\n * @returns {slice} the transformed slice\n * @alias module:modeling/extrusions/slice.transform\n *\n * @example\n * let matrix = mat4.fromTranslation([1, 2, 3])\n * let newslice = transform(matrix, oldslice)\n */\nconst transform = (matrix, slice) => {\n  const edges = slice.edges.map((edge) => [vec3.transform(vec3.create(), edge[0], matrix), vec3.transform(vec3.create(), edge[1], matrix)])\n  return create(edges)\n}\n\nmodule.exports = transform\n","const flatten = require('../../utils/flatten')\nconst areAllShapesTheSameType = require('../../utils/areAllShapesTheSameType')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst hullPath2 = require('./hullPath2')\nconst hullGeom2 = require('./hullGeom2')\nconst hullGeom3 = require('./hullGeom3')\n\n/**\n * Create a convex hull of the given geometries.\n * The given geometries should be of the same type, either geom2 or geom3 or path2.\n * @param {...Objects} geometries - list of geometries from which to create a hull\n * @returns {geom2|geom3} new geometry\n * @alias module:modeling/hulls.hull\n *\n * @example\n * let myshape = hull(rectangle({center: [-5,-5]}), ellipse({center: [5,5]}))\n *\n * @example\n * +-------+           +-------+\n * |       |           |        \\\n * |   A   |           |         \\\n * |       |           |          \\\n * +-------+           +           \\\n *                  =   \\           \\\n *       +-------+       \\           +\n *       |       |        \\          |\n *       |   B   |         \\         |\n *       |       |          \\        |\n *       +-------+           +-------+\n */\nconst hull = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  if (!areAllShapesTheSameType(geometries)) {\n    throw new Error('only hulls of the same type are supported')\n  }\n\n  const geometry = geometries[0]\n  if (path2.isA(geometry)) return hullPath2(geometries)\n  if (geom2.isA(geometry)) return hullGeom2(geometries)\n  if (geom3.isA(geometry)) return hullGeom3(geometries)\n\n  // FIXME should this throw an error for unknown geometries?\n  return geometry\n}\n\nmodule.exports = hull\n","const flatten = require('../../utils/flatten')\n\nconst union = require('../booleans/union')\n\nconst hull = require('./hull')\n\n/**\n * Create a chain of hulled geometries from the given geometries.\n * Essentially hull A+B, B+C, C+D, etc., then union the results.\n * The given geometries should be of the same type, either geom2 or geom3 or path2.\n *\n * @param {...Objects} geometries - list of geometries from which to create a hull\n * @returns {geom2|geom3} new geometry\n * @alias module:modeling/hulls.hullChain\n *\n * @example\n * let newshape = hullChain(rectangle({center: [-5,-5]}), circle({center: [0,0]}), rectangle({center: [5,5]}))\n *\n * @example\n * +-------+   +-------+     +-------+   +------+\n * |       |   |       |     |        \\ /       |\n * |   A   |   |   C   |     |         |        |\n * |       |   |       |     |                  |\n * +-------+   +-------+     +                  +\n *                       =   \\                 /\n *       +-------+            \\               /\n *       |       |             \\             /\n *       |   B   |              \\           /\n *       |       |               \\         /\n *       +-------+                +-------+\n */\nconst hullChain = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length < 2) throw new Error('wrong number of arguments')\n\n  const hulls = []\n  for (let i = 1; i < geometries.length; i++) {\n    hulls.push(hull(geometries[i - 1], geometries[i]))\n  }\n  return union(hulls)\n}\n\nmodule.exports = hullChain\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\n\nconst hullPoints2 = require('./hullPoints2')\nconst toUniquePoints = require('./toUniquePoints')\n\n/*\n * Create a convex hull of the given geom2 geometries.\n * @param {...geometries} geometries - list of geom2 geometries\n * @returns {geom2} new geometry\n */\nconst hullGeom2 = (...geometries) => {\n  geometries = flatten(geometries)\n\n  // extract the unique points from the geometries\n  const unique = toUniquePoints(geometries)\n\n  const hullPoints = hullPoints2(unique)\n\n  // NOTE: more than three points are required to create a new geometry\n  if (hullPoints.length < 3) return geom2.create()\n\n  // assemble a new geometry from the list of points\n  return geom2.fromPoints(hullPoints)\n}\n\nmodule.exports = hullGeom2\n","const flatten = require('../../utils/flatten')\n\nconst geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst quickhull = require('./quickhull')\nconst toUniquePoints = require('./toUniquePoints')\n\n/*\n * Create a convex hull of the given geometries (geom3).\n * @param {...geometries} geometries - list of geom3 geometries\n * @returns {geom3} new geometry\n */\nconst hullGeom3 = (...geometries) => {\n  geometries = flatten(geometries)\n\n  if (geometries.length === 1) return geometries[0]\n\n  // extract the unique vertices from the geometries\n  const unique = toUniquePoints(geometries)\n\n  const faces = quickhull(unique, { skipTriangulation: true })\n\n  const polygons = faces.map((face) => {\n    const vertices = face.map((index) => unique[index])\n    return poly3.create(vertices)\n  })\n\n  return geom3.create(polygons)\n}\n\nmodule.exports = hullGeom3\n","const flatten = require('../../utils/flatten')\n\nconst path2 = require('../../geometries/path2')\n\nconst hullPoints2 = require('./hullPoints2')\nconst toUniquePoints = require('./toUniquePoints')\n\n/*\n * Create a convex hull of the given geometries (path2).\n * @param {...geometries} geometries - list of path2 geometries\n * @returns {path2} new geometry\n */\nconst hullPath2 = (...geometries) => {\n  geometries = flatten(geometries)\n\n  // extract the unique points from the geometries\n  const unique = toUniquePoints(geometries)\n\n  const hullPoints = hullPoints2(unique)\n\n  // assemble a new geometry from the list of points\n  return path2.fromPoints({ closed: true }, hullPoints)\n}\n\nmodule.exports = hullPath2\n","const vec2 = require('../../maths/vec2')\n\n/*\n * Create a convex hull of the given set of points, where each point is an array of [x,y].\n * Uses https://en.wikipedia.org/wiki/Graham_scan\n * @param {Array} uniquePoints - list of UNIQUE points from which to create a hull\n * @returns {Array} a list of points that form the hull\n */\nconst hullPoints2 = (uniquePoints) => {\n  // find min point\n  let min = vec2.fromValues(Infinity, Infinity)\n  uniquePoints.forEach((point) => {\n    if (point[1] < min[1] || (point[1] === min[1] && point[0] < min[0])) {\n      min = point\n    }\n  })\n\n  // gather information for sorting by polar coordinates (point, angle, distSq)\n  const points = []\n  uniquePoints.forEach((point) => {\n    // use faster fakeAtan2 instead of Math.atan2\n    const angle = fakeAtan2(point[1] - min[1], point[0] - min[0])\n    const distSq = vec2.squaredDistance(point, min)\n    points.push({ point, angle, distSq })\n  })\n\n  // sort by polar coordinates\n  points.sort((pt1, pt2) => pt1.angle < pt2.angle ? -1 : pt1.angle > pt2.angle ? 1 :\n    pt1.distSq < pt2.distSq ? -1 : pt1.distSq > pt2.distSq ? 1 : 0)\n\n  const stack = [] // start with empty stack\n  points.forEach((point) => {\n    let cnt = stack.length\n    while (cnt > 1 && ccw(stack[cnt - 2], stack[cnt - 1], point.point) <= Number.EPSILON) {\n      stack.pop() // get rid of colinear and interior (clockwise) points\n      cnt = stack.length\n    }\n    stack.push(point.point)\n  })\n\n  return stack\n}\n\n// returns: < 0 clockwise, 0 colinear, > 0 counter-clockwise\nconst ccw = (v1, v2, v3) => (v2[0] - v1[0]) * (v3[1] - v1[1]) - (v2[1] - v1[1]) * (v3[0] - v1[0])\n\n// Returned \"angle\" is really 1/tan (inverse of slope) made negative to increase with angle.\n// This function is strictly for sorting in this algorithm.\nconst fakeAtan2 = (y, x) => {\n  // The \"if\" is a special case for when the minimum vector found in loop above is present.\n  // We need to ensure that it sorts as the minimum point. Otherwise, this becomes NaN.\n  if (y === 0 && x === 0) {\n    return -Infinity\n  } else {\n    return -x / y\n  }\n}\n\nmodule.exports = hullPoints2\n","/**\n * All shapes (primitives or the results of operations) can be passed to hull functions\n * to determine the convex hull of all points.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/hulls\n * @example\n * const { hull, hullChain } = require('@jscad/modeling').hulls\n */\nmodule.exports = {\n  hull: require('./hull'),\n  hullChain: require('./hullChain')\n}\n","const add = require('../../../maths/vec3/add')\nconst copy = require('../../../maths/vec3/copy')\nconst cross = require('../../../maths/vec3/cross')\nconst dot = require('../../../maths/vec3/dot')\nconst length = require('../../../maths/vec3/length')\nconst normalize = require('../../../maths/vec3/normalize')\nconst scale = require('../../../maths/vec3/scale')\nconst subtract = require('../../../maths/vec3/subtract')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst HalfEdge = require('./HalfEdge')\n\nconst VISIBLE = 0\nconst NON_CONVEX = 1\nconst DELETED = 2\n\nclass Face {\n  constructor () {\n    this.normal = []\n    this.centroid = []\n    // signed distance from face to the origin\n    this.offset = 0\n    // pointer to the a vertex in a double linked list this face can see\n    this.outside = null\n    this.mark = VISIBLE\n    this.edge = null\n    this.nVertices = 0\n  }\n\n  getEdge (i) {\n    if (typeof i !== 'number') {\n      throw Error('requires a number')\n    }\n    let it = this.edge\n    while (i > 0) {\n      it = it.next\n      i -= 1\n    }\n    while (i < 0) {\n      it = it.prev\n      i += 1\n    }\n    return it\n  }\n\n  computeNormal () {\n    const e0 = this.edge\n    const e1 = e0.next\n    let e2 = e1.next\n    const v2 = subtract([], e1.head().point, e0.head().point)\n    const t = []\n    const v1 = []\n\n    this.nVertices = 2\n    this.normal = [0, 0, 0]\n    while (e2 !== e0) {\n      copy(v1, v2)\n      subtract(v2, e2.head().point, e0.head().point)\n      add(this.normal, this.normal, cross(t, v1, v2))\n      e2 = e2.next\n      this.nVertices += 1\n    }\n    this.area = length(this.normal)\n    // normalize the vector, since we've already calculated the area\n    // it's cheaper to scale the vector using this quantity instead of\n    // doing the same operation again\n    this.normal = scale(this.normal, this.normal, 1 / this.area)\n  }\n\n  computeNormalMinArea (minArea) {\n    this.computeNormal()\n    if (this.area < minArea) {\n      // compute the normal without the longest edge\n      let maxEdge\n      let maxSquaredLength = 0\n      let edge = this.edge\n\n      // find the longest edge (in length) in the chain of edges\n      do {\n        const lengthSquared = edge.lengthSquared()\n        if (lengthSquared > maxSquaredLength) {\n          maxEdge = edge\n          maxSquaredLength = lengthSquared\n        }\n        edge = edge.next\n      } while (edge !== this.edge)\n\n      const p1 = maxEdge.tail().point\n      const p2 = maxEdge.head().point\n      const maxVector = subtract([], p2, p1)\n      const maxLength = Math.sqrt(maxSquaredLength)\n      // maxVector is normalized after this operation\n      scale(maxVector, maxVector, 1 / maxLength)\n      // compute the projection of maxVector over this face normal\n      const maxProjection = dot(this.normal, maxVector)\n      // subtract the quantity maxEdge adds on the normal\n      scale(maxVector, maxVector, -maxProjection)\n      add(this.normal, this.normal, maxVector)\n      // renormalize `this.normal`\n      normalize(this.normal, this.normal)\n    }\n  }\n\n  computeCentroid () {\n    this.centroid = [0, 0, 0]\n    let edge = this.edge\n    do {\n      add(this.centroid, this.centroid, edge.head().point)\n      edge = edge.next\n    } while (edge !== this.edge)\n    scale(this.centroid, this.centroid, 1 / this.nVertices)\n  }\n\n  computeNormalAndCentroid (minArea) {\n    if (typeof minArea !== 'undefined') {\n      this.computeNormalMinArea(minArea)\n    } else {\n      this.computeNormal()\n    }\n    this.computeCentroid()\n    this.offset = dot(this.normal, this.centroid)\n  }\n\n  distanceToPlane (point) {\n    return dot(this.normal, point) - this.offset\n  }\n\n  /**\n   * @private\n   *\n   * Connects two edges assuming that prev.head().point === next.tail().point\n   *\n   * @param {HalfEdge} prev\n   * @param {HalfEdge} next\n   */\n  connectHalfEdges (prev, next) {\n    let discardedFace\n    if (prev.opposite.face === next.opposite.face) {\n      // `prev` is remove a redundant edge\n      const oppositeFace = next.opposite.face\n      let oppositeEdge\n      if (prev === this.edge) {\n        this.edge = next\n      }\n      if (oppositeFace.nVertices === 3) {\n        // case:\n        // remove the face on the right\n        //\n        //       /|\\\n        //      / | \\ the face on the right\n        //     /  |  \\ --> opposite edge\n        //    / a |   \\\n        //   *----*----*\n        //  /     b  |  \\\n        //           ▾\n        //      redundant edge\n        //\n        // Note: the opposite edge is actually in the face to the right\n        // of the face to be destroyed\n        oppositeEdge = next.opposite.prev.opposite\n        oppositeFace.mark = DELETED\n        discardedFace = oppositeFace\n      } else {\n        // case:\n        //          t\n        //        *----\n        //       /| <- right face's redundant edge\n        //      / | opposite edge\n        //     /  |  ▴   /\n        //    / a |  |  /\n        //   *----*----*\n        //  /     b  |  \\\n        //           ▾\n        //      redundant edge\n        oppositeEdge = next.opposite.next\n        // make sure that the link `oppositeFace.edge` points correctly even\n        // after the right face redundant edge is removed\n        if (oppositeFace.edge === oppositeEdge.prev) {\n          oppositeFace.edge = oppositeEdge\n        }\n\n        //       /|   /\n        //      / | t/opposite edge\n        //     /  | / ▴  /\n        //    / a |/  | /\n        //   *----*----*\n        //  /     b     \\\n        oppositeEdge.prev = oppositeEdge.prev.prev\n        oppositeEdge.prev.next = oppositeEdge\n      }\n      //       /|\n      //      / |\n      //     /  |\n      //    / a |\n      //   *----*----*\n      //  /     b  ▴  \\\n      //           |\n      //     redundant edge\n      next.prev = prev.prev\n      next.prev.next = next\n\n      //       / \\  \\\n      //      /   \\->\\\n      //     /     \\<-\\ opposite edge\n      //    / a     \\  \\\n      //   *----*----*\n      //  /     b  ^  \\\n      next.setOpposite(oppositeEdge)\n\n      oppositeFace.computeNormalAndCentroid()\n    } else {\n      // trivial case\n      //        *\n      //       /|\\\n      //      / | \\\n      //     /  |--> next\n      //    / a |   \\\n      //   *----*----*\n      //    \\ b |   /\n      //     \\  |--> prev\n      //      \\ | /\n      //       \\|/\n      //        *\n      prev.next = next\n      next.prev = prev\n    }\n    return discardedFace\n  }\n\n  mergeAdjacentFaces (adjacentEdge, discardedFaces) {\n    const oppositeEdge = adjacentEdge.opposite\n    const oppositeFace = oppositeEdge.face\n\n    discardedFaces.push(oppositeFace)\n    oppositeFace.mark = DELETED\n\n    // find the chain of edges whose opposite face is `oppositeFace`\n    //\n    //                ===>\n    //      \\         face         /\n    //       * ---- * ---- * ---- *\n    //      /     opposite face    \\\n    //                <===\n    //\n    let adjacentEdgePrev = adjacentEdge.prev\n    let adjacentEdgeNext = adjacentEdge.next\n    let oppositeEdgePrev = oppositeEdge.prev\n    let oppositeEdgeNext = oppositeEdge.next\n\n    // left edge\n    while (adjacentEdgePrev.opposite.face === oppositeFace) {\n      adjacentEdgePrev = adjacentEdgePrev.prev\n      oppositeEdgeNext = oppositeEdgeNext.next\n    }\n    // right edge\n    while (adjacentEdgeNext.opposite.face === oppositeFace) {\n      adjacentEdgeNext = adjacentEdgeNext.next\n      oppositeEdgePrev = oppositeEdgePrev.prev\n    }\n    // adjacentEdgePrev  \\         face         / adjacentEdgeNext\n    //                    * ---- * ---- * ---- *\n    // oppositeEdgeNext  /     opposite face    \\ oppositeEdgePrev\n\n    // fix the face reference of all the opposite edges that are not part of\n    // the edges whose opposite face is not `face` i.e. all the edges that\n    // `face` and `oppositeFace` do not have in common\n    let edge\n    for (edge = oppositeEdgeNext; edge !== oppositeEdgePrev.next; edge = edge.next) {\n      edge.face = this\n    }\n\n    // make sure that `face.edge` is not one of the edges to be destroyed\n    // Note: it's important for it to be a `next` edge since `prev` edges\n    // might be destroyed on `connectHalfEdges`\n    this.edge = adjacentEdgeNext\n\n    // connect the extremes\n    // Note: it might be possible that after connecting the edges a triangular\n    // face might be redundant\n    let discardedFace\n    discardedFace = this.connectHalfEdges(oppositeEdgePrev, adjacentEdgeNext)\n    if (discardedFace) {\n      discardedFaces.push(discardedFace)\n    }\n    discardedFace = this.connectHalfEdges(adjacentEdgePrev, oppositeEdgeNext)\n    if (discardedFace) {\n      discardedFaces.push(discardedFace)\n    }\n\n    this.computeNormalAndCentroid()\n    // TODO: additional consistency checks\n    return discardedFaces\n  }\n\n  collectIndices () {\n    const indices = []\n    let edge = this.edge\n    do {\n      indices.push(edge.head().index)\n      edge = edge.next\n    } while (edge !== this.edge)\n    return indices\n  }\n\n  static createTriangle (v0, v1, v2, minArea = 0) {\n    const face = new Face()\n    const e0 = new HalfEdge(v0, face)\n    const e1 = new HalfEdge(v1, face)\n    const e2 = new HalfEdge(v2, face)\n\n    // join edges\n    e0.next = e2.prev = e1\n    e1.next = e0.prev = e2\n    e2.next = e1.prev = e0\n\n    // main half edge reference\n    face.edge = e0\n    face.computeNormalAndCentroid(minArea)\n    return face\n  }\n}\n\nmodule.exports = {\n  VISIBLE,\n  NON_CONVEX,\n  DELETED,\n  Face\n}\n","const distance = require('../../../maths/vec3/distance')\nconst squaredDistance = require('../../../maths/vec3/squaredDistance')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nclass HalfEdge {\n  constructor (vertex, face) {\n    this.vertex = vertex\n    this.face = face\n    this.next = null\n    this.prev = null\n    this.opposite = null\n  }\n\n  head () {\n    return this.vertex\n  }\n\n  tail () {\n    return this.prev\n      ? this.prev.vertex\n      : null\n  }\n\n  length () {\n    if (this.tail()) {\n      return distance(\n        this.tail().point,\n        this.head().point\n      )\n    }\n    return -1\n  }\n\n  lengthSquared () {\n    if (this.tail()) {\n      return squaredDistance(\n        this.tail().point,\n        this.head().point\n      )\n    }\n    return -1\n  }\n\n  setOpposite (edge) {\n    this.opposite = edge\n    edge.opposite = this\n  }\n}\n\nmodule.exports = HalfEdge\n","const dot = require('../../../maths/vec3/dot')\n\nconst pointLineDistance = require('./point-line-distance')\nconst getPlaneNormal = require('./get-plane-normal')\n\nconst VertexList = require('./VertexList')\nconst Vertex = require('./Vertex')\nconst { Face, VISIBLE, NON_CONVEX, DELETED } = require('./Face')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\n// merge types\n// non convex with respect to the large face\nconst MERGE_NON_CONVEX_WRT_LARGER_FACE = 1\nconst MERGE_NON_CONVEX = 2\n\nclass QuickHull {\n  constructor (points) {\n    if (!Array.isArray(points)) {\n      throw TypeError('input is not a valid array')\n    }\n    if (points.length < 4) {\n      throw Error('cannot build a simplex out of <4 points')\n    }\n\n    this.tolerance = -1\n\n    // buffers\n    this.nFaces = 0\n    this.nPoints = points.length\n\n    this.faces = []\n    this.newFaces = []\n    // helpers\n    //\n    // let `a`, `b` be `Face` instances\n    // let `v` be points wrapped as instance of `Vertex`\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n    this.claimed = new VertexList()\n    this.unclaimed = new VertexList()\n\n    // vertices of the hull(internal representation of points)\n    this.vertices = []\n    for (let i = 0; i < points.length; i += 1) {\n      this.vertices.push(new Vertex(points[i], i))\n    }\n    this.discardedFaces = []\n    this.vertexPointIndices = []\n  }\n\n  addVertexToFace (vertex, face) {\n    vertex.face = face\n    if (!face.outside) {\n      this.claimed.add(vertex)\n    } else {\n      this.claimed.insertBefore(face.outside, vertex)\n    }\n    face.outside = vertex\n  }\n\n  /**\n   * Removes `vertex` for the `claimed` list of vertices, it also makes sure\n   * that the link from `face` to the first vertex it sees in `claimed` is\n   * linked correctly after the removal\n   *\n   * @param {Vertex} vertex\n   * @param {Face} face\n   */\n  removeVertexFromFace (vertex, face) {\n    if (vertex === face.outside) {\n      // fix face.outside link\n      if (vertex.next && vertex.next.face === face) {\n        // face has at least 2 outside vertices, move the `outside` reference\n        face.outside = vertex.next\n      } else {\n        // vertex was the only outside vertex that face had\n        face.outside = null\n      }\n    }\n    this.claimed.remove(vertex)\n  }\n\n  /**\n   * Removes all the visible vertices that `face` is able to see which are\n   * stored in the `claimed` vertext list\n   *\n   * @param {Face} face\n   * @return {Vertex|undefined} If face had visible vertices returns\n   * `face.outside`, otherwise undefined\n   */\n  removeAllVerticesFromFace (face) {\n    if (face.outside) {\n      // pointer to the last vertex of this face\n      // [..., outside, ..., end, outside, ...]\n      //          |           |      |\n      //          a           a      b\n      let end = face.outside\n      while (end.next && end.next.face === face) {\n        end = end.next\n      }\n      this.claimed.removeChain(face.outside, end)\n      //                            b\n      //                       [ outside, ...]\n      //                            |  removes this link\n      //     [ outside, ..., end ] -┘\n      //          |           |\n      //          a           a\n      end.next = null\n      return face.outside\n    }\n  }\n\n  /**\n   * Removes all the visible vertices that `face` is able to see, additionally\n   * checking the following:\n   *\n   * If `absorbingFace` doesn't exist then all the removed vertices will be\n   * added to the `unclaimed` vertex list\n   *\n   * If `absorbingFace` exists then this method will assign all the vertices of\n   * `face` that can see `absorbingFace`, if a vertex cannot see `absorbingFace`\n   * it's added to the `unclaimed` vertex list\n   *\n   * @param {Face} face\n   * @param {Face} [absorbingFace]\n   */\n  deleteFaceVertices (face, absorbingFace) {\n    const faceVertices = this.removeAllVerticesFromFace(face)\n    if (faceVertices) {\n      if (!absorbingFace) {\n        // mark the vertices to be reassigned to some other face\n        this.unclaimed.addAll(faceVertices)\n      } else {\n        // if there's an absorbing face try to assign as many vertices\n        // as possible to it\n\n        // the reference `vertex.next` might be destroyed on\n        // `this.addVertexToFace` (see VertexList#add), nextVertex is a\n        // reference to it\n        let nextVertex\n        for (let vertex = faceVertices; vertex; vertex = nextVertex) {\n          nextVertex = vertex.next\n          const distance = absorbingFace.distanceToPlane(vertex.point)\n\n          // check if `vertex` is able to see `absorbingFace`\n          if (distance > this.tolerance) {\n            this.addVertexToFace(vertex, absorbingFace)\n          } else {\n            this.unclaimed.add(vertex)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Reassigns as many vertices as possible from the unclaimed list to the new\n   * faces\n   *\n   * @param {Faces[]} newFaces\n   */\n  resolveUnclaimedPoints (newFaces) {\n    // cache next vertex so that if `vertex.next` is destroyed it's still\n    // recoverable\n    let vertexNext = this.unclaimed.first()\n    for (let vertex = vertexNext; vertex; vertex = vertexNext) {\n      vertexNext = vertex.next\n      let maxDistance = this.tolerance\n      let maxFace\n      for (let i = 0; i < newFaces.length; i += 1) {\n        const face = newFaces[i]\n        if (face.mark === VISIBLE) {\n          const dist = face.distanceToPlane(vertex.point)\n          if (dist > maxDistance) {\n            maxDistance = dist\n            maxFace = face\n          }\n          if (maxDistance > 1000 * this.tolerance) {\n            break\n          }\n        }\n      }\n\n      if (maxFace) {\n        this.addVertexToFace(vertex, maxFace)\n      }\n    }\n  }\n\n  /**\n   * Computes the extremes of a tetrahedron which will be the initial hull\n   *\n   * @return {number[]} The min/max vertices in the x,y,z directions\n   */\n  computeExtremes () {\n    const min = []\n    const max = []\n\n    // min vertex on the x,y,z directions\n    const minVertices = []\n    // max vertex on the x,y,z directions\n    const maxVertices = []\n\n    let i, j\n\n    // initially assume that the first vertex is the min/max\n    for (i = 0; i < 3; i += 1) {\n      minVertices[i] = maxVertices[i] = this.vertices[0]\n    }\n    // copy the coordinates of the first vertex to min/max\n    for (i = 0; i < 3; i += 1) {\n      min[i] = max[i] = this.vertices[0].point[i]\n    }\n\n    // compute the min/max vertex on all 6 directions\n    for (i = 1; i < this.vertices.length; i += 1) {\n      const vertex = this.vertices[i]\n      const point = vertex.point\n      // update the min coordinates\n      for (j = 0; j < 3; j += 1) {\n        if (point[j] < min[j]) {\n          min[j] = point[j]\n          minVertices[j] = vertex\n        }\n      }\n      // update the max coordinates\n      for (j = 0; j < 3; j += 1) {\n        if (point[j] > max[j]) {\n          max[j] = point[j]\n          maxVertices[j] = vertex\n        }\n      }\n    }\n\n    // compute epsilon\n    this.tolerance = 3 * Number.EPSILON * (\n      Math.max(Math.abs(min[0]), Math.abs(max[0])) +\n      Math.max(Math.abs(min[1]), Math.abs(max[1])) +\n      Math.max(Math.abs(min[2]), Math.abs(max[2]))\n    )\n    return [minVertices, maxVertices]\n  }\n\n  /**\n   * Compues the initial tetrahedron assigning to its faces all the points that\n   * are candidates to form part of the hull\n   */\n  createInitialSimplex () {\n    const vertices = this.vertices\n    const [min, max] = this.computeExtremes()\n    let v2, v3\n    let i, j\n\n    // Find the two vertices with the greatest 1d separation\n    // (max.x - min.x)\n    // (max.y - min.y)\n    // (max.z - min.z)\n    let maxDistance = 0\n    let indexMax = 0\n    for (i = 0; i < 3; i += 1) {\n      const distance = max[i].point[i] - min[i].point[i]\n      if (distance > maxDistance) {\n        maxDistance = distance\n        indexMax = i\n      }\n    }\n    const v0 = min[indexMax]\n    const v1 = max[indexMax]\n\n    // the next vertex is the one farthest to the line formed by `v0` and `v1`\n    maxDistance = 0\n    for (i = 0; i < this.vertices.length; i += 1) {\n      const vertex = this.vertices[i]\n      if (vertex !== v0 && vertex !== v1) {\n        const distance = pointLineDistance(\n          vertex.point, v0.point, v1.point\n        )\n        if (distance > maxDistance) {\n          maxDistance = distance\n          v2 = vertex\n        }\n      }\n    }\n\n    // the next vertes is the one farthest to the plane `v0`, `v1`, `v2`\n    // normalize((v2 - v1) x (v0 - v1))\n    const normal = getPlaneNormal([], v0.point, v1.point, v2.point)\n    // distance from the origin to the plane\n    const distPO = dot(v0.point, normal)\n    maxDistance = -1\n    for (i = 0; i < this.vertices.length; i += 1) {\n      const vertex = this.vertices[i]\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n        const distance = Math.abs(dot(normal, vertex.point) - distPO)\n        if (distance > maxDistance) {\n          maxDistance = distance\n          v3 = vertex\n        }\n      }\n    }\n\n    // initial simplex\n    // Taken from http://everything2.com/title/How+to+paint+a+tetrahedron\n    //\n    //                              v2\n    //                             ,|,\n    //                           ,7``\\'VA,\n    //                         ,7`   |, `'VA,\n    //                       ,7`     `\\    `'VA,\n    //                     ,7`        |,      `'VA,\n    //                   ,7`          `\\         `'VA,\n    //                 ,7`             |,           `'VA,\n    //               ,7`               `\\       ,..ooOOTK` v3\n    //             ,7`                  |,.ooOOT''`    AV\n    //           ,7`            ,..ooOOT`\\`           /7\n    //         ,7`      ,..ooOOT''`      |,          AV\n    //        ,T,..ooOOT''`              `\\         /7\n    //     v0 `'TTs.,                     |,       AV\n    //            `'TTs.,                 `\\      /7\n    //                 `'TTs.,             |,    AV\n    //                      `'TTs.,        `\\   /7\n    //                           `'TTs.,    |, AV\n    //                                `'TTs.,\\/7\n    //                                     `'T`\n    //                                       v1\n    //\n    const faces = []\n    if (dot(v3.point, normal) - distPO < 0) {\n      // the face is not able to see the point so `planeNormal`\n      // is pointing outside the tetrahedron\n      faces.push(\n        Face.createTriangle(v0, v1, v2),\n        Face.createTriangle(v3, v1, v0),\n        Face.createTriangle(v3, v2, v1),\n        Face.createTriangle(v3, v0, v2)\n      )\n\n      // set the opposite edge\n      for (i = 0; i < 3; i += 1) {\n        const j = (i + 1) % 3\n        // join face[i] i > 0, with the first face\n        faces[i + 1].getEdge(2).setOpposite(faces[0].getEdge(j))\n        // join face[i] with face[i + 1], 1 <= i <= 3\n        faces[i + 1].getEdge(1).setOpposite(faces[j + 1].getEdge(0))\n      }\n    } else {\n      // the face is able to see the point so `planeNormal`\n      // is pointing inside the tetrahedron\n      faces.push(\n        Face.createTriangle(v0, v2, v1),\n        Face.createTriangle(v3, v0, v1),\n        Face.createTriangle(v3, v1, v2),\n        Face.createTriangle(v3, v2, v0)\n      )\n\n      // set the opposite edge\n      for (i = 0; i < 3; i += 1) {\n        const j = (i + 1) % 3\n        // join face[i] i > 0, with the first face\n        faces[i + 1].getEdge(2).setOpposite(faces[0].getEdge((3 - i) % 3))\n        // join face[i] with face[i + 1]\n        faces[i + 1].getEdge(0).setOpposite(faces[j + 1].getEdge(1))\n      }\n    }\n\n    // the initial hull is the tetrahedron\n    for (i = 0; i < 4; i += 1) {\n      this.faces.push(faces[i])\n    }\n\n    // initial assignment of vertices to the faces of the tetrahedron\n    for (i = 0; i < vertices.length; i += 1) {\n      const vertex = vertices[i]\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3) {\n        maxDistance = this.tolerance\n        let maxFace\n        for (j = 0; j < 4; j += 1) {\n          const distance = faces[j].distanceToPlane(vertex.point)\n          if (distance > maxDistance) {\n            maxDistance = distance\n            maxFace = faces[j]\n          }\n        }\n\n        if (maxFace) {\n          this.addVertexToFace(vertex, maxFace)\n        }\n      }\n    }\n  }\n\n  reindexFaceAndVertices () {\n    // remove inactive faces\n    const activeFaces = []\n    for (let i = 0; i < this.faces.length; i += 1) {\n      const face = this.faces[i]\n      if (face.mark === VISIBLE) {\n        activeFaces.push(face)\n      }\n    }\n    this.faces = activeFaces\n  }\n\n  collectFaces (skipTriangulation) {\n    const faceIndices = []\n    for (let i = 0; i < this.faces.length; i += 1) {\n      if (this.faces[i].mark !== VISIBLE) {\n        throw Error('attempt to include a destroyed face in the hull')\n      }\n      const indices = this.faces[i].collectIndices()\n      if (skipTriangulation) {\n        faceIndices.push(indices)\n      } else {\n        for (let j = 0; j < indices.length - 2; j += 1) {\n          faceIndices.push(\n            [indices[0], indices[j + 1], indices[j + 2]]\n          )\n        }\n      }\n    }\n    return faceIndices\n  }\n\n  /**\n   * Finds the next vertex to make faces with the current hull\n   *\n   * - let `face` be the first face existing in the `claimed` vertex list\n   *  - if `face` doesn't exist then return since there're no vertices left\n   *  - otherwise for each `vertex` that face sees find the one furthest away\n   *  from `face`\n   *\n   * @return {Vertex|undefined} Returns undefined when there're no more\n   * visible vertices\n   */\n  nextVertexToAdd () {\n    if (!this.claimed.isEmpty()) {\n      let eyeVertex, vertex\n      let maxDistance = 0\n      const eyeFace = this.claimed.first().face\n      for (vertex = eyeFace.outside; vertex && vertex.face === eyeFace; vertex = vertex.next) {\n        const distance = eyeFace.distanceToPlane(vertex.point)\n        if (distance > maxDistance) {\n          maxDistance = distance\n          eyeVertex = vertex\n        }\n      }\n      return eyeVertex\n    }\n  }\n\n  /**\n   * Computes a chain of half edges in ccw order called the `horizon`, for an\n   * edge to be part of the horizon it must join a face that can see\n   * `eyePoint` and a face that cannot see `eyePoint`\n   *\n   * @param {number[]} eyePoint - The coordinates of a point\n   * @param {HalfEdge} crossEdge - The edge used to jump to the current `face`\n   * @param {Face} face - The current face being tested\n   * @param {HalfEdge[]} horizon - The edges that form part of the horizon in\n   * ccw order\n   */\n  computeHorizon (eyePoint, crossEdge, face, horizon) {\n    // moves face's vertices to the `unclaimed` vertex list\n    this.deleteFaceVertices(face)\n\n    face.mark = DELETED\n\n    let edge\n    if (!crossEdge) {\n      edge = crossEdge = face.getEdge(0)\n    } else {\n      // start from the next edge since `crossEdge` was already analyzed\n      // (actually `crossEdge.opposite` was the face who called this method\n      // recursively)\n      edge = crossEdge.next\n    }\n\n    // All the faces that are able to see `eyeVertex` are defined as follows\n    //\n    //       v    /\n    //           / <== visible face\n    //          /\n    //         |\n    //         | <== not visible face\n    //\n    //  dot(v, visible face normal) - visible face offset > this.tolerance\n    //\n    do {\n      const oppositeEdge = edge.opposite\n      const oppositeFace = oppositeEdge.face\n      if (oppositeFace.mark === VISIBLE) {\n        if (oppositeFace.distanceToPlane(eyePoint) > this.tolerance) {\n          this.computeHorizon(eyePoint, oppositeEdge, oppositeFace, horizon)\n        } else {\n          horizon.push(edge)\n        }\n      }\n      edge = edge.next\n    } while (edge !== crossEdge)\n  }\n\n  /**\n   * Creates a face with the points `eyeVertex.point`, `horizonEdge.tail` and\n   * `horizonEdge.tail` in ccw order\n   *\n   * @param {Vertex} eyeVertex\n   * @param {HalfEdge} horizonEdge\n   * @return {HalfEdge} The half edge whose vertex is the eyeVertex\n   */\n  addAdjoiningFace (eyeVertex, horizonEdge) {\n    // all the half edges are created in ccw order thus the face is always\n    // pointing outside the hull\n    // edges:\n    //\n    //                  eyeVertex.point\n    //                       / \\\n    //                      /   \\\n    //                  1  /     \\  0\n    //                    /       \\\n    //                   /         \\\n    //                  /           \\\n    //          horizon.tail --- horizon.head\n    //                        2\n    //\n    const face = Face.createTriangle(\n      eyeVertex,\n      horizonEdge.tail(),\n      horizonEdge.head()\n    )\n    this.faces.push(face)\n    // join face.getEdge(-1) with the horizon's opposite edge\n    // face.getEdge(-1) = face.getEdge(2)\n    face.getEdge(-1).setOpposite(horizonEdge.opposite)\n    return face.getEdge(0)\n  }\n\n  /**\n   * Adds horizon.length faces to the hull, each face will be 'linked' with the\n   * horizon opposite face and the face on the left/right\n   *\n   * @param {Vertex} eyeVertex\n   * @param {HalfEdge[]} horizon - A chain of half edges in ccw order\n   */\n  addNewFaces (eyeVertex, horizon) {\n    this.newFaces = []\n    let firstSideEdge, previousSideEdge\n    for (let i = 0; i < horizon.length; i += 1) {\n      const horizonEdge = horizon[i]\n      // returns the right side edge\n      const sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge)\n      if (!firstSideEdge) {\n        firstSideEdge = sideEdge\n      } else {\n        // joins face.getEdge(1) with previousFace.getEdge(0)\n        sideEdge.next.setOpposite(previousSideEdge)\n      }\n      this.newFaces.push(sideEdge.face)\n      previousSideEdge = sideEdge\n    }\n    firstSideEdge.next.setOpposite(previousSideEdge)\n  }\n\n  /**\n   * Computes the distance from `edge` opposite face's centroid to\n   * `edge.face`\n   *\n   * @param {HalfEdge} edge\n   * @return {number}\n   * - A positive number when the centroid of the opposite face is above the\n   *   face i.e. when the faces are concave\n   * - A negative number when the centroid of the opposite face is below the\n   *   face i.e. when the faces are convex\n   */\n  oppositeFaceDistance (edge) {\n    return edge.face.distanceToPlane(edge.opposite.face.centroid)\n  }\n\n  /**\n   * Merges a face with none/any/all its neighbors according to the strategy\n   * used\n   *\n   * if `mergeType` is MERGE_NON_CONVEX_WRT_LARGER_FACE then the merge will be\n   * decided based on the face with the larger area, the centroid of the face\n   * with the smaller area will be checked against the one with the larger area\n   * to see if it's in the merge range [tolerance, -tolerance] i.e.\n   *\n   *    dot(centroid smaller face, larger face normal) - larger face offset > -tolerance\n   *\n   * Note that the first check (with +tolerance) was done on `computeHorizon`\n   *\n   * If the above is not true then the check is done with respect to the smaller\n   * face i.e.\n   *\n   *    dot(centroid larger face, smaller face normal) - smaller face offset > -tolerance\n   *\n   * If true then it means that two faces are non convex (concave), even if the\n   * dot(...) - offset value is > 0 (that's the point of doing the merge in the\n   * first place)\n   *\n   * If two faces are concave then the check must also be done on the other face\n   * but this is done in another merge pass, for this to happen the face is\n   * marked in a temporal NON_CONVEX state\n   *\n   * if `mergeType` is MERGE_NON_CONVEX then two faces will be merged only if\n   * they pass the following conditions\n   *\n   *    dot(centroid smaller face, larger face normal) - larger face offset > -tolerance\n   *    dot(centroid larger face, smaller face normal) - smaller face offset > -tolerance\n   *\n   * @param {Face} face\n   * @param {number} mergeType - Either MERGE_NON_CONVEX_WRT_LARGER_FACE or\n   * MERGE_NON_CONVEX\n   */\n  doAdjacentMerge (face, mergeType) {\n    let edge = face.edge\n    let convex = true\n    let it = 0\n    do {\n      if (it >= face.nVertices) {\n        throw Error('merge recursion limit exceeded')\n      }\n      const oppositeFace = edge.opposite.face\n      let merge = false\n\n      // Important notes about the algorithm to merge faces\n      //\n      // - Given a vertex `eyeVertex` that will be added to the hull\n      //   all the faces that cannot see `eyeVertex` are defined as follows\n      //\n      //      dot(v, not visible face normal) - not visible offset < tolerance\n      //\n      // - Two faces can be merged when the centroid of one of these faces\n      // projected to the normal of the other face minus the other face offset\n      // is in the range [tolerance, -tolerance]\n      // - Since `face` (given in the input for this method) has passed the\n      // check above we only have to check the lower bound e.g.\n      //\n      //      dot(v, not visible face normal) - not visible offset > -tolerance\n      //\n      if (mergeType === MERGE_NON_CONVEX) {\n        if (this.oppositeFaceDistance(edge) > -this.tolerance ||\n            this.oppositeFaceDistance(edge.opposite) > -this.tolerance) {\n          merge = true\n        }\n      } else {\n        if (face.area > oppositeFace.area) {\n          if (this.oppositeFaceDistance(edge) > -this.tolerance) {\n            merge = true\n          } else if (this.oppositeFaceDistance(edge.opposite) > -this.tolerance) {\n            convex = false\n          }\n        } else {\n          if (this.oppositeFaceDistance(edge.opposite) > -this.tolerance) {\n            merge = true\n          } else if (this.oppositeFaceDistance(edge) > -this.tolerance) {\n            convex = false\n          }\n        }\n      }\n\n      if (merge) {\n        // when two faces are merged it might be possible that redundant faces\n        // are destroyed, in that case move all the visible vertices from the\n        // destroyed faces to the `unclaimed` vertex list\n        const discardedFaces = face.mergeAdjacentFaces(edge, [])\n        for (let i = 0; i < discardedFaces.length; i += 1) {\n          this.deleteFaceVertices(discardedFaces[i], face)\n        }\n        return true\n      }\n\n      edge = edge.next\n      it += 1\n    } while (edge !== face.edge)\n    if (!convex) {\n      face.mark = NON_CONVEX\n    }\n    return false\n  }\n\n  /**\n   * Adds a vertex to the hull with the following algorithm\n   *\n   * - Compute the `horizon` which is a chain of half edges, for an edge to\n   *   belong to this group it must be the edge connecting a face that can\n   *   see `eyeVertex` and a face which cannot see `eyeVertex`\n   * - All the faces that can see `eyeVertex` have its visible vertices removed\n   *   from the claimed VertexList\n   * - A new set of faces is created with each edge of the `horizon` and\n   *   `eyeVertex`, each face is connected with the opposite horizon face and\n   *   the face on the left/right\n   * - The new faces are merged if possible with the opposite horizon face first\n   *   and then the faces on the right/left\n   * - The vertices removed from all the visible faces are assigned to the new\n   *   faces if possible\n   *\n   * @param {Vertex} eyeVertex\n   */\n  addVertexToHull (eyeVertex) {\n    const horizon = []\n\n    this.unclaimed.clear()\n\n    // remove `eyeVertex` from `eyeVertex.face` so that it can't be added to the\n    // `unclaimed` vertex list\n    this.removeVertexFromFace(eyeVertex, eyeVertex.face)\n    this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon)\n    this.addNewFaces(eyeVertex, horizon)\n\n    // first merge pass\n    // Do the merge with respect to the larger face\n    for (let i = 0; i < this.newFaces.length; i += 1) {\n      const face = this.newFaces[i]\n      if (face.mark === VISIBLE) {\n        while (this.doAdjacentMerge(face, MERGE_NON_CONVEX_WRT_LARGER_FACE)) {} // eslint-disable-line no-empty\n      }\n    }\n\n    // second merge pass\n    // Do the merge on non convex faces (a face is marked as non convex in the\n    // first pass)\n    for (let i = 0; i < this.newFaces.length; i += 1) {\n      const face = this.newFaces[i]\n      if (face.mark === NON_CONVEX) {\n        face.mark = VISIBLE\n        while (this.doAdjacentMerge(face, MERGE_NON_CONVEX)) {} // eslint-disable-line no-empty\n      }\n    }\n\n    // reassign `unclaimed` vertices to the new faces\n    this.resolveUnclaimedPoints(this.newFaces)\n  }\n\n  build () {\n    let eyeVertex\n    this.createInitialSimplex()\n    while ((eyeVertex = this.nextVertexToAdd())) {\n      this.addVertexToHull(eyeVertex)\n    }\n    this.reindexFaceAndVertices()\n  }\n}\n\nmodule.exports = QuickHull\n","/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nclass Vertex {\n  constructor (point, index) {\n    this.point = point\n    // index in the input array\n    this.index = index\n    // vertex is a double linked list node\n    this.next = null\n    this.prev = null\n    // the face that is able to see this point\n    this.face = null\n  }\n}\n\nmodule.exports = Vertex\n","/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nclass VertexList {\n  constructor () {\n    this.head = null\n    this.tail = null\n  }\n\n  clear () {\n    this.head = this.tail = null\n  }\n\n  /**\n   * Inserts a `node` before `target`, it's assumed that\n   * `target` belongs to this doubly linked list\n   *\n   * @param {*} target\n   * @param {*} node\n   */\n  insertBefore (target, node) {\n    node.prev = target.prev\n    node.next = target\n    if (!node.prev) {\n      this.head = node\n    } else {\n      node.prev.next = node\n    }\n    target.prev = node\n  }\n\n  /**\n   * Inserts a `node` after `target`, it's assumed that\n   * `target` belongs to this doubly linked list\n   *\n   * @param {Vertex} target\n   * @param {Vertex} node\n   */\n  insertAfter (target, node) {\n    node.prev = target\n    node.next = target.next\n    if (!node.next) {\n      this.tail = node\n    } else {\n      node.next.prev = node\n    }\n    target.next = node\n  }\n\n  /**\n   * Appends a `node` to the end of this doubly linked list\n   * Note: `node.next` will be unlinked from `node`\n   * Note: if `node` is part of another linked list call `addAll` instead\n   *\n   * @param {*} node\n   */\n  add (node) {\n    if (!this.head) {\n      this.head = node\n    } else {\n      this.tail.next = node\n    }\n    node.prev = this.tail\n    // since node is the new end it doesn't have a next node\n    node.next = null\n    this.tail = node\n  }\n\n  /**\n   * Appends a chain of nodes where `node` is the head,\n   * the difference with `add` is that it correctly sets the position\n   * of the node list `tail` property\n   *\n   * @param {*} node\n   */\n  addAll (node) {\n    if (!this.head) {\n      this.head = node\n    } else {\n      this.tail.next = node\n    }\n    node.prev = this.tail\n\n    // find the end of the list\n    while (node.next) {\n      node = node.next\n    }\n    this.tail = node\n  }\n\n  /**\n   * Deletes a `node` from this linked list, it's assumed that `node` is a\n   * member of this linked list\n   *\n   * @param {*} node\n   */\n  remove (node) {\n    if (!node.prev) {\n      this.head = node.next\n    } else {\n      node.prev.next = node.next\n    }\n\n    if (!node.next) {\n      this.tail = node.prev\n    } else {\n      node.next.prev = node.prev\n    }\n  }\n\n  /**\n   * Removes a chain of nodes whose head is `a` and whose tail is `b`,\n   * it's assumed that `a` and `b` belong to this list and also that `a`\n   * comes before `b` in the linked list\n   *\n   * @param {*} a\n   * @param {*} b\n   */\n  removeChain (a, b) {\n    if (!a.prev) {\n      this.head = b.next\n    } else {\n      a.prev.next = b.next\n    }\n\n    if (!b.next) {\n      this.tail = a.prev\n    } else {\n      b.next.prev = a.prev\n    }\n  }\n\n  first () {\n    return this.head\n  }\n\n  isEmpty () {\n    return !this.head\n  }\n}\n\nmodule.exports = VertexList\n","const cross = require('../../../maths/vec3/cross')\nconst normalize = require('../../../maths/vec3/normalize')\nconst subtract = require('../../../maths/vec3/subtract')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst planeNormal = (out, point1, point2, point3) => {\n  const tmp = [0, 0, 0]\n  subtract(out, point1, point2)\n  subtract(tmp, point2, point3)\n  cross(out, out, tmp)\n  return normalize(out, out)\n}\n\nmodule.exports = planeNormal\n","const QuickHull = require('./QuickHull')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst runner = (points, options = {}) => {\n  const instance = new QuickHull(points)\n  instance.build()\n  return instance.collectFaces(options.skipTriangulation)\n}\n\nmodule.exports = runner\n","const cross = require('../../../maths/vec3/cross')\nconst subtract = require('../../../maths/vec3/subtract')\nconst squaredLength = require('../../../maths/vec3/squaredLength')\n\n/*\n * Original source from quickhull3d (https://github.com/mauriciopoppe/quickhull3d)\n * Copyright (c) 2015 Mauricio Poppe\n *\n * Adapted to JSCAD by Jeff Gay\n */\n\nconst distanceSquared = (p, a, b) => {\n  // == parallelogram solution\n  //\n  //            s\n  //      __a________b__\n  //       /   |    /\n  //      /   h|   /\n  //     /_____|__/\n  //    p\n  //\n  //  s = b - a\n  //  area = s * h\n  //  |ap x s| = s * h\n  //  h = |ap x s| / s\n  //\n  const ab = []\n  const ap = []\n  const cr = []\n  subtract(ab, b, a)\n  subtract(ap, p, a)\n  const area = squaredLength(cross(cr, ap, ab))\n  const s = squaredLength(ab)\n  if (s === 0) {\n    throw Error('a and b are the same point')\n  }\n  return area / s\n}\n\nconst pointLineDistance = (point, a, b) => Math.sqrt(distanceSquared(point, a, b))\n\nmodule.exports = pointLineDistance\n","const geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/*\n * Return the unique vertices of a geometry\n */\nconst toUniquePoints = (geometries) => {\n  const found = new Set()\n  const uniquePoints = []\n\n  const addPoint = (point) => {\n    const key = point.toString()\n    if (!found.has(key)) {\n      uniquePoints.push(point)\n      found.add(key)\n    }\n  }\n\n  geometries.forEach((geometry) => {\n    if (geom2.isA(geometry)) {\n      geom2.toPoints(geometry).forEach(addPoint)\n    } else if (geom3.isA(geometry)) {\n      // points are grouped by polygon\n      geom3.toPoints(geometry).forEach((points) => points.forEach(addPoint))\n    } else if (path2.isA(geometry)) {\n      path2.toPoints(geometry).forEach(addPoint)\n    }\n  })\n\n  return uniquePoints\n}\n\nmodule.exports = toUniquePoints\n","const flatten = require('../../utils/flatten')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst snapPolygons = require('./snapPolygons')\nconst mergePolygons = require('./mergePolygons')\nconst insertTjunctions = require('./insertTjunctions')\nconst triangulatePolygons = require('./triangulatePolygons')\n\n/*\n */\nconst generalizePath2 = (options, geometry) => geometry\n\n/*\n */\nconst generalizeGeom2 = (options, geometry) => geometry\n\n/*\n */\nconst generalizeGeom3 = (options, geometry) => {\n  const defaults = {\n    snap: false,\n    simplify: false,\n    triangulate: false\n  }\n  const { snap, simplify, triangulate } = Object.assign({}, defaults, options)\n\n  const epsilon = measureEpsilon(geometry)\n  let polygons = geom3.toPolygons(geometry)\n\n  // snap the given geometry if requested\n  if (snap) {\n    polygons = snapPolygons(epsilon, polygons)\n  }\n\n  // simplify the polygons if requested\n  if (simplify) {\n    // TODO implement some mesh decimations\n    polygons = mergePolygons(epsilon, polygons)\n  }\n\n  // triangulate the polygons if requested\n  if (triangulate) {\n    polygons = insertTjunctions(polygons)\n    polygons = triangulatePolygons(epsilon, polygons)\n  }\n\n  // FIXME replace with geom3.cloneShallow() when available\n  const clone = Object.assign({}, geometry)\n  clone.polygons = polygons\n\n  return clone\n}\n\n/**\n * Apply various modifications in proper order to produce a generalized geometry.\n * @param {Object} options - options for modifications\n * @param {Boolean} [options.snap=false] the geometries should be snapped to epsilons\n * @param {Boolean} [options.simplify=false] the geometries should be simplified\n * @param {Boolean} [options.triangulate=false] the geometries should be triangulated\n * @param {...Object} geometries - the geometries to generalize\n * @return {Object|Array} the modified geometry, or a list of modified geometries\n * @alias module:modeling/modifiers.generalize\n */\nconst generalize = (options, ...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return generalizePath2(options, geometry)\n    if (geom2.isA(geometry)) return generalizeGeom2(options, geometry)\n    if (geom3.isA(geometry)) return generalizeGeom3(options, geometry)\n    throw new Error('invalid geometry')\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = generalize\n","/**\n * All shapes (primitives or the results of operations) can be modified to correct issues, etc.\n * In all cases, these functions returns the results, and never changes the original geometry.\n * @module modeling/modifiers\n * @example\n * const { snap } = require('@jscad/modeling').modifiers\n */\nmodule.exports = {\n  generalize: require('./generalize'),\n  snap: require('./snap')\n}\n","const constants = require('../../maths/constants')\nconst vec3 = require('../../maths/vec3')\nconst poly3 = require('../../geometries/poly3')\n\nconst assert = false\n\nconst getTag = (vertex) => `${vertex}`\n\nconst addSide = (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) => {\n  const starttag = getTag(vertex0)\n  const endtag = getTag(vertex1)\n  if (assert && starttag === endtag) throw new Error('assert failed')\n  const newsidetag = `${starttag}/${endtag}`\n  const reversesidetag = `${endtag}/${starttag}`\n  if (sidemap.has(reversesidetag)) {\n    // remove the opposing side from mappings\n    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, vertex1, vertex0, null)\n    return null\n  }\n  // add the side to the mappings\n  const newsideobj = {\n    vertex0: vertex0,\n    vertex1: vertex1,\n    polygonindex: polygonindex\n  }\n  if (!(sidemap.has(newsidetag))) {\n    sidemap.set(newsidetag, [newsideobj])\n  } else {\n    sidemap.get(newsidetag).push(newsideobj)\n  }\n  if (vertextag2sidestart.has(starttag)) {\n    vertextag2sidestart.get(starttag).push(newsidetag)\n  } else {\n    vertextag2sidestart.set(starttag, [newsidetag])\n  }\n  if (vertextag2sideend.has(endtag)) {\n    vertextag2sideend.get(endtag).push(newsidetag)\n  } else {\n    vertextag2sideend.set(endtag, [newsidetag])\n  }\n  return newsidetag\n}\n\nconst deleteSide = (sidemap, vertextag2sidestart, vertextag2sideend, vertex0, vertex1, polygonindex) => {\n  const starttag = getTag(vertex0)\n  const endtag = getTag(vertex1)\n  const sidetag = `${starttag}/${endtag}`\n  if (assert && !(sidemap.has(sidetag))) throw new Error('assert failed')\n  let idx = -1\n  const sideobjs = sidemap.get(sidetag)\n  for (let i = 0; i < sideobjs.length; i++) {\n    const sideobj = sideobjs[i]\n    let sidetag = getTag(sideobj.vertex0)\n    if (sidetag !== starttag) continue\n    sidetag = getTag(sideobj.vertex1)\n    if (sidetag !== endtag) continue\n    if (polygonindex !== null) {\n      if (sideobj.polygonindex !== polygonindex) continue\n    }\n    idx = i\n    break\n  }\n  if (assert && idx < 0) throw new Error('assert failed')\n  sideobjs.splice(idx, 1)\n  if (sideobjs.length === 0) {\n    sidemap.delete(sidetag)\n  }\n\n  // adjust start and end lists\n  idx = vertextag2sidestart.get(starttag).indexOf(sidetag)\n  if (assert && idx < 0) throw new Error('assert failed')\n  vertextag2sidestart.get(starttag).splice(idx, 1)\n  if (vertextag2sidestart.get(starttag).length === 0) {\n    vertextag2sidestart.delete(starttag)\n  }\n\n  idx = vertextag2sideend.get(endtag).indexOf(sidetag)\n  if (assert && idx < 0) throw new Error('assert failed')\n  vertextag2sideend.get(endtag).splice(idx, 1)\n  if (vertextag2sideend.get(endtag).length === 0) {\n    vertextag2sideend.delete(endtag)\n  }\n}\n\n/*\n  Suppose we have two polygons ACDB and EDGF:\n\n   A-----B\n   |     |\n   |     E--F\n   |     |  |\n   C-----D--G\n\n  Note that vertex E forms a T-junction on the side BD. In this case some STL slicers will complain\n  that the solid is not watertight. This is because the watertightness check is done by checking if\n  each side DE is matched by another side ED.\n\n  This function will return a new solid with ACDB replaced by ACDEB\n\n  Note that this can create polygons that are slightly non-convex (due to rounding errors). Therefore the result should\n  not be used for further CSG operations!\n\n  Note this function is meant to be used to preprocess geometries when triangulation is required, i.e. AMF, STL, etc.\n  Do not use the results in other operations.\n*/\n\n/*\n * Insert missing vertices for T junctions, which creates polygons that can be triangulated.\n * @param {Array} polygons - the original polygons which may or may not have T junctions\n * @return original polygons (if no T junctions found) or new polygons with updated vertices\n */\nconst insertTjunctions = (polygons) => {\n  // STEP 1 : build a map of 'unmatched' sides from the polygons\n  // i.e. side AB in one polygon does not have a matching side BA in another polygon\n  const sidemap = new Map()\n  for (let polygonindex = 0; polygonindex < polygons.length; polygonindex++) {\n    const polygon = polygons[polygonindex]\n    const numvertices = polygon.vertices.length\n    if (numvertices >= 3) {\n      let vertex = polygon.vertices[0]\n      let vertextag = getTag(vertex)\n      for (let vertexindex = 0; vertexindex < numvertices; vertexindex++) {\n        let nextvertexindex = vertexindex + 1\n        if (nextvertexindex === numvertices) nextvertexindex = 0\n\n        const nextvertex = polygon.vertices[nextvertexindex]\n        const nextvertextag = getTag(nextvertex)\n\n        const sidetag = `${vertextag}/${nextvertextag}`\n        const reversesidetag = `${nextvertextag}/${vertextag}`\n        if (sidemap.has(reversesidetag)) {\n          // this side matches the same side in another polygon. Remove from sidemap\n          // FIXME is this check necessary? there should only be ONE(1) opposing side\n          // FIXME assert ?\n          const ar = sidemap.get(reversesidetag)\n          ar.splice(-1, 1)\n          if (ar.length === 0) {\n            sidemap.delete(reversesidetag)\n          }\n        } else {\n          const sideobj = {\n            vertex0: vertex,\n            vertex1: nextvertex,\n            polygonindex: polygonindex\n          }\n          if (!(sidemap.has(sidetag))) {\n            sidemap.set(sidetag, [sideobj])\n          } else {\n            sidemap.get(sidetag).push(sideobj)\n          }\n        }\n        vertex = nextvertex\n        vertextag = nextvertextag\n      }\n    } else {\n      console.warn('warning: invalid polygon found during insertTjunctions')\n    }\n  }\n\n  if (sidemap.size > 0) {\n    // STEP 2 : create a list of starting sides and ending sides\n    const vertextag2sidestart = new Map()\n    const vertextag2sideend = new Map()\n    const sidesToCheck = new Map()\n    for (const [sidetag, sideobjs] of sidemap) {\n      sidesToCheck.set(sidetag, true)\n      sideobjs.forEach((sideobj) => {\n        const starttag = getTag(sideobj.vertex0)\n        const endtag = getTag(sideobj.vertex1)\n        if (vertextag2sidestart.has(starttag)) {\n          vertextag2sidestart.get(starttag).push(sidetag)\n        } else {\n          vertextag2sidestart.set(starttag, [sidetag])\n        }\n        if (vertextag2sideend.has(endtag)) {\n          vertextag2sideend.get(endtag).push(sidetag)\n        } else {\n          vertextag2sideend.set(endtag, [sidetag])\n        }\n      })\n    }\n\n    // STEP 3 : if sidemap is not empty\n    const newpolygons = polygons.slice(0) // make a copy in order to replace polygons inline\n    while (true) {\n      if (sidemap.size === 0) break\n\n      for (const sidetag of sidemap.keys()) {\n        sidesToCheck.set(sidetag, true)\n      }\n\n      let donesomething = false\n      while (true) {\n        const sidetags = Array.from(sidesToCheck.keys())\n        if (sidetags.length === 0) break // sidesToCheck is empty, we're done!\n        const sidetagtocheck = sidetags[0]\n        let donewithside = true\n        if (sidemap.has(sidetagtocheck)) {\n          const sideobjs = sidemap.get(sidetagtocheck)\n          if (assert && sideobjs.length === 0) throw new Error('assert failed')\n          const sideobj = sideobjs[0]\n          for (let directionindex = 0; directionindex < 2; directionindex++) {\n            const startvertex = (directionindex === 0) ? sideobj.vertex0 : sideobj.vertex1\n            const endvertex = (directionindex === 0) ? sideobj.vertex1 : sideobj.vertex0\n            const startvertextag = getTag(startvertex)\n            const endvertextag = getTag(endvertex)\n            let matchingsides = []\n            if (directionindex === 0) {\n              if (vertextag2sideend.has(startvertextag)) {\n                matchingsides = vertextag2sideend.get(startvertextag)\n              }\n            } else {\n              if (vertextag2sidestart.has(startvertextag)) {\n                matchingsides = vertextag2sidestart.get(startvertextag)\n              }\n            }\n            for (let matchingsideindex = 0; matchingsideindex < matchingsides.length; matchingsideindex++) {\n              const matchingsidetag = matchingsides[matchingsideindex]\n              const matchingside = sidemap.get(matchingsidetag)[0]\n              const matchingsidestartvertex = (directionindex === 0) ? matchingside.vertex0 : matchingside.vertex1\n              const matchingsideendvertex = (directionindex === 0) ? matchingside.vertex1 : matchingside.vertex0\n              const matchingsidestartvertextag = getTag(matchingsidestartvertex)\n              const matchingsideendvertextag = getTag(matchingsideendvertex)\n              if (assert && matchingsideendvertextag !== startvertextag) throw new Error('assert failed')\n              if (matchingsidestartvertextag === endvertextag) {\n                // matchingside cancels sidetagtocheck\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, startvertex, endvertex, null)\n                deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, startvertex, null)\n                donewithside = false\n                directionindex = 2 // skip reverse direction check\n                donesomething = true\n                break\n              } else {\n                const startpos = startvertex\n                const endpos = endvertex\n                const checkpos = matchingsidestartvertex\n                const direction = vec3.subtract(vec3.create(), checkpos, startpos)\n                // Now we need to check if endpos is on the line startpos-checkpos:\n                const t = vec3.dot(vec3.subtract(vec3.create(), endpos, startpos), direction) / vec3.dot(direction, direction)\n                if ((t > 0) && (t < 1)) {\n                  const closestpoint = vec3.scale(vec3.create(), direction, t)\n                  vec3.add(closestpoint, closestpoint, startpos)\n                  const distancesquared = vec3.squaredDistance(closestpoint, endpos)\n                  if (distancesquared < (constants.EPS * constants.EPS)) {\n                    // Yes it's a t-junction! We need to split matchingside in two:\n                    const polygonindex = matchingside.polygonindex\n                    const polygon = newpolygons[polygonindex]\n                    // find the index of startvertextag in polygon:\n                    const insertionvertextag = getTag(matchingside.vertex1)\n                    let insertionvertextagindex = -1\n                    for (let i = 0; i < polygon.vertices.length; i++) {\n                      if (getTag(polygon.vertices[i]) === insertionvertextag) {\n                        insertionvertextagindex = i\n                        break\n                      }\n                    }\n                    if (assert && insertionvertextagindex < 0) throw new Error('assert failed')\n                    // split the side by inserting the vertex:\n                    const newvertices = polygon.vertices.slice(0)\n                    newvertices.splice(insertionvertextagindex, 0, endvertex)\n                    const newpolygon = poly3.create(newvertices)\n\n                    newpolygons[polygonindex] = newpolygon\n\n                    // remove the original sides from our maps\n                    deleteSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, matchingside.vertex1, polygonindex)\n                    const newsidetag1 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, matchingside.vertex0, endvertex, polygonindex)\n                    const newsidetag2 = addSide(sidemap, vertextag2sidestart, vertextag2sideend, endvertex, matchingside.vertex1, polygonindex)\n                    if (newsidetag1 !== null) sidesToCheck.set(newsidetag1, true)\n                    if (newsidetag2 !== null) sidesToCheck.set(newsidetag2, true)\n                    donewithside = false\n                    directionindex = 2 // skip reverse direction check\n                    donesomething = true\n                    break\n                  } // if(distancesquared < 1e-10)\n                } // if( (t > 0) && (t < 1) )\n              } // if(endingstidestartvertextag === endvertextag)\n            } // for matchingsideindex\n          } // for directionindex\n        } // if(sidetagtocheck in sidemap)\n        if (donewithside) {\n          sidesToCheck.delete(sidetagtocheck)\n        }\n      }\n      if (!donesomething) break\n    }\n    polygons = newpolygons\n  }\n  sidemap.clear()\n\n  return polygons\n}\n\nmodule.exports = insertTjunctions\n","const aboutEqualNormals = require('../../maths/utils/aboutEqualNormals')\nconst vec3 = require('../../maths/vec3')\n\nconst poly3 = require('../../geometries/poly3')\n\n// create a set of edges from the given polygon, and link the edges as well\nconst createEdges = (polygon) => {\n  const points = poly3.toPoints(polygon)\n  const edges = []\n  for (let i = 0; i < points.length; i++) {\n    const j = (i + 1) % points.length\n    const edge = {\n      v1: points[i],\n      v2: points[j]\n    }\n    edges.push(edge)\n  }\n  // link the edges together\n  for (let i = 0; i < edges.length; i++) {\n    const j = (i + 1) % points.length\n    edges[i].next = edges[j]\n    edges[j].prev = edges[i]\n  }\n  return edges\n}\n\nconst insertEdge = (edges, edge) => {\n  const key = `${edge.v1}:${edge.v2}`\n  edges.set(key, edge)\n}\n\nconst deleteEdge = (edges, edge) => {\n  const key = `${edge.v1}:${edge.v2}`\n  edges.delete(key)\n}\n\nconst findOppositeEdge = (edges, edge) => {\n  const key = `${edge.v2}:${edge.v1}` // NOTE: OPPOSITE OF INSERT KEY\n  return edges.get(key)\n}\n\n// calculate the two adjoining angles between the opposing edges\nconst calculateAnglesBetween = (current, opposite, normal) => {\n  let v0 = current.prev.v1\n  let v1 = current.prev.v2\n  let v2 = opposite.next.v2\n  const angle1 = calculateAngle(v0, v1, v2, normal)\n\n  v0 = opposite.prev.v1\n  v1 = opposite.prev.v2\n  v2 = current.next.v2\n  const angle2 = calculateAngle(v0, v1, v2, normal)\n\n  return [angle1, angle2]\n}\n\nconst v1 = vec3.create()\nconst v2 = vec3.create()\n\nconst calculateAngle = (prevpoint, point, nextpoint, normal) => {\n  const d0 = vec3.subtract(v1, point, prevpoint)\n  const d1 = vec3.subtract(v2, nextpoint, point)\n  vec3.cross(d0, d0, d1)\n  return vec3.dot(d0, normal)\n}\n\n// create a polygon starting from the given edge (if possible)\nconst createPolygonAnd = (edge) => {\n  let polygon\n  const points = []\n  while (edge.next) {\n    const next = edge.next\n\n    points.push(edge.v1)\n\n    edge.v1 = null\n    edge.v2 = null\n    edge.next = null\n    edge.prev = null\n\n    edge = next\n  }\n  if (points.length > 0) polygon = poly3.create(points)\n  return polygon\n}\n\n/*\n * Merge COPLANAR polygons that share common edges.\n * @param {poly3[]} sourcepolygons - list of polygons\n * @returns {poly3[]} new set of polygons\n */\nconst mergeCoplanarPolygons = (sourcepolygons) => {\n  if (sourcepolygons.length < 2) return sourcepolygons\n\n  const normal = sourcepolygons[0].plane\n  const polygons = sourcepolygons.slice()\n  const edgeList = new Map()\n\n  while (polygons.length > 0) { // NOTE: the length of polygons WILL change\n    const polygon = polygons.shift()\n    const edges = createEdges(polygon)\n    for (let i = 0; i < edges.length; i++) {\n      const current = edges[i]\n      const opposite = findOppositeEdge(edgeList, current)\n      if (opposite) {\n        const angles = calculateAnglesBetween(current, opposite, normal)\n        if (angles[0] >= 0 && angles[1] >= 0) {\n          const edge1 = opposite.next\n          const edge2 = current.next\n          // adjust the edges, linking together opposing polygons\n          current.prev.next = opposite.next\n          current.next.prev = opposite.prev\n\n          opposite.prev.next = current.next\n          opposite.next.prev = current.prev\n\n          // remove the opposing edges\n          current.v1 = null\n          current.v2 = null\n          current.next = null\n          current.prev = null\n\n          deleteEdge(edgeList, opposite)\n\n          opposite.v1 = null\n          opposite.v2 = null\n          opposite.next = null\n          opposite.prev = null\n\n          const mergeEdges = (list, e1, e2) => {\n            const newedge = {\n              v1: e2.v1,\n              v2: e1.v2,\n              next: e1.next,\n              prev: e2.prev\n            }\n            // link in newedge\n            e2.prev.next = newedge\n            e1.next.prev = newedge\n            // remove old edges\n            deleteEdge(list, e1)\n            e1.v1 = null\n            e1.v2 = null\n            e1.next = null\n            e1.prev = null\n\n            deleteEdge(list, e2)\n            e2.v1 = null\n            e2.v2 = null\n            e2.next = null\n            e2.prev = null\n          }\n\n          if (angles[0] === 0.0) {\n            mergeEdges(edgeList, edge1, edge1.prev)\n          }\n          if (angles[1] === 0.0) {\n            mergeEdges(edgeList, edge2, edge2.prev)\n          }\n        }\n      } else {\n        if (current.next) insertEdge(edgeList, current)\n      }\n    }\n  }\n\n  // build a set of polygons from the remaining edges\n  const destpolygons = []\n  edgeList.forEach((edge) => {\n    const polygon = createPolygonAnd(edge)\n    if (polygon) destpolygons.push(polygon)\n  })\n\n  edgeList.clear()\n\n  return destpolygons\n}\n\nconst coplanar = (plane1, plane2) => {\n  // expect the same distance from the origin, within tolerance\n  if (Math.abs(plane1[3] - plane2[3]) < 0.00000015) {\n    return aboutEqualNormals(plane1, plane2)\n  }\n  return false\n}\n\nconst mergePolygons = (epsilon, polygons) => {\n  const polygonsPerPlane = [] // elements: [plane, [poly3...]]\n  polygons.forEach((polygon) => {\n    const mapping = polygonsPerPlane.find((element) => coplanar(element[0], poly3.plane(polygon)))\n    if (mapping) {\n      const polygons = mapping[1]\n      polygons.push(polygon)\n    } else {\n      polygonsPerPlane.push([poly3.plane(polygon), [polygon]])\n    }\n  })\n\n  let destpolygons = []\n  polygonsPerPlane.forEach((mapping) => {\n    const sourcepolygons = mapping[1]\n    const retesselayedpolygons = mergeCoplanarPolygons(sourcepolygons)\n    destpolygons = destpolygons.concat(retesselayedpolygons)\n  })\n  return destpolygons\n}\n\nmodule.exports = mergePolygons\n","const { EPS } = require('../../maths/constants')\n\nconst line2 = require('../../maths/line2')\nconst vec2 = require('../../maths/vec2')\nconst OrthoNormalBasis = require('../../maths/OrthoNormalBasis')\nconst interpolateBetween2DPointsForY = require('../../maths/utils/interpolateBetween2DPointsForY')\n\nconst { insertSorted, fnNumberSort } = require('../../utils')\n\nconst poly3 = require('../../geometries/poly3')\n\n/*\n * Retesselation for a set of COPLANAR polygons.\n * @param {poly3[]} sourcepolygons - list of polygons\n * @returns {poly3[]} new set of polygons\n */\nconst reTesselateCoplanarPolygons = (sourcepolygons) => {\n  if (sourcepolygons.length < 2) return sourcepolygons\n\n  const destpolygons = []\n  const numpolygons = sourcepolygons.length\n  const plane = poly3.plane(sourcepolygons[0])\n  const orthobasis = new OrthoNormalBasis(plane)\n  const polygonvertices2d = [] // array of array of Vector2D\n  const polygontopvertexindexes = [] // array of indexes of topmost vertex per polygon\n  const topy2polygonindexes = new Map()\n  const ycoordinatetopolygonindexes = new Map()\n\n  // convert all polygon vertices to 2D\n  // Make a list of all encountered y coordinates\n  // And build a map of all polygons that have a vertex at a certain y coordinate:\n  const ycoordinatebins = new Map()\n  const ycoordinateBinningFactor = 10 / EPS\n  for (let polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\n    const poly3d = sourcepolygons[polygonindex]\n    let vertices2d = []\n    let numvertices = poly3d.vertices.length\n    let minindex = -1\n    if (numvertices > 0) {\n      let miny\n      let maxy\n      for (let i = 0; i < numvertices; i++) {\n        let pos2d = orthobasis.to2D(poly3d.vertices[i])\n        // perform binning of y coordinates: If we have multiple vertices very\n        // close to each other, give them the same y coordinate:\n        const ycoordinatebin = Math.floor(pos2d[1] * ycoordinateBinningFactor)\n        let newy\n        if (ycoordinatebins.has(ycoordinatebin)) {\n          newy = ycoordinatebins.get(ycoordinatebin)\n        } else if (ycoordinatebins.has(ycoordinatebin + 1)) {\n          newy = ycoordinatebins.get(ycoordinatebin + 1)\n        } else if (ycoordinatebins.has(ycoordinatebin - 1)) {\n          newy = ycoordinatebins.get(ycoordinatebin - 1)\n        } else {\n          newy = pos2d[1]\n          ycoordinatebins.set(ycoordinatebin, pos2d[1])\n        }\n        pos2d = vec2.fromValues(pos2d[0], newy)\n        vertices2d.push(pos2d)\n        const y = pos2d[1]\n        if ((i === 0) || (y < miny)) {\n          miny = y\n          minindex = i\n        }\n        if ((i === 0) || (y > maxy)) {\n          maxy = y\n        }\n        let polygonindexes = ycoordinatetopolygonindexes.get(y)\n        if (!polygonindexes) {\n          polygonindexes = {} // PERF\n          ycoordinatetopolygonindexes.set(y, polygonindexes)\n        }\n        polygonindexes[polygonindex] = true\n      }\n      if (miny >= maxy) {\n        // degenerate polygon, all vertices have same y coordinate. Just ignore it from now:\n        vertices2d = []\n        numvertices = 0\n        minindex = -1\n      } else {\n        let polygonindexes = topy2polygonindexes.get(miny)\n        if (!polygonindexes) {\n          polygonindexes = []\n          topy2polygonindexes.set(miny, polygonindexes)\n        }\n        polygonindexes.push(polygonindex)\n      }\n    } // if(numvertices > 0)\n    // reverse the vertex order:\n    vertices2d.reverse()\n    minindex = numvertices - minindex - 1\n    polygonvertices2d.push(vertices2d)\n    polygontopvertexindexes.push(minindex)\n  }\n\n  const ycoordinates = []\n  ycoordinatetopolygonindexes.forEach((polylist, y) => ycoordinates.push(y))\n  ycoordinates.sort(fnNumberSort)\n\n  // Now we will iterate over all y coordinates, from lowest to highest y coordinate\n  // activepolygons: source polygons that are 'active', i.e. intersect with our y coordinate\n  //   Is sorted so the polygons are in left to right order\n  // Each element in activepolygons has these properties:\n  //        polygonindex: the index of the source polygon (i.e. an index into the sourcepolygons\n  //                      and polygonvertices2d arrays)\n  //        leftvertexindex: the index of the vertex at the left side of the polygon (lowest x)\n  //                         that is at or just above the current y coordinate\n  //        rightvertexindex: dito at right hand side of polygon\n  //        topleft, bottomleft: coordinates of the left side of the polygon crossing the current y coordinate\n  //        topright, bottomright: coordinates of the right hand side of the polygon crossing the current y coordinate\n  let activepolygons = []\n  let prevoutpolygonrow = []\n  for (let yindex = 0; yindex < ycoordinates.length; yindex++) {\n    const newoutpolygonrow = []\n    const ycoordinate = ycoordinates[yindex]\n\n    // update activepolygons for this y coordinate:\n    // - Remove any polygons that end at this y coordinate\n    // - update leftvertexindex and rightvertexindex (which point to the current vertex index\n    //   at the the left and right side of the polygon\n    // Iterate over all polygons that have a corner at this y coordinate:\n    const polygonindexeswithcorner = ycoordinatetopolygonindexes.get(ycoordinate)\n    for (let activepolygonindex = 0; activepolygonindex < activepolygons.length; ++activepolygonindex) {\n      const activepolygon = activepolygons[activepolygonindex]\n      const polygonindex = activepolygon.polygonindex\n      if (polygonindexeswithcorner[polygonindex]) {\n        // this active polygon has a corner at this y coordinate:\n        const vertices2d = polygonvertices2d[polygonindex]\n        const numvertices = vertices2d.length\n        let newleftvertexindex = activepolygon.leftvertexindex\n        let newrightvertexindex = activepolygon.rightvertexindex\n        // See if we need to increase leftvertexindex or decrease rightvertexindex:\n        while (true) {\n          let nextleftvertexindex = newleftvertexindex + 1\n          if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n          if (vertices2d[nextleftvertexindex][1] !== ycoordinate) break\n          newleftvertexindex = nextleftvertexindex\n        }\n        let nextrightvertexindex = newrightvertexindex - 1\n        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n        if (vertices2d[nextrightvertexindex][1] === ycoordinate) {\n          newrightvertexindex = nextrightvertexindex\n        }\n        if ((newleftvertexindex !== activepolygon.leftvertexindex) && (newleftvertexindex === newrightvertexindex)) {\n          // We have increased leftvertexindex or decreased rightvertexindex, and now they point to the same vertex\n          // This means that this is the bottom point of the polygon. We'll remove it:\n          activepolygons.splice(activepolygonindex, 1)\n          --activepolygonindex\n        } else {\n          activepolygon.leftvertexindex = newleftvertexindex\n          activepolygon.rightvertexindex = newrightvertexindex\n          activepolygon.topleft = vertices2d[newleftvertexindex]\n          activepolygon.topright = vertices2d[newrightvertexindex]\n          let nextleftvertexindex = newleftvertexindex + 1\n          if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n          activepolygon.bottomleft = vertices2d[nextleftvertexindex]\n          let nextrightvertexindex = newrightvertexindex - 1\n          if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n          activepolygon.bottomright = vertices2d[nextrightvertexindex]\n        }\n      } // if polygon has corner here\n    } // for activepolygonindex\n    let nextycoordinate\n    if (yindex >= ycoordinates.length - 1) {\n      // last row, all polygons must be finished here:\n      activepolygons = []\n      nextycoordinate = null\n    } else { // yindex < ycoordinates.length-1\n      nextycoordinate = Number(ycoordinates[yindex + 1])\n      const middleycoordinate = 0.5 * (ycoordinate + nextycoordinate)\n      // update activepolygons by adding any polygons that start here:\n      const startingpolygonindexes = topy2polygonindexes.get(ycoordinate)\n      for (const polygonindexKey in startingpolygonindexes) {\n        const polygonindex = startingpolygonindexes[polygonindexKey]\n        const vertices2d = polygonvertices2d[polygonindex]\n        const numvertices = vertices2d.length\n        const topvertexindex = polygontopvertexindexes[polygonindex]\n        // the top of the polygon may be a horizontal line. In that case topvertexindex can point to any point on this line.\n        // Find the left and right topmost vertices which have the current y coordinate:\n        let topleftvertexindex = topvertexindex\n        while (true) {\n          let i = topleftvertexindex + 1\n          if (i >= numvertices) i = 0\n          if (vertices2d[i][1] !== ycoordinate) break\n          if (i === topvertexindex) break // should not happen, but just to prevent endless loops\n          topleftvertexindex = i\n        }\n        let toprightvertexindex = topvertexindex\n        while (true) {\n          let i = toprightvertexindex - 1\n          if (i < 0) i = numvertices - 1\n          if (vertices2d[i][1] !== ycoordinate) break\n          if (i === topleftvertexindex) break // should not happen, but just to prevent endless loops\n          toprightvertexindex = i\n        }\n        let nextleftvertexindex = topleftvertexindex + 1\n        if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0\n        let nextrightvertexindex = toprightvertexindex - 1\n        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1\n        const newactivepolygon = {\n          polygonindex: polygonindex,\n          leftvertexindex: topleftvertexindex,\n          rightvertexindex: toprightvertexindex,\n          topleft: vertices2d[topleftvertexindex],\n          topright: vertices2d[toprightvertexindex],\n          bottomleft: vertices2d[nextleftvertexindex],\n          bottomright: vertices2d[nextrightvertexindex]\n        }\n        insertSorted(activepolygons, newactivepolygon, (el1, el2) => {\n          const x1 = interpolateBetween2DPointsForY(el1.topleft, el1.bottomleft, middleycoordinate)\n          const x2 = interpolateBetween2DPointsForY(el2.topleft, el2.bottomleft, middleycoordinate)\n          if (x1 > x2) return 1\n          if (x1 < x2) return -1\n          return 0\n        })\n      } // for(let polygonindex in startingpolygonindexes)\n    } //  yindex < ycoordinates.length-1\n\n    // Now activepolygons is up to date\n    // Build the output polygons for the next row in newoutpolygonrow:\n    for (const activepolygonKey in activepolygons) {\n      const activepolygon = activepolygons[activepolygonKey]\n\n      let x = interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, ycoordinate)\n      const topleft = vec2.fromValues(x, ycoordinate)\n      x = interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, ycoordinate)\n      const topright = vec2.fromValues(x, ycoordinate)\n      x = interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, nextycoordinate)\n      const bottomleft = vec2.fromValues(x, nextycoordinate)\n      x = interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, nextycoordinate)\n      const bottomright = vec2.fromValues(x, nextycoordinate)\n      const outpolygon = {\n        topleft: topleft,\n        topright: topright,\n        bottomleft: bottomleft,\n        bottomright: bottomright,\n        leftline: line2.fromPoints(line2.create(), topleft, bottomleft),\n        rightline: line2.fromPoints(line2.create(), bottomright, topright)\n      }\n      if (newoutpolygonrow.length > 0) {\n        const prevoutpolygon = newoutpolygonrow[newoutpolygonrow.length - 1]\n        const d1 = vec2.distance(outpolygon.topleft, prevoutpolygon.topright)\n        const d2 = vec2.distance(outpolygon.bottomleft, prevoutpolygon.bottomright)\n        if ((d1 < EPS) && (d2 < EPS)) {\n          // we can join this polygon with the one to the left:\n          outpolygon.topleft = prevoutpolygon.topleft\n          outpolygon.leftline = prevoutpolygon.leftline\n          outpolygon.bottomleft = prevoutpolygon.bottomleft\n          newoutpolygonrow.splice(newoutpolygonrow.length - 1, 1)\n        }\n      }\n      newoutpolygonrow.push(outpolygon)\n    } // for(activepolygon in activepolygons)\n    if (yindex > 0) {\n      // try to match the new polygons against the previous row:\n      const prevcontinuedindexes = new Set()\n      const matchedindexes = new Set()\n      for (let i = 0; i < newoutpolygonrow.length; i++) {\n        const thispolygon = newoutpolygonrow[i]\n        for (let ii = 0; ii < prevoutpolygonrow.length; ii++) {\n          if (!matchedindexes.has(ii)) { // not already processed?\n            // We have a match if the sidelines are equal or if the top coordinates\n            // are on the sidelines of the previous polygon\n            const prevpolygon = prevoutpolygonrow[ii]\n            if (vec2.distance(prevpolygon.bottomleft, thispolygon.topleft) < EPS) {\n              if (vec2.distance(prevpolygon.bottomright, thispolygon.topright) < EPS) {\n                // Yes, the top of this polygon matches the bottom of the previous:\n                matchedindexes.add(ii)\n                // Now check if the joined polygon would remain convex:\n                const v1 = line2.direction(thispolygon.leftline)\n                const v2 = line2.direction(prevpolygon.leftline)\n                const d1 = v1[0] - v2[0]\n\n                const v3 = line2.direction(thispolygon.rightline)\n                const v4 = line2.direction(prevpolygon.rightline)\n                const d2 = v3[0] - v4[0]\n\n                const leftlinecontinues = Math.abs(d1) < EPS\n                const rightlinecontinues = Math.abs(d2) < EPS\n                const leftlineisconvex = leftlinecontinues || (d1 >= 0)\n                const rightlineisconvex = rightlinecontinues || (d2 >= 0)\n                if (leftlineisconvex && rightlineisconvex) {\n                  // yes, both sides have convex corners:\n                  // This polygon will continue the previous polygon\n                  thispolygon.outpolygon = prevpolygon.outpolygon\n                  thispolygon.leftlinecontinues = leftlinecontinues\n                  thispolygon.rightlinecontinues = rightlinecontinues\n                  prevcontinuedindexes.add(ii)\n                }\n                break\n              }\n            }\n          } // if(!prevcontinuedindexes.has(ii))\n        } // for ii\n      } // for i\n      for (let ii = 0; ii < prevoutpolygonrow.length; ii++) {\n        if (!prevcontinuedindexes.has(ii)) {\n          // polygon ends here\n          // Finish the polygon with the last point(s):\n          const prevpolygon = prevoutpolygonrow[ii]\n          prevpolygon.outpolygon.rightpoints.push(prevpolygon.bottomright)\n          if (vec2.distance(prevpolygon.bottomright, prevpolygon.bottomleft) > EPS) {\n            // polygon ends with a horizontal line:\n            prevpolygon.outpolygon.leftpoints.push(prevpolygon.bottomleft)\n          }\n          // reverse the left half so we get a counterclockwise circle:\n          prevpolygon.outpolygon.leftpoints.reverse()\n          const points2d = prevpolygon.outpolygon.rightpoints.concat(prevpolygon.outpolygon.leftpoints)\n          const vertices3d = points2d.map((point2d) => orthobasis.to3D(point2d))\n          const polygon = poly3.fromPointsAndPlane(vertices3d, plane) // TODO support shared\n\n          // if we let empty polygon out, next retesselate will crash\n          if (polygon.vertices.length) destpolygons.push(polygon)\n        }\n      }\n    } // if(yindex > 0)\n    for (let i = 0; i < newoutpolygonrow.length; i++) {\n      const thispolygon = newoutpolygonrow[i]\n      if (!thispolygon.outpolygon) {\n        // polygon starts here:\n        thispolygon.outpolygon = {\n          leftpoints: [],\n          rightpoints: []\n        }\n        thispolygon.outpolygon.leftpoints.push(thispolygon.topleft)\n        if (vec2.distance(thispolygon.topleft, thispolygon.topright) > EPS) {\n          // we have a horizontal line at the top:\n          thispolygon.outpolygon.rightpoints.push(thispolygon.topright)\n        }\n      } else {\n        // continuation of a previous row\n        if (!thispolygon.leftlinecontinues) {\n          thispolygon.outpolygon.leftpoints.push(thispolygon.topleft)\n        }\n        if (!thispolygon.rightlinecontinues) {\n          thispolygon.outpolygon.rightpoints.push(thispolygon.topright)\n        }\n      }\n    }\n    prevoutpolygonrow = newoutpolygonrow\n  } // for yindex\n  return destpolygons\n}\n\nmodule.exports = reTesselateCoplanarPolygons\n","const geom3 = require('../../geometries/geom3')\nconst poly3 = require('../../geometries/poly3')\n\nconst aboutEqualNormals = require('../../maths/utils/aboutEqualNormals')\n\nconst reTesselateCoplanarPolygons = require('./reTesselateCoplanarPolygons')\n\nconst coplanar = (plane1, plane2) => {\n  // expect the same distance from the origin, within tolerance\n  if (Math.abs(plane1[3] - plane2[3]) < 0.00000015) {\n    return aboutEqualNormals(plane1, plane2)\n  }\n  return false\n}\n\n/*\n  After boolean operations all coplanar polygon fragments are joined by a retesselating\n  operation. geom3.reTesselate(geom).\n  Retesselation is done through a linear sweep over the polygon surface.\n  The sweep line passes over the y coordinates of all vertices in the polygon.\n  Polygons are split at each sweep line, and the fragments are joined horizontally and vertically into larger polygons\n  (making sure that we will end up with convex polygons).\n*/\nconst retessellate = (geometry) => {\n  if (geometry.isRetesselated) {\n    return geometry\n  }\n\n  const polygons = geom3.toPolygons(geometry)\n  const polygonsPerPlane = [] // elements: [plane, [poly3...]]\n  polygons.forEach((polygon) => {\n    const mapping = polygonsPerPlane.find((element) => coplanar(element[0], poly3.plane(polygon)))\n    if (mapping) {\n      const polygons = mapping[1]\n      polygons.push(polygon)\n    } else {\n      polygonsPerPlane.push([poly3.plane(polygon), [polygon]])\n    }\n  })\n\n  let destpolygons = []\n  polygonsPerPlane.forEach((mapping) => {\n    const sourcepolygons = mapping[1]\n    const retesselayedpolygons = reTesselateCoplanarPolygons(sourcepolygons)\n    destpolygons = destpolygons.concat(retesselayedpolygons)\n  })\n\n  const result = geom3.create(destpolygons)\n  result.isRetesselated = true\n\n  return result\n}\n\nmodule.exports = retessellate\n","const flatten = require('../../utils/flatten')\n\nconst vec2 = require('../../maths/vec2')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst measureEpsilon = require('../../measurements/measureEpsilon')\n\nconst snapPolygons = require('./snapPolygons')\n\nconst snapPath2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const points = path2.toPoints(geometry)\n  const newpoints = points.map((point) => vec2.snap(vec2.create(), point, epsilon))\n  // snap can produce duplicate points, remove those\n  return path2.create(newpoints)\n}\n\nconst snapGeom2 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const sides = geom2.toSides(geometry)\n  let newsides = sides.map((side) => [vec2.snap(vec2.create(), side[0], epsilon), vec2.snap(vec2.create(), side[1], epsilon)])\n  // snap can produce sides with zero (0) length, remove those\n  newsides = newsides.filter((side) => !vec2.equals(side[0], side[1]))\n  return geom2.create(newsides)\n}\n\nconst snapGeom3 = (geometry) => {\n  const epsilon = measureEpsilon(geometry)\n  const polygons = geom3.toPolygons(geometry)\n  const newpolygons = snapPolygons(epsilon, polygons)\n  return geom3.create(newpolygons)\n}\n\n/**\n * Snap the given geometries to the overall precision (epsilon) of the geometry.\n * @see measurements.measureEpsilon()\n * @param {...Object} geometries - the geometries to snap\n * @return {Object|Array} the snapped geometry, or a list of snapped geometries\n * @alias module:modeling/modifiers.snap\n */\nconst snap = (...geometries) => {\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('wrong number of arguments')\n\n  const results = geometries.map((geometry) => {\n    if (path2.isA(geometry)) return snapPath2(geometry)\n    if (geom2.isA(geometry)) return snapGeom2(geometry)\n    if (geom3.isA(geometry)) return snapGeom3(geometry)\n    return geometry\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = snap\n","const vec3 = require('../../maths/vec3')\n\nconst poly3 = require('../../geometries/poly3')\n\nconst isValidPoly3 = (epsilon, polygon) => {\n  const area = Math.abs(poly3.measureArea(polygon))\n  return (Number.isFinite(area) && area > epsilon)\n}\n\n/*\n * Snap the given list of polygons to the epsilon.\n */\nconst snapPolygons = (epsilon, polygons) => {\n  let newpolygons = polygons.map((polygon) => {\n    const snapvertices = polygon.vertices.map((vertice) => vec3.snap(vec3.create(), vertice, epsilon))\n    // only retain unique vertices\n    const newvertices = []\n    for (let i = 0; i < snapvertices.length; i++) {\n      const j = (i + 1) % snapvertices.length\n      if (!vec3.equals(snapvertices[i], snapvertices[j])) newvertices.push(snapvertices[i])\n    }\n    const newpolygon = poly3.create(newvertices)\n    if (polygon.color) newpolygon.color = polygon.color\n    return newpolygon\n  })\n  // snap can produce polygons with zero (0) area, remove those\n  const epsilonArea = (epsilon * epsilon * Math.sqrt(3) / 4)\n  newpolygons = newpolygons.filter((polygon) => isValidPoly3(epsilonArea, polygon))\n  return newpolygons\n}\n\nmodule.exports = snapPolygons\n","const vec3 = require('../../maths/vec3')\nconst poly3 = require('../../geometries/poly3')\n\nconst triangulatePolygon = (epsilon, polygon, triangles) => {\n  const nv = polygon.vertices.length\n  if (nv > 3) {\n    if (nv > 4) {\n      // split the polygon using a midpoint\n      const midpoint = [0, 0, 0]\n      polygon.vertices.forEach((vertice) => vec3.add(midpoint, midpoint, vertice))\n      vec3.snap(midpoint, vec3.divide(midpoint, midpoint, [nv, nv, nv]), epsilon)\n      for (let i = 0; i < nv; i++) {\n        const poly = poly3.create([midpoint, polygon.vertices[i], polygon.vertices[(i + 1) % nv]])\n        if (polygon.color) poly.color = polygon.color\n        triangles.push(poly)\n      }\n      return\n    }\n    // exactly 4 vertices, use simple triangulation\n    const poly0 = poly3.create([polygon.vertices[0], polygon.vertices[1], polygon.vertices[2]])\n    const poly1 = poly3.create([polygon.vertices[0], polygon.vertices[2], polygon.vertices[3]])\n    if (polygon.color) {\n      poly0.color = polygon.color\n      poly1.color = polygon.color\n    }\n    triangles.push(poly0, poly1)\n    return\n  }\n  // exactly 3 vertices, so return the original\n  triangles.push(polygon)\n}\n\n/*\n * Convert the given polygons into a list of triangles (polygons with 3 vertices).\n * NOTE: this is possible because poly3 is CONVEX by definition\n */\nconst triangulatePolygons = (epsilon, polygons) => {\n  const triangles = []\n  polygons.forEach((polygon) => {\n    triangulatePolygon(epsilon, polygon, triangles)\n  })\n  return triangles\n}\n\nmodule.exports = triangulatePolygons\n","const flatten = require('../../utils/flatten')\nconst padArrayToLength = require('../../utils/padArrayToLength')\nconst measureAggregateBoundingBox = require('../../measurements/measureAggregateBoundingBox')\nconst { translate } = require('./translate')\n\nconst validateOptions = (options) => {\n  if (!Array.isArray(options.modes) || options.modes.length > 3) throw new Error('align(): modes must be an array of length <= 3')\n  options.modes = padArrayToLength(options.modes, 'none', 3)\n  if (options.modes.filter((mode) => ['center', 'max', 'min', 'none'].includes(mode)).length !== 3) throw new Error('align(): all modes must be one of \"center\", \"max\" or \"min\"')\n\n  if (!Array.isArray(options.relativeTo) || options.relativeTo.length > 3) throw new Error('align(): relativeTo must be an array of length <= 3')\n  options.relativeTo = padArrayToLength(options.relativeTo, 0, 3)\n  if (options.relativeTo.filter((alignVal) => (Number.isFinite(alignVal) || alignVal == null)).length !== 3) throw new Error('align(): all relativeTo values must be a number, or null.')\n\n  if (typeof options.grouped !== 'boolean') throw new Error('align(): grouped must be a boolean value.')\n\n  return options\n}\n\nconst populateRelativeToFromBounds = (relativeTo, modes, bounds) => {\n  for (let i = 0; i < 3; i++) {\n    if (relativeTo[i] == null) {\n      if (modes[i] === 'center') {\n        relativeTo[i] = (bounds[0][i] + bounds[1][i]) / 2\n      } else if (modes[i] === 'max') {\n        relativeTo[i] = bounds[1][i]\n      } else if (modes[i] === 'min') {\n        relativeTo[i] = bounds[0][i]\n      }\n    }\n  }\n  return relativeTo\n}\n\nconst alignGeometries = (geometry, modes, relativeTo) => {\n  const bounds = measureAggregateBoundingBox(geometry)\n  const translation = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    if (modes[i] === 'center') {\n      translation[i] = relativeTo[i] - (bounds[0][i] + bounds[1][i]) / 2\n    } else if (modes[i] === 'max') {\n      translation[i] = relativeTo[i] - bounds[1][i]\n    } else if (modes[i] === 'min') {\n      translation[i] = relativeTo[i] - bounds[0][i]\n    }\n  }\n\n  return translate(translation, geometry)\n}\n\n/**\n * Align the boundaries of the given geometries using the given options.\n * @param {Object} options - options for aligning\n * @param {Array} [options.modes = ['center', 'center', 'min']] - the point on the geometries to align to for each axis. Valid options are \"center\", \"max\", \"min\", and \"none\".\n * @param {Array} [options.relativeTo = [0,0,0]] - The point one each axis on which to align the geometries upon.  If the value is null, then the corresponding value from the group's bounding box is used.\n * @param {Boolean} [options.grouped = false] - if true, transform all geometries by the same amount, maintaining the relative positions to each other.\n * @param {...Object} geometries - the geometries to align\n * @return {Object|Array} the aligned geometry, or a list of aligned geometries\n * @alias module:modeling/transforms.align\n *\n * @example\n * let alignedGeometries = align({modes: ['min', 'center', 'none'], relativeTo: [10, null, 10], grouped: true }, geometries)\n */\nconst align = (options, ...geometries) => {\n  const defaults = {\n    modes: ['center', 'center', 'min'],\n    relativeTo: [0, 0, 0],\n    grouped: false\n  }\n  options = Object.assign({}, defaults, options)\n\n  options = validateOptions(options)\n  let { modes, relativeTo, grouped } = options\n  geometries = flatten(geometries)\n  if (geometries.length === 0) throw new Error('align(): No geometries were provided to act upon')\n\n  if (relativeTo.filter((val) => val == null).length) {\n    const bounds = measureAggregateBoundingBox(geometries)\n    relativeTo = populateRelativeToFromBounds(relativeTo, modes, bounds)\n  }\n  if (grouped) {\n    geometries = alignGeometries(geometries, modes, relativeTo)\n  } else {\n    geometries = geometries.map((geometry) => alignGeometries(geometry, modes, relativeTo))\n  }\n  return geometries.length === 1 ? geometries[0] : geometries\n}\n\nmodule.exports = align\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\nconst measureBoundingBox = require('../../measurements/measureBoundingBox')\n\nconst { translate } = require('./translate')\n\nconst centerGeometry = (options, object) => {\n  const defaults = {\n    axes: [true, true, true],\n    relativeTo: [0, 0, 0]\n  }\n  const { axes, relativeTo } = Object.assign({}, defaults, options)\n\n  const bounds = measureBoundingBox(object)\n  const offset = [0, 0, 0]\n  if (axes[0]) offset[0] = relativeTo[0] - (bounds[0][0] + ((bounds[1][0] - bounds[0][0]) / 2))\n  if (axes[1]) offset[1] = relativeTo[1] - (bounds[0][1] + ((bounds[1][1] - bounds[0][1]) / 2))\n  if (axes[2]) offset[2] = relativeTo[2] - (bounds[0][2] + ((bounds[1][2] - bounds[0][2]) / 2))\n  return translate(offset, object)\n}\n\n/**\n * Center the given objects using the given options.\n * @param {Object} options - options for centering\n * @param {Array} [options.axes=[true,true,true]] - axis of which to center, true or false\n * @param {Array} [options.relativeTo=[0,0,0]] - relative point of which to center the objects\n * @param {...Object} objects - the objects to center\n * @return {Object|Array} the centered object, or a list of centered objects\n * @alias module:modeling/transforms.center\n *\n * @example\n * let myshape = center({axes: [true,false,false]}, sphere()) // center about the X axis\n */\nconst center = (options, ...objects) => {\n  const defaults = {\n    axes: [true, true, true],\n    relativeTo: [0, 0, 0]\n  // TODO: Add additional 'methods' of centering: midpoint, centroid\n  }\n  const { axes, relativeTo } = Object.assign({}, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n  if (relativeTo.length !== 3) throw new Error('relativeTo must be an array of length 3')\n\n  options = { axes, relativeTo }\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return centerGeometry(options, object)\n    if (geom2.isA(object)) return centerGeometry(options, object)\n    if (geom3.isA(object)) return centerGeometry(options, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Center the given objects about the X axis.\n * @param {...Object} objects - the objects to center\n * @return {Object|Array} the centered object, or a list of centered objects\n * @alias module:modeling/transforms.centerX\n */\nconst centerX = (...objects) => center({ axes: [true, false, false] }, objects)\n\n/**\n * Center the given objects about the Y axis.\n * @param {...Object} objects - the objects to center\n * @return {Object|Array} the centered object, or a list of centered objects\n * @alias module:modeling/transforms.centerY\n */\nconst centerY = (...objects) => center({ axes: [false, true, false] }, objects)\n\n/**\n * Center the given objects about the Z axis.\n * @param {...Object} objects - the objects to center\n * @return {Object|Array} the centered object, or a list of centered objects\n * @alias module:modeling/transforms.centerZ\n */\nconst centerZ = (...objects) => center({ axes: [false, false, true] }, objects)\n\nmodule.exports = {\n  center,\n  centerX,\n  centerY,\n  centerZ\n}\n","/**\n * All shapes (primitives or the results of operations) can be transformed, such as scaled or rotated.\n * In all cases, the function returns the results, and never changes the original shapes.\n * @module modeling/transforms\n * @example\n * const { center, rotateX, translate } = require('@jscad/modeling').transforms\n */\nmodule.exports = {\n  align: require('./align'),\n\n  center: require('./center').center,\n  centerX: require('./center').centerX,\n  centerY: require('./center').centerY,\n  centerZ: require('./center').centerZ,\n\n  mirror: require('./mirror').mirror,\n  mirrorX: require('./mirror').mirrorX,\n  mirrorY: require('./mirror').mirrorY,\n  mirrorZ: require('./mirror').mirrorZ,\n\n  rotate: require('./rotate').rotate,\n  rotateX: require('./rotate').rotateX,\n  rotateY: require('./rotate').rotateY,\n  rotateZ: require('./rotate').rotateZ,\n\n  scale: require('./scale').scale,\n  scaleX: require('./scale').scaleX,\n  scaleY: require('./scale').scaleY,\n  scaleZ: require('./scale').scaleZ,\n\n  transform: require('./transform'),\n\n  translate: require('./translate').translate,\n  translateX: require('./translate').translateX,\n  translateY: require('./translate').translateY,\n  translateZ: require('./translate').translateZ\n}\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\nconst plane = require('../../maths/plane')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Mirror the given objects using the given options.\n * @param {Object} options - options for mirror\n * @param {Array} [options.origin=[0,0,0]] - the origin of the plane\n * @param {Array} [options.normal=[0,0,1]] - the normal vector of the plane\n * @param {...Object} objects - the objects to mirror\n * @return {Object|Array} the mirrored object, or a list of mirrored objects\n * @alias module:modeling/transforms.mirror\n *\n * @example\n * let myshape = mirror({normal: [0,0,10]}, cube({center: [0,0,15], radius: [20, 25, 5]}))\n */\nconst mirror = (options, ...objects) => {\n  const defaults = {\n    origin: [0, 0, 0],\n    normal: [0, 0, 1] // Z axis\n  }\n  const { origin, normal } = Object.assign({}, defaults, options)\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const planeOfMirror = plane.fromNormalAndPoint(plane.create(), normal, origin)\n  // verify the plane, i.e. check that the given normal was valid\n  if (Number.isNaN(planeOfMirror[0])) {\n    throw new Error('the given origin and normal do not define a proper plane')\n  }\n\n  const matrix = mat4.mirrorByPlane(mat4.create(), planeOfMirror)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Mirror the given objects about the X axis.\n * @param {...Object} objects - the objects to mirror\n * @return {Object|Array} the mirrored object, or a list of mirrored objects\n * @alias module:modeling/transforms.mirrorX\n */\nconst mirrorX = (...objects) => mirror({ normal: [1, 0, 0] }, objects)\n\n/**\n * Mirror the given objects about the Y axis.\n * @param {...Object} objects - the geometries to mirror\n * @return {Object|Array} the mirrored object, or a list of mirrored objects\n * @alias module:modeling/transforms.mirrorY\n */\nconst mirrorY = (...objects) => mirror({ normal: [0, 1, 0] }, objects)\n\n/**\n * Mirror the given objects about the Z axis.\n * @param {...Object} objects - the geometries to mirror\n * @return {Object|Array} the mirrored object, or a list of mirrored objects\n * @alias module:modeling/transforms.mirrorZ\n */\nconst mirrorZ = (...objects) => mirror({ normal: [0, 0, 1] }, objects)\n\nmodule.exports = {\n  mirror,\n  mirrorX,\n  mirrorY,\n  mirrorZ\n}\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Rotate the given objects using the given options.\n * @param {Array} angles - angle (RADIANS) of rotations about X, Y, and Z axis\n * @param {...Object} objects - the objects to rotate\n * @return {Object|Array} the rotated object, or a list of rotated objects\n * @alias module:modeling/transforms.rotate\n *\n * @example\n * const newsphere = rotate([TAU / 8, 0, 0], sphere())\n */\nconst rotate = (angles, ...objects) => {\n  if (!Array.isArray(angles)) throw new Error('angles must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the angles if necessary\n  angles = angles.slice() // don't modify the original\n  while (angles.length < 3) angles.push(0)\n\n  const yaw = angles[2]\n  const pitch = angles[1]\n  const roll = angles[0]\n\n  const matrix = mat4.fromTaitBryanRotation(mat4.create(), yaw, pitch, roll)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Rotate the given objects about the X axis, using the given options.\n * @param {Number} angle - angle (RADIANS) of rotations about X\n * @param {...Object} objects - the objects to rotate\n * @return {Object|Array} the rotated object, or a list of rotated objects\n * @alias module:modeling/transforms.rotateX\n */\nconst rotateX = (angle, ...objects) => rotate([angle, 0, 0], objects)\n\n/**\n * Rotate the given objects about the Y axis, using the given options.\n * @param {Number} angle - angle (RADIANS) of rotations about Y\n * @param {...Object} objects - the objects to rotate\n * @return {Object|Array} the rotated object, or a list of rotated objects\n * @alias module:modeling/transforms.rotateY\n */\nconst rotateY = (angle, ...objects) => rotate([0, angle, 0], objects)\n\n/**\n * Rotate the given objects about the Z axis, using the given options.\n * @param {Number} angle - angle (RADIANS) of rotations about Z\n * @param {...Object} objects - the objects to rotate\n * @return {Object|Array} the rotated object, or a list of rotated objects\n * @alias module:modeling/transforms.rotateZ\n */\nconst rotateZ = (angle, ...objects) => rotate([0, 0, angle], objects)\n\nmodule.exports = {\n  rotate,\n  rotateX,\n  rotateY,\n  rotateZ\n}\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Scale the given objects using the given options.\n * @param {Array} factors - X, Y, Z factors by which to scale the objects\n * @param {...Object} objects - the objects to scale\n * @return {Object|Array} the scaled object, or a list of scaled objects\n * @alias module:modeling/transforms.scale\n *\n * @example\n * let myshape = scale([5, 0, 10], sphere())\n */\nconst scale = (factors, ...objects) => {\n  if (!Array.isArray(factors)) throw new Error('factors must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the factors if necessary\n  factors = factors.slice() // don't modify the original\n  while (factors.length < 3) factors.push(1)\n\n  if (factors[0] <= 0 || factors[1] <= 0 || factors[2] <= 0) throw new Error('factors must be positive')\n\n  const matrix = mat4.fromScaling(mat4.create(), factors)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Scale the given objects about the X axis using the given options.\n * @param {Number} factor - X factor by which to scale the objects\n * @param {...Object} objects - the objects to scale\n * @return {Object|Array} the scaled object, or a list of scaled objects\n * @alias module:modeling/transforms.scaleX\n */\nconst scaleX = (factor, ...objects) => scale([factor, 1, 1], objects)\n\n/**\n * Scale the given objects about the Y axis using the given options.\n * @param {Number} factor - Y factor by which to scale the objects\n * @param {...Object} objects - the objects to scale\n * @return {Object|Array} the scaled object, or a list of scaled objects\n * @alias module:modeling/transforms.scaleY\n */\nconst scaleY = (factor, ...objects) => scale([1, factor, 1], objects)\n\n/**\n * Scale the given objects about the Z axis using the given options.\n * @param {Number} factor - Z factor by which to scale the objects\n * @param {...Object} objects - the objects to scale\n * @return {Object|Array} the scaled object, or a list of scaled objects\n * @alias module:modeling/transforms.scaleZ\n */\nconst scaleZ = (factor, ...objects) => scale([1, 1, factor], objects)\n\nmodule.exports = {\n  scale,\n  scaleX,\n  scaleY,\n  scaleZ\n}\n","const flatten = require('../../utils/flatten')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Transform the given objects using the given matrix.\n * @param {mat4} matrix - a transformation matrix\n * @param {...Object} objects - the objects to transform\n * @return {Object|Array} the transformed object, or a list of transformed objects\n * @alias module:modeling/transforms.transform\n *\n * @example\n * const newsphere = transform(mat4.rotateX(TAU / 8), sphere())\n */\nconst transform = (matrix, ...objects) => {\n  // TODO how to check that the matrix is REAL?\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\nmodule.exports = transform\n","const flatten = require('../../utils/flatten')\n\nconst mat4 = require('../../maths/mat4')\n\nconst geom2 = require('../../geometries/geom2')\nconst geom3 = require('../../geometries/geom3')\nconst path2 = require('../../geometries/path2')\n\n/**\n * Translate the given objects using the given options.\n * @param {Array} offset - offset (vector) of which to translate the objects\n * @param {...Object} objects - the objects to translate\n * @return {Object|Array} the translated object, or a list of translated objects\n * @alias module:modeling/transforms.translate\n *\n * @example\n * const newsphere = translate([5, 0, 10], sphere())\n */\nconst translate = (offset, ...objects) => {\n  if (!Array.isArray(offset)) throw new Error('offset must be an array')\n\n  objects = flatten(objects)\n  if (objects.length === 0) throw new Error('wrong number of arguments')\n\n  // adjust the offset if necessary\n  offset = offset.slice() // don't modify the original\n  while (offset.length < 3) offset.push(0)\n\n  const matrix = mat4.fromTranslation(mat4.create(), offset)\n\n  const results = objects.map((object) => {\n    if (path2.isA(object)) return path2.transform(matrix, object)\n    if (geom2.isA(object)) return geom2.transform(matrix, object)\n    if (geom3.isA(object)) return geom3.transform(matrix, object)\n    return object\n  })\n  return results.length === 1 ? results[0] : results\n}\n\n/**\n * Translate the given objects along the X axis using the given options.\n * @param {Number} offset - X offset of which to translate the objects\n * @param {...Object} objects - the objects to translate\n * @return {Object|Array} the translated object, or a list of translated objects\n * @alias module:modeling/transforms.translateX\n */\nconst translateX = (offset, ...objects) => translate([offset, 0, 0], objects)\n\n/**\n * Translate the given objects along the Y axis using the given options.\n * @param {Number} offset - Y offset of which to translate the geometries\n * @param {...Object} objects - the objects to translate\n * @return {Object|Array} the translated object, or a list of translated objects\n * @alias module:modeling/transforms.translateY\n */\nconst translateY = (offset, ...objects) => translate([0, offset, 0], objects)\n\n/**\n * Translate the given objects along the Z axis using the given options.\n * @param {Number} offset - Z offset of which to translate the geometries\n * @param {...Object} objects - the objects to translate\n * @return {Object|Array} the translated object, or a list of translated objects\n * @alias module:modeling/transforms.translateZ\n */\nconst translateZ = (offset, ...objects) => translate([0, 0, offset], objects)\n\nmodule.exports = {\n  translate,\n  translateX,\n  translateY,\n  translateZ\n}\n","const { EPS, TAU } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\n\nconst path2 = require('../geometries/path2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an arc in two dimensional space where all points are at the same distance from the center.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of arc\n * @param {Number} [options.radius=1] - radius of arc\n * @param {Number} [options.startAngle=0] - starting angle of the arc, in radians\n * @param {Number} [options.endAngle=TAU] - ending angle of the arc, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @param {Boolean} [options.makeTangent=false] - adds line segments at both ends of the arc to ensure that the gradients at the edges are tangent\n * @returns {path2} new 2D path\n * @alias module:modeling/primitives.arc\n */\nconst arc = (options) => {\n  const defaults = {\n    center: [0, 0],\n    radius: 1,\n    startAngle: 0,\n    endAngle: TAU,\n    makeTangent: false,\n    segments: 32\n  }\n  let { center, radius, startAngle, endAngle, makeTangent, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGTE(endAngle, 0)) throw new Error('endAngle must be positive')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  startAngle = startAngle % TAU\n  endAngle = endAngle % TAU\n\n  let rotation = TAU\n  if (startAngle < endAngle) {\n    rotation = endAngle - startAngle\n  }\n  if (startAngle > endAngle) {\n    rotation = endAngle + (TAU - startAngle)\n  }\n\n  const minangle = Math.acos(((radius * radius) + (radius * radius) - (EPS * EPS)) / (2 * radius * radius))\n\n  const centerv = vec2.clone(center)\n  let point\n  const pointArray = []\n  if (rotation < minangle) {\n    // there is no rotation, just a single point\n    point = vec2.fromAngleRadians(vec2.create(), startAngle)\n    vec2.scale(point, point, radius)\n    vec2.add(point, point, centerv)\n    pointArray.push(point)\n  } else {\n    // note: add one additional step to acheive full rotation\n    const numsteps = Math.max(1, Math.floor(segments * (rotation / TAU))) + 1\n    let edgestepsize = numsteps * 0.5 / rotation // step size for half a degree\n    if (edgestepsize > 0.25) edgestepsize = 0.25\n\n    const totalsteps = makeTangent ? (numsteps + 2) : numsteps\n    for (let i = 0; i <= totalsteps; i++) {\n      let step = i\n      if (makeTangent) {\n        step = (i - 1) * (numsteps - 2 * edgestepsize) / numsteps + edgestepsize\n        if (step < 0) step = 0\n        if (step > numsteps) step = numsteps\n      }\n      const angle = startAngle + (step * (rotation / numsteps))\n      point = vec2.fromAngleRadians(vec2.create(), angle)\n      vec2.scale(point, point, radius)\n      vec2.add(point, point, centerv)\n      pointArray.push(point)\n    }\n  }\n  return path2.fromPoints({ closed: false }, pointArray)\n}\n\nmodule.exports = arc\n","const { TAU } = require('../maths/constants')\n\nconst ellipse = require('./ellipse')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct a circle in two dimensional space where all points are at the same distance from the center.\n * @see [ellipse]{@link module:modeling/primitives.ellipse} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of circle\n * @param {Number} [options.radius=1] - radius of circle\n * @param {Number} [options.startAngle=0] - start angle of circle, in radians\n * @param {Number} [options.endAngle=TAU] - end angle of circle, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.circle\n * @example\n * let myshape = circle({radius: 10})\n */\nconst circle = (options) => {\n  const defaults = {\n    center: [0, 0],\n    radius: 1,\n    startAngle: 0,\n    endAngle: TAU,\n    segments: 32\n  }\n  let { center, radius, startAngle, endAngle, segments } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n\n  radius = [radius, radius]\n\n  return ellipse({ center, radius, startAngle, endAngle, segments })\n}\n\nmodule.exports = circle\n","// verify that the array has the given dimension, and contains Number values\nconst isNumberArray = (array, dimension) => {\n  if (Array.isArray(array) && array.length >= dimension) {\n    return array.every((n) => Number.isFinite(n))\n  }\n  return false\n}\n\n// verify that the value is a Number greater than the constant\nconst isGT = (value, constant) => (Number.isFinite(value) && value > constant)\n\n// verify that the value is a Number greater than or equal to the constant\nconst isGTE = (value, constant) => (Number.isFinite(value) && value >= constant)\n\nmodule.exports = {\n  isNumberArray,\n  isGT,\n  isGTE\n}\n","const cuboid = require('./cuboid')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned solid cube in three dimensional space with six square faces.\n * @see [cuboid]{@link module:modeling/primitives.cuboid} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cube\n * @param {Number} [options.size=2] - dimension of cube\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.cube\n * @example\n * let myshape = cube({size: 10})\n */\nconst cube = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    size: 2\n  }\n  let { center, size } = Object.assign({}, defaults, options)\n\n  if (!isGT(size, 0)) throw new Error('size must be greater than zero')\n\n  size = [size, size, size]\n\n  return cuboid({ center, size })\n}\n\nmodule.exports = cube\n","const geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned solid cuboid in three dimensional space.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cuboid\n * @param {Array} [options.size=[2,2,2]] - dimensions of cuboid; width, depth, height\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.cuboid\n *\n * @example\n * let myshape = cuboid({size: [5, 10, 5]})\n */\nconst cuboid = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    size: [2, 2, 2]\n  }\n  const { center, size } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isNumberArray(size, 3)) throw new Error('size must be an array of width, depth and height values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n\n  const result = geom3.create(\n    // adjust a basic shape to size\n    [\n      [[0, 4, 6, 2], [-1, 0, 0]],\n      [[1, 3, 7, 5], [+1, 0, 0]],\n      [[0, 1, 5, 4], [0, -1, 0]],\n      [[2, 6, 7, 3], [0, +1, 0]],\n      [[0, 2, 3, 1], [0, 0, -1]],\n      [[4, 5, 7, 6], [0, 0, +1]]\n    ].map((info) => {\n      const points = info[0].map((i) => {\n        const pos = [\n          center[0] + (size[0] / 2) * (2 * !!(i & 1) - 1),\n          center[1] + (size[1] / 2) * (2 * !!(i & 2) - 1),\n          center[2] + (size[2] / 2) * (2 * !!(i & 4) - 1)\n        ]\n        return pos\n      })\n      return poly3.create(points)\n    })\n  )\n  return result\n}\n\nmodule.exports = cuboid\n","const cylinderElliptic = require('./cylinderElliptic')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct a Z axis-aligned cylinder in three dimensional space.\n * @see [cylinderElliptic]{@link module:modeling/primitives.cylinderElliptic} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cylinder\n * @param {Number} [options.height=2] - height of cylinder\n * @param {Number} [options.radius=1] - radius of cylinder (at both start and end)\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new geometry\n * @alias module:modeling/primitives.cylinder\n *\n * @example\n * let myshape = cylinder({height: 2, radius: 10})\n */\nconst cylinder = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    height: 2,\n    radius: 1,\n    segments: 32\n  }\n  const { center, height, radius, segments } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n\n  const newoptions = {\n    center,\n    height,\n    startRadius: [radius, radius],\n    endRadius: [radius, radius],\n    segments\n  }\n\n  return cylinderElliptic(newoptions)\n}\n\nmodule.exports = cylinder\n","const { EPS, TAU } = require('../maths/constants')\n\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { sin, cos } = require('../maths/utils/trigonometry')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct a Z axis-aligned elliptic cylinder in three dimensional space.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cylinder\n * @param {Number} [options.height=2] - height of cylinder\n * @param {Array} [options.startRadius=[1,1]] - radius of rounded start, must be two dimensional array\n * @param {Number} [options.startAngle=0] - start angle of cylinder, in radians\n * @param {Array} [options.endRadius=[1,1]] - radius of rounded end, must be two dimensional array\n * @param {Number} [options.endAngle=TAU] - end angle of cylinder, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new geometry\n * @alias module:modeling/primitives.cylinderElliptic\n *\n * @example\n * let myshape = cylinderElliptic({height: 2, startRadius: [10,5], endRadius: [8,3]})\n */\nconst cylinderElliptic = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    height: 2,\n    startRadius: [1, 1],\n    startAngle: 0,\n    endRadius: [1, 1],\n    endAngle: TAU,\n    segments: 32\n  }\n  let { center, height, startRadius, startAngle, endRadius, endAngle, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isGT(height, 0)) throw new Error('height must be greater then zero')\n  if (!isNumberArray(startRadius, 2)) throw new Error('startRadius must be an array of X and Y values')\n  if (!startRadius.every((n) => n >= 0)) throw new Error('startRadius values must be positive')\n  if (!isNumberArray(endRadius, 2)) throw new Error('endRadius must be an array of X and Y values')\n  if (!endRadius.every((n) => n >= 0)) throw new Error('endRadius values must be positive')\n  if (endRadius.every((n) => n === 0) && startRadius.every((n) => n === 0)) throw new Error('at least one radius must be positive')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGTE(endAngle, 0)) throw new Error('endAngle must be positive')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  startAngle = startAngle % TAU\n  endAngle = endAngle % TAU\n\n  let rotation = TAU\n  if (startAngle < endAngle) {\n    rotation = endAngle - startAngle\n  }\n  if (startAngle > endAngle) {\n    rotation = endAngle + (TAU - startAngle)\n  }\n\n  const minradius = Math.min(startRadius[0], startRadius[1], endRadius[0], endRadius[1])\n  const minangle = Math.acos(((minradius * minradius) + (minradius * minradius) - (EPS * EPS)) /\n                            (2 * minradius * minradius))\n  if (rotation < minangle) throw new Error('startAngle and endAngle do not define a significant rotation')\n\n  const slices = Math.floor(segments * (rotation / TAU))\n\n  const start = vec3.fromValues(0, 0, -(height / 2))\n  const end = vec3.fromValues(0, 0, height / 2)\n  const ray = vec3.subtract(vec3.create(), end, start)\n\n  const axisX = vec3.fromValues(1, 0, 0)\n  const axisY = vec3.fromValues(0, 1, 0)\n\n  const v1 = vec3.create()\n  const v2 = vec3.create()\n  const v3 = vec3.create()\n  const point = (stack, slice, radius) => {\n    const angle = slice * rotation + startAngle\n    vec3.scale(v1, axisX, radius[0] * cos(angle))\n    vec3.scale(v2, axisY, radius[1] * sin(angle))\n    vec3.add(v1, v1, v2)\n\n    vec3.scale(v3, ray, stack)\n    vec3.add(v3, v3, start)\n    return vec3.add(vec3.create(), v1, v3)\n  }\n\n  // adjust the points to center\n  const fromPoints = (...points) => {\n    const newpoints = points.map((point) => vec3.add(vec3.create(), point, center))\n    return poly3.create(newpoints)\n  }\n\n  const polygons = []\n  for (let i = 0; i < slices; i++) {\n    const t0 = i / slices\n    let t1 = (i + 1) / slices\n    // fix rounding error when rotating TAU radians\n    if (rotation === TAU && i === slices - 1) t1 = 0\n\n    if (endRadius[0] === startRadius[0] && endRadius[1] === startRadius[1]) {\n      polygons.push(fromPoints(start, point(0, t1, endRadius), point(0, t0, endRadius)))\n      polygons.push(fromPoints(point(0, t1, endRadius), point(1, t1, endRadius), point(1, t0, endRadius), point(0, t0, endRadius)))\n      polygons.push(fromPoints(end, point(1, t0, endRadius), point(1, t1, endRadius)))\n    } else {\n      if (startRadius[0] > 0 && startRadius[1] > 0) {\n        polygons.push(fromPoints(start, point(0, t1, startRadius), point(0, t0, startRadius)))\n      }\n      if (startRadius[0] > 0 || startRadius[1] > 0) {\n        polygons.push(fromPoints(point(0, t0, startRadius), point(0, t1, startRadius), point(1, t0, endRadius)))\n      }\n      if (endRadius[0] > 0 && endRadius[1] > 0) {\n        polygons.push(fromPoints(end, point(1, t0, endRadius), point(1, t1, endRadius)))\n      }\n      if (endRadius[0] > 0 || endRadius[1] > 0) {\n        polygons.push(fromPoints(point(1, t0, endRadius), point(0, t1, startRadius), point(1, t1, endRadius)))\n      }\n    }\n  }\n  if (rotation < TAU) {\n    polygons.push(fromPoints(start, point(0, 0, startRadius), end))\n    polygons.push(fromPoints(point(0, 0, startRadius), point(1, 0, endRadius), end))\n    polygons.push(fromPoints(start, end, point(0, 1, startRadius)))\n    polygons.push(fromPoints(point(0, 1, startRadius), end, point(1, 1, endRadius)))\n  }\n  const result = geom3.create(polygons)\n  return result\n}\n\nmodule.exports = cylinderElliptic\n","const { EPS, TAU } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { sin, cos } = require('../maths/utils/trigonometry')\n\nconst { isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned ellipse in two dimensional space.\n * @see https://en.wikipedia.org/wiki/Ellipse\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of ellipse\n * @param {Array} [options.radius=[1,1]] - radius of ellipse, along X and Y\n * @param {Number} [options.startAngle=0] - start angle of ellipse, in radians\n * @param {Number} [options.endAngle=TAU] - end angle of ellipse, in radians\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.ellipse\n * @example\n * let myshape = ellipse({radius: [5,10]})\n */\nconst ellipse = (options) => {\n  const defaults = {\n    center: [0, 0],\n    radius: [1, 1],\n    startAngle: 0,\n    endAngle: TAU,\n    segments: 32\n  }\n  let { center, radius, startAngle, endAngle, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isNumberArray(radius, 2)) throw new Error('radius must be an array of X and Y values')\n  if (!radius.every((n) => n > 0)) throw new Error('radius values must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGTE(endAngle, 0)) throw new Error('endAngle must be positive')\n  if (!isGTE(segments, 3)) throw new Error('segments must be three or more')\n\n  startAngle = startAngle % TAU\n  endAngle = endAngle % TAU\n\n  let rotation = TAU\n  if (startAngle < endAngle) {\n    rotation = endAngle - startAngle\n  }\n  if (startAngle > endAngle) {\n    rotation = endAngle + (TAU - startAngle)\n  }\n\n  const minradius = Math.min(radius[0], radius[1])\n  const minangle = Math.acos(((minradius * minradius) + (minradius * minradius) - (EPS * EPS)) /\n                            (2 * minradius * minradius))\n  if (rotation < minangle) throw new Error('startAngle and endAngle do not define a significant rotation')\n\n  segments = Math.floor(segments * (rotation / TAU))\n\n  const centerv = vec2.clone(center)\n  const step = rotation / segments // radians per segment\n\n  const points = []\n  segments = (rotation < TAU) ? segments + 1 : segments\n  for (let i = 0; i < segments; i++) {\n    const angle = (step * i) + startAngle\n    const point = vec2.fromValues(radius[0] * cos(angle), radius[1] * sin(angle))\n    vec2.add(point, centerv, point)\n    points.push(point)\n  }\n  if (rotation < TAU) points.push(centerv)\n  return geom2.fromPoints(points)\n}\n\nmodule.exports = ellipse\n","const { TAU } = require('../maths/constants')\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { sin, cos } = require('../maths/utils/trigonometry')\n\nconst { isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned ellipsoid in three dimensional space.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of ellipsoid\n * @param {Array} [options.radius=[1,1,1]] - radius of ellipsoid, along X, Y and Z\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @param {Array} [options.axes] -  an array with three vectors for the x, y and z base vectors\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.ellipsoid\n *\n * @example\n * let myshape = ellipsoid({radius: [5, 10, 20]})\n*/\nconst ellipsoid = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    radius: [1, 1, 1],\n    segments: 32,\n    axes: [[1, 0, 0], [0, -1, 0], [0, 0, 1]]\n  }\n  const { center, radius, segments, axes } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isNumberArray(radius, 3)) throw new Error('radius must be an array of X, Y and Z values')\n  if (!radius.every((n) => n > 0)) throw new Error('radius values must be greater than zero')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  const xvector = vec3.scale(vec3.create(), vec3.normalize(vec3.create(), axes[0]), radius[0])\n  const yvector = vec3.scale(vec3.create(), vec3.normalize(vec3.create(), axes[1]), radius[1])\n  const zvector = vec3.scale(vec3.create(), vec3.normalize(vec3.create(), axes[2]), radius[2])\n\n  const qsegments = Math.round(segments / 4)\n  let prevcylinderpoint\n  const polygons = []\n  const p1 = vec3.create()\n  const p2 = vec3.create()\n  for (let slice1 = 0; slice1 <= segments; slice1++) {\n    const angle = TAU * slice1 / segments\n    const cylinderpoint = vec3.add(vec3.create(), vec3.scale(p1, xvector, cos(angle)), vec3.scale(p2, yvector, sin(angle)))\n    if (slice1 > 0) {\n      let prevcospitch, prevsinpitch\n      for (let slice2 = 0; slice2 <= qsegments; slice2++) {\n        const pitch = TAU / 4 * slice2 / qsegments\n        const cospitch = cos(pitch)\n        const sinpitch = sin(pitch)\n        if (slice2 > 0) {\n          let points = []\n          let point\n          point = vec3.subtract(vec3.create(), vec3.scale(p1, prevcylinderpoint, prevcospitch), vec3.scale(p2, zvector, prevsinpitch))\n          points.push(vec3.add(point, point, center))\n          point = vec3.subtract(vec3.create(), vec3.scale(p1, cylinderpoint, prevcospitch), vec3.scale(p2, zvector, prevsinpitch))\n          points.push(vec3.add(point, point, center))\n          if (slice2 < qsegments) {\n            point = vec3.subtract(vec3.create(), vec3.scale(p1, cylinderpoint, cospitch), vec3.scale(p2, zvector, sinpitch))\n            points.push(vec3.add(point, point, center))\n          }\n          point = vec3.subtract(vec3.create(), vec3.scale(p1, prevcylinderpoint, cospitch), vec3.scale(p2, zvector, sinpitch))\n          points.push(vec3.add(point, point, center))\n\n          polygons.push(poly3.create(points))\n\n          points = []\n          point = vec3.add(vec3.create(), vec3.scale(p1, prevcylinderpoint, prevcospitch), vec3.scale(p2, zvector, prevsinpitch))\n          points.push(vec3.add(vec3.create(), center, point))\n          point = vec3.add(point, vec3.scale(p1, cylinderpoint, prevcospitch), vec3.scale(p2, zvector, prevsinpitch))\n          points.push(vec3.add(vec3.create(), center, point))\n          if (slice2 < qsegments) {\n            point = vec3.add(point, vec3.scale(p1, cylinderpoint, cospitch), vec3.scale(p2, zvector, sinpitch))\n            points.push(vec3.add(vec3.create(), center, point))\n          }\n          point = vec3.add(point, vec3.scale(p1, prevcylinderpoint, cospitch), vec3.scale(p2, zvector, sinpitch))\n          points.push(vec3.add(vec3.create(), center, point))\n          points.reverse()\n\n          polygons.push(poly3.create(points))\n        }\n        prevcospitch = cospitch\n        prevsinpitch = sinpitch\n      }\n    }\n    prevcylinderpoint = cylinderpoint\n  }\n  return geom3.create(polygons)\n}\n\nmodule.exports = ellipsoid\n","const mat4 = require('../maths/mat4')\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\n\nconst polyhedron = require('./polyhedron')\n\nconst { isGT, isGTE } = require('./commonChecks')\n\n/**\n * Construct a geodesic sphere based on icosahedron symmetry.\n * @param {Object} [options] - options for construction\n * @param {Number} [options.radius=1] - target radius of sphere\n * @param {Number} [options.frequency=6] - subdivision frequency per face, multiples of 6\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.geodesicSphere\n *\n * @example\n * let myshape = geodesicSphere({radius: 15, frequency: 18})\n */\nconst geodesicSphere = (options) => {\n  const defaults = {\n    radius: 1,\n    frequency: 6\n  }\n  let { radius, frequency } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n  if (!isGTE(frequency, 6)) throw new Error('frequency must be six or more')\n\n  // adjust the frequency to base 6\n  frequency = Math.floor(frequency / 6)\n\n  const ci = [ // hard-coded data of icosahedron (20 faces, all triangles)\n    [0.850651, 0.000000, -0.525731],\n    [0.850651, -0.000000, 0.525731],\n    [-0.850651, -0.000000, 0.525731],\n    [-0.850651, 0.000000, -0.525731],\n    [0.000000, -0.525731, 0.850651],\n    [0.000000, 0.525731, 0.850651],\n    [0.000000, 0.525731, -0.850651],\n    [0.000000, -0.525731, -0.850651],\n    [-0.525731, -0.850651, -0.000000],\n    [0.525731, -0.850651, -0.000000],\n    [0.525731, 0.850651, 0.000000],\n    [-0.525731, 0.850651, 0.000000]]\n\n  const ti = [[0, 9, 1], [1, 10, 0], [6, 7, 0], [10, 6, 0], [7, 9, 0], [5, 1, 4], [4, 1, 9], [5, 10, 1], [2, 8, 3], [3, 11, 2], [2, 5, 4],\n    [4, 8, 2], [2, 11, 5], [3, 7, 6], [6, 11, 3], [8, 7, 3], [9, 8, 4], [11, 10, 5], [10, 11, 6], [8, 9, 7]]\n\n  const geodesicSubDivide = (p, frequency, offset) => {\n    const p1 = p[0]\n    const p2 = p[1]\n    const p3 = p[2]\n    let n = offset\n    const c = []\n    const f = []\n\n    //           p3\n    //           /\\\n    //          /__\\     frequency = 3\n    //      i  /\\  /\\\n    //        /__\\/__\\       total triangles = 9 (frequency*frequency)\n    //       /\\  /\\  /\\\n    //     0/__\\/__\\/__\\\n    //    p1 0   j      p2\n\n    for (let i = 0; i < frequency; i++) {\n      for (let j = 0; j < frequency - i; j++) {\n        const t0 = i / frequency\n        const t1 = (i + 1) / frequency\n        const s0 = j / (frequency - i)\n        const s1 = (j + 1) / (frequency - i)\n        const s2 = frequency - i - 1 ? j / (frequency - i - 1) : 1\n        const q = []\n\n        q[0] = mix3(mix3(p1, p2, s0), p3, t0)\n        q[1] = mix3(mix3(p1, p2, s1), p3, t0)\n        q[2] = mix3(mix3(p1, p2, s2), p3, t1)\n\n        // -- normalize\n        for (let k = 0; k < 3; k++) {\n          const r = vec3.length(q[k])\n          for (let l = 0; l < 3; l++) {\n            q[k][l] /= r\n          }\n        }\n        c.push(q[0], q[1], q[2])\n        f.push([n, n + 1, n + 2]); n += 3\n\n        if (j < frequency - i - 1) {\n          const s3 = frequency - i - 1 ? (j + 1) / (frequency - i - 1) : 1\n          q[0] = mix3(mix3(p1, p2, s1), p3, t0)\n          q[1] = mix3(mix3(p1, p2, s3), p3, t1)\n          q[2] = mix3(mix3(p1, p2, s2), p3, t1)\n\n          // -- normalize\n          for (let k = 0; k < 3; k++) {\n            const r = vec3.length(q[k])\n            for (let l = 0; l < 3; l++) {\n              q[k][l] /= r\n            }\n          }\n          c.push(q[0], q[1], q[2])\n          f.push([n, n + 1, n + 2]); n += 3\n        }\n      }\n    }\n    return { points: c, triangles: f, offset: n }\n  }\n\n  const mix3 = (a, b, f) => {\n    const _f = 1 - f\n    const c = []\n    for (let i = 0; i < 3; i++) {\n      c[i] = a[i] * _f + b[i] * f\n    }\n    return c\n  }\n\n  let points = []\n  let faces = []\n  let offset = 0\n\n  for (let i = 0; i < ti.length; i++) {\n    const g = geodesicSubDivide([ci[ti[i][0]], ci[ti[i][1]], ci[ti[i][2]]], frequency, offset)\n    points = points.concat(g.points)\n    faces = faces.concat(g.triangles)\n    offset = g.offset\n  }\n\n  let geometry = polyhedron({ points: points, faces: faces, orientation: 'inward' })\n  if (radius !== 1) geometry = geom3.transform(mat4.fromScaling(mat4.create(), [radius, radius, radius]), geometry)\n  return geometry\n}\n\nmodule.exports = geodesicSphere\n","/**\n * Primitives provide the building blocks for complex parts.\n * Each primitive is a geometrical object that can be described mathematically, and therefore precise.\n * Primitives can be logically combined, transformed, extruded, etc.\n * @module modeling/primitives\n * @example\n * const { cube, ellipse, star } = require('@jscad/modeling').primitives\n */\nmodule.exports = {\n  arc: require('./arc'),\n  circle: require('./circle'),\n  cube: require('./cube'),\n  cuboid: require('./cuboid'),\n  cylinder: require('./cylinder'),\n  cylinderElliptic: require('./cylinderElliptic'),\n  ellipse: require('./ellipse'),\n  ellipsoid: require('./ellipsoid'),\n  geodesicSphere: require('./geodesicSphere'),\n  line: require('./line'),\n  polygon: require('./polygon'),\n  polyhedron: require('./polyhedron'),\n  rectangle: require('./rectangle'),\n  roundedCuboid: require('./roundedCuboid'),\n  roundedCylinder: require('./roundedCylinder'),\n  roundedRectangle: require('./roundedRectangle'),\n  sphere: require('./sphere'),\n  square: require('./square'),\n  star: require('./star'),\n  torus: require('./torus'),\n  triangle: require('./triangle')\n}\n","const path2 = require('../geometries/path2')\n\n/**\n * Construct a new line in two dimensional space from the given points.\n * The points must be provided as an array, where each element is a 2D point.\n * @param {Array} points - array of points from which to create the path\n * @returns {path2} new 2D path\n * @alias module:modeling/primitives.line\n *\n * @example\n * let myshape = line([[10, 10], [-10, 10]])\n */\nconst line = (points) => {\n  if (!Array.isArray(points)) throw new Error('points must be an array')\n\n  return path2.fromPoints({}, points)\n}\n\nmodule.exports = line\n","const geom2 = require('../geometries/geom2')\n\n/**\n * Construct a polygon in two dimensional space from a list of points, or a list of points and paths.\n * NOTE: The ordering of points is VERY IMPORTANT.\n * @param {Object} options - options for construction\n * @param {Array} options.points - points of the polygon : either flat or nested array of 2D points\n * @param {Array} [options.paths] - paths of the polygon : either flat or nested array of point indexes\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.polygon\n *\n * @example\n * let roof = [[10,11], [0,11], [5,20]]\n * let wall = [[0,0], [10,0], [10,10], [0,10]]\n *\n * let poly = polygon({ points: roof })\n * or\n * let poly = polygon({ points: [roof, wall] })\n * or\n * let poly = polygon({ points: roof, paths: [0, 1, 2] })\n * or\n * let poly = polygon({ points: [roof, wall], paths: [[0, 1, 2], [3, 4, 5, 6]] })\n */\nconst polygon = (options) => {\n  const defaults = {\n    points: [],\n    paths: []\n  }\n  const { points, paths } = Object.assign({}, defaults, options)\n\n  if (!(Array.isArray(points) && Array.isArray(paths))) throw new Error('points and paths must be arrays')\n\n  let listofpolys = points\n  if (Array.isArray(points[0])) {\n    if (!Array.isArray(points[0][0])) {\n      // points is an array of something... convert to list\n      listofpolys = [points]\n    }\n  }\n\n  listofpolys.forEach((list, i) => {\n    if (!Array.isArray(list)) throw new Error('list of points ' + i + ' must be an array')\n    if (list.length < 3) throw new Error('list of points ' + i + ' must contain three or more points')\n    list.forEach((point, j) => {\n      if (!Array.isArray(point)) throw new Error('list of points ' + i + ', point ' + j + ' must be an array')\n      if (point.length < 2) throw new Error('list of points ' + i + ', point ' + j + ' must contain by X and Y values')\n    })\n  })\n\n  let listofpaths = paths\n  if (paths.length === 0) {\n    // create a list of paths based on the points\n    let count = 0\n    listofpaths = listofpolys.map((list) => list.map((point) => count++))\n  }\n\n  // flatten the listofpoints for indexed access\n  const allpoints = []\n  listofpolys.forEach((list) => list.forEach((point) => allpoints.push(point)))\n\n  let sides = []\n  listofpaths.forEach((path) => {\n    const setofpoints = path.map((index) => allpoints[index])\n    const geometry = geom2.fromPoints(setofpoints)\n    sides = sides.concat(geom2.toSides(geometry))\n  })\n  return geom2.create(sides)\n}\n\nmodule.exports = polygon\n","const geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { isNumberArray } = require('./commonChecks')\n\n/**\n * Construct a polyhedron in three dimensional space from the given set of 3D points and faces.\n * The faces can define outward or inward facing polygons (orientation).\n * However, each face must define a counter clockwise rotation of points which follows the right hand rule.\n * @param {Object} options - options for construction\n * @param {Array} options.points - list of points in 3D space\n * @param {Array} options.faces - list of faces, where each face is a set of indexes into the points\n * @param {Array} [options.colors=undefined] - list of RGBA colors to apply to each face\n * @param {String} [options.orientation='outward'] - orientation of faces\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.polyhedron\n *\n * @example\n * let mypoints = [ [10, 10, 0], [10, -10, 0], [-10, -10, 0], [-10, 10, 0], [0, 0, 10] ]\n * let myfaces = [ [0, 1, 4], [1, 2, 4], [2, 3, 4], [3, 0, 4], [1, 0, 3], [2, 1, 3] ]\n * let myshape = polyhedron({points: mypoint, faces: myfaces, orientation: 'inward'})\n */\nconst polyhedron = (options) => {\n  const defaults = {\n    points: [],\n    faces: [],\n    colors: undefined,\n    orientation: 'outward'\n  }\n  const { points, faces, colors, orientation } = Object.assign({}, defaults, options)\n\n  if (!(Array.isArray(points) && Array.isArray(faces))) {\n    throw new Error('points and faces must be arrays')\n  }\n  if (points.length < 3) {\n    throw new Error('three or more points are required')\n  }\n  if (faces.length < 1) {\n    throw new Error('one or more faces are required')\n  }\n  if (colors) {\n    if (!Array.isArray(colors)) {\n      throw new Error('colors must be an array')\n    }\n    if (colors.length !== faces.length) {\n      throw new Error('faces and colors must have the same length')\n    }\n  }\n  points.forEach((point, i) => {\n    if (!isNumberArray(point, 3)) throw new Error(`point ${i} must be an array of X, Y, Z values`)\n  })\n  faces.forEach((face, i) => {\n    if (face.length < 3) throw new Error(`face ${i} must contain 3 or more indexes`)\n    if (!isNumberArray(face, face.length)) throw new Error(`face ${i} must be an array of numbers`)\n  })\n\n  // invert the faces if orientation is inwards, as all internals expect outwarding facing polygons\n  if (orientation !== 'outward') {\n    faces.forEach((face) => face.reverse())\n  }\n\n  const polygons = faces.map((face, findex) => {\n    const polygon = poly3.create(face.map((pindex) => points[pindex]))\n    if (colors && colors[findex]) polygon.color = colors[findex]\n    return polygon\n  })\n\n  return geom3.create(polygons)\n}\n\nmodule.exports = polyhedron\n","const vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned rectangle in two dimensional space with four sides at right angles.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of rectangle\n * @param {Array} [options.size=[2,2]] - dimension of rectangle, width and length\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.rectangle\n *\n * @example\n * let myshape = rectangle({size: [10, 20]})\n */\nconst rectangle = (options) => {\n  const defaults = {\n    center: [0, 0],\n    size: [2, 2]\n  }\n  const { center, size } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isNumberArray(size, 2)) throw new Error('size must be an array of X and Y values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n\n  const point = [size[0] / 2, size[1] / 2]\n  const pswap = [point[0], -point[1]]\n\n  const points = [\n    vec2.subtract(vec2.create(), center, point),\n    vec2.add(vec2.create(), center, pswap),\n    vec2.add(vec2.create(), center, point),\n    vec2.subtract(vec2.create(), center, pswap)\n  ]\n  return geom2.fromPoints(points)\n}\n\nmodule.exports = rectangle\n","const { EPS, TAU } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { sin, cos } = require('../maths/utils/trigonometry')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\nconst createCorners = (center, size, radius, segments, slice, positive) => {\n  const pitch = (TAU / 4) * slice / segments\n  const cospitch = cos(pitch)\n  const sinpitch = sin(pitch)\n\n  const layersegments = segments - slice\n  let layerradius = radius * cospitch\n  let layeroffset = size[2] - (radius - (radius * sinpitch))\n  if (!positive) layeroffset = (radius - (radius * sinpitch)) - size[2]\n\n  layerradius = layerradius > EPS ? layerradius : 0\n\n  const corner0 = vec3.add(vec3.create(), center, [size[0] - radius, size[1] - radius, layeroffset])\n  const corner1 = vec3.add(vec3.create(), center, [radius - size[0], size[1] - radius, layeroffset])\n  const corner2 = vec3.add(vec3.create(), center, [radius - size[0], radius - size[1], layeroffset])\n  const corner3 = vec3.add(vec3.create(), center, [size[0] - radius, radius - size[1], layeroffset])\n  const corner0Points = []\n  const corner1Points = []\n  const corner2Points = []\n  const corner3Points = []\n  for (let i = 0; i <= layersegments; i++) {\n    const radians = layersegments > 0 ? TAU / 4 * i / layersegments : 0\n    const point2d = vec2.fromAngleRadians(vec2.create(), radians)\n    vec2.scale(point2d, point2d, layerradius)\n    const point3d = vec3.fromVec2(vec3.create(), point2d)\n    corner0Points.push(vec3.add(vec3.create(), corner0, point3d))\n    vec3.rotateZ(point3d, point3d, [0, 0, 0], TAU / 4)\n    corner1Points.push(vec3.add(vec3.create(), corner1, point3d))\n    vec3.rotateZ(point3d, point3d, [0, 0, 0], TAU / 4)\n    corner2Points.push(vec3.add(vec3.create(), corner2, point3d))\n    vec3.rotateZ(point3d, point3d, [0, 0, 0], TAU / 4)\n    corner3Points.push(vec3.add(vec3.create(), corner3, point3d))\n  }\n  if (!positive) {\n    corner0Points.reverse()\n    corner1Points.reverse()\n    corner2Points.reverse()\n    corner3Points.reverse()\n    return [corner3Points, corner2Points, corner1Points, corner0Points]\n  }\n  return [corner0Points, corner1Points, corner2Points, corner3Points]\n}\n\nconst stitchCorners = (previousCorners, currentCorners) => {\n  const polygons = []\n  for (let i = 0; i < previousCorners.length; i++) {\n    const previous = previousCorners[i]\n    const current = currentCorners[i]\n    for (let j = 0; j < (previous.length - 1); j++) {\n      polygons.push(poly3.create([previous[j], previous[j + 1], current[j]]))\n\n      if (j < (current.length - 1)) {\n        polygons.push(poly3.create([current[j], previous[j + 1], current[j + 1]]))\n      }\n    }\n  }\n  return polygons\n}\n\nconst stitchWalls = (previousCorners, currentCorners) => {\n  const polygons = []\n  for (let i = 0; i < previousCorners.length; i++) {\n    let previous = previousCorners[i]\n    let current = currentCorners[i]\n    const p0 = previous[previous.length - 1]\n    const c0 = current[current.length - 1]\n\n    const j = (i + 1) % previousCorners.length\n    previous = previousCorners[j]\n    current = currentCorners[j]\n    const p1 = previous[0]\n    const c1 = current[0]\n\n    polygons.push(poly3.create([p0, p1, c1, c0]))\n  }\n  return polygons\n}\n\nconst stitchSides = (bottomCorners, topCorners) => {\n  // make a copy and reverse the bottom corners\n  bottomCorners = [bottomCorners[3], bottomCorners[2], bottomCorners[1], bottomCorners[0]]\n  bottomCorners = bottomCorners.map((corner) => corner.slice().reverse())\n\n  const bottomPoints = []\n  bottomCorners.forEach((corner) => {\n    corner.forEach((point) => bottomPoints.push(point))\n  })\n\n  const topPoints = []\n  topCorners.forEach((corner) => {\n    corner.forEach((point) => topPoints.push(point))\n  })\n\n  const polygons = []\n  for (let i = 0; i < topPoints.length; i++) {\n    const j = (i + 1) % topPoints.length\n    polygons.push(poly3.create([bottomPoints[i], bottomPoints[j], topPoints[j], topPoints[i]]))\n  }\n  return polygons\n}\n\n/**\n * Construct an axis-aligned solid cuboid in three dimensional space with rounded corners.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of rounded cube\n * @param {Array} [options.size=[2,2,2]] - dimension of rounded cube; width, depth, height\n * @param {Number} [options.roundRadius=0.2] - radius of rounded edges\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.roundedCuboid\n *\n * @example\n * let mycube = roundedCuboid({size: [10, 20, 10], roundRadius: 2, segments: 16})\n */\nconst roundedCuboid = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    size: [2, 2, 2],\n    roundRadius: 0.2,\n    segments: 32\n  }\n  let { center, size, roundRadius, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isNumberArray(size, 3)) throw new Error('size must be an array of X, Y and Z values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n  if (!isGT(roundRadius, 0)) throw new Error('roundRadius must be greater than zero')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  size = size.map((v) => v / 2) // convert to radius\n\n  if (roundRadius > (size[0] - EPS) ||\n      roundRadius > (size[1] - EPS) ||\n      roundRadius > (size[2] - EPS)) throw new Error('roundRadius must be smaller then the radius of all dimensions')\n\n  segments = Math.floor(segments / 4)\n\n  let prevCornersPos = null\n  let prevCornersNeg = null\n  let polygons = []\n  for (let slice = 0; slice <= segments; slice++) {\n    const cornersPos = createCorners(center, size, roundRadius, segments, slice, true)\n    const cornersNeg = createCorners(center, size, roundRadius, segments, slice, false)\n\n    if (slice === 0) {\n      polygons = polygons.concat(stitchSides(cornersNeg, cornersPos))\n    }\n\n    if (prevCornersPos) {\n      polygons = polygons.concat(stitchCorners(prevCornersPos, cornersPos),\n        stitchWalls(prevCornersPos, cornersPos))\n    }\n    if (prevCornersNeg) {\n      polygons = polygons.concat(stitchCorners(prevCornersNeg, cornersNeg),\n        stitchWalls(prevCornersNeg, cornersNeg))\n    }\n\n    if (slice === segments) {\n      // add the top\n      let points = cornersPos.map((corner) => corner[0])\n      polygons.push(poly3.create(points))\n      // add the bottom\n      points = cornersNeg.map((corner) => corner[0])\n      polygons.push(poly3.create(points))\n    }\n\n    prevCornersPos = cornersPos\n    prevCornersNeg = cornersNeg\n  }\n\n  return geom3.create(polygons)\n}\n\nmodule.exports = roundedCuboid\n","const { EPS, TAU } = require('../maths/constants')\n\nconst vec3 = require('../maths/vec3')\n\nconst geom3 = require('../geometries/geom3')\nconst poly3 = require('../geometries/poly3')\n\nconst { sin, cos } = require('../maths/utils/trigonometry')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct a Z axis-aligned solid cylinder in three dimensional space with rounded ends.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of cylinder\n * @param {Number} [options.height=2] - height of cylinder\n * @param {Number} [options.radius=1] - radius of cylinder\n * @param {Number} [options.roundRadius=0.2] - radius of rounded edges\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.roundedCylinder\n *\n * @example\n * let myshape = roundedCylinder({ height: 10, radius: 2, roundRadius: 0.5 })\n */\nconst roundedCylinder = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    height: 2,\n    radius: 1,\n    roundRadius: 0.2,\n    segments: 32\n  }\n  const { center, height, radius, roundRadius, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 3)) throw new Error('center must be an array of X, Y and Z values')\n  if (!isGT(height, 0)) throw new Error('height must be greater then zero')\n  if (!isGT(radius, 0)) throw new Error('radius must be greater then zero')\n  if (!isGT(roundRadius, 0)) throw new Error('roundRadius must be greater then zero')\n  if (roundRadius > (radius - EPS)) throw new Error('roundRadius must be smaller then the radius')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  const start = [0, 0, -(height / 2)]\n  const end = [0, 0, height / 2]\n  const direction = vec3.subtract(vec3.create(), end, start)\n  const length = vec3.length(direction)\n\n  if ((2 * roundRadius) > (length - EPS)) throw new Error('height must be larger than twice roundRadius')\n\n  let defaultnormal\n  if (Math.abs(direction[0]) > Math.abs(direction[1])) {\n    defaultnormal = vec3.fromValues(0, 1, 0)\n  } else {\n    defaultnormal = vec3.fromValues(1, 0, 0)\n  }\n\n  const zvector = vec3.scale(vec3.create(), vec3.normalize(vec3.create(), direction), roundRadius)\n  const xvector = vec3.scale(vec3.create(), vec3.normalize(vec3.create(), vec3.cross(vec3.create(), zvector, defaultnormal)), radius)\n  const yvector = vec3.scale(vec3.create(), vec3.normalize(vec3.create(), vec3.cross(vec3.create(), xvector, zvector)), radius)\n\n  vec3.add(start, start, zvector)\n  vec3.subtract(end, end, zvector)\n\n  const qsegments = Math.floor(0.25 * segments)\n\n  const fromPoints = (points) => {\n    // adjust the points to center\n    const newpoints = points.map((point) => vec3.add(point, point, center))\n    return poly3.create(newpoints)\n  }\n\n  const polygons = []\n  const v1 = vec3.create()\n  const v2 = vec3.create()\n  let prevcylinderpoint\n  for (let slice1 = 0; slice1 <= segments; slice1++) {\n    const angle = TAU * slice1 / segments\n    const cylinderpoint = vec3.add(vec3.create(), vec3.scale(v1, xvector, cos(angle)), vec3.scale(v2, yvector, sin(angle)))\n    if (slice1 > 0) {\n      // cylinder wall\n      let points = []\n      points.push(vec3.add(vec3.create(), start, cylinderpoint))\n      points.push(vec3.add(vec3.create(), start, prevcylinderpoint))\n      points.push(vec3.add(vec3.create(), end, prevcylinderpoint))\n      points.push(vec3.add(vec3.create(), end, cylinderpoint))\n      polygons.push(fromPoints(points))\n\n      let prevcospitch, prevsinpitch\n      for (let slice2 = 0; slice2 <= qsegments; slice2++) {\n        const pitch = TAU / 4 * slice2 / qsegments\n        const cospitch = cos(pitch)\n        const sinpitch = sin(pitch)\n        if (slice2 > 0) {\n          // cylinder rounding, start\n          points = []\n          let point\n          point = vec3.add(vec3.create(), start, vec3.subtract(v1, vec3.scale(v1, prevcylinderpoint, prevcospitch), vec3.scale(v2, zvector, prevsinpitch)))\n          points.push(point)\n          point = vec3.add(vec3.create(), start, vec3.subtract(v1, vec3.scale(v1, cylinderpoint, prevcospitch), vec3.scale(v2, zvector, prevsinpitch)))\n          points.push(point)\n          if (slice2 < qsegments) {\n            point = vec3.add(vec3.create(), start, vec3.subtract(v1, vec3.scale(v1, cylinderpoint, cospitch), vec3.scale(v2, zvector, sinpitch)))\n            points.push(point)\n          }\n          point = vec3.add(vec3.create(), start, vec3.subtract(v1, vec3.scale(v1, prevcylinderpoint, cospitch), vec3.scale(v2, zvector, sinpitch)))\n          points.push(point)\n\n          polygons.push(fromPoints(points))\n\n          // cylinder rounding, end\n          points = []\n          point = vec3.add(vec3.create(), vec3.scale(v1, prevcylinderpoint, prevcospitch), vec3.scale(v2, zvector, prevsinpitch))\n          vec3.add(point, point, end)\n          points.push(point)\n          point = vec3.add(vec3.create(), vec3.scale(v1, cylinderpoint, prevcospitch), vec3.scale(v2, zvector, prevsinpitch))\n          vec3.add(point, point, end)\n          points.push(point)\n          if (slice2 < qsegments) {\n            point = vec3.add(vec3.create(), vec3.scale(v1, cylinderpoint, cospitch), vec3.scale(v2, zvector, sinpitch))\n            vec3.add(point, point, end)\n            points.push(point)\n          }\n          point = vec3.add(vec3.create(), vec3.scale(v1, prevcylinderpoint, cospitch), vec3.scale(v2, zvector, sinpitch))\n          vec3.add(point, point, end)\n          points.push(point)\n          points.reverse()\n\n          polygons.push(fromPoints(points))\n        }\n        prevcospitch = cospitch\n        prevsinpitch = sinpitch\n      }\n    }\n    prevcylinderpoint = cylinderpoint\n  }\n  const result = geom3.create(polygons)\n  return result\n}\n\nmodule.exports = roundedCylinder\n","const { EPS, TAU } = require('../maths/constants')\n\nconst vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned rectangle in two dimensional space with rounded corners.\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of rounded rectangle\n * @param {Array} [options.size=[2,2]] - dimension of rounded rectangle; width and length\n * @param {Number} [options.roundRadius=0.2] - round radius of corners\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.roundedRectangle\n *\n * @example\n * let myshape = roundedRectangle({size: [10, 20], roundRadius: 2})\n */\nconst roundedRectangle = (options) => {\n  const defaults = {\n    center: [0, 0],\n    size: [2, 2],\n    roundRadius: 0.2,\n    segments: 32\n  }\n  let { center, size, roundRadius, segments } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isNumberArray(size, 2)) throw new Error('size must be an array of X and Y values')\n  if (!size.every((n) => n > 0)) throw new Error('size values must be greater than zero')\n  if (!isGT(roundRadius, 0)) throw new Error('roundRadius must be greater than zero')\n  if (!isGTE(segments, 4)) throw new Error('segments must be four or more')\n\n  size = size.map((v) => v / 2) // convert to radius\n\n  if (roundRadius > (size[0] - EPS) ||\n      roundRadius > (size[1] - EPS)) throw new Error('roundRadius must be smaller then the radius of all dimensions')\n\n  const cornersegments = Math.floor(segments / 4)\n\n  // create sets of points that define the corners\n  const corner0 = vec2.add(vec2.create(), center, [size[0] - roundRadius, size[1] - roundRadius])\n  const corner1 = vec2.add(vec2.create(), center, [roundRadius - size[0], size[1] - roundRadius])\n  const corner2 = vec2.add(vec2.create(), center, [roundRadius - size[0], roundRadius - size[1]])\n  const corner3 = vec2.add(vec2.create(), center, [size[0] - roundRadius, roundRadius - size[1]])\n  const corner0Points = []\n  const corner1Points = []\n  const corner2Points = []\n  const corner3Points = []\n  for (let i = 0; i <= cornersegments; i++) {\n    const radians = TAU / 4 * i / cornersegments\n    const point = vec2.fromAngleRadians(vec2.create(), radians)\n    vec2.scale(point, point, roundRadius)\n    corner0Points.push(vec2.add(vec2.create(), corner0, point))\n    vec2.rotate(point, point, vec2.create(), TAU / 4)\n    corner1Points.push(vec2.add(vec2.create(), corner1, point))\n    vec2.rotate(point, point, vec2.create(), TAU / 4)\n    corner2Points.push(vec2.add(vec2.create(), corner2, point))\n    vec2.rotate(point, point, vec2.create(), TAU / 4)\n    corner3Points.push(vec2.add(vec2.create(), corner3, point))\n  }\n\n  return geom2.fromPoints(corner0Points.concat(corner1Points, corner2Points, corner3Points))\n}\n\nmodule.exports = roundedRectangle\n","const ellipsoid = require('./ellipsoid')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct a sphere in three dimensional space where all points are at the same distance from the center.\n * @see [ellipsoid]{@link module:modeling/primitives.ellipsoid} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0,0]] - center of sphere\n * @param {Number} [options.radius=1] - radius of sphere\n * @param {Number} [options.segments=32] - number of segments to create per full rotation\n * @param {Array} [options.axes] -  an array with three vectors for the x, y and z base vectors\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.sphere\n *\n * @example\n * let myshape = sphere({radius: 5})\n */\nconst sphere = (options) => {\n  const defaults = {\n    center: [0, 0, 0],\n    radius: 1,\n    segments: 32,\n    axes: [[1, 0, 0], [0, -1, 0], [0, 0, 1]]\n  }\n  let { center, radius, segments, axes } = Object.assign({}, defaults, options)\n\n  if (!isGT(radius, 0)) throw new Error('radius must be greater than zero')\n\n  radius = [radius, radius, radius]\n\n  return ellipsoid({ center, radius, segments, axes })\n}\n\nmodule.exports = sphere\n","const rectangle = require('./rectangle')\n\nconst { isGT } = require('./commonChecks')\n\n/**\n * Construct an axis-aligned square in two dimensional space with four equal sides at right angles.\n * @see [rectangle]{@link module:modeling/primitives.rectangle} for more options\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of square\n * @param {Number} [options.size=2] - dimension of square\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.square\n *\n * @example\n * let myshape = square({size: 10})\n */\nconst square = (options) => {\n  const defaults = {\n    center: [0, 0],\n    size: 2\n  }\n  let { center, size } = Object.assign({}, defaults, options)\n\n  if (!isGT(size, 0)) throw new Error('size must be greater than zero')\n\n  size = [size, size]\n\n  return rectangle({ center, size })\n}\n\nmodule.exports = square\n","const { TAU } = require('../maths/constants')\nconst vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isGT, isGTE, isNumberArray } = require('./commonChecks')\n\n// @see http://www.jdawiseman.com/papers/easymath/surds_star_inner_radius.html\nconst getRadiusRatio = (vertices, density) => {\n  if (vertices > 0 && density > 1 && density < vertices / 2) {\n    return Math.cos(Math.PI * density / vertices) / Math.cos(Math.PI * (density - 1) / vertices)\n  }\n  return 0\n}\n\nconst getPoints = (vertices, radius, startAngle, center) => {\n  const a = TAU / vertices\n\n  const points = []\n  for (let i = 0; i < vertices; i++) {\n    const point = vec2.fromAngleRadians(vec2.create(), a * i + startAngle)\n    vec2.scale(point, point, radius)\n    vec2.add(point, center, point)\n    points.push(point)\n  }\n  return points\n}\n\n/**\n * Construct a star in two dimensional space.\n * @see https://en.wikipedia.org/wiki/Star_polygon\n * @param {Object} [options] - options for construction\n * @param {Array} [options.center=[0,0]] - center of star\n * @param {Number} [options.vertices=5] - number of vertices (P) on the star\n * @param {Number} [options.density=2] - density (Q) of star\n * @param {Number} [options.outerRadius=1] - outer radius of vertices\n * @param {Number} [options.innerRadius=0] - inner radius of vertices, or zero to calculate\n * @param {Number} [options.startAngle=0] - starting angle for first vertice, in radians\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.star\n *\n * @example\n * let star1 = star({vertices: 8, outerRadius: 10}) // star with 8/2 density\n * let star2 = star({vertices: 12, outerRadius: 40, innerRadius: 20}) // star with given radius\n */\nconst star = (options) => {\n  const defaults = {\n    center: [0, 0],\n    vertices: 5,\n    outerRadius: 1,\n    innerRadius: 0,\n    density: 2,\n    startAngle: 0\n  }\n  let { center, vertices, outerRadius, innerRadius, density, startAngle } = Object.assign({}, defaults, options)\n\n  if (!isNumberArray(center, 2)) throw new Error('center must be an array of X and Y values')\n  if (!isGTE(vertices, 2)) throw new Error('vertices must be two or more')\n  if (!isGT(outerRadius, 0)) throw new Error('outerRadius must be greater than zero')\n  if (!isGTE(innerRadius, 0)) throw new Error('innerRadius must be greater than zero')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be greater than zero')\n\n  // force integers\n  vertices = Math.floor(vertices)\n  density = Math.floor(density)\n\n  startAngle = startAngle % TAU\n\n  if (innerRadius === 0) {\n    if (!isGTE(density, 2)) throw new Error('density must be two or more')\n    innerRadius = outerRadius * getRadiusRatio(vertices, density)\n  }\n\n  const centerv = vec2.clone(center)\n\n  const outerPoints = getPoints(vertices, outerRadius, startAngle, centerv)\n  const innerPoints = getPoints(vertices, innerRadius, startAngle + Math.PI / vertices, centerv)\n\n  const allPoints = []\n  for (let i = 0; i < vertices; i++) {\n    allPoints.push(outerPoints[i])\n    allPoints.push(innerPoints[i])\n  }\n\n  return geom2.fromPoints(allPoints)\n}\n\nmodule.exports = star\n","const { TAU } = require('../maths/constants')\n\nconst extrudeRotate = require('../operations/extrusions/extrudeRotate')\nconst { rotate } = require('../operations/transforms/rotate')\nconst { translate } = require('../operations/transforms/translate')\n\nconst circle = require('./circle')\n\nconst { isGT, isGTE } = require('./commonChecks')\n\n/**\n * Construct a torus by revolving a small circle (inner) about the circumference of a large (outer) circle.\n * @param {Object} [options] - options for construction\n * @param {Number} [options.innerRadius=1] - radius of small (inner) circle\n * @param {Number} [options.outerRadius=4] - radius of large (outer) circle\n * @param {Integer} [options.innerSegments=32] - number of segments to create per rotation\n * @param {Integer} [options.outerSegments=32] - number of segments to create per rotation\n * @param {Integer} [options.innerRotation=0] - rotation of small (inner) circle in radians\n * @param {Number} [options.outerRotation=TAU] - rotation (outer) of the torus (RADIANS)\n * @param {Number} [options.startAngle=0] - start angle of the torus (RADIANS)\n * @returns {geom3} new 3D geometry\n * @alias module:modeling/primitives.torus\n *\n * @example\n * let myshape = torus({ innerRadius: 10, outerRadius: 100 })\n */\nconst torus = (options) => {\n  const defaults = {\n    innerRadius: 1,\n    innerSegments: 32,\n    outerRadius: 4,\n    outerSegments: 32,\n    innerRotation: 0,\n    startAngle: 0,\n    outerRotation: TAU\n  }\n  const { innerRadius, innerSegments, outerRadius, outerSegments, innerRotation, startAngle, outerRotation } = Object.assign({}, defaults, options)\n\n  if (!isGT(innerRadius, 0)) throw new Error('innerRadius must be greater than zero')\n  if (!isGTE(innerSegments, 3)) throw new Error('innerSegments must be three or more')\n  if (!isGT(outerRadius, 0)) throw new Error('outerRadius must be greater than zero')\n  if (!isGTE(outerSegments, 3)) throw new Error('outerSegments must be three or more')\n  if (!isGTE(startAngle, 0)) throw new Error('startAngle must be positive')\n  if (!isGT(outerRotation, 0)) throw new Error('outerRotation must be greater than zero')\n\n  if (innerRadius >= outerRadius) throw new Error('inner circle is two large to rotate about the outer circle')\n\n  let innerCircle = circle({ radius: innerRadius, segments: innerSegments })\n\n  if (innerRotation !== 0) {\n    innerCircle = rotate([0, 0, innerRotation], innerCircle)\n  }\n\n  innerCircle = translate([outerRadius, 0], innerCircle)\n\n  const extrudeOptions = {\n    startAngle: startAngle,\n    angle: outerRotation,\n    segments: outerSegments\n  }\n  return extrudeRotate(extrudeOptions, innerCircle)\n}\n\nmodule.exports = torus\n","const { NEPS } = require('../maths/constants')\nconst vec2 = require('../maths/vec2')\n\nconst geom2 = require('../geometries/geom2')\n\nconst { isNumberArray } = require('./commonChecks')\n\n// returns angle C\nconst solveAngleFromSSS = (a, b, c) => Math.acos(((a * a) + (b * b) - (c * c)) / (2 * a * b))\n\n// returns side c\nconst solveSideFromSAS = (a, C, b) => {\n  if (C > NEPS) {\n    return Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(C))\n  }\n\n  // Explained in https://www.nayuki.io/page/numerically-stable-law-of-cosines\n  return Math.sqrt((a - b) * (a - b) + a * b * C * C * (1 - C * C / 12))\n}\n\n// AAA is when three angles of a triangle, but no sides\nconst solveAAA = (angles) => {\n  const eps = Math.abs(angles[0] + angles[1] + angles[2] - Math.PI)\n  if (eps > NEPS) throw new Error('AAA triangles require angles that sum to PI')\n\n  const A = angles[0]\n  const B = angles[1]\n  const C = Math.PI - A - B\n\n  // Note: This is not 100% proper but...\n  // default the side c length to 1\n  // solve the other lengths\n  const c = 1\n  const a = (c / Math.sin(C)) * Math.sin(A)\n  const b = (c / Math.sin(C)) * Math.sin(B)\n  return createTriangle(A, B, C, a, b, c)\n}\n\n// AAS is when two angles and one side are known, and the side is not between the angles\nconst solveAAS = (values) => {\n  const A = values[0]\n  const B = values[1]\n  const C = Math.PI + NEPS - A - B\n\n  if (C < NEPS) throw new Error('AAS triangles require angles that sum to PI')\n\n  const a = values[2]\n  const b = (a / Math.sin(A)) * Math.sin(B)\n  const c = (a / Math.sin(A)) * Math.sin(C)\n  return createTriangle(A, B, C, a, b, c)\n}\n\n// ASA is when two angles and the side between the angles are known\nconst solveASA = (values) => {\n  const A = values[0]\n  const B = values[2]\n  const C = Math.PI + NEPS - A - B\n\n  if (C < NEPS) throw new Error('ASA triangles require angles that sum to PI')\n\n  const c = values[1]\n  const a = (c / Math.sin(C)) * Math.sin(A)\n  const b = (c / Math.sin(C)) * Math.sin(B)\n  return createTriangle(A, B, C, a, b, c)\n}\n\n// SAS is when two sides and the angle between them are known\nconst solveSAS = (values) => {\n  const c = values[0]\n  const B = values[1]\n  const a = values[2]\n\n  const b = solveSideFromSAS(c, B, a)\n\n  const A = solveAngleFromSSS(b, c, a) // solve for A\n  const C = Math.PI - A - B\n  return createTriangle(A, B, C, a, b, c)\n}\n\n// SSA is when two sides and an angle that is not the angle between the sides are known\nconst solveSSA = (values) => {\n  const c = values[0]\n  const a = values[1]\n  const C = values[2]\n\n  const A = Math.asin(a * Math.sin(C) / c)\n  const B = Math.PI - A - C\n\n  const b = (c / Math.sin(C)) * Math.sin(B)\n  return createTriangle(A, B, C, a, b, c)\n}\n\n// SSS is when we know three sides of the triangle\nconst solveSSS = (lengths) => {\n  const a = lengths[1]\n  const b = lengths[2]\n  const c = lengths[0]\n  if (((a + b) <= c) || ((b + c) <= a) || ((c + a) <= b)) {\n    throw new Error('SSS triangle is incorrect, as the longest side is longer than the sum of the other sides')\n  }\n\n  const A = solveAngleFromSSS(b, c, a) // solve for A\n  const B = solveAngleFromSSS(c, a, b) // solve for B\n  const C = Math.PI - A - B\n  return createTriangle(A, B, C, a, b, c)\n}\n\nconst createTriangle = (A, B, C, a, b, c) => {\n  const p0 = vec2.fromValues(0, 0) // everything starts from 0, 0\n  const p1 = vec2.fromValues(c, 0)\n  const p2 = vec2.fromValues(a, 0)\n  vec2.add(p2, vec2.rotate(p2, p2, [0, 0], Math.PI - B), p1)\n  return geom2.fromPoints([p0, p1, p2])\n}\n\n/**\n * Construct a triangle in two dimensional space from the given options.\n * The triangle is always constructed CCW from the origin, [0, 0, 0].\n * @see https://www.mathsisfun.com/algebra/trig-solving-triangles.html\n * @param {Object} [options] - options for construction\n * @param {String} [options.type='SSS'] - type of triangle to construct; A ~ angle, S ~ side\n * @param {Array} [options.values=[1,1,1]] - angle (radians) of corners or length of sides\n * @returns {geom2} new 2D geometry\n * @alias module:modeling/primitives.triangle\n *\n * @example\n * let myshape = triangle({type: 'AAS', values: [degToRad(62), degToRad(35), 7]})\n */\nconst triangle = (options) => {\n  const defaults = {\n    type: 'SSS',\n    values: [1, 1, 1]\n  }\n  let { type, values } = Object.assign({}, defaults, options)\n\n  if (typeof (type) !== 'string') throw new Error('triangle type must be a string')\n  type = type.toUpperCase()\n  if (!((type[0] === 'A' || type[0] === 'S') &&\n        (type[1] === 'A' || type[1] === 'S') &&\n        (type[2] === 'A' || type[2] === 'S'))) throw new Error('triangle type must contain three letters; A or S')\n\n  if (!isNumberArray(values, 3)) throw new Error('triangle values must contain three values')\n  if (!values.every((n) => n > 0)) throw new Error('triangle values must be greater than zero')\n\n  switch (type) {\n    case 'AAA':\n      return solveAAA(values)\n    case 'AAS':\n      return solveAAS(values)\n    case 'ASA':\n      return solveASA(values)\n    case 'SAS':\n      return solveSAS(values)\n    case 'SSA':\n      return solveSSA(values)\n    case 'SSS':\n      return solveSSS(values)\n    default:\n      throw new Error('invalid triangle type, try again')\n  }\n}\n\nmodule.exports = triangle\n","// -- data source from from http://paulbourke.net/dataformats/hershey/\n// -- reduced to save some bytes...\n// { [ascii code]: [width, x, y, ...] } - undefined value as path separator\nmodule.exports = {\n  height: 14,\n  32: [16],\n  33: [10, 5, 21, 5, 7, undefined, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2],\n  34: [16, 4, 21, 4, 14, undefined, 12, 21, 12, 14],\n  35: [21, 11, 25, 4, -7, undefined, 17, 25, 10, -7, undefined, 4, 12, 18, 12, undefined, 3, 6, 17, 6],\n  36: [20, 8, 25, 8, -4, undefined, 12, 25, 12, -4, undefined, 17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3],\n  37: [24, 21, 21, 3, 0, undefined, 8, 21, 10, 19, 10, 17, 9, 15, 7, 14, 5, 14, 3, 16, 3, 18, 4, 20, 6, 21, 8, 21, 10, 20, 13, 19, 16, 19, 19, 20, 21, 21, undefined, 17, 7, 15, 6, 14, 4, 14, 2, 16, 0, 18, 0, 20, 1, 21, 3, 21, 5, 19, 7, 17, 7],\n  38: [26, 23, 12, 23, 13, 22, 14, 21, 14, 20, 13, 19, 11, 17, 6, 15, 3, 13, 1, 11, 0, 7, 0, 5, 1, 4, 2, 3, 4, 3, 6, 4, 8, 5, 9, 12, 13, 13, 14, 14, 16, 14, 18, 13, 20, 11, 21, 9, 20, 8, 18, 8, 16, 9, 13, 11, 10, 16, 3, 18, 1, 20, 0, 22, 0, 23, 1, 23, 2],\n  39: [10, 5, 19, 4, 20, 5, 21, 6, 20, 6, 18, 5, 16, 4, 15],\n  40: [14, 11, 25, 9, 23, 7, 20, 5, 16, 4, 11, 4, 7, 5, 2, 7, -2, 9, -5, 11, -7],\n  41: [14, 3, 25, 5, 23, 7, 20, 9, 16, 10, 11, 10, 7, 9, 2, 7, -2, 5, -5, 3, -7],\n  42: [16, 8, 21, 8, 9, undefined, 3, 18, 13, 12, undefined, 13, 18, 3, 12],\n  43: [26, 13, 18, 13, 0, undefined, 4, 9, 22, 9],\n  44: [10, 6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4],\n  45: [26, 4, 9, 22, 9],\n  46: [10, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2],\n  47: [22, 20, 25, 2, -7],\n  48: [20, 9, 21, 6, 20, 4, 17, 3, 12, 3, 9, 4, 4, 6, 1, 9, 0, 11, 0, 14, 1, 16, 4, 17, 9, 17, 12, 16, 17, 14, 20, 11, 21, 9, 21],\n  49: [20, 6, 17, 8, 18, 11, 21, 11, 0],\n  50: [20, 4, 16, 4, 17, 5, 19, 6, 20, 8, 21, 12, 21, 14, 20, 15, 19, 16, 17, 16, 15, 15, 13, 13, 10, 3, 0, 17, 0],\n  51: [20, 5, 21, 16, 21, 10, 13, 13, 13, 15, 12, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4],\n  52: [20, 13, 21, 3, 7, 18, 7, undefined, 13, 21, 13, 0],\n  53: [20, 15, 21, 5, 21, 4, 12, 5, 13, 8, 14, 11, 14, 14, 13, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4],\n  54: [20, 16, 18, 15, 20, 12, 21, 10, 21, 7, 20, 5, 17, 4, 12, 4, 7, 5, 3, 7, 1, 10, 0, 11, 0, 14, 1, 16, 3, 17, 6, 17, 7, 16, 10, 14, 12, 11, 13, 10, 13, 7, 12, 5, 10, 4, 7],\n  55: [20, 17, 21, 7, 0, undefined, 3, 21, 17, 21],\n  56: [20, 8, 21, 5, 20, 4, 18, 4, 16, 5, 14, 7, 13, 11, 12, 14, 11, 16, 9, 17, 7, 17, 4, 16, 2, 15, 1, 12, 0, 8, 0, 5, 1, 4, 2, 3, 4, 3, 7, 4, 9, 6, 11, 9, 12, 13, 13, 15, 14, 16, 16, 16, 18, 15, 20, 12, 21, 8, 21],\n  57: [20, 16, 14, 15, 11, 13, 9, 10, 8, 9, 8, 6, 9, 4, 11, 3, 14, 3, 15, 4, 18, 6, 20, 9, 21, 10, 21, 13, 20, 15, 18, 16, 14, 16, 9, 15, 4, 13, 1, 10, 0, 8, 0, 5, 1, 4, 3],\n  58: [10, 5, 14, 4, 13, 5, 12, 6, 13, 5, 14, undefined, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2],\n  59: [10, 5, 14, 4, 13, 5, 12, 6, 13, 5, 14, undefined, 6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4],\n  60: [24, 20, 18, 4, 9, 20, 0],\n  61: [26, 4, 12, 22, 12, undefined, 4, 6, 22, 6],\n  62: [24, 4, 18, 20, 9, 4, 0],\n  63: [18, 3, 16, 3, 17, 4, 19, 5, 20, 7, 21, 11, 21, 13, 20, 14, 19, 15, 17, 15, 15, 14, 13, 13, 12, 9, 10, 9, 7, undefined, 9, 2, 8, 1, 9, 0, 10, 1, 9, 2],\n  64: [27, 18, 13, 17, 15, 15, 16, 12, 16, 10, 15, 9, 14, 8, 11, 8, 8, 9, 6, 11, 5, 14, 5, 16, 6, 17, 8, undefined, 12, 16, 10, 14, 9, 11, 9, 8, 10, 6, 11, 5, undefined, 18, 16, 17, 8, 17, 6, 19, 5, 21, 5, 23, 7, 24, 10, 24, 12, 23, 15, 22, 17, 20, 19, 18, 20, 15, 21, 12, 21, 9, 20, 7, 19, 5, 17, 4, 15, 3, 12, 3, 9, 4, 6, 5, 4, 7, 2, 9, 1, 12, 0, 15, 0, 18, 1, 20, 2, 21, 3, undefined, 19, 16, 18, 8, 18, 6, 19, 5],\n  65: [18, 9, 21, 1, 0, undefined, 9, 21, 17, 0, undefined, 4, 7, 14, 7],\n  66: [21, 4, 21, 4, 0, undefined, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, undefined, 4, 11, 13, 11, 16, 10, 17, 9, 18, 7, 18, 4, 17, 2, 16, 1, 13, 0, 4, 0],\n  67: [21, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5],\n  68: [21, 4, 21, 4, 0, undefined, 4, 21, 11, 21, 14, 20, 16, 18, 17, 16, 18, 13, 18, 8, 17, 5, 16, 3, 14, 1, 11, 0, 4, 0],\n  69: [19, 4, 21, 4, 0, undefined, 4, 21, 17, 21, undefined, 4, 11, 12, 11, undefined, 4, 0, 17, 0],\n  70: [18, 4, 21, 4, 0, undefined, 4, 21, 17, 21, undefined, 4, 11, 12, 11],\n  71: [21, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 18, 8, undefined, 13, 8, 18, 8],\n  72: [22, 4, 21, 4, 0, undefined, 18, 21, 18, 0, undefined, 4, 11, 18, 11],\n  73: [8, 4, 21, 4, 0],\n  74: [16, 12, 21, 12, 5, 11, 2, 10, 1, 8, 0, 6, 0, 4, 1, 3, 2, 2, 5, 2, 7],\n  75: [21, 4, 21, 4, 0, undefined, 18, 21, 4, 7, undefined, 9, 12, 18, 0],\n  76: [17, 4, 21, 4, 0, undefined, 4, 0, 16, 0],\n  77: [24, 4, 21, 4, 0, undefined, 4, 21, 12, 0, undefined, 20, 21, 12, 0, undefined, 20, 21, 20, 0],\n  78: [22, 4, 21, 4, 0, undefined, 4, 21, 18, 0, undefined, 18, 21, 18, 0],\n  79: [22, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21],\n  80: [21, 4, 21, 4, 0, undefined, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 14, 17, 12, 16, 11, 13, 10, 4, 10],\n  81: [22, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, undefined, 12, 4, 18, -2],\n  82: [21, 4, 21, 4, 0, undefined, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, 4, 11, undefined, 11, 11, 18, 0],\n  83: [20, 17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3],\n  84: [16, 8, 21, 8, 0, undefined, 1, 21, 15, 21],\n  85: [22, 4, 21, 4, 6, 5, 3, 7, 1, 10, 0, 12, 0, 15, 1, 17, 3, 18, 6, 18, 21],\n  86: [18, 1, 21, 9, 0, undefined, 17, 21, 9, 0],\n  87: [24, 2, 21, 7, 0, undefined, 12, 21, 7, 0, undefined, 12, 21, 17, 0, undefined, 22, 21, 17, 0],\n  88: [20, 3, 21, 17, 0, undefined, 17, 21, 3, 0],\n  89: [18, 1, 21, 9, 11, 9, 0, undefined, 17, 21, 9, 11],\n  90: [20, 17, 21, 3, 0, undefined, 3, 21, 17, 21, undefined, 3, 0, 17, 0],\n  91: [14, 4, 25, 4, -7, undefined, 5, 25, 5, -7, undefined, 4, 25, 11, 25, undefined, 4, -7, 11, -7],\n  92: [14, 0, 21, 14, -3],\n  93: [14, 9, 25, 9, -7, undefined, 10, 25, 10, -7, undefined, 3, 25, 10, 25, undefined, 3, -7, 10, -7],\n  94: [16, 6, 15, 8, 18, 10, 15, undefined, 3, 12, 8, 17, 13, 12, undefined, 8, 17, 8, 0],\n  95: [16, 0, -2, 16, -2],\n  96: [10, 6, 21, 5, 20, 4, 18, 4, 16, 5, 15, 6, 16, 5, 17],\n  97: [19, 15, 14, 15, 0, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  98: [19, 4, 21, 4, 0, undefined, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3],\n  99: [18, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  100: [19, 15, 21, 15, 0, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  101: [18, 3, 8, 15, 8, 15, 10, 14, 12, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  102: [12, 10, 21, 8, 21, 6, 20, 5, 17, 5, 0, undefined, 2, 14, 9, 14],\n  103: [19, 15, 14, 15, -2, 14, -5, 13, -6, 11, -7, 8, -7, 6, -6, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  104: [19, 4, 21, 4, 0, undefined, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0],\n  105: [8, 3, 21, 4, 20, 5, 21, 4, 22, 3, 21, undefined, 4, 14, 4, 0],\n  106: [10, 5, 21, 6, 20, 7, 21, 6, 22, 5, 21, undefined, 6, 14, 6, -3, 5, -6, 3, -7, 1, -7],\n  107: [17, 4, 21, 4, 0, undefined, 14, 14, 4, 4, undefined, 8, 8, 15, 0],\n  108: [8, 4, 21, 4, 0],\n  109: [30, 4, 14, 4, 0, undefined, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0, undefined, 15, 10, 18, 13, 20, 14, 23, 14, 25, 13, 26, 10, 26, 0],\n  110: [19, 4, 14, 4, 0, undefined, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0],\n  111: [19, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3, 16, 6, 16, 8, 15, 11, 13, 13, 11, 14, 8, 14],\n  112: [19, 4, 14, 4, -7, undefined, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3],\n  113: [19, 15, 14, 15, -7, undefined, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3],\n  114: [13, 4, 14, 4, 0, undefined, 4, 8, 5, 11, 7, 13, 9, 14, 12, 14],\n  115: [17, 14, 11, 13, 13, 10, 14, 7, 14, 4, 13, 3, 11, 4, 9, 6, 8, 11, 7, 13, 6, 14, 4, 14, 3, 13, 1, 10, 0, 7, 0, 4, 1, 3, 3],\n  116: [12, 5, 21, 5, 4, 6, 1, 8, 0, 10, 0, undefined, 2, 14, 9, 14],\n  117: [19, 4, 14, 4, 4, 5, 1, 7, 0, 10, 0, 12, 1, 15, 4, undefined, 15, 14, 15, 0],\n  118: [16, 2, 14, 8, 0, undefined, 14, 14, 8, 0],\n  119: [22, 3, 14, 7, 0, undefined, 11, 14, 7, 0, undefined, 11, 14, 15, 0, undefined, 19, 14, 15, 0],\n  120: [17, 3, 14, 14, 0, undefined, 14, 14, 3, 0],\n  121: [16, 2, 14, 8, 0, undefined, 14, 14, 8, 0, 6, -4, 4, -6, 2, -7, 1, -7],\n  122: [17, 14, 14, 3, 0, undefined, 3, 14, 14, 14, undefined, 3, 0, 14, 0],\n  123: [14, 9, 25, 7, 24, 6, 23, 5, 21, 5, 19, 6, 17, 7, 16, 8, 14, 8, 12, 6, 10, undefined, 7, 24, 6, 22, 6, 20, 7, 18, 8, 17, 9, 15, 9, 13, 8, 11, 4, 9, 8, 7, 9, 5, 9, 3, 8, 1, 7, 0, 6, -2, 6, -4, 7, -6, undefined, 6, 8, 8, 6, 8, 4, 7, 2, 6, 1, 5, -1, 5, -3, 6, -5, 7, -6, 9, -7],\n  124: [8, 4, 25, 4, -7],\n  125: [14, 5, 25, 7, 24, 8, 23, 9, 21, 9, 19, 8, 17, 7, 16, 6, 14, 6, 12, 8, 10, undefined, 7, 24, 8, 22, 8, 20, 7, 18, 6, 17, 5, 15, 5, 13, 6, 11, 10, 9, 6, 7, 5, 5, 5, 3, 6, 1, 7, 0, 8, -2, 8, -4, 7, -6, undefined, 8, 8, 6, 6, 6, 4, 7, 2, 8, 1, 9, -1, 9, -3, 8, -5, 7, -6, 5, -7],\n  126: [24, 3, 6, 3, 8, 4, 11, 6, 12, 8, 12, 10, 11, 14, 8, 16, 7, 18, 7, 20, 8, 21, 10, undefined, 3, 8, 4, 10, 6, 11, 8, 11, 10, 10, 14, 7, 16, 6, 18, 6, 20, 7, 21, 10, 21, 12]\n}\n","/**\n * Texts provide sets of segments for each character or text strings.\n * The segments can be used to create outlines for both 2D and 3D geometry.\n * Note: Only ASCII characters are supported.\n * @module modeling/text\n * @example\n * const { vectorChar, vectorText } = require('@jscad/modeling').text\n */\nmodule.exports = {\n  vectorChar: require('./vectorChar'),\n  vectorText: require('./vectorText')\n}\n","const vectorParams = require('./vectorParams')\n\n/**\n * Represents a character as a list of segments\n * @typedef {Object} VectorCharObject\n * @property {Float} width - character width\n * @property {Float} height - character height (uppercase)\n * @property {Array} segments - character segments [[[x, y], ...], ...]\n */\n\n/** Construct a {@link VectorCharObject} from a ascii character whose code is between 31 and 127,\n* if the character is not supported it is replaced by a question mark.\n* @param {Object|String} [options] - options for construction or ascii character\n* @param {Float} [options.xOffset=0] - x offset\n* @param {Float} [options.yOffset=0] - y offset\n* @param {Float} [options.height=21] - font size (uppercase height)\n* @param {Float} [options.extrudeOffset=0] - width of the extrusion that will be applied (manually) after the creation of the character\n* @param {String} [options.input='?'] - ascii character (ignored/overwrited if provided as seconds parameter)\n* @param {String} [char='?'] - ascii character\n* @returns {VectorCharObject}\n* @alias module:modeling/text.vectorChar\n*\n* @example\n* let vectorCharObject = vectorChar()\n* or\n* let vectorCharObject = vectorChar('A')\n* or\n* let vectorCharObject = vectorChar({ xOffset: 57 }, 'C')\n* or\n* let vectorCharObject = vectorChar({ xOffset: 78, input: '!' })\n*/\nconst vectorChar = (options, char) => {\n  const {\n    xOffset, yOffset, input, font, height, extrudeOffset\n  } = vectorParams(options, char)\n  let code = input.charCodeAt(0)\n  if (!code || !font[code]) {\n    code = 63 // 63 => ?\n  }\n  const glyph = [].concat(font[code])\n  const ratio = (height - extrudeOffset) / font.height\n  const extrudeYOffset = (extrudeOffset / 2)\n  const width = glyph.shift() * ratio\n  const segments = []\n  let polyline = []\n  for (let i = 0, il = glyph.length; i < il; i += 2) {\n    const gx = ratio * glyph[i] + xOffset\n    const gy = ratio * glyph[i + 1] + yOffset + extrudeYOffset\n    if (glyph[i] !== undefined) {\n      polyline.push([gx, gy])\n      continue\n    }\n    segments.push(polyline)\n    polyline = []\n    i--\n  }\n  if (polyline.length) {\n    segments.push(polyline)\n  }\n  return { width, height, segments }\n}\n\nmodule.exports = vectorChar\n","const defaultFont = require('./fonts/single-line/hershey/simplex.js')\n\nconst defaultsVectorParams = {\n  xOffset: 0,\n  yOffset: 0,\n  input: '?',\n  align: 'left',\n  font: defaultFont,\n  height: 14, // == old vector_xxx simplex font height\n  lineSpacing: 2.142857142857143, // == 30/14 == old vector_xxx ratio\n  letterSpacing: 1,\n  extrudeOffset: 0\n}\n\n// vectorsXXX parameters handler\nconst vectorParams = (options, input) => {\n  if (!input && typeof options === 'string') {\n    options = { input: options }\n  }\n  options = options || {}\n  const params = Object.assign({}, defaultsVectorParams, options)\n  params.input = input || params.input\n  return params\n}\n\nmodule.exports = vectorParams\n","const vectorChar = require('./vectorChar')\nconst vectorParams = require('./vectorParams')\n\n// translate text line\nconst translateLine = (options, line) => {\n  const { x, y } = Object.assign({ x: 0, y: 0 }, options || {})\n  const segments = line.segments\n  let segment = null\n  let point = null\n  for (let i = 0, il = segments.length; i < il; i++) {\n    segment = segments[i]\n    for (let j = 0, jl = segment.length; j < jl; j++) {\n      point = segment[j]\n      segment[j] = [point[0] + x, point[1] + y]\n    }\n  }\n  return line\n}\n\n/**\n * Construct an array of character segments from a ascii string whose characters code is between 31 and 127,\n * if one character is not supported it is replaced by a question mark.\n * @param {Object|String} [options] - options for construction or ascii string\n * @param {Float} [options.xOffset=0] - x offset\n * @param {Float} [options.yOffset=0] - y offset\n * @param {Float} [options.height=21] - font size (uppercase height)\n * @param {Float} [options.lineSpacing=1.4] - line spacing expressed as a percentage of font size\n * @param {Float} [options.letterSpacing=1] - extra letter spacing expressed as a percentage of font size\n * @param {String} [options.align='left'] - multi-line text alignment: left, center, right\n * @param {Float} [options.extrudeOffset=0] - width of the extrusion that will be applied (manually) after the creation of the character\n * @param {String} [options.input='?'] - ascii string (ignored/overwrited if provided as seconds parameter)\n * @param {String} [text='?'] - ascii string\n * @returns {Array} characters segments [[[x, y], ...], ...]\n * @alias module:modeling/text.vectorText\n *\n * @example\n * let textSegments = vectorText()\n * or\n * let textSegments = vectorText('OpenJSCAD')\n * or\n * let textSegments = vectorText({ yOffset: -50 }, 'OpenJSCAD')\n * or\n * let textSegments = vectorText({ yOffset: -80, input: 'OpenJSCAD' })\n */\nconst vectorText = (options, text) => {\n  const {\n    xOffset, yOffset, input, font, height, align, extrudeOffset, lineSpacing, letterSpacing\n  } = vectorParams(options, text)\n  let [x, y] = [xOffset, yOffset]\n  let i, il, char, vect, width, diff\n  let line = { width: 0, segments: [] }\n  const lines = []\n  let output = []\n  let maxWidth = 0\n  const lineStart = x\n  const pushLine = () => {\n    lines.push(line)\n    maxWidth = Math.max(maxWidth, line.width)\n    line = { width: 0, segments: [] }\n  }\n  for (i = 0, il = input.length; i < il; i++) {\n    char = input[i]\n    vect = vectorChar({ xOffset: x, yOffset: y, font, height, extrudeOffset }, char)\n    if (char === '\\n') {\n      x = lineStart\n      y -= vect.height * lineSpacing\n      pushLine()\n      continue\n    }\n    width = vect.width * letterSpacing\n    line.width += width\n    x += width\n    if (char !== ' ') {\n      line.segments = line.segments.concat(vect.segments)\n    }\n  }\n  if (line.segments.length) {\n    pushLine()\n  }\n  for (i = 0, il = lines.length; i < il; i++) {\n    line = lines[i]\n    if (maxWidth > line.width) {\n      diff = maxWidth - line.width\n      if (align === 'right') {\n        line = translateLine({ x: diff }, line)\n      } else if (align === 'center') {\n        line = translateLine({ x: diff / 2 }, line)\n      }\n    }\n    output = output.concat(line.segments)\n  }\n  return output\n}\n\nmodule.exports = vectorText\n","// list of supported geometries\nconst geom2 = require('../geometries/geom2')\nconst geom3 = require('../geometries/geom3')\nconst path2 = require('../geometries/path2')\n\n/**\n * @param {Array} shapes - list of shapes to compare\n * @returns {Boolean} true if the given shapes are of the same type\n * @alias module:modeling/utils.areAllShapesTheSameType\n */\nconst areAllShapesTheSameType = (shapes) => {\n  let previousType\n  for (const shape of shapes) {\n    let currentType = 0\n    if (geom2.isA(shape)) currentType = 1\n    if (geom3.isA(shape)) currentType = 2\n    if (path2.isA(shape)) currentType = 3\n\n    if (previousType && currentType !== previousType) return false\n    previousType = currentType\n  }\n  return true\n}\n\nmodule.exports = areAllShapesTheSameType\n","/**\n * Convert the given angle (degrees) to radians.\n * @param {Number} degrees - angle in degrees\n * @returns {Number} angle in radians\n * @alias module:modeling/utils.degToRad\n */\nconst degToRad = (degrees) => degrees * 0.017453292519943295\n\nmodule.exports = degToRad\n","/**\n * Flatten the given list of arguments into a single flat array.\n * The arguments can be composed of multiple depths of objects and arrays.\n * @param {Array} arr - list of arguments\n * @returns {Array} a flat list of arguments\n * @alias module:modeling/utils.flatten\n */\nconst flatten = (arr) => arr.reduce((acc, val) => Array.isArray(val) ? acc.concat(flatten(val)) : acc.concat(val), [])\n\nmodule.exports = flatten\n","/**\n * @alias module:modeling/utils.fnNumberSort\n */\nconst fnNumberSort = (a, b) => a - b\n\nmodule.exports = fnNumberSort\n","/**\n * Utility functions of various sorts.\n * @module modeling/utils\n * @example\n * const { flatten, insertSorted } = require('@jscad/modeling').utils\n */\nmodule.exports = {\n  areAllShapesTheSameType: require('./areAllShapesTheSameType'),\n  degToRad: require('./degToRad'),\n  flatten: require('./flatten'),\n  fnNumberSort: require('./fnNumberSort'),\n  insertSorted: require('./insertSorted'),\n  radiusToSegments: require('./radiusToSegments'),\n  radToDeg: require('./radToDeg')\n}\n","/**\n * Insert the given element into the given array using the compareFunction.\n * @alias module:modeling/utils.insertSorted\n */\nconst insertSorted = (array, element, comparefunc) => {\n  let leftbound = 0\n  let rightbound = array.length\n  while (rightbound > leftbound) {\n    const testindex = Math.floor((leftbound + rightbound) / 2)\n    const testelement = array[testindex]\n    const compareresult = comparefunc(element, testelement)\n    if (compareresult > 0) { // element > testelement\n      leftbound = testindex + 1\n    } else {\n      rightbound = testindex\n    }\n  }\n  array.splice(leftbound, 0, element)\n}\n\nmodule.exports = insertSorted\n","/**\n * Build an array of at minimum a specified length from an existing array and a padding value. IF the array is already larger than the target length, it will not be shortened.\n * @param {Array} anArray - the source array to copy into the result.\n * @param {*} padding - the value to add to the new array to reach the desired length.\n * @param {Number} targetLength - The desired length of the return array.\n * @returns {Array} an array of at least 'targetLength' length\n * @alias module:modeling/utils.padArrayToLength\n */\nconst padArrayToLength = (anArray, padding, targetLength) => {\n  anArray = anArray.slice()\n  while (anArray.length < targetLength) {\n    anArray.push(padding)\n  }\n  return anArray\n}\n\nmodule.exports = padArrayToLength\n","/**\n * Convert the given angle (radians) to degrees.\n * @param {Number} radians - angle in radians\n * @returns {Number} angle in degrees\n * @alias module:modeling/utils.radToDeg\n */\nconst radToDeg = (radians) => radians * 57.29577951308232\n\nmodule.exports = radToDeg\n","const { TAU } = require('../maths/constants')\n\n/**\n * Calculate the number of segments from the given radius based on minimum length or angle.\n * @param {Number} radius - radius of the requested shape\n * @param {Number} minimumLength - minimum length of segments; length > 0\n * @param {Number} minimumAngle - minimum angle (radians) between segments; 0 > angle < TAU\n * @returns {Number} number of segments to complete the radius\n * @alias module:modeling/utils.radiusToSegments\n */\nconst radiusToSegments = (radius, minimumLength, minimumAngle) => {\n  const ss = minimumLength > 0 ? radius * TAU / minimumLength : 0\n  const as = minimumAngle > 0 ? TAU / minimumAngle : 0\n  // minimum segments is four(4) for round primitives\n  return Math.ceil(Math.max(ss, as, 4))\n}\n\nmodule.exports = radiusToSegments\n","import { extend, isArray, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nconst createDep = (effects) => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit;\n    }\n  }\n};\nconst finalizeDepMarkers = (effect) => {\n  const { deps } = effect;\n  if (deps.length) {\n    let ptr = 0;\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      }\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"iterate\" : \"\");\nconst MAP_KEY_ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"Map key iterate\" : \"\");\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = void 0;\n    recordEffectScope(this, scope);\n  }\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n      parent = parent.parent;\n    }\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = void 0;\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n  stop() {\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n      if (this.onStop) {\n        this.onStop();\n      }\n      this.active = false;\n    }\n  }\n}\nfunction cleanupEffect(effect2) {\n  const { deps } = effect2;\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect2);\n    }\n    deps.length = 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect) {\n    fn = fn.effect.fn;\n  }\n  const _effect = new ReactiveEffect(fn);\n  if (options) {\n    extend(_effect, options);\n    if (options.scope)\n      recordEffectScope(_effect, options.scope);\n  }\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n  const runner = _effect.run.bind(_effect);\n  runner.effect = _effect;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n    const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { effect: activeEffect, target, type, key } : void 0;\n    trackEffects(dep, eventInfo);\n  }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack2 = false;\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit;\n      shouldTrack2 = !wasTracked(dep);\n    }\n  } else {\n    shouldTrack2 = !dep.has(activeEffect);\n  }\n  if (shouldTrack2) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n    if (!!(process.env.NODE_ENV !== \"production\") && activeEffect.onTrack) {\n      activeEffect.onTrack(\n        extend(\n          {\n            effect: activeEffect\n          },\n          debuggerEventExtraInfo\n        )\n      );\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && isArray(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { target, type, key, newValue, oldValue, oldTarget } : void 0;\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        triggerEffects(deps[0], eventInfo);\n      } else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    const effects = [];\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(createDep(effects), eventInfo);\n    } else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  const effects = isArray(dep) ? dep : [...dep];\n  for (const effect2 of effects) {\n    if (effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n  for (const effect2 of effects) {\n    if (!effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n}\nfunction triggerEffect(effect2, debuggerEventExtraInfo) {\n  if (effect2 !== activeEffect || effect2.allowRecurse) {\n    if (!!(process.env.NODE_ENV !== \"production\") && effect2.onTrigger) {\n      effect2.onTrigger(extend({ effect: effect2 }, debuggerEventExtraInfo));\n    }\n    if (effect2.scheduler) {\n      effect2.scheduler();\n    } else {\n      effect2.run();\n    }\n  }\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nconst get$1 = /* @__PURE__ */ createGetter();\nconst shallowGet = /* @__PURE__ */ createGetter(false, true);\nconst readonlyGet = /* @__PURE__ */ createGetter(true);\nconst shallowReadonlyGet = /* @__PURE__ */ createGetter(true, true);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nfunction createGetter(isReadonly2 = false, shallow = false) {\n  return function get2(target, key, receiver) {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return shallow;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly2) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  };\n}\nconst set$1 = /* @__PURE__ */ createSetter();\nconst shallowSet = /* @__PURE__ */ createSetter(true);\nfunction createSetter(shallow = false) {\n  return function set2(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n    if (!shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  };\n}\nfunction deleteProperty(target, key) {\n  const hadKey = hasOwn(target, key);\n  const oldValue = target[key];\n  const result = Reflect.deleteProperty(target, key);\n  if (result && hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction has$1(target, key) {\n  const result = Reflect.has(target, key);\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\", key);\n  }\n  return result;\n}\nfunction ownKeys(target) {\n  track(target, \"iterate\", isArray(target) ? \"length\" : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\nconst mutableHandlers = {\n  get: get$1,\n  set: set$1,\n  deleteProperty,\n  has: has$1,\n  ownKeys\n};\nconst readonlyHandlers = {\n  get: readonlyGet,\n  set(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  },\n  deleteProperty(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n};\nconst shallowReactiveHandlers = /* @__PURE__ */ extend(\n  {},\n  mutableHandlers,\n  {\n    get: shallowGet,\n    set: shallowSet\n  }\n);\nconst shallowReadonlyHandlers = /* @__PURE__ */ extend(\n  {},\n  readonlyHandlers,\n  {\n    get: shallowReadonlyGet\n  }\n);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = !!(process.env.NODE_ENV !== \"production\") ? isMap(target) ? new Map(target) : new Set(target) : void 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      false\n    );\n    readonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      false\n    );\n    shallowInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      true\n    );\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  def(value, \"__v_skip\", true);\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref2) {\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      trackEffects(ref2.dep || (ref2.dep = createDep()), {\n        target: ref2,\n        type: \"get\",\n        key: \"value\"\n      });\n    } else {\n      trackEffects(ref2.dep || (ref2.dep = createDep()));\n    }\n  }\n}\nfunction triggerRefValue(ref2, newVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(dep, {\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: newVal\n      });\n    } else {\n      triggerEffects(dep);\n    }\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  triggerRefValue(ref2, !!(process.env.NODE_ENV !== \"production\") ? ref2.value : void 0);\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = void 0;\n    this.__v_isRef = true;\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    );\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this.__v_isRef = true;\n    this.__v_isReadonly = true;\n  }\n  get value() {\n    return this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(\n    source,\n    key,\n    defaultValue\n  );\n}\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    trackRefValue(self);\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = !!(process.env.NODE_ENV !== \"production\") ? () => {\n      console.warn(\"Write operation failed: computed value is readonly\");\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  if (!!(process.env.NODE_ENV !== \"production\") && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst tick = /* @__PURE__ */ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n  queue.push(fn);\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n  queue.length = 0;\n  queued = false;\n};\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = void 0;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n            scheduled = false;\n          });\n        }\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(\n              true\n              /* computedTrigger */\n            );\n          }\n        }\n      }\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n    return this._value;\n  }\n  get value() {\n    trackRefValue(this);\n    return toRaw(this)._get();\n  }\n}\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, track, trigger, triggerRef, unref };\n","function makeMap(str, expectsLowerCase) {\n  const map = /* @__PURE__ */ Object.create(null);\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\n}\n\nconst EMPTY_OBJ = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze({}) : {};\nconst EMPTY_ARR = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze([]) : [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst onRE = /^on[^a-z]/;\nconst isOn = (key) => onRE.test(key);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction(\n  (str) => str.charAt(0).toUpperCase() + str.slice(1)\n);\nconst toHandlerKey = cacheStringFunction(\n  (str) => str ? `on${capitalize(str)}` : ``\n);\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg);\n  }\n};\nconst def = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `HYDRATE_EVENTS`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_WHITE_LISTED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console\";\nconst isGloballyWhitelisted = /* @__PURE__ */ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length)\n          continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value)) {\n    return value;\n  } else if (isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n    if (isString(value) || typeof value === \"number\") {\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props)\n    return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length)\n    return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b)\n    return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {\n        entries[`${key} =>`] = val2;\n        return entries;\n      }, {})\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()]\n    };\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, genPropsAccessExp, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isObject, isOn, isPlainObject, isPromise, isRegExp, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, looseToNumber, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import type {TypedArray} from 'three';\nimport {MapUtils} from './MapUtils';\nimport {setUnion, setToArray, setIntersection, setDifference, setXOR} from './SetUtils';\nimport {CoreType} from './Type';\nimport {randFloat} from './math/_Module';\n\nexport type ArrayToItemFunction<T> = (array: Array<T>) => T;\nconst _tmp: Set<any> = new Set();\nconst _tmp0: Set<any> = new Set();\nconst _tmp1: Set<any> = new Set();\n\nexport function range(start: number, end: number, step: number, target: number[]): number[] {\n\tif (end == null) {\n\t\tend = start;\n\t\tstart = 0;\n\t}\n\tconst length = Math.floor((end - start) / step);\n\ttarget.length = length;\n\n\tfor (let i = 0; i < length; i++) {\n\t\ttarget[i] = start + i * step;\n\t}\n\treturn target;\n}\nexport function rangeWithEnd(end: number): number[] {\n\tconst target: number[] = [];\n\trange(0, end, 1, target);\n\treturn target;\n}\nexport function rangeStartEnd(start: number, end: number): number[] {\n\tconst target: number[] = [];\n\trange(start, end, 1, target);\n\treturn target;\n}\nexport function arrayUniq<T>(array: Array<T>, target: Array<T>): Array<T> {\n\ttarget.length = 0;\n\tfor (const element of array) {\n\t\tif (!target.includes(element)) {\n\t\t\ttarget.push(element);\n\t\t}\n\t}\n\treturn target;\n\t// if we use a set, we lose the order\n\t// const tmpSet: Set<T> = new Set();\n\n\t// for (let elem of array) {\n\t// \ttmpSet.add(elem);\n\t// }\n\n\t// const newArray: Array<T> = new Array(tmpSet.size);\n\t// let i = 0;\n\t// tmpSet.forEach((elem) => {\n\t// \tnewArray[i] = elem;\n\t// \ti++;\n\t// });\n\n\t// return newArray;\n}\nexport function sampleIndex(array: Array<any>, seed: number): number {\n\treturn Math.floor(randFloat(seed) * array.length);\n}\nexport function sample<T>(array: Array<T>, seed: number): T | undefined {\n\treturn array[sampleIndex(array, seed)];\n}\nexport function spliceSample<T>(array: Array<T>, seed: number): T | undefined {\n\treturn array.splice(sampleIndex(array, seed), 1)[0];\n}\n\nexport function uniqWithoutPreservingOrder<T>(array: Array<T>, target: Array<T>): Array<T> {\n\tarrayToSet(array, _tmp);\n\treturn setToArray(_tmp, target);\n\n\t// for (let elem of array) {\n\t// \ttmpSet.add(elem);\n\t// }\n\n\t// const newArray: Array<T> = new Array(tmpSet.size);\n\t// let i = 0;\n\t// tmpSet.forEach((elem) => {\n\t// \tnewArray[i] = elem;\n\t// \ti++;\n\t// });\n\n\t// return newArray;\n}\nexport function arrayCompact<T>(array: Readonly<Array<T | null | undefined>>, target: Array<T>): Array<T> {\n\ttarget.length = 0;\n\n\tfor (const elem of array) {\n\t\tif (elem != null) {\n\t\t\ttarget.push(elem);\n\t\t}\n\t}\n\n\treturn target;\n}\nexport function arrayMin<T>(array: Array<T>): T {\n\tlet min = array[0];\n\tfor (const element of array) {\n\t\tif (element < min) {\n\t\t\tmin = element;\n\t\t}\n\t}\n\treturn min;\n}\nexport function arrayMax<T>(array: Array<T>): T {\n\tlet max = array[0];\n\tfor (const element of array) {\n\t\tif (element > max) {\n\t\t\tmax = element;\n\t\t}\n\t}\n\treturn max;\n}\nexport function arraySum(array: number[]): number {\n\tlet sum = 0;\n\tfor (const element of array) {\n\t\tsum += element;\n\t}\n\treturn sum;\n}\nexport function arrayChunk<T extends number | string>(array: Array<T>, chunkSize: number): Array<Array<T>> {\n\tconst newArray: Array<Array<T>> = [];\n\n\tlet newSubArray: Array<T> = [];\n\tnewArray.push(newSubArray);\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (newSubArray.length == chunkSize) {\n\t\t\tnewSubArray = [];\n\t\t\tnewArray.push(newSubArray);\n\t\t}\n\t\tnewSubArray.push(array[i]);\n\t}\n\n\treturn newArray;\n}\n\nexport function arrayUnion<T extends number | string>(array0: Array<T>, array1: Array<T>, target: Array<T>): Array<T> {\n\tsetUnion(arrayToSet(array0, _tmp0), arrayToSet(array1, _tmp1), _tmp);\n\ttarget.length = 0;\n\tfor (const item of _tmp) {\n\t\ttarget.push(item);\n\t}\n\n\treturn target;\n}\nexport function arrayIntersection<T extends number | string>(\n\tarray0: Array<T>,\n\tarray1: Array<T>,\n\ttarget: Array<T>\n): Array<T> {\n\tsetIntersection(arrayToSet(array0, _tmp0), arrayToSet(array1, _tmp1), _tmp);\n\ttarget.length = 0;\n\tfor (const item of _tmp) {\n\t\ttarget.push(item);\n\t}\n\n\treturn target;\n}\nexport function arrayDifference<T extends number | string>(\n\tarray0: Array<T>,\n\tarray1: Array<T>,\n\ttarget: Array<T>\n): Array<T> {\n\tsetDifference(arrayToSet(array0, _tmp0), arrayToSet(array1, _tmp1), _tmp);\n\ttarget.length = 0;\n\tfor (const item of _tmp) {\n\t\ttarget.push(item);\n\t}\n\n\treturn target;\n}\nexport function arrayXOR<T extends number | string>(array0: Array<T>, array1: Array<T>, target: Array<T>): Array<T> {\n\tsetXOR(arrayToSet(array0, _tmp0), arrayToSet(array1, _tmp1), _tmp);\n\ttarget.length = 0;\n\tfor (const item of _tmp) {\n\t\ttarget.push(item);\n\t}\n\n\treturn target;\n}\nexport function arrayToSet<T>(array: Array<T>, target: Set<T>): Set<T> {\n\ttarget.clear();\n\tfor (const elem of array) {\n\t\ttarget.add(elem);\n\t}\n\treturn target;\n}\nexport function arrayIsEqual<T extends number | string>(array0: Array<T>, array1: Array<T>): boolean {\n\tif (array0.length != array1.length) {\n\t\treturn false;\n\t}\n\tconst count = array0.length;\n\tfor (let i = 0; i < count; i++) {\n\t\tif (array0[i] != array1[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nexport function arraySortBy<T, K extends number | string>(array: Array<T>, callback: (e: T) => K): Array<T> {\n\tif (array.length == 0) {\n\t\treturn [];\n\t}\n\tconst elementsByValue: Map<K, T[]> = new Map();\n\tconst valuesSet: Set<K> = new Set();\n\tfor (const elem of array) {\n\t\tconst value: K = callback(elem);\n\t\tvaluesSet.add(value);\n\t\tMapUtils.pushOnArrayAtEntry(elementsByValue, value, elem);\n\t}\n\tconst values: K[] = new Array(valuesSet.size);\n\tlet i = 0;\n\tvaluesSet.forEach((value) => {\n\t\tvalues[i] = value;\n\t\ti++;\n\t});\n\n\t// sort differently if the callback return value is a string or a number\n\tif (CoreType.isString(values[0])) {\n\t\tvalues.sort();\n\t} else {\n\t\tvalues.sort((a, b) => (a as number) - (b as number));\n\t}\n\n\tconst sorted_elements: Array<T> = new Array(array.length);\n\ti = 0;\n\tfor (const value of values) {\n\t\tconst elements_for_value = elementsByValue.get(value);\n\t\tif (elements_for_value) {\n\t\t\tfor (const element of elements_for_value) {\n\t\t\t\tsorted_elements[i] = element;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn sorted_elements;\n}\nexport function arrayShallowClone<T>(array: Array<T>): Array<T> {\n\t// https://stackoverflow.com/questions/3978492/fastest-way-to-duplicate-an-array-in-javascript-slice-vs-for-loop\n\treturn [...array];\n}\nexport function arrayMap<T, U>(array: Readonly<Array<T>>, callback: (e: T) => U, target: Array<U>): Array<U> {\n\ttarget.length = 0;\n\tfor (const item of array) {\n\t\ttarget.push(callback(item));\n\t}\n\treturn target;\n}\nexport function arrayAverage(array: number[]) {\n\treturn arraySum(array) / array.length;\n}\n\nexport class ArrayUtils {\n\tstatic shallowClone = arrayShallowClone;\n\tstatic min = arrayMin;\n\tstatic max = arrayMax;\n\tstatic sum = arraySum;\n\tstatic compact = arrayCompact;\n\tstatic uniq = arrayUniq;\n\tstatic uniqWithoutPreservingOrder = uniqWithoutPreservingOrder;\n\tstatic chunk = arrayChunk;\n\tstatic union = arrayUnion;\n\tstatic intersection = arrayIntersection;\n\tstatic toSet = arrayToSet;\n\tstatic isEqual = arrayIsEqual;\n\tstatic sortBy = arraySortBy;\n\tstatic range = range;\n}\n\n// const MAX_ITEMS_LENGTH = 1024;\nexport function arrayPushItems<T>(srcArray: Readonly<Array<T>>, target: Array<T>) {\n\t// we avoid the standard\n\t// array.push(...items),\n\t// as this can trigger an\n\t// 'Maximum call stack size exceeded' error\n\t// on some large items array.\n\t// So instead, we push them elements one by one if items.length is above a threshold\n\t// if (srcArray.length <= MAX_ITEMS_LENGTH) {\n\t// \ttarget.push(...srcArray);\n\t// } else {\n\tfor (const item of srcArray) {\n\t\ttarget.push(item);\n\t}\n\t// }\n}\n\nexport function arrayCopy<T>(srcArray: Readonly<Array<T>>, targetArray: Array<T>): void {\n\ttargetArray.length = 0;\n\tarrayPushItems(srcArray, targetArray);\n}\n\nexport function typedArrayCopy<T1 extends TypedArray, T2 extends TypedArray>(\n\tsrcArray: Readonly<T1>,\n\ttargetArray: T2\n): T2 {\n\ttargetArray.set(srcArray);\n\treturn targetArray;\n}\n","import {MathUtils} from 'three';\nimport type {Color} from 'three';\n\nexport enum ColorConversion {\n\tNONE = 'no conversion',\n\tSRGB_TO_LINEAR = 'sRGB -> linear',\n\tLINEAR_TO_SRGB = 'linear -> sRGB',\n}\nexport const COLOR_CONVERSIONS: ColorConversion[] = [\n\tColorConversion.NONE,\n\tColorConversion.SRGB_TO_LINEAR,\n\tColorConversion.LINEAR_TO_SRGB,\n];\nexport class CoreColor {\n\t// use color.toStyle() if needed\n\t// static to_css(color: Color): string {\n\t// \tconst color_elements = color.toArray().map((e) => e * 255)\n\t// \treturn `rgb(${color_elements.join(', ')})`\n\t// }\n\n\t// from THREE.js examples ColorConverter.js\n\tstatic setHSV(h: number, s: number, v: number, target: Color) {\n\t\th = MathUtils.euclideanModulo(h, 1);\n\t\ts = MathUtils.clamp(s, 0, 1);\n\t\tv = MathUtils.clamp(v, 0, 1);\n\n\t\ttarget.setHSL(h, (s * v) / ((h = (2 - s) * v) < 1 ? h : 2 - h), h * 0.5);\n\t}\n}\n","import {Ref} from '@vue/reactivity';\nimport {Vector2} from 'three';\n\nconst _cursorDelta = new Vector2();\nconst _currentCursorPos = new Vector2();\nexport class CursorMoveMonitor {\n\tprivate _lastCursorPosSet: boolean = false;\n\tprivate _movedCursorDistance: number = 0;\n\tprivate cursorRef: Ref<Vector2> | undefined;\n\tprivate _lastCursorPos = new Vector2();\n\n\tconstructor() {}\n\tprivate _bound = {\n\t\tpointermove: this._onPointermove.bind(this),\n\t};\n\taddPointermoveEventListener(cursorRef: Ref<Vector2>) {\n\t\tthis.cursorRef = cursorRef;\n\t\tthis._movedCursorDistance = 0;\n\t\tthis._lastCursorPosSet = false;\n\t\tdocument.addEventListener('pointermove', this._bound.pointermove);\n\t\tdocument.addEventListener('touchmove', this._bound.pointermove);\n\t}\n\tremoveEventListener() {\n\t\tdocument.removeEventListener('pointermove', this._bound.pointermove);\n\t\tdocument.removeEventListener('touchmove', this._bound.pointermove);\n\t}\n\tmovedCursorDistance() {\n\t\treturn this._movedCursorDistance;\n\t}\n\tprivate _onPointermove() {\n\t\tif (!this.cursorRef) {\n\t\t\treturn;\n\t\t}\n\t\tconst cursor = this.cursorRef.value;\n\t\tif (this._lastCursorPosSet == false) {\n\t\t\tthis._lastCursorPos.copy(cursor);\n\t\t\tthis._lastCursorPosSet = true;\n\t\t}\n\t\t_currentCursorPos.copy(cursor);\n\t\t_cursorDelta.copy(_currentCursorPos).sub(this._lastCursorPos);\n\t\t// we divide by 2 because the cursor is in the [-1,1] range\n\t\t// and covering the whole screen would give a length of 2.\n\t\t// But it's easier to think in term of [0,1] range\n\t\tthis._movedCursorDistance += _cursorDelta.manhattanLength() / 2;\n\t\tthis._lastCursorPos.copy(_currentCursorPos);\n\t}\n}\n","import {BaseNodeType} from '../engine/nodes/_Base';\nimport {BaseParamType} from '../engine/params/_Base';\nimport {CoreWalker} from './Walker';\nimport {CoreGraphNodeId} from './graph/CoreGraph';\ntype NodeOrParam = BaseNodeType | BaseParamType;\n\ninterface PathElement {\n\tpath: string;\n\tnode: NodeOrParam;\n}\ninterface NamedNode {\n\tname: string;\n\tnode: NodeOrParam;\n}\nexport class DecomposedPath {\n\tprivate _index = -1;\n\tprivate _pathElements: Array<PathElement | null> = [];\n\tprivate _namedNodes: Array<NamedNode | null> = [];\n\tprivate _graphNodeIds: CoreGraphNodeId[] = [];\n\tprivate _nodeElementByGraphNodeId: Map<CoreGraphNodeId, string> = new Map();\n\tprivate _absolutePath: string = '/';\n\n\tconstructor() {}\n\treset() {\n\t\tthis._index = -1;\n\t\tthis._pathElements = [];\n\t\tthis._namedNodes = [];\n\t\tthis._graphNodeIds = [];\n\t\tthis._nodeElementByGraphNodeId.clear();\n\t}\n\n\taddNamedNode(namedNode: NamedNode) {\n\t\tthis._index += 1;\n\t\tif (namedNode.name == namedNode.node.name()) {\n\t\t\tthis._namedNodes[this._index] = namedNode;\n\t\t}\n\n\t\tthis._graphNodeIds[this._index] = namedNode.node.graphNodeId();\n\t\tthis._nodeElementByGraphNodeId.set(namedNode.node.graphNodeId(), namedNode.name);\n\t\tthis._absolutePath = [this._absolutePath, namedNode.name].join(CoreWalker.SEPARATOR);\n\t}\n\taddPathElement(pathElement: PathElement) {\n\t\tthis._index += 1;\n\t\tthis._pathElements[this._index] = pathElement;\n\t\tif (pathElement.node) {\n\t\t\tthis._absolutePath = pathElement.node.path();\n\t\t}\n\t}\n\n\tnamedGraphNodes() {\n\t\treturn this._namedNodes;\n\t}\n\tnamedNodes(target: BaseNodeType[]) {\n\t\ttarget.length = 0;\n\t\tfor (const namedNode of this._namedNodes) {\n\t\t\tif (namedNode) {\n\t\t\t\tconst node = namedNode.node as BaseNodeType;\n\t\t\t\tif (node.nameController) {\n\t\t\t\t\ttarget.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n\n\tupdateFromNameChange(node: NodeOrParam) {\n\t\tconst namedGraphNodeIds = this._namedNodes.map((n) => n?.node.graphNodeId());\n\n\t\tif (namedGraphNodeIds.includes(node.graphNodeId())) {\n\t\t\tthis._nodeElementByGraphNodeId.set(node.graphNodeId(), node.name());\n\t\t}\n\t}\n\n\ttoPath(): string {\n\t\tconst elements = new Array<string>(this._index);\n\t\tfor (let i = 0; i <= this._index; i++) {\n\t\t\tconst namedNode = this._namedNodes[i];\n\t\t\tif (namedNode) {\n\t\t\t\tconst nodeName = this._nodeElementByGraphNodeId.get(namedNode.node.graphNodeId());\n\t\t\t\tif (nodeName) {\n\t\t\t\t\telements[i] = nodeName;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst pathElement = this._pathElements[i];\n\t\t\t\tif (pathElement) {\n\t\t\t\t\telements[i] = pathElement.path;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet joinedPath = elements.join(CoreWalker.SEPARATOR);\n\t\t// if the first character is a letter, we need to prefix with /\n\t\tconst firstChar = joinedPath[0];\n\t\tif (firstChar) {\n\t\t\tif (!CoreWalker.NON_LETTER_PREFIXES.includes(firstChar)) {\n\t\t\t\tjoinedPath = `${CoreWalker.SEPARATOR}${joinedPath}`;\n\t\t\t}\n\t\t}\n\t\treturn joinedPath;\n\t}\n\ttoAbsolutePath(): string {\n\t\treturn this._absolutePath;\n\t}\n}\n","export class CoreFeaturesController {\n\tstatic urlParams() {\n\t\t// do not cache the url params, in case the url is changed via\n\t\t// window.history.replaceState('', '', window.location.pathname);\n\t\treturn new URLSearchParams(window.location.search);\n\t}\n\tstatic urlParam(paramName: string) {\n\t\treturn this.urlParams().get(paramName);\n\t}\n\tstatic noAssemblers(): boolean {\n\t\treturn this.urlParam('noassemblers') == '1';\n\t}\n\tstatic debugLoadProgress(): boolean {\n\t\treturn this.urlParam('debugLoadProgress') == '1';\n\t}\n\tstatic testBatchId(): number {\n\t\tconst testBatchIdStr = this.urlParam('testBatchId');\n\t\tif (testBatchIdStr) {\n\t\t\treturn parseInt(testBatchIdStr);\n\t\t}\n\t\treturn -1;\n\t}\n}\n","type GroupByCallback<T, K> = (arg: T) => K;\n\nexport function mapFirstKey<K>(map: Map<K, any>): K | undefined {\n\tfor (const [k] of map) {\n\t\treturn k;\n\t}\n}\nexport function pushOnArrayAtEntry<K, V>(map: Map<K, V[]>, key: K, newElement: V) {\n\tif (map.has(key)) {\n\t\tmap.get(key)!.push(newElement);\n\t} else {\n\t\tmap.set(key, [newElement]);\n\t}\n}\nexport function popFromArrayAtEntry<K, V>(map: Map<K, V[]>, key: K, elementToRemove: V, removeFromMapIfEmpty = true) {\n\tif (map.has(key)) {\n\t\tconst array = map.get(key)!;\n\t\tconst index = array.indexOf(elementToRemove);\n\t\tif (index >= 0) {\n\t\t\tarray.splice(index, 1);\n\t\t\tif (removeFromMapIfEmpty && array.length == 0) {\n\t\t\t\tmap.delete(key);\n\t\t\t}\n\t\t}\n\t}\n}\nexport function addToSetAtEntry<K, V>(map: Map<K, Set<V>>, key: K, newElement: V) {\n\tif (map.has(key)) {\n\t\tmap.get(key)!.add(newElement);\n\t} else {\n\t\tconst set: Set<V> = new Set();\n\t\tset.add(newElement);\n\t\tmap.set(key, set);\n\t}\n}\nexport function addToMapAtEntry<K0, K1, V>(map: Map<K0, Map<K1, V>>, key0: K0, key1: K1, newElement: V) {\n\tlet subMap = map.get(key0);\n\tif (!subMap) {\n\t\tsubMap = new Map();\n\t\tmap.set(key0, subMap);\n\t}\n\tsubMap.set(key1, newElement);\n}\nexport function getMapElementAtEntry<K0, K1, V>(map: Map<K0, Map<K1, V>>, key0: K0, key1: K1): V | undefined {\n\tlet subMap = map.get(key0);\n\tif (!subMap) {\n\t\treturn;\n\t}\n\treturn subMap.get(key1);\n}\nexport function mapValuesToArray<K, V>(map: Map<K, V>, target: Array<V>): Array<V> {\n\ttarget.length = 0;\n\tmap.forEach((v) => {\n\t\ttarget.push(v);\n\t});\n\treturn target;\n}\nexport function removeFromSetAtEntry<K, V>(map: Map<K, Set<V>>, key: K, elementToRemove: V) {\n\tif (map.has(key)) {\n\t\tconst set = map.get(key)!;\n\t\tset.delete(elementToRemove);\n\t\tif (set.size == 0) {\n\t\t\tmap.delete(key);\n\t\t}\n\t}\n}\nexport function unshiftOnArrayAtEntry<K, V>(map: Map<K, V[]>, key: K, newElement: V) {\n\tif (map.has(key)) {\n\t\tmap.get(key)!.unshift(newElement);\n\t} else {\n\t\tmap.set(key, [newElement]);\n\t}\n}\nexport function concatOnArrayAtEntry<K, V>(map: Map<K, V[]>, key: K, newElements: V[]) {\n\tif (map.has(key)) {\n\t\tlet array: V[] = map.get(key)!;\n\t\tfor (const element of newElements) {\n\t\t\tarray.push(element);\n\t\t}\n\t} else {\n\t\tmap.set(key, newElements);\n\t}\n}\n// export async function mapForEachSync<K, V>(map: Map<K, V>, callback: (v: V, k: K) => Promise<void>) {\n// \tconst values: V[] = [];\n// \tconst keys: K[] = [];\n// \tmap.forEach((value, key) => {\n// \t\tvalues.push(value);\n// \t\tkeys.push(key);\n// \t});\n// \tfor (let i = 0; i < values.length; i++) {\n// \t\tconst key = keys[i];\n// \t\tconst value = values[i];\n// \t\tawait callback(value, key);\n// \t}\n// }\nexport function mapGroupBy<T, K>(array: readonly T[], callback: GroupByCallback<T, K>): Map<K, T[]> {\n\tconst map = new Map<K, T[]>();\n\tarray.forEach((element: T) => {\n\t\tconst key: K = callback(element);\n\t\tpushOnArrayAtEntry(map, key, element);\n\t});\n\treturn map;\n}\nexport function mapIncrementAtEntry<K>(map: Map<K, number>, key: K, initValue: number): number {\n\tlet entry = map.get(key);\n\tif (entry == null) {\n\t\tentry = initValue;\n\t}\n\tentry++;\n\tmap.set(key, entry);\n\treturn entry;\n}\nexport function mapEntriesCount<K, V>(map: Map<K, V>): number {\n\tlet count = 0;\n\tmap.forEach(() => {\n\t\tcount++;\n\t});\n\treturn count;\n}\nexport class MapUtils {\n\t// static arrayFromValues = mapValuesToArray;\n\tstatic pushOnArrayAtEntry = pushOnArrayAtEntry;\n\tstatic addToSetAtEntry = addToSetAtEntry;\n\tstatic popFromArrayAtEntry = popFromArrayAtEntry;\n\tstatic removeFromSetAtEntry = removeFromSetAtEntry;\n\tstatic unshiftOnArrayAtEntry = unshiftOnArrayAtEntry;\n\tstatic concatOnArrayAtEntry = concatOnArrayAtEntry;\n\t// static forEachSync = mapForEachSync;\n\tstatic groupBy = mapGroupBy;\n\tstatic incrementAtEntry = mapIncrementAtEntry;\n\tstatic firstKey = mapFirstKey;\n}\n","export enum MouseButton {\n\tLEFT = 0,\n\tMIDDLE = 1,\n\tRIGHT = 2,\n}\nexport enum MouseButtons {\n\tNONE = 0,\n\tLEFT = 1,\n\tRIGHT = 2,\n\tLEFT_RIGHT = 3,\n\tMIDDLE = 4,\n\tLEFT_MIDDLE = 5,\n\tMIDDLE_RIGHT = 6,\n\tLEFT_MIDDLE_RIGHT = 7,\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\nexport const MOUSE_BUTTONS: MouseButton[][] = [\n\t/*0*/ [],\n\t/*1*/ [MouseButton.LEFT],\n\t/*2*/ [MouseButton.RIGHT],\n\t/*3*/ [MouseButton.LEFT, MouseButton.RIGHT],\n\t/*4*/ [MouseButton.MIDDLE],\n\t/*5*/ [MouseButton.LEFT, MouseButton.MIDDLE],\n\t/*6*/ [MouseButton.MIDDLE, MouseButton.RIGHT],\n\t/*7*/ [MouseButton.LEFT, MouseButton.MIDDLE, MouseButton.RIGHT],\n];\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import {arrayIsEqual} from './ArrayUtils';\nimport {CoreType} from './Type';\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport clone from 'lodash-es/clone';\n\nexport function getObjectMethodNames(obj: any): string[] {\n\tlet properties = new Set();\n\tlet currentObj = obj;\n\tdo {\n\t\tObject.getOwnPropertyNames(currentObj).map((item) => properties.add(item));\n\t} while ((currentObj = Object.getPrototypeOf(currentObj)));\n\treturn [...properties.keys()].filter((item) => typeof (obj as any)[item as string] === 'function') as string[];\n}\nexport function objectIsEqual(object0: any, object1: any): boolean {\n\tif (CoreType.isBoolean(object0) && CoreType.isBoolean(object1)) {\n\t\treturn object0 == object1;\n\t}\n\tif (CoreType.isNumber(object0) && CoreType.isNumber(object1)) {\n\t\treturn object0 == object1;\n\t}\n\tif (CoreType.isString(object0) && CoreType.isString(object1)) {\n\t\treturn object0 == object1;\n\t}\n\n\tif (CoreType.isObject(object0) && CoreType.isObject(object1)) {\n\t\tconst keys0 = Object.keys(object0);\n\t\tconst keys1 = Object.keys(object1);\n\t\tif (!arrayIsEqual(keys0, keys1)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn JSON.stringify(object0) == JSON.stringify(object1);\n\t}\n\treturn false;\n}\nexport function objectMerge(object0: object, object1: object): object {\n\treturn Object.assign(object0, object1);\n}\nexport function objectClone<T extends Array<any> | object | undefined>(value: T): T {\n\t// return this.cloneDeep(value);\n\treturn clone(value);\n\t// if (value) {\n\t// \tif (CoreType.isArray(value)) {\n\t// \t\tconst newValues: Array<any> = value.map((v) => v);\n\t// \t\treturn newValues as T;\n\t// \t} else {\n\t// \t\treturn {...value};\n\t// \t}\n\t// }\n\t// return value;\n}\nexport function objectCloneDeep<T extends object | number | string | boolean | undefined>(value: T): T {\n\t// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore/issues/121\n\t// let target = {};\n\t// for (const prop in src) {\n\t// \tif (src.hasOwnProperty(prop)) {\n\t// \t\tif ((src as any)[prop] != null && typeof (src as any)[prop] === 'object') {\n\t// \t\t\t(target as any)[prop] = this.cloneDeep((src as any)[prop]);\n\t// \t\t} else {\n\t// \t\t\t(target as any)[prop] = (src as any)[prop];\n\t// \t\t}\n\t// \t}\n\t// }\n\t// return target as T;\n\n\treturn cloneDeep(value);\n\t// if (CoreType.isString(value) || CoreType.isNumber(value) || CoreType.isBoolean(value)) {\n\t// \treturn value;\n\t// }\n\t// if (this.isObject(value)) {\n\t// be careful, as this does not clone functions\n\t// \treturn JSON.parse(JSON.stringify(value));\n\t// }\n\t// return value;\n}\n","import {Raycaster} from 'three';\nimport {ThreeMeshBVHHelper} from './geometry/bvh/ThreeMeshBVHHelper';\n\nexport function createRaycaster() {\n\tconst raycaster = new Raycaster();\n\tThreeMeshBVHHelper.updateRaycaster(raycaster);\n\treturn raycaster;\n}\n","export function setFirstValue<K>(set: Set<K>): K | undefined {\n\tfor (const k of set) {\n\t\treturn k;\n\t}\n}\nlet i = 0;\nexport function setToArray<T>(set: Set<T>, target: T[]): T[] {\n\t// const array: Array<T> = [];\n\ttarget.length = set.size;\n\ti = 0;\n\tset.forEach((elem) => {\n\t\ttarget[i] = elem;\n\t\ti++;\n\t});\n\treturn target;\n}\n\nexport function setUnion<T extends string | number>(set0: Set<T>, set1: Set<T>, target: Set<T>): Set<T> {\n\ttarget.clear();\n\tset0.forEach((val) => target.add(val));\n\tset1.forEach((val) => target.add(val));\n\treturn target;\n}\nexport function setIntersection<T extends string | number>(set0: Set<T>, set1: Set<T>, target: Set<T>): Set<T> {\n\ttarget.clear();\n\tset0.forEach((val) => {\n\t\tif (set1.has(val)) {\n\t\t\ttarget.add(val);\n\t\t}\n\t});\n\tset1.forEach((val) => {\n\t\tif (set0.has(val)) {\n\t\t\ttarget.add(val);\n\t\t}\n\t});\n\treturn target;\n}\nexport function setDifference<T extends string | number>(set0: Set<T>, set1: Set<T>, target: Set<T>): Set<T> {\n\ttarget.clear();\n\tset0.forEach((val) => {\n\t\tif (!set1.has(val)) {\n\t\t\ttarget.add(val);\n\t\t}\n\t});\n\treturn target;\n}\nexport function setXOR<T extends string | number>(set0: Set<T>, set1: Set<T>, target: Set<T>): Set<T> {\n\ttarget.clear();\n\tset0.forEach((val) => {\n\t\tif (!set1.has(val)) {\n\t\t\ttarget.add(val);\n\t\t}\n\t});\n\tset1.forEach((val) => {\n\t\tif (!set0.has(val)) {\n\t\t\ttarget.add(val);\n\t\t}\n\t});\n\treturn target;\n}\n","import {CoreType} from './Type';\nimport {arrayUniq, range} from './ArrayUtils';\nimport {arrayPushItems} from './ArrayUtils';\n\nconst ATTRIB_NAMES_SEPARATOR = /[, ]/; //[',', ' ']\n\n// const LETTERS = 'abcdefghijklmnopqrstuvwxyz'\n// const LETTERS_UPPERCASE = LETTERS.toUpperCase()\n// const NUMBERS = '0123645789'\n// const ALL = LETTERS + LETTERS_UPPERCASE + NUMBERS\n\nconst TAIL_DIGIT_MATCH_REGEXP = /\\d+$/;\nconst LEADING_ZEROS_MATCH_REGEXP = /^0+/;\n// const DIGIT_PREDEDED_BY_UNDERSCOPE = /_\\d$/\nconst INDICES_LIST_SEPARATOR = /,| /;\nconst ZERO = '0';\nconst SPACE = ' ';\nconst RANGE_SEPARATOR = '-';\n\n// https://stackoverflow.com/questions/41856126/regexp-optional-dot-in-a-decimal-number\nconst NUM_REGEXP = /^-?\\d+\\.?\\d*$/;\nenum BooleanString {\n\tTRUE = 'true',\n\tFALSE = 'false',\n}\nexport function stringIsBoolean(word: string): boolean {\n\treturn word == BooleanString.TRUE || word == BooleanString.FALSE;\n}\nexport function stringToBoolean(word: string): boolean {\n\treturn word == BooleanString.TRUE;\n}\nexport function stringIsNumber(word: string): boolean {\n\treturn NUM_REGEXP.test(word);\n}\nexport function sanitizeName(word: string): string {\n\tword = word.replace(/[^A-Za-z0-9]/g, '_');\n\tword = word.replace(/^[0-9]/, '_'); // replace first char if not a letter\n\treturn word;\n}\n\nlet _tmp: string[] = [];\nexport function stringToAttribNames(word: string, target: string[]): string[] {\n\tconst elements = word.split(ATTRIB_NAMES_SEPARATOR);\n\t_tmp.length = 0;\n\tfor (const element of elements) {\n\t\tconst trimmed = element.trim();\n\t\tif (trimmed.length > 0) {\n\t\t\t_tmp.push(trimmed);\n\t\t}\n\t}\n\tarrayUniq(_tmp, target);\n\treturn target;\n}\nexport function stringTailDigits(word: string): number {\n\tconst match = word.match(TAIL_DIGIT_MATCH_REGEXP);\n\tif (match) {\n\t\treturn parseInt(match[0]);\n\t} else {\n\t\treturn 0;\n\t}\n}\nexport function stringIncrement(word: string): string {\n\tconst match = word.match(TAIL_DIGIT_MATCH_REGEXP);\n\tif (match) {\n\t\tlet numbers_as_str = match[0];\n\t\tlet zeros_prefix: string = '';\n\t\tconst leading_zeros_match = numbers_as_str.match(LEADING_ZEROS_MATCH_REGEXP);\n\t\tif (leading_zeros_match) {\n\t\t\tzeros_prefix = leading_zeros_match[0];\n\t\t}\n\n\t\tconst digits = parseInt(numbers_as_str);\n\t\tif (digits == 0) {\n\t\t\tif (zeros_prefix.length > 0) {\n\t\t\t\tif (zeros_prefix[zeros_prefix.length - 1] == ZERO) {\n\t\t\t\t\tzeros_prefix = zeros_prefix.slice(0, -1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst prefix = word.substring(0, word.length - match[0].length);\n\t\treturn `${prefix}${zeros_prefix}${digits + 1}`;\n\t} else {\n\t\treturn `${word}1`;\n\t}\n}\nexport function stringPluralize(word: string): string {\n\tconst last_char = word[word.length - 1];\n\tif (last_char !== 's') {\n\t\treturn `${word}s`;\n\t} else {\n\t\treturn word;\n\t}\n}\nexport function stringCamelCase(str: string): string {\n\tconst elements = str.replace(/_/g, ' ').split(' ');\n\tlet newWord = '';\n\tfor (let i = 0; i < elements.length; i++) {\n\t\tlet element = elements[i].toLowerCase();\n\t\tif (i > 0) {\n\t\t\telement = stringUpperFirst(element);\n\t\t}\n\t\tnewWord += element;\n\t}\n\treturn newWord;\n\n\t// inspired from https://blog.bitsrc.io/5-string-manipulation-libraries-for-javascript-5de27e48ee62\n\t// return str.replace(/_/g, ' ').replace(/(?:^\\w|[A-Z0-9]|\\b\\w|\\s+)/g, function (match, index) {\n\t// \tconsole.log('match', match, index);\n\t// \tif (+match === 0) return ''; // or if (/\\s+/.test(match)) for white spaces\n\t// \treturn index === 0 ? match.toLowerCase() : match.toUpperCase();\n\t// });\n}\nexport function stringUpperFirst(word: string): string {\n\tif (word.length == 0) {\n\t\treturn word;\n\t}\n\tconst newString = word[0].toUpperCase() + word.substring(1);\n\treturn newString;\n}\nexport function stringTitleize(word: string): string {\n\tconst elements = word.split(/\\s|_/g);\n\tconst newElements = elements.map(stringUpperFirst);\n\treturn newElements.join(' ');\n}\nexport function precision(val: number, decimals: number = 2): string {\n\tdecimals = Math.max(decimals, 0);\n\tconst elements = `${val}`.split('.');\n\n\tif (decimals <= 0) {\n\t\treturn elements[0];\n\t}\n\n\tlet frac = elements[1];\n\tif (frac !== undefined) {\n\t\tif (frac.length > decimals) {\n\t\t\tfrac = frac.substring(0, decimals);\n\t\t}\n\n\t\tfrac = frac.padEnd(decimals, '0');\n\t\treturn `${elements[0]}.${frac}`;\n\t} else {\n\t\tconst string_to_pad = `${val}.`;\n\t\tconst pad = string_to_pad.length + decimals;\n\t\treturn string_to_pad.padEnd(pad, '0');\n\t}\n}\nexport function ensureFloat(num: number): string {\n\t// const integer = Math.floor(num)\n\t// const delta = num - integer\n\t// if(delta)\n\tconst num_as_string = `${num}`;\n\tconst dot_pos = num_as_string.indexOf('.');\n\tif (dot_pos >= 0) {\n\t\treturn num_as_string;\n\t} else {\n\t\treturn `${num_as_string}.0`;\n\t}\n}\nexport function ensureInteger(num: number): string {\n\tconst num_as_string = `${num}`;\n\tconst dot_pos = num_as_string.indexOf('.');\n\tif (dot_pos >= 0) {\n\t\treturn num_as_string.split('.')[0];\n\t} else {\n\t\treturn num_as_string;\n\t}\n}\n\n// let _elements: string[] = [];\n// let _inclusionFilters: string[] = [];\n// // https://stackoverflow.com/questions/26246601/wildcard-string-comparison-in-javascript#32402438\nexport function stringMatchMask(word: string, mask: string) {\n\tif (mask === '*') {\n\t\treturn true;\n\t}\n\tif (word == mask) {\n\t\treturn true;\n\t}\n\tconst elements = mask.split(SPACE);\n\t// const elements = _elements;\n\tconst exclusionFilters: string[] = [];\n\t// _inclusionFilters.length = 0;\n\tfor (const element of elements) {\n\t\tif (element.startsWith('^')) {\n\t\t\texclusionFilters.push(element.substring(1));\n\t\t} else {\n\t\t\t// _inclusionFilters.push(element);\n\t\t}\n\t}\n\t// const exclusionFilters = elements\n\t// \t.filter((element) => element.startsWith('^'))\n\t// \t.map((element) => element.substring(1));\n\tfor (const exclusionFilter of exclusionFilters) {\n\t\tconst match = stringMatchMask(word, exclusionFilter);\n\t\tif (match) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (elements.length > 1) {\n\t\tfor (const element of elements) {\n\t\t\tif (stringMatchMask(word, element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// \".\"  => Find a single character, except newline or line terminator\n\t// \".*\" => Matches any string that contains zero or more characters\n\tmask = mask.split('*').join('.*');\n\n\t// \"^\"  => Matches any string with the following at the beginning of it\n\t// \"$\"  => Matches any string with that in front at the end of it\n\tmask = `^${mask}$`;\n\n\ttry {\n\t\t// Create a regular expression object for matching string\n\t\tconst regex = new RegExp(mask);\n\n\t\t// Returns true if it finds a match, otherwise it returns false\n\t\treturn regex.test(word);\n\t} catch (err) {\n\t\t// we need to wrap in a try catch in case it would create an invalid regex\n\t\treturn false;\n\t}\n}\nexport function stringMatchesOneMask(word: string, masks: string[]): boolean {\n\tfor (const mask of masks) {\n\t\tif (stringMatchMask(word, mask)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nlet _indices: number[] = [];\nlet _subIndices: number[] = [];\nexport function stringToIndices(indicesString: string, target: number[]): number[] {\n\ttarget.length = 0;\n\tconst elements = indicesString.split(INDICES_LIST_SEPARATOR);\n\tif (elements.length > 1) {\n\t\t_indices.length = 0;\n\t\tfor (const element of elements) {\n\t\t\tstringToIndices(element, _subIndices);\n\t\t\tarrayPushItems(_subIndices, _indices);\n\t\t}\n\t\t// const indices: number[] = elements.flatMap(stringToIndices);\n\t\t// const uniqIndices: number[] = [];\n\t\tarrayUniq(_indices, target);\n\t\treturn target.sort((a, b) => a - b);\n\t} else {\n\t\tconst element = elements[0];\n\t\tif (element) {\n\t\t\tif (element.indexOf(RANGE_SEPARATOR) > 0) {\n\t\t\t\tconst rangeElements = element.split(RANGE_SEPARATOR);\n\t\t\t\tconst rangeStart = rangeElements[0];\n\t\t\t\tconst rangeEnd = rangeElements[1];\n\t\t\t\tconst rangeStartI = parseInt(rangeStart);\n\t\t\t\tconst rangeEndI = parseInt(rangeEnd);\n\t\t\t\tif (CoreType.isNumberValid(rangeStartI) && CoreType.isNumberValid(rangeEndI)) {\n\t\t\t\t\treturn range(rangeStartI, rangeEndI + 1, 1, target);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst parsed = parseInt(element);\n\t\t\t\tif (CoreType.isNumberValid(parsed)) {\n\t\t\t\t\ttarget.push(parsed);\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn target;\n}\nexport function stringEscapeLineBreaks(word: string): string {\n\treturn word.replace(/(\\r\\n|\\n|\\r)/gm, '\\\\n');\n}\nexport class CoreString {\n\tstatic isBoolean = stringIsBoolean;\n\tstatic toBoolean = stringToBoolean;\n\tstatic isNumber = stringIsNumber;\n\tstatic tailDigits = stringTailDigits;\n\tstatic increment = stringIncrement;\n\tstatic pluralize = stringPluralize;\n\tstatic camelCase = stringCamelCase;\n\tstatic upperFirst = stringUpperFirst;\n\tstatic titleize = stringTitleize;\n\tstatic precision = precision;\n\tstatic ensureFloat = ensureFloat;\n\tstatic ensureInteger = ensureInteger;\n\tstatic matchMask = stringMatchMask;\n\tstatic matchesOneMask = stringMatchesOneMask;\n\tstatic attribNames = stringToAttribNames;\n\tstatic indices = stringToIndices;\n\tstatic escapeLineBreaks = stringEscapeLineBreaks;\n\tstatic sanitizeName = sanitizeName;\n}\n","import {Number3} from '../types/GlobalTypes';\nimport {MathUtils, BufferGeometry, Euler, Matrix4, Object3D, Vector3, Quaternion} from 'three';\n\nimport {BaseNodeType} from '../engine/nodes/_Base';\n\nexport enum TransformTargetType {\n\tOBJECT = 'object',\n\tGEOMETRY = 'geometry',\n}\nexport const TRANSFORM_TARGET_TYPES: TransformTargetType[] = [TransformTargetType.GEOMETRY, TransformTargetType.OBJECT];\n\nexport enum RotationOrder {\n\tXYZ = 'XYZ',\n\tXZY = 'XZY',\n\tYXZ = 'YXZ',\n\tYZX = 'YZX',\n\tZYX = 'ZYX',\n\tZXY = 'ZXY',\n}\nexport const ROTATION_ORDERS: RotationOrder[] = [\n\tRotationOrder.XYZ,\n\tRotationOrder.XZY,\n\tRotationOrder.YXZ,\n\tRotationOrder.YZX,\n\tRotationOrder.ZXY,\n\tRotationOrder.ZYX,\n];\nexport const DEFAULT_ROTATION_ORDER = RotationOrder.XYZ;\n\nexport interface SetParamsFromMatrixOptions {\n\tscale?: boolean;\n}\n\nconst eulerArray: Number3 = [0, 0, 0];\nconst _m = new Matrix4();\nconst _q = new Quaternion();\nconst _rotateDirOrigin = new Vector3();\nconst _rotateDirDest = new Vector3();\n\nexport function rotationMatrix(dirOrigin: Vector3, dirDest: Vector3, target: Matrix4) {\n\t_rotateDirDest.copy(dirDest).normalize();\n\t_rotateDirOrigin.copy(dirOrigin).normalize();\n\t_q.setFromUnitVectors(_rotateDirOrigin, _rotateDirDest);\n\ttarget.makeRotationFromQuaternion(_q);\n}\nexport function rotateGeometry(geometry: BufferGeometry, dirOrigin: Vector3, dirDest: Vector3) {\n\t_rotateDirDest.copy(dirDest).normalize();\n\t_rotateDirOrigin.copy(dirOrigin).normalize();\n\t_q.setFromUnitVectors(_rotateDirOrigin, _rotateDirDest);\n\t_m.makeRotationFromQuaternion(_q);\n\tgeometry.applyMatrix4(_m);\n}\nexport class CoreTransform {\n\tprivate static set_params_from_matrix_position = new Vector3();\n\tprivate static set_params_from_matrix_quaternion = new Quaternion();\n\tprivate static set_params_from_matrix_scale = new Vector3();\n\tprivate static set_params_from_matrix_euler = new Euler();\n\tprivate static set_params_from_matrix_rotation = new Vector3();\n\tprivate static set_params_from_matrix_t: Number3 = [0, 0, 0];\n\tprivate static set_params_from_matrix_r: Number3 = [0, 0, 0];\n\tprivate static set_params_from_matrix_s: Number3 = [0, 0, 0];\n\tstatic setParamsFromMatrix(matrix: Matrix4, node: BaseNodeType, options: SetParamsFromMatrixOptions = {}) {\n\t\tlet update_scale = options['scale'];\n\t\tif (update_scale == null) {\n\t\t\tupdate_scale = true;\n\t\t}\n\n\t\tmatrix.decompose(\n\t\t\tthis.set_params_from_matrix_position,\n\t\t\tthis.set_params_from_matrix_quaternion,\n\t\t\tthis.set_params_from_matrix_scale\n\t\t);\n\n\t\tthis.set_params_from_matrix_euler.setFromQuaternion(this.set_params_from_matrix_quaternion);\n\t\tthis.set_params_from_matrix_euler.toArray(eulerArray);\n\t\tthis.set_params_from_matrix_rotation.fromArray(eulerArray);\n\t\tthis.set_params_from_matrix_rotation.divideScalar(Math.PI / 180);\n\n\t\tthis.set_params_from_matrix_position.toArray(this.set_params_from_matrix_t);\n\t\tthis.set_params_from_matrix_rotation.toArray(this.set_params_from_matrix_r);\n\t\tthis.set_params_from_matrix_scale.toArray(this.set_params_from_matrix_s);\n\n\t\tnode.scene().batchUpdates(() => {\n\t\t\tnode.params.set_vector3('t', this.set_params_from_matrix_t);\n\t\t\tnode.params.set_vector3('r', this.set_params_from_matrix_r);\n\t\t\tnode.params.set_vector3('s', this.set_params_from_matrix_s);\n\t\t\tif (update_scale) {\n\t\t\t\tnode.params.set_float('scale', 1);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic set_params_from_object_position_array: Number3 = [0, 0, 0];\n\tstatic set_params_from_object_rotation_deg = new Vector3();\n\tstatic set_params_from_object_rotation_array: Number3 = [0, 0, 0];\n\tstatic setParamsFromObject(object: Object3D, node: BaseNodeType) {\n\t\tobject.position.toArray(this.set_params_from_object_position_array);\n\n\t\tobject.rotation.toArray(this.set_params_from_object_rotation_array);\n\t\tthis.set_params_from_object_rotation_deg.fromArray(this.set_params_from_object_rotation_array);\n\t\tthis.set_params_from_object_rotation_deg.multiplyScalar(180 / Math.PI);\n\t\tthis.set_params_from_object_rotation_deg.toArray(this.set_params_from_object_rotation_array);\n\n\t\tnode.scene().batchUpdates(() => {\n\t\t\tnode.params.set_vector3('t', this.set_params_from_object_position_array);\n\t\t\tnode.params.set_vector3('r', this.set_params_from_object_rotation_array);\n\t\t});\n\t}\n\n\tprivate _translation_matrix: Matrix4 = new Matrix4();\n\tprivate _translation_matrix_q = new Quaternion();\n\tprivate _translation_matrix_s = new Vector3(1, 1, 1);\n\ttranslationMatrix(t: Vector3): Matrix4 {\n\t\tthis._translation_matrix.compose(t, this._translation_matrix_q, this._translation_matrix_s);\n\t\treturn this._translation_matrix;\n\t}\n\n\tprivate _matrix = new Matrix4().identity();\n\tprivate _matrixQ = new Quaternion();\n\tprivate _matrixEuler = new Euler();\n\tprivate _matrixS = new Vector3();\n\tmatrix(t: Vector3, r: Vector3, s: Vector3, scale: number, rotationOrder: RotationOrder) {\n\t\tthis._matrixEuler.set(MathUtils.degToRad(r.x), MathUtils.degToRad(r.y), MathUtils.degToRad(r.z), rotationOrder);\n\t\tthis._matrixQ.setFromEuler(this._matrixEuler);\n\n\t\tthis._matrixS.copy(s).multiplyScalar(scale);\n\n\t\tthis._matrix.compose(t, this._matrixQ, this._matrixS);\n\t\treturn this._matrix;\n\t}\n\n\tstatic rotateObject(object: Object3D, dirOrigin: Vector3, dirDest: Vector3) {\n\t\t_rotateDirDest.copy(dirDest).normalize();\n\t\t_rotateDirOrigin.copy(dirOrigin).normalize();\n\t\t_q.setFromUnitVectors(_rotateDirOrigin, _rotateDirDest);\n\t\t// this._rotate_geometry_m.identity(); // not entirely sure this is necessary\n\t\t_m.makeRotationFromQuaternion(_q);\n\t\tobject.matrix.multiply(_m);\n\t\t// object.updateMatrix();\n\t\tobject.matrix.decompose(object.position, object.quaternion, object.scale);\n\t}\n\n\tstatic decomposeMatrix(object: Object3D) {\n\t\tobject.matrix.decompose(object.position, object.quaternion, object.scale);\n\t}\n}\n","import {Matrix4} from 'three';\nimport {TypeAssert} from '../engine/poly/Assert';\nimport {CoreObjectType, isObject3D, ObjectContent} from './geometry/ObjectContent';\n\nexport enum ObjectTransformSpace {\n\tPARENT = 'parent',\n\tLOCAL = 'local',\n}\nexport enum ObjectTransformMode {\n\tSET = 'set matrix',\n\tMULT = 'multiply matrix',\n}\nexport const OBJECT_TRANSFORM_SPACES: ObjectTransformSpace[] = [\n\tObjectTransformSpace.PARENT,\n\tObjectTransformSpace.LOCAL,\n];\nexport const OBJECT_TRANSFORM_MODES: ObjectTransformMode[] = [ObjectTransformMode.SET, ObjectTransformMode.MULT];\nexport const OBJECT_TRANSFORM_SPACE_MENU_ENTRIES = [\n\t{name: 'parent', value: OBJECT_TRANSFORM_SPACES.indexOf(ObjectTransformSpace.PARENT)},\n\t{name: 'local', value: OBJECT_TRANSFORM_SPACES.indexOf(ObjectTransformSpace.LOCAL)},\n];\n\nexport function applyTransformWithSpaceToObject(\n\tobject: ObjectContent<CoreObjectType>,\n\tmatrix: Matrix4,\n\ttransformSpace: ObjectTransformSpace,\n\ttransformMode: ObjectTransformMode\n) {\n\tswitch (transformSpace) {\n\t\tcase ObjectTransformSpace.PARENT: {\n\t\t\tif (isObject3D(object)) {\n\t\t\t\tobject.updateMatrix();\n\t\t\t\tobject.applyMatrix4(matrix);\n\t\t\t\tobject.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tobject.applyMatrix4(matrix);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tcase ObjectTransformSpace.LOCAL: {\n\t\t\tif (isObject3D(object)) {\n\t\t\t\tobject.updateMatrix();\n\t\t\t\tif (transformMode == ObjectTransformMode.SET) {\n\t\t\t\t\tobject.matrix.copy(matrix);\n\t\t\t\t} else {\n\t\t\t\t\tobject.matrix.multiply(matrix);\n\t\t\t\t}\n\t\t\t\tobject.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\t// it should ideally multiply the existing matrix,\n\t\t\t\t// but I'm not sure how to do that with cad objects for now\n\t\t\t\tobject.applyMatrix4(matrix);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\tTypeAssert.unreachable(transformSpace);\n}\n","import {Euler, Vector2, Vector3, Vector4, Quaternion, Color} from 'three';\n\nexport function isArray(value: any): value is any[] {\n\treturn Array.isArray(value);\n}\nexport function isBoolean(value: any): value is boolean {\n\treturn value === true || value === false;\n}\nexport function isNumber(value: any): value is number {\n\treturn typeof value == 'number';\n}\nexport function isNumberValid(value: any): value is number {\n\treturn isNumber(value) && !isNaN(value);\n}\n// export function _isNaN(value: any): boolean {\n// \treturn isNaN(value);\n// }\nexport function isVector(value: any): value is Vector2 | Vector3 | Vector4 {\n\treturn value instanceof Vector2 || value instanceof Vector3 || value instanceof Vector4;\n}\nexport function isColor(value: any): value is Color {\n\treturn value instanceof Color;\n}\nexport function isEuler(value: any): value is Euler {\n\treturn value instanceof Euler;\n}\nexport function isQuaternion(value: any): value is Quaternion {\n\treturn value instanceof Quaternion;\n}\nexport function isString(value: any): value is string {\n\treturn typeof value == 'string';\n}\nexport function isObject(value: any): value is object {\n\tvar type = typeof value;\n\treturn value != null && (type == 'object' || type == 'function');\n}\nexport function isFunction(value: any): value is Function {\n\tvar type = typeof value;\n\treturn value != null && type == 'function';\n}\nexport function isPromise<T extends any>(value: any): value is Promise<T> {\n\treturn value instanceof Promise;\n}\n// a simple way to test the type and value of a param value\nexport function isBooleanTrue(value: boolean) {\n\treturn value;\n}\nexport function ensureString(value: string) {\n\treturn value;\n}\n\nexport class CoreType {\n\tstatic isNumber = isNumber;\n\tstatic isNumberValid = isNumberValid;\n\tstatic isVector = isVector;\n\tstatic isColor = isColor;\n\tstatic isEuler = isEuler;\n\tstatic isQuaternion = isQuaternion;\n\tstatic isString = isString;\n\tstatic isBoolean = isBoolean;\n\tstatic isNaN = isNaN;\n\tstatic isArray = isArray;\n\tstatic isObject = isObject;\n\tstatic isFunction = isFunction;\n}\n","// let el: HTMLDivElement | undefined;\n// function _div() {\n// \treturn (el = el || document.createElement('div'));\n// }\n\nexport function isMobile(): boolean {\n\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\nexport function isIOS(): boolean {\n\treturn /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n}\nexport function isAndroid(): boolean {\n\treturn /(Android)/g.test(navigator.userAgent);\n}\nexport function isTouchDevice(): boolean {\n\treturn (\n\t\tisMobile() ||\n\t\tisIOS() ||\n\t\tisAndroid() ||\n\t\t'ontouchstart' in window ||\n\t\t((window as any).DocumentTouch != null && document instanceof (window as any).DocumentTouch)\n\t);\n}\nexport function isChrome(): boolean {\n\treturn navigator && navigator.userAgent != null && navigator.userAgent.indexOf('Chrome') != -1;\n}\nexport function isSafari(): boolean {\n\treturn /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\nexport function isPortrait(): boolean {\n\treturn window.innerHeight > window.innerWidth;\n}\nexport function isLandscape(): boolean {\n\treturn !isPortrait();\n}\nexport function screenOrientation() {\n\tconst windowOrientation = window.orientation;\n\tif (windowOrientation != null) {\n\t\treturn windowOrientation;\n\t}\n\tconst screenAngle: number | undefined = window?.screen?.orientation?.angle || 0;\n\treturn screenAngle;\n}\n\nexport class CoreUserAgent {\n\t// user agent on linux with chrome\n\t// \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\"\n\t// user agent on linux with firefox\n\t// \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:83.0) Gecko/20100101 Firefox/83.0\"\n\tprivate static _isChrome: boolean | undefined;\n\tstatic isChrome(): boolean {\n\t\tif (this._isChrome == null) {\n\t\t\tthis._isChrome = isChrome();\n\t\t}\n\t\treturn this._isChrome;\n\t}\n\tprivate static _isSafari: boolean | undefined;\n\tstatic isSafari(): boolean {\n\t\tif (this._isSafari == null) {\n\t\t\tthis._isSafari = isSafari();\n\t\t}\n\t\treturn this._isSafari;\n\t}\n\tprivate static _isMobile: boolean | undefined;\n\tstatic isMobile(): boolean {\n\t\tif (this._isMobile == null) {\n\t\t\tthis._isMobile = isMobile();\n\t\t}\n\t\treturn this._isMobile;\n\t}\n\tprivate static _isiOS: boolean | undefined;\n\tstatic isiOS(): boolean {\n\t\tif (this._isiOS == null) {\n\t\t\tthis._isiOS = isIOS();\n\t\t}\n\t\treturn this._isiOS;\n\t}\n\tprivate static _isAndroid: boolean | undefined;\n\tstatic isAndroid(): boolean {\n\t\tif (this._isAndroid == null) {\n\t\t\tthis._isAndroid = isAndroid();\n\t\t}\n\t\treturn this._isAndroid;\n\t}\n\tprivate static _isTouchDevice: boolean | undefined;\n\tstatic isTouchDevice(): boolean {\n\t\t// https://stackoverflow.com/questions/6262584/how-to-determine-if-the-client-is-a-touch-device\n\t\t// the following would not work on android\n\t\t// const el = _div();\n\t\t// el.setAttribute('ongesturestart', 'return;'); // or try \"ontouchstart\"\n\t\t// return typeof (el as any).ongesturestart === 'function';\n\t\t// but this does work on android\n\t\t// return (this._isTouchDevice = this._isTouchDevice || document.documentElement.ontouchstart != null);\n\t\t// update:\n\t\tif (this._isTouchDevice == null) {\n\t\t\tthis._isTouchDevice = isTouchDevice();\n\t\t}\n\t\treturn this._isTouchDevice;\n\t}\n\tstatic isPortrait = isPortrait;\n\tstatic isLandscape = isLandscape;\n\tstatic screenOrientation = screenOrientation;\n}\n","import {Constructor} from './../types/GlobalTypes';\nimport {CoreGraphNode} from './graph/CoreGraphNode';\nimport {BaseNodeType} from '../engine/nodes/_Base';\nimport {BaseParamType} from '../engine/params/_Base';\nimport {DecomposedPath} from './DecomposedPath';\nimport {NodeContext, BaseNodeByContextMap} from '../engine/poly/NodeContext';\nimport {NodeErrorState} from '../engine/nodes/utils/states/Error';\nimport {ParamType} from '../engine/poly/ParamType';\nimport {ParamErrorState} from '../engine/params/utils/states/Error';\nimport {ParamConstructorMap} from '../engine/params/types/ParamConstructorMap';\n\ntype NodeOrParam = BaseNodeType | BaseParamType;\n\nexport const NODE_PATH_DEFAULT = {\n\tNODE: {\n\t\tEMPTY: '',\n\t\tUV: '/COP/imageUv',\n\t\tENV_MAP: '/COP/envMap',\n\t\tCUBE_MAP: '/COP/cubeCamera',\n\t},\n};\nconst _remainingElements: string[] = [];\nconst _ups: string[] = [];\n\nabstract class GraphNodePathParamValue<T extends CoreGraphNode> {\n\tprotected _graphNode: T | null = null;\n\tconstructor(protected _path: string = '') {}\n\tgraphNode() {\n\t\treturn this._graphNode;\n\t}\n\tprivate _setGraphNode(graphNode: T | null) {\n\t\tthis._graphNode = graphNode;\n\t}\n\tabstract graphNodePath(): string | undefined;\n\tpath() {\n\t\treturn this._path;\n\t}\n\tsetPath(path: string) {\n\t\tthis._path = path;\n\t}\n\tclone(): this {\n\t\tconst cloned = new (this.constructor as Constructor<GraphNodePathParamValue<T>>)(this._path);\n\t\tcloned._setGraphNode(this._graphNode);\n\t\treturn cloned as this;\n\t}\n}\n\nexport class TypedNodePathParamValue extends GraphNodePathParamValue<BaseNodeType> {\n\tsetNode(node: BaseNodeType | null) {\n\t\tthis._graphNode = node;\n\t}\n\n\tnode() {\n\t\treturn this._graphNode;\n\t}\n\tgraphNodePath() {\n\t\treturn this.node()?.path();\n\t}\n\n\tresolve(nodeStart: BaseNodeType, decomposedPath?: DecomposedPath) {\n\t\tthis._graphNode = CoreWalker.findNode(nodeStart, this._path, decomposedPath);\n\t}\n\n\tnodeWithContext<N extends NodeContext, K extends NodeContext>(\n\t\tcontext: N,\n\t\terrorState?: NodeErrorState<K>\n\t): BaseNodeByContextMap[N] | undefined {\n\t\tconst foundNode = this.node();\n\t\tif (!foundNode) {\n\t\t\terrorState?.set(`no node found at ${this.path()}`);\n\t\t\treturn;\n\t\t}\n\t\tconst nodeContext = foundNode.context();\n\t\tif (nodeContext == context) {\n\t\t\treturn foundNode as BaseNodeByContextMap[N];\n\t\t} else {\n\t\t\terrorState?.set(`expected ${context} node, but got a ${nodeContext}`);\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nexport class TypedParamPathParamValue extends GraphNodePathParamValue<BaseParamType> {\n\tsetParam(param: BaseParamType | null) {\n\t\tthis._graphNode = param;\n\t}\n\tparam() {\n\t\treturn this._graphNode;\n\t}\n\tgraphNodePath() {\n\t\treturn this.param()?.path();\n\t}\n\n\tresolve(nodeStart: BaseNodeType, decomposedPath?: DecomposedPath) {\n\t\tthis._graphNode = CoreWalker.findParam(nodeStart, this._path, decomposedPath);\n\t}\n\n\tparamWithType<T extends ParamType>(\n\t\tparamType: T,\n\t\terror_state?: ParamErrorState\n\t): ParamConstructorMap[T] | undefined {\n\t\tconst foundParam = this.param();\n\t\tif (!foundParam) {\n\t\t\terror_state?.set(`no param found at ${this.path()}`);\n\t\t\treturn;\n\t\t}\n\t\tif (foundParam.type() == paramType) {\n\t\t\treturn foundParam as ParamConstructorMap[T];\n\t\t} else {\n\t\t\terror_state?.set(`expected ${paramType} node, but got a ${foundParam.type()}`);\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nexport class CoreWalker {\n\tpublic static readonly SEPARATOR = '/';\n\tpublic static readonly DOT = '.';\n\tpublic static readonly CURRENT = CoreWalker.DOT;\n\tpublic static readonly PARENT = '..';\n\tpublic static readonly CURRENT_WITH_SLASH = `${CoreWalker.CURRENT}/`;\n\tpublic static readonly PARENT_WITH_SLASH = `${CoreWalker.PARENT}/`;\n\tpublic static readonly NON_LETTER_PREFIXES = [CoreWalker.SEPARATOR, CoreWalker.DOT];\n\n\tstatic splitParentChild(path: string) {\n\t\tconst elements: string[] = path.split(CoreWalker.SEPARATOR).filter((e) => e.length > 0);\n\t\tconst child_path = elements.pop();\n\t\tconst parent_path = elements.join(CoreWalker.SEPARATOR);\n\t\treturn {parent: parent_path, child: child_path};\n\t}\n\n\tstatic findNode(nodeSrc: BaseNodeType, path: string, decomposedPath?: DecomposedPath): BaseNodeType | null {\n\t\tif (!nodeSrc) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst elements: string[] = path.split(CoreWalker.SEPARATOR).filter((e) => e.length > 0);\n\t\tconst firstElement = elements[0];\n\n\t\tlet nextNode: BaseNodeType | null = null;\n\t\tif (path[0] === CoreWalker.SEPARATOR) {\n\t\t\tconst pathFromRoot = path.substring(1);\n\t\t\tnextNode = this.findNode(nodeSrc.root(), pathFromRoot, decomposedPath);\n\t\t} else {\n\t\t\tswitch (firstElement) {\n\t\t\t\tcase CoreWalker.PARENT:\n\t\t\t\t\tnextNode = nodeSrc.parent();\n\t\t\t\t\tif (nextNode) {\n\t\t\t\t\t\tdecomposedPath?.addPathElement({path: firstElement, node: nextNode});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase CoreWalker.CURRENT:\n\t\t\t\t\tnextNode = nodeSrc;\n\t\t\t\t\tdecomposedPath?.addPathElement({path: firstElement, node: nextNode});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tnextNode = nodeSrc.node(firstElement);\n\t\t\t\t\tif (nextNode) {\n\t\t\t\t\t\tdecomposedPath?.addNamedNode({name: firstElement, node: nextNode});\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nextNode != null && elements.length > 1) {\n\t\t\t\tconst remainder = elements.slice(1).join(CoreWalker.SEPARATOR);\n\t\t\t\tnextNode = this.findNode(nextNode, remainder, decomposedPath);\n\t\t\t}\n\t\t\treturn nextNode;\n\t\t}\n\n\t\treturn nextNode;\n\t}\n\n\tstatic findParam(nodeSrc: BaseNodeType, path: string, decomposedPath?: DecomposedPath): BaseParamType | null {\n\t\tif (!nodeSrc) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst elements = path.split(CoreWalker.SEPARATOR);\n\n\t\tif (elements.length === 1) {\n\t\t\treturn nodeSrc.params.get(elements[0]);\n\t\t} else {\n\t\t\tlet node: BaseNodeType | null = null;\n\t\t\tif (path[0] === CoreWalker.SEPARATOR && elements.length == 2) {\n\t\t\t\tnode = nodeSrc.root();\n\t\t\t} else {\n\t\t\t\tconst nodePath = elements.slice(0, +(elements.length - 2) + 1 || undefined).join(CoreWalker.SEPARATOR);\n\t\t\t\tnode = this.findNode(nodeSrc, nodePath, decomposedPath);\n\t\t\t}\n\t\t\tif (node != null) {\n\t\t\t\tconst paramName = elements[elements.length - 1];\n\t\t\t\tconst param = node.params.get(paramName);\n\t\t\t\tif (decomposedPath && param) {\n\t\t\t\t\tdecomposedPath.addNamedNode({name: paramName, node: param});\n\t\t\t\t}\n\t\t\t\treturn param;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t\t// throw `no node found for path ${node_path}`;\n\t\t\t}\n\t\t}\n\t}\n\tstatic relativePath(srcGraphNode: Readonly<BaseNodeType>, destGraphNode: Readonly<BaseNodeType>): string {\n\t\tconst parent = this.closestCommonParent(srcGraphNode, destGraphNode);\n\t\tif (!parent) {\n\t\t\treturn destGraphNode.path();\n\t\t} else {\n\t\t\tconst distance = this.distanceToParent(srcGraphNode, parent);\n\t\t\tlet up = '';\n\t\t\tif (distance > 0) {\n\t\t\t\tlet i = 0;\n\t\t\t\t_ups.length = 0;\n\t\t\t\twhile (i++ < distance) {\n\t\t\t\t\t_ups.push(CoreWalker.PARENT);\n\t\t\t\t}\n\t\t\t\tup = _ups.join(CoreWalker.SEPARATOR) + CoreWalker.SEPARATOR;\n\t\t\t}\n\n\t\t\tconst parent_path_elements = parent\n\t\t\t\t.path()\n\t\t\t\t.split(CoreWalker.SEPARATOR)\n\t\t\t\t.filter((e) => e.length > 0);\n\t\t\tconst dest_path_elements = destGraphNode\n\t\t\t\t.path()\n\t\t\t\t.split(CoreWalker.SEPARATOR)\n\t\t\t\t.filter((e) => e.length > 0);\n\t\t\t_remainingElements.length = 0;\n\t\t\tlet cmptr = 0;\n\t\t\tfor (const dest_path_element of dest_path_elements) {\n\t\t\t\tif (!parent_path_elements[cmptr]) {\n\t\t\t\t\t_remainingElements.push(dest_path_element);\n\t\t\t\t}\n\t\t\t\tcmptr++;\n\t\t\t}\n\t\t\tconst down = _remainingElements.join(CoreWalker.SEPARATOR);\n\t\t\treturn this.sanitizePath(`${up}${down}`);\n\t\t}\n\t}\n\tstatic sanitizePath(path: string) {\n\t\treturn path.replace(/\\/\\//g, '/');\n\t}\n\n\tstatic closestCommonParent(\n\t\tgraphNode1: Readonly<BaseNodeType>,\n\t\tgraphNode2: Readonly<BaseNodeType>\n\t): Readonly<BaseNodeType> | null {\n\t\tconst parents1 = this.parents(graphNode1).reverse().concat([graphNode1]);\n\t\tconst parents2 = this.parents(graphNode2).reverse().concat([graphNode2]);\n\n\t\tconst minDepth = Math.min(parents1.length, parents2.length);\n\t\tlet foundParent = null;\n\n\t\tfor (let i = 0; i < minDepth; i++) {\n\t\t\tif (parents1[i].graphNodeId() == parents2[i].graphNodeId()) {\n\t\t\t\tfoundParent = parents1[i];\n\t\t\t}\n\t\t}\n\t\treturn foundParent;\n\t}\n\tstatic parents(graphNode: Readonly<NodeOrParam>): Readonly<BaseNodeType>[] {\n\t\tconst parents = [];\n\t\tlet parent = graphNode.parent();\n\t\twhile (parent) {\n\t\t\tparents.push(parent);\n\t\t\tparent = parent.parent();\n\t\t}\n\t\treturn parents;\n\t}\n\tstatic distanceToParent(graphNode: Readonly<NodeOrParam>, dest: Readonly<BaseNodeType>): number {\n\t\tlet distance = 0;\n\t\tlet current: Readonly<NodeOrParam | null> = graphNode;\n\t\tconst destId = dest.graphNodeId();\n\t\twhile (current && current.graphNodeId() != destId) {\n\t\t\tdistance += 1;\n\t\t\tcurrent = current.parent();\n\t\t}\n\t\tif (current && current.graphNodeId() == destId) {\n\t\t\treturn distance;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tstatic makeAbsolutePath(nodeSrc: BaseNodeType | BaseParamType, path: string): string | null {\n\t\tif (path[0] == CoreWalker.SEPARATOR) {\n\t\t\treturn path;\n\t\t}\n\t\tconst pathElements = path.split(CoreWalker.SEPARATOR);\n\t\tconst firstElement = pathElements.shift();\n\n\t\tif (firstElement) {\n\t\t\tswitch (firstElement) {\n\t\t\t\tcase '..': {\n\t\t\t\t\tconst parent = nodeSrc.parent();\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tif (parent == nodeSrc.scene().root()) {\n\t\t\t\t\t\t\treturn CoreWalker.SEPARATOR + pathElements.join(CoreWalker.SEPARATOR);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn this.makeAbsolutePath(parent, pathElements.join(CoreWalker.SEPARATOR));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcase '.': {\n\t\t\t\t\treturn this.makeAbsolutePath(nodeSrc, pathElements.join(CoreWalker.SEPARATOR));\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\treturn [nodeSrc.path(), path].join(CoreWalker.SEPARATOR);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn nodeSrc.path();\n\t\t}\n\t}\n}\n","import {JsNodeFinder} from '../../engine/nodes/js/code/utils/NodeFinder';\nimport {ActorEvaluator} from '../../engine/nodes/js/code/assemblers/actor/ActorEvaluator';\nimport {ActorEvaluatorGenerator} from '../../engine/nodes/js/code/assemblers/actor/ActorEvaluatorGenerator';\nimport {ActorFunctionData} from '../../engine/nodes/js/code/assemblers/actor/ActorPersistedConfig';\nimport {computed, ref, watch} from '../reactivity/CoreReactivity';\nimport {RegisterableVariable} from '../../engine/nodes/js/code/assemblers/_BaseJsPersistedConfigUtils';\nimport {ActorBuilderNode} from '../../engine/scene/utils/ActorsManager';\nimport {Object3D} from 'three';\nimport {CoreObjectType, ObjectContent} from '../geometry/ObjectContent';\nimport {FUNC_POINTS_COUNT_FROM_OBJECT, FUNC_CORE_PRIMITIVE_CLASS_FACTORY} from '../../engine/nodes/js/utils/Common';\nimport {pointsCountFromObject} from '../geometry/entities/point/CorePointUtils';\nimport {corePrimitiveClassFactory} from '../geometry/CoreObjectFactory';\nimport {arrayToSet} from '../ArrayUtils';\n\nconst FUNCTION_ARGS_DICT = {\n\t[FUNC_POINTS_COUNT_FROM_OBJECT]: pointsCountFromObject,\n\t[FUNC_CORE_PRIMITIVE_CLASS_FACTORY]: corePrimitiveClassFactory,\n\tActorEvaluator,\n\tcomputed,\n\tref,\n\twatch,\n};\nconst FUNCTION_ARG_NAMES = Object.keys(FUNCTION_ARGS_DICT);\nconst FUNCTION_ARGS = FUNCTION_ARG_NAMES.map((argName) => (FUNCTION_ARGS_DICT as any)[argName]);\n\ntype OnCompilationCompletedHook = () => void;\nexport const ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT_NAME = 'ActorCompilationController-DUMMY';\nfunction _createDummyObject() {\n\tconst object = new Object3D();\n\tobject.name = ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT_NAME;\n\treturn object;\n}\nexport const ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT = _createDummyObject();\nexport class ActorCompilationController {\n\tconstructor(protected node: ActorBuilderNode) {}\n\n\tcompileIfRequired() {\n\t\tif (this.node.assemblerController()?.compileRequired()) {\n\t\t\tthis.compile();\n\t\t}\n\t\t// always clear objects,\n\t\t// so that we don't try and traverse physics objects that are not in the tree anymore\n\t\tthis._evaluatorGenerator.clearObjects();\n\t}\n\n\tprivate _evaluatorGenerator: ActorEvaluatorGenerator = new ActorEvaluatorGenerator(\n\t\t(object) => new ActorEvaluator(this.node, object)\n\t);\n\tevaluatorGenerator() {\n\t\treturn this._evaluatorGenerator;\n\t}\n\tprivate _functionData: ActorFunctionData | undefined;\n\tfunctionData() {\n\t\treturn this._functionData;\n\t}\n\tprivate _resetFunctionData() {\n\t\tthis._functionData = undefined;\n\t\t// if (!this.node.isDirty()) {\n\t\t// \tthis.node.setDirty();\n\t\t// }\n\t}\n\tupdateFromFunctionData(functionData: ActorFunctionData) {\n\t\tthis._functionData = functionData;\n\t\tconst {functionBody, variableNames, variablesByName, functionNames, functionsByName, paramConfigs, eventDatas} =\n\t\t\tthis._functionData;\n\n\t\tconst wrappedBody = `\n\t\t\ttry {\n\t\t\t\t${functionBody}\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\t_setErrorFromError(e)\n\t\t\t\treturn null\n\t\t\t}`;\n\t\tconst _setErrorFromError = (e: Error) => {\n\t\t\tthis.node.states.error.set(e.message);\n\t\t};\n\n\t\tconst variables: RegisterableVariable[] = [];\n\t\tconst functions: Function[] = [];\n\t\tfor (const variableName of variableNames) {\n\t\t\tconst variable = variablesByName[variableName];\n\t\t\tvariables.push(variable);\n\t\t}\n\t\tfor (const functionName of functionNames) {\n\t\t\tconst _func = functionsByName[functionName];\n\t\t\tfunctions.push(_func);\n\t\t}\n\n\t\tconst paramConfigUniformNames: string[] = paramConfigs.map((pc) => pc.uniformName());\n\n\t\tparamConfigs.forEach((p) => p.applyToNode(this.node));\n\n\t\t// args & args names\n\t\tconst functionCreationArgs = [\n\t\t\t...FUNCTION_ARG_NAMES,\n\t\t\t'_setErrorFromError',\n\t\t\t...variableNames,\n\t\t\t...functionNames,\n\t\t\t// ...FUNCTION_UTILS.names,\n\t\t\t...paramConfigUniformNames,\n\t\t\twrappedBody,\n\t\t];\n\t\tconst functionEvalArgs = () => [\n\t\t\t...FUNCTION_ARGS,\n\t\t\t_setErrorFromError,\n\t\t\t// it is currently preferable to create a unique set of variables\n\t\t\t// for each evaluator\n\t\t\t...variables.map((v) => v.clone()),\n\t\t\t...functions,\n\t\t\t// ...FUNCTION_UTILS.functions,\n\t\t];\n\t\ttry {\n\t\t\tconst _function = new Function(...functionCreationArgs);\n\t\t\tconst _createEvaluator = (object: ObjectContent<CoreObjectType>) => {\n\t\t\t\tconst evaluatorClass = _function(...functionEvalArgs()) as typeof ActorEvaluator;\n\t\t\t\tconst evaluator = new evaluatorClass(this.node, object);\n\t\t\t\treturn evaluator;\n\t\t\t};\n\t\t\tconst evaluatorGenerator = new ActorEvaluatorGenerator((object) => {\n\t\t\t\tconst evaluator = _createEvaluator(object);\n\t\t\t\treturn this.node.scene().dispatchController.processActorEvaluator(evaluator) || evaluator;\n\t\t\t});\n\t\t\t//\n\t\t\tconst dummyEvaluator = _createEvaluator(ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT);\n\t\t\tevaluatorGenerator.setExpectedEvaluatorMethodNames(dummyEvaluator);\n\n\t\t\t//\n\t\t\t//\n\t\t\t// add inputEvents\n\t\t\t//\n\t\t\t//\n\t\t\tevaluatorGenerator.eventDatas = evaluatorGenerator.eventDatas || new Set();\n\t\t\tarrayToSet(eventDatas, evaluatorGenerator.eventDatas);\n\n\t\t\t//\n\t\t\t//\n\t\t\t// evaluator is ready\n\t\t\t//\n\t\t\t//\n\t\t\tthis._setEvaluatorGenerator(evaluatorGenerator);\n\t\t} catch (e) {\n\t\t\tconsole.warn(e);\n\t\t\tconsole.log(`failed to compile actor node ${this.node.path()}`);\n\t\t\tconsole.log({functionData});\n\t\t\tthis.node.states.error.set('failed to compile');\n\t\t}\n\t}\n\tprivate _setEvaluatorGenerator(evaluatorGenerator: ActorEvaluatorGenerator) {\n\t\tthis.node.scene().actorsManager.unregisterEvaluatorGenerator(this._evaluatorGenerator);\n\t\tthis._evaluatorGenerator.clearObjects();\n\t\tthis._evaluatorGenerator = evaluatorGenerator;\n\t\tthis.node.scene().actorsManager.registerEvaluatorGenerator(evaluatorGenerator);\n\t}\n\tcompile() {\n\t\tconst assemblerController = this.node.assemblerController();\n\t\tif (!assemblerController) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.node.states.error.clear();\n\t\t// main compilation (just used for reset in this assembler)\n\t\tassemblerController.assembler.updateFunction();\n\n\t\t// get functionData\n\t\tconst paramNodes = JsNodeFinder.findParamGeneratingNodes(this.node);\n\t\ttry {\n\t\t\tconst functionData = assemblerController.assembler.createFunctionData(paramNodes);\n\t\t\tif (!functionData) {\n\t\t\t\tthis._resetFunctionData();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.updateFromFunctionData(functionData);\n\t\t\tassemblerController.post_compile();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis._resetFunctionData();\n\t\t\t// throw new Error(err);\n\t\t}\n\t\tthis._runOnCompilationCompletedCallbacks();\n\t}\n\n\tprivate _onCompilationCompletedCallbacks: Set<OnCompilationCompletedHook> | undefined;\n\taddOnCompilationCompleted(callback: OnCompilationCompletedHook) {\n\t\tthis._onCompilationCompletedCallbacks = this._onCompilationCompletedCallbacks || new Set();\n\t\tthis._onCompilationCompletedCallbacks.add(callback);\n\t}\n\tremoveOnCompilationCompleted(callback: OnCompilationCompletedHook) {\n\t\tif (!this._onCompilationCompletedCallbacks) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onCompilationCompletedCallbacks.delete(callback);\n\t\tif (this._onCompilationCompletedCallbacks.size == 0) {\n\t\t\tthis._onCompilationCompletedCallbacks = undefined;\n\t\t}\n\t}\n\tprivate _runOnCompilationCompletedCallbacks() {\n\t\tif (!this._onCompilationCompletedCallbacks) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onCompilationCompletedCallbacks.forEach((callback) => callback());\n\t}\n}\n","export enum AnimNodeEasing {\n\tNONE = 'none',\n\tPOWER1 = 'power1',\n\tPOWER2 = 'power2',\n\tPOWER3 = 'power3',\n\tPOWER4 = 'power4',\n\tBACK = 'back',\n\tELASTIC = 'elastic',\n\tBOUNCE = 'bounce',\n\t// rough\n\tSLOW = 'slow',\n\tSTEPS = 'steps',\n\tCIRC = 'circ',\n\tEXPO = 'expo',\n\tSINE = 'sine',\n\t// Custom\n}\nexport const EASINGS: AnimNodeEasing[] = [\n\tAnimNodeEasing.NONE,\n\tAnimNodeEasing.POWER1,\n\tAnimNodeEasing.POWER2,\n\tAnimNodeEasing.POWER3,\n\tAnimNodeEasing.POWER4,\n\tAnimNodeEasing.BACK,\n\tAnimNodeEasing.ELASTIC,\n\tAnimNodeEasing.BOUNCE,\n\n\tAnimNodeEasing.SLOW,\n\tAnimNodeEasing.STEPS,\n\tAnimNodeEasing.CIRC,\n\tAnimNodeEasing.EXPO,\n\tAnimNodeEasing.SINE,\n];\nexport enum InOutMode {\n\tIN = 'in',\n\tOUT = 'out',\n\tIN_OUT = 'inOut',\n}\nexport const IN_OUT_MODES: InOutMode[] = [InOutMode.IN, InOutMode.OUT, InOutMode.IN_OUT];\n","import {GsapTweenVars} from '../../thirdParty/gsap/gsapFactory';\nimport {AnimNodeEasing} from '../Constant';\nimport {TimelineBuilder} from '../TimelineBuilder';\n\nexport function animBuilderCommonVars(timelineBuilder: TimelineBuilder) {\n\tconst duration = timelineBuilder.duration();\n\tconst vars: GsapTweenVars = {duration: duration};\n\n\t// easing\n\tconst easing = timelineBuilder.easing() || AnimNodeEasing.NONE;\n\tif (easing) {\n\t\tvars.ease = easing;\n\t}\n\n\t// delay\n\tconst delay = timelineBuilder.delay();\n\tif (delay != null) {\n\t\tvars.delay = delay;\n\t}\n\n\t// repeat\n\tconst repeatParams = timelineBuilder.repeatParams();\n\tif (repeatParams) {\n\t\tvars.repeat = repeatParams.count;\n\t\tvars.repeatDelay = repeatParams.delay;\n\t\tvars.yoyo = repeatParams.yoyo;\n\t}\n\n\treturn vars;\n}\n","import {Object3D} from 'three';\nimport {ColorParam} from '../../engine/params/Color';\nimport {FloatParam} from '../../engine/params/Float';\nimport {IntegerParam} from '../../engine/params/Integer';\nimport {Vector2Param} from '../../engine/params/Vector2';\nimport {Vector3Param} from '../../engine/params/Vector3';\nimport {Vector4Param} from '../../engine/params/Vector4';\nimport {TimelineData} from '../thirdParty/gsap/gsap';\n\ninterface SceneGraphProperty {\n\tobject: Object3D;\n\tpropertyName: string;\n}\nexport type RegisterableProperty =\n\t| SceneGraphProperty\n\t| string\n\t| IntegerParam\n\t| FloatParam\n\t| Vector2Param\n\t| Vector3Param\n\t| Vector4Param\n\t| ColorParam;\n\nclass AnimatedPropertiesRegisterClass {\n\tprivate static _instance: AnimatedPropertiesRegisterClass;\n\tstatic instance() {\n\t\treturn (this._instance = this._instance || new AnimatedPropertiesRegisterClass());\n\t}\n\tprivate _propertiesMap: Map<RegisterableProperty, TimelineData> = new Map();\n\tprivate constructor() {}\n\n\tregisterProp(property: RegisterableProperty, timelineData: TimelineData) {\n\t\tthis._propertiesMap.set(this._convert(property), timelineData);\n\t}\n\tdeRegisterProp(property: RegisterableProperty) {\n\t\tthis._propertiesMap.delete(this._convert(property));\n\t}\n\tregisteredTimelineForProperty(property: RegisterableProperty) {\n\t\treturn this._propertiesMap.get(this._convert(property));\n\t}\n\tregisteredPropertiesCount() {\n\t\tlet count = 0;\n\t\tthis._propertiesMap.forEach(() => {\n\t\t\tcount++;\n\t\t});\n\t\treturn count;\n\t}\n\n\tprivate _convert(property: RegisterableProperty) {\n\t\tif ((property as SceneGraphProperty).object) {\n\t\t\tconst sceneGraphProp = property as SceneGraphProperty;\n\t\t\treturn `${sceneGraphProp.object.uuid}:${sceneGraphProp.propertyName}`;\n\t\t} else {\n\t\t\treturn property;\n\t\t}\n\t}\n}\nexport const AnimatedPropertiesRegister = AnimatedPropertiesRegisterClass.instance();\n","import {AnimatedPropertiesRegister} from '../AnimatedPropertiesRegister';\nimport {StartOptions} from './AnimBuilderTypes';\n\nexport function animBuilderStartTimeline(options: StartOptions) {\n\tconst {timelineBuilder, timeline, vars, target, registerableProp, registerproperties} = options;\n\n\tconst position = timelineBuilder.position();\n\tconst positionParam = position ? position.toParameter() : undefined;\n\tconst existingTimeline = AnimatedPropertiesRegister.registeredTimelineForProperty(registerableProp);\n\tconst newTimeline = timeline.to(target, vars, positionParam);\n\n\tconst onStart = () => {\n\t\tif (existingTimeline) {\n\t\t\tif (existingTimeline.stoppable) {\n\t\t\t\texistingTimeline.timeline.kill();\n\t\t\t\tAnimatedPropertiesRegister.deRegisterProp(registerableProp);\n\t\t\t} else {\n\t\t\t\tnewTimeline.kill();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (registerproperties) {\n\t\t\tAnimatedPropertiesRegister.registerProp(registerableProp, {\n\t\t\t\ttimeline: newTimeline,\n\t\t\t\tstoppable: timelineBuilder.stoppable(),\n\t\t\t});\n\t\t}\n\t};\n\tconst onComplete = () => {\n\t\tAnimatedPropertiesRegister.deRegisterProp(registerableProp);\n\t};\n\n\tif (vars.onStart) {\n\t\tconst prevOnStart = vars.onStart;\n\t\tvars.onStart = () => {\n\t\t\tonStart();\n\t\t\tprevOnStart();\n\t\t};\n\t} else {\n\t\tvars.onStart = onStart;\n\t}\n\n\tif (vars.onComplete) {\n\t\tconst prevOnComplete = vars.onComplete;\n\t\tvars.onComplete = () => {\n\t\t\tonComplete();\n\t\t\tprevOnComplete();\n\t\t};\n\t} else {\n\t\tvars.onComplete = onComplete;\n\t}\n}\n","import {BaseNodeType} from '../../engine/nodes/_Base';\nimport {FloatParam} from '../../engine/params/Float';\nimport {Vector3Param} from '../../engine/params/Vector3';\nimport {BaseParamType} from '../../engine/params/_Base';\nimport {ParamType} from '../../engine/poly/ParamType';\nimport {Vector2} from 'three';\nimport {Vector3} from 'three';\nimport {Vector4} from 'three';\nimport {Color} from 'three';\nimport {Number2, Number3, Number4} from '../../types/GlobalTypes';\nimport {ColorParam} from '../../engine/params/Color';\nimport {Vector4Param} from '../../engine/params/Vector4';\nimport {Vector2Param} from '../../engine/params/Vector2';\nimport {IntegerParam} from '../../engine/params/Integer';\nimport {CubicInterpolant} from 'three';\n\nexport class FloatParamProxy {\n\tpublic proxyValue: number;\n\tconstructor(private param: FloatParam) {\n\t\tthis.proxyValue = param.value;\n\t}\n\tupdate(interpolant?: CubicInterpolant) {\n\t\tif (interpolant) {\n\t\t\tconst val = interpolant.evaluate(this.proxyValue)[0];\n\t\t\tthis.param.set(val);\n\t\t} else {\n\t\t\tthis.param.set(this.proxyValue);\n\t\t}\n\t}\n}\nexport class IntegerParamProxy {\n\tpublic proxyValue: number;\n\tconstructor(private param: IntegerParam) {\n\t\tthis.proxyValue = param.value;\n\t}\n\tupdate() {\n\t\tthis.param.set(this.proxyValue);\n\t}\n}\nexport class Vector2ParamProxy {\n\tpublic proxyValue: Vector2 = new Vector2();\n\tprivate _array: Number2 = [0, 0];\n\tconstructor(private param: Vector2Param) {\n\t\tthis.proxyValue.copy(param.value);\n\t}\n\tupdate() {\n\t\tthis.proxyValue.toArray(this._array);\n\t\tthis.param.set(this._array);\n\t}\n}\n\nexport class Vector3ParamProxy {\n\tpublic proxyValue: Vector3 = new Vector3();\n\tprivate _array: Number3 = [0, 0, 0];\n\tconstructor(private param: Vector3Param) {\n\t\tthis.proxyValue.copy(param.value);\n\t}\n\tupdate() {\n\t\tthis.proxyValue.toArray(this._array);\n\t\tthis.param.set(this._array);\n\t}\n}\n\nexport class Vector4ParamProxy {\n\tpublic proxyValue: Vector4 = new Vector4();\n\tprivate _array: Number4 = [0, 0, 0, 0];\n\tconstructor(private param: Vector4Param) {\n\t\tthis.proxyValue.copy(param.value);\n\t}\n\tupdate() {\n\t\tthis.proxyValue.toArray(this._array);\n\t\tthis.param.set(this._array);\n\t}\n}\nexport class ColorParamProxy {\n\tpublic proxyValue: Color = new Color();\n\tprivate _array: Number3 = [0, 0, 0];\n\tconstructor(private param: ColorParam) {\n\t\tthis.proxyValue.copy(param.valuePreConversion());\n\t}\n\tupdate() {\n\t\tthis.proxyValue.toArray(this._array);\n\t\tthis.param.set(this._array);\n\t}\n}\n\ntype AnimationParamProxy =\n\t| FloatParamProxy\n\t| IntegerParamProxy\n\t| Vector2ParamProxy\n\t| Vector3ParamProxy\n\t| ColorParamProxy\n\t| Vector4ParamProxy;\n\nexport class AnimationNodeParamsProxy {\n\tprivate _map: Map<BaseParamType, AnimationParamProxy> = new Map();\n\tconstructor(node: BaseNodeType) {\n\t\tconst params = node.params.all;\n\t\tfor (const param of params) {\n\t\t\tconst paramProxy = this._createParamProxy(param);\n\t\t\tif (paramProxy) {\n\t\t\t\tthis._map.set(param, paramProxy);\n\t\t\t}\n\t\t}\n\t}\n\tprivate _createParamProxy(param: BaseParamType) {\n\t\tswitch (param.type()) {\n\t\t\tcase ParamType.INTEGER: {\n\t\t\t\treturn new IntegerParamProxy(param as IntegerParam);\n\t\t\t}\n\t\t\tcase ParamType.FLOAT: {\n\t\t\t\treturn new FloatParamProxy(param as FloatParam);\n\t\t\t}\n\t\t\tcase ParamType.VECTOR2: {\n\t\t\t\treturn new Vector2ParamProxy(param as Vector2Param);\n\t\t\t}\n\t\t\tcase ParamType.VECTOR3: {\n\t\t\t\treturn new Vector3ParamProxy(param as Vector3Param);\n\t\t\t}\n\t\t\tcase ParamType.COLOR: {\n\t\t\t\treturn new ColorParamProxy(param as ColorParam);\n\t\t\t}\n\t\t\tcase ParamType.VECTOR4: {\n\t\t\t\treturn new Vector4ParamProxy(param as Vector4Param);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetParamProxy(param: BaseParamType) {\n\t\treturn this._map.get(param);\n\t}\n}\n","import {BaseNodeType} from '../../engine/nodes/_Base';\nimport {BaseParamType} from '../../engine/params/_Base';\nimport {AnimationNodeParamsProxy} from './ParamProxy';\n\nclass NodeParamProxiesRegisterClass {\n\tprivate static _instance: NodeParamProxiesRegisterClass;\n\tstatic instance() {\n\t\treturn (this._instance = this._instance || new NodeParamProxiesRegisterClass());\n\t}\n\tprivate _map: Map<BaseNodeType, AnimationNodeParamsProxy> = new Map();\n\tprivate constructor() {}\n\n\tnodeProxy(node: BaseNodeType) {\n\t\tconst existingProxy = this._map.get(node);\n\t\tif (existingProxy) {\n\t\t\treturn existingProxy;\n\t\t}\n\t\tconst newProxy = new AnimationNodeParamsProxy(node);\n\t\tthis._map.set(node, newProxy);\n\t\treturn newProxy;\n\t}\n\tparamProxy(param: BaseParamType) {\n\t\treturn this.nodeProxy(param.node).getParamProxy(param);\n\t}\n}\nexport const NodeParamProxiesRegister = NodeParamProxiesRegisterClass.instance();\n","import {TypeAssert} from '../../../engine/poly/Assert';\nimport {Operation} from './AnimBuilderTypes';\n\nexport function AnimBuilderWithOp(currentValue: number, value: number, operation: Operation) {\n\tswitch (operation) {\n\t\tcase Operation.SET:\n\t\t\treturn value;\n\t\tcase Operation.ADD:\n\t\t\treturn currentValue + value;\n\t\tcase Operation.SUBTRACT:\n\t\t\treturn currentValue - value;\n\t}\n\tTypeAssert.unreachable(operation);\n}\n","import {Vector4} from 'three';\nimport {Vector4Param} from '../../../../engine/params/Vector4';\nimport {Poly} from '../../../../engine/Poly';\nimport {NodeParamProxiesRegister} from '../../NodeParamProxiesRegister';\nimport {Vector4ParamProxy} from '../../ParamProxy';\nimport {AnimPropertyTargetValue} from '../../TimelineBuilderProperty';\nimport {AddToTimelineOptions} from '../AnimBuilderTypes';\nimport {animBuilderCommonVars} from '../Common';\nimport {animBuilderStartTimeline} from '../StartTimeline';\nimport {AnimBuilderWithOp} from '../WithOp';\n\nexport function populateVarsForParamVector4(\n\tparam: Vector4Param,\n\ttargetValue: AnimPropertyTargetValue,\n\toptions: AddToTimelineOptions\n) {\n\tif (!(targetValue instanceof Vector4)) {\n\t\tPoly.warn(\n\t\t\t`TimelineBuilderProperty error: cannot animate vector4 param '${param.path()}' with targetValue`,\n\t\t\ttargetValue\n\t\t);\n\t\treturn;\n\t}\n\tconst proxy = NodeParamProxiesRegister.paramProxy(param) as Vector4ParamProxy;\n\tif (!proxy) {\n\t\treturn;\n\t}\n\tconst vars = animBuilderCommonVars(options.timelineBuilder);\n\tvars.onUpdate = () => {\n\t\tproxy.update();\n\t};\n\tconst operation = options.timelineBuilder.operation();\n\tvars.x = AnimBuilderWithOp(param.value.x, targetValue.x, operation);\n\tvars.y = AnimBuilderWithOp(param.value.y, targetValue.y, operation);\n\tvars.z = AnimBuilderWithOp(param.value.z, targetValue.z, operation);\n\tvars.w = AnimBuilderWithOp(param.value.w, targetValue.w, operation);\n\tanimBuilderStartTimeline({...options, vars, target: proxy.proxyValue, registerableProp: param});\n}\n","import {Color, Vector3} from 'three';\nimport {ColorParam} from '../../../../engine/params/Color';\nimport {Poly} from '../../../../engine/Poly';\nimport {NodeParamProxiesRegister} from '../../NodeParamProxiesRegister';\nimport {ColorParamProxy} from '../../ParamProxy';\nimport {AnimPropertyTargetValue} from '../../TimelineBuilderProperty';\nimport {AddToTimelineOptions} from '../AnimBuilderTypes';\nimport {animBuilderCommonVars} from '../Common';\nimport {animBuilderStartTimeline} from '../StartTimeline';\nimport {AnimBuilderWithOp} from '../WithOp';\nimport {Operation} from '../AnimBuilderTypes';\nimport {GsapTweenVars} from '../../../thirdParty/gsap/gsapFactory';\n\nexport function populateVarsForParamColor(\n\tparam: ColorParam,\n\ttargetValue: AnimPropertyTargetValue,\n\toptions: AddToTimelineOptions\n) {\n\tif (!(targetValue instanceof Color || targetValue instanceof Vector3)) {\n\t\tPoly.warn(\n\t\t\t`TimelineBuilderProperty error: cannot animate color param '${param.path()}' with targetValue`,\n\t\t\ttargetValue\n\t\t);\n\t\treturn;\n\t}\n\tconst proxy = NodeParamProxiesRegister.paramProxy(param) as ColorParamProxy;\n\tif (!proxy) {\n\t\treturn;\n\t}\n\tconst vars = animBuilderCommonVars(options.timelineBuilder);\n\tvars.onUpdate = () => {\n\t\tproxy.update();\n\t};\n\tconst operation = options.timelineBuilder.operation();\n\tconst x = targetValue instanceof Color ? targetValue.r : targetValue.x;\n\tconst y = targetValue instanceof Color ? targetValue.g : targetValue.y;\n\tconst z = targetValue instanceof Color ? targetValue.b : targetValue.z;\n\tvars.r = AnimBuilderWithOp(param.value.r, x, operation);\n\tvars.g = AnimBuilderWithOp(param.value.g, y, operation);\n\tvars.b = AnimBuilderWithOp(param.value.b, z, operation);\n\tanimBuilderStartTimeline({...options, vars, target: proxy.proxyValue, registerableProp: param});\n}\n\ninterface PopulateVarsForVector {\n\tvars: GsapTweenVars;\n\ttargetValue: Color;\n\ttargetProperty: Color;\n\tpropertyNames: string[];\n\toperation: Operation;\n}\nexport function populateVarsForColor(options: PopulateVarsForVector) {\n\tconst {vars, targetValue, targetProperty, propertyNames, operation} = options;\n\tfor (const propertyName of propertyNames) {\n\t\tvars[propertyName] = AnimBuilderWithOp(\n\t\t\ttargetProperty[propertyName as 'r'],\n\t\t\ttargetValue[propertyName as 'r'],\n\t\t\toperation\n\t\t);\n\t}\n}\n","import {Vector3} from 'three';\nimport {Vector3Param} from '../../../../engine/params/Vector3';\nimport {Poly} from '../../../../engine/Poly';\nimport {NodeParamProxiesRegister} from '../../NodeParamProxiesRegister';\nimport {Vector3ParamProxy} from '../../ParamProxy';\nimport {AnimPropertyTargetValue} from '../../TimelineBuilderProperty';\nimport {AddToTimelineOptions} from '../AnimBuilderTypes';\nimport {animBuilderCommonVars} from '../Common';\nimport {animBuilderStartTimeline} from '../StartTimeline';\nimport {AnimBuilderWithOp} from '../WithOp';\n\nexport function populateVarsForParamVector3(\n\tparam: Vector3Param,\n\ttargetValue: AnimPropertyTargetValue,\n\toptions: AddToTimelineOptions\n) {\n\tif (!(targetValue instanceof Vector3)) {\n\t\tPoly.warn(\n\t\t\t`TimelineBuilderProperty error: cannot animate vector3 param '${param.path()}' with targetValue`,\n\t\t\ttargetValue\n\t\t);\n\t\treturn;\n\t}\n\tconst proxy = NodeParamProxiesRegister.paramProxy(param) as Vector3ParamProxy;\n\tif (!proxy) {\n\t\treturn;\n\t}\n\tconst vars = animBuilderCommonVars(options.timelineBuilder);\n\tvars.onUpdate = () => {\n\t\tproxy.update();\n\t};\n\tconst operation = options.timelineBuilder.operation();\n\tvars.x = AnimBuilderWithOp(param.value.x, targetValue.x, operation);\n\tvars.y = AnimBuilderWithOp(param.value.y, targetValue.y, operation);\n\tvars.z = AnimBuilderWithOp(param.value.z, targetValue.z, operation);\n\tanimBuilderStartTimeline({...options, vars, target: proxy.proxyValue, registerableProp: param});\n}\n","import {Vector2} from 'three';\nimport {Vector2Param} from '../../../../engine/params/Vector2';\nimport {Poly} from '../../../../engine/Poly';\nimport {NodeParamProxiesRegister} from '../../NodeParamProxiesRegister';\nimport {Vector2ParamProxy} from '../../ParamProxy';\nimport {AnimPropertyTargetValue} from '../../TimelineBuilderProperty';\nimport {AddToTimelineOptions} from '../AnimBuilderTypes';\nimport {animBuilderCommonVars} from '../Common';\nimport {animBuilderStartTimeline} from '../StartTimeline';\nimport {AnimBuilderWithOp} from '../WithOp';\n\nexport function populateVarsForParamVector2(\n\tparam: Vector2Param,\n\ttargetValue: AnimPropertyTargetValue,\n\toptions: AddToTimelineOptions\n) {\n\tif (!(targetValue instanceof Vector2)) {\n\t\tPoly.warn(\n\t\t\t`TimelineBuilderProperty error: cannot animate vector2 param '${param.path()}' with targetValue`,\n\t\t\ttargetValue\n\t\t);\n\t\treturn;\n\t}\n\tconst proxy = NodeParamProxiesRegister.paramProxy(param) as Vector2ParamProxy;\n\tif (!proxy) {\n\t\treturn;\n\t}\n\tconst vars = animBuilderCommonVars(options.timelineBuilder);\n\tvars.onUpdate = () => {\n\t\tproxy.update();\n\t};\n\tconst operation = options.timelineBuilder.operation();\n\tvars.x = AnimBuilderWithOp(param.value.x, targetValue.x, operation);\n\tvars.y = AnimBuilderWithOp(param.value.y, targetValue.y, operation);\n\tanimBuilderStartTimeline({...options, vars, target: proxy.proxyValue, registerableProp: param});\n}\n","import {FloatParam} from '../../../../engine/params/Float';\nimport {IntegerParam} from '../../../../engine/params/Integer';\nimport {Poly} from '../../../../engine/Poly';\nimport {GsapTweenVars} from '../../../thirdParty/gsap/gsapFactory';\nimport {CoreType} from '../../../Type';\nimport {NodeParamProxiesRegister} from '../../NodeParamProxiesRegister';\nimport {FloatParamProxy, IntegerParamProxy} from '../../ParamProxy';\nimport {AnimPropertyTargetValue} from '../../TimelineBuilderProperty';\nimport {AddToTimelineOptions, Operation} from '../AnimBuilderTypes';\nimport {animBuilderCommonVars} from '../Common';\nimport {animBuilderStartTimeline} from '../StartTimeline';\nimport {AnimBuilderWithOp} from '../WithOp';\n\nexport function populateVarsForSingleNumber(\n\tparam: IntegerParam | FloatParam,\n\ttargetValue: AnimPropertyTargetValue,\n\toptions: AddToTimelineOptions\n) {\n\tif (!CoreType.isNumber(targetValue)) {\n\t\tPoly.warn(\n\t\t\t`TimelineBuilderProperty error: cannot animate float/integer param '${param.path()}' with targetValue`,\n\t\t\ttargetValue\n\t\t);\n\t\treturn;\n\t}\n\tconst proxy = NodeParamProxiesRegister.paramProxy(param) as FloatParamProxy | IntegerParamProxy;\n\tif (!proxy) {\n\t\treturn;\n\t}\n\tconst keyframes = options.timelineBuilder.keyframes();\n\tconst interpolant = keyframes ? keyframes.createInterpolant() : undefined;\n\tconst vars = animBuilderCommonVars(options.timelineBuilder);\n\tvars.onUpdate = () => {\n\t\tproxy.update(interpolant);\n\t};\n\tif (keyframes) {\n\t\t// TODO: keyframes should change duration\n\t\t// vars.duration = 1\n\t\ttargetValue = 1;\n\t}\n\n\tconst operation = options.timelineBuilder.operation();\n\tvars.proxyValue = AnimBuilderWithOp(param.value, targetValue, operation);\n\tanimBuilderStartTimeline({...options, vars, target: proxy, registerableProp: param});\n}\n\ninterface PopulateVarsForNumber {\n\tvars: GsapTweenVars;\n\ttargetValue: number;\n\ttargetProperty: number;\n\tpropertyNames: string[];\n\toperation: Operation;\n}\nexport function populateVarsForNumber(options: PopulateVarsForNumber) {\n\tconst {vars, targetValue, targetProperty, propertyNames, operation} = options;\n\tfor (const property_name of propertyNames) {\n\t\tvars[property_name] = AnimBuilderWithOp(targetProperty, targetValue, operation);\n\t}\n}\n","import {Vector2, Vector3, Vector4} from 'three';\nimport {GsapTweenVars} from '../../../thirdParty/gsap/gsapFactory';\nimport {Operation} from '../AnimBuilderTypes';\nimport {AnimBuilderWithOp} from '../WithOp';\n\ntype Vector = Vector2 | Vector3 | Vector4;\ninterface PopulateVarsForVector {\n\tvars: GsapTweenVars;\n\ttargetValue: Vector;\n\ttargetProperty: Vector;\n\tpropertyNames: string[];\n\toperation: Operation;\n}\nexport function populateVarsForVector(options: PopulateVarsForVector) {\n\tconst {vars, targetValue, targetProperty, propertyNames, operation} = options;\n\tfor (const propertyName of propertyNames) {\n\t\tvars[propertyName] = AnimBuilderWithOp(\n\t\t\ttargetProperty[propertyName as 'x'],\n\t\t\ttargetValue[propertyName as 'x'],\n\t\t\toperation\n\t\t);\n\t}\n}\n","import {Quaternion} from 'three';\nimport {GsapTweenVars} from '../../../thirdParty/gsap/gsapFactory';\n\ninterface PopulateVarsForVector {\n\tvars: GsapTweenVars;\n\ttargetValue: Quaternion;\n\ttargetProperty: Quaternion;\n}\nexport function populateVarsAndCreateProxyForQuaternion(options: PopulateVarsForVector) {\n\tconst {vars, targetValue, targetProperty} = options;\n\tconst proxy = {value: 0};\n\tconst qTarget = targetProperty;\n\tconst qStart = new Quaternion().copy(targetProperty);\n\tconst qEnd = targetValue;\n\tvars.onUpdate = () => {\n\t\tqTarget.slerpQuaternions(qStart, qEnd, proxy.value);\n\t};\n\tvars.value = 1;\n\treturn proxy;\n}\n","import {Euler, Vector3} from 'three';\nimport {GsapTweenVars} from '../../../thirdParty/gsap/gsapFactory';\nimport {Operation} from '../AnimBuilderTypes';\nimport {AnimBuilderWithOp} from '../WithOp';\n\ninterface PopulateVarsForVector {\n\tvars: GsapTweenVars;\n\ttargetValue: Vector3;\n\ttargetProperty: Euler;\n\tpropertyNames: string[];\n\toperation: Operation;\n}\nexport function populateVarsForEuler(options: PopulateVarsForVector) {\n\tconst {vars, targetValue, targetProperty, propertyNames, operation} = options;\n\tfor (const propertyName of propertyNames) {\n\t\tvars[propertyName] = AnimBuilderWithOp(\n\t\t\ttargetProperty[propertyName as 'x'],\n\t\t\ttargetValue[propertyName as 'x'],\n\t\t\toperation\n\t\t);\n\t}\n}\n","import {Vector2} from 'three';\nimport {Vector3} from 'three';\nimport {Vector4} from 'three';\nimport {Color} from 'three';\nimport {Quaternion} from 'three';\nimport {Object3D} from 'three';\nimport {BaseNodeType} from '../../engine/nodes/_Base';\nimport {BaseParamType} from '../../engine/params/_Base';\nimport {ParamType} from '../../engine/poly/ParamType';\nimport {Vector2Param} from '../../engine/params/Vector2';\nimport {Vector3Param} from '../../engine/params/Vector3';\nimport {Vector4Param} from '../../engine/params/Vector4';\nimport {Poly} from '../../engine/Poly';\nimport {CoreType} from '../Type';\nimport {ColorParam} from '../../engine/params/Color';\nimport {IntegerParam} from '../../engine/params/Integer';\nimport {RegisterableProperty} from './AnimatedPropertiesRegister';\nimport {animBuilderCommonVars} from './vars/Common';\nimport {AddToTimelineOptions, Operation} from './vars/AnimBuilderTypes';\nimport {animBuilderStartTimeline} from './vars/StartTimeline';\nimport {populateVarsForParamVector4} from './vars/type/Vector4';\nimport {populateVarsForColor, populateVarsForParamColor} from './vars/type/Color';\nimport {populateVarsForParamVector3} from './vars/type/Vector3';\nimport {populateVarsForParamVector2} from './vars/type/Vector2';\nimport {populateVarsForNumber, populateVarsForSingleNumber} from './vars/type/Number';\nimport {populateVarsForVector} from './vars/type/Vector';\nimport {populateVarsAndCreateProxyForQuaternion} from './vars/type/Quaternion';\nimport {populateVarsForEuler} from './vars/type/Euler';\nimport type {GsapTweenVars} from '../thirdParty/gsap/gsapFactory';\n\nexport type AnimPropertyTargetValue = number | Vector2 | Vector3 | Color | Vector4 | Quaternion;\n\ninterface Object3DProps {\n\ttargetProperty: AnimPropertyTargetValue;\n\ttoTarget: object;\n\tpropertyNames: string[];\n}\ninterface PopulateVarsOptions {\n\tvars: GsapTweenVars;\n\ttargetValue: AnimPropertyTargetValue;\n\ttargetProperty: AnimPropertyTargetValue;\n\tpropertyNames: string[];\n\toperation: Operation;\n}\n\nconst PROPERTY_SEPARATOR = '.';\n\nexport class TimelineBuilderProperty {\n\tprivate _propertyName: string | undefined;\n\tprivate _targetValue: AnimPropertyTargetValue | undefined;\n\tconstructor() {}\n\tsetName(name: string) {\n\t\tthis._propertyName = name;\n\t}\n\tsetTargetValue(value: AnimPropertyTargetValue) {\n\t\tthis._targetValue = value;\n\t}\n\tname() {\n\t\treturn this._propertyName;\n\t}\n\ttargetValue() {\n\t\treturn this._targetValue;\n\t}\n\n\tprivate _debug = false;\n\tsetDebug(debug: boolean) {\n\t\tthis._debug = debug;\n\t}\n\tprivate _printDebug(message: any) {\n\t\tif (!this._debug) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(message);\n\t}\n\n\tclone() {\n\t\tconst cloned = new TimelineBuilderProperty();\n\t\tif (this._propertyName) {\n\t\t\tcloned.setName(this._propertyName);\n\t\t}\n\t\tif (this._targetValue != null) {\n\t\t\tconst newTargetValue = CoreType.isNumber(this._targetValue) ? this._targetValue : this._targetValue.clone();\n\t\t\tcloned.setTargetValue(newTargetValue);\n\t\t}\n\n\t\treturn cloned;\n\t}\n\n\taddToTimeline(options: AddToTimelineOptions) {\n\t\tconst target = options.propertyTarget || options.target;\n\t\tconst objects = target.objects() as Object3D[];\n\t\tconst node = target.node();\n\t\tthis._printDebug(['addToTimeline', target, objects, node]);\n\t\tif (objects) {\n\t\t\tthis._populateWithObjects(objects, options);\n\t\t}\n\t\tif (node) {\n\t\t\tthis._populateWithNode(node, options);\n\t\t}\n\t}\n\tprivate _populateWithObjects(objects: Object3D[], options: AddToTimelineOptions) {\n\t\tconst {timelineBuilder} = options;\n\t\tthis._printDebug(['_populateWithObjects', objects]);\n\t\tif (!this._propertyName) {\n\t\t\tPoly.warn('no property name given');\n\t\t\treturn;\n\t\t}\n\t\tif (this._targetValue == null) {\n\t\t\tPoly.warn('no target value given');\n\t\t\treturn;\n\t\t}\n\t\tconst operation = timelineBuilder.operation();\n\t\tconst updateCallback = timelineBuilder.updateCallback();\n\n\t\tfor (const object3d of objects) {\n\t\t\t// const target_property = (object3d as any)[this._property_name as any] as TargetValue;\n\t\t\t// let to_target: object | null = null;\n\t\t\tconst props = this._sceneGraphProps(object3d, this._propertyName);\n\t\t\tif (props) {\n\t\t\t\tconst registerableProp: RegisterableProperty = {\n\t\t\t\t\tobject: object3d,\n\t\t\t\t\tpropertyName: this._propertyName,\n\t\t\t\t};\n\t\t\t\tlet {targetProperty, toTarget, propertyNames} = props;\n\t\t\t\tconst vars = animBuilderCommonVars(timelineBuilder);\n\n\t\t\t\t// add update_matrix\n\t\t\t\tif (updateCallback && updateCallback.updateMatrix()) {\n\t\t\t\t\tconst oldMatrixAutoUpdate = object3d.matrixAutoUpdate;\n\t\t\t\t\t// matrixAutoUpdate should be set to true during onUpdate and not onStart\n\t\t\t\t\t// in case another timeline completes and sets it to false\n\t\t\t\t\tvars.onUpdate = () => {\n\t\t\t\t\t\tobject3d.matrixAutoUpdate = true;\n\t\t\t\t\t};\n\t\t\t\t\tvars.onComplete = () => {\n\t\t\t\t\t\tobject3d.matrixAutoUpdate = oldMatrixAutoUpdate;\n\t\t\t\t\t\t// we still need to update the matrix manually here,\n\t\t\t\t\t\t// as (it is specially noticeable on short animations)\n\t\t\t\t\t\t// the last step of the timeline will not have the matrix updated\n\t\t\t\t\t\t// and the object will therefore look like it has not fully completed\n\t\t\t\t\t\t// its animation.\n\t\t\t\t\t\tif (!object3d.matrixAutoUpdate) {\n\t\t\t\t\t\t\tobject3d.updateMatrix();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// handle quaternions as a special case\n\t\t\t\tif (targetProperty instanceof Quaternion && this._targetValue instanceof Quaternion) {\n\t\t\t\t\ttoTarget = populateVarsAndCreateProxyForQuaternion({\n\t\t\t\t\t\ttargetValue: this._targetValue,\n\t\t\t\t\t\tvars,\n\t\t\t\t\t\ttargetProperty,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._populateVarsForObjectProperty({\n\t\t\t\t\ttargetValue: this._targetValue,\n\t\t\t\t\tvars,\n\t\t\t\t\ttargetProperty,\n\t\t\t\t\tpropertyNames,\n\t\t\t\t\toperation,\n\t\t\t\t});\n\n\t\t\t\tif (toTarget) {\n\t\t\t\t\tanimBuilderStartTimeline({...options, vars, target: toTarget, registerableProp});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _populateVarsForObjectProperty(options: PopulateVarsOptions) {\n\t\tconst {vars, targetValue, targetProperty, propertyNames, operation} = options;\n\t\tfunction warnMismatch(expectedType: string) {\n\t\t\tPoly.warn(\n\t\t\t\t`mismatch between targetValue and targetProperty (expected ${expectedType})`,\n\t\t\t\ttargetValue,\n\t\t\t\ttargetProperty\n\t\t\t);\n\t\t}\n\t\t// number\n\t\tif (CoreType.isNumber(targetProperty)) {\n\t\t\tif (CoreType.isNumber(targetValue)) {\n\t\t\t\treturn populateVarsForNumber({targetValue, vars, targetProperty, propertyNames, operation});\n\t\t\t}\n\t\t\treturn warnMismatch('number');\n\t\t}\n\t\t// euler (needs to be positioned before the CoreType.isVector, as it would other be caught in the isVector )\n\t\t// note that for euler, we first test targetProperty, as otherwise a 'position' property would test true here\n\t\tif (CoreType.isEuler(targetProperty)) {\n\t\t\tif (targetValue instanceof Vector3) {\n\t\t\t\treturn populateVarsForEuler({targetValue, vars, targetProperty, propertyNames, operation});\n\t\t\t}\n\t\t\treturn warnMismatch('euler');\n\t\t}\n\t\t// vector\n\t\tif (CoreType.isVector(targetProperty)) {\n\t\t\tif (CoreType.isVector(targetValue)) {\n\t\t\t\treturn populateVarsForVector({targetValue, vars, targetProperty, propertyNames, operation});\n\t\t\t}\n\t\t\treturn warnMismatch('vector');\n\t\t}\n\t\t// color\n\t\tif (CoreType.isColor(targetProperty)) {\n\t\t\tif (CoreType.isColor(targetValue)) {\n\t\t\t\treturn populateVarsForColor({targetValue, vars, targetProperty, propertyNames, operation});\n\t\t\t}\n\t\t\treturn warnMismatch('color');\n\t\t}\n\n\t\tif (CoreType.isQuaternion(targetProperty)) {\n\t\t\t//\n\t\t}\n\t\tPoly.warn(`targetValue and targetProp are not recognized types`, targetValue, targetProperty);\n\t}\n\n\tprivate _sceneGraphProps(object: object, propertyName: string): Object3DProps | undefined {\n\t\tconst elements = propertyName.split(PROPERTY_SEPARATOR);\n\t\tif (elements.length > 1) {\n\t\t\tconst firstElement = elements.shift() as string;\n\t\t\tconst subObject = (object as any)[firstElement as any] as object;\n\t\t\tif (subObject) {\n\t\t\t\tconst subPropertyName = elements.join(PROPERTY_SEPARATOR);\n\t\t\t\treturn this._sceneGraphProps(subObject, subPropertyName);\n\t\t\t} else {\n\t\t\t\tPoly.warn(`property ${firstElement} not found on object`, object);\n\t\t\t}\n\t\t} else {\n\t\t\tconst targetProperty = (object as any)[propertyName as any] as AnimPropertyTargetValue;\n\t\t\tlet toTarget: object | null = null;\n\t\t\tconst propertyNames: string[] = [];\n\t\t\tif (CoreType.isNumber(targetProperty)) {\n\t\t\t\ttoTarget = object;\n\t\t\t\tpropertyNames.push(propertyName);\n\t\t\t} else {\n\t\t\t\ttoTarget = targetProperty;\n\t\t\t\tif (this._targetValue instanceof Vector2) {\n\t\t\t\t\tpropertyNames.push('x', 'y');\n\t\t\t\t}\n\t\t\t\tif (this._targetValue instanceof Vector3) {\n\t\t\t\t\tpropertyNames.push('x', 'y', 'z');\n\t\t\t\t}\n\t\t\t\tif (this._targetValue instanceof Vector4) {\n\t\t\t\t\tpropertyNames.push('x', 'y', 'z', 'w');\n\t\t\t\t}\n\t\t\t\tif (this._targetValue instanceof Color) {\n\t\t\t\t\tpropertyNames.push('r', 'g', 'b');\n\t\t\t\t}\n\t\t\t\tif (this._targetValue instanceof Quaternion) {\n\t\t\t\t\t// is_quaternion = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttargetProperty: targetProperty,\n\t\t\t\ttoTarget: toTarget,\n\t\t\t\tpropertyNames: propertyNames,\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate _populateWithNode(node: BaseNodeType, options: AddToTimelineOptions) {\n\t\tthis._printDebug(['_populateWithNode', node]);\n\t\tconst targetParam = node.p[this._propertyName as any] as BaseParamType;\n\t\tthis._printDebug(['targetParam', targetParam]);\n\t\tif (!targetParam) {\n\t\t\tPoly.warn(`${this._propertyName} not found on node ${node.path()}`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (targetParam) {\n\t\t\tthis._populateVarsForParam(targetParam, options);\n\t\t}\n\t}\n\n\tprivate _populateVarsForParam(param: BaseParamType, options: AddToTimelineOptions) {\n\t\tthis._printDebug(['_populateVarsForParam', param]);\n\t\tif (this._targetValue == null) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (param.type()) {\n\t\t\tcase ParamType.INTEGER:\n\t\t\tcase ParamType.FLOAT: {\n\t\t\t\treturn populateVarsForSingleNumber(param as IntegerParam, this._targetValue, options);\n\t\t\t}\n\t\t\tcase ParamType.VECTOR2: {\n\t\t\t\treturn populateVarsForParamVector2(param as Vector2Param, this._targetValue, options);\n\t\t\t}\n\t\t\tcase ParamType.VECTOR3: {\n\t\t\t\treturn populateVarsForParamVector3(param as Vector3Param, this._targetValue, options);\n\t\t\t}\n\t\t\tcase ParamType.COLOR: {\n\t\t\t\treturn populateVarsForParamColor(param as ColorParam, this._targetValue, options);\n\t\t\t}\n\t\t\tcase ParamType.VECTOR4: {\n\t\t\t\treturn populateVarsForParamVector4(param as Vector4Param, this._targetValue, options);\n\t\t\t}\n\t\t}\n\t\tPoly.warn(`param type cannot be animated (yet): '${param.type()}' '${param.path()}'`);\n\t}\n}\n","import {TimelineBuilderProperty, AnimPropertyTargetValue} from './TimelineBuilderProperty';\nimport {AnimPropertyTarget} from './PropertyTarget';\nimport {AnimationPosition} from './Position';\nimport {AnimationUpdateCallback} from './UpdateCallback';\nimport {RampValue} from '../../engine/params/ramp/RampValue';\nimport {AnimationRepeatParams, Operation, RegisterOptions} from './vars/AnimBuilderTypes';\nimport type {GsapCoreTimeline} from '../thirdParty/gsap/gsapFactory';\nimport {gsapTimeline} from '../thirdParty/gsap/gsapFactory';\n\nexport class TimelineBuilder {\n\tprivate _timelineBuilders: TimelineBuilder[] = [];\n\tprivate _parent: TimelineBuilder | undefined;\n\tprivate _target: AnimPropertyTarget | undefined;\n\tprivate _duration: number = 1;\n\tprivate _keyframes: RampValue | undefined;\n\tprivate _easing: string | undefined;\n\tprivate _operation: Operation = Operation.SET;\n\tprivate _repeatParams: AnimationRepeatParams | undefined;\n\tprivate _delay: number = 0;\n\tprivate _position: AnimationPosition | undefined;\n\tprivate _property: TimelineBuilderProperty | undefined;\n\tprivate _updateCallback: AnimationUpdateCallback | undefined;\n\tprivate _stoppable = true;\n\n\tprivate _debug = false;\n\tsetDebug(debug: boolean) {\n\t\tthis._debug = debug;\n\t}\n\tprivate _printDebug(message: any) {\n\t\tif (!this._debug) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(message);\n\t}\n\n\taddTimelineBuilder(timeline_builder: TimelineBuilder) {\n\t\tthis._timelineBuilders.push(timeline_builder);\n\t\ttimeline_builder.setParent(this);\n\t}\n\ttimelineBuilders() {\n\t\treturn this._timelineBuilders;\n\t}\n\tsetParent(parent: TimelineBuilder) {\n\t\tthis._parent = parent;\n\t}\n\tparent() {\n\t\treturn this._parent;\n\t}\n\n\tsetTarget(target: AnimPropertyTarget) {\n\t\tthis._target = target;\n\t\tfor (const builder of this._timelineBuilders) {\n\t\t\tbuilder.setTarget(target);\n\t\t}\n\t}\n\ttarget() {\n\t\treturn this._target;\n\t}\n\tsetDuration(duration: number) {\n\t\tif (duration >= 0) {\n\t\t\tthis._duration = duration;\n\t\t\tfor (const builder of this._timelineBuilders) {\n\t\t\t\tbuilder.setDuration(duration);\n\t\t\t}\n\t\t}\n\t}\n\tduration() {\n\t\treturn this._duration;\n\t}\n\tsetKeyframes(keyframes: RampValue) {\n\t\tthis._keyframes = keyframes;\n\t}\n\tkeyframes() {\n\t\treturn this._keyframes;\n\t}\n\n\tsetEasing(easing: string) {\n\t\tthis._easing = easing;\n\t\tfor (const builder of this._timelineBuilders) {\n\t\t\tbuilder.setEasing(easing);\n\t\t}\n\t}\n\teasing() {\n\t\treturn this._easing;\n\t}\n\tsetOperation(operation: Operation) {\n\t\tthis._operation = operation;\n\t\tfor (const builder of this._timelineBuilders) {\n\t\t\tbuilder.setOperation(operation);\n\t\t}\n\t}\n\toperation() {\n\t\treturn this._operation;\n\t}\n\tsetRepeatParams(repeat_params: AnimationRepeatParams) {\n\t\tthis._repeatParams = repeat_params;\n\t\tfor (const builder of this._timelineBuilders) {\n\t\t\tbuilder.setRepeatParams(repeat_params);\n\t\t}\n\t}\n\trepeatParams() {\n\t\treturn this._repeatParams;\n\t}\n\tsetDelay(delay: number) {\n\t\tthis._delay = delay;\n\t\tfor (const builder of this._timelineBuilders) {\n\t\t\tbuilder.setDelay(delay);\n\t\t}\n\t}\n\tdelay() {\n\t\treturn this._delay;\n\t}\n\tsetPosition(position: AnimationPosition | undefined) {\n\t\tthis._position = position;\n\t\t// That should not be recursive here,\n\t\t// otherwise the merge node will override timelines whose position may already been set\n\t\t// for (let builder of this._timeline_builders) {\n\t\t// \tbuilder.setPosition(position);\n\t\t// }\n\t}\n\tposition() {\n\t\treturn this._position;\n\t}\n\tsetStoppable(state: boolean) {\n\t\tthis._stoppable = state;\n\t}\n\tstoppable() {\n\t\treturn this._stoppable;\n\t}\n\n\tsetUpdateCallback(update_callback: AnimationUpdateCallback) {\n\t\tthis._updateCallback = update_callback;\n\t}\n\tupdateCallback() {\n\t\treturn this._updateCallback;\n\t}\n\t// merge(timeline_builder?: TimelineBuilder) {\n\t// \tif (!timeline_builder) {\n\t// \t\treturn;\n\t// \t}\n\t// }\n\tclone() {\n\t\tconst newTimelineBuilder = new TimelineBuilder();\n\t\tnewTimelineBuilder.setDuration(this._duration);\n\t\tnewTimelineBuilder.setOperation(this._operation);\n\t\tnewTimelineBuilder.setDelay(this._delay);\n\n\t\tif (this._target) {\n\t\t\tnewTimelineBuilder.setTarget(this._target.clone());\n\t\t}\n\t\tif (this._easing) {\n\t\t\tnewTimelineBuilder.setEasing(this._easing);\n\t\t}\n\t\tif (this._keyframes) {\n\t\t\tnewTimelineBuilder.setKeyframes(this._keyframes);\n\t\t}\n\t\tif (this._delay) {\n\t\t\tnewTimelineBuilder.setDelay(this._delay);\n\t\t}\n\t\tif (this._updateCallback) {\n\t\t\tnewTimelineBuilder.setUpdateCallback(this._updateCallback.clone());\n\t\t}\n\t\tif (this._repeatParams) {\n\t\t\tnewTimelineBuilder.setRepeatParams({\n\t\t\t\tcount: this._repeatParams.count,\n\t\t\t\tdelay: this._repeatParams.delay,\n\t\t\t\tyoyo: this._repeatParams.yoyo,\n\t\t\t});\n\t\t}\n\t\tif (this._property) {\n\t\t\tconst name = this._property.name();\n\t\t\tif (name) {\n\t\t\t\tnewTimelineBuilder.setPropertyName(name);\n\t\t\t}\n\t\t\tconst targetValue = this._property.targetValue();\n\t\t\tif (targetValue != null) {\n\t\t\t\tnewTimelineBuilder.setPropertyValue(targetValue);\n\t\t\t}\n\t\t}\n\t\tif (this._position) {\n\t\t\tnewTimelineBuilder.setPosition(this._position.clone());\n\t\t}\n\t\tnewTimelineBuilder.setStoppable(this._stoppable);\n\t\tfor (const childTimelineBuilder of this._timelineBuilders) {\n\t\t\tconst newChildTimelineBuilder = childTimelineBuilder.clone();\n\t\t\tnewTimelineBuilder.addTimelineBuilder(newChildTimelineBuilder);\n\t\t}\n\t\treturn newTimelineBuilder;\n\t}\n\n\tsetPropertyName(name: string) {\n\t\tthis.property().setName(name);\n\t}\n\tproperty() {\n\t\treturn (this._property = this._property || new TimelineBuilderProperty());\n\t}\n\tpropertyName() {\n\t\treturn this.property().name();\n\t}\n\tsetPropertyValue(value: AnimPropertyTargetValue) {\n\t\tthis.property().setTargetValue(value);\n\t}\n\tpropertyValue() {\n\t\treturn this._property?.targetValue();\n\t}\n\n\tpopulate(timeline: GsapCoreTimeline, options: RegisterOptions) {\n\t\tthis._printDebug(['populate', this, timeline, this._timelineBuilders]);\n\t\tfor (const timelineBuilder of this._timelineBuilders) {\n\t\t\tconst subTimeline = gsapTimeline();\n\t\t\tif (!subTimeline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttimelineBuilder.setDebug(this._debug);\n\t\t\ttimelineBuilder.populate(subTimeline, options);\n\n\t\t\tconst position_param = timelineBuilder.position()?.toParameter() || undefined;\n\t\t\ttimeline.add(subTimeline, position_param);\n\t\t}\n\n\t\tif (this._property && this._target) {\n\t\t\tthis._property.setDebug(this._debug);\n\t\t\tthis._property.addToTimeline({timelineBuilder: this, timeline, target: this._target, ...options});\n\t\t}\n\t}\n}\n","import type {GsapTweenVars, GsapCoreTimeline} from '../../thirdParty/gsap/gsapFactory';\nimport {RegisterableProperty} from '../AnimatedPropertiesRegister';\nimport {AnimPropertyTarget} from '../PropertyTarget';\nimport {TimelineBuilder} from '../TimelineBuilder';\n\nexport interface RegisterOptions {\n\tregisterproperties?: boolean;\n\tpropertyTarget?: AnimPropertyTarget;\n}\nexport interface StartOptions extends RegisterOptions {\n\ttimelineBuilder: TimelineBuilder;\n\ttimeline: GsapCoreTimeline;\n\tvars: GsapTweenVars;\n\ttarget: object;\n\tregisterableProp: RegisterableProperty;\n}\n\nexport interface AddToTimelineOptions extends RegisterOptions {\n\ttimelineBuilder: TimelineBuilder;\n\ttimeline: GsapCoreTimeline;\n\ttarget: AnimPropertyTarget;\n}\n\nexport enum Operation {\n\tSET = 'set',\n\tADD = 'add',\n\tSUBTRACT = 'subtract',\n}\nexport const OPERATIONS: Operation[] = [Operation.SET, Operation.ADD, Operation.SUBTRACT];\n\nexport interface AnimationRepeatParams {\n\tcount: number;\n\tdelay: number;\n\tyoyo: boolean;\n}\n","import {EnvelopeOptions} from 'tone';\nimport {ToneAudioNodeOptions, ToneAudioNode} from 'tone/build/esm/core/context/ToneAudioNode';\nimport {Instrument} from 'tone/build/esm/instrument/Instrument';\nimport {OmniOscillatorSynthOptions} from 'tone/build/esm/source/oscillator/OscillatorInterface';\nimport {Source} from 'tone/build/esm/source/Source';\nimport {UserMedia} from 'tone/build/esm/source/UserMedia';\n\nexport type SourceType = Source<any> | UserMedia;\nexport type InstrumentType = Instrument<any>;\nexport type EnvelopeParamsType = Partial<Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>>;\nexport type OscillatorParamsType = Partial<OmniOscillatorSynthOptions>;\n\nexport class AudioBuilder {\n\t// private _synth: SynthType | undefined;\n\tprivate _source: SourceType | undefined;\n\tprivate _instrument: InstrumentType | undefined;\n\tprivate _audioNode: ToneAudioNode | undefined;\n\tprivate _oscillatorParams: OscillatorParamsType | undefined;\n\tprivate _envelopeParams: EnvelopeParamsType | undefined;\n\n\tsetAudioNode(inputNode: ToneAudioNode | undefined) {\n\t\tthis._audioNode = inputNode;\n\t}\n\taudioNode() {\n\t\treturn this._audioNode;\n\t}\n\tsetSource(source: SourceType | undefined) {\n\t\tthis._source = source;\n\t\tif (!this._audioNode) {\n\t\t\tthis.setAudioNode(source);\n\t\t}\n\t}\n\tsource() {\n\t\treturn this._source;\n\t}\n\tsetInstrument(instrument: InstrumentType | undefined) {\n\t\tthis._instrument = instrument;\n\t\tif (!this._audioNode) {\n\t\t\tthis.setAudioNode(instrument);\n\t\t}\n\t}\n\tinstrument() {\n\t\treturn this._instrument;\n\t}\n\tsetOscillatorParams(params: OscillatorParamsType | undefined) {\n\t\tthis._oscillatorParams = params;\n\t}\n\toscillatorParams() {\n\t\treturn this._oscillatorParams;\n\t}\n\tsetEnvelopeParams(params: EnvelopeParamsType | undefined) {\n\t\tthis._envelopeParams = params;\n\t}\n\tenvelopeParams() {\n\t\treturn this._envelopeParams;\n\t}\n\n\tclone() {\n\t\tconst newAudioBuilder = new AudioBuilder();\n\t\tnewAudioBuilder.setAudioNode(this._audioNode);\n\t\tnewAudioBuilder.setSource(this._source);\n\t\tnewAudioBuilder.setInstrument(this._instrument);\n\t\tnewAudioBuilder.setEnvelopeParams(this._envelopeParams);\n\t\treturn newAudioBuilder;\n\t}\n}\n","export enum CoreEventEmitter {\n\tCANVAS = 'canvas',\n\tDOCUMENT = 'document',\n}\nexport const EVENT_EMITTERS: CoreEventEmitter[] = [CoreEventEmitter.CANVAS, CoreEventEmitter.DOCUMENT];\n\nexport const EVENT_EMITTER_PARAM_MENU_OPTIONS = {\n\tmenu: {\n\t\tentries: EVENT_EMITTERS.map((name, value) => {\n\t\t\treturn {name, value};\n\t\t}),\n\t},\n};\n","// https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API\nexport enum DragEventType {\n\tdragover = 'dragover',\n}\nexport const ACCEPTED_DRAG_EVENT_TYPES: DragEventType[] = [DragEventType.dragover];\n","// https://developer.mozilla.org/en-US/docs/Web/Events\nexport enum KeyboardEventType {\n\tkeydown = 'keydown',\n\tkeypress = 'keypress',\n\tkeyup = 'keyup',\n}\nexport const ACCEPTED_KEYBOARD_EVENT_TYPES: KeyboardEventType[] = [\n\tKeyboardEventType.keydown,\n\tKeyboardEventType.keypress,\n\tKeyboardEventType.keyup,\n];\n","// https://developer.mozilla.org/en-US/docs/Web/Events\nexport enum MouseEventType {\n\tauxclick = 'auxclick',\n\tclick = 'click',\n\tcontextmenu = 'contextmenu',\n\tdblclick = 'dblclick',\n\tmousedown = 'mousedown',\n\tmouseenter = 'mouseenter',\n\tmouseleave = 'mouseleave',\n\tmousemove = 'mousemove',\n\tmouseover = 'mouseover',\n\tmouseout = 'mouseout',\n\tmouseup = 'mouseup',\n\tpointerlockchange = 'pointerlockchange',\n\tpointerlockerror = 'pointerlockerror',\n\tselect = 'select',\n\twheel = 'wheel',\n}\nexport const ACCEPTED_MOUSE_EVENT_TYPES: MouseEventType[] = [\n\tMouseEventType.auxclick,\n\tMouseEventType.click,\n\tMouseEventType.contextmenu,\n\tMouseEventType.dblclick,\n\tMouseEventType.mousedown,\n\tMouseEventType.mouseenter,\n\tMouseEventType.mouseleave,\n\tMouseEventType.mousemove,\n\tMouseEventType.mouseover,\n\tMouseEventType.mouseout,\n\tMouseEventType.mouseup,\n\tMouseEventType.pointerlockchange,\n\tMouseEventType.pointerlockerror,\n\tMouseEventType.select,\n\tMouseEventType.wheel,\n];\n","// https://developer.mozilla.org/en-US/docs/Web/Events\nexport enum PointerEventType {\n\t// click = 'click',\n\tcontextmenu = 'contextmenu',\n\tpointerdown = 'pointerdown',\n\tpointermove = 'pointermove',\n\tpointerup = 'pointerup',\n\ttouchstart = 'touchstart',\n\ttouchmove = 'touchmove',\n\ttouchend = 'touchend',\n}\n\nexport const ONLY_POINTER_EVENT_TYPES: PointerEventType[] = [\n\t// PointerEventType.click, // no click for event/pointer\n\tPointerEventType.pointerdown,\n\tPointerEventType.pointermove,\n\tPointerEventType.pointerup,\n];\n\nexport const ACCEPTED_POINTER_EVENT_TYPES: PointerEventType[] = [\n\t// PointerEventType.click,\n\tPointerEventType.contextmenu,\n\tPointerEventType.pointerdown,\n\tPointerEventType.pointermove,\n\tPointerEventType.pointerup,\n];\n","// https://developer.mozilla.org/en-US/docs/Web/API/Touch_events\nexport enum TouchEventType {\n\ttouchstart = 'touchstart',\n\ttouchmove = 'touchmove',\n\ttouchend = 'touchend',\n}\nexport const ACCEPTED_TOUCH_EVENT_TYPES: TouchEventType[] = [\n\tTouchEventType.touchstart,\n\tTouchEventType.touchmove,\n\tTouchEventType.touchend,\n];\n","import {\n\tColor,\n\tVector2,\n\tVector3,\n\tVector4,\n\tBufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBufferAttribute,\n} from 'three';\nimport {AttribValue, PolyDictionary} from '../../types/GlobalTypes';\nimport {arrayUniq} from '../ArrayUtils';\nimport {stringToAttribNames, stringMatchMask} from '../String';\nimport {CoreType} from '../Type';\nimport {AttribSize, GroupString} from './Constant';\n\nexport enum Attribute {\n\tPOINT_INDEX = 'ptnum',\n\tVERTEX_INDEX = 'vtxnum',\n\tPRIMITIVE_INDEX = 'primnum',\n\tOBJECT_INDEX = 'objnum',\n\tOBJECT_NAME = 'objname',\n\tCOLOR = 'color',\n\tNORMAL = 'normal',\n\tPOSITION = 'position',\n\tPSCALE = 'pscale',\n\tUP = 'up',\n\tUV = 'uv',\n\tSCALE = 'scale',\n\tTANGENT = 'tangent',\n\tID = 'id',\n}\nexport enum ObjectAttribute {\n\tHOVERED = 'hovered',\n}\n\nconst ATTRIB_NAME_MAP: PolyDictionary<string> = {\n\tP: Attribute.POSITION,\n\tN: Attribute.NORMAL,\n\tCd: Attribute.COLOR,\n};\nconst _matchingAttribNames: string[] = [];\nconst _masks: string[] = [];\n\nexport class CoreAttribute {\n\tstatic remapName(name: string): string {\n\t\treturn ATTRIB_NAME_MAP[name] || name;\n\t}\n\n\tstatic arrayToIndexedArrays(array: string[]) {\n\t\tconst index_by_value: PolyDictionary<number> = {};\n\t\tlet current_index = 0;\n\t\tconst indices = [];\n\t\tconst values = [];\n\n\t\tlet i = 0;\n\t\twhile (i < array.length) {\n\t\t\t//(value = array[i++])?\n\t\t\tconst value = array[i];\n\t\t\tconst index = index_by_value[value];\n\t\t\tif (index != null) {\n\t\t\t\tindices.push(index);\n\t\t\t} else {\n\t\t\t\tvalues.push(value);\n\t\t\t\tindices.push(current_index);\n\t\t\t\tindex_by_value[value] = current_index;\n\t\t\t\tcurrent_index += 1;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\treturn {\n\t\t\tindices,\n\t\t\tvalues,\n\t\t};\n\t}\n\n\tstatic defaultValue(size: number) {\n\t\tswitch (size) {\n\t\t\tcase 1:\n\t\t\t\treturn 0;\n\t\t\tcase 2:\n\t\t\t\treturn new Vector2(0, 0);\n\t\t\tcase 3:\n\t\t\t\treturn new Vector3(0, 0, 0);\n\t\t\tdefault:\n\t\t\t\tthrow `size ${size} not yet implemented`;\n\t\t}\n\t}\n\n\tstatic copy(src: BufferAttribute, dest: BufferAttribute, markAsNeedsUpdate = true) {\n\t\tconst srcArray = src?.array;\n\t\tconst destArray = dest?.array;\n\t\tif (srcArray && destArray) {\n\t\t\tconst min_length = Math.min(srcArray.length, destArray.length);\n\t\t\tfor (let i = 0; i < min_length; i++) {\n\t\t\t\tdestArray[i] = srcArray[i];\n\t\t\t}\n\n\t\t\tif (markAsNeedsUpdate) {\n\t\t\t\tdest.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic attribSizeFromValue(val: AttribValue): AttribSize | null {\n\t\tif (CoreType.isString(val) || CoreType.isNumber(val)) {\n\t\t\treturn AttribSize.FLOAT;\n\t\t}\n\t\tif (CoreType.isArray(val)) {\n\t\t\treturn val.length;\n\t\t}\n\n\t\tswitch (val.constructor) {\n\t\t\tcase Color:\n\t\t\t\treturn AttribSize.VECTOR3;\n\t\t\tcase Vector2:\n\t\t\t\treturn AttribSize.VECTOR2;\n\t\t\tcase Vector3:\n\t\t\t\treturn AttribSize.VECTOR3;\n\t\t\tcase Vector4:\n\t\t\t\treturn AttribSize.VECTOR4;\n\t\t}\n\t\treturn null;\n\t}\n\tstatic attribNamesMatchingMask(masksString: GroupString, existingAttribNames: string[]) {\n\t\tstringToAttribNames(masksString, _masks);\n\n\t\t_matchingAttribNames.length = 0;\n\t\tfor (const mask of _masks) {\n\t\t\tfor (const attribName of existingAttribNames) {\n\t\t\t\tif (stringMatchMask(attribName, mask)) {\n\t\t\t\t\t_matchingAttribNames.push(attribName);\n\t\t\t\t} else {\n\t\t\t\t\tconst remapped = CoreAttribute.remapName(mask);\n\t\t\t\t\tif (attribName == remapped) {\n\t\t\t\t\t\t_matchingAttribNames.push(attribName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst uniqAttributeNames: string[] = [];\n\t\treturn arrayUniq(_matchingAttribNames, uniqAttributeNames);\n\t}\n}\n\nexport function markAttributeAsNeedsUpdateForFrame(\n\tattribute: BufferAttribute | InstancedBufferAttribute | InterleavedBufferAttribute,\n\tframe: number\n) {\n\tif (attribute instanceof BufferAttribute || attribute instanceof InstancedBufferAttribute) {\n\t\t(attribute as BufferAttribute | InstancedBufferAttribute).version = frame;\n\t} else {\n\t\tif (attribute.data) {\n\t\t\tattribute.data.version = frame;\n\t\t}\n\t}\n}\n","import {Number2} from '../../types/GlobalTypes';\nimport {\n\tObject3D,\n\tLineSegments,\n\tInstancedMesh,\n\tMesh,\n\tPoints,\n\tGroup,\n\tScene,\n\tMeshStandardMaterial,\n\tPointsMaterial,\n\tLineBasicMaterial,\n\tFrontSide,\n} from 'three';\nimport type {\n\tAmbientLight,\n\t// SkinnedMesh,\n\t// Bone,\n\tCubeCamera,\n\tDirectionalLight,\n\tHemisphereLight,\n\tLightProbe,\n\tMaterial,\n\tLOD,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tRectAreaLight,\n\tSpotLight,\n} from 'three';\nimport {GroupCollectionData} from './EntityGroupCollection';\nimport {CoreObjectType, ObjectContent} from './ObjectContent';\nimport type {PhysicalCamera, ShapedAreaLight, PhysicalSpotLight} from '../render/PBR/three-gpu-pathtracer';\n\n// import {Poly} from '../../engine/Poly';\n\ninterface MaterialsByString {\n\t[propName: string]: Material;\n}\n\nexport enum ObjectType {\n\tAMBIENT_LIGHT = 'AmbientLight',\n\tAREA_LIGHT = 'AreaLight',\n\t// BONE = 'Bone',\n\tCUBE_CAMERA = 'CubeCamera',\n\tDIRECTIONAL_LIGHT = 'DirectionalLight',\n\tGROUP = 'Group',\n\tHEMISPHERE_LIGHT = 'HemisphereLight',\n\tINSTANCED_MESH = 'InstancedMesh',\n\tLIGHT_PROBE = 'LightProbe',\n\tLINE_SEGMENTS = 'LineSegments',\n\tLOD = 'LOD',\n\tMESH = 'Mesh',\n\tOBJECT3D = 'Object3D',\n\tORTHOGRAPHIC_CAMERA = 'OrthographicCamera',\n\tPERSPECTIVE_CAMERA = 'PerspectiveCamera',\n\tPHYSICAL_CAMERA = 'PhysicalCamera',\n\tPHYSICAL_SPOT_LIGHT = 'PhysicalSpotLight',\n\tPOINT_LIGHT = 'PointLight',\n\tPOINTS = 'Points',\n\tSCENE = 'Scene',\n\tSHAPED_AREA_LIGHT = 'ShapedAreaLight',\n\t// SKINNED_MESH = 'SkinnedMesh',\n\tSPOT_LIGHT = 'SpotLight',\n\tUNKNOWN = 'Unknown',\n\tQUAD = 'Quad',\n}\nexport const OBJECT_TYPES: ObjectType[] = [\n\tObjectType.GROUP,\n\tObjectType.LINE_SEGMENTS,\n\tObjectType.MESH,\n\tObjectType.OBJECT3D,\n\tObjectType.POINTS,\n\tObjectType.SCENE,\n];\n\ninterface ObjectContentConstructor<T extends CoreObjectType> {\n\tnew (arg0: any, arg1?: any, arg2?: any): ObjectContent<T>;\n}\nexport type DefaultObjectContentConstructor = ObjectContentConstructor<CoreObjectType>;\n\nexport interface ObjectByObjectType {\n\t[ObjectType.AMBIENT_LIGHT]: AmbientLight;\n\t[ObjectType.AREA_LIGHT]: RectAreaLight;\n\t// [ObjectType.BONE]: typeof Bone;\n\t[ObjectType.CUBE_CAMERA]: CubeCamera;\n\t[ObjectType.DIRECTIONAL_LIGHT]: DirectionalLight;\n\t[ObjectType.GROUP]: Group;\n\t[ObjectType.HEMISPHERE_LIGHT]: HemisphereLight;\n\t[ObjectType.INSTANCED_MESH]: InstancedMesh;\n\t[ObjectType.LIGHT_PROBE]: LightProbe;\n\t[ObjectType.LINE_SEGMENTS]: LineSegments;\n\t[ObjectType.LOD]: LOD;\n\t[ObjectType.MESH]: Mesh;\n\t[ObjectType.OBJECT3D]: Object3D;\n\t[ObjectType.POINT_LIGHT]: PointLight;\n\t[ObjectType.POINTS]: Points;\n\t[ObjectType.ORTHOGRAPHIC_CAMERA]: OrthographicCamera;\n\t[ObjectType.PERSPECTIVE_CAMERA]: PerspectiveCamera;\n\t[ObjectType.PHYSICAL_CAMERA]: PhysicalCamera;\n\t[ObjectType.PHYSICAL_SPOT_LIGHT]: PhysicalSpotLight;\n\t// [ObjectType.POINTS]: typeof Points;\n\t[ObjectType.SCENE]: Scene;\n\t[ObjectType.SHAPED_AREA_LIGHT]: ShapedAreaLight;\n\t// [ObjectType.SKINNED_MESH]: typeof SkinnedMesh;\n\t[ObjectType.SPOT_LIGHT]: SpotLight;\n\t[ObjectType.UNKNOWN]: null;\n\t[ObjectType.QUAD]: null;\n}\n\nexport interface ObjectData {\n\ttype: ObjectType;\n\tname: string | null;\n\tchildrenCount: number;\n\tgroupData: GroupCollectionData;\n\tverticesCount: number;\n\tpointsCount: number;\n\tprimitivesCount: number;\n\tprimitiveName: string;\n}\n\nconst UNKNOWN_OBJECT_TYPE: ObjectTypeData = {\n\ttype: ObjectType.UNKNOWN,\n\tcheckFunc: (o) => ObjectType.UNKNOWN,\n\thumanName: 'Unknown',\n\tctor: null as any,\n};\n\n// type DataByConstructor = Map<DefaultObjectContentConstructor, ObjectTypeData>;\ntype ObjectTypeCheckFunction = (object: ObjectContent<CoreObjectType>) => ObjectType | undefined;\ntype DataByObjectType = Map<ObjectType, ObjectTypeData>;\nexport interface ObjectTypeData {\n\ttype: ObjectType;\n\tcheckFunc: ObjectTypeCheckFunction;\n\tctor: DefaultObjectContentConstructor;\n\thumanName: string;\n}\ninterface ObjectTypeConstructorRegisters {\n\tobjectTypeCheckFunctions: ObjectTypeCheckFunction[];\n\tdataByObjectType: DataByObjectType;\n}\n\nfunction _initializeObjectTypeFromConstructor() {\n\tconst objectTypeCheckFunctions: ObjectTypeCheckFunction[] = [];\n\tconst dataByObjectType: DataByObjectType = new Map();\n\tconst maps: ObjectTypeConstructorRegisters = {objectTypeCheckFunctions, dataByObjectType};\n\tfunction _register(\n\t\ttype: ObjectType,\n\t\tcheckFunc: ObjectTypeCheckFunction,\n\t\tctor: DefaultObjectContentConstructor,\n\t\thumanName?: string\n\t) {\n\t\t_registerObjectType_(maps, {\n\t\t\ttype,\n\t\t\tcheckFunc,\n\t\t\tctor,\n\t\t\thumanName: humanName || type,\n\t\t});\n\t}\n\t_register(\n\t\tObjectType.OBJECT3D,\n\t\t(o) => ((o as Object3D).isObject3D ? ObjectType.OBJECT3D : undefined),\n\t\tObject3D,\n\t\t'Object3D'\n\t);\n\t_register(ObjectType.MESH, (o) => ((o as Mesh).isMesh ? ObjectType.MESH : undefined), Mesh, 'Mesh');\n\t_register(ObjectType.GROUP, (o) => ((o as Group).isGroup ? ObjectType.GROUP : undefined), Group, 'Group');\n\t_register(\n\t\tObjectType.LINE_SEGMENTS,\n\t\t(o) => ((o as LineSegments).isLineSegments ? ObjectType.LINE_SEGMENTS : undefined),\n\t\tLineSegments,\n\t\t'LineSegments'\n\t);\n\t_register(\n\t\tObjectType.INSTANCED_MESH,\n\t\t(o) => ((o as InstancedMesh).isInstancedMesh ? ObjectType.INSTANCED_MESH : undefined),\n\t\tInstancedMesh,\n\t\t'InstancedMesh'\n\t);\n\t_register(ObjectType.POINTS, (o) => ((o as Points).isPoints ? ObjectType.POINTS : undefined), Points, 'Points');\n\t_register(ObjectType.SCENE, (o) => ((o as Scene).isScene ? ObjectType.SCENE : undefined), Scene, 'Scene');\n\treturn maps;\n}\nconst {objectTypeCheckFunctions, dataByObjectType}: ObjectTypeConstructorRegisters =\n\t_initializeObjectTypeFromConstructor();\nfunction _registerObjectType_(maps: ObjectTypeConstructorRegisters, data: ObjectTypeData) {\n\tmaps.objectTypeCheckFunctions.unshift(data.checkFunc);\n\tmaps.dataByObjectType.set(data.type, data);\n}\nexport function registerObjectType(data: ObjectTypeData) {\n\t_registerObjectType_({objectTypeCheckFunctions, dataByObjectType}, data);\n}\n\nexport function objectTypeFromObject(object: ObjectContent<CoreObjectType>): ObjectType {\n\treturn dataFromObject(object).type;\n}\n\nexport function dataFromObject(object: ObjectContent<CoreObjectType>): ObjectTypeData {\n\tfor (const checkFunc of objectTypeCheckFunctions) {\n\t\tconst objectType = checkFunc(object);\n\t\tif (objectType) {\n\t\t\treturn dataByObjectType.get(objectType) as ObjectTypeData;\n\t\t}\n\t}\n\treturn UNKNOWN_OBJECT_TYPE;\n}\n\nexport function objectConstructorByObjectType<O extends ObjectType>(objectType: O): ObjectByObjectType[O] {\n\tconst data = dataByObjectType.get(objectType);\n\tif (data) {\n\t\treturn data.ctor as any as ObjectByObjectType[O];\n\t} else {\n\t\tconsole.warn(`no constructor found for type '${objectType}'`);\n\t\treturn dataByObjectType.get(ObjectType.MESH) as any as ObjectByObjectType[O];\n\t}\n}\n\nexport const DEFAULT_MATERIALS: MaterialsByString = {\n\tMeshStandard: new MeshStandardMaterial({\n\t\tcolor: 0xffffff,\n\t\tside: FrontSide,\n\t\tmetalness: 0.5,\n\t\troughness: 0.9,\n\t}),\n\t// [ObjectType.MESH]: new MeshLambertMaterial({\n\t// \tcolor: new Color(1, 1, 1),\n\t// \tside: FrontSide,\n\t// \tvertexColors: false,\n\t// \ttransparent: true,\n\t// \tdepthTest: true,\n\t// }),\n\t[ObjectType.MESH]: new MeshStandardMaterial({\n\t\tcolor: 0xffffff,\n\t\tside: FrontSide,\n\t\tmetalness: 0.0,\n\t\troughness: 0.9,\n\t}),\n\t[ObjectType.POINTS]: new PointsMaterial({\n\t\tcolor: 0xffffff,\n\t\tsize: 0.1,\n\t\t//blending: AdditiveBlending\n\t\tdepthTest: true,\n\t}),\n\t[ObjectType.LINE_SEGMENTS]: new LineBasicMaterial({\n\t\tcolor: 0xffffff,\n\t\tlinewidth: 1,\n\t}),\n};\n\nexport enum AttribClass {\n\tPOINT = 'point',\n\tVERTEX = 'vertex',\n\tPRIMITIVE = 'primitive',\n\tOBJECT = 'object',\n\tCORE_GROUP = 'coreGroup',\n}\nexport const ATTRIBUTE_CLASSES: Array<AttribClass> = [\n\tAttribClass.POINT,\n\tAttribClass.VERTEX,\n\tAttribClass.PRIMITIVE,\n\tAttribClass.OBJECT,\n\tAttribClass.CORE_GROUP,\n];\nexport const ATTRIBUTE_CLASSES_WITHOUT_CORE_GROUP: Array<AttribClass> = [\n\tAttribClass.POINT,\n\tAttribClass.VERTEX,\n\tAttribClass.PRIMITIVE,\n\tAttribClass.OBJECT,\n];\nexport const AttribClassMenuEntries = ATTRIBUTE_CLASSES.map((name, value) => ({name, value}));\nexport const AttribClassMenuEntriesWithoutCoreGroup = ATTRIBUTE_CLASSES_WITHOUT_CORE_GROUP.map((name, value) => ({\n\tname,\n\tvalue,\n}));\n\nexport enum AttribType {\n\tNUMERIC = 'numeric',\n\tSTRING = 'string',\n}\nexport const ATTRIBUTE_TYPES: Array<AttribType> = [AttribType.NUMERIC, AttribType.STRING];\nexport const AttribTypeMenuEntries = ATTRIBUTE_TYPES.map((name, value) => ({name, value}));\n\nexport enum AttribSize {\n\tFLOAT = 1,\n\tVECTOR2 = 2,\n\tVECTOR3 = 3,\n\tVECTOR4 = 4,\n}\nexport const ATTRIBUTE_SIZES: Array<AttribSize> = [\n\tAttribSize.FLOAT,\n\tAttribSize.VECTOR2,\n\tAttribSize.VECTOR3,\n\tAttribSize.VECTOR4,\n];\nexport const ATTRIBUTE_SIZE_RANGE: Number2 = [AttribSize.FLOAT, AttribSize.VECTOR4];\n\n// export const CoreConstant = {\n// \tATTRIB_CLASS: {\n// \t\tVERTEX: AttribClass.POINT,\n// \t\tOBJECT: AttribClass.OBJECT,\n// \t},\n\n// \tOBJECT_TYPES: ObjectTypes,\n// \tCONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME: {\n// \t\t[Scene.name]: 'Scene',\n// \t\t[Group.name]: 'Group',\n// \t\t[Object3D.name]: 'Object3D',\n// \t\t[Mesh.name]: 'Mesh',\n// \t\t[Points.name]: 'Points',\n// \t\t[LineSegments.name]: 'LineSegments',\n// \t\t[Bone.name]: 'Bone',\n// \t\t[SkinnedMesh.name]: 'SkinnedMesh',\n// \t},\n// \tCONSTRUCTORS_BY_NAME: {\n// \t\t[ObjectType.MESH]: Mesh,\n// \t\t[ObjectType.POINTS]: Points,\n// \t\t[ObjectType.LINE_SEGMENTS]: LineSegments,\n// \t},\n\n// \tMATERIALS: materials,\n// };\n\nexport enum ComponentName {\n\tx = 'x',\n\ty = 'y',\n\tz = 'z',\n\tw = 'w',\n\tr = 'r',\n\tg = 'g',\n\tb = 'b',\n}\nexport const COMPONENT_INDICES = {\n\tx: 0,\n\ty: 1,\n\tz: 2,\n\tw: 3,\n\tr: 0,\n\tg: 1,\n\tb: 2,\n};\nexport const DOT = '.';\n\nexport type GroupString = string;\n","import {AttribValue, Constructor, NumericAttribValue} from '../../types/GlobalTypes';\nimport {Vector2, Vector3, Vector4} from 'three';\nimport {CoreObjectType, ObjectBuilder, ObjectContent} from './ObjectContent';\nimport {AttribClass} from './Constant';\nimport type {CoreGroup} from './Group';\nimport {TraversedRelatedEntityData} from './entities/utils/TraversedRelatedEntities';\nimport {TypeAssert} from '../../engine/poly/Assert';\n\nconst _relatedPointIds: number[] = [];\nconst _relatedVertexIds: number[] = [];\nconst _relatedPrimitiveIds: number[] = [];\n\nexport abstract class CoreEntity {\n\tprotected _index: number = 0;\n\tconstructor(content?: any, index?: number) {\n\t\tif (index != null) {\n\t\t\tthis._index = index;\n\t\t}\n\t}\n\n\tindex() {\n\t\treturn this._index;\n\t}\n\tsetIndex(index: number) {\n\t\tthis._index = index;\n\t\treturn this;\n\t}\n\n\tabstract geometry(): any;\n\tabstract builder<T extends CoreObjectType>(): ObjectBuilder<T> | undefined;\n\tabstract setAttribValue(attribName: string, attribValue: NumericAttribValue | string): void;\n\tabstract attribValue(attribName: string, target?: Vector2 | Vector3 | Vector4): AttribValue | undefined;\n\tabstract stringAttribValue(attribName: string): string | null;\n\tabstract position(target: Vector3): Vector3;\n\tabstract relatedEntities(\n\t\tattribClass: AttribClass,\n\t\tcoreGroup: CoreGroup,\n\t\ttarget: CoreEntity[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void;\n}\n\nexport abstract class CoreEntityWithObject<T extends CoreObjectType> extends CoreEntity {\n\tprotected _object: ObjectContent<T>;\n\tconstructor(object: ObjectContent<T>, index?: number) {\n\t\tsuper(object, index);\n\t\tthis._object = object;\n\t}\n\tobject() {\n\t\treturn this._object;\n\t}\n\n\tstatic relatedPrimitiveIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\ttarget.length = 0;\n\t}\n\tstatic relatedVertexIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\ttarget.length = 0;\n\t}\n\tstatic relatedPointIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\ttarget.length = 0;\n\t}\n\n\trelatedPrimitiveIds(target: number[], traversedRelatedEntityData?: TraversedRelatedEntityData): void {\n\t\t(this.constructor as typeof CoreEntityWithObject).relatedPrimitiveIds(\n\t\t\tthis._object,\n\t\t\tthis._index,\n\t\t\ttarget,\n\t\t\ttraversedRelatedEntityData\n\t\t);\n\t}\n\trelatedVertexIds(target: number[], traversedRelatedEntityData?: TraversedRelatedEntityData): void {\n\t\t(this.constructor as typeof CoreEntityWithObject).relatedVertexIds(\n\t\t\tthis._object,\n\t\t\tthis._index,\n\t\t\ttarget,\n\t\t\ttraversedRelatedEntityData\n\t\t);\n\t}\n\trelatedPointIds(target: number[], traversedRelatedEntityData?: TraversedRelatedEntityData): void {\n\t\t(this.constructor as typeof CoreEntityWithObject).relatedPointIds(\n\t\t\tthis._object,\n\t\t\tthis._index,\n\t\t\ttarget,\n\t\t\ttraversedRelatedEntityData\n\t\t);\n\t}\n\tstatic relatedPointClass<T extends CoreObjectType>(object: ObjectContent<T>): typeof CoreEntityWithObject<T> {\n\t\treturn this.constructor as typeof CoreEntityWithObject<T>;\n\t}\n\tstatic relatedVertexClass<T extends CoreObjectType>(object: ObjectContent<T>): typeof CoreEntityWithObject<T> {\n\t\treturn this.constructor as typeof CoreEntityWithObject<T>;\n\t}\n\tstatic relatedPrimitiveClass<T extends CoreObjectType>(object: ObjectContent<T>): typeof CoreEntityWithObject<T> {\n\t\treturn this.constructor as typeof CoreEntityWithObject<T>;\n\t}\n\tstatic relatedObjectClass<T extends CoreObjectType>(object: ObjectContent<T>): typeof CoreEntityWithObject<T> {\n\t\treturn this.constructor as typeof CoreEntityWithObject<T>;\n\t}\n\tstatic relatedEntityClass<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tentityClass: AttribClass.POINT | AttribClass.VERTEX | AttribClass.PRIMITIVE | AttribClass.OBJECT\n\t): typeof CoreEntityWithObject<T> {\n\t\tswitch (entityClass) {\n\t\t\tcase AttribClass.POINT: {\n\t\t\t\treturn this.relatedPointClass(object);\n\t\t\t}\n\t\t\tcase AttribClass.VERTEX: {\n\t\t\t\treturn this.relatedVertexClass(object);\n\t\t\t}\n\t\t\tcase AttribClass.PRIMITIVE: {\n\t\t\t\treturn this.relatedPrimitiveClass(object);\n\t\t\t}\n\t\t\tcase AttribClass.OBJECT: {\n\t\t\t\treturn this.relatedObjectClass(object);\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(entityClass);\n\t}\n\t//\n\tstatic relatedPoints<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tentityIndex: number,\n\t\ttarget: CoreEntityWithObject<T>[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tthis.relatedPointIds(object, entityIndex, _relatedPointIds, traversedRelatedEntityData);\n\t\ttarget.length = _relatedPointIds.length;\n\t\tlet i = 0;\n\t\tconst entityClass = this.relatedPointClass(object) as any as Constructor<CoreEntityWithObject<T>>;\n\t\tfor (const id of _relatedPointIds) {\n\t\t\ttarget[i] = new entityClass(object, id);\n\t\t\ti++;\n\t\t}\n\t}\n\tstatic relatedVertices<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tentityIndex: number,\n\t\ttarget: CoreEntityWithObject<T>[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tthis.relatedVertexIds(object, entityIndex, _relatedVertexIds, traversedRelatedEntityData);\n\t\ttarget.length = _relatedVertexIds.length;\n\t\tlet i = 0;\n\t\tconst entityClass = this.relatedVertexClass(object) as any as Constructor<CoreEntityWithObject<T>>;\n\t\tfor (const id of _relatedVertexIds) {\n\t\t\ttarget[i] = new entityClass(object, id);\n\t\t\ti++;\n\t\t}\n\t}\n\tstatic relatedPrimitives<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tentityIndex: number,\n\t\ttarget: CoreEntityWithObject<T>[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tthis.relatedPrimitiveIds(object, entityIndex, _relatedPrimitiveIds, traversedRelatedEntityData);\n\t\ttarget.length = _relatedPrimitiveIds.length;\n\t\tlet i = 0;\n\t\tconst entityClass = this.relatedPrimitiveClass(object) as any as Constructor<CoreEntityWithObject<T>>;\n\t\tfor (const id of _relatedPrimitiveIds) {\n\t\t\ttarget[i] = new entityClass(object, id);\n\t\t\ti++;\n\t\t}\n\t}\n\tstatic relatedObjects<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tentityIndex: number,\n\t\ttarget: CoreEntityWithObject<T>[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\ttarget.length = 1;\n\t\tconst entityClass = this.relatedObjectClass(object) as any as Constructor<CoreEntityWithObject<T>>;\n\t\ttarget[0] = new entityClass(object);\n\t}\n\trelatedPoints(target: CoreEntityWithObject<T>[], traversedRelatedEntityData?: TraversedRelatedEntityData): void {\n\t\t(this.constructor as typeof CoreEntityWithObject<T>).relatedPoints(\n\t\t\tthis._object,\n\t\t\tthis._index,\n\t\t\ttarget,\n\t\t\ttraversedRelatedEntityData\n\t\t);\n\t}\n\trelatedVertices(target: CoreEntityWithObject<T>[], traversedRelatedEntityData?: TraversedRelatedEntityData): void {\n\t\t(this.constructor as typeof CoreEntityWithObject<T>).relatedVertices(\n\t\t\tthis._object,\n\t\t\tthis._index,\n\t\t\ttarget,\n\t\t\ttraversedRelatedEntityData\n\t\t);\n\t}\n\trelatedPrimitives(\n\t\ttarget: CoreEntityWithObject<T>[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\t(this.constructor as typeof CoreEntityWithObject<T>).relatedPrimitives(\n\t\t\tthis._object,\n\t\t\tthis._index,\n\t\t\ttarget,\n\t\t\ttraversedRelatedEntityData\n\t\t);\n\t}\n\trelatedObjects(target: CoreEntityWithObject<T>[], traversedRelatedEntityData?: TraversedRelatedEntityData): void {\n\t\t(this.constructor as typeof CoreEntityWithObject<T>).relatedObjects(\n\t\t\tthis._object,\n\t\t\tthis._index,\n\t\t\ttarget,\n\t\t\ttraversedRelatedEntityData\n\t\t);\n\t}\n}\n","import type {CoreObjectType, ObjectContent} from './ObjectContent';\nimport {\n\tobject3DFactory,\n\tpointClassFactoryEnsured,\n\tpointInstanceFactoryEnsured,\n\tvertexClassFactoryEnsured,\n\tvertexInstanceFactoryEnsured,\n\tprimitiveClassFactoryEnsured,\n\tprimitiveInstanceFactoryEnsured,\n\tobjectClassFactoryEnsured,\n\tobjectInstanceFactoryEnsured,\n} from './modules/three/ThreeModule';\nimport type {CorePoint} from './entities/point/CorePoint';\nimport type {CoreVertex} from './entities/vertex/CoreVertex';\nimport type {BaseCoreObject} from './entities/object/BaseCoreObject';\nimport type {CorePrimitive} from './entities/primitive/CorePrimitive';\nimport {AttribClass} from './Constant';\n\n// point return types\ntype BaseCorePointInstance = CorePoint<CoreObjectType>;\ntype BaseCorePointClassClass = typeof CorePoint<CoreObjectType>;\n// vertex return types\ntype BaseCoreVertexInstance = CoreVertex<CoreObjectType>;\ntype BaseCoreVertexClassClass = typeof CoreVertex<CoreObjectType>;\n// primitive return types\ntype BaseCorePrimitiveInstance = CorePrimitive<CoreObjectType>;\ntype BaseCorePrimitiveClassClass = typeof CorePrimitive<CoreObjectType>;\n// object return types\ntype BaseCoreObjectInstance = BaseCoreObject<CoreObjectType>;\ntype BaseCoreObjectClassClass = typeof BaseCoreObject<CoreObjectType>;\n\n// point methods\nexport type CorePointClassFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>\n) => BaseCorePointClassClass | undefined;\nexport type CorePointInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex: number\n) => BaseCorePointInstance | undefined;\n// vertex methods\nexport type CoreVertexClassFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>\n) => BaseCoreVertexClassClass | undefined;\nexport type CoreVertexInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex: number\n) => BaseCoreVertexInstance | undefined;\n// primitive methods\nexport type CorePrimitiveClassFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>\n) => BaseCorePrimitiveClassClass | undefined;\nexport type CorePrimitiveInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex: number\n) => BaseCorePrimitiveInstance | undefined;\n// object methods\nexport type CoreObjectClassFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>\n) => BaseCoreObjectClassClass | undefined;\nexport type CoreObjectInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex: number\n) => BaseCoreObjectInstance | undefined;\n\nexport interface CoreFactoryFunctions {\n\t// point\n\tpointClass: CorePointClassFactoryCheckFunction;\n\tpointInstance: CorePointInstanceFactoryCheckFunction;\n\t// vertex\n\tvertexClass: CoreVertexClassFactoryCheckFunction;\n\tvertexInstance: CoreVertexInstanceFactoryCheckFunction;\n\t// primitive\n\tprimitiveClass: CorePrimitiveClassFactoryCheckFunction;\n\tprimitiveInstance: CorePrimitiveInstanceFactoryCheckFunction;\n\t// object\n\tobjectClass: CoreObjectClassFactoryCheckFunction;\n\tobjectInstance: CoreObjectInstanceFactoryCheckFunction;\n}\n\nconst coreFactoryFunctions: CoreFactoryFunctions[] = [object3DFactory];\n\nexport function registerFactoryFunctions(checkFunctions: CoreFactoryFunctions) {\n\tcoreFactoryFunctions.push(checkFunctions);\n}\n\n// point creation methods\nexport function corePointClassFactory(object: ObjectContent<CoreObjectType>): BaseCorePointClassClass {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.pointClass(object);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn (object3DFactory.pointClass(object) || pointClassFactoryEnsured()) as BaseCorePointClassClass;\n}\n\nexport function corePointInstanceFactory<T extends CoreObjectType>(object: ObjectContent<T>, index = 0): CorePoint<T> {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.pointInstance(object, index);\n\t\tif (result) {\n\t\t\treturn result as CorePoint<T>;\n\t\t}\n\t}\n\treturn (object3DFactory.pointInstance(object, index) || pointInstanceFactoryEnsured(object, index)) as CorePoint<T>;\n}\n// vertex creation methods\nexport function coreVertexClassFactory(object: ObjectContent<CoreObjectType>): BaseCoreVertexClassClass {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.vertexClass(object);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn (object3DFactory.vertexClass(object) || vertexClassFactoryEnsured()) as BaseCoreVertexClassClass;\n}\n\nexport function coreVertexInstanceFactory<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\tindex = 0\n): CoreVertex<T> {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.vertexInstance(object, index);\n\t\tif (result) {\n\t\t\treturn result as CoreVertex<T>;\n\t\t}\n\t}\n\treturn (object3DFactory.vertexInstance(object, index) ||\n\t\tvertexInstanceFactoryEnsured(object, index)) as CoreVertex<T>;\n}\n// primitive creation methods\nexport function corePrimitiveClassFactory(object: ObjectContent<CoreObjectType>): BaseCorePrimitiveClassClass {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.primitiveClass(object);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn (object3DFactory.primitiveClass(object) || primitiveClassFactoryEnsured()) as BaseCorePrimitiveClassClass;\n}\n\nexport function corePrimitiveInstanceFactory<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\tindex = 0\n): CorePrimitive<T> {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.primitiveInstance(object, index);\n\t\tif (result) {\n\t\t\treturn result as CorePrimitive<T>;\n\t\t}\n\t}\n\treturn (object3DFactory.primitiveInstance(object, index) ||\n\t\tprimitiveInstanceFactoryEnsured(object, index)) as CorePrimitive<T>;\n}\n\n// object creation methods\nexport function coreObjectClassFactory(object: ObjectContent<CoreObjectType>): BaseCoreObjectClassClass {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.objectClass(object);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t}\n\t// we need objectClassFactoryEnsured()\n\t// in case we import multiple threejs,\n\t// and this ensures that this function never returns undefined\n\treturn object3DFactory.objectClass(object) || (objectClassFactoryEnsured() as BaseCoreObjectClassClass);\n}\n\nexport function coreObjectInstanceFactory<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\tindex = 0\n): BaseCoreObject<T> {\n\tfor (const factoryFunction of coreFactoryFunctions) {\n\t\tconst result = factoryFunction.objectInstance(object, index);\n\t\tif (result) {\n\t\t\treturn result as BaseCoreObject<T>;\n\t\t}\n\t}\n\treturn (object3DFactory.objectInstance(object, index) ||\n\t\tobjectInstanceFactoryEnsured(object)) as any as BaseCoreObject<T>;\n}\n\nexport const ENTITY_CLASS_FACTORY = {\n\t[AttribClass.POINT]: corePointClassFactory,\n\t[AttribClass.VERTEX]: coreVertexClassFactory,\n\t[AttribClass.PRIMITIVE]: corePrimitiveClassFactory,\n\t[AttribClass.OBJECT]: coreObjectClassFactory,\n\t[AttribClass.CORE_GROUP]: null,\n};\nexport const ENTITY_INSTANCE_FACTORY = {\n\t[AttribClass.POINT]: corePointInstanceFactory,\n\t[AttribClass.VERTEX]: coreVertexInstanceFactory,\n\t[AttribClass.PRIMITIVE]: corePrimitiveInstanceFactory,\n\t[AttribClass.OBJECT]: coreObjectInstanceFactory,\n\t[AttribClass.CORE_GROUP]: null,\n};\n","import {stringMatchMask} from '../String';\nimport {ObjectContent, CoreObjectType} from './ObjectContent';\n\nexport const ROOT_NAME = '/';\n\nexport type CorePathObjCallback<T extends CoreObjectType> = (obj: ObjectContent<T>) => void;\nconst REGEX_PATH_SANITIZE = /\\/+/g;\n\nexport function findObjectByMask<T extends CoreObjectType>(\n\tmask: string,\n\tparent: ObjectContent<T>\n): ObjectContent<T> | undefined {\n\treturn findObjectByMaskInObject(mask, parent);\n}\nexport function findObjectByMaskInObject<T extends CoreObjectType>(\n\tmask: string,\n\tobject: ObjectContent<T>,\n\tobjectPath: string = ''\n): ObjectContent<T> | undefined {\n\tfor (const child of object.children) {\n\t\tconst childName = sanitizeObjectPath(child.name);\n\t\tconst path = sanitizeObjectPath(`${objectPath}/${childName}`);\n\t\tif (stringMatchMask(path, mask)) {\n\t\t\treturn child;\n\t\t}\n\t\tconst grandChild = findObjectByMaskInObject<T>(mask, child, path);\n\t\tif (grandChild) {\n\t\t\treturn grandChild;\n\t\t}\n\t}\n}\nexport function objectsByMask<T extends CoreObjectType>(\n\tmask: string,\n\tparent: ObjectContent<T>,\n\tinvertMask: boolean = false\n): ObjectContent<T>[] {\n\tconst list: ObjectContent<T>[] = [];\n\ttraverseObjectsWithMask(\n\t\tmask,\n\t\t(obj) => {\n\t\t\tlist.push(obj);\n\t\t},\n\t\tparent,\n\t\tinvertMask\n\t);\n\treturn list;\n}\nexport function objectsByMaskInObject<T extends CoreObjectType>(\n\tmask: string,\n\tobject: ObjectContent<T>,\n\tlist: ObjectContent<T>[] = [],\n\tobjectPath: string = ''\n) {\n\ttraverseObjectsWithMask(\n\t\tmask,\n\t\t(obj) => {\n\t\t\tlist.push(obj);\n\t\t},\n\t\tobject\n\t);\n\treturn list;\n}\nexport function traverseObjectsWithMask<T extends CoreObjectType>(\n\tmask: string,\n\tcallback: CorePathObjCallback<T>,\n\tobject: ObjectContent<T>,\n\tinvertMask: boolean = false\n) {\n\ttraverseObjectsWithMaskInObject(mask, object, callback, invertMask);\n}\nexport function traverseObjectsWithMaskInObject<T extends CoreObjectType>(\n\tmask: string,\n\tobject: ObjectContent<T>,\n\tcallback: CorePathObjCallback<T>,\n\tinvertMask: boolean,\n\tobjectPath?: string\n) {\n\tconst objectName = sanitizeObjectPath(object.name);\n\tconst path = sanitizeObjectPath(objectPath != null ? `${objectPath}/${objectName}` : objectName);\n\tlet match = stringMatchMask(path, mask);\n\tif (invertMask) {\n\t\tmatch = !match;\n\t}\n\tif (match) {\n\t\tcallback(object);\n\t}\n\n\tfor (const child of object.children) {\n\t\ttraverseObjectsWithMaskInObject(mask, child, callback, invertMask, path);\n\t}\n}\nexport function sanitizeObjectPath(path: string) {\n\treturn path.replace(REGEX_PATH_SANITIZE, '/');\n}\nexport function objectPath<T extends CoreObjectType>(object: ObjectContent<T>, topParent?: ObjectContent<T>): string {\n\tconst parent = object.parent;\n\tif (parent && object != topParent) {\n\t\tconst parentPath = objectPath(parent, topParent);\n\t\treturn sanitizeObjectPath(`${parentPath}/${object.name}`);\n\t} else {\n\t\treturn object.name;\n\t}\n}\n\nexport class CorePath {\n\tstatic findObjectByMask = findObjectByMask;\n\tstatic findObjectByMaskInObject = findObjectByMaskInObject;\n\tstatic objectsByMask = objectsByMask;\n\tstatic objectsByMaskInObject = objectsByMaskInObject;\n\tstatic traverseObjectsWithMask = traverseObjectsWithMask;\n\tstatic traverseObjectsWithMaskInObject = traverseObjectsWithMaskInObject;\n\tstatic objectPath = objectPath;\n\tstatic sanitizePath = sanitizeObjectPath;\n}\n","import {\n\tCoreEntitySelectionState,\n\tselectedIndicesFromSelectionStates,\n} from '../../engine/nodes/sop/utils/group/GroupCommon';\nimport {TypeAssert} from '../../engine/poly/Assert';\nimport {arrayToSet} from '../ArrayUtils';\nimport {setToArray, setDifference, setIntersection, setUnion} from '../SetUtils';\nimport {CoreObjectType, ObjectContent} from './ObjectContent';\n\nconst _currentIndicesSet: Set<number> = new Set();\nconst _newIndicesSet: Set<number> = new Set();\n\nexport enum GroupOperation {\n\tSET = 'replace existing',\n\tUNION = 'add to existing',\n\tSUBTRACT = 'subtract from existing',\n\tINTERSECT = 'intersect with existing',\n}\nexport const GROUP_OPERATIONS: GroupOperation[] = [\n\tGroupOperation.SET,\n\tGroupOperation.UNION,\n\tGroupOperation.SUBTRACT,\n\tGroupOperation.INTERSECT,\n];\n\nexport interface GroupData {\n\tname: string;\n\tentitiesCount: number;\n}\ntype GroupsDataForType = GroupData[];\nexport type GroupCollectionData = Record<string, GroupsDataForType>;\n\nexport enum EntityGroupType {\n\tPOINT = 'point',\n\tOBJECT = 'object',\n\tEDGE = 'edge',\n\tFACE = 'face',\n}\nexport interface UpdateGroupOptions {\n\ttype: EntityGroupType;\n\tgroupName: string;\n\toperation: GroupOperation;\n\tinvert: boolean;\n}\n\nconst USER_DATA_KEY_GROUPS = 'groups';\nexport type GroupsDictionary = Record<string, Record<string, number[]>>;\n\nexport class EntityGroupCollection {\n\t// private _groupsByNameByType: Map<GroupType, Map<string, EntityGroup>> = new Map();\n\n\tconstructor(private _object: ObjectContent<CoreObjectType>) {}\n\n\tattributesDictionary() {\n\t\treturn EntityGroupCollection.attributesDictionary(this._object);\n\t}\n\tstatic attributesDictionary<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn (\n\t\t\t(object.userData[USER_DATA_KEY_GROUPS] as GroupsDictionary) ||\n\t\t\tthis._createAttributesDictionaryIfNone(object)\n\t\t);\n\t}\n\tprivate static _createAttributesDictionaryIfNone<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tif (!object.userData[USER_DATA_KEY_GROUPS]) {\n\t\t\treturn (object.userData[USER_DATA_KEY_GROUPS] = {});\n\t\t}\n\t}\n\n\tfindOrCreateGroup(type: EntityGroupType, groupName: string) {\n\t\tconst dict = this.attributesDictionary();\n\t\tlet groupsByName = dict[type];\n\t\tif (!groupsByName) {\n\t\t\tgroupsByName = {};\n\t\t\tdict[type] = groupsByName;\n\t\t}\n\t\tlet group = groupsByName[groupName];\n\t\tif (!group) {\n\t\t\tgroup = [];\n\t\t\tgroupsByName[groupName] = group;\n\t\t}\n\t\treturn group;\n\t}\n\tdeleteGroup(type: EntityGroupType, groupName: string) {\n\t\tconst dict = this.attributesDictionary();\n\t\tconst groupsByName = dict[type];\n\t\tif (groupsByName) {\n\t\t\tdelete groupsByName[groupName];\n\t\t\t// clean if possible\n\t\t\tif (Object.keys(groupsByName).length == 0) {\n\t\t\t\tdelete dict[type];\n\t\t\t}\n\t\t}\n\t}\n\tstatic data<T extends CoreObjectType>(object: ObjectContent<T>): GroupCollectionData {\n\t\tconst dict = this.attributesDictionary(object);\n\t\tconst types = Object.keys(dict);\n\t\tconst data: GroupCollectionData = {};\n\t\tfor (const type of types) {\n\t\t\tconst dataForType: GroupsDataForType = [];\n\t\t\tdata[type] = dataForType;\n\t\t\tconst groupsForType = dict[type];\n\t\t\tconst groupNames = Object.keys(groupsForType);\n\t\t\tfor (const groupName of groupNames) {\n\t\t\t\tconst indices = groupsForType[groupName];\n\t\t\t\tconst groupData: GroupData = {\n\t\t\t\t\tname: groupName,\n\t\t\t\t\tentitiesCount: indices.length,\n\t\t\t\t};\n\t\t\t\tdataForType.push(groupData);\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\tindicesSet(type: EntityGroupType, groupName: string, target: Set<number>) {\n\t\tconst dict = this.attributesDictionary();\n\t\tconst groupsByName = dict[type];\n\t\ttarget.clear();\n\t\tif (groupsByName) {\n\t\t\tconst indices = groupsByName[groupName];\n\t\t\tif (indices) {\n\t\t\t\tarrayToSet(indices, target);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate selectedIndices: Set<number> = new Set();\n\tupdateGroup(options: UpdateGroupOptions, selectionStates: CoreEntitySelectionState) {\n\t\tconst {type, groupName, operation, invert} = options;\n\t\tconst currentIndices = this.findOrCreateGroup(type, groupName);\n\t\tconst _updateGroup = (newIndicesSet: Set<number>) => {\n\t\t\tconst dict = this.attributesDictionary();\n\t\t\tlet groupsByName = dict[type];\n\t\t\tif (!groupsByName) {\n\t\t\t\tgroupsByName = {};\n\t\t\t\tdict[type] = groupsByName;\n\t\t\t}\n\t\t\tconst newIndices: number[] = [];\n\t\t\tgroupsByName[groupName] = setToArray(newIndicesSet, newIndices);\n\t\t};\n\t\tthis.selectedIndices.clear();\n\t\tselectedIndicesFromSelectionStates(selectionStates, this.selectedIndices, invert);\n\t\tswitch (operation) {\n\t\t\tcase GroupOperation.SET: {\n\t\t\t\t_updateGroup(this.selectedIndices);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase GroupOperation.UNION: {\n\t\t\t\tarrayToSet(currentIndices, _currentIndicesSet);\n\t\t\t\tsetUnion(_currentIndicesSet, this.selectedIndices, _newIndicesSet);\n\t\t\t\t_updateGroup(_newIndicesSet);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase GroupOperation.SUBTRACT: {\n\t\t\t\tarrayToSet(currentIndices, _currentIndicesSet);\n\t\t\t\tsetDifference(_currentIndicesSet, this.selectedIndices, _newIndicesSet);\n\t\t\t\t_updateGroup(_newIndicesSet);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase GroupOperation.INTERSECT: {\n\t\t\t\tarrayToSet(currentIndices, _currentIndicesSet);\n\t\t\t\tsetIntersection(_currentIndicesSet, this.selectedIndices, _newIndicesSet);\n\t\t\t\t_updateGroup(_newIndicesSet);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(operation);\n\t}\n}\n","export enum ObjectEvent {\n\tBEFORE_DELETE = 'beforeDelete',\n}\n\nexport const ON_OBJECT_BEFORE_DELETE = {type: ObjectEvent.BEFORE_DELETE};\n","import {BufferAttribute, BufferGeometry, Object3D, Mesh} from 'three';\nimport {Object3DWithGeometry} from './Group';\nimport {ObjectContent, CoreObjectType, isObject3D} from './ObjectContent';\nimport type {QuadObject} from './modules/quad/QuadObject';\nimport {isQuadObject} from './modules/quad/QuadCoreType';\nimport {InstanceAttrib} from './Instancer';\n\nexport function bufferGeometryMaxGroupEnd(geometry: BufferGeometry): number {\n\tconst groups = geometry.groups;\n\tlet max = -1;\n\tfor (const group of groups) {\n\t\tconst groupEnd = group.start + group.count;\n\t\tif (groupEnd > max) {\n\t\t\tmax = groupEnd;\n\t\t}\n\t}\n\treturn max;\n}\nexport function truncateBufferGeometry(geometry: BufferGeometry, maxCount: number): void {\n\tconst attributeNames = Object.keys(geometry.attributes);\n\n\tfor (const attributeName of attributeNames) {\n\t\tconst attribute = geometry.getAttribute(attributeName) as BufferAttribute;\n\t\tconst originalArray = attribute.array;\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst expectedArraySize = maxCount * itemSize;\n\t\tconst newArray = originalArray.slice(0, expectedArraySize); //new Array(expectedArraySize);\n\t\t// for(let i=0;i<expectedArraySize;i++){\n\t\t// \tnewArray[i]=originalArray[i];\n\t\t// }\n\t\tgeometry.setAttribute(attributeName, new BufferAttribute(new Float32Array(newArray), itemSize));\n\t}\n}\n\nexport function object3DHasGeometry(o: Object3D): o is Object3DWithGeometry {\n\treturn (o as Mesh).geometry != null;\n}\nexport function objectContentHasGeometry(o: ObjectContent<CoreObjectType>): o is Object3DWithGeometry | QuadObject {\n\tif (isQuadObject(o)) {\n\t\treturn true;\n\t}\n\tif (isObject3D(o)) {\n\t\treturn (o as Mesh).geometry != null;\n\t}\n\treturn false;\n}\n\nexport function markedAsInstance(geometry: BufferGeometry): boolean {\n\treturn geometry.getAttribute(InstanceAttrib.POSITION) != null; //geometry.userData[IS_INSTANCE_KEY] === true;\n}\n","import {CoreObjectType, ObjectContent, isObject3D} from '../../ObjectContent';\nimport {QUADObjectType, QUAD_OBJECT_TYPES_SET} from './QuadCommon';\nimport {QuadObject} from './QuadObject';\nimport {Object3D} from 'three';\n\nexport function isQuadObject(o: ObjectContent<CoreObjectType>): o is QuadObject {\n\treturn QUAD_OBJECT_TYPES_SET.has(o.type as QUADObjectType);\n}\nexport function isQuadOrThreejsObject(o: ObjectContent<CoreObjectType>): o is Object3D | QuadObject {\n\treturn isQuadObject(o) || isObject3D(o);\n}\n","import {AttribValue, NumericAttribValue} from './../../types/GlobalTypes';\nimport {PolyDictionary} from '../../types/GlobalTypes';\nimport {Box3, BufferGeometry, LineSegments, Mesh, Points, Object3D, Vector2, Vector3, Vector4} from 'three';\nimport {CoreAttribute} from './Attribute';\nimport {CoreString} from '../String';\nimport {AttribSize, ObjectData, AttribType, GroupString, AttribClass} from './Constant';\nimport {CoreType} from '../Type';\nimport {arraySum, arrayCompact, arrayPushItems, arrayCopy} from '../ArrayUtils';\nimport {Poly} from '../../engine/Poly';\nimport {CoreObjectType, ObjectBuilder, ObjectContent, isObject3D} from './ObjectContent';\nimport {coreObjectClassFactory, coreObjectInstanceFactory} from './CoreObjectFactory';\nimport {BaseCoreObject} from './entities/object/BaseCoreObject';\nimport {\n\tcoreObjectAttributeTypesByName,\n\tcoreObjectsAttribNames,\n\tcoreObjectsAttribSizesByName,\n} from './entities/object/BaseCoreObjectUtils';\nimport {attribValueNonPrimitive, cloneAttribValue} from './entities/utils/Common';\nimport {object3DHasGeometry} from './GeometryUtils';\n\n// entities\nimport {CoreEntity} from './CoreEntity';\nimport {\n\tpointsCountFromObject,\n\tpointAttributeNames,\n\thasPointAttribute,\n\tpointAttributeType,\n\tpointAttributeSizes,\n\tpointAttributeSize,\n\tpointsFromObjects,\n} from './entities/point/CorePointUtils';\nimport type {CorePoint} from './entities/point/CorePoint';\n\n// CAD\nimport type {CadGeometryType, CadGeometryTypeShape} from './modules/cad/CadCommon';\nimport type {CadObject} from './modules/cad/CadObject';\nimport {CoreCadType, isCADObject} from './modules/cad/CadCoreType';\n//\n// CSG\nimport type {CsgGeometryType} from './modules/csg/CsgCommon';\nimport type {CsgObject} from './modules/csg/CsgObject';\nimport {isCSGObject} from './modules/csg/CsgCoreType';\n//\n// QUAD\nimport type {QuadObject} from './modules/quad/QuadObject';\nimport {isQuadObject, isQuadOrThreejsObject} from './modules/quad/QuadCoreType';\n//\n// SDF\n// import type {SDFObjectType} from './sdf/SDFCommon';\n// import {SDF_OBJECT_TYPES_SET} from './sdf/SDFCommon';\n// import type {SDFObject} from './sdf/SDFObject';\n//\n// TET\nimport {isTetObject} from './modules/tet/TetCoreType';\nimport {TetObject} from './modules/tet/TetObject';\nimport {TypeAssert} from '../../engine/poly/Assert';\n\n// THREEJS\nimport {ThreejsCoreObject} from './modules/three/ThreejsCoreObject';\nimport {uniqRelatedEntities} from './entities/utils/Common';\nimport {CoreVertex} from './entities/vertex/CoreVertex';\nimport {CorePrimitive} from './entities/primitive/CorePrimitive';\nimport {TraversedRelatedEntityData} from './entities/utils/TraversedRelatedEntities';\n\ntype AttributeDictionary = PolyDictionary<AttribValue>;\n\nconst tmpBox3 = new Box3();\nconst tmpPos = new Vector3();\nconst _indices: number[] = [];\nconst _points: CorePoint<CoreObjectType>[] = [];\nconst _relatedPoints: CorePoint<CoreObjectType>[] = [];\nconst _relatedVertices: CoreVertex<CoreObjectType>[] = [];\nconst _relatedPrimitives: CorePrimitive<CoreObjectType>[] = [];\nconst _relatedPrimitivesForObject: CorePrimitive<CoreObjectType>[] = [];\n\nexport interface Object3DWithGeometry extends Object3D {\n\tgeometry: BufferGeometry;\n}\n\nfunction objectTotalPointsCount(object: ObjectContent<CoreObjectType>) {\n\tlet sum = 0;\n\tobject.traverse((child) => {\n\t\t// const geometry = (child as Mesh).geometry as BufferGeometry;\n\t\t// if (geometry) {\n\t\tsum += pointsCountFromObject(child);\n\t\t// }\n\t});\n\treturn sum;\n}\n\nexport class CoreGroup extends CoreEntity {\n\tprivate _timestamp: number | undefined;\n\tprivate _allObjects: ObjectContent<CoreObjectType>[] = [];\n\n\tconstructor() {\n\t\tsuper(undefined, 0);\n\t\tthis.touch();\n\t}\n\tdispose() {\n\t\tif (this._allObjects) {\n\t\t\tfor (const object of this._allObjects) {\n\t\t\t\tif (object.dispose) {\n\t\t\t\t\tobject.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._allObjects.length = 0;\n\t}\n\tgeometry() {\n\t\treturn null;\n\t}\n\tbuilder<T extends CoreObjectType>(): ObjectBuilder<T> | undefined {\n\t\treturn undefined;\n\t}\n\n\t//\n\t//\n\t// TIMESTAMP\n\t//\n\t//\n\ttimestamp() {\n\t\treturn this._timestamp;\n\t}\n\ttouch() {\n\t\tconst performance = Poly.performance.performanceManager();\n\t\tthis._timestamp = performance.now();\n\t\t// this.reset();\n\t}\n\t// reset() {\n\t// \t// this.resetBoundingBox();\n\t// \t// this._bounding_sphere = undefined;\n\t// \t// this._coreGeometries = undefined;\n\t// \t// this._coreObjects = undefined;\n\t// }\n\tresetBoundingBox() {\n\t\t// this._boundingBox = undefined;\n\t}\n\n\t//\n\t//\n\t// CLONE\n\t//\n\t//\n\tclone() {\n\t\tconst coreGroup = new CoreGroup();\n\t\t// all\n\t\tif (this._allObjects) {\n\t\t\tconst allCoreObjects = this.allCoreObjects();\n\t\t\tconst clonedObjects: ObjectContent<CoreObjectType>[] = [];\n\t\t\tfor (const coreObject of allCoreObjects) {\n\t\t\t\tconst clonedObject = coreObject.clone().object();\n\t\t\t\tif (clonedObject) {\n\t\t\t\t\tclonedObjects.push(clonedObject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// for (let object of this._allObjects) {\n\t\t\t// \tallObjects.push(object.clone());\n\t\t\t// }\n\n\t\t\tcoreGroup.setAllObjects(clonedObjects);\n\t\t}\n\n\t\tconst attribNames = this.attribNames();\n\t\tfor (const attribName of attribNames) {\n\t\t\tconst value = this.attribValue(attribName);\n\t\t\tcoreGroup.addAttribute(attribName, value);\n\t\t}\n\n\t\treturn coreGroup;\n\t}\n\t//\n\t//\n\t// ALL OBJECTS\n\t//\n\t//\n\tsetAllObjects(objects: ObjectContent<CoreObjectType>[]) {\n\t\tthis._allObjects = objects;\n\t\tthis.touch();\n\t}\n\tallObjects() {\n\t\treturn this._allObjects;\n\t}\n\tallCoreObjects() {\n\t\treturn this.allObjects()?.map((o, i) => coreObjectInstanceFactory(o, i));\n\t}\n\t//\n\t//\n\t// CAD OBJECTS\n\t//\n\t//\n\tcadObjects() {\n\t\tconst list = this._allObjects?.filter(isCADObject) || undefined;\n\t\treturn list as CadObject<CadGeometryType>[] | undefined;\n\t}\n\tcadObjectsWithShape() {\n\t\treturn this.cadObjects()?.filter((o) => CoreCadType.isShape(o)) as\n\t\t\t| CadObject<CadGeometryTypeShape>[]\n\t\t\t| undefined;\n\t}\n\tcadCoreObjects() {\n\t\treturn this.cadObjects()?.map((o, i) => coreObjectInstanceFactory(o, i));\n\t}\n\t//\n\t//\n\t// CSG OBJECTS\n\t//\n\t//\n\tcsgObjects() {\n\t\tconst list = this._allObjects?.filter(isCSGObject) || undefined;\n\t\treturn list as CsgObject<CsgGeometryType>[] | undefined;\n\t}\n\tcsgCoreObjects() {\n\t\treturn this.csgObjects()?.map((o, i) => coreObjectInstanceFactory(o, i));\n\t}\n\t//\n\t//\n\t// QUAD OBJECTS\n\t//\n\t//\n\tquadObjects() {\n\t\tconst list = this._allObjects?.filter(isQuadObject) || undefined;\n\t\treturn list as QuadObject[] | undefined;\n\t}\n\tquadCoreObjects() {\n\t\treturn this.quadObjects()?.map((o, i) => coreObjectInstanceFactory(o, i));\n\t}\n\tthreejsOrQuadObjects(): Array<Object3D | QuadObject> {\n\t\treturn (this._allObjects ? this._allObjects.filter(isQuadOrThreejsObject) : []) as Array<Object3D | QuadObject>;\n\t}\n\tthreejsOrQuadCoreObjects() {\n\t\treturn this.threejsOrQuadObjects().map((o, i) => coreObjectInstanceFactory(o, i));\n\t}\n\t//\n\t//\n\t// SDF OBJECTS\n\t//\n\t//\n\t// SDFObjects() {\n\t// \tconst list = this._allObjects?.filter((o) => SDF_OBJECT_TYPES_SET.has(o.type as SDFObjectType)) || undefined;\n\t// \treturn list as SDFObject[] | undefined;\n\t// }\n\t// SDFCoreObjects() {\n\t// \treturn this.csgObjects()?.map((o, i) => coreObjectInstanceFactory(o, i));\n\t// }\n\n\t//\n\t//\n\t// TET OBJECTS\n\t//\n\t//\n\ttetObjects() {\n\t\tconst list = this._allObjects?.filter(isTetObject) || undefined;\n\t\treturn list as TetObject[] | undefined;\n\t}\n\ttetCoreObjects() {\n\t\treturn this.tetObjects()?.map((o, i) => coreObjectInstanceFactory(o, i));\n\t}\n\n\t//\n\t//\n\t// THREEJS OBJECTS\n\t//\n\t//\n\tthreejsObjects(): Object3D[] {\n\t\treturn this._allObjects ? this._allObjects.filter(isObject3D) : [];\n\t}\n\tthreejsObjectsWithGeo(): Object3DWithGeometry[] {\n\t\treturn this.threejsObjects().filter(object3DHasGeometry);\n\t}\n\tthreejsCoreObjects() {\n\t\treturn this.threejsObjects().map((o, i) => new ThreejsCoreObject(o, i));\n\t}\n\tgeometries(): BufferGeometry[] {\n\t\treturn this.threejsObjectsWithGeo().map((o) => o.geometry);\n\t}\n\t// coreGeometries(): CoreGeometry[] {\n\t// \treturn this.geometries().map((g) => new CoreGeometry(g));\n\t// }\n\n\t//\n\t//\n\t// POINTS\n\t//\n\t//\n\tpoints(target: CorePoint<CoreObjectType>[]) {\n\t\treturn pointsFromObjects(this.allObjects(), target);\n\t\t// return this.allObjects()\n\t\t// \t.map((o) => pointsFromObject(o))\n\t\t// \t.flat();\n\t\t// .map((g) => g.points())\n\t\t// .flat();\n\t}\n\tpointsCount() {\n\t\treturn arraySum(this.allObjects().map((g) => pointsCountFromObject(g)));\n\t}\n\ttotalPointsCount() {\n\t\tconst threejsObjects = this.threejsObjects();\n\t\tlet sum = 0;\n\t\tfor (const object of threejsObjects) {\n\t\t\tsum += objectTotalPointsCount(object);\n\t\t}\n\t\treturn sum;\n\t}\n\tpointsFromGroup(group: GroupString, target: CorePoint<CoreObjectType>[]) {\n\t\tif (group) {\n\t\t\tCoreString.indices(group, _indices);\n\t\t\tthis.points(_points);\n\t\t\tconst compactPoints: CorePoint<CoreObjectType>[] = [];\n\t\t\tconst pointsInGroup = arrayCompact(\n\t\t\t\t_indices.map((i) => _points[i]),\n\t\t\t\tcompactPoints\n\t\t\t);\n\t\t\ttarget.length = 0;\n\t\t\tarrayPushItems(pointsInGroup, target);\n\t\t\treturn target;\n\t\t} else {\n\t\t\treturn this.points(target);\n\t\t}\n\t}\n\tpointAttribNames(): string[] {\n\t\tconst firstObject = this.allObjects()[0];\n\t\tif (firstObject) {\n\t\t\treturn pointAttributeNames(firstObject);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\thasPointAttrib(attribName: string): boolean {\n\t\tconst firstObject = this.allObjects()[0];\n\t\tif (firstObject) {\n\t\t\treturn hasPointAttribute(firstObject, attribName);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tpointAttribType(attribName: string): AttribType {\n\t\tconst firstObject = this.allObjects()[0];\n\t\tif (firstObject) {\n\t\t\treturn pointAttributeType(firstObject, attribName);\n\t\t} else {\n\t\t\treturn AttribType.NUMERIC;\n\t\t}\n\t}\n\tpointAttribNamesMatchingMask(masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.pointAttribNames());\n\t}\n\tpointAttribSizes(): Record<string, number> {\n\t\tconst firstObject = this.allObjects()[0];\n\t\tif (firstObject) {\n\t\t\treturn pointAttributeSizes(firstObject);\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\tpointAttribSize(attribName: string): number {\n\t\tconst firstObject = this.allObjects()[0];\n\t\tif (firstObject) {\n\t\t\treturn pointAttributeSize(firstObject, attribName);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t//\n\t//\n\t// OBJECTS\n\t//\n\t//\n\tstatic _fromObjects(objects: Object3D[]): CoreGroup {\n\t\tconst coreGroup = new CoreGroup();\n\t\tcoreGroup.setAllObjects(objects);\n\t\treturn coreGroup;\n\t}\n\tobjectAttribTypesByName() {\n\t\treturn coreObjectAttributeTypesByName(this.allCoreObjects());\n\t}\n\tobjectAttribNames() {\n\t\treturn coreObjectsAttribNames(this.allCoreObjects());\n\t}\n\tobjectAttribNamesMatchingMask(masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.objectAttribNames());\n\t}\n\tobjectAttribSizesByName(): PolyDictionary<AttribSize[]> {\n\t\treturn coreObjectsAttribSizesByName(this.allCoreObjects());\n\t}\n\n\t//\n\t//\n\t//\n\t//\n\t//\n\trenameAttribute(oldName: string, newName: string) {\n\t\tconst attribValue = this.attribValue(oldName);\n\t\tif (attribValue == null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.addAttribute(newName, attribValue);\n\t\tthis.deleteAttribute(oldName);\n\t}\n\n\tattribNamesMatchingMask(masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.attribNames());\n\t}\n\thasAttribute(attribName: string): boolean {\n\t\treturn this.attribValue(attribName) != null;\n\t}\n\n\tprivate _attributes: AttributeDictionary = {};\n\taddAttribute(attribName: string, attribValue: AttribValue) {\n\t\tthis.attributes()[attribName] = attribValue;\n\t}\n\taddNumericAttribute<T extends CoreObjectType>(\n\t\tattribName: string,\n\t\tsize: AttribSize = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\tconst attributes = this.attributes();\n\t\tif (defaultValue != null) {\n\t\t\tif (attribValueNonPrimitive(defaultValue)) {\n\t\t\t\tconst clonedDefaultValue = cloneAttribValue(defaultValue);\n\t\t\t\tif (clonedDefaultValue != null) {\n\t\t\t\t\tattributes[attribName] = clonedDefaultValue;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattributes[attribName] = defaultValue;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (size) {\n\t\t\t\tcase 1: {\n\t\t\t\t\treturn (this.attributes()[attribName] = 0);\n\t\t\t\t}\n\t\t\t\tcase 2: {\n\t\t\t\t\treturn (this.attributes()[attribName] = new Vector2(0, 0));\n\t\t\t\t}\n\t\t\t\tcase 3: {\n\t\t\t\t\treturn (this.attributes()[attribName] = new Vector3(0, 0, 0));\n\t\t\t\t}\n\t\t\t\tcase 4: {\n\t\t\t\t\treturn (this.attributes()[attribName] = new Vector4(0, 0, 0, 0));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdeleteAttribute(name: string) {\n\t\tdelete this.attributes()[name];\n\t}\n\tattribValue(attribName: string) {\n\t\treturn this._attributes && this._attributes[attribName];\n\t}\n\tattribNames(): string[] {\n\t\treturn this._attributes ? Object.keys(this._attributes) : [];\n\t}\n\tattribType(name: string) {\n\t\tconst val = this.attribValue(name);\n\t\tif (CoreType.isString(val)) {\n\t\t\treturn AttribType.STRING;\n\t\t} else {\n\t\t\treturn AttribType.NUMERIC;\n\t\t}\n\t}\n\tattribSizes() {\n\t\tconst h: PolyDictionary<AttribSize> = {};\n\t\tfor (const attrib_name of this.attribNames()) {\n\t\t\tconst size = this.attribSize(attrib_name);\n\t\t\tif (size != null) {\n\t\t\t\th[attrib_name] = size;\n\t\t\t}\n\t\t}\n\t\treturn h;\n\t}\n\tattribSize(name: string): AttribSize | null {\n\t\tconst val = this.attribValue(name);\n\t\tif (val == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn CoreAttribute.attribSizeFromValue(val);\n\t}\n\tattributes() {\n\t\treturn this._attributes || this._createAttributesDictionaryIfNone();\n\t}\n\tprivate _createAttributesDictionaryIfNone() {\n\t\tif (!this._attributes) {\n\t\t\tthis._attributes = {};\n\t\t}\n\t\treturn this._attributes;\n\t}\n\t// override\n\tsetAttribValue(attribName: string, attribValue: AttribValue | string) {\n\t\tthis.addAttribute(attribName, attribValue);\n\t}\n\n\tstringAttribValue(attribName: string) {\n\t\treturn this.attribValue(attribName) as string | null;\n\t}\n\tposition(target: Vector3): Vector3 {\n\t\tconst objectsCount = this._allObjects.length;\n\t\ttarget.set(0, 0, 0);\n\t\tfor (const object of this._allObjects) {\n\t\t\tcoreObjectClassFactory(object).position(object, tmpPos);\n\t\t\ttarget.add(tmpPos);\n\t\t}\n\t\ttarget.divideScalar(objectsCount);\n\t\treturn target;\n\t}\n\tattributeNames(): string[] {\n\t\tconst attributes = this.attributes();\n\t\tif (!attributes) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(attributes);\n\t}\n\tattributeNamesMatchingMask(masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.attributeNames());\n\t}\n\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\n\trelatedObjects(\n\t\ttarget: BaseCoreObject<CoreObjectType>[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tarrayCopy(this.allCoreObjects(), target);\n\t}\n\n\trelatedPrimitives(\n\t\ttarget: CorePrimitive<CoreObjectType>[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\ttarget.length = 0;\n\t\tconst objects = this.allObjects();\n\t\tlet i = 0;\n\t\tfor (const object of objects) {\n\t\t\tcoreObjectClassFactory(object).relatedPrimitives(object, i, _relatedPrimitivesForObject);\n\t\t\tfor (const _relatedPrimitiveForObject of _relatedPrimitivesForObject) {\n\t\t\t\ttarget.push(_relatedPrimitiveForObject);\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n\trelatedVertices(target: CoreVertex<CoreObjectType>[], traversedRelatedEntityData?: TraversedRelatedEntityData) {\n\t\tthis.relatedPrimitives(_relatedPrimitives);\n\t\tuniqRelatedEntities(\n\t\t\t_relatedPrimitives,\n\t\t\t(primitive) => {\n\t\t\t\tprimitive.relatedVertices(_relatedVertices);\n\t\t\t\treturn _relatedVertices;\n\t\t\t},\n\t\t\ttarget\n\t\t);\n\t}\n\trelatedPoints(target: CorePoint<CoreObjectType>[], traversedRelatedEntityData?: TraversedRelatedEntityData) {\n\t\tthis.relatedVertices(_relatedVertices);\n\t\treturn uniqRelatedEntities(\n\t\t\t_relatedVertices,\n\t\t\t(vertex) => {\n\t\t\t\tvertex.relatedPoints(_relatedPoints);\n\t\t\t\treturn _relatedPoints;\n\t\t\t},\n\t\t\ttarget\n\t\t);\n\t}\n\trelatedEntities(\n\t\tattribClass: AttribClass,\n\t\tcoreGroup: CoreGroup,\n\t\ttarget: CoreEntity[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tswitch (attribClass) {\n\t\t\tcase AttribClass.POINT: {\n\t\t\t\tthis.relatedPoints(target as CorePoint<CoreObjectType>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.VERTEX: {\n\t\t\t\tthis.relatedVertices(target as CoreVertex<CoreObjectType>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.PRIMITIVE: {\n\t\t\t\tthis.relatedPrimitives(target as CorePrimitive<CoreObjectType>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.OBJECT: {\n\t\t\t\tthis.relatedObjects(target as BaseCoreObject<CoreObjectType>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.CORE_GROUP: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = coreGroup;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(attribClass);\n\t}\n\n\t//\n\t//\n\t// UTILS\n\t//\n\t//\n\tobjectsData(): ObjectData[] {\n\t\treturn this._allObjects?.map((o) => coreObjectClassFactory(o).objectData(o)) || [];\n\t}\n\tboundingBox(target: Box3) {\n\t\ttarget.makeEmpty();\n\t\tconst coreObjects = this.allCoreObjects();\n\t\tfor (const coreObject of coreObjects) {\n\t\t\tcoreObject.boundingBox(tmpBox3);\n\t\t\ttarget.union(tmpBox3);\n\t\t}\n\t}\n\tstatic geometryFromObject(object: Object3D): BufferGeometry | null {\n\t\tif ((object as Mesh).isMesh || (object as LineSegments).isLine || (object as Points).isPoints) {\n\t\t\treturn (object as Mesh).geometry as BufferGeometry;\n\t\t}\n\t\treturn null;\n\t}\n}\n","import {\n\tBufferGeometry,\n\tInstancedBufferAttribute,\n\tInstancedBufferGeometry,\n\tMatrix4,\n\tQuaternion,\n\tVector2,\n\tVector3,\n} from 'three';\nimport {BaseCorePoint, CorePoint} from './entities/point/CorePoint';\nimport {CoreGroup} from './Group';\n// import {CoreGeometry} from './Geometry';\nimport {CoreType} from '../Type';\nimport {Attribute} from './Attribute';\nimport {PolyDictionary} from '../../types/GlobalTypes';\nimport {CoreObjectType} from './ObjectContent';\n\nconst DEFAULT = {\n\tSCALE: new Vector3(1, 1, 1),\n\tPSCALE: 1,\n\tEYE: new Vector3(0, 0, 0),\n\tUP: new Vector3(0, 1, 0),\n};\n\nconst DEFAULT_COLOR = new Vector3(1, 1, 1);\nconst DEFAULT_UV = new Vector2(0, 0);\nconst _position = new Vector3();\nconst _instancePts: CorePoint<CoreObjectType>[] = [];\n\nexport enum InstanceAttrib {\n\tPOSITION = 'instancePosition',\n\tSCALE = 'instanceScale',\n\tQUATERNION = 'instanceQuaternion',\n\tCOLOR = 'instanceColor',\n\tUV = 'instanceUv',\n}\n\nconst ATTRIB_NAME_MAP: PolyDictionary<string> = {\n\tP: InstanceAttrib.POSITION,\n\tN: InstanceAttrib.QUATERNION,\n\tup: InstanceAttrib.QUATERNION,\n\tCd: InstanceAttrib.COLOR,\n\t[Attribute.COLOR]: InstanceAttrib.COLOR,\n\t[Attribute.NORMAL]: InstanceAttrib.QUATERNION,\n\t[Attribute.POSITION]: InstanceAttrib.POSITION,\n\t[Attribute.PSCALE]: InstanceAttrib.SCALE,\n\t[Attribute.SCALE]: InstanceAttrib.SCALE,\n};\nexport class CoreInstancer {\n\tprivate _is_pscale_present: boolean = false;\n\tprivate _is_scale_present: boolean = false;\n\tprivate _is_normal_present: boolean = false;\n\tprivate _is_up_present: boolean = false;\n\tprivate _do_rotate_matrices: boolean = false;\n\t// private _matrices: PolyDictionary<Matrix4> = {};\n\tprivate _matrixT = new Matrix4();\n\tprivate _matrixR = new Matrix4();\n\tprivate _matrixS = new Matrix4();\n\n\tstatic transformAttributeNames: string[] = [\n\t\tInstanceAttrib.POSITION,\n\t\tInstanceAttrib.QUATERNION,\n\t\tInstanceAttrib.SCALE,\n\t];\n\n\tstatic remapName(name: string): string {\n\t\treturn ATTRIB_NAME_MAP[name] || name;\n\t}\n\n\tconstructor(private _coreGroup?: CoreGroup) {\n\t\tif (_coreGroup) {\n\t\t\tthis.setCoreGroup(_coreGroup);\n\t\t}\n\t}\n\tsetCoreGroup(coreGroup: CoreGroup) {\n\t\tthis._coreGroup = coreGroup;\n\t\tthis._is_pscale_present = this._coreGroup.hasPointAttrib(Attribute.PSCALE);\n\t\tthis._is_scale_present = this._coreGroup.hasPointAttrib(Attribute.SCALE);\n\n\t\tthis._is_normal_present = this._coreGroup.hasPointAttrib(Attribute.NORMAL);\n\t\tthis._is_up_present = this._coreGroup.hasPointAttrib(Attribute.UP);\n\n\t\tthis._do_rotate_matrices = this._is_normal_present; //&& this._is_up_present;\n\t}\n\n\tprivate _pointScale = new Vector3();\n\tprivate _pointNormal = new Vector3();\n\tprivate _pointUp = new Vector3();\n\t// private _point_m = new Matrix4()\n\tmatrixFromPoint(point: BaseCorePoint, targetMatrix: Matrix4) {\n\t\ttargetMatrix.identity();\n\t\tpoint.position(_position);\n\t\t//r = new Vector3(0,0,0)\n\t\tif (this._is_scale_present) {\n\t\t\tpoint.attribValue(Attribute.SCALE, this._pointScale);\n\t\t} else {\n\t\t\tthis._pointScale.copy(DEFAULT.SCALE);\n\t\t}\n\t\tconst pscale: number = this._is_pscale_present\n\t\t\t? (point.attribValue(Attribute.PSCALE) as number)\n\t\t\t: DEFAULT.PSCALE;\n\t\tthis._pointScale.multiplyScalar(pscale);\n\n\t\t//matrix = #Core.Transform.matrix(t, r, s, scale)\n\t\t// matrix.identity();\n\n\t\tconst scale_matrix = this._matrixS;\n\t\tscale_matrix.makeScale(this._pointScale.x, this._pointScale.y, this._pointScale.z);\n\n\t\tconst translate_matrix = this._matrixT;\n\t\ttranslate_matrix.makeTranslation(_position.x, _position.y, _position.z);\n\n\t\ttargetMatrix.multiply(translate_matrix);\n\n\t\tif (this._do_rotate_matrices) {\n\t\t\tconst rotate_matrix = this._matrixR;\n\t\t\tconst eye = DEFAULT.EYE;\n\t\t\tpoint.attribValue(Attribute.NORMAL, this._pointNormal);\n\t\t\tthis._pointNormal.multiplyScalar(-1);\n\t\t\tif (this._is_up_present) {\n\t\t\t\tpoint.attribValue(Attribute.UP, this._pointUp);\n\t\t\t} else {\n\t\t\t\tthis._pointUp.copy(DEFAULT.UP);\n\t\t\t}\n\t\t\tthis._pointUp.normalize();\n\t\t\trotate_matrix.lookAt(eye, this._pointNormal, this._pointUp);\n\n\t\t\ttargetMatrix.multiply(rotate_matrix);\n\t\t}\n\n\t\ttargetMatrix.multiply(scale_matrix);\n\t}\n\n\tprivate static _point_color = new Vector3();\n\tprivate static _point_uv = new Vector2();\n\tprivate static _position = new Vector3(0, 0, 0);\n\tprivate static _quaternion = new Quaternion();\n\tprivate static _scale = new Vector3(1, 1, 1);\n\tprivate static _tmpMatrix = new Matrix4();\n\tstatic updateTransformInstanceAttributes(\n\t\tinstancePts: BaseCorePoint[],\n\t\ttemplateCoreGroup: CoreGroup,\n\t\tgeometry: InstancedBufferGeometry\n\t) {\n\t\tconst instancesCount = instancePts.length;\n\t\tconst positions = new Float32Array(instancesCount * 3);\n\t\tconst scales = new Float32Array(instancesCount * 3);\n\t\tconst quaternions = new Float32Array(instancesCount * 4);\n\t\tconst instancer = new CoreInstancer(templateCoreGroup);\n\t\tlet i = 0;\n\t\tfor (const instancePt of instancePts) {\n\t\t\tinstancer.matrixFromPoint(instancePt, this._tmpMatrix);\n\t\t\tconst index3 = i * 3;\n\t\t\tconst index4 = i * 4;\n\n\t\t\tthis._tmpMatrix.decompose(this._position, this._quaternion, this._scale);\n\n\t\t\tthis._position.toArray(positions, index3);\n\t\t\tthis._quaternion.toArray(quaternions, index4);\n\t\t\tthis._scale.toArray(scales, index3);\n\t\t\ti++;\n\t\t}\n\t\tconst instancePosition = new InstancedBufferAttribute(positions, 3);\n\t\tconst instanceQuaternion = new InstancedBufferAttribute(quaternions, 4);\n\t\tconst instanceScale = new InstancedBufferAttribute(scales, 3);\n\n\t\tgeometry.setAttribute(InstanceAttrib.POSITION, instancePosition);\n\t\tgeometry.setAttribute(InstanceAttrib.QUATERNION, instanceQuaternion);\n\t\tgeometry.setAttribute(InstanceAttrib.SCALE, instanceScale);\n\t}\n\n\tstatic updateColorInstanceAttribute(\n\t\tinstancePts: BaseCorePoint[],\n\t\ttemplateCoreGroup: CoreGroup,\n\t\tgeometry: InstancedBufferGeometry\n\t) {\n\t\tconst instancesCount = instancePts.length;\n\t\tconst colors = new Float32Array(instancesCount * 3);\n\t\tconst hasColor = templateCoreGroup.hasPointAttrib(Attribute.COLOR);\n\t\tlet i = 0;\n\t\tfor (const instancePt of instancePts) {\n\t\t\tconst color = hasColor\n\t\t\t\t? (instancePt.attribValue(Attribute.COLOR, this._point_color) as Vector3)\n\t\t\t\t: DEFAULT_COLOR;\n\t\t\tcolor.toArray(colors, i * 3);\n\n\t\t\ti++;\n\t\t}\n\t\tgeometry.setAttribute(InstanceAttrib.COLOR, new InstancedBufferAttribute(colors, 3));\n\t}\n\n\tstatic createInstanceBufferGeometry(\n\t\tgeometryToInstance: BufferGeometry,\n\t\ttemplateCoreGroup: CoreGroup,\n\t\tattributesToCopy: string\n\t) {\n\t\ttemplateCoreGroup.points(_instancePts);\n\n\t\tconst geometry = new InstancedBufferGeometry();\n\t\tgeometry.copy(geometryToInstance as InstancedBufferGeometry);\n\t\tgeometry.instanceCount = Infinity;\n\n\t\tconst instancesCount = _instancePts.length;\n\n\t\tconst hasUV = templateCoreGroup.hasPointAttrib(Attribute.UV);\n\t\tif (hasUV) {\n\t\t\tconst uvs = new Float32Array(instancesCount * 2);\n\t\t\tlet i = 0;\n\t\t\tfor (const instancePt of _instancePts) {\n\t\t\t\tconst index2 = i * 2;\n\t\t\t\tconst uv = hasUV ? (instancePt.attribValue(Attribute.UV, this._point_uv) as Vector2) : DEFAULT_UV;\n\t\t\t\tuv.toArray(uvs, index2);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tgeometry.setAttribute(InstanceAttrib.UV, new InstancedBufferAttribute(uvs, 2));\n\t\t}\n\t\tthis.updateTransformInstanceAttributes(_instancePts, templateCoreGroup, geometry);\n\t\tthis.updateColorInstanceAttribute(_instancePts, templateCoreGroup, geometry);\n\n\t\tconst attribNames = templateCoreGroup.pointAttribNamesMatchingMask(attributesToCopy);\n\n\t\tfor (const attribName of attribNames) {\n\t\t\tconst attribSize = templateCoreGroup.pointAttribSize(attribName);\n\t\t\tconst values = new Float32Array(instancesCount * attribSize);\n\t\t\tlet i = 0;\n\t\t\tfor (const pt of _instancePts) {\n\t\t\t\tconst value = pt.attribValue(attribName);\n\t\t\t\tif (CoreType.isNumber(value)) {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t} else {\n\t\t\t\t\t(value as Vector3).toArray(values, i * attribSize);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tgeometry.setAttribute(attribName, new InstancedBufferAttribute(values, attribSize));\n\t\t}\n\n\t\treturn geometry;\n\t}\n}\n","import {ShaderMaterial} from 'three';\nimport {Object3D} from 'three';\nimport {Mesh} from 'three';\nimport {Material} from 'three';\nimport {PolyScene} from '../../engine/scene/PolyScene';\nimport {IUniform} from 'three';\nimport {UniformsUtils} from 'three';\nexport interface IUniforms {\n\t[uniform: string]: IUniform;\n}\nexport interface MaterialWithUniforms extends Material {\n\tuniforms: IUniforms;\n}\n\nexport enum CustomMaterialName {\n\tDISTANCE = 'customDistanceMaterial', // for point lights\n\tDEPTH = 'customDepthMaterial', // for spot lights and directional\n\tDEPTH_DOF = 'customDepthDOFMaterial', // for post/bokeh only (see in scene.)\n}\n\nexport interface ObjectWithCustomMaterials extends Mesh {\n\t// customDistanceMaterial?: Material;\n\t// customDepthMaterial?: Material;\n\tcustomDepthDOFMaterial?: Material;\n}\nexport interface MaterialWithCustomMaterials extends Material {\n\tcustomMaterials: {\n\t\t[key in CustomMaterialName]?: Material;\n\t};\n}\nexport interface ShaderMaterialWithCustomMaterials extends ShaderMaterial {\n\tcustomMaterials: {\n\t\t[key in CustomMaterialName]?: Material;\n\t};\n}\nexport interface MaterialWithSkinning extends Material {\n\tskinning: boolean;\n\tmorphTargets: boolean;\n}\n\nimport {WebGLRenderer} from 'three';\nimport {Scene} from 'three';\nimport {Camera} from 'three';\nimport {BufferGeometry} from 'three';\nimport {Group} from 'three';\nimport {ShaderAssemblerMaterial} from '../../engine/nodes/gl/code/assemblers/materials/_BaseMaterial';\nimport {\n\tassignUniformViaUserData,\n\tcopyOnBeforeCompileData,\n} from '../../engine/nodes/gl/code/assemblers/materials/OnBeforeCompile';\nimport {IUniformTexture} from '../../engine/nodes/utils/code/gl/Uniforms';\n\nexport type RenderHook = (\n\trenderer: WebGLRenderer,\n\tscene: Scene,\n\tcamera: Camera,\n\tgeometry: BufferGeometry,\n\tmaterial: Material,\n\tgroup: Group | null // it's only 'Group', and not 'Group|null' in threejs types, but got null sometimes\n) => void;\nexport type RenderHookWithObject = (\n\trenderer: WebGLRenderer,\n\tscene: Scene,\n\tcamera: Camera,\n\tgeometry: BufferGeometry,\n\tmaterial: Material,\n\tgroup: Group | null, // it's only 'Group', and not 'Group|null' in threejs types, but got null sometimes\n\tobject: Object3D\n) => void;\nconst RENDER_HOOK_USER_DATA_KEY = 'POLY_render_hook';\n\ninterface MaterialWithRenderHook extends Material {\n\tuserData: {\n\t\t[RENDER_HOOK_USER_DATA_KEY]?: RenderHookWithObject;\n\t};\n}\n\nconst EMPTY_RENDER_HOOK: RenderHook = (\n\trenderer: WebGLRenderer,\n\tscene: Scene,\n\tcamera: Camera,\n\tgeometry: BufferGeometry,\n\tmaterial: Material,\n\tgroup: Group | null\n) => {};\n\ninterface CloneOptions {\n\tshareCustomUniforms: boolean;\n\taddCustomMaterials: boolean;\n}\nexport function cloneMaterial(scene: PolyScene, srcMaterial: Material | ShaderMaterial, options: CloneOptions) {\n\tconst clonedMaterial = srcMaterial.clone();\n\tconst srcUniforms = (srcMaterial as ShaderMaterial).uniforms;\n\tif (srcUniforms) {\n\t\t(clonedMaterial as ShaderMaterial).uniforms = UniformsUtils.clone(srcUniforms);\n\t}\n\tcopyOnBeforeCompileData(scene, {\n\t\tsrc: srcMaterial,\n\t\tdest: clonedMaterial,\n\t\tshareCustomUniforms: options.shareCustomUniforms,\n\t});\n\n\tif ((srcMaterial as MaterialWithCustomMaterials).customMaterials && options.addCustomMaterials) {\n\t\tconst customNames = Object.keys((srcMaterial as MaterialWithCustomMaterials).customMaterials);\n\t\tif (customNames.length > 0) {\n\t\t\t(clonedMaterial as MaterialWithCustomMaterials).customMaterials = {};\n\t\t}\n\t\tfor (const customName of customNames) {\n\t\t\tconst matName = customName as CustomMaterialName;\n\t\t\tconst customMaterial = (srcMaterial as MaterialWithCustomMaterials).customMaterials[matName];\n\t\t\tif (customMaterial) {\n\t\t\t\tconst clonedCustomMaterial = cloneMaterial(scene, customMaterial, {\n\t\t\t\t\t...options,\n\t\t\t\t\taddCustomMaterials: false,\n\t\t\t\t});\n\t\t\t\t(clonedMaterial as MaterialWithCustomMaterials).customMaterials[matName] = clonedCustomMaterial;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn clonedMaterial;\n}\n\nexport function applyCustomMaterials(object: Object3D, material: Material) {\n\tconst materialWithCustom = material as MaterialWithCustomMaterials;\n\tif (materialWithCustom.customMaterials) {\n\t\tfor (const customName of Object.keys(materialWithCustom.customMaterials)) {\n\t\t\tconst matName = customName as CustomMaterialName;\n\t\t\t// http://blog.edankwan.com/post/three-js-advanced-tips-shadow\n\t\t\tconst customMaterial = materialWithCustom.customMaterials[matName];\n\t\t\tif (customMaterial) {\n\t\t\t\t(object as ObjectWithCustomMaterials)[matName] = customMaterial;\n\t\t\t\tcustomMaterial.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t\t// object.material = material.customMaterials.customDepthDOFMaterial\n\t\t// object.material = material.customMaterials.customDepthMaterial\n\t\t// object.material = material.customMaterials.customDistanceMaterial\n\t}\n}\n\n/*\n//\n// TODO:\n// this render hook system has a big limitation,\n// which is that if we clone the object, it may not be propagated correctly,\n// since this is assigned at render time.\n// This means that if we clone an object before it has been rendered,\n// it won't have the onBeforeRender function, and therefore won't pass it on to its clone.\n//\n*/\nexport function addUserDataRenderHook(material: Material, renderHook: RenderHookWithObject) {\n\tmaterial.userData[RENDER_HOOK_USER_DATA_KEY] = renderHook;\n}\nexport function applyRenderHook(object: Object3D, material: MaterialWithRenderHook) {\n\tif (material.userData) {\n\t\tconst renderHook: RenderHookWithObject | undefined = material.userData[RENDER_HOOK_USER_DATA_KEY];\n\t\tif (renderHook) {\n\t\t\tobject.onBeforeRender = (\n\t\t\t\trenderer: WebGLRenderer,\n\t\t\t\tscene: Scene,\n\t\t\t\tcamera: Camera,\n\t\t\t\tgeometry: BufferGeometry,\n\t\t\t\tmaterial: Material,\n\t\t\t\tgroup: Group | null\n\t\t\t) => {\n\t\t\t\trenderHook(renderer, scene, camera, geometry, material, group, object);\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t}\n\t// make sure to reset the render hook if apply to a material that does not have any\n\tobject.onBeforeRender = EMPTY_RENDER_HOOK;\n}\nexport function assignUniforms(\n\tmat: Material,\n\tuniformName: string,\n\tuniform: IUniformTexture,\n\tassembler?: ShaderAssemblerMaterial\n) {\n\tassignUniformViaUserData(mat, uniformName, uniform);\n\tif (assembler) {\n\t\tassignUniformForOnBeforeCompile(mat, uniformName, uniform, assembler);\n\t}\n}\nexport function assignUniformForOnBeforeCompile(\n\tmat: Material,\n\tuniformName: string,\n\tuniform: IUniformTexture,\n\tassembler: ShaderAssemblerMaterial\n) {\n\tassembler.addAdditionalTextureUniforms(uniformName, uniform);\n}\nexport class CoreMaterial {\n\tstatic node(scene: PolyScene, material: Material) {\n\t\treturn scene.node(material.name);\n\t}\n\tstatic clone = cloneMaterial;\n\tstatic applyCustomMaterials = applyCustomMaterials;\n\tstatic assignUniforms = assignUniforms;\n\tstatic assignUniformForOnBeforeCompile = assignUniformForOnBeforeCompile;\n}\n","import {BufferGeometry, Object3D, Material, Matrix4, Object3DEventMap} from 'three';\nimport {objectCloneDeep} from '../ObjectUtils';\nimport type {CadGeometry} from './modules/cad/CadCommon';\nimport type {CsgGeometry} from './modules/csg/CsgCommon';\nimport type {QuadGeometry} from './modules/quad/QuadGeometry';\nimport type {SDFGeometry} from './modules/sdf/SDFCommon';\nimport type {TetGeometry} from './modules/tet/TetGeometry';\nimport {CoreEntity} from './CoreEntity';\n\nexport enum CoreObjectType {\n\tTHREEJS = 'Object3D',\n\tCAD = 'CADObject',\n\tCSG = 'CSGObject',\n\tQUAD = 'QUADObject',\n\tSDF = 'SDFObject',\n\tTET = 'TetObject',\n}\n\nexport interface ObjectGeometryMap {\n\t[CoreObjectType.THREEJS]: BufferGeometry;\n\t[CoreObjectType.CAD]: CadGeometry;\n\t[CoreObjectType.CSG]: CsgGeometry;\n\t[CoreObjectType.QUAD]: QuadGeometry;\n\t[CoreObjectType.SDF]: SDFGeometry;\n\t[CoreObjectType.TET]: TetGeometry;\n}\nexport interface ObjectContent<T extends CoreObjectType> {\n\ttype: string;\n\tgeometry?: ObjectGeometryMap[T];\n\tuserData: {[key: string]: any};\n\tname: string;\n\tvisible: boolean;\n\tcastShadow: boolean;\n\treceiveShadow: boolean;\n\trenderOrder: number;\n\tfrustumCulled: boolean;\n\tmatrixAutoUpdate: boolean;\n\tmaterial?: Material | Material[];\n\tchildren: ObjectContent<T>[];\n\tparent: ObjectContent<T> | null;\n\tclone: () => ObjectContent<T>;\n\tdispose?: () => void;\n\ttraverse(callback: (object: ObjectContent<T>) => any): void;\n\tapplyMatrix4(matrix: Matrix4): void;\n\tadd: (...object: any[]) => void;\n\tremove: (...object: any[]) => void;\n\tdispatchEvent: (event: {type: string | any}) => void;\n}\n\ntype Object3DEventMapExtended<T extends string> = Object3DEventMap & {\n\t[P in T]: any;\n};\nexport type Object3DWithEvent<T extends string> = Object3D<Object3DEventMapExtended<T>>;\n\nexport function isObject3D<T extends CoreObjectType>(o: ObjectContent<T>): o is Object3D {\n\treturn o instanceof Object3D || (o as Object3D).isObject3D == true;\n}\n\nexport interface ObjectContentCopyPropertiesOptions {\n\tcastShadow?: boolean;\n\treceiveShadow?: boolean;\n}\nexport function objectContentCopyProperties(\n\tsrc: ObjectContent<CoreObjectType>,\n\ttarget: ObjectContent<CoreObjectType>,\n\toptions?: ObjectContentCopyPropertiesOptions\n) {\n\ttarget.visible = src.visible;\n\ttarget.name = src.name;\n\tif (options == null || options.castShadow == null || options.castShadow == true) {\n\t\ttarget.castShadow = src.castShadow;\n\t}\n\tif (options == null || options.receiveShadow == null || options.receiveShadow == true) {\n\t\ttarget.receiveShadow = src.receiveShadow;\n\t}\n\ttarget.renderOrder = src.renderOrder;\n\ttarget.frustumCulled = src.frustumCulled;\n\ttarget.matrixAutoUpdate = src.matrixAutoUpdate;\n\tif (src.material) {\n\t\ttarget.material = src.material;\n\t}\n\ttarget.userData = objectCloneDeep(src.userData);\n}\n\nexport interface MergeCompactOptions {\n\tobjects: ObjectContent<CoreObjectType>[];\n\tmergedObjects: ObjectContent<CoreObjectType>[];\n\tmaterial?: Material;\n\tobjectType: string;\n\tonError: (message: string) => void;\n}\n\nexport type ObjectBuilder<T extends CoreObjectType> = (\n\tobject: ObjectContent<T>,\n\tentities: CoreEntity[]\n) => ObjectContent<T> | undefined;\n","import {Object3D, Raycaster, Mesh} from 'three';\nimport {MeshBVH, acceleratedRaycast, BufferGeometryWithBVH, CENTER, RaycasterForBVH} from './three-mesh-bvh';\n\nexport interface ThreeMeshBVHHelperOptions {\n\tstrategy: number;\n\tmaxLeafTris: number;\n\tmaxDepth: number;\n\tverbose: boolean;\n}\nexport interface MeshWithBVHGeometry extends Mesh {\n\tgeometry: BufferGeometryWithBVH;\n}\nexport class ThreeMeshBVHHelper {\n\tstatic assignBVH(mesh: Mesh, bvh: MeshBVH) {\n\t\tmesh.raycast = acceleratedRaycast;\n\t\t// bvh = bvh || new MeshBVH(mesh.geometry, {verbose: false});\n\t\t(mesh.geometry as BufferGeometryWithBVH).boundsTree = bvh;\n\t}\n\tstatic assignDefaultBVHIfNone(mesh: Mesh) {\n\t\tlet bvh = (mesh.geometry as BufferGeometryWithBVH).boundsTree || this.defaultBVH(mesh);\n\t\tthis.assignBVH(mesh, bvh);\n\t}\n\tstatic createBVH(mesh: Mesh, options: ThreeMeshBVHHelperOptions) {\n\t\treturn new MeshBVH(mesh.geometry, options);\n\t}\n\tprivate static defaultBVH(mesh: Mesh) {\n\t\treturn this.createBVH(mesh, {strategy: CENTER, maxLeafTris: 10, maxDepth: 40, verbose: false});\n\t}\n\tstatic copyBVH(meshDest: Mesh, meshSrc: Object3D) {\n\t\tconst existingBVH = ((meshSrc as Mesh).geometry as BufferGeometryWithBVH).boundsTree;\n\t\tif (existingBVH) {\n\t\t\tmeshDest.raycast = acceleratedRaycast;\n\t\t\tthis.assignBVH(meshDest, existingBVH);\n\t\t}\n\t}\n\tstatic updateRaycaster(raycaster: Raycaster) {\n\t\t(raycaster as RaycasterForBVH).firstHitOnly = true;\n\t}\n}\n","import {attribValueNonPrimitive, copyAttribValue} from '../geometry/entities/utils/Common';\nimport {ObjectXD, _getObjectAttributeRef_} from './ObjectAttributeReactivity';\nimport type {Ref} from '@vue/reactivity';\nimport type {AttribValue} from '../../types/GlobalTypes';\n\nfunction _copyObjectAttribToRef(attribValue: AttribValue, targetRef: Ref<AttribValue>) {\n\tif (attribValueNonPrimitive(attribValue) && attribValueNonPrimitive(targetRef.value)) {\n\t\tcopyAttribValue(attribValue, targetRef.value);\n\t} else {\n\t\ttargetRef.value = attribValue;\n\t}\n}\nexport function _updateObjectAttribRef(object3D: ObjectXD, attribName: string, newValue: AttribValue) {\n\tconst _ref = _getObjectAttributeRef_(object3D, attribName);\n\tif (!_ref) {\n\t\treturn;\n\t}\n\t_copyObjectAttribToRef(_ref.current.value, _ref.previous);\n\t_copyObjectAttribToRef(newValue, _ref.current);\n}\n","import {AttribValue, Number3, NumericAttribValue, PolyDictionary} from '../../../../types/GlobalTypes';\nimport {Box3, Color, Matrix4, Sphere, Vector2, Vector3, Vector4} from 'three';\nimport {Attribute, CoreAttribute} from '../../Attribute';\nimport {AttribType, AttribSize, ObjectData, GroupString, AttribClass} from '../../Constant';\nimport {CoreEntity, CoreEntityWithObject} from '../../CoreEntity';\nimport {CoreType} from '../../../Type';\nimport {\n\tObjectContent,\n\tCoreObjectType,\n\tObjectGeometryMap,\n\tMergeCompactOptions,\n\tObjectBuilder,\n} from '../../ObjectContent';\nimport {TransformTargetType} from '../../../Transform';\nimport {ObjectTransformMode, ObjectTransformSpace} from '../../../TransformSpace';\nimport {EntityGroupCollection} from '../../EntityGroupCollection';\nimport {_updateObjectAttribRef} from '../../../reactivity/ObjectAttributeReactivityUpdateRef';\nimport {AttributeDictionary} from '../object/BaseCoreObjectUtils';\nimport {attribValueNonPrimitive, copyAttribValue, cloneAttribValue, uniqRelatedEntityIds} from '../utils/Common';\nimport {getOrCreateObjectAttributeRef} from '../../../reactivity/ObjectAttributeReactivityCreateRef';\nimport {\n\tJsIConnectionPointTypeToDataTypeMap,\n\tParamConvertibleJsType,\n} from '../../../../engine/nodes/utils/io/connections/Js';\nimport {watch} from '../../../reactivity/CoreReactivity';\nimport {objectData} from './BaseCoreObjectUtils';\nimport {TypeAssert} from '../../../../engine/poly/Assert';\n// import {uniqRelatedEntityIds} from '../utils/Common';\nimport type {CoreGroup} from '../../Group';\nimport type {CorePrimitive} from '../primitive/CorePrimitive';\nimport {CoreVertex} from '../vertex/CoreVertex';\nimport {CorePoint} from '../point/CorePoint';\nimport {TraversedRelatedEntityData} from '../utils/TraversedRelatedEntities';\n\nenum PropertyName {\n\tNAME = 'name',\n\tPOSITION = 'position',\n}\nconst ATTRIBUTES = 'attributes';\n// const _relatedPoints: CorePoint<CoreObjectType>[] = [];\n// const _relatedVertices: CoreVertex<CoreObjectType>[] = [];\n// const _relatedPrimitives: CorePrimitive<CoreObjectType>[] = [];\n// const ATTRIBUTES_PREVIOUS_VALUES = 'attributesPreviousValues';\n\nconst ORIGIN = new Vector3(0, 0, 0);\nfunction _convertArrayToVector(value: number[]) {\n\tswitch (value.length) {\n\t\tcase 1:\n\t\t\treturn value[0];\n\t\tcase 2:\n\t\t\treturn new Vector2(value[0], value[1]);\n\t\tcase 3:\n\t\t\treturn new Vector3(value[0], value[1], value[2]);\n\t\tcase 4:\n\t\t\treturn new Vector4(value[0], value[1], value[2], value[3]);\n\t}\n}\nconst tmpVec3 = new Vector3();\nconst tmpN3: Number3 = [0, 0, 0];\n\ntype OnAttribChange<T extends ParamConvertibleJsType> = (\n\tnewValue: JsIConnectionPointTypeToDataTypeMap[T],\n\toldValue: JsIConnectionPointTypeToDataTypeMap[T]\n) => void;\n\nconst _relatedPrimitiveIds: number[] = [];\nconst _relatedVertexIds: number[] = [];\n\nexport abstract class BaseCoreObject<T extends CoreObjectType> extends CoreEntityWithObject<T> {\n\tdispose() {}\n\n\t// set_index(i: number) {\n\t// \tthis._index = i;\n\t// }\n\n\tgeometry(): ObjectGeometryMap[T] | null {\n\t\treturn this._object?.geometry || null; //(this._object as Mesh).geometry as BufferGeometry | null;\n\t}\n\tbuilder<T extends CoreObjectType>(): ObjectBuilder<T> | undefined {\n\t\treturn undefined;\n\t}\n\tstatic attributeRef<OT extends CoreObjectType, T extends ParamConvertibleJsType>(\n\t\tobject: ObjectContent<OT>,\n\t\tattribName: string,\n\t\ttype: T,\n\t\tdefaultValue: JsIConnectionPointTypeToDataTypeMap[T]\n\t) {\n\t\treturn getOrCreateObjectAttributeRef(object, attribName, type, defaultValue);\n\t}\n\tattributeRef<T extends ParamConvertibleJsType>(\n\t\tattribName: string,\n\t\ttype: T,\n\t\tdefaultValue: JsIConnectionPointTypeToDataTypeMap[T]\n\t) {\n\t\tif (!this._object) {\n\t\t\treturn;\n\t\t}\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).attributeRef(\n\t\t\tthis._object,\n\t\t\tattribName,\n\t\t\ttype,\n\t\t\tdefaultValue\n\t\t);\n\t}\n\tstatic onAttribChange<OT extends CoreObjectType, T extends ParamConvertibleJsType>(\n\t\tobject: ObjectContent<OT>,\n\t\tattribName: string,\n\t\ttype: T,\n\t\tdefaultValue: JsIConnectionPointTypeToDataTypeMap[T],\n\t\tcallback: OnAttribChange<T>\n\t) {\n\t\tconst ref = this.attributeRef(object, attribName, type, defaultValue);\n\t\treturn watch(ref.current, callback);\n\t}\n\tonAttribChange<T extends ParamConvertibleJsType>(\n\t\tattribName: string,\n\t\ttype: T,\n\t\tdefaultValue: JsIConnectionPointTypeToDataTypeMap[T],\n\t\tcallback: OnAttribChange<T>\n\t) {\n\t\tif (!this._object) {\n\t\t\treturn;\n\t\t}\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).onAttribChange(\n\t\t\tthis._object,\n\t\t\tattribName,\n\t\t\ttype,\n\t\t\tdefaultValue,\n\t\t\tcallback\n\t\t);\n\t}\n\tstatic setAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string, value: AttribValue) {\n\t\tthis.addAttribute(object, attribName, value);\n\t}\n\tstatic addAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string, value: AttribValue) {\n\t\tif (CoreType.isArray(value)) {\n\t\t\tconst convertedValue = _convertArrayToVector(value);\n\t\t\tif (!convertedValue) {\n\t\t\t\tconst message = `value invalid`;\n\t\t\t\tconsole.error(message, value);\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\n\t\tconst dict = this._attributesDictionary(object);\n\n\t\tconst currentValue = dict[attribName];\n\n\t\tif (attribValueNonPrimitive(value)) {\n\t\t\tif (currentValue == null) {\n\t\t\t\tconst cloned = cloneAttribValue(value);\n\t\t\t\tif (cloned) {\n\t\t\t\t\tdict[attribName] = cloned;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (attribValueNonPrimitive(currentValue)) {\n\t\t\t\t\tcopyAttribValue(value, currentValue);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdict[attribName] = value;\n\t\t}\n\t\t_updateObjectAttribRef(object, attribName, value);\n\t}\n\tstatic addNumericAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tsize: AttribSize = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\tthis.addAttribute(object, attribName, defaultValue);\n\t}\n\taddAttribute(name: string, value: AttribValue) {\n\t\tif (!this._object) {\n\t\t\treturn;\n\t\t}\n\t\t(this.constructor as any as typeof BaseCoreObject<CoreObjectType>).addAttribute(this._object, name, value);\n\t}\n\n\taddNumericAttrib(name: string, value: NumericAttribValue) {\n\t\tif (!this._object) {\n\t\t\treturn;\n\t\t}\n\t\t(this.constructor as any as typeof BaseCoreObject<CoreObjectType>).addNumericAttribute(\n\t\t\tthis._object,\n\t\t\tname,\n\t\t\t1,\n\t\t\tvalue\n\t\t);\n\t}\n\tsetAttribValue(name: string, value: AttribValue) {\n\t\tthis.addAttribute(name, value);\n\t}\n\t// addNumericVertexAttrib(name: string, size: number, defaultValue: NumericAttribValue) {\n\t// \t// if (defaultValue == null) {\n\t// \t// \tdefaultValue = CoreAttribute.default_value(size);\n\t// \t// }\n\t// \t// this.coreGeometry()?.addNumericAttrib(name, size, defaultValue);\n\t// }\n\tprotected static _attributesDictionary<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn (object.userData[ATTRIBUTES] as AttributeDictionary) || this._createAttributesDictionaryIfNone(object);\n\t}\n\tstatic attributesDictionaryEntry<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tdefaultValue?: AttribValue\n\t) {\n\t\tconst dict =\n\t\t\t(object.userData[ATTRIBUTES] as AttributeDictionary) || this._createAttributesDictionaryIfNone(object);\n\t\tlet entry: AttribValue | undefined = dict[attribName];\n\t\tif (entry == null && defaultValue != null) {\n\t\t\tentry = defaultValue;\n\t\t\tdict[attribName] = entry;\n\t\t}\n\t\treturn entry;\n\t}\n\t// static attributesPreviousValuesDictionary<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t// \treturn (\n\t// \t\t(object.userData[ATTRIBUTES_PREVIOUS_VALUES] as AttributeDictionary) ||\n\t// \t\tthis._createAttributesPreviousValuesDictionaryIfNone(object)\n\t// \t);\n\t// }\n\tprivate static _createAttributesDictionaryIfNone<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tif (!object.userData[ATTRIBUTES]) {\n\t\t\treturn (object.userData[ATTRIBUTES] = {});\n\t\t}\n\t}\n\t// private static _createAttributesPreviousValuesDictionaryIfNone<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t// \tif (!object.userData[ATTRIBUTES_PREVIOUS_VALUES]) {\n\t// \t\treturn (object.userData[ATTRIBUTES_PREVIOUS_VALUES] = {});\n\t// \t}\n\t// }\n\n\tprivate _attributesDictionary() {\n\t\treturn (this.constructor as typeof BaseCoreObject<CoreObjectType>)._attributesDictionary(this._object);\n\t}\n\tstatic attributes<T extends CoreObjectType>(object: ObjectContent<T>): AttributeDictionary | undefined {\n\t\treturn this._attributesDictionary(object);\n\t}\n\tattributes(): AttributeDictionary | undefined {\n\t\tif (!this._object) {\n\t\t\treturn;\n\t\t}\n\t\treturn (this.constructor as typeof BaseCoreObject<T>).attributes(this._object);\n\t}\n\tattributeNames(): string[] {\n\t\treturn this.attribNames();\n\t}\n\tstatic attribNames<T extends CoreObjectType>(object: ObjectContent<T>): string[] {\n\t\treturn Object.keys(this._attributesDictionary(object));\n\t}\n\tattribNames(): string[] {\n\t\treturn (this.constructor as typeof BaseCoreObject<CoreObjectType>).attribNames(this._object);\n\t}\n\t// static objectsAttribNames<T extends CoreObjectType>(objects: ObjectContent<T>[]) {\n\t// \tconst names: Set<string> = new Set();\n\t// \tfor (let object of objects) {\n\t// \t\tconst objectAttriNames = this.attribNames(object);\n\t// \t\tfor (let attribName of objectAttriNames) {\n\t// \t\t\tnames.add(attribName);\n\t// \t\t}\n\t// \t}\n\n\t// \treturn SetUtils.toArray(names);\n\t// }\n\tstatic hasAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\treturn attribName in this._attributesDictionary(object);\n\t}\n\thasAttribute(attribName: string): boolean {\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).hasAttribute(\n\t\t\tthis._object,\n\t\t\tattribName\n\t\t);\n\t}\n\tstatic attributeNames<T extends CoreObjectType>(object: ObjectContent<T>): string[] {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(attributes);\n\t}\n\tstatic attributeNamesMatchingMask<T extends CoreObjectType>(object: ObjectContent<T>, masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.attributeNames(object));\n\t}\n\n\trenameAttribute(oldName: string, newName: string) {\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).renameAttribute(\n\t\t\tthis._object,\n\t\t\toldName,\n\t\t\tnewName\n\t\t);\n\t}\n\tstatic renameAttribute<T extends CoreObjectType>(object: ObjectContent<T>, oldName: string, newName: string) {\n\t\tconst currentValue = this.attribValue(object, oldName);\n\t\tif (currentValue != null) {\n\t\t\tthis.addAttribute(object, newName, currentValue);\n\t\t\tthis.deleteAttribute(object, oldName);\n\t\t} else {\n\t\t\tconsole.warn(`attribute ${oldName} not found`);\n\t\t}\n\t}\n\n\tdeleteAttribute(name: string) {\n\t\tdelete this._attributesDictionary()[name];\n\t}\n\tstatic deleteAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\tdelete this._attributesDictionary(object)[attribName];\n\t}\n\t// static position:PositionStaticMethod<CoreObjectType> = DEFAULT_POSITION_STATIC_METHOD\n\tstatic position(object: ObjectContent<CoreObjectType>, target: Vector3) {\n\t\ttarget.copy(ORIGIN);\n\t}\n\tposition(target: Vector3): Vector3 {\n\t\t(this.constructor as typeof BaseCoreObject<CoreObjectType>).position(this._object, target);\n\t\treturn target;\n\t}\n\tstatic boundingBox(object: ObjectContent<CoreObjectType>, target: Box3) {\n\t\ttarget.makeEmpty();\n\t}\n\tboundingBox(target: Box3) {\n\t\t(this.constructor as typeof BaseCoreObject<CoreObjectType>).boundingBox(this._object, target);\n\t}\n\tstatic geometryBoundingBox(object: ObjectContent<CoreObjectType>, target: Box3) {\n\t\tthis.boundingBox(object, target);\n\t}\n\tgeometryBoundingBox(target: Box3) {\n\t\t(this.constructor as typeof BaseCoreObject<CoreObjectType>).geometryBoundingBox(this._object, target);\n\t}\n\tstatic boundingSphere(object: ObjectContent<CoreObjectType>, target: Sphere) {\n\t\ttarget.makeEmpty();\n\t}\n\tboundingSphere(target: Sphere) {\n\t\t(this.constructor as typeof BaseCoreObject<CoreObjectType>).boundingSphere(this._object, target);\n\t}\n\tstatic geometryBoundingSphere(object: ObjectContent<CoreObjectType>, target: Sphere) {\n\t\ttarget.makeEmpty();\n\t}\n\tgeometryBoundingSphere(target: Sphere) {\n\t\t(this.constructor as typeof BaseCoreObject<CoreObjectType>).geometryBoundingSphere(this._object, target);\n\t}\n\tstatic attribValue<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tindex: number = 0,\n\t\ttarget?: Color | Vector2 | Vector3 | Vector4\n\t): AttribValue | undefined {\n\t\tconst _attribFromProperty = () => {\n\t\t\tif (attribName == PropertyName.NAME) {\n\t\t\t\treturn object.name;\n\t\t\t}\n\t\t\tif (attribName == PropertyName.POSITION) {\n\t\t\t\tconst _target = target instanceof Vector3 ? target : tmpVec3;\n\t\t\t\tthis.position(object, _target);\n\t\t\t\t_target.toArray(tmpN3);\n\t\t\t\treturn tmpN3;\n\t\t\t}\n\t\t};\n\t\tif (attribName === Attribute.OBJECT_INDEX) {\n\t\t\treturn index;\n\t\t}\n\t\tif (attribName === Attribute.OBJECT_NAME) {\n\t\t\treturn object.name;\n\t\t}\n\t\tif (object.userData) {\n\t\t\tconst val = this.attributesDictionaryEntry(object, attribName);\n\t\t\t// const val = attribRef.value; //dict[attribName];\n\t\t\tif (val == null) {\n\t\t\t\treturn _attribFromProperty();\n\t\t\t} else {\n\t\t\t\t// const val = _ref.value;\n\t\t\t\tif (CoreType.isVector(val) && target) {\n\t\t\t\t\tif (val instanceof Vector2 && target instanceof Vector2) {\n\t\t\t\t\t\treturn target.copy(val);\n\t\t\t\t\t}\n\t\t\t\t\tif (val instanceof Vector3 && target instanceof Vector3) {\n\t\t\t\t\t\treturn target.copy(val);\n\t\t\t\t\t}\n\t\t\t\t\tif (val instanceof Vector4 && target instanceof Vector4) {\n\t\t\t\t\t\treturn target.copy(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (CoreType.isColor(val) && target) {\n\t\t\t\t\tif (val instanceof Color && target instanceof Color) {\n\t\t\t\t\t\treturn target.copy(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (CoreType.isArray(val) && target) {\n\t\t\t\t\ttarget.fromArray(val);\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(attribName, _ref, _ref.value);\n\t\t\treturn val; //_ref.value;\n\t\t}\n\t\treturn _attribFromProperty();\n\t}\n\t// static previousAttribValue<T extends CoreObjectType>(\n\t// \tobject: ObjectContent<T>,\n\t// \tattribName: string\n\t// ): AttribValue | undefined {\n\t// \tconst dict = this.attributesPreviousValuesDictionary(object);\n\t// \treturn dict[attribName];\n\t// }\n\n\tstatic stringAttribValue<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tindex: number = 0\n\t): string | null {\n\t\tconst str = this.attribValue(object, attribName, index);\n\t\tif (str != null) {\n\t\t\tif (CoreType.isString(str)) {\n\t\t\t\treturn str;\n\t\t\t} else {\n\t\t\t\treturn `${str}`;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t// static makeAttribReactive<V extends AttribValue, T extends CoreObjectType>(\n\t// \tobject: ObjectContent<T>,\n\t// \tattribName: string,\n\t// \tcallback: AttributeReactiveCallback<V>\n\t// ) {\n\t// \tconst attributesDict = this.attributesDictionary(object);\n\t// \t// const attributesPreviousValuesDict = this.attributesPreviousValuesDictionary(object);\n\n\t// \tconst currentValue = attributesDict[attribName];\n\t// \tif (currentValue instanceof Vector4) {\n\t// \t\treturn makeAttribReactiveVector4(\n\t// \t\t\tobject,\n\t// \t\t\tattribName,\n\t// \t\t\t(<unknown>callback) as AttributeReactiveCallback<Vector4>\n\t// \t\t);\n\t// \t}\n\t// \tif (currentValue instanceof Vector3) {\n\t// \t\treturn makeAttribReactiveVector3(\n\t// \t\t\tobject,\n\t// \t\t\tattribName,\n\t// \t\t\t(<unknown>callback) as AttributeReactiveCallback<Vector3>\n\t// \t\t);\n\t// \t}\n\t// \tif (currentValue instanceof Vector2) {\n\t// \t\treturn makeAttribReactiveVector2(\n\t// \t\t\tobject,\n\t// \t\t\tattribName,\n\t// \t\t\t(<unknown>callback) as AttributeReactiveCallback<Vector2>\n\t// \t\t);\n\t// \t}\n\t// \treturn makeAttribReactiveSimple(\n\t// \t\tobject,\n\t// \t\tattribName,\n\t// \t\t(<unknown>callback) as AttributeReactiveCallback<string | number>\n\t// \t);\n\n\t// \t// // create a dummy val in case there is no attribute yet\n\t// \t// if (attributesDict[attribName] == null) {\n\t// \t// \tattributesDict[attribName] = 0;\n\t// \t// }\n\n\t// \t// const proxy: AttributeProxy<V> = {\n\t// \t// \tvalue: attributesDict[attribName] as V,\n\t// \t// \tpreviousValue: attributesDict[attribName] as V,\n\t// \t// };\n\t// \t// Object.defineProperties(attributesDict, {\n\t// \t// \t[attribName]: {\n\t// \t// \t\tget: function () {\n\t// \t// \t\t\treturn proxy.value;\n\t// \t// \t\t},\n\t// \t// \t\tset: function (x) {\n\t// \t// \t\t\tif (x != proxy.value) {\n\t// \t// \t\t\t\tproxy.previousValue = proxy.value;\n\t// \t// \t\t\t\tproxy.value = x;\n\t// \t// \t\t\t\tcallback(proxy.value, proxy.previousValue);\n\t// \t// \t\t\t}\n\t// \t// \t\t\treturn proxy.value;\n\t// \t// \t\t},\n\t// \t// \t\tconfigurable: true,\n\t// \t// \t},\n\t// \t// });\n\t// \t// Object.defineProperties(attributesPreviousValuesDict, {\n\t// \t// \t[attribName]: {\n\t// \t// \t\tget: function () {\n\t// \t// \t\t\treturn proxy.previousValue;\n\t// \t// \t\t},\n\t// \t// \t\tconfigurable: true,\n\t// \t// \t},\n\t// \t// });\n\t// }\n\n\tattribValue(attribName: string, target?: Vector2 | Vector3 | Vector4): AttribValue | undefined {\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).attribValue(\n\t\t\tthis._object,\n\t\t\tattribName,\n\t\t\tthis._index,\n\t\t\ttarget\n\t\t);\n\t}\n\tstringAttribValue(name: string) {\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).stringAttribValue(\n\t\t\tthis._object,\n\t\t\tname,\n\t\t\tthis._index\n\t\t);\n\t}\n\tname(): string {\n\t\treturn this.attribValue(PropertyName.NAME) as string;\n\t}\n\thumanType(): string {\n\t\treturn this._object.type;\n\t}\n\tattribTypes() {\n\t\tconst h: PolyDictionary<AttribType> = {};\n\t\tfor (const attrib_name of this.attribNames()) {\n\t\t\tconst type = this.attribType(attrib_name);\n\t\t\tif (type != null) {\n\t\t\t\th[attrib_name] = type;\n\t\t\t}\n\t\t}\n\t\treturn h;\n\t}\n\tstatic attribType<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\tconst val = this.attribValue(object, attribName);\n\t\tif (CoreType.isString(val)) {\n\t\t\treturn AttribType.STRING;\n\t\t} else {\n\t\t\treturn AttribType.NUMERIC;\n\t\t}\n\t}\n\tattribType(attribName: string) {\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).attribType(this._object, attribName);\n\t}\n\n\tattribSizes() {\n\t\tconst h: PolyDictionary<AttribSize> = {};\n\t\tconst attribNames = this.attribNames();\n\t\tfor (const attribName of attribNames) {\n\t\t\tconst size = this.attribSize(attribName);\n\t\t\tif (size != null) {\n\t\t\t\th[attribName] = size;\n\t\t\t}\n\t\t}\n\t\treturn h;\n\t}\n\tstatic attribSize<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): AttribSize | null {\n\t\tconst val = this.attribValue(object, attribName);\n\t\tif (val == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn CoreAttribute.attribSizeFromValue(val);\n\t}\n\tattribSize(attribName: string) {\n\t\treturn (this.constructor as any as typeof BaseCoreObject<CoreObjectType>).attribSize(this._object, attribName);\n\t}\n\n\tstatic objectData<T extends CoreObjectType>(object: ObjectContent<T>): ObjectData {\n\t\treturn objectData(object);\n\t}\n\n\tclone(): BaseCoreObject<T> {\n\t\tconst clonedObject = (this.constructor as typeof BaseCoreObject<CoreObjectType>).clone(this._object);\n\t\tconst cloned = new (this.constructor as any)(clonedObject, this._index);\n\t\treturn cloned;\n\t}\n\n\tstatic clone<T extends CoreObjectType>(srcObject: ObjectContent<T>): ObjectContent<T> {\n\t\treturn srcObject.clone() as ObjectContent<T>;\n\t}\n\n\tstatic applyMatrix(\n\t\tobject: ObjectContent<CoreObjectType>,\n\t\tmatrix: Matrix4,\n\t\ttransformTargetType: TransformTargetType,\n\t\ttransformSpace: ObjectTransformSpace,\n\t\ttransformMode: ObjectTransformMode\n\t) {\n\t\tconsole.warn('applyMatrix.override required', this);\n\t}\n\tstatic mergeCompact(options: MergeCompactOptions) {\n\t\tconsole.warn('mergeCompact.override required', this);\n\t}\n\n\t//\n\t//\n\t// ENTITY GROUPS\n\t//\n\t//\n\tgroupCollection() {\n\t\treturn new EntityGroupCollection(this._object);\n\t}\n\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tstatic override relatedVertexIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tobjectIndex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tconst ids = traversedRelatedEntityData\n\t\t\t? traversedRelatedEntityData[AttribClass.PRIMITIVE].ids\n\t\t\t: _relatedPrimitiveIds;\n\t\tthis.relatedPrimitiveIds(object, objectIndex, ids, traversedRelatedEntityData);\n\t\tuniqRelatedEntityIds(\n\t\t\tids,\n\t\t\t(primitiveId, relatedEntityIds) => {\n\t\t\t\tthis.relatedPrimitiveClass(object).relatedVertexIds(object, primitiveId, relatedEntityIds);\n\t\t\t},\n\t\t\ttarget\n\t\t);\n\t}\n\tstatic override relatedPointIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tobjectIndex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tconst ids = traversedRelatedEntityData ? traversedRelatedEntityData[AttribClass.VERTEX].ids : _relatedVertexIds;\n\t\tthis.relatedVertexIds(object, objectIndex, ids, traversedRelatedEntityData);\n\t\tuniqRelatedEntityIds(\n\t\t\tids,\n\t\t\t(vertexId, relatedEntityIds) => {\n\t\t\t\tthis.relatedVertexClass(object).relatedPointIds(object, vertexId, relatedEntityIds);\n\t\t\t},\n\t\t\ttarget\n\t\t);\n\t}\n\trelatedEntities(\n\t\tattribClass: AttribClass,\n\t\tcoreGroup: CoreGroup,\n\t\ttarget: CoreEntity[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tswitch (attribClass) {\n\t\t\tcase AttribClass.POINT: {\n\t\t\t\tthis.relatedPoints(target as CorePoint<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.VERTEX: {\n\t\t\t\tthis.relatedVertices(target as CoreVertex<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.PRIMITIVE: {\n\t\t\t\tthis.relatedPrimitives(target as CorePrimitive<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.OBJECT: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = this;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.CORE_GROUP: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = coreGroup;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(attribClass);\n\t}\n\n\tstatic override relatedPointClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn this.relatedVertexClass(object).relatedPointClass(object);\n\t}\n\tstatic override relatedVertexClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn this.relatedPrimitiveClass(object).relatedVertexClass(object);\n\t}\n}\n","import {AttribValue, PolyDictionary} from '../../../../types/GlobalTypes';\nimport {CoreObjectType, ObjectContent, isObject3D} from '../../ObjectContent';\nimport {AttribSize, AttribType, ObjectData, ObjectType, objectTypeFromObject} from '../../Constant';\nimport {EntityGroupCollection} from '../../EntityGroupCollection';\nimport type {BaseCoreObject} from '../../entities/object/BaseCoreObject';\nimport {addToSetAtEntry} from '../../../MapUtils';\nimport {setToArray} from '../../../SetUtils';\n\nexport type AttributeDictionary = PolyDictionary<AttribValue>;\n\nexport function objectData<T extends CoreObjectType>(object: ObjectContent<T>): ObjectData {\n\tconst childrenCount = isObject3D(object) ? object.children.length : 0;\n\tconst objectType = isObject3D(object) ? objectTypeFromObject(object) : (object.type as ObjectType);\n\tconst groupData = EntityGroupCollection.data(object);\n\treturn {\n\t\ttype: objectType,\n\t\tname: object.name,\n\t\tchildrenCount,\n\t\tgroupData,\n\t\tverticesCount: 0,\n\t\tpointsCount: 0,\n\t\tprimitivesCount: 0,\n\t\tprimitiveName: 'no name',\n\t};\n}\n\nexport function coreObjectsAttribSizesByName<T extends CoreObjectType>(\n\tcoreObjects: BaseCoreObject<T>[]\n): PolyDictionary<AttribSize[]> {\n\tconst _sizesByName: Map<string, Set<AttribSize>> = new Map();\n\tfor (const coreObject of coreObjects) {\n\t\tconst objectAttriNames = coreObject.attribNames();\n\t\tfor (const attribName of objectAttriNames) {\n\t\t\tconst attribSize = coreObject.attribSize(attribName);\n\t\t\taddToSetAtEntry(_sizesByName, attribName, attribSize);\n\t\t}\n\t}\n\n\tconst sizesByName: PolyDictionary<AttribSize[]> = {};\n\t_sizesByName.forEach((attribSizes, attribName) => {\n\t\tsizesByName[attribName] = setToArray(attribSizes, []);\n\t});\n\treturn sizesByName;\n}\nexport function coreObjectAttributeTypesByName<T extends CoreObjectType>(\n\tcoreObjects: BaseCoreObject<T>[]\n): PolyDictionary<AttribType[]> {\n\tconst _typesByName: Map<string, Set<AttribType>> = new Map();\n\tfor (const coreObject of coreObjects) {\n\t\tconst objectAttriNames = coreObject.attribNames();\n\t\tfor (const attribName of objectAttriNames) {\n\t\t\tconst attribType = coreObject.attribType(attribName);\n\t\t\taddToSetAtEntry(_typesByName, attribName, attribType);\n\t\t}\n\t}\n\n\tconst typesByName: PolyDictionary<AttribType[]> = {};\n\t_typesByName.forEach((attribTypes, attribName) => {\n\t\ttypesByName[attribName] = setToArray(attribTypes, []);\n\t});\n\treturn typesByName;\n\t// const core_object = this.firstCoreObject();\n\t// if (core_object) {\n\t// \tfor (let name of core_object.attribNames()) {\n\t// \t\ttypes_by_name[name] = core_object.attribType(name);\n\t// \t}\n\t// }\n\t// return types_by_name;\n}\nexport function coreObjectsAttribNames<T extends CoreObjectType>(coreObjects: BaseCoreObject<T>[]) {\n\tconst names: Set<string> = new Set();\n\tfor (const coreObject of coreObjects) {\n\t\tconst objectAttriNames = coreObject.attribNames();\n\t\tfor (const attribName of objectAttriNames) {\n\t\t\tnames.add(attribName);\n\t\t}\n\t}\n\n\treturn setToArray(names, []);\n}\n","import {\n\tAttribValue,\n\tColorLike,\n\tNumericAttribValue,\n\tVector2Like,\n\tVector3Like,\n\tVector4Like,\n} from '../../../../types/GlobalTypes';\nimport {BufferAttribute, Vector4, Vector3, Vector2, InterleavedBufferAttribute} from 'three';\nimport {Attribute, CoreAttribute} from '../../Attribute';\nimport {isArray} from '../../../Type';\nimport {CoreEntity, CoreEntityWithObject} from '../../CoreEntity';\nimport {DOT, ComponentName, COMPONENT_INDICES, AttribType, GroupString, AttribClass, AttribSize} from '../../Constant';\nimport {ObjectContent, CoreObjectType, ObjectBuilder} from '../../ObjectContent';\nimport {PointAttributesDict} from './Common';\nimport {CoreAttributeData} from '../../AttributeData';\nimport {coreObjectInstanceFactory} from '../../CoreObjectFactory';\nimport {TypeAssert} from '../../../../engine/poly/Assert';\nimport {uniqRelatedEntityIds} from '../utils/Common';\nimport type {CoreGroup} from '../../Group';\nimport {TraversedRelatedEntityData} from '../utils/TraversedRelatedEntities';\n\nconst _relatedPrimitiveIds: number[] = [];\n\nfunction _warnOverloadRequired(functionName: string) {\n\tconsole.warn(`CorePoint.${functionName} needs to be overloaded`);\n}\nexport abstract class CorePoint<T extends CoreObjectType> extends CoreEntityWithObject<T> {\n\t// protected _object?: ObjectContent<T>;\n\t// constructor(object?: ObjectContent<T>, index?: number) {\n\t// \tsuper(object, index);\n\t// \tthis._object = object;\n\t// }\n\n\tbuilder<T extends CoreObjectType>(): ObjectBuilder<T> | undefined {\n\t\treturn undefined;\n\t}\n\tstatic addAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tattribute: BufferAttribute\n\t) {\n\t\t_warnOverloadRequired('addAttribute');\n\t}\n\n\tstatic entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>): number {\n\t\treturn 0;\n\t}\n\n\tstatic attributes<T extends CoreObjectType>(object?: ObjectContent<T>): PointAttributesDict | undefined {\n\t\t_warnOverloadRequired('attributes');\n\t\treturn;\n\t}\n\tattributes(): PointAttributesDict | undefined {\n\t\t// if (!this._object) {\n\t\t// \treturn;\n\t\t// }\n\t\treturn (this.constructor as typeof CorePoint<T>).attributes(this._object);\n\t}\n\tstatic attribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string\n\t): BufferAttribute | InterleavedBufferAttribute | undefined {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\treturn attributes[attribName];\n\t}\n\tattribute(attribName: string): BufferAttribute | InterleavedBufferAttribute | undefined {\n\t\t// if (!this._object) {\n\t\t// \treturn;\n\t\t// }\n\t\treturn (this.constructor as typeof CorePoint<T>).attribute(this._object, attribName);\n\t}\n\n\tstatic attribSize<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): number {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn -1;\n\t\t}\n\t\tattribName = CoreAttribute.remapName(attribName);\n\t\treturn attributes[attribName].itemSize || 0;\n\t}\n\n\tattribSize(attribName: string): number {\n\t\t// if (!this._object) {\n\t\t// \treturn 0;\n\t\t// }\n\t\treturn (this.constructor as typeof CorePoint<T>).attribSize(this._object, attribName);\n\t}\n\tstatic hasAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): boolean {\n\t\tconst remappedName = CoreAttribute.remapName(attribName);\n\t\treturn this.attributes(object) ? this.attributes(object)![remappedName] != null : false;\n\t}\n\n\thasAttribute(attribName: string): boolean {\n\t\t// if (!this._object) {\n\t\t// \treturn false;\n\t\t// }\n\t\treturn (this.constructor as typeof CorePoint<T>).hasAttribute(this._object, attribName);\n\t}\n\n\t//\n\t//\n\t// INDEXED ATTRIBUTES\n\t//\n\t//\n\tstatic userDataAttribs<T extends CoreObjectType>(object?: ObjectContent<T>): Record<string, string[]> {\n\t\t_warnOverloadRequired('userDataAttribs');\n\t\treturn {};\n\t}\n\tuserDataAttribs(): Record<string, string[]> {\n\t\treturn this._object ? (this.constructor as typeof CorePoint).userDataAttribs(this._object) : {};\n\t}\n\tstatic userDataAttrib<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tattribName: string\n\t): string[] | undefined {\n\t\tattribName = CoreAttribute.remapName(attribName);\n\t\treturn this.userDataAttribs(object)[attribName];\n\t}\n\tuserDataAttrib(name: string) {\n\t\tname = CoreAttribute.remapName(name);\n\t\treturn this.userDataAttribs()[name];\n\t}\n\tstatic attributeNames<T extends CoreObjectType>(object?: ObjectContent<T>): string[] {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(attributes);\n\t}\n\tstatic attributeNamesMatchingMask<T extends CoreObjectType>(object: ObjectContent<T>, masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.attributeNames(object));\n\t}\n\tstatic indexedAttributeNames<T extends CoreObjectType>(object?: ObjectContent<T>): string[] {\n\t\treturn object ? Object.keys(this.userDataAttribs(object) || {}) : [];\n\t}\n\tindexedAttributeNames(): string[] {\n\t\treturn this._object ? (this.constructor as typeof CorePoint).indexedAttributeNames(this._object) : [];\n\t\t// return Object.keys(this.userDataAttribs() || {});\n\t}\n\tstatic isAttribIndexed<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tattribName: string\n\t): boolean {\n\t\tattribName = CoreAttribute.remapName(attribName);\n\t\treturn this.userDataAttrib(object, attribName) != null;\n\t}\n\tisAttribIndexed(name: string): boolean {\n\t\tname = CoreAttribute.remapName(name);\n\t\treturn this.userDataAttrib(name) != null;\n\t}\n\tstatic setIndexedAttributeValues<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tattribName: string,\n\t\tvalues: string[]\n\t) {\n\t\tthis.userDataAttribs(object)[attribName] = values;\n\t}\n\tsetIndexedAttributeValues(attribName: string, values: string[]) {\n\t\treturn (this.constructor as typeof CorePoint).setIndexedAttributeValues(this._object, attribName, values);\n\t}\n\tstatic setIndexedAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tattribName: string,\n\t\tvalues: string[],\n\t\tindices: number[]\n\t) {\n\t\t_warnOverloadRequired('setIndexedAttribute');\n\t}\n\tsetIndexedAttribute(attribName: string, values: string[], indices: number[]) {\n\t\treturn (this.constructor as typeof CorePoint).setIndexedAttribute(this._object, attribName, values, indices);\n\t}\n\t//\n\tstatic indexedAttribValue<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tindex: number,\n\t\tattribName: string\n\t): string | null {\n\t\tconst valueIndex = this.attribValueIndex(object, index, attribName); //attrib.value()\n\t\tconst values = this.userDataAttrib(object, attribName);\n\t\treturn values ? values[valueIndex] : null;\n\t}\n\tindexedAttribValue(attribName: string): string | null {\n\t\treturn (this.constructor as typeof CorePoint).indexedAttribValue(this._object, this._index, attribName);\n\t}\n\tstatic stringAttribValue<T extends CoreObjectType>(object: ObjectContent<T>, index: number, attribName: string) {\n\t\treturn this.indexedAttribValue(object, index, attribName);\n\t}\n\tstringAttribValue(attribName: string) {\n\t\treturn this.indexedAttribValue(attribName);\n\t}\n\tstatic attribValueIndex<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tindex: number,\n\t\tattribName: string\n\t): number {\n\t\t_warnOverloadRequired('attribValueIndex');\n\t\treturn 0;\n\t}\n\tattribValueIndex(attribName: string): number {\n\t\treturn (this.constructor as typeof CorePoint).attribValueIndex(this._object, this._index, attribName);\n\t}\n\tstatic attribType<T extends CoreObjectType>(object: ObjectContent<T> | undefined, attribName: string): AttribType {\n\t\tif (this.isAttribIndexed(object, attribName)) {\n\t\t\treturn AttribType.STRING;\n\t\t} else {\n\t\t\treturn AttribType.NUMERIC;\n\t\t}\n\t}\n\tattribType(attribName: string): AttribType {\n\t\treturn (this.constructor as typeof CorePoint).attribType(this._object, attribName);\n\t}\n\tisStringAttribute(attribName: string): boolean {\n\t\treturn this.attribType(attribName) == AttribType.STRING;\n\t}\n\tsetAttribIndex(attribName: string, newValueIndex: number) {\n\t\t// if (!this._geometry) {\n\t\t// \treturn;\n\t\t// }\n\t\tconst attribute = this.attribute(attribName);\n\t\tif (!attribute) {\n\t\t\treturn;\n\t\t}\n\t\tconst array = (attribute as BufferAttribute).array;\n\t\treturn (array[this._index] = newValueIndex);\n\t}\n\n\t//\n\t//\n\t//\n\t//\n\t//\n\tstatic renameAttribute<T extends CoreObjectType>(object: ObjectContent<T>, oldName: string, newName: string) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tconst attribute = this.attribute(object, oldName);\n\t\tif (!attribute) {\n\t\t\treturn;\n\t\t}\n\t\tattributes[newName] = attribute;\n\t\tdelete attributes[oldName];\n\t}\n\tstatic deleteAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tdelete attributes[attribName];\n\t}\n\n\t//\n\t//\n\t//\n\t//\n\t//\n\n\tstatic attribValue<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: number,\n\t\tattribName: string,\n\t\ttarget?: Vector2 | Vector3 | Vector4\n\t): AttribValue {\n\t\tif (attribName === Attribute.POINT_INDEX) {\n\t\t\treturn index;\n\t\t} else {\n\t\t\tlet componentName = null;\n\t\t\tlet componentIndex = null;\n\t\t\tif (attribName[attribName.length - 2] === DOT) {\n\t\t\t\tcomponentName = attribName[attribName.length - 1] as ComponentName;\n\t\t\t\tcomponentIndex = COMPONENT_INDICES[componentName];\n\t\t\t\tattribName = attribName.substring(0, attribName.length - 2);\n\t\t\t}\n\t\t\tconst remapedName = CoreAttribute.remapName(attribName);\n\n\t\t\tconst attrib = this.attribute(object, remapedName);\n\t\t\tif (attrib) {\n\t\t\t\tconst {array} = attrib;\n\t\t\t\tif (this.isAttribIndexed(object, remapedName)) {\n\t\t\t\t\treturn this.indexedAttribValue(object, index, remapedName)!;\n\t\t\t\t} else {\n\t\t\t\t\tconst itemSize = attrib.itemSize;\n\t\t\t\t\tconst startIndex = index * itemSize;\n\n\t\t\t\t\tif (componentIndex == null) {\n\t\t\t\t\t\tswitch (itemSize) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\treturn array[startIndex];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\ttarget = target || new Vector2();\n\t\t\t\t\t\t\t\ttarget.fromArray(array, startIndex);\n\t\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\ttarget = target || new Vector3();\n\t\t\t\t\t\t\t\ttarget.fromArray(array, startIndex);\n\t\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\ttarget = target || new Vector4();\n\t\t\t\t\t\t\t\ttarget.fromArray(array, startIndex);\n\t\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow `size not valid (${itemSize})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (itemSize) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\treturn array[startIndex];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn array[startIndex + componentIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst attributesDict = this.attributes() || {};\n\t\t\t\tconst attribNames: string[] = Object.keys(attributesDict);\n\t\t\t\tconst message = `attrib ${attribName} not found. availables are: ${attribNames.join(',')}`;\n\t\t\t\tconsole.warn(message);\n\t\t\t\tthrow message;\n\t\t\t}\n\t\t}\n\t}\n\tattribValue(attribName: string, target?: Vector2 | Vector3 | Vector4): AttribValue {\n\t\t// if (!this._object) {\n\t\t// \treturn 0;\n\t\t// }\n\t\treturn (this.constructor as typeof CorePoint<T>).attribValue(this._object, this._index, attribName, target);\n\t}\n\tattribValueNumber(attribName: string) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn attrib.array[this._index];\n\t}\n\tattribValueVector2(attribName: string, target: Vector2) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array, this._index * 2);\n\t\treturn target;\n\t}\n\tattribValueVector3(attribName: string, target: Vector3) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array, this._index * 3);\n\t\treturn target;\n\t}\n\tattribValueVector4(attribName: string, target: Vector4) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array, this._index * 4);\n\t\treturn target;\n\t}\n\n\tposition(target: Vector3): Vector3 {\n\t\t_warnOverloadRequired('position');\n\t\treturn target;\n\t}\n\tsetPosition(newPosition: Vector3) {\n\t\tthis.setAttribValueFromVector3(Attribute.POSITION, newPosition);\n\t}\n\n\tnormal(target: Vector3): Vector3 {\n\t\t_warnOverloadRequired('normal');\n\t\treturn target;\n\t}\n\tsetNormal(newNormal: Vector3) {\n\t\treturn this.setAttribValueFromVector3(Attribute.NORMAL, newNormal);\n\t}\n\tstatic computeNormals<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\t_warnOverloadRequired('computeNormals');\n\t}\n\n\tsetAttribValue(attribName: string, value: NumericAttribValue | string) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\tconst array = attrib.array;\n\t\tconst attribSize = attrib.itemSize;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < attribSize; i++) {\n\t\t\t\tarray[this._index * attribSize + i] = value[i];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (attribSize) {\n\t\t\tcase 1:\n\t\t\t\tarray[this._index] = value as number;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tconst v2 = value as Vector2Like;\n\t\t\t\tconst i2 = this._index * 2;\n\t\t\t\tarray[i2 + 0] = v2.x;\n\t\t\t\tarray[i2 + 1] = v2.y;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tconst isColor = (value as ColorLike).r != null;\n\t\t\t\tconst i3 = this._index * 3;\n\t\t\t\tif (isColor) {\n\t\t\t\t\tconst col = value as ColorLike;\n\t\t\t\t\tarray[i3 + 0] = col.r;\n\t\t\t\t\tarray[i3 + 1] = col.g;\n\t\t\t\t\tarray[i3 + 2] = col.b;\n\t\t\t\t} else {\n\t\t\t\t\tconst v3 = value as Vector3Like;\n\t\t\t\t\tarray[i3 + 0] = v3.x;\n\t\t\t\t\tarray[i3 + 1] = v3.y;\n\t\t\t\t\tarray[i3 + 2] = v3.z;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tconst v4 = value as Vector4Like;\n\t\t\t\tconst i4 = this._index * 4;\n\t\t\t\tarray[i4 + 0] = v4.x;\n\t\t\t\tarray[i4 + 1] = v4.y;\n\t\t\t\tarray[i4 + 2] = v4.z;\n\t\t\t\tarray[i4 + 3] = v4.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn(`CorePoint.setAttribValue does not yet allow attrib size ${attribSize}`);\n\t\t\t\tthrow `attrib size ${attribSize} not implemented`;\n\t\t}\n\t}\n\tsetAttribValueFromNumber(attribName: string, value: number) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\tconst array = attrib.array;\n\t\tarray[this._index] = value;\n\t}\n\tsetAttribValueFromVector2(attribName: string, value: Vector2) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || this.isStringAttribute(attribName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalue.toArray(attrib.array, this._index * 2);\n\t}\n\tsetAttribValueFromVector3(attribName: string, value: Vector3) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || this.isStringAttribute(attribName)) {\n\t\t\treturn;\n\t\t}\n\t\tvalue.toArray(attrib.array, this._index * 3);\n\t}\n\tsetAttribValueFromVector4(attribName: string, value: Vector4) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || this.isStringAttribute(attribName)) {\n\t\t\treturn;\n\t\t}\n\t\tvalue.toArray(attrib.array, this._index * 4);\n\t}\n\n\t//\n\tstatic addAttributeFromAttribData<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tattribData: CoreAttributeData\n\t) {\n\t\tswitch (attribData.type()) {\n\t\t\tcase AttribType.STRING:\n\t\t\t\treturn console.log('TODO: to implement');\n\t\t\tcase AttribType.NUMERIC:\n\t\t\t\treturn this.addNumericAttribute(object, attribName, attribData.size());\n\t\t}\n\t}\n\tstatic addNumericAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tsize: AttribSize = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\t_warnOverloadRequired('addNumericAttribute');\n\t}\n\t//\n\tstatic markAttribAsNeedsUpdate<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\t_warnOverloadRequired('markAttribAsNeedsUpdate');\n\t}\n\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tstatic override relatedPrimitiveIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tpointIndex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tconst ids = traversedRelatedEntityData\n\t\t\t? traversedRelatedEntityData[AttribClass.VERTEX].ids\n\t\t\t: _relatedPrimitiveIds;\n\t\tthis.relatedVertexIds(object, pointIndex, ids);\n\t\tuniqRelatedEntityIds(\n\t\t\tids,\n\t\t\t(vertexId, relatedEntityIds) => {\n\t\t\t\tthis.relatedVertexClass(object).relatedPrimitiveIds(object, vertexId, relatedEntityIds);\n\t\t\t},\n\t\t\ttarget\n\t\t);\n\t}\n\tstatic override relatedPrimitiveClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn this.relatedVertexClass(object).relatedPrimitiveClass(object);\n\t}\n\tstatic override relatedObjectClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn this.relatedPrimitiveClass(object).relatedObjectClass(object);\n\t}\n\n\trelatedEntities(\n\t\tattribClass: AttribClass,\n\t\tcoreGroup: CoreGroup,\n\t\ttarget: CoreEntity[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tswitch (attribClass) {\n\t\t\tcase AttribClass.POINT: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = this;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.VERTEX: {\n\t\t\t\treturn this.relatedVertices(target as CoreEntityWithObject<T>[], traversedRelatedEntityData);\n\t\t\t}\n\t\t\tcase AttribClass.PRIMITIVE: {\n\t\t\t\treturn this.relatedPrimitives(target as CoreEntityWithObject<T>[], traversedRelatedEntityData);\n\t\t\t}\n\t\t\tcase AttribClass.OBJECT: {\n\t\t\t\tif (this._object) {\n\t\t\t\t\ttarget.length = 1;\n\t\t\t\t\ttarget[0] = coreObjectInstanceFactory(this._object) as any as CoreEntityWithObject<T>;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.length = 0;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.CORE_GROUP: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = coreGroup;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(attribClass);\n\t}\n}\n\nexport type BaseCorePoint = CorePoint<CoreObjectType>;\n","import {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {arrayCompact, arrayPushItems} from '../../../ArrayUtils';\nimport {CoreString} from '../../../String';\nimport {AttribSize, AttribType, GroupString} from '../../Constant';\nimport {corePointClassFactory, corePointInstanceFactory} from '../../CoreObjectFactory';\nimport {CoreGroup} from '../../Group';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport type {CorePoint} from './CorePoint';\nimport type {BaseCoreObject} from '../object/BaseCoreObject';\n\nconst _indices: number[] = [];\nconst _tmpPoints: CorePoint<CoreObjectType>[] = [];\n\nexport function pointsFromCoreGroup<T extends CoreObjectType>(coreGroup: CoreGroup, target: CorePoint<T>[]) {\n\treturn pointsFromObjects(coreGroup.allObjects(), target);\n}\nexport function pointsFromCoreObjects<T extends CoreObjectType>(\n\tcoreObjects: BaseCoreObject<CoreObjectType>[],\n\ttarget: CorePoint<T>[]\n) {\n\ttarget.length = 0;\n\tfor (const coreObject of coreObjects) {\n\t\tpointsFromObject(coreObject.object(), _tmpPoints);\n\t\tarrayPushItems(_tmpPoints, target);\n\t}\n\treturn target;\n}\nexport function pointsFromObjects<T extends CoreObjectType>(\n\tobjects: ObjectContent<CoreObjectType>[],\n\ttarget: CorePoint<T>[]\n) {\n\ttarget.length = 0;\n\tfor (const object of objects) {\n\t\tpointsFromObject(object, _tmpPoints);\n\t\tarrayPushItems(_tmpPoints, target);\n\t}\n\treturn target;\n}\nexport function pointsAttribNamesFromCoreGroup(coreGroup: CoreGroup): string[] {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn pointAttributeNames(firstObject);\n\t} else {\n\t\treturn [];\n\t}\n}\nexport function pointAttribSizesFromCoreGroup(coreGroup: CoreGroup): PolyDictionary<AttribSize> {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn pointAttributeSizes(firstObject);\n\t} else {\n\t\treturn {};\n\t}\n}\nexport function pointAttribTypesFromCoreGroup(coreGroup: CoreGroup): PolyDictionary<AttribType> {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn pointAttributeTypes(firstObject);\n\t} else {\n\t\treturn {};\n\t}\n}\n\nexport function pointsCountFromObject<T extends CoreObjectType>(object: ObjectContent<T>): number {\n\tconst pointClass = corePointClassFactory(object);\n\treturn pointClass.entitiesCount(object);\n}\nexport function pointsFromObject<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\ttarget: CorePoint<T>[]\n): CorePoint<T>[] {\n\tconst pointClass = corePointClassFactory(object);\n\tconst pointsCount = pointClass.entitiesCount(object);\n\ttarget.length = pointsCount;\n\tfor (let i = 0; i < pointsCount; i++) {\n\t\ttarget[i] = corePointInstanceFactory(object, i);\n\t}\n\treturn target;\n}\n\nexport function pointsFromObjectFromGroup<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\tgroup: GroupString,\n\ttarget: CorePoint<T>[]\n): CorePoint<T>[] {\n\tif (group) {\n\t\tCoreString.indices(group, _indices);\n\t\tconst points = pointsFromObject(object, _tmpPoints);\n\t\tconst compactPoints: CorePoint<T>[] = [];\n\t\tconst selectedPoints = arrayCompact(\n\t\t\t_indices.map((i) => points[i]),\n\t\t\tcompactPoints\n\t\t);\n\t\ttarget.length = 0;\n\t\tarrayPushItems(selectedPoints, target);\n\t\treturn target;\n\t} else {\n\t\treturn pointsFromObject(object, target);\n\t}\n}\n\nexport function hasPointAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): boolean {\n\tconst pointClass = corePointClassFactory(object);\n\tconst attributes = pointClass.attributes(object);\n\tif (!attributes) {\n\t\treturn false;\n\t}\n\treturn attribName in attributes;\n}\nexport function pointAttributeNames<T extends CoreObjectType>(object: ObjectContent<T>): string[] {\n\tconst pointClass = corePointClassFactory(object);\n\tconst attributes = pointClass.attributes(object);\n\tif (!attributes) {\n\t\treturn [];\n\t}\n\treturn Object.keys(attributes);\n}\nexport function pointAttributeSize<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): number {\n\tconst pointClass = corePointClassFactory(object);\n\tconst attributes = pointClass.attributes(object);\n\tif (!attributes) {\n\t\treturn 0;\n\t}\n\treturn attributes[attribName].itemSize;\n}\nexport function pointAttributeSizes<T extends CoreObjectType>(object: ObjectContent<T>): PolyDictionary<AttribSize> {\n\tconst pointClass = corePointClassFactory(object);\n\tconst attributes = pointClass.attributes(object);\n\tif (!attributes) {\n\t\treturn {};\n\t}\n\tconst attribNames = Object.keys(attributes);\n\tconst h: PolyDictionary<AttribSize> = {};\n\tfor (const attribName of attribNames) {\n\t\th[attribName] = attributes[attribName].itemSize;\n\t}\n\treturn h;\n}\nexport function pointAttributeType<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): AttribType {\n\tconst pointClass = corePointClassFactory(object);\n\tconst attributes = pointClass.attributes(object);\n\tif (!attributes) {\n\t\treturn AttribType.NUMERIC;\n\t}\n\treturn pointClass.attribType(object, attribName);\n}\nexport function pointAttributeTypes<T extends CoreObjectType>(object: ObjectContent<T>): PolyDictionary<AttribType> {\n\tconst pointClass = corePointClassFactory(object);\n\tconst attributes = pointClass.attributes(object);\n\tif (!attributes) {\n\t\treturn {};\n\t}\n\tconst attribNames = Object.keys(attributes);\n\tconst h: PolyDictionary<AttribType> = {};\n\tfor (const attribName of attribNames) {\n\t\th[attribName] = pointClass.attribType(object, attribName);\n\t}\n\treturn h;\n}\n","import {\n\tAttribValue,\n\tColorLike,\n\tNumericAttribValue,\n\tVector2Like,\n\tVector3Like,\n\tVector4Like,\n} from '../../../../types/GlobalTypes';\nimport {Vector4, Vector3, Vector2} from 'three';\nimport {Attribute, CoreAttribute} from '../../Attribute';\nimport {CoreEntity, CoreEntityWithObject} from '../../CoreEntity';\nimport {CoreType} from '../../../Type';\nimport {BasePrimitiveAttribute} from './PrimitiveAttribute';\nimport {DOT, ComponentName, COMPONENT_INDICES, GroupString, AttribClass, AttribSize, AttribType} from '../../Constant';\nimport {PrimitiveAttributesDict} from './Common';\nimport {CoreObjectType, ObjectContent, ObjectBuilder} from '../../ObjectContent';\nimport {TypeAssert} from '../../../../engine/poly/Assert';\nimport {uniqRelatedEntityIds} from '../utils/Common';\nimport type {CoreVertex} from '../vertex/CoreVertex';\nimport type {CoreGroup} from '../../Group';\nimport type {PrimitiveGraph} from './PrimitiveGraph';\nimport {CorePoint} from '../point/CorePoint';\nimport {TraversedRelatedEntityData} from '../utils/TraversedRelatedEntities';\n\nfunction _warnOverloadRequired(functionName: string) {\n\tconsole.warn(`CorePrimitive.${functionName} needs to be overloaded`);\n}\nconst _ids: number[] = [];\nexport abstract class CorePrimitive<T extends CoreObjectType> extends CoreEntityWithObject<T> {\n\tbuilder<T extends CoreObjectType>(): ObjectBuilder<T> | undefined {\n\t\treturn undefined;\n\t}\n\tstatic entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn 0;\n\t}\n\n\tstatic addAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tattribute: BasePrimitiveAttribute\n\t) {\n\t\t_warnOverloadRequired('addAttribute');\n\t}\n\tstatic addNumericAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tsize: AttribSize = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\t_warnOverloadRequired('addNumericAttribute');\n\t}\n\n\tstatic attributes<T extends CoreObjectType>(object?: ObjectContent<T>): PrimitiveAttributesDict | undefined {\n\t\t_warnOverloadRequired('attributes');\n\t\treturn;\n\t}\n\tattributes(): PrimitiveAttributesDict | undefined {\n\t\tif (!this._object) {\n\t\t\treturn;\n\t\t}\n\t\treturn (this.constructor as typeof CorePrimitive<T>).attributes(this._object);\n\t}\n\tstatic attribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string\n\t): BasePrimitiveAttribute | undefined {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\treturn attributes[attribName];\n\t}\n\tattribute(attribName: string): BasePrimitiveAttribute | undefined {\n\t\tif (!this._object) {\n\t\t\treturn;\n\t\t}\n\t\treturn (this.constructor as typeof CorePrimitive<T>).attribute(this._object, attribName);\n\t}\n\tstatic renameAttribute<T extends CoreObjectType>(object: ObjectContent<T>, oldName: string, newName: string) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tconst attribute = this.attribute(object, oldName);\n\t\tif (!attribute) {\n\t\t\treturn;\n\t\t}\n\t\tattributes[newName] = attribute;\n\t\tdelete attributes[oldName];\n\t}\n\tstatic deleteAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tdelete attributes[attribName];\n\t}\n\tstatic attribSize<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): number {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn -1;\n\t\t}\n\t\tattribName = CoreAttribute.remapName(attribName);\n\t\treturn attributes[attribName].itemSize || 0;\n\t}\n\n\tattribSize(attribName: string): number {\n\t\tif (!this._object) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn (this.constructor as typeof CorePrimitive<T>).attribSize(this._object, attribName);\n\t}\n\tstatic hasAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): boolean {\n\t\tconst remappedName = CoreAttribute.remapName(attribName);\n\t\treturn this.attributes(object) ? this.attributes(object)![remappedName] != null : false;\n\t}\n\thasAttribute(attribName: string): boolean {\n\t\tif (!this._object) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this.constructor as typeof CorePrimitive<T>).hasAttribute(this._object, attribName);\n\t}\n\tstatic attributeNames<T extends CoreObjectType>(object?: ObjectContent<T>): string[] {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(attributes);\n\t}\n\tstatic attributeNamesMatchingMask<T extends CoreObjectType>(object: ObjectContent<T>, masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.attributeNames(object));\n\t}\n\tstatic attribValue<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: number,\n\t\tattribName: string,\n\t\ttarget?: Vector2 | Vector3 | Vector4\n\t): AttribValue {\n\t\tif (attribName === Attribute.PRIMITIVE_INDEX) {\n\t\t\treturn index;\n\t\t}\n\t\tlet componentName = null;\n\t\tlet componentIndex = null;\n\t\tif (attribName[attribName.length - 2] === DOT) {\n\t\t\tcomponentName = attribName[attribName.length - 1] as ComponentName;\n\t\t\tcomponentIndex = COMPONENT_INDICES[componentName];\n\t\t\tattribName = attribName.substring(0, attribName.length - 2);\n\t\t}\n\t\tconst remapedName = CoreAttribute.remapName(attribName);\n\n\t\tif (remapedName == Attribute.POSITION) {\n\t\t\treturn this.position(object as any, index, target as Vector3);\n\t\t}\n\t\tif (remapedName == Attribute.NORMAL) {\n\t\t\treturn this.normal(object as any, index, target as Vector3);\n\t\t}\n\n\t\tconst attrib = this.attribute(object, remapedName);\n\n\t\tif (attrib) {\n\t\t\tconst {array} = attrib;\n\n\t\t\tconst itemSize = attrib.itemSize;\n\t\t\tconst startIndex = index * itemSize;\n\n\t\t\tif (componentIndex == null) {\n\t\t\t\tswitch (itemSize) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn array[startIndex];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\ttarget = target || new Vector2();\n\t\t\t\t\t\ttarget.fromArray(array as number[], startIndex);\n\t\t\t\t\t\treturn target;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\ttarget = target || new Vector3();\n\t\t\t\t\t\ttarget.fromArray(array as number[], startIndex);\n\t\t\t\t\t\treturn target;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\ttarget = target || new Vector4();\n\t\t\t\t\t\ttarget.fromArray(array as number[], startIndex);\n\t\t\t\t\t\treturn target;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow `size not valid (${itemSize})`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tswitch (itemSize) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn array[startIndex];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn array[startIndex + componentIndex];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// }\n\t\t} else {\n\t\t\tconst attributesDict = this.attributes(object) || {};\n\t\t\tconst attribNames: string[] = Object.keys(attributesDict);\n\t\t\tconst message = `attrib ${attribName} not found. availables are: ${attribNames.join(',')}`;\n\t\t\tconsole.warn(message);\n\t\t\tthrow message;\n\t\t}\n\t}\n\tattribValue(attribName: string, target?: Vector2 | Vector3 | Vector4): AttribValue {\n\t\tif (!this._object) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn (this.constructor as typeof CorePrimitive<T>).attribValue(this._object, this._index, attribName, target);\n\t}\n\tattribValueNumber(attribName: string) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn attrib.array[this._index];\n\t}\n\tattribValueVector2(attribName: string, target: Vector2) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array as number[], this._index * 2);\n\t\treturn target;\n\t}\n\tattribValueVector3(attribName: string, target: Vector3) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array as number[], this._index * 3);\n\t\treturn target;\n\t}\n\tattribValueVector4(attribName: string, target: Vector4) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array as number[], this._index * 4);\n\t\treturn target;\n\t}\n\tstatic attribType<T extends CoreObjectType>(object: ObjectContent<T> | undefined, attribName: string): AttribType {\n\t\tconst attribute = object ? this.attribute(object, attribName) : null;\n\t\tif (attribute && attribute?.isString == true) {\n\t\t\treturn AttribType.STRING;\n\t\t} else {\n\t\t\treturn AttribType.NUMERIC;\n\t\t}\n\t}\n\tattribType(attribName: string): AttribType {\n\t\treturn (this.constructor as typeof CorePrimitive).attribType(this._object, attribName);\n\t}\n\tstatic stringAttribValue<T extends CoreObjectType>(object: ObjectContent<T>, index: number, attribName: string) {\n\t\treturn this.attribValue(object, index, attribName);\n\t}\n\tstringAttribValue(attribName: string) {\n\t\treturn this.attribValue(attribName) as string;\n\t}\n\n\t// setPosition(newPosition: Vector3) {\n\t// \tthis.setAttribValueFromVector3(Attribute.POSITION, newPosition);\n\t// }\n\n\t// setNormal(newNormal: Vector3) {\n\t// \treturn this.setAttribValueFromVector3(Attribute.NORMAL, newNormal);\n\t// }\n\tstatic position<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\t_warnOverloadRequired('position');\n\t\treturn target;\n\t}\n\tstatic normal<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\t_warnOverloadRequired('normal');\n\t\treturn target;\n\t}\n\n\tstatic computeVertexNormalsIfAttributeVersionChanged<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\t_warnOverloadRequired('computeVertexNormalsIfAttributeVersionChanged');\n\t}\n\n\tsetAttribValue(attribName: string, value: NumericAttribValue | string) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\tconsole.warn(`no attribute ${attribName}`);\n\t\t\treturn;\n\t\t}\n\t\tconst array = attrib.array;\n\t\tconst attribSize = attrib.itemSize;\n\n\t\tif (CoreType.isArray(value)) {\n\t\t\tfor (let i = 0; i < attribSize; i++) {\n\t\t\t\tarray[this._index * attribSize + i] = value[i];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (attribSize) {\n\t\t\tcase 1:\n\t\t\t\tarray[this._index] = value as number | string;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tconst v2 = value as Vector2Like;\n\t\t\t\tconst i2 = this._index * 2;\n\t\t\t\tarray[i2 + 0] = v2.x;\n\t\t\t\tarray[i2 + 1] = v2.y;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tconst isColor = (value as ColorLike).r != null;\n\t\t\t\tconst i3 = this._index * 3;\n\t\t\t\tif (isColor) {\n\t\t\t\t\tconst col = value as ColorLike;\n\t\t\t\t\tarray[i3 + 0] = col.r;\n\t\t\t\t\tarray[i3 + 1] = col.g;\n\t\t\t\t\tarray[i3 + 2] = col.b;\n\t\t\t\t} else {\n\t\t\t\t\tconst v3 = value as Vector3Like;\n\t\t\t\t\tarray[i3 + 0] = v3.x;\n\t\t\t\t\tarray[i3 + 1] = v3.y;\n\t\t\t\t\tarray[i3 + 2] = v3.z;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tconst v4 = value as Vector4Like;\n\t\t\t\tconst i4 = this._index * 4;\n\t\t\t\tarray[i4 + 0] = v4.x;\n\t\t\t\tarray[i4 + 1] = v4.y;\n\t\t\t\tarray[i4 + 2] = v4.z;\n\t\t\t\tarray[i4 + 3] = v4.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn(`CorePrimitive.setAttribValue does not yet allow attribSize ${attribSize}`);\n\t\t\t\tthrow `attrib size ${attribSize} not implemented`;\n\t\t}\n\t}\n\tsetAttribValueFromNumber(attribName: string, value: number) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\tconst array = attrib.array as number[];\n\t\tarray[this._index] = value;\n\t}\n\tsetAttribValueFromVector2(attribName: string, value: Vector2) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || attrib.isString == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalue.toArray(attrib.array as number[], this._index * 2);\n\t}\n\tsetAttribValueFromVector3(attribName: string, value: Vector3) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || attrib.isString == true) {\n\t\t\treturn;\n\t\t}\n\t\tvalue.toArray(attrib.array as number[], this._index * 3);\n\t}\n\tsetAttribValueFromVector4(attribName: string, value: Vector4) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || attrib.isString == true) {\n\t\t\treturn;\n\t\t}\n\t\tvalue.toArray(attrib.array as number[], this._index * 4);\n\t}\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tstatic override relatedPointIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tpointIndex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tconst ids = traversedRelatedEntityData ? traversedRelatedEntityData[AttribClass.VERTEX].ids : _ids;\n\n\t\tthis.relatedVertexIds(object, pointIndex, ids);\n\t\tuniqRelatedEntityIds(\n\t\t\tids,\n\t\t\t(vertexId, relatedEntityIds) => {\n\t\t\t\tthis.relatedVertexClass(object).relatedPointIds(object, vertexId, relatedEntityIds);\n\t\t\t},\n\t\t\ttarget\n\t\t);\n\t}\n\n\tstatic override relatedPointClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn this.relatedVertexClass(object).relatedPointClass(object);\n\t}\n\n\trelatedEntities(\n\t\tattribClass: AttribClass,\n\t\tcoreGroup: CoreGroup,\n\t\ttarget: CoreEntity[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tswitch (attribClass) {\n\t\t\tcase AttribClass.POINT: {\n\t\t\t\tthis.relatedPoints(target as CorePoint<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.VERTEX: {\n\t\t\t\tthis.relatedVertices(target as CoreVertex<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.PRIMITIVE: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = this;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.OBJECT: {\n\t\t\t\tthis.relatedObjects(target as CoreEntityWithObject<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.CORE_GROUP: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = coreGroup;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(attribClass);\n\t}\n\tstatic graph(object: ObjectContent<CoreObjectType>): PrimitiveGraph | undefined {\n\t\tconsole.warn('CorePrimitive.graph needs to be overriden');\n\t\treturn undefined;\n\t}\n}\n","import {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {arrayPushItems} from '../../../ArrayUtils';\nimport {stringToIndices} from '../../../String';\nimport {AttribSize, AttribType, GroupString} from '../../Constant';\nimport {corePrimitiveClassFactory, corePrimitiveInstanceFactory} from '../../CoreObjectFactory';\nimport {CoreGroup} from '../../Group';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {CorePrimitive} from './CorePrimitive';\n\nconst _indices: number[] = [];\nconst _tmpPrimitives: CorePrimitive<CoreObjectType>[] = [];\n\nexport function primitives<T extends CoreObjectType>(coreGroup: CoreGroup, target: CorePrimitive<T>[]) {\n\tconst allObjects = coreGroup.allObjects();\n\n\ttarget.length = 0;\n\tfor (const object of allObjects) {\n\t\tprimitivesFromObject(object, _tmpPrimitives);\n\t\tarrayPushItems(_tmpPrimitives, target);\n\t}\n\treturn target;\n\t// return coreGroup\n\t// \t.allCoreObjects()\n\t// \t.map((o) => primitivesFromObject(o.object()))\n\t// \t.flat();\n}\nexport function primitiveAttribNamesFromCoreGroup(coreGroup: CoreGroup): string[] {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn primitiveAttributeNames(firstObject);\n\t} else {\n\t\treturn [];\n\t}\n}\nexport function primitiveAttribSizesFromCoreGroup(coreGroup: CoreGroup): PolyDictionary<AttribSize> {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn primitiveAttributeSizes(firstObject);\n\t} else {\n\t\treturn {};\n\t}\n}\nexport function primitiveAttribTypesFromCoreGroup(coreGroup: CoreGroup): PolyDictionary<AttribType> {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn primitiveAttributeTypes(firstObject);\n\t} else {\n\t\treturn {};\n\t}\n}\nexport function primitivesCountFromObject<T extends CoreObjectType>(object: ObjectContent<T>): number {\n\tconst primitiveClass = corePrimitiveClassFactory(object);\n\treturn primitiveClass.entitiesCount(object);\n}\nexport function primitivesFromObject<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\ttarget: CorePrimitive<T>[]\n): CorePrimitive<T>[] {\n\tconst primitiveClass = corePrimitiveClassFactory(object);\n\tconst primitivesCount = primitiveClass.entitiesCount(object);\n\ttarget.length = primitivesCount;\n\tfor (let i = 0; i < primitivesCount; i++) {\n\t\ttarget[i] = corePrimitiveInstanceFactory(object, i);\n\t}\n\treturn target;\n}\nexport function primitivesFromObjectFromGroup<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\tgroup: GroupString,\n\ttarget: CorePrimitive<T>[]\n): CorePrimitive<T>[] {\n\tif (group) {\n\t\tstringToIndices(group, _indices);\n\t\tprimitivesFromObject(object, _tmpPrimitives);\n\t\ttarget.length = 0;\n\t\tfor (const index of _indices) {\n\t\t\tconst primitive = _tmpPrimitives[index] as CorePrimitive<T> | undefined;\n\t\t\tif (primitive) {\n\t\t\t\ttarget.push(primitive);\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t} else {\n\t\treturn primitivesFromObject(object, target);\n\t}\n}\nexport function primitiveAttributeNames<T extends CoreObjectType>(object: ObjectContent<T>): string[] {\n\tconst primitiveClass = corePrimitiveClassFactory(object);\n\tconst attributes = primitiveClass.attributes(object);\n\tif (!attributes) {\n\t\treturn [];\n\t}\n\treturn Object.keys(attributes);\n}\nexport function primitiveAttributeSizes<T extends CoreObjectType>(\n\tobject: ObjectContent<T>\n): PolyDictionary<AttribSize> {\n\tconst primitiveClass = corePrimitiveClassFactory(object);\n\tconst attributes = primitiveClass.attributes(object);\n\tif (!attributes) {\n\t\treturn {};\n\t}\n\tconst attribNames = Object.keys(attributes);\n\tconst h: PolyDictionary<AttribSize> = {};\n\tfor (const attribName of attribNames) {\n\t\th[attribName] = attributes[attribName].itemSize;\n\t}\n\treturn h;\n}\nexport function primitiveAttributeTypes<T extends CoreObjectType>(\n\tobject: ObjectContent<T>\n): PolyDictionary<AttribType> {\n\tconst primitiveClass = corePrimitiveClassFactory(object);\n\tconst attributes = primitiveClass.attributes(object);\n\tif (!attributes) {\n\t\treturn {};\n\t}\n\tconst attribNames = Object.keys(attributes);\n\tconst h: PolyDictionary<AttribType> = {};\n\tfor (const attribName of attribNames) {\n\t\th[attribName] = attributes[attribName].isString == true ? AttribType.STRING : AttribType.NUMERIC;\n\t}\n\treturn h;\n}\n","import {CoreEntity} from '../../CoreEntity';\nimport {\n\tAttribValue,\n\tNumericAttribValue,\n\tVector2Like,\n\tVector3Like,\n\tVector4Like,\n\tColorLike,\n} from '../../../../types/GlobalTypes';\nimport {Color, Vector2, Vector3, Vector4} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {AttribSize} from '../../Constant';\nimport {isNumber, isArray} from '../../../Type';\n\ntype GetRelatedCallback<T extends CoreEntity, E extends CoreEntity> = (entity: T) => E[];\ntype GetRelatedIdCallback<E extends CoreEntity> = (id: number, target: number[]) => void;\n\nexport function uniqRelatedEntities<T extends CoreEntity, E extends CoreEntity>(\n\tentities: T[],\n\tcallback: GetRelatedCallback<T, E>,\n\ttarget: E[]\n): void {\n\ttarget.length = 0;\n\tconst entityByIndex: Map<number, E> = new Map();\n\tfor (const entity of entities) {\n\t\tconst relatedEntities = callback(entity);\n\t\tfor (const relatedEntity of relatedEntities) {\n\t\t\tlet newEntity = entityByIndex.get(relatedEntity.index());\n\t\t\tif (!newEntity) {\n\t\t\t\tnewEntity = relatedEntity;\n\t\t\t\tentityByIndex.set(newEntity.index(), newEntity);\n\t\t\t}\n\t\t}\n\t}\n\tentityByIndex.forEach((entity) => {\n\t\ttarget.push(entity);\n\t});\n}\nconst _relatedEntityIds: number[] = [];\nconst _entityIndices: Set<number> = new Set();\nexport function uniqRelatedEntityIds<E extends CoreEntity>(\n\tentityIds: number[],\n\tcallback: GetRelatedIdCallback<E>,\n\ttarget: number[]\n): void {\n\ttarget.length = 0;\n\t_entityIndices.clear();\n\tfor (const entityId of entityIds) {\n\t\tcallback(entityId, _relatedEntityIds);\n\t\tfor (const _relatedEntityId of _relatedEntityIds) {\n\t\t\t_entityIndices.add(_relatedEntityId);\n\t\t}\n\t}\n\t_entityIndices.forEach((entityId) => {\n\t\ttarget.push(entityId);\n\t});\n}\n\nexport function attribValueNonPrimitive(src: AttribValue) {\n\treturn src instanceof Color || src instanceof Vector2 || src instanceof Vector3 || src instanceof Vector4;\n}\nexport function copyAttribValue(src: AttribValue, target: AttribValue) {\n\tif (target instanceof Color && src instanceof Color) {\n\t\ttarget.copy(src);\n\t}\n\tif (target instanceof Vector2 && src instanceof Vector2) {\n\t\ttarget.copy(src);\n\t}\n\tif (target instanceof Vector3 && src instanceof Vector3) {\n\t\ttarget.copy(src);\n\t}\n\tif (target instanceof Vector4 && src instanceof Vector4) {\n\t\ttarget.copy(src);\n\t}\n}\n\nexport function cloneAttribValue(src: AttribValue) {\n\tif (src instanceof Color) {\n\t\treturn src.clone();\n\t}\n\tif (src instanceof Vector2) {\n\t\treturn src.clone();\n\t}\n\tif (src instanceof Vector3) {\n\t\treturn src.clone();\n\t}\n\tif (src instanceof Vector4) {\n\t\treturn src.clone();\n\t}\n}\n\nexport interface AttributeNumericValuesOptions {\n\tattributeAdded: boolean;\n\tvalues: number[];\n}\ntype EntitiesCountFunction<T extends CoreObjectType> = (object: ObjectContent<T>) => number;\nexport function attributeNumericValues<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\tentitiesCountFunction: EntitiesCountFunction<T>,\n\tattribSize: AttribSize = 1,\n\tdefaultValue: NumericAttribValue = 0,\n\ttarget: AttributeNumericValuesOptions\n) {\n\ttarget.values.length = 0;\n\tconst values = target.values;\n\tconst entitiesCount = entitiesCountFunction(object);\n\n\tif (isNumber(defaultValue)) {\n\t\t// adding number\n\t\tfor (let i = 0; i < entitiesCount; i++) {\n\t\t\tfor (let j = 0; j < attribSize; j++) {\n\t\t\t\tvalues.push(defaultValue);\n\t\t\t}\n\t\t}\n\t\ttarget.attributeAdded = true;\n\t} else {\n\t\tif (attribSize > 1) {\n\t\t\tif (isArray(defaultValue)) {\n\t\t\t\t// adding array\n\t\t\t\tfor (let i = 0; i < entitiesCount; i++) {\n\t\t\t\t\tfor (let j = 0; j < attribSize; j++) {\n\t\t\t\t\t\tvalues.push(defaultValue[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttarget.attributeAdded = true;\n\t\t\t} else {\n\t\t\t\t// adding Vector2\n\t\t\t\tconst vec2 = defaultValue as Vector2Like;\n\t\t\t\tif (attribSize == 2 && vec2.x != null && vec2.y != null) {\n\t\t\t\t\tfor (let i = 0; i < entitiesCount; i++) {\n\t\t\t\t\t\tvalues.push(vec2.x);\n\t\t\t\t\t\tvalues.push(vec2.y);\n\t\t\t\t\t}\n\t\t\t\t\ttarget.attributeAdded = true;\n\t\t\t\t}\n\t\t\t\t// adding Vector3\n\t\t\t\tconst vec3 = defaultValue as Vector3Like;\n\t\t\t\tif (attribSize == 3 && vec3.x != null && vec3.y != null && vec3.z != null) {\n\t\t\t\t\tfor (let i = 0; i < entitiesCount; i++) {\n\t\t\t\t\t\tvalues.push(vec3.x);\n\t\t\t\t\t\tvalues.push(vec3.y);\n\t\t\t\t\t\tvalues.push(vec3.z);\n\t\t\t\t\t}\n\t\t\t\t\ttarget.attributeAdded = true;\n\t\t\t\t}\n\t\t\t\t// adding Color\n\t\t\t\tconst col = defaultValue as ColorLike;\n\t\t\t\tif (attribSize == 3 && col.r != null && col.g != null && col.b != null) {\n\t\t\t\t\tfor (let i = 0; i < entitiesCount; i++) {\n\t\t\t\t\t\tvalues.push(col.r);\n\t\t\t\t\t\tvalues.push(col.g);\n\t\t\t\t\t\tvalues.push(col.b);\n\t\t\t\t\t}\n\t\t\t\t\ttarget.attributeAdded = true;\n\t\t\t\t}\n\t\t\t\t// adding Vector4\n\t\t\t\tconst vec4 = defaultValue as Vector4Like;\n\t\t\t\tif (attribSize == 4 && vec4.x != null && vec4.y != null && vec4.z != null && vec4.w != null) {\n\t\t\t\t\tfor (let i = 0; i < entitiesCount; i++) {\n\t\t\t\t\t\tvalues.push(vec4.x);\n\t\t\t\t\t\tvalues.push(vec4.y);\n\t\t\t\t\t\tvalues.push(vec4.z);\n\t\t\t\t\t\tvalues.push(vec4.w);\n\t\t\t\t\t}\n\t\t\t\t\ttarget.attributeAdded = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tAttribValue,\n\tColorLike,\n\tNumericAttribValue,\n\tVector2Like,\n\tVector3Like,\n\tVector4Like,\n} from '../../../../types/GlobalTypes';\nimport {Vector4, Vector3, Vector2, BufferAttribute} from 'three';\nimport {Attribute, CoreAttribute} from '../../Attribute';\nimport {CoreEntity, CoreEntityWithObject} from '../../CoreEntity';\nimport {CoreType} from '../../../Type';\nimport {BaseVertexAttribute} from './VertexAttribute';\nimport {DOT, ComponentName, COMPONENT_INDICES, GroupString, AttribClass, AttribSize, AttribType} from '../../Constant';\nimport {VertexAttributesDict} from './Common';\nimport {CoreObjectType, ObjectBuilder, ObjectContent} from '../../ObjectContent';\nimport type {CorePoint} from '../point/CorePoint';\nimport type {CorePrimitive} from '../primitive/CorePrimitive';\nimport {TypeAssert} from '../../../../engine/poly/Assert';\nimport {CoreGroup} from '../../Group';\nimport {TraversedRelatedEntityData} from '../utils/TraversedRelatedEntities';\n\nfunction _warnOverloadRequired(functionName: string) {\n\tconsole.warn(`CoreVertex.${functionName} needs to be overloaded`);\n}\nexport abstract class CoreVertex<T extends CoreObjectType> extends CoreEntityWithObject<T> {\n\tbuilder<T extends CoreObjectType>(): ObjectBuilder<T> | undefined {\n\t\treturn undefined;\n\t}\n\n\tstatic addAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tattribute: BaseVertexAttribute\n\t) {\n\t\t_warnOverloadRequired('addAttribute');\n\t}\n\tstatic addNumericAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tsize: AttribSize = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\t_warnOverloadRequired('addNumericAttribute');\n\t}\n\n\tstatic entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn 0;\n\t}\n\n\tstatic attributes<T extends CoreObjectType>(object?: ObjectContent<T>): VertexAttributesDict | undefined {\n\t\t_warnOverloadRequired('attributes');\n\t\treturn;\n\t}\n\tattributes(): VertexAttributesDict | undefined {\n\t\treturn (this.constructor as typeof CoreVertex<T>).attributes(this._object);\n\t}\n\tstatic attribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string\n\t): BaseVertexAttribute | undefined {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\treturn attributes[attribName];\n\t}\n\tattribute(attribName: string): BaseVertexAttribute | undefined {\n\t\treturn (this.constructor as typeof CoreVertex<T>).attribute(this._object, attribName);\n\t}\n\tstatic indexAttribute<T extends CoreObjectType>(object: ObjectContent<T>): BufferAttribute | undefined | null {\n\t\t_warnOverloadRequired('indexAttribute');\n\t\treturn;\n\t}\n\tstatic setIndexAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: BufferAttribute | number[]\n\t): BufferAttribute | undefined {\n\t\tconsole.warn('CoreVertex.setIndexAttribute needs to be overloaded');\n\t\treturn;\n\t}\n\tstatic renameAttribute<T extends CoreObjectType>(object: ObjectContent<T>, oldName: string, newName: string) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tconst attribute = this.attribute(object, oldName);\n\t\tif (!attribute) {\n\t\t\treturn;\n\t\t}\n\t\tattributes[newName] = attribute;\n\t\tdelete attributes[oldName];\n\t}\n\tstatic deleteAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tdelete attributes[attribName];\n\t}\n\tstatic attribSize<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): number {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn -1;\n\t\t}\n\t\tattribName = CoreAttribute.remapName(attribName);\n\t\treturn attributes[attribName].itemSize || 0;\n\t}\n\n\tattribSize(attribName: string): number {\n\t\treturn (this.constructor as typeof CoreVertex<T>).attribSize(this._object, attribName);\n\t}\n\tstatic hasAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string): boolean {\n\t\treturn this.attribute(object, attribName) != null;\n\t}\n\thasAttribute(attribName: string): boolean {\n\t\treturn (this.constructor as typeof CoreVertex<T>).hasAttribute(this._object, attribName);\n\t}\n\tstatic attributeNames<T extends CoreObjectType>(object?: ObjectContent<T>): string[] {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(attributes);\n\t}\n\tstatic attributeNamesMatchingMask<T extends CoreObjectType>(object: ObjectContent<T>, masksString: GroupString) {\n\t\treturn CoreAttribute.attribNamesMatchingMask(masksString, this.attributeNames(object));\n\t}\n\tstatic attribValue<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: number,\n\t\tattribName: string,\n\t\ttarget?: Vector2 | Vector3 | Vector4\n\t): AttribValue {\n\t\tif (attribName === Attribute.VERTEX_INDEX) {\n\t\t\treturn index;\n\t\t} else {\n\t\t\tlet componentName = null;\n\t\t\tlet componentIndex = null;\n\t\t\tif (attribName[attribName.length - 2] === DOT) {\n\t\t\t\tcomponentName = attribName[attribName.length - 1] as ComponentName;\n\t\t\t\tcomponentIndex = COMPONENT_INDICES[componentName];\n\t\t\t\tattribName = attribName.substring(0, attribName.length - 2);\n\t\t\t}\n\t\t\tconst remapedName = CoreAttribute.remapName(attribName);\n\n\t\t\tconst attrib = this.attribute(object, remapedName);\n\t\t\tif (attrib) {\n\t\t\t\tconst {array} = attrib;\n\n\t\t\t\tconst itemSize = attrib.itemSize;\n\t\t\t\tconst startIndex = index * itemSize;\n\n\t\t\t\tif (componentIndex == null) {\n\t\t\t\t\tswitch (itemSize) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn array[startIndex];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\ttarget = target || new Vector2();\n\t\t\t\t\t\t\ttarget.fromArray(array as number[], startIndex);\n\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\ttarget = target || new Vector3();\n\t\t\t\t\t\t\ttarget.fromArray(array as number[], startIndex);\n\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\ttarget = target || new Vector4();\n\t\t\t\t\t\t\ttarget.fromArray(array as number[], startIndex);\n\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow `size not valid (${itemSize})`;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tswitch (itemSize) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn array[startIndex];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn array[startIndex + componentIndex];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// }\n\t\t\t} else {\n\t\t\t\tconst attributesDict = this.attributes() || {};\n\t\t\t\tconst attribNames: string[] = Object.keys(attributesDict);\n\t\t\t\tconst message = `attrib ${attribName} not found. availables are: ${attribNames.join(',')}`;\n\t\t\t\tconsole.warn(message);\n\t\t\t\tthrow message;\n\t\t\t}\n\t\t}\n\t}\n\tattribValue(attribName: string, target?: Vector2 | Vector3 | Vector4): AttribValue {\n\t\treturn (this.constructor as typeof CoreVertex<T>).attribValue(this._object, this._index, attribName, target);\n\t}\n\tattribValueNumber(attribName: string) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn attrib.array[this._index];\n\t}\n\tattribValueVector2(attribName: string, target: Vector2) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array as number[], this._index * 2);\n\t\treturn target;\n\t}\n\tattribValueVector3(attribName: string, target: Vector3) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array as number[], this._index * 3);\n\t\treturn target;\n\t}\n\tattribValueVector4(attribName: string, target: Vector4) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.fromArray(attrib.array as number[], this._index * 4);\n\t\treturn target;\n\t}\n\tstatic attribType<T extends CoreObjectType>(object: ObjectContent<T> | undefined, attribName: string): AttribType {\n\t\tconst attribute = object ? this.attribute(object, attribName) : null;\n\t\tif (attribute && attribute?.isString == true) {\n\t\t\treturn AttribType.STRING;\n\t\t} else {\n\t\t\treturn AttribType.NUMERIC;\n\t\t}\n\t}\n\tattribType(attribName: string): AttribType {\n\t\treturn (this.constructor as typeof CorePrimitive).attribType(this._object, attribName);\n\t}\n\tstatic stringAttribValue<T extends CoreObjectType>(object: ObjectContent<T>, index: number, attribName: string) {\n\t\treturn this.attribValue(object, index, attribName);\n\t}\n\tstringAttribValue(attribName: string) {\n\t\treturn this.attribValue(attribName) as string;\n\t}\n\n\tposition(target: Vector3): Vector3 {\n\t\t_warnOverloadRequired('position');\n\t\treturn target;\n\t}\n\tsetPosition(newPosition: Vector3) {\n\t\tthis.setAttribValueFromVector3(Attribute.POSITION, newPosition);\n\t}\n\n\tnormal(target: Vector3): Vector3 {\n\t\t_warnOverloadRequired('normal');\n\t\treturn target;\n\t}\n\tsetNormal(newNormal: Vector3) {\n\t\treturn this.setAttribValueFromVector3(Attribute.NORMAL, newNormal);\n\t}\n\n\tsetAttribValue(attribName: string, value: NumericAttribValue | string) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\tconsole.warn(`no attribute ${attribName}`);\n\t\t\treturn;\n\t\t}\n\t\tconst array = attrib.array;\n\t\tconst attribSize = attrib.itemSize;\n\n\t\tif (CoreType.isArray(value)) {\n\t\t\tfor (let i = 0; i < attribSize; i++) {\n\t\t\t\tarray[this._index * attribSize + i] = value[i];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (attribSize) {\n\t\t\tcase 1:\n\t\t\t\tarray[this._index] = value as number | string;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tconst v2 = value as Vector2Like;\n\t\t\t\tconst i2 = this._index * 2;\n\t\t\t\tarray[i2 + 0] = v2.x;\n\t\t\t\tarray[i2 + 1] = v2.y;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tconst isColor = (value as ColorLike).r != null;\n\t\t\t\tconst i3 = this._index * 3;\n\t\t\t\tif (isColor) {\n\t\t\t\t\tconst col = value as ColorLike;\n\t\t\t\t\tarray[i3 + 0] = col.r;\n\t\t\t\t\tarray[i3 + 1] = col.g;\n\t\t\t\t\tarray[i3 + 2] = col.b;\n\t\t\t\t} else {\n\t\t\t\t\tconst v3 = value as Vector3Like;\n\t\t\t\t\tarray[i3 + 0] = v3.x;\n\t\t\t\t\tarray[i3 + 1] = v3.y;\n\t\t\t\t\tarray[i3 + 2] = v3.z;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tconst v4 = value as Vector4Like;\n\t\t\t\tconst i4 = this._index * 4;\n\t\t\t\tarray[i4 + 0] = v4.x;\n\t\t\t\tarray[i4 + 1] = v4.y;\n\t\t\t\tarray[i4 + 2] = v4.z;\n\t\t\t\tarray[i4 + 3] = v4.w;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn(`CoreVertex.setAttribValue does not yet allow attrib size ${attribSize}`);\n\t\t\t\tthrow `attrib size ${attribSize} not implemented`;\n\t\t}\n\t}\n\tsetAttribValueFromNumber(attribName: string, value: number) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib) {\n\t\t\treturn;\n\t\t}\n\t\tconst array = attrib.array as number[];\n\t\tarray[this._index] = value;\n\t}\n\tsetAttribValueFromVector2(attribName: string, value: Vector2) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || attrib.isString == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalue.toArray(attrib.array as number[], this._index * 2);\n\t}\n\tsetAttribValueFromVector3(attribName: string, value: Vector3) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || attrib.isString == true) {\n\t\t\treturn;\n\t\t}\n\t\tvalue.toArray(attrib.array as number[], this._index * 3);\n\t}\n\tsetAttribValueFromVector4(attribName: string, value: Vector4) {\n\t\tconst attrib = this.attribute(attribName);\n\t\tif (!attrib || attrib.isString == true) {\n\t\t\treturn;\n\t\t}\n\t\tvalue.toArray(attrib.array as number[], this._index * 4);\n\t}\n\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tstatic override relatedObjectClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn this.relatedPrimitiveClass(object).relatedObjectClass(object);\n\t}\n\n\trelatedEntities(\n\t\tattribClass: AttribClass,\n\t\tcoreGroup: CoreGroup,\n\t\ttarget: CoreEntity[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tswitch (attribClass) {\n\t\t\tcase AttribClass.POINT: {\n\t\t\t\tthis.relatedPoints(target as CorePoint<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.VERTEX: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = this;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.PRIMITIVE: {\n\t\t\t\tthis.relatedPrimitives(target as CoreEntityWithObject<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.OBJECT: {\n\t\t\t\tthis.relatedObjects(target as CoreEntityWithObject<T>[], traversedRelatedEntityData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase AttribClass.CORE_GROUP: {\n\t\t\t\ttarget.length = 1;\n\t\t\t\ttarget[0] = coreGroup;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(attribClass);\n\t}\n}\n","import {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {arrayPushItems} from '../../../ArrayUtils';\nimport {stringToIndices} from '../../../String';\nimport {AttribSize, AttribType, GroupString} from '../../Constant';\nimport {coreVertexClassFactory, coreVertexInstanceFactory} from '../../CoreObjectFactory';\nimport {CoreGroup} from '../../Group';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {CoreVertex} from './CoreVertex';\n\nconst _indices: number[] = [];\nconst _tmpVertices: CoreVertex<CoreObjectType>[] = [];\n\nexport function vertices<T extends CoreObjectType>(coreGroup: CoreGroup, target: CoreVertex<T>[]): CoreVertex<T>[] {\n\tconst allObjects = coreGroup.allObjects();\n\n\ttarget.length = 0;\n\tfor (const object of allObjects) {\n\t\tverticesFromObject(object, _tmpVertices);\n\t\tarrayPushItems(_tmpVertices, target);\n\t}\n\treturn target;\n\t// return coreGroup\n\t// \t.allCoreObjects()\n\t// \t.map((o) => verticesFromObject(o.object()))\n\t// \t.flat();\n}\nexport function vertexAttribNamesFromCoreGroup(coreGroup: CoreGroup): string[] {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn vertexAttributeNames(firstObject);\n\t} else {\n\t\treturn [];\n\t}\n}\nexport function vertexAttribSizesFromCoreGroup(coreGroup: CoreGroup): PolyDictionary<AttribSize> {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn vertexAttributeSizes(firstObject);\n\t} else {\n\t\treturn {};\n\t}\n}\nexport function vertexAttribTypesFromCoreGroup(coreGroup: CoreGroup): PolyDictionary<AttribType> {\n\tconst firstObject = coreGroup.allObjects()[0];\n\tif (firstObject) {\n\t\treturn vertexAttributeTypes(firstObject);\n\t} else {\n\t\treturn {};\n\t}\n}\nexport function verticesCountFromObject<T extends CoreObjectType>(object: ObjectContent<T>): number {\n\tconst vertexClass = coreVertexClassFactory(object);\n\treturn vertexClass.entitiesCount(object);\n}\nexport function verticesFromObject<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\ttarget: CoreVertex<T>[]\n): CoreVertex<T>[] {\n\tconst vertexClass = coreVertexClassFactory(object);\n\tconst verticesCount = vertexClass.entitiesCount(object);\n\ttarget.length = verticesCount;\n\tfor (let i = 0; i < verticesCount; i++) {\n\t\ttarget[i] = coreVertexInstanceFactory(object, i);\n\t}\n\treturn target;\n}\n\nexport function verticesFromObjectFromGroup<T extends CoreObjectType>(\n\tobject: ObjectContent<T>,\n\tgroup: GroupString,\n\ttarget: CoreVertex<T>[]\n): CoreVertex<T>[] {\n\tif (group) {\n\t\ttarget.length = 0;\n\t\tstringToIndices(group, _indices);\n\t\tverticesFromObject(object, _tmpVertices);\n\t\tfor (const index of _indices) {\n\t\t\tconst vertex = _tmpVertices[index] as CoreVertex<T> | undefined;\n\t\t\tif (vertex) {\n\t\t\t\ttarget.push(vertex);\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t} else {\n\t\treturn verticesFromObject(object, target);\n\t}\n}\n\nexport function vertexAttributeNames<T extends CoreObjectType>(object: ObjectContent<T>): string[] {\n\tconst vertexClass = coreVertexClassFactory(object);\n\tconst attributes = vertexClass.attributes(object);\n\tif (!attributes) {\n\t\treturn [];\n\t}\n\treturn Object.keys(attributes);\n}\nexport function vertexAttributeSizes<T extends CoreObjectType>(object: ObjectContent<T>): PolyDictionary<AttribSize> {\n\tconst vertexClass = coreVertexClassFactory(object);\n\tconst attributes = vertexClass.attributes(object);\n\tif (!attributes) {\n\t\treturn {};\n\t}\n\tconst attribNames = Object.keys(attributes);\n\tconst h: PolyDictionary<AttribSize> = {};\n\tfor (const attribName of attribNames) {\n\t\th[attribName] = attributes[attribName].itemSize;\n\t}\n\treturn h;\n}\nexport function vertexAttributeTypes<T extends CoreObjectType>(object: ObjectContent<T>): PolyDictionary<AttribType> {\n\tconst vertexClass = coreVertexClassFactory(object);\n\tconst attributes = vertexClass.attributes(object);\n\tif (!attributes) {\n\t\treturn {};\n\t}\n\tconst attribNames = Object.keys(attributes);\n\tconst h: PolyDictionary<AttribType> = {};\n\tfor (const attribName of attribNames) {\n\t\th[attribName] = attributes[attribName].isString == true ? AttribType.STRING : AttribType.NUMERIC;\n\t}\n\treturn h;\n}\n","import {Color} from 'three';\n\nimport type {\n\tOpenCascadeInstance,\n\tTopoDS_Shape,\n\tTopoDS_Vertex,\n\tTopoDS_Edge,\n\tTopoDS_Wire,\n\tTopoDS_Face,\n\tTopoDS_Shell,\n\tTopoDS_Solid,\n\tTopoDS_CompSolid,\n\tTopoDS_Compound,\n\tGeom2d_Curve,\n\tGeom_Curve,\n\tBRepMesh_IncrementalMesh,\n\tgp_Pln,\n\tgp_Pnt2d,\n\tgp_Pnt,\n\tgp_Quaternion,\n\tgp_Vec2d,\n\tgp_Vec,\n\tBnd_Box,\n\tgp_Trsf,\n\tgp_Ax1,\n\tgp_Ax2,\n\tgp_Dir,\n\tgp_XYZ,\n\tTopAbs_ShapeEnum,\n\tTopExp,\n\tTopTools_IndexedMapOfShape,\n\tTopLoc_Location,\n\tMessage_ProgressRange,\n\tTopTools_ListOfShape,\n\tGProp_GProps,\n} from './build/polygonjs-occt';\n// } from 'opencascade.js';\nexport type {\n\tOpenCascadeInstance,\n\tBRepMesh_IncrementalMesh,\n\tTopoDS_Shape,\n\tTopoDS_Vertex,\n\tTopoDS_Face,\n\tTopoDS_Shell,\n\tTopoDS_Solid,\n\tTopoDS_CompSolid,\n\tTopoDS_Compound,\n\tTopoDS_Edge,\n\tTopoDS_Wire,\n\tGeom2d_Curve,\n\tGeom_Curve,\n\tBnd_Box,\n\tgp_Pln,\n\tgp_Pnt2d,\n\tgp_Pnt,\n\tgp_Quaternion,\n\tgp_Vec2d,\n\tgp_Vec,\n\tgp_Trsf,\n\tgp_Ax1,\n\tgp_Ax2,\n\tgp_Dir,\n\tgp_XYZ,\n\tTopAbs_ShapeEnum,\n\tTopExp,\n\tTopTools_IndexedMapOfShape,\n\tTopLoc_Location,\n\tMessage_ProgressRange,\n\tTopTools_ListOfShape,\n\tGProp_GProps,\n};\n\nexport type CadGeometry =\n\t| gp_Pnt2d\n\t| Geom2d_Curve\n\t// Geom_Curve |\n\t| TopoDS_Vertex\n\t| TopoDS_Edge\n\t| TopoDS_Wire\n\t| TopoDS_Shape;\n\nexport enum CadGeometryType {\n\tPOINT_2D = 'CADPoint2D',\n\tCURVE_2D = 'CADCurve2D',\n\t// CURVE_3D = 'curve3D',\n\tVERTEX = 'CADVertex',\n\tEDGE = 'CADEdge',\n\tWIRE = 'CADWire',\n\tFACE = 'CADFace',\n\tSHELL = 'CADShell',\n\tSOLID = 'CADSolid',\n\tCOMPSOLID = 'CADCompsolid',\n\tCOMPOUND = 'CADCompound',\n}\nconst CAD_GEOMETRY_TYPES: CadGeometryType[] = [\n\tCadGeometryType.POINT_2D,\n\tCadGeometryType.CURVE_2D,\n\tCadGeometryType.VERTEX,\n\tCadGeometryType.EDGE,\n\tCadGeometryType.WIRE,\n\tCadGeometryType.FACE,\n\tCadGeometryType.SHELL,\n\tCadGeometryType.SOLID,\n\tCadGeometryType.COMPSOLID,\n\tCadGeometryType.COMPOUND,\n];\nexport const CAD_GEOMETRY_TYPES_SET: Set<CadGeometryType> = new Set(CAD_GEOMETRY_TYPES);\nexport type CadGeometryTypeShape =\n\t| CadGeometryType.VERTEX\n\t| CadGeometryType.EDGE\n\t| CadGeometryType.WIRE\n\t| CadGeometryType.FACE\n\t| CadGeometryType.SHELL\n\t| CadGeometryType.SOLID\n\t| CadGeometryType.COMPSOLID\n\t| CadGeometryType.COMPOUND;\nexport const CAD_GEOMETRY_TYPES_SHAPE: CadGeometryTypeShape[] = [\n\tCadGeometryType.VERTEX,\n\tCadGeometryType.EDGE,\n\tCadGeometryType.WIRE,\n\tCadGeometryType.FACE,\n\tCadGeometryType.SHELL,\n\tCadGeometryType.SOLID,\n\tCadGeometryType.COMPSOLID,\n\tCadGeometryType.COMPOUND,\n];\nexport const CAD_GEOMETRY_TYPES_SET_SHAPE: Set<CadGeometryType> = new Set(CAD_GEOMETRY_TYPES_SHAPE);\n\nfunction _createShapeTypeToCadGeometryTypeMap(oc: OpenCascadeInstance): Map<TopAbs_ShapeEnum, CadGeometryTypeShape> {\n\tconst shapeEnum = oc.TopAbs_ShapeEnum;\n\tconst map = new Map([\n\t\t[shapeEnum.TopAbs_VERTEX, CadGeometryType.VERTEX],\n\t\t[shapeEnum.TopAbs_EDGE, CadGeometryType.EDGE],\n\t\t[shapeEnum.TopAbs_WIRE, CadGeometryType.WIRE],\n\t\t[shapeEnum.TopAbs_FACE, CadGeometryType.FACE],\n\t\t[shapeEnum.TopAbs_SHELL, CadGeometryType.SHELL],\n\t\t[shapeEnum.TopAbs_SOLID, CadGeometryType.SOLID],\n\t\t[shapeEnum.TopAbs_COMPSOLID, CadGeometryType.COMPSOLID],\n\t\t[shapeEnum.TopAbs_COMPOUND, CadGeometryType.COMPOUND],\n\t]);\n\treturn map as Map<TopAbs_ShapeEnum, CadGeometryTypeShape>;\n}\nexport type CadShape =\n\t| TopoDS_Vertex\n\t| TopoDS_Edge\n\t| TopoDS_Wire\n\t| TopoDS_Face\n\t| TopoDS_Shell\n\t| TopoDS_Solid\n\t| TopoDS_CompSolid\n\t| TopoDS_Compound;\ntype ShapeCaster = (S: TopoDS_Shape) => CadShape;\nfunction _createCastMapFromCadGeometryTypeMap(oc: OpenCascadeInstance): Map<TopAbs_ShapeEnum, ShapeCaster> {\n\tconst shapeEnum = oc.TopAbs_ShapeEnum;\n\tconst map = new Map([\n\t\t[shapeEnum.TopAbs_VERTEX, oc.TopoDS.Vertex_1],\n\t\t[shapeEnum.TopAbs_EDGE, oc.TopoDS.Edge_1],\n\t\t[shapeEnum.TopAbs_WIRE, oc.TopoDS.Wire_1],\n\t\t[shapeEnum.TopAbs_FACE, oc.TopoDS.Face_1],\n\t\t[shapeEnum.TopAbs_SHELL, oc.TopoDS.Shell_1],\n\t\t[shapeEnum.TopAbs_SOLID, oc.TopoDS.Solid_1],\n\t\t[shapeEnum.TopAbs_COMPSOLID, oc.TopoDS.CompSolid_1],\n\t\t[shapeEnum.TopAbs_COMPOUND, oc.TopoDS.Compound_1],\n\t]);\n\treturn map as Map<TopAbs_ShapeEnum, ShapeCaster>;\n}\nlet shapeTypeToCadGeometryTypeMap: Map<TopAbs_ShapeEnum, CadGeometryType> | undefined;\nlet shapeCasterByCadGeometryTypeMap: Map<TopAbs_ShapeEnum, ShapeCaster> | undefined;\nexport function cadGeometryTypeFromShape(oc: OpenCascadeInstance, shape: TopoDS_Shape) {\n\tshapeTypeToCadGeometryTypeMap = shapeTypeToCadGeometryTypeMap || _createShapeTypeToCadGeometryTypeMap(oc);\n\treturn shapeTypeToCadGeometryTypeMap.get(shape.ShapeType());\n}\nexport function cadDowncast(oc: OpenCascadeInstance, shape: TopoDS_Shape) {\n\tshapeCasterByCadGeometryTypeMap = shapeCasterByCadGeometryTypeMap || _createCastMapFromCadGeometryTypeMap(oc);\n\tconst caster = shapeCasterByCadGeometryTypeMap.get(shape.ShapeType())!;\n\treturn caster(shape);\n}\n\nexport interface CadTypeMap {\n\t[CadGeometryType.POINT_2D]: gp_Pnt2d;\n\t[CadGeometryType.CURVE_2D]: Geom2d_Curve;\n\t// [CadObjectType.CURVE_3D]: Geom_Curve;\n\t[CadGeometryType.VERTEX]: TopoDS_Vertex;\n\t[CadGeometryType.EDGE]: TopoDS_Edge;\n\t[CadGeometryType.WIRE]: TopoDS_Wire;\n\t[CadGeometryType.FACE]: TopoDS_Face;\n\t[CadGeometryType.SHELL]: TopoDS_Shell;\n\t[CadGeometryType.SOLID]: TopoDS_Solid;\n\t[CadGeometryType.COMPSOLID]: TopoDS_CompSolid;\n\t[CadGeometryType.COMPOUND]: TopoDS_Compound;\n}\nexport interface CachedCADTesselationParams {\n\tlinearTolerance: number;\n\tangularTolerance: number;\n\tcurveAbscissa: number;\n\tcurveTolerance: number;\n}\nexport interface CachedCADOBJTesselationParams {\n\tCADLinearTolerance: number;\n\tCADAngularTolerance: number;\n\tCADCurveAbscissa: number;\n\tCADCurveTolerance: number;\n}\n\nexport interface CADTesselationParams extends CachedCADTesselationParams {\n\twireframe: boolean;\n\tdisplayMeshes: boolean;\n\tdisplayEdges: boolean;\n\tmeshesColor: Color;\n\tedgesColor: Color;\n}\nexport interface CADOBJTesselationParams extends CachedCADOBJTesselationParams {\n\tCADWireframe: boolean;\n\tCADDisplayMeshes: boolean;\n\tCADDisplayEdges: boolean;\n\tCADMeshesColor: Color;\n\tCADEdgesColor: Color;\n}\n\nexport interface FaceData {\n\tpositions: number[];\n\tnormals: number[];\n\tindices: number[];\n}\nexport interface EdgeData {\n\tpositions: number[];\n}\nexport interface CadObjectData {\n\ttype: CadGeometryType;\n}\nexport interface CadNumberHandle {\n\tcurrent: number;\n}\nexport const _createCadNumberHandle: () => CadNumberHandle = () => ({current: 0});\nexport interface CadVector3Handle {\n\tx: CadNumberHandle;\n\ty: CadNumberHandle;\n\tz: CadNumberHandle;\n}\nexport const _createCadVector3Handle: () => CadVector3Handle = () => ({\n\tx: _createCadNumberHandle(),\n\ty: _createCadNumberHandle(),\n\tz: _createCadNumberHandle(),\n});\n\nexport interface CadBox3Handle {\n\tmin: CadVector3Handle;\n\tmax: CadVector3Handle;\n}\nexport const _createCadBox3Handle: () => CadBox3Handle = () => ({\n\tmin: _createCadVector3Handle(),\n\tmax: _createCadVector3Handle(),\n});\n\ninterface Deletable {\n\tdelete: () => void;\n}\nexport type GCRegisterFunction = <D extends Deletable>(deletable: D) => D;\ntype GCCallback<T> = (r: GCRegisterFunction) => T;\nexport class CadGC {\n\tstatic withGC<T>(callback: GCCallback<T>): T {\n\t\tconst deletables: Set<Deletable> = new Set();\n\t\tfunction r<D extends Deletable>(deletable: D): D {\n\t\t\tdeletables.add(deletable);\n\t\t\treturn deletable;\n\t\t}\n\n\t\tconst result = callback(r);\n\n\t\tdeletables.forEach((deletable) => {\n\t\t\tdeletable.delete();\n\t\t});\n\t\tdeletables.clear();\n\n\t\treturn result;\n\t}\n}\n","import {CadGeometryType, CAD_GEOMETRY_TYPES_SET, CAD_GEOMETRY_TYPES_SET_SHAPE} from './CadCommon';\nimport type {CadGeometryTypeShape, CadTypeMap, CadShape} from './CadCommon';\nimport {CoreType} from '../../../Type';\nimport type {CadObject} from './CadObject';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\n\nexport function isCADObject(o: ObjectContent<CoreObjectType>) {\n\treturn CAD_GEOMETRY_TYPES_SET.has(o.type as CadGeometryType);\n}\nexport class CoreCadType {\n\tstatic isPoint2d(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.POINT_2D> {\n\t\treturn object.type == CadGeometryType.POINT_2D;\n\t}\n\tstatic isGeom2dCurve(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.CURVE_2D> {\n\t\treturn object.type == CadGeometryType.CURVE_2D;\n\t}\n\tstatic isVertex(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.VERTEX> {\n\t\treturn object.type == CadGeometryType.VERTEX;\n\t}\n\tstatic isEdge(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.EDGE> {\n\t\treturn object.type == CadGeometryType.EDGE;\n\t}\n\tstatic isWire(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.WIRE> {\n\t\treturn object.type == CadGeometryType.WIRE;\n\t}\n\tstatic isFace(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.FACE> {\n\t\treturn object.type == CadGeometryType.FACE;\n\t}\n\tstatic isShell(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.SHELL> {\n\t\treturn object.type == CadGeometryType.SHELL;\n\t}\n\tstatic isSolid(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.SOLID> {\n\t\treturn object.type == CadGeometryType.SOLID;\n\t}\n\tstatic isCompsolid(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.COMPSOLID> {\n\t\treturn object.type == CadGeometryType.COMPSOLID;\n\t}\n\tstatic isCompound(object: CadObject<CadGeometryType>): object is CadObject<CadGeometryType.COMPOUND> {\n\t\treturn object.type == CadGeometryType.COMPOUND;\n\t}\n\tstatic isShape(\n\t\tobject: CadObject<CadGeometryType>\n\t): object is\n\t\t| CadObject<CadGeometryType.VERTEX>\n\t\t| CadObject<CadGeometryType.EDGE>\n\t\t| CadObject<CadGeometryType.WIRE>\n\t\t| CadObject<CadGeometryType.FACE>\n\t\t| CadObject<CadGeometryType.SHELL>\n\t\t| CadObject<CadGeometryType.SOLID>\n\t\t| CadObject<CadGeometryType.COMPSOLID>\n\t\t| CadObject<CadGeometryType.COMPOUND> {\n\t\treturn CAD_GEOMETRY_TYPES_SET_SHAPE.has(object.type as CadGeometryTypeShape);\n\t}\n\tstatic isGeometryShape<T extends CadGeometryType>(geometry: CadTypeMap[T] | CadShape): geometry is CadShape {\n\t\treturn CoreType.isFunction((geometry as CadShape).ShapeType);\n\t}\n}\n","import {Color} from 'three';\nimport type {geometries} from '@jscad/modeling';\nexport type CsgGeometry = geometries.path2.Path2 | geometries.geom2.Geom2 | geometries.geom3.Geom3;\n\nexport enum CsgGeometryType {\n\tPATH2 = 'CSGPath2',\n\tGEOM2 = 'CSGGeom2',\n\tGEOM3 = 'CSGGeom3',\n\t// UNKNOWN = 'unknown',\n}\nconst CSG_GEOMETRY_TYPES: CsgGeometryType[] = [CsgGeometryType.PATH2, CsgGeometryType.GEOM2, CsgGeometryType.GEOM3];\nexport const CSG_GEOMETRY_TYPES_SET: Set<CsgGeometryType> = new Set(CSG_GEOMETRY_TYPES);\n\nexport interface CsgTypeMap {\n\t[CsgGeometryType.PATH2]: geometries.path2.Path2;\n\t[CsgGeometryType.GEOM2]: geometries.geom2.Geom2;\n\t[CsgGeometryType.GEOM3]: geometries.geom3.Geom3;\n\t// [CsgGeometryType.UNKNOWN]: undefined;\n}\n\nexport interface CSGTesselationParams {\n\tfacetAngle: number;\n\twireframe: boolean;\n\tmeshesColor: Color;\n\tlinesColor: Color;\n}\nexport interface CSGOBJTesselationParams {\n\tCSGFacetAngle: number;\n\tCSGWireframe: boolean;\n\tCSGMeshesColor: Color;\n\tCSGLinesColor: Color;\n}\n","import {geometries} from '@jscad/modeling';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {CsgGeometryType, CsgGeometry, CsgTypeMap, CSG_GEOMETRY_TYPES_SET} from './CsgCommon';\n\nexport function isCSGObject(o: ObjectContent<CoreObjectType>) {\n\treturn CSG_GEOMETRY_TYPES_SET.has(o.type as CsgGeometryType);\n}\n\nexport function csgIsPath2(geometry: CsgGeometry): geometry is geometries.path2.Path2 {\n\t// DO NOT use this function 'geometries.path2'\n\t// out of this file, as the input isn't type\n\t// and can therefore be misleading\n\treturn geometries.path2.isA(geometry);\n}\nexport function csgIsGeom2(geometry: CsgGeometry): geometry is geometries.geom2.Geom2 {\n\t// DO NOT use this function 'geometries.path2'\n\t// out of this file, as the input isn't type\n\t// and can therefore be misleading\n\treturn geometries.geom2.isA(geometry);\n}\nexport function csgIsGeom3(geometry: CsgGeometry): geometry is geometries.geom3.Geom3 {\n\t// DO NOT use this function 'geometries.path2'\n\t// out of this file, as the input isn't type\n\t// and can therefore be misleading\n\treturn geometries.geom3.isA(geometry);\n}\n\nexport function csgGeometryTypeFromGeometry<T extends CsgGeometryType>(geometry: CsgTypeMap[T]): T {\n\tif (csgIsPath2(geometry)) {\n\t\treturn CsgGeometryType.PATH2 as T;\n\t}\n\tif (csgIsGeom2(geometry)) {\n\t\treturn CsgGeometryType.GEOM2 as T;\n\t}\n\tif (csgIsGeom3(geometry)) {\n\t\treturn CsgGeometryType.GEOM3 as T;\n\t}\n\treturn CsgGeometryType.GEOM3 as T;\n}\n","import {Color} from 'three';\n\nexport enum QUADObjectType {\n\tDEFAULT = 'Quad',\n}\n\nconst QUAD_OBJECT_TYPES: QUADObjectType[] = [QUADObjectType.DEFAULT];\nexport const QUAD_OBJECT_TYPES_SET: Set<QUADObjectType> = new Set(QUAD_OBJECT_TYPES);\n\nexport interface QUADTesselationParams {\n\ttriangles: boolean;\n\tsplitQuads:boolean\n\twireframe: boolean;\n\twireframeColor: Color;\n\tcenter: boolean;\n\tinnerRadius: boolean;\n\touterRadius: boolean;\n\tpointAttributes: string;\n\tprimitiveAttributes: string;\n}\nexport interface QUADOBJTesselationParams {\n\tQUADTriangles: boolean;\n\tQUADSplitQuads:boolean\n\tQUADWireframe: boolean;\n\tQUADWireframeColor: Color;\n\tQUADCenter: boolean;\n\tQUADInnerRadius: boolean;\n\tQUADOuterRadius: boolean;\n\tQUADPointAttributes: string;\n\tQUADPrimitiveAttributes: string;\n}\nexport enum QuadTriangulationAttribute {\n\tINNER_RADIUS = 'innerRadius',\n\tOUTER_RADIUS = 'outerRadius',\n}\n","import {CoreObjectType, ObjectContent} from '../../ObjectContent';\n\nexport function isTetObject(o: ObjectContent<CoreObjectType>) {\n\treturn o.type == CoreObjectType.TET;\n}\n","import {BufferGeometry, Mesh} from 'three';\nimport {markedAsInstance} from '../../GeometryUtils';\nimport {InstanceAttrib} from '../../Instancer';\nimport {Attribute} from '../../Attribute';\nimport {ThreejsPoint} from './ThreejsPoint';\nconst dummyMesh = new Mesh();\n\nexport function positionAttributeNameFromBufferGeometry(geometry: BufferGeometry) {\n\treturn markedAsInstance(geometry) ? InstanceAttrib.POSITION : Attribute.POSITION;\n}\nexport function pointsCountFromBufferGeometry(geometry: BufferGeometry): number {\n\tconst attribName = positionAttributeNameFromBufferGeometry(geometry);\n\tif (!attribName) {\n\t\treturn 0;\n\t}\n\tconst positionAttribute = geometry.getAttribute(attribName);\n\tif (!positionAttribute) {\n\t\treturn 0;\n\t}\n\treturn positionAttribute.count;\n}\nexport function pointsFromBufferGeometry(geometry: BufferGeometry): ThreejsPoint[] {\n\tdummyMesh.geometry = geometry;\n\tconst pointsCount = pointsCountFromBufferGeometry(geometry);\n\tconst points: ThreejsPoint[] = new Array(pointsCount);\n\tfor (let i = 0; i < pointsCount; i++) {\n\t\tpoints[i] = new ThreejsPoint(dummyMesh, i);\n\t}\n\treturn points;\n}\n","import {BufferAttribute, LineSegments, Vector3, Mesh} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {ThreejsPrimitive} from './ThreejsPrimitive';\nimport {Attribute} from '../../Attribute';\n\nconst _p0 = new Vector3();\nconst _p1 = new Vector3();\nexport class ThreejsPrimitiveLineSegment extends ThreejsPrimitive {\n\tconstructor(object: LineSegments, index: number) {\n\t\tsuper(object, index);\n\t\tthis._geometry = object.geometry;\n\t}\n\tstatic primitiveName() {\n\t\treturn 'line';\n\t}\n\n\tstatic override entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as LineSegments).geometry;\n\t\tif (!geometry) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst index = geometry.getIndex();\n\t\tif (!index) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn index.count / 2;\n\t}\n\n\tstatic override position<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\tif (!(object && object.geometry)) {\n\t\t\treturn target;\n\t\t}\n\n\t\tconst positionAttribute = (object as any as Mesh).geometry.getAttribute(Attribute.POSITION) as BufferAttribute;\n\t\tif (!positionAttribute) {\n\t\t\treturn target;\n\t\t}\n\t\tconst positionArray = positionAttribute.array;\n\t\t_p0.fromArray(positionArray, primitiveIndex * 3 + 0);\n\t\t_p1.fromArray(positionArray, primitiveIndex * 3 + 1);\n\t\ttarget.copy(_p0).add(_p1).divideScalar(2);\n\t\treturn target;\n\t}\n\tstatic override normal<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\tif (!(object && object.geometry)) {\n\t\t\treturn target;\n\t\t}\n\t\tconst positionAttribute = (object as any as Mesh).geometry.getAttribute(Attribute.POSITION) as BufferAttribute;\n\t\tif (!positionAttribute) {\n\t\t\treturn target;\n\t\t}\n\t\tconst positionArray = positionAttribute.array;\n\t\t_p0.fromArray(positionArray, primitiveIndex * 3 + 0);\n\t\t_p1.fromArray(positionArray, primitiveIndex * 3 + 1);\n\t\ttarget.copy(_p1).sub(_p1).normalize();\n\t\treturn target;\n\t}\n\tposition(target: Vector3): Vector3 {\n\t\treturn (this.constructor as typeof ThreejsPrimitiveLineSegment).position(this._object, this._index, target);\n\t}\n\tnormal(target: Vector3): Vector3 {\n\t\treturn (this.constructor as typeof ThreejsPrimitiveLineSegment).normal(this._object, this._index, target);\n\t}\n\tstatic override computeVertexNormalsIfAttributeVersionChanged<T extends CoreObjectType>(object: ObjectContent<T>) {}\n\tprotected static override stride() {\n\t\treturn 2;\n\t}\n}\n","import {Vector3, Points, BufferAttribute, Mesh} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {ThreejsPrimitive} from './ThreejsPrimitive';\nimport {Attribute} from '../../Attribute';\n\nconst _p0 = new Vector3();\nexport class ThreejsPrimitivePoint extends ThreejsPrimitive {\n\tconstructor(object: Points, index: number) {\n\t\tsuper(object, index);\n\t\tthis._geometry = object.geometry;\n\t}\n\tstatic primitiveName() {\n\t\treturn 'point';\n\t}\n\tstatic override entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Points).geometry;\n\t\tif (!geometry) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst index = geometry.getIndex();\n\t\tif (!index) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn index.count;\n\t}\n\tstatic override position<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\tif (!(object && object.geometry)) {\n\t\t\treturn target;\n\t\t}\n\n\t\tconst positionAttribute = (object as any as Mesh).geometry.getAttribute(Attribute.POSITION) as BufferAttribute;\n\t\tif (!positionAttribute) {\n\t\t\treturn target;\n\t\t}\n\t\tconst positionArray = positionAttribute.array;\n\t\t_p0.fromArray(positionArray, primitiveIndex * 3 + 0);\n\t\ttarget.copy(_p0);\n\t\treturn target;\n\t}\n\tstatic override normal<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\treturn target.set(0, 1, 0);\n\t}\n\tposition(target: Vector3): Vector3 {\n\t\treturn (this.constructor as typeof ThreejsPrimitivePoint).position(this._object, this._index, target);\n\t}\n\tnormal(target: Vector3): Vector3 {\n\t\treturn (this.constructor as typeof ThreejsPrimitivePoint).normal(this._object, this._index, target);\n\t}\n\tstatic override computeVertexNormalsIfAttributeVersionChanged<T extends CoreObjectType>(object: ObjectContent<T>) {}\n\tprotected static override stride() {\n\t\treturn 1;\n\t}\n}\n","import type {Mesh, LineSegments, Points, Object3D} from 'three';\nimport {\n\tCoreFactoryFunctions,\n\tCorePointClassFactoryCheckFunction,\n\tCorePointInstanceFactoryCheckFunction,\n\tCoreVertexClassFactoryCheckFunction,\n\tCoreVertexInstanceFactoryCheckFunction,\n\tCorePrimitiveClassFactoryCheckFunction,\n\tCorePrimitiveInstanceFactoryCheckFunction,\n\tCoreObjectClassFactoryCheckFunction,\n\tCoreObjectInstanceFactoryCheckFunction,\n} from '../../CoreObjectFactory';\nimport {CoreObjectType, ObjectContent, isObject3D} from '../../ObjectContent';\nimport {ThreejsPoint} from './ThreejsPoint';\nimport {ThreejsVertex} from './ThreejsVertex';\nimport {ThreejsCoreObject} from './ThreejsCoreObject';\nimport {ThreejsPrimitiveTriangle} from './ThreejsPrimitiveTriangle';\nimport {ThreejsPrimitiveLineSegment} from './ThreejsPrimitiveLineSegment';\nimport {ThreejsPrimitivePoint} from './ThreejsPrimitivePoint';\n\n// point methods\nconst pointClassFactory: CorePointClassFactoryCheckFunction = (object: ObjectContent<CoreObjectType>) => {\n\tif (isObject3D(object)) {\n\t\treturn ThreejsPoint;\n\t}\n};\nexport const pointClassFactoryEnsured = () => ThreejsPoint;\nconst pointInstanceFactory: CorePointInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex = 0\n) => {\n\tif (isObject3D(object)) {\n\t\treturn new ThreejsPoint(object, index);\n\t}\n};\nexport const pointInstanceFactoryEnsured = (object: ObjectContent<CoreObjectType>, index = 0) => {\n\treturn new ThreejsPoint(object as Object3D, index);\n};\n// vertex methods\nconst vertexClassFactory: CoreVertexClassFactoryCheckFunction = (object: ObjectContent<CoreObjectType>) => {\n\tif (isObject3D(object)) {\n\t\treturn ThreejsVertex;\n\t}\n};\nexport const vertexClassFactoryEnsured = () => ThreejsVertex;\nconst vertexInstanceFactory: CoreVertexInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex = 0\n) => {\n\tif (isObject3D(object)) {\n\t\treturn new ThreejsVertex(object, index);\n\t}\n};\nexport const vertexInstanceFactoryEnsured = (object: ObjectContent<CoreObjectType>, index = 0) => {\n\treturn new ThreejsVertex(object as Object3D, index);\n};\n// primitive methods\nexport const primitiveClassFactoryNonAbstract = (object: ObjectContent<CoreObjectType>) => {\n\tif (isObject3D(object)) {\n\t\tif ((object as Mesh).isMesh) {\n\t\t\treturn ThreejsPrimitiveTriangle;\n\t\t}\n\t\tif ((object as LineSegments).isLineSegments) {\n\t\t\treturn ThreejsPrimitiveLineSegment;\n\t\t}\n\t\tif ((object as Points).isPoints) {\n\t\t\treturn ThreejsPrimitivePoint;\n\t\t}\n\t\treturn ThreejsPrimitiveTriangle;\n\t}\n};\nexport const primitiveClassFactoryEnsured = () => ThreejsPrimitiveTriangle;\nconst primitiveClassFactory: CorePrimitiveClassFactoryCheckFunction = primitiveClassFactoryNonAbstract;\nexport const primitiveInstanceFactory: CorePrimitiveInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex = 0\n) => {\n\tif (isObject3D(object)) {\n\t\tif ((object as Mesh).isMesh) {\n\t\t\treturn new ThreejsPrimitiveTriangle(object as Mesh, index);\n\t\t}\n\t\tif ((object as LineSegments).isLineSegments) {\n\t\t\treturn new ThreejsPrimitiveLineSegment(object as LineSegments, index);\n\t\t}\n\t\tif ((object as Points).isPoints) {\n\t\t\treturn new ThreejsPrimitivePoint(object as Points, index);\n\t\t}\n\t}\n};\nexport const primitiveInstanceFactoryEnsured = (object: ObjectContent<CoreObjectType>, index = 0) => {\n\treturn new ThreejsPrimitiveTriangle(object as Mesh, index);\n};\nexport const primitiveVerticesCountFactory = (object: ObjectContent<CoreObjectType>): number => {\n\tif (isObject3D(object)) {\n\t\tif ((object as Mesh).isMesh) {\n\t\t\treturn 3;\n\t\t}\n\t\tif ((object as LineSegments).isLineSegments) {\n\t\t\treturn 2;\n\t\t}\n\t\tif ((object as Points).isPoints) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n};\n// object methods\nconst objectClassFactory: CoreObjectClassFactoryCheckFunction = (object: ObjectContent<CoreObjectType>) => {\n\tif (isObject3D(object) || (object as Object3D).isObject3D) {\n\t\treturn ThreejsCoreObject;\n\t}\n};\nexport const objectClassFactoryEnsured = () => ThreejsCoreObject;\nconst objectInstanceFactory: CoreObjectInstanceFactoryCheckFunction = (\n\tobject: ObjectContent<CoreObjectType>,\n\tindex = 0\n) => {\n\tif (isObject3D(object)) {\n\t\treturn new ThreejsCoreObject(object, index);\n\t}\n};\nexport const objectInstanceFactoryEnsured = (object: ObjectContent<CoreObjectType>, index = 0) => {\n\treturn new ThreejsCoreObject(object as Object3D, index);\n};\n\n//\nexport const object3DFactory: CoreFactoryFunctions = {\n\tpointClass: pointClassFactory,\n\tpointInstance: pointInstanceFactory,\n\tvertexClass: vertexClassFactory,\n\tvertexInstance: vertexInstanceFactory,\n\tprimitiveClass: primitiveClassFactory,\n\tprimitiveInstance: primitiveInstanceFactory,\n\tobjectClass: objectClassFactory,\n\tobjectInstance: objectInstanceFactory,\n};\n","import {BufferGeometry} from 'three';\nimport {objectCloneDeep} from '../ObjectUtils';\n\nexport function cloneBufferGeometry(srcGeometry: BufferGeometry): BufferGeometry {\n\tconst clonedGeometry = srcGeometry.clone();\n\tif (srcGeometry.userData) {\n\t\tclonedGeometry.userData = objectCloneDeep(srcGeometry.userData);\n\t}\n\treturn clonedGeometry;\n}\n","import {\n\tBone,\n\tSkinnedMesh,\n\tMaterial,\n\tAnimationClip,\n\tBufferGeometry,\n\tColor,\n\tMesh,\n\tBox3,\n\tSphere,\n\tVector3,\n\tObject3D,\n\tMatrix4,\n} from 'three';\nimport {cloneBufferGeometry} from '../../Geometry';\nimport {Object3DWithGeometry} from '../../Group';\nimport {AttribClass, dataFromObject, ObjectData, ObjectType} from '../../Constant';\nimport {objectData} from '../../entities/object/BaseCoreObjectUtils';\nimport {MaterialWithCustomMaterials, applyCustomMaterials} from '../../Material';\nimport {objectCloneDeep} from '../../../ObjectUtils';\nimport {ThreeMeshBVHHelper} from '../../bvh/ThreeMeshBVHHelper';\nimport {CoreGeometryBuilderMerge} from './builders/Merge';\nimport {CoreObjectType, MergeCompactOptions, ObjectContent, objectContentCopyProperties} from '../../ObjectContent';\nimport {BaseCoreObject} from '../../entities/object/BaseCoreObject';\nimport {TransformTargetType} from '../../../Transform';\nimport {TypeAssert} from '../../../../engine/poly/Assert';\nimport {applyTransformWithSpaceToObject, ObjectTransformMode, ObjectTransformSpace} from '../../../TransformSpace';\nimport {BaseSopOperation} from '../../../../engine/operations/sop/_Base';\nimport {primitiveClassFactoryNonAbstract} from './ThreeModule';\nimport {ThreejsVertex} from './ThreejsVertex';\nimport {ThreejsPoint} from './ThreejsPoint';\nimport {TraversedRelatedEntityData} from '../../entities/utils/TraversedRelatedEntities';\nimport {CoreEntityWithObject} from '../../CoreEntity';\nimport {arrayCopy} from '../../../ArrayUtils';\n\ninterface Object3DWithAnimations extends Object3D {\n\tanimations: AnimationClip[];\n}\ninterface MaterialWithColor extends Material {\n\tcolor: Color;\n}\nconst COMPUTE_PRECISE_BOUNDS = true;\nconst SPHERE_EMPTY = new Sphere(new Vector3(0, 0, 0), 0);\n\nexport class ThreejsCoreObject extends BaseCoreObject<CoreObjectType.THREEJS> {\n\tprotected override _object: Object3D;\n\tconstructor(_object: Object3D, index: number) {\n\t\tsuper(_object, index);\n\t\tthis._object = _object;\n\t}\n\toverride humanType(): string {\n\t\treturn dataFromObject(this._object).humanName;\n\t}\n\toverride object() {\n\t\treturn this._object;\n\t}\n\toverride geometry(): BufferGeometry | null {\n\t\treturn (this._object as Mesh).geometry as BufferGeometry | null;\n\t}\n\t// object():Object3D{\n\t// \treturn this._object\n\t// }\n\t// coreGeometry(): CoreGeometry | null {\n\t// \tconst geo = this.geometry();\n\t// \tif (geo) {\n\t// \t\treturn new CoreGeometry(geo);\n\t// \t} else {\n\t// \t\treturn null;\n\t// \t}\n\t// \t// const geo = this.geometry()\n\t// \t// if (geo) {\n\t// \t// \treturn new CoreGeometry(geo)\n\t// \t// } else {\n\t// \t// \treturn null\n\t// \t// }\n\t// }\n\n\tstatic override objectData(object: Object3D): ObjectData {\n\t\tconst data = objectData(object);\n\t\tdata.verticesCount = ThreejsVertex.entitiesCount(object);\n\t\tdata.pointsCount = ThreejsPoint.entitiesCount(object);\n\t\tconst primitiveClass = primitiveClassFactoryNonAbstract(object);\n\t\tdata.primitivesCount = primitiveClass?.entitiesCount(object) || 0;\n\t\tdata.primitiveName = primitiveClass?.primitiveName() || '';\n\t\treturn data;\n\t}\n\n\tstatic override position(object: Object3D, target: Vector3) {\n\t\ttarget.copy(object.position);\n\t}\n\tstatic override boundingBox(object: Object3D, target: Box3) {\n\t\ttarget.setFromObject(object, COMPUTE_PRECISE_BOUNDS);\n\t}\n\tstatic override geometryBoundingBox(object: Object3D, target: Box3) {\n\t\tconst geometry = (object as Mesh).geometry;\n\t\tif (geometry) {\n\t\t\tif (!geometry.boundingBox) {\n\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t}\n\t\t\tif (geometry.boundingBox) {\n\t\t\t\ttarget.copy(geometry.boundingBox);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.makeEmpty();\n\t\t}\n\t}\n\tstatic override boundingSphere(object: Object3D, target: Sphere) {\n\t\tconst geometry = (object as Mesh).geometry;\n\t\tif (!geometry) {\n\t\t\ttarget.copy(SPHERE_EMPTY);\n\t\t\treturn;\n\t\t}\n\t\tgeometry.computeBoundingSphere();\n\t\tconst computedSphere = geometry.boundingSphere;\n\t\tif (!computedSphere) {\n\t\t\ttarget.copy(SPHERE_EMPTY);\n\t\t\treturn;\n\t\t}\n\t\ttarget.copy(computedSphere);\n\t}\n\tstatic override geometryBoundingSphere(object: Object3D, target: Sphere): void {\n\t\tthis.boundingSphere(object, target);\n\t}\n\n\t// computeVertexNormals() {\n\t// \tthis.coreGeometry()?.computeVertexNormals();\n\t// }\n\tstatic override clone(srcObject: Object3D) {\n\t\tconst clonedObject = srcObject.clone();\n\t\tvar sourceLookup = new Map<Object3D, Object3D>();\n\t\tvar cloneLookup = new Map<Object3D, Object3D>();\n\t\tThreejsCoreObject.parallelTraverse(\n\t\t\tsrcObject,\n\t\t\tclonedObject,\n\t\t\tfunction (sourceNode: Object3D, clonedNode: Object3D) {\n\t\t\t\tsourceLookup.set(clonedNode, sourceNode);\n\t\t\t\tcloneLookup.set(sourceNode, clonedNode);\n\t\t\t}\n\t\t);\n\t\tclonedObject.traverse(function (node) {\n\t\t\tconst srcNode = sourceLookup.get(node) as SkinnedMesh | undefined;\n\t\t\tconst meshNode = node as Mesh;\n\n\t\t\tif (meshNode.geometry && srcNode && srcNode.geometry) {\n\t\t\t\tconst srcNodeGeometry = srcNode.geometry as BufferGeometry;\n\t\t\t\tmeshNode.geometry = cloneBufferGeometry(srcNodeGeometry);\n\t\t\t\tThreeMeshBVHHelper.copyBVH(meshNode, srcNode);\n\t\t\t\t// const mesh_node_geometry = meshNode.geometry as BufferGeometry;\n\t\t\t\t// if (mesh_node_geometry.userData) {\n\t\t\t\t// \tmesh_node_geometry.userData = objectCloneDeep(srcNodeGeometry.userData);\n\t\t\t\t// }\n\t\t\t}\n\t\t\tif (meshNode.material) {\n\t\t\t\t// no need to assign the material here\n\t\t\t\t// as this should already be done in the .clone() method.\n\t\t\t\t// Otherwise, when this is assigned here, some objects that rely on their own mat\n\t\t\t\t// such as sop/Reflector stop working when cloned\n\t\t\t\t// mesh_node.material = src_node.material;\n\t\t\t\tapplyCustomMaterials(node, meshNode.material as MaterialWithCustomMaterials);\n\n\t\t\t\t// prevents crashes for linesegments with shader material such as the line dashed instance\n\t\t\t\t// TODO: test\n\t\t\t\tconst material_with_color = meshNode.material as MaterialWithColor;\n\t\t\t\tif (material_with_color.color == null) {\n\t\t\t\t\tmaterial_with_color.color = new Color(1, 1, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (srcNode) {\n\t\t\t\tif (srcNode.userData) {\n\t\t\t\t\tnode.userData = objectCloneDeep(srcNode.userData);\n\t\t\t\t}\n\t\t\t\tconst src_node_with_animations = (<unknown>srcNode) as Object3DWithAnimations;\n\t\t\t\tif (src_node_with_animations.animations) {\n\t\t\t\t\t(node as Object3DWithAnimations).animations = src_node_with_animations.animations.map((animation) =>\n\t\t\t\t\t\tanimation.clone()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst skinned_node = node as SkinnedMesh;\n\t\t\t\tif (skinned_node.isSkinnedMesh) {\n\t\t\t\t\tvar clonedMesh = skinned_node;\n\t\t\t\t\tvar sourceMesh = srcNode;\n\t\t\t\t\tvar sourceBones = sourceMesh.skeleton.bones;\n\n\t\t\t\t\tclonedMesh.skeleton = sourceMesh.skeleton.clone();\n\t\t\t\t\tclonedMesh.bindMatrix.copy(sourceMesh.bindMatrix);\n\n\t\t\t\t\tconst new_bones = sourceBones.map(function (bone) {\n\t\t\t\t\t\treturn cloneLookup.get(bone);\n\t\t\t\t\t}) as Bone[];\n\n\t\t\t\t\tclonedMesh.skeleton.bones = new_bones;\n\n\t\t\t\t\tclonedMesh.bind(clonedMesh.skeleton, clonedMesh.bindMatrix);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn clonedObject;\n\t}\n\tstatic parallelTraverse(a: Object3D, b: Object3D, callback: (a: Object3D, b: Object3D) => void) {\n\t\tcallback(a, b);\n\t\tfor (var i = 0; i < a.children.length; i++) {\n\t\t\tconst childA = a.children[i];\n\t\t\tconst childB = b.children[i];\n\t\t\tif (childA && childB) {\n\t\t\t\tthis.parallelTraverse(childA, childB, callback);\n\t\t\t}\n\t\t}\n\t}\n\tstatic override applyMatrix(\n\t\tobject: Object3D,\n\t\tmatrix: Matrix4,\n\t\ttransformTargetType: TransformTargetType,\n\t\ttransformSpace: ObjectTransformSpace,\n\t\ttransformMode: ObjectTransformMode\n\t) {\n\t\tswitch (transformTargetType) {\n\t\t\tcase TransformTargetType.OBJECT: {\n\t\t\t\tapplyTransformWithSpaceToObject(object, matrix, transformSpace, transformMode);\n\t\t\t\t// this._applyMatrixToObject(object, matrix);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase TransformTargetType.GEOMETRY: {\n\t\t\t\tconst geometry = (object as Object3DWithGeometry).geometry;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tgeometry.applyMatrix4(matrix);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(transformTargetType);\n\t}\n\tstatic override mergeCompact(options: MergeCompactOptions) {\n\t\tconst {objects, material, objectType, mergedObjects, onError} = options;\n\t\tconst firstObject = objects[0];\n\t\tif (!firstObject) {\n\t\t\treturn;\n\t\t}\n\t\tconst geometries: BufferGeometry[] = [];\n\t\tfor (const object of objects) {\n\t\t\tconst geometry = (object as Mesh).geometry;\n\t\t\tif (geometry) {\n\t\t\t\tgeometry.applyMatrix4((object as Mesh).matrix);\n\t\t\t\tgeometries.push(geometry);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst mergedGeometry = CoreGeometryBuilderMerge.merge(geometries);\n\t\t\tif (mergedGeometry) {\n\t\t\t\tconst newObject = BaseSopOperation.createObject(mergedGeometry, objectType as ObjectType, material);\n\t\t\t\tif (newObject) {\n\t\t\t\t\tobjectContentCopyProperties(firstObject, newObject);\n\t\t\t\t\tmergedObjects.push(newObject as Object3DWithGeometry);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tonError('merge failed, check that input geometries have the same attributes');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tonError((e as Error).message || 'unknown error');\n\t\t}\n\t}\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tstatic override relatedPrimitiveIds(\n\t\tobject: ObjectContent<CoreObjectType>,\n\t\tindex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tconst _primitiveClassFactory = primitiveClassFactoryNonAbstract(object as any as Object3D);\n\t\tif (!_primitiveClassFactory) {\n\t\t\ttarget.length = 0;\n\t\t\treturn;\n\t\t}\n\t\tconst count = _primitiveClassFactory?.entitiesCount(object as any as Object3D);\n\t\ttarget.length = count;\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\ttarget[i] = i;\n\t\t}\n\t\tif (traversedRelatedEntityData && traversedRelatedEntityData[AttribClass.PRIMITIVE].ids != target) {\n\t\t\tarrayCopy(target, traversedRelatedEntityData[AttribClass.PRIMITIVE].ids);\n\t\t}\n\t}\n\n\tstatic override relatedPrimitiveClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn primitiveClassFactoryNonAbstract(object as any as Mesh) as any as typeof CoreEntityWithObject<T>;\n\t}\n}\n","import {\n\tBufferGeometry,\n\tObject3D,\n\tMesh,\n\tVector3,\n\tBufferAttribute,\n\tFloat32BufferAttribute,\n\tInt32BufferAttribute,\n\tInstancedBufferAttribute,\n} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {CorePoint} from '../../entities/point/CorePoint';\nimport {PointAttributesDict} from '../../entities/point/Common';\nimport {Attribute} from '../../Attribute';\nimport {objectCloneDeep} from '../../../ObjectUtils';\nimport {NumericAttribValue} from '../../../../types/GlobalTypes';\nimport {markedAsInstance} from '../../GeometryUtils';\nimport {pointsCountFromBufferGeometry, positionAttributeNameFromBufferGeometry} from './CoreThreejsPointUtils';\nimport {attributeNumericValues, AttributeNumericValuesOptions} from '../../entities/utils/Common';\nimport {ThreejsVertex} from './ThreejsVertex';\nimport {pointsCountFromObject} from '../../entities/point/CorePointUtils';\nimport {TraversedRelatedEntityData} from '../../entities/utils/TraversedRelatedEntities';\nimport {CoreEntityWithObject} from '../../CoreEntity';\n\nconst INDEX_ATTRIB_VALUES = 'indexedAttribValues';\nconst target: AttributeNumericValuesOptions = {\n\tattributeAdded: false,\n\tvalues: [],\n};\n\nexport class ThreejsPoint extends CorePoint<CoreObjectType.THREEJS> {\n\tprotected _geometry?: BufferGeometry;\n\n\tconstructor(object: Object3D, index: number) {\n\t\tsuper(object, index);\n\t\tthis._updateGeometry();\n\t}\n\n\toverride setIndex(index: number, object?: Object3D) {\n\t\tthis._index = index;\n\t\tif (object) {\n\t\t\tthis._object = object;\n\t\t\tthis._updateGeometry();\n\t\t}\n\t\treturn this;\n\t}\n\tprivate _updateGeometry() {\n\t\tconst geometry = (this._object as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (geometry) {\n\t\t\tthis._geometry = geometry;\n\t\t}\n\t}\n\tgeometry() {\n\t\treturn this._geometry;\n\t}\n\tstatic override addAttribute(object: Object3D, attribName: string, attribute: BufferAttribute) {\n\t\tconst geometry = (object as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tgeometry.setAttribute(attribName, attribute);\n\t}\n\tstatic override attributes<T extends CoreObjectType>(object: ObjectContent<T>): PointAttributesDict | undefined {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\treturn geometry.attributes;\n\t}\n\tstatic override entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn pointsCountFromBufferGeometry(geometry);\n\t}\n\tstatic positionAttributeName<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn null;\n\t\t}\n\t\treturn positionAttributeNameFromBufferGeometry(geometry);\n\t}\n\tstatic position<T extends CoreObjectType>(object: ObjectContent<T>, index: number, target: Vector3) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn null;\n\t\t}\n\t\tconst {array} = geometry.getAttribute(Attribute.POSITION) as BufferAttribute;\n\t\treturn target.fromArray(array, index * 3);\n\t}\n\toverride position(target: Vector3): Vector3 {\n\t\tif (!this._geometry) {\n\t\t\treturn target;\n\t\t}\n\t\tconst {array} = this._geometry.getAttribute(Attribute.POSITION) as BufferAttribute;\n\t\treturn target.fromArray(array, this._index * 3);\n\t}\n\toverride normal(target: Vector3): Vector3 {\n\t\tif (!this._geometry) {\n\t\t\treturn target;\n\t\t}\n\t\tconst {array} = this._geometry.getAttribute(Attribute.NORMAL) as BufferAttribute;\n\t\treturn target.fromArray(array, this._index * 3);\n\t}\n\tstatic override computeNormals<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn null;\n\t\t}\n\t\tgeometry.computeVertexNormals();\n\t}\n\n\tstatic override markAttribAsNeedsUpdate<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn null;\n\t\t}\n\t\tconst attribute = geometry.getAttribute(attribName);\n\t\tif (!attribute) {\n\t\t\treturn;\n\t\t}\n\t\tattribute.needsUpdate = true;\n\t}\n\n\t//\n\t//\n\t//\n\t//\n\t//\n\tstatic override userDataAttribs<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn {};\n\t\t}\n\t\treturn (geometry.userData[INDEX_ATTRIB_VALUES] = geometry.userData[INDEX_ATTRIB_VALUES] || {});\n\t}\n\tstatic override setIndexedAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tvalues: string[],\n\t\tindices: number[]\n\t) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setIndexedAttributeValues(object, attribName, values);\n\t\tgeometry.setAttribute(attribName, new Int32BufferAttribute(indices, 1));\n\t\tgeometry.getAttribute(attribName).needsUpdate = true;\n\t}\n\tstatic override attribValueIndex<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: number,\n\t\tattribName: string\n\t): number {\n\t\tif (this.isAttribIndexed(object, attribName)) {\n\t\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\t\tif (geometry) {\n\t\t\t\treturn (geometry.getAttribute(attribName) as BufferAttribute).array[index];\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t//\n\t//\n\t//\n\t//\n\t//\n\tstatic override renameAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\toldName: string,\n\t\tnewName: string\n\t) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.isAttribIndexed(object, oldName)) {\n\t\t\tthis.userDataAttribs(object)[newName] = objectCloneDeep(this.userDataAttribs(object)[oldName]);\n\t\t\tdelete this.userDataAttribs(object)[oldName];\n\t\t}\n\n\t\tconst oldAttrib = geometry.getAttribute(oldName) as BufferAttribute;\n\t\tgeometry.setAttribute(newName, new Float32BufferAttribute(oldAttrib.array, oldAttrib.itemSize));\n\t\treturn geometry.deleteAttribute(oldName);\n\t}\n\n\tstatic override deleteAttribute<T extends CoreObjectType>(object: ObjectContent<T>, attribName: string) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.isAttribIndexed(object, attribName)) {\n\t\t\tdelete this.userDataAttribs(object)[attribName];\n\t\t}\n\n\t\treturn geometry.deleteAttribute(attribName);\n\t}\n\n\tstatic override addNumericAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tattribName: string,\n\t\tsize: number = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tattributeNumericValues(object, pointsCountFromObject, size, defaultValue, target);\n\n\t\tif (target.attributeAdded) {\n\t\t\tif (markedAsInstance(geometry)) {\n\t\t\t\tconst valuesAsTypedArray = new Float32Array(target.values);\n\t\t\t\tgeometry.setAttribute(attribName.trim(), new InstancedBufferAttribute(valuesAsTypedArray, size));\n\t\t\t} else {\n\t\t\t\tgeometry.setAttribute(attribName.trim(), new Float32BufferAttribute(target.values, size));\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(defaultValue);\n\t\t\tthrow `CoreThreejsPoint.addNumericAttrib error: no other default value allowed for now (default given: ${defaultValue})`;\n\t\t}\n\t}\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tstatic override relatedVertexIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tpointIndex: number,\n\t\ttarget: number[],\n\t\ttraversedRelatedEntityData?: TraversedRelatedEntityData\n\t): void {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = geometry.getIndex();\n\t\tif (!index) {\n\t\t\treturn;\n\t\t}\n\t\tconst indexArray = index.array;\n\t\tlet i = 0;\n\t\tfor (const indexValue of indexArray) {\n\t\t\tif (indexValue == pointIndex) {\n\t\t\t\ttarget.push(i);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\tstatic override relatedVertexClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn ThreejsVertex as any as typeof CoreEntityWithObject<T>;\n\t}\n}\n","import {BufferGeometry, Object3D, Mesh} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {PrimitiveAttributesDict, UserDataWithPrimitiveAttributes} from '../../entities/primitive/Common';\nimport {CorePrimitive} from '../../entities/primitive/CorePrimitive';\nimport {BasePrimitiveAttribute, PrimitiveNumberAttribute} from '../../entities/primitive/PrimitiveAttribute';\nimport {primitivesCountFromObject} from '../../entities/primitive/CorePrimitiveUtils';\nimport {ThreejsVertex} from './ThreejsVertex';\nimport {NumericAttribValue} from '../../../../types/GlobalTypes';\nimport {AttributeNumericValuesOptions, attributeNumericValues} from '../../entities/utils/Common';\nimport {CoreEntityWithObject} from '../../CoreEntity';\nimport {ThreejsCoreObject} from './ThreejsCoreObject';\n\nexport interface BufferGeometryWithPrimitiveAttributes extends BufferGeometry {\n\tuserData: UserDataWithPrimitiveAttributes;\n}\nconst target: AttributeNumericValuesOptions = {\n\tattributeAdded: false,\n\tvalues: [],\n};\nexport abstract class ThreejsPrimitive extends CorePrimitive<CoreObjectType.THREEJS> {\n\tprotected _geometry?: BufferGeometry;\n\tconstructor(object: Object3D, index: number) {\n\t\tsuper(object, index);\n\t\tthis._updateGeometry();\n\t}\n\toverride setIndex(index: number, object?: Object3D) {\n\t\tthis._index = index;\n\t\tif (object) {\n\t\t\tthis._object = object;\n\t\t\tthis._updateGeometry();\n\t\t}\n\t\treturn this;\n\t}\n\tprivate _updateGeometry() {\n\t\tconst geometry = (this._object as Mesh).geometry as BufferGeometryWithPrimitiveAttributes | undefined;\n\t\tif (geometry) {\n\t\t\tthis._geometry = geometry;\n\t\t}\n\t}\n\tgeometry() {\n\t\treturn this._geometry;\n\t}\n\tstatic override addAttribute(object: Object3D, attribName: string, attribute: BasePrimitiveAttribute) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tattributes[attribName] = attribute;\n\t}\n\tstatic override addNumericAttribute(\n\t\tobject: Object3D,\n\t\tattribName: string,\n\t\tsize: number = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\tconst primitivesCount = this.entitiesCount(object);\n\t\ttarget.values = new Array(primitivesCount * size);\n\t\tattributeNumericValues(object, primitivesCountFromObject, size, defaultValue, target);\n\n\t\tconst attribute: PrimitiveNumberAttribute = {\n\t\t\tisString: false,\n\t\t\tarray: target.values,\n\t\t\titemSize: size,\n\t\t};\n\t\tthis.addAttribute(object, attribName, attribute);\n\t}\n\tstatic override attributes<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>\n\t): PrimitiveAttributesDict | undefined {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometryWithPrimitiveAttributes | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tif (!geometry.userData.primAttributes) {\n\t\t\tgeometry.userData.primAttributes = {};\n\t\t}\n\t\treturn geometry.userData.primAttributes;\n\t}\n\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tprotected static stride() {\n\t\treturn 3;\n\t}\n\tstatic override relatedVertexIds(\n\t\tobject: ObjectContent<CoreObjectType>,\n\t\tprimitiveIndex: number,\n\t\ttarget: number[]\n\t): void {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\ttarget.length = 0;\n\t\t\treturn;\n\t\t}\n\t\tconst stride = this.stride();\n\t\ttarget.length = stride;\n\t\tfor (let i = 0; i < stride; i++) {\n\t\t\ttarget[i] = primitiveIndex * stride + i;\n\t\t}\n\t}\n\n\tstatic override relatedVertexClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn ThreejsVertex as any as typeof CoreEntityWithObject<T>;\n\t}\n\tstatic override relatedObjectClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn ThreejsCoreObject as any as typeof CoreEntityWithObject<T>;\n\t}\n}\n","import {Triangle, Vector3, Mesh, BufferAttribute, BufferGeometry} from 'three';\nimport {CoreObjectType, ObjectBuilder, ObjectContent} from '../../ObjectContent';\nimport {ThreejsPrimitive} from './ThreejsPrimitive';\nimport {threeMeshFromPrimitives} from './builders/Mesh';\nimport {Attribute} from '../../Attribute';\n\nconst _triangle = new Triangle();\nconst _p0 = new Vector3();\nconst _p1 = new Vector3();\nconst _p2 = new Vector3();\nconst normalsComputedWithPositionAttributeVersion: Map<string, number> = new Map();\nexport class ThreejsPrimitiveTriangle extends ThreejsPrimitive {\n\tconstructor(object: Mesh, index: number) {\n\t\tsuper(object, index);\n\t\tthis._geometry = object.geometry;\n\t}\n\tstatic primitiveName() {\n\t\treturn 'triangle';\n\t}\n\n\tstatic override entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Mesh).geometry;\n\t\tif (!geometry) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst index = geometry.getIndex();\n\t\tif (!index) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn index.count / 3;\n\t}\n\tstatic override position<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\tif (!(object && object.geometry)) {\n\t\t\treturn target;\n\t\t}\n\n\t\tconst positionAttribute = (object as any as Mesh).geometry.getAttribute(Attribute.POSITION) as BufferAttribute;\n\t\tif (!positionAttribute) {\n\t\t\treturn target;\n\t\t}\n\t\tconst positionArray = positionAttribute.array;\n\t\t_p0.fromArray(positionArray, primitiveIndex * 3 + 0);\n\t\t_p1.fromArray(positionArray, primitiveIndex * 3 + 1);\n\t\t_p2.fromArray(positionArray, primitiveIndex * 3 + 2);\n\t\ttarget.copy(_p0).add(_p1).add(_p2).divideScalar(3);\n\t\treturn target;\n\t}\n\tstatic override normal<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T> | undefined,\n\t\tprimitiveIndex: number,\n\t\ttarget: Vector3\n\t): Vector3 {\n\t\tif (!(object && object.geometry)) {\n\t\t\treturn target;\n\t\t}\n\t\tconst positionAttribute = (object as any as Mesh).geometry.getAttribute(Attribute.POSITION) as BufferAttribute;\n\t\tif (!positionAttribute) {\n\t\t\treturn target;\n\t\t}\n\t\tconst positionArray = positionAttribute.array;\n\t\t_triangle.a.fromArray(positionArray, primitiveIndex * 3 + 0);\n\t\t_triangle.b.fromArray(positionArray, primitiveIndex * 3 + 1);\n\t\t_triangle.c.fromArray(positionArray, primitiveIndex * 3 + 2);\n\t\t_triangle.getNormal(target);\n\t\treturn target;\n\t}\n\tposition(target: Vector3): Vector3 {\n\t\treturn (this.constructor as typeof ThreejsPrimitiveTriangle).position(this._object, this._index, target);\n\t}\n\tnormal(target: Vector3): Vector3 {\n\t\treturn (this.constructor as typeof ThreejsPrimitiveTriangle).normal(this._object, this._index, target);\n\t}\n\tstatic override computeVertexNormalsIfAttributeVersionChanged<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn null;\n\t\t}\n\t\tconst positionAttribute = geometry.getAttribute(Attribute.POSITION);\n\t\tif (!positionAttribute) {\n\t\t\treturn;\n\t\t}\n\t\tif (!(positionAttribute instanceof BufferAttribute)) {\n\t\t\treturn;\n\t\t}\n\t\tlet lastVersion = normalsComputedWithPositionAttributeVersion.get(geometry.uuid);\n\t\tif (lastVersion == null || lastVersion != positionAttribute.version) {\n\t\t\tgeometry.computeVertexNormals();\n\t\t\tnormalsComputedWithPositionAttributeVersion.set(geometry.uuid, positionAttribute.version);\n\t\t}\n\t}\n\toverride builder<T extends CoreObjectType>() {\n\t\treturn threeMeshFromPrimitives as any as ObjectBuilder<T>;\n\t}\n\tprotected static override stride() {\n\t\treturn 3;\n\t}\n}\n","import {BufferGeometry, Object3D, Mesh, Vector3, BufferAttribute} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../ObjectContent';\nimport {CoreVertex} from '../../entities/vertex/CoreVertex';\nimport {VertexAttributesDict, UserDataWithVertexAttributes} from '../../entities/vertex/Common';\nimport {BaseVertexAttribute, VertexNumberAttribute} from '../../entities/vertex/VertexAttribute';\nimport {verticesCountFromObject} from '../../entities/vertex/CoreVertexUtils';\nimport {primitiveClassFactoryNonAbstract, primitiveVerticesCountFactory} from './ThreeModule';\nimport {ThreejsPoint} from './ThreejsPoint';\nimport {NumericAttribValue} from '../../../../types/GlobalTypes';\nimport {AttributeNumericValuesOptions, attributeNumericValues} from '../../entities/utils/Common';\nimport {CoreEntityWithObject} from '../../CoreEntity';\n\nexport interface BufferGeometryWithVertexAttributes extends BufferGeometry {\n\tuserData: UserDataWithVertexAttributes;\n}\nconst target: AttributeNumericValuesOptions = {\n\tattributeAdded: false,\n\tvalues: [],\n};\n\nexport class ThreejsVertex extends CoreVertex<CoreObjectType.THREEJS> {\n\tprotected _geometry?: BufferGeometry;\n\n\tconstructor(object: Object3D, index: number) {\n\t\tsuper(object, index);\n\t\tthis._updateGeometry();\n\t}\n\toverride setIndex(index: number, object?: Object3D) {\n\t\tthis._index = index;\n\t\tif (object) {\n\t\t\tthis._object = object;\n\t\t\tthis._updateGeometry();\n\t\t}\n\t\treturn this;\n\t}\n\tprivate _updateGeometry() {\n\t\tconst geometry = (this._object as Mesh).geometry as BufferGeometryWithVertexAttributes | undefined;\n\t\tif (geometry) {\n\t\t\tthis._geometry = geometry;\n\t\t}\n\t}\n\tgeometry() {\n\t\treturn this._geometry;\n\t}\n\tstatic override addAttribute(object: Object3D, attribName: string, attribute: BaseVertexAttribute) {\n\t\tconst attributes = this.attributes(object);\n\t\tif (!attributes) {\n\t\t\treturn;\n\t\t}\n\t\tattributes[attribName] = attribute;\n\t}\n\tstatic override addNumericAttribute(\n\t\tobject: Object3D,\n\t\tattribName: string,\n\t\tsize: number = 1,\n\t\tdefaultValue: NumericAttribValue = 0\n\t) {\n\t\tconst verticesCount = this.entitiesCount(object);\n\t\ttarget.values = new Array(verticesCount * size);\n\t\tattributeNumericValues(object, verticesCountFromObject, size, defaultValue, target);\n\n\t\tconst attribute: VertexNumberAttribute = {\n\t\t\tisString: false,\n\t\t\tarray: target.values,\n\t\t\titemSize: size,\n\t\t};\n\t\tthis.addAttribute(object, attribName, attribute);\n\t}\n\tstatic override attributes<T extends CoreObjectType>(object: ObjectContent<T>): VertexAttributesDict | undefined {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometryWithVertexAttributes | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tif (!geometry.userData.vertexAttributes) {\n\t\t\tgeometry.userData.vertexAttributes = {};\n\t\t}\n\t\treturn geometry.userData.vertexAttributes;\n\t}\n\tstatic override indexAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>\n\t): BufferAttribute | undefined | null {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\treturn geometry.getIndex();\n\t}\n\tstatic override setIndexAttribute<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tindex: BufferAttribute | number[]\n\t): BufferAttribute | undefined {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tgeometry.setIndex(index);\n\t}\n\tstatic override entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst index = geometry.getIndex();\n\t\tif (!index) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn index.count;\n\t}\n\toverride position(target: Vector3): Vector3 {\n\t\tconsole.warn('CoreThreejsVertex.position not implemented');\n\t\treturn target;\n\t}\n\toverride normal(target: Vector3): Vector3 {\n\t\tconsole.warn('CoreThreejsVertex.normal not implemented');\n\t\treturn target;\n\t}\n\t//\n\t//\n\t// RELATED ENTITIES\n\t//\n\t//\n\tstatic override relatedPrimitiveIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tpointIndex: number,\n\t\ttarget: number[]\n\t): void {\n\t\ttarget.length = 1;\n\t\tconst index = Math.floor(pointIndex / primitiveVerticesCountFactory(object as any as Mesh));\n\t\ttarget[0] = index;\n\t}\n\t// static override  relatedPrimitives<T extends CoreObjectType>(object:BaseCoreObject<T>,vertexIndex:number,target: CorePrimitive<T>[]): void {\n\t// \tthis.relatedPrimitiveIds(object,vertexIndex,_ids)\n\t// \ttarget.length = _ids.length;\n\t// \tlet i=0\n\t// \tfor(const id of _ids){\n\t// \t\ttarget[i]=(primitiveInstanceFactory(object as any as Mesh,id)) as CorePrimitive<T>\n\t// \t\ti++\n\t// \t}\n\t// }\n\n\t// override relatedPrimitives<T extends CoreObjectType>(target: CorePrimitive<T>[]): void {\n\t// \ttarget.length = 0;\n\t// \tif (!this._object) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst index = Math.floor(this._index / primitiveVerticesCountFactory(this._object));\n\t// \tconst primitive = primitiveInstanceFactory(this._object, index) as CorePrimitive<T> | undefined;\n\t// \tif (!primitive) {\n\t// \t\treturn;\n\t// \t}\n\t// \ttarget.push(primitive);\n\t// }\n\n\tstatic override relatedPointIds<T extends CoreObjectType>(\n\t\tobject: ObjectContent<T>,\n\t\tpointIndex: number,\n\t\ttarget: number[]\n\t): void {\n\t\ttarget.length = 0;\n\n\t\tconst geometry = (object as any as Mesh).geometry as BufferGeometry | undefined;\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = geometry.getIndex();\n\t\tif (!index) {\n\t\t\treturn;\n\t\t}\n\t\tconst indexArray = index.array;\n\t\tconst indexValue = indexArray[pointIndex];\n\t\ttarget[0] = indexValue;\n\t}\n\n\tstatic override relatedPointClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn ThreejsPoint as any as typeof CoreEntityWithObject<T>;\n\t}\n\tstatic override relatedPrimitiveClass<T extends CoreObjectType>(object: ObjectContent<T>) {\n\t\treturn primitiveClassFactoryNonAbstract(object as any as Mesh) as any as typeof CoreEntityWithObject<T>;\n\t}\n}\n","import {BufferGeometry, Mesh} from 'three';\nimport {mergeGeometries} from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport {CoreGeometryIndexBuilder} from '../../../util/IndexBuilder';\nimport {PolyDictionary} from '../../../../../types/GlobalTypes';\nimport {pointsFromBufferGeometry} from '../CoreThreejsPointUtils';\nimport {ThreejsPoint} from '../ThreejsPoint';\n\nconst dummyMesh = new Mesh();\nexport class CoreGeometryBuilderMerge {\n\tstatic merge(geometries: BufferGeometry[]) {\n\t\tif (geometries.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\n\t\t// 1/4. add indices if none\n\t\t//\n\t\tfor (const geometry of geometries) {\n\t\t\tCoreGeometryIndexBuilder.createIndexIfNone(geometry);\n\t\t}\n\n\t\t//\n\t\t// 2/4. set the new attrib indices for the indexed attributes\n\t\t//\n\t\t// const core_geometries = geometries.map((geometry) => new CoreGeometry(geometry));\n\t\tdummyMesh.geometry = geometries[0];\n\t\tconst indexed_attribute_names = ThreejsPoint.indexedAttributeNames(dummyMesh);\n\n\t\tconst new_values_by_attribute_name: PolyDictionary<string[]> = {};\n\t\tfor (const indexed_attribute_name of indexed_attribute_names) {\n\t\t\tconst index_by_values: PolyDictionary<number> = {};\n\t\t\tconst all_geometries_points = [];\n\t\t\tfor (const geometry of geometries) {\n\t\t\t\tconst points = pointsFromBufferGeometry(geometry);\n\t\t\t\tfor (const point of points) {\n\t\t\t\t\tall_geometries_points.push(point);\n\t\t\t\t\tconst value: string | null = point.indexedAttribValue(indexed_attribute_name);\n\t\t\t\t\t//value_index = point.attribValueIndex(indexed_attribute_name)\n\t\t\t\t\t// TODO: typescript: that doesn't seem right\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tindex_by_values[value] != null\n\t\t\t\t\t\t\t? index_by_values[value]\n\t\t\t\t\t\t\t: (index_by_values[value] = Object.keys(index_by_values).length);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst values = Object.keys(index_by_values);\n\t\t\tfor (const point of all_geometries_points) {\n\t\t\t\tconst value = point.indexedAttribValue(indexed_attribute_name);\n\t\t\t\tif (value) {\n\t\t\t\t\tconst new_index = index_by_values[value];\n\t\t\t\t\tpoint.setAttribIndex(indexed_attribute_name, new_index);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnew_values_by_attribute_name[indexed_attribute_name] = values;\n\t\t}\n\n\t\t//\n\t\t// 3/4. merge the geos\n\t\t//\n\t\tconst mergedGeometry = mergeGeometries(geometries);\n\n\t\t//\n\t\t// 4/4. add the index attrib values\n\t\t//\n\n\t\t// const merged_core_geometry = new CoreGeometry(mergedGeometry);\n\t\tdummyMesh.geometry = mergedGeometry;\n\t\tObject.keys(new_values_by_attribute_name).forEach((indexed_attribute_name) => {\n\t\t\tconst values = new_values_by_attribute_name[indexed_attribute_name];\n\t\t\tThreejsPoint.setIndexedAttributeValues(dummyMesh, indexed_attribute_name, values);\n\t\t});\n\n\t\tif (mergedGeometry) {\n\t\t\tdelete mergedGeometry.userData.mergedUserData;\n\t\t}\n\n\t\treturn mergedGeometry;\n\t}\n}\n","import {BufferGeometry, Mesh, Vector3} from 'three';\nimport {CoreGeometryBuilderBase} from './_Base';\nimport {BaseCorePoint} from '../../../entities/point/CorePoint';\nimport {PolyDictionary} from '../../../../../types/GlobalTypes';\nimport {CoreObjectType, ObjectBuilder, ObjectContent} from '../../../ObjectContent';\nimport {CoreEntity} from '../../../CoreEntity';\nimport type {ThreejsPrimitiveTriangle} from '../ThreejsPrimitiveTriangle';\n\nexport class CoreGeometryBuilderMesh extends CoreGeometryBuilderBase {\n\tprotected _filterPoints(points: BaseCorePoint[]): BaseCorePoint[] {\n\t\t// ensures we only keep points that form a full face.\n\t\t// if a single point from a face is discarded, we remove all 3\n\n\t\tconst firstPoint = points[0];\n\t\tif (!firstPoint) {\n\t\t\treturn [];\n\t\t}\n\t\tconst geometry = firstPoint.geometry();\n\t\tif (!geometry) {\n\t\t\treturn [];\n\t\t}\n\t\tconst indices = geometry.getIndex()?.array;\n\t\tif (!indices) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst points_by_index: PolyDictionary<BaseCorePoint> = {};\n\t\tfor (const point of points) {\n\t\t\tpoints_by_index[point.index()] = point;\n\t\t}\n\t\tconst filteredPoints: BaseCorePoint[] = [];\n\n\t\tconst index_length = indices.length;\n\t\tlet pt0: BaseCorePoint;\n\t\tlet pt1: BaseCorePoint;\n\t\tlet pt2: BaseCorePoint;\n\t\tfor (let i = 0; i < index_length; i += 3) {\n\t\t\tpt0 = points_by_index[indices[i + 0]];\n\t\t\tpt1 = points_by_index[indices[i + 1]];\n\t\t\tpt2 = points_by_index[indices[i + 2]];\n\t\t\tif (pt0 && pt1 && pt2) {\n\t\t\t\tfilteredPoints.push(pt0);\n\t\t\t\tfilteredPoints.push(pt1);\n\t\t\t\tfilteredPoints.push(pt2);\n\t\t\t}\n\t\t}\n\n\t\treturn filteredPoints;\n\t}\n\n\tprotected _indicesFromPoints(new_index_by_old_index: PolyDictionary<number>, old_geometry: BufferGeometry) {\n\t\tconst index_attrib = old_geometry.index;\n\t\tif (index_attrib != null) {\n\t\t\tconst old_indices = index_attrib.array;\n\n\t\t\tconst new_indices: number[] = [];\n\n\t\t\tlet old_index0: number;\n\t\t\tlet old_index1: number;\n\t\t\tlet old_index2: number;\n\t\t\tlet new_index0: number;\n\t\t\tlet new_index1: number;\n\t\t\tlet new_index2: number;\n\t\t\tfor (let i = 0; i < old_indices.length; i += 3) {\n\t\t\t\told_index0 = old_indices[i + 0];\n\t\t\t\told_index1 = old_indices[i + 1];\n\t\t\t\told_index2 = old_indices[i + 2];\n\t\t\t\tnew_index0 = new_index_by_old_index[old_index0];\n\t\t\t\tnew_index1 = new_index_by_old_index[old_index1];\n\t\t\t\tnew_index2 = new_index_by_old_index[old_index2];\n\t\t\t\tif (new_index0 != null && new_index1 != null && new_index2 != null) {\n\t\t\t\t\tnew_indices.push(new_index0);\n\t\t\t\t\tnew_indices.push(new_index1);\n\t\t\t\t\tnew_indices.push(new_index2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new_indices;\n\t\t}\n\t}\n}\n\nconst _v3 = new Vector3();\nconst STRIDE = 3;\nexport const threeMeshFromPrimitives: ObjectBuilder<CoreObjectType.THREEJS> = (\n\tobject: ObjectContent<CoreObjectType.THREEJS>,\n\tentities: CoreEntity[]\n) => {\n\tconst mesh = object as ObjectContent<CoreObjectType.THREEJS> as Mesh;\n\tconst geometry = mesh.geometry;\n\tif (!geometry) {\n\t\treturn undefined;\n\t}\n\tconst oldIndex = geometry.getIndex();\n\tif (!oldIndex) {\n\t\treturn undefined;\n\t}\n\tconst oldIndexArray = oldIndex.array;\n\n\tconst primitives = entities as ThreejsPrimitiveTriangle[];\n\n\tconst newIndices = new Array(primitives.length * STRIDE);\n\n\tlet i = 0;\n\tfor (const primitive of primitives) {\n\t\t_v3.fromArray(oldIndexArray, primitive.index() * STRIDE);\n\t\t_v3.toArray(newIndices, i * STRIDE);\n\t\ti++;\n\t}\n\tgeometry.setIndex(newIndices);\n\n\treturn mesh;\n};\n","import {Vector3, BufferGeometry, Float32BufferAttribute} from 'three';\nimport {BaseCorePoint} from '../../../entities/point/CorePoint';\nimport {uniqWithoutPreservingOrder, arrayCompact} from '../../../../ArrayUtils';\nimport {PolyDictionary} from '../../../../../types/GlobalTypes';\nimport {CoreObjectType, ObjectContent} from '../../../ObjectContent';\n\nexport abstract class CoreGeometryBuilderBase {\n\tfromPoints<T extends CoreObjectType>(object: ObjectContent<T>, points: BaseCorePoint[]): BufferGeometry {\n\t\tpoints = this._filterPoints(points);\n\t\tconst geometry = new BufferGeometry();\n\t\t// const coreGeometry = new CoreGeometry(geometry);\n\n\t\tconst firstPoint = points[0];\n\t\tif (!firstPoint) {\n\t\t\treturn geometry;\n\t\t}\n\t\tconst oldGeometry = firstPoint.geometry();\n\t\tif (!oldGeometry) {\n\t\t\treturn geometry;\n\t\t}\n\n\t\t// index\n\t\tconst new_index_by_old_index: PolyDictionary<number> = {};\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tnew_index_by_old_index[points[i].index()] = i;\n\t\t}\n\n\t\tconst indices = this._indicesFromPoints(new_index_by_old_index, oldGeometry);\n\t\tif (indices) {\n\t\t\tgeometry.setIndex(indices);\n\t\t}\n\n\t\t// attributes\n\t\tconst {attributes} = oldGeometry;\n\t\t// const new_attributes = {}\n\t\tfor (const attribute_name of Object.keys(attributes)) {\n\t\t\tconst attrib_values = firstPoint.userDataAttribs()[attribute_name];\n\t\t\tconst is_attrib_indexed = attrib_values != null;\n\n\t\t\tif (is_attrib_indexed) {\n\t\t\t\tconst new_values: string[] = [];\n\t\t\t\tconst uniqValues: string[] = [];\n\t\t\t\tuniqWithoutPreservingOrder(\n\t\t\t\t\tpoints.map((point) => point.indexedAttribValue(attribute_name)),\n\t\t\t\t\tuniqValues\n\t\t\t\t);\n\t\t\t\tarrayCompact(uniqValues, new_values);\n\t\t\t\tconst new_index_by_value: PolyDictionary<number> = {};\n\t\t\t\tnew_values.forEach((new_value, i) => (new_index_by_value[new_value] = i));\n\n\t\t\t\tfirstPoint.userDataAttribs()[attribute_name] = new_values;\n\n\t\t\t\t// const old_attrib = old_geometry.getAttribute(attribute_name)\n\t\t\t\t// const old_attrib_array = old_attrib.array\n\t\t\t\tconst new_attrib_indices = [];\n\t\t\t\tfor (const point of points) {\n\t\t\t\t\t// const old_index = old_attrib_array[point.index()]\n\t\t\t\t\tconst oldIndex = point.indexedAttribValue(attribute_name);\n\t\t\t\t\tif (oldIndex) {\n\t\t\t\t\t\tconst new_index = new_index_by_value[oldIndex];\n\t\t\t\t\t\tnew_attrib_indices.push(new_index);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(attribute_name, new Float32BufferAttribute(new_attrib_indices, 1));\n\t\t\t} else {\n\t\t\t\tconst attrib_size = attributes[attribute_name].itemSize;\n\t\t\t\tconst values: number[] = new Array(points.length * attrib_size);\n\t\t\t\tswitch (attrib_size) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\t\t\tvalues[i] = points[i].attribValue(attribute_name) as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tlet value: Vector3;\n\t\t\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\t\t\tvalue = points[i].attribValue(attribute_name) as Vector3;\n\t\t\t\t\t\t\tvalue.toArray(values, i * attrib_size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(attribute_name, new Float32BufferAttribute(values, attrib_size));\n\t\t\t}\n\t\t}\n\t\treturn geometry;\n\t}\n\n\tprotected abstract _filterPoints(points: BaseCorePoint[]): BaseCorePoint[];\n\tprotected abstract _indicesFromPoints(\n\t\tnew_index_by_old_index: PolyDictionary<number>,\n\t\told_geometry: BufferGeometry\n\t): number[] | undefined;\n}\n","import {BufferAttribute, BufferGeometry} from 'three';\nimport {rangeWithEnd} from '../../ArrayUtils';\n\nconst POSITION = 'position';\nexport class CoreGeometryIndexBuilder {\n\tstatic createIndexIfNone(geometry: BufferGeometry) {\n\t\tif (!geometry.index) {\n\t\t\tconst position = geometry.getAttribute(POSITION) as BufferAttribute;\n\t\t\tif (position) {\n\t\t\t\tconst position_array = position.array;\n\t\t\t\tgeometry.setIndex(rangeWithEnd(position_array.length / 3));\n\t\t\t}\n\t\t}\n\t}\n}\n","import {CoreGraphNode} from './CoreGraphNode';\nimport {Poly} from '../../engine/Poly';\nimport {Cooker} from '../../engine/scene/utils/Cooker';\n\nexport type PostDirtyHook = (caller?: CoreGraphNode) => void;\n\nexport class DirtyController {\n\tprivate _dirtyCount: number = 0;\n\tprivate _dirty: boolean = true;\n\tprivate _dirtyTimestamp: number | undefined;\n\tprivate _cooker: Cooker;\n\t// hooks\n\tprivate _postDirtyHooks: PostDirtyHook[] | undefined;\n\tprivate _postDirtyHookNames: string[] | undefined;\n\n\tconstructor(private node: CoreGraphNode) {\n\t\tthis._cooker = node.scene().cooker;\n\t}\n\n\tdispose() {\n\t\tthis._postDirtyHooks = undefined;\n\t\tthis._postDirtyHookNames = undefined;\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this._dirty === true;\n\t}\n\tdirtyTimestamp() {\n\t\treturn this._dirtyTimestamp;\n\t}\n\tdirtyCount(): number {\n\t\treturn this._dirtyCount;\n\t}\n\thasPostDirtyHooks(): boolean {\n\t\treturn this._postDirtyHookNames != null && this._postDirtyHookNames.length > 0;\n\t}\n\taddPostDirtyHook(name: string, method: PostDirtyHook) {\n\t\tthis._postDirtyHookNames = this._postDirtyHookNames || [];\n\t\tthis._postDirtyHooks = this._postDirtyHooks || [];\n\n\t\tif (!this._postDirtyHookNames.includes(name)) {\n\t\t\tthis._postDirtyHookNames.push(name);\n\t\t\tthis._postDirtyHooks.push(method);\n\t\t} else {\n\t\t\tconsole.warn(`hook with name ${name} already exists`, this.node);\n\t\t}\n\t}\n\tremovePostDirtyHook(name: string) {\n\t\tif (this._postDirtyHookNames && this._postDirtyHooks) {\n\t\t\tconst index = this._postDirtyHookNames.indexOf(name);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis._postDirtyHookNames.splice(index, 1);\n\t\t\t\tthis._postDirtyHooks.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\thasHook(name: string): boolean {\n\t\tif (this._postDirtyHookNames) {\n\t\t\treturn this._postDirtyHookNames.includes(name);\n\t\t}\n\t\treturn false;\n\t}\n\n\tremoveDirtyState(): void {\n\t\tthis._dirty = false;\n\t}\n\n\tsetDirty(originalTriggerGraphNode?: CoreGraphNode | null, propagate: boolean = true): void {\n\t\tif (originalTriggerGraphNode == null) {\n\t\t\toriginalTriggerGraphNode = this.node;\n\t\t}\n\t\tif (originalTriggerGraphNode == this.node && this.node.selfDirtyForbidden()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._dirty = true;\n\t\tthis._dirtyTimestamp = Poly.performance.performanceManager().now();\n\t\tthis._dirtyCount += 1;\n\n\t\tthis.runPostDirtyHooks(originalTriggerGraphNode);\n\n\t\tif (propagate === true) {\n\t\t\tthis.setSuccessorsDirty(originalTriggerGraphNode);\n\t\t}\n\t}\n\n\trunPostDirtyHooks(originalTriggerGraphNode?: CoreGraphNode) {\n\t\tif (this._postDirtyHooks == null || this._postDirtyHooks.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._cooker.blocked()) {\n\t\t\tthis._cooker.enqueue(this.node, originalTriggerGraphNode);\n\t\t} else {\n\t\t\tfor (const hook of this._postDirtyHooks) {\n\t\t\t\thook(originalTriggerGraphNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetSuccessorsDirty(originalTriggerGraphNode?: CoreGraphNode): void {\n\t\tif (originalTriggerGraphNode == null) {\n\t\t\toriginalTriggerGraphNode = this.node;\n\t\t}\n\n\t\tthis._cooker.block();\n\n\t\tconst allSuccessors = this.node.graphAllSuccessors();\n\t\tfor (const successor of allSuccessors) {\n\t\t\tsuccessor.dirtyController.setDirty(originalTriggerGraphNode, false);\n\t\t}\n\t\tthis._cooker.unblock();\n\t}\n}\n","import {CoreGraph, CoreGraphNodeId} from './CoreGraph';\nimport {DirtyController, PostDirtyHook} from './DirtyController';\nimport {PolyScene} from '../../engine/scene/PolyScene';\n\n/**\n *\n *\n * This is the base class for nodes and params, which are part of the same graph, and are connected to dependencies.\n *\n */\nexport class CoreGraphNode {\n\tprivate _graph: CoreGraph;\n\tprivate _graphNodeId: CoreGraphNodeId;\n\tprivate _dirtyController: DirtyController = new DirtyController(this);\n\tprivate _allPredecessors: CoreGraphNode[] = [];\n\tprivate _allSuccessors: CoreGraphNode[] = [];\n\tprivate _allPredecessorsDirty = true;\n\tprivate _allSuccessorsDirty = true;\n\tconstructor(protected _scene: PolyScene, protected _name: string) {\n\t\tthis._graphNodeId = _scene.graph.nextId();\n\t\t_scene.graph.addNode(this);\n\t\tthis._graph = _scene.graph;\n\t}\n\n\tprivate _disposed = false;\n\tdispose() {\n\t\tthis._dirtyController.dispose();\n\t\tthis._allPredecessors.length = 0;\n\t\tthis._allSuccessors.length = 0;\n\t\tthis.graphRemove();\n\t\tthis._disposed = true;\n\t}\n\tdisposed() {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * returns the name\n\t *\n\t */\n\tname(): string {\n\t\treturn this._name;\n\t}\n\tsetName(name: string) {\n\t\tthis._name = name;\n\t}\n\n\t/**\n\t * returns the scene\n\t *\n\t */\n\tscene(): PolyScene {\n\t\treturn this._scene;\n\t}\n\t/**\n\t * returns the id, which is unique for the scene\n\t *\n\t */\n\tgraphNodeId(): CoreGraphNodeId {\n\t\treturn this._graphNodeId;\n\t}\n\n\t//\n\t//\n\t// DIRTY CONTROLLER\n\t//\n\t//\n\tget dirtyController() {\n\t\treturn this._dirtyController;\n\t}\n\t/**\n\t * makes the graphNode dirty, which in turns makes its dependencies dirty\n\t *\n\t */\n\tsetDirty(trigger?: CoreGraphNode | null) {\n\t\ttrigger = trigger || this;\n\t\tthis._dirtyController.setDirty(trigger);\n\t}\n\t/**\n\t * makes dependencies dirty\n\t *\n\t */\n\tsetSuccessorsDirty(trigger?: CoreGraphNode) {\n\t\tthis._dirtyController.setSuccessorsDirty(trigger);\n\t}\n\t/**\n\t * removes the dirty state\n\t *\n\t */\n\tremoveDirtyState() {\n\t\tthis._dirtyController.removeDirtyState();\n\t}\n\tisDirty() {\n\t\treturn this._dirtyController.isDirty();\n\t}\n\t/**\n\t * adds a callback that gets run when the graphNode is dirty\n\t *\n\t */\n\taddPostDirtyHook(name: string, callback: PostDirtyHook) {\n\t\tthis._dirtyController.addPostDirtyHook(name, callback);\n\t}\n\tremovePostDirtyHook(name: string) {\n\t\tthis._dirtyController.removePostDirtyHook(name);\n\t}\n\n\t//\n\t//\n\t// GRAPH\n\t//\n\t//\n\n\tgraphRemove() {\n\t\tthis._graph.removeNode(this);\n\t}\n\n\taddGraphInput(src: CoreGraphNode, checkCycle = true): boolean {\n\t\treturn this._graph.connect(src, this, checkCycle);\n\t}\n\tremoveGraphInput(src: CoreGraphNode) {\n\t\tthis._graph.disconnect(src, this);\n\t}\n\n\tgraphDisconnectPredecessors() {\n\t\tthis._graph.disconnectPredecessors(this);\n\t}\n\tgraphDisconnectSuccessors() {\n\t\tthis._graph.disconnectSuccessors(this);\n\t}\n\n\tgraphPredecessorIds(): Readonly<CoreGraphNodeId[]> | undefined {\n\t\treturn this._graph.predecessorIds(this._graphNodeId);\n\t}\n\tgraphPredecessors(): Readonly<CoreGraphNode[]> | undefined {\n\t\treturn this._graph.predecessors(this);\n\t}\n\tgraphSuccessorIds(): Readonly<CoreGraphNodeId[]> | undefined {\n\t\treturn this._graph.successorIds(this._graphNodeId);\n\t}\n\tgraphSuccessors(): Readonly<CoreGraphNode[]> | undefined {\n\t\treturn this._graph.successors(this);\n\t}\n\tprivate _clearAllPredecessors() {\n\t\tthis._allPredecessorsDirty = true;\n\t}\n\tprivate _clearAllSuccessors() {\n\t\tthis._allSuccessorsDirty = true;\n\t}\n\tgraphAllPredecessors(): Readonly<CoreGraphNode[]> {\n\t\tif (this._allPredecessorsDirty) {\n\t\t\tthis._graph.allPredecessors(this, this._allPredecessors);\n\t\t\tthis._allPredecessorsDirty = false;\n\t\t}\n\t\treturn this._allPredecessors;\n\t\t// return Object.freeze([...this._allPredecessors]);\n\t}\n\tgraphAllSuccessors(): Readonly<CoreGraphNode[]> {\n\t\tif (this._allSuccessorsDirty) {\n\t\t\tthis._graph.allSuccessors(this, this._allSuccessors);\n\t\t\tthis._allSuccessorsDirty = false;\n\t\t}\n\t\treturn this._allSuccessors;\n\t\t// return Object.freeze([...this._allSuccessors]);\n\t}\n\thasPredecessor(node: CoreGraphNode): boolean {\n\t\treturn this.graphAllPredecessors().includes(node);\n\t}\n\tclearCachesWithPredecessorsAndSuccessors() {\n\t\tconst allPredecessors = this.graphAllPredecessors();\n\t\tconst allSuccessors = this.graphAllSuccessors();\n\t\tfor (const predecessor of allPredecessors) {\n\t\t\tpredecessor._clearAllSuccessors();\n\t\t}\n\t\tfor (const successor of allSuccessors) {\n\t\t\tsuccessor._clearAllPredecessors();\n\t\t}\n\t\tthis._clearAllPredecessors();\n\t\tthis._clearAllSuccessors();\n\t}\n\t//\n\tsetForbiddenTriggerNodes(nodes: CoreGraphNode | CoreGraphNode[]) {\n\t\tthis._graph.setForbiddenTriggerNodes(this, nodes);\n\t\tthis._clearAllSuccessors();\n\t}\n\tclearForbiddenTriggerNodes() {\n\t\tthis._graph.clearForbiddenTriggerNodes(this);\n\t\tthis._clearAllSuccessors();\n\t}\n\tsetSelfDirtyForbidden(state: boolean) {\n\t\tthis._graph.setSelfDirtyForbidden(this, state);\n\t}\n\tselfDirtyForbidden(): boolean {\n\t\treturn this._graph.selfDirtyForbidden(this);\n\t}\n}\n","export enum LightUserDataRaymarching {\n\tPENUMBRA = 'raymarchingPenumbra',\n\tSHADOW_BIAS_ANGLE = 'raymarchingShadowBiasAngle',\n\tSHADOW_BIAS_DISTANCE = 'raymarchingShadowBiasDistance',\n}\n","// https://gist.github.com/gre/1650294\n\n// const ease_in = function(t:number, power:number){return Math.pow(t, power)}\n// const ease_on = function(t:number, power:number){return 1 - Math.abs(Math.pow(t-1, power))}\n// const ease_ion = function(t:number, power:number){return t<.5 ? ease_i(power)(t*2)/2 : ease_o(power)(t*2 - 1)/2+0.5}\n\nconst easeI = function (power: number) {\n\treturn function (t: number) {\n\t\treturn Math.pow(t, power);\n\t};\n};\nconst easeO = function (power: number) {\n\treturn function (t: number) {\n\t\treturn 1 - Math.abs(Math.pow(t - 1, power));\n\t};\n};\nconst easeIO = function (power: number) {\n\treturn function (t: number) {\n\t\treturn t < 0.5 ? easeI(power)(t * 2) / 2 : easeO(power)(t * 2 - 1) / 2 + 0.5;\n\t};\n};\n\ntype EasingFunction = (num: number) => number;\nexport interface EasingDictionary {\n\teaseI2: EasingFunction;\n\teaseO2: EasingFunction;\n\teaseIO2: EasingFunction;\n\teaseI3: EasingFunction;\n\teaseO3: EasingFunction;\n\teaseIO3: EasingFunction;\n\teaseI4: EasingFunction;\n\teaseO4: EasingFunction;\n\teaseIO4: EasingFunction;\n\teaseSinI: EasingFunction;\n\teaseSinO: EasingFunction;\n\teaseSinIO: EasingFunction;\n\teaseElasticI: EasingFunction;\n\teaseElasticO: EasingFunction;\n\teaseElasticIO: EasingFunction;\n}\nexport const EASING_NAMES: Array<keyof EasingDictionary> = [\n\t'easeI2',\n\t'easeO2',\n\t'easeIO2',\n\t'easeI3',\n\t'easeO3',\n\t'easeIO3',\n\t'easeI4',\n\t'easeO4',\n\t'easeIO4',\n\t'easeSinI',\n\t'easeSinO',\n\t'easeSinIO',\n\t'easeElasticI',\n\t'easeElasticO',\n\t'easeElasticIO',\n];\n\nexport const easeI2 = easeI(2);\nexport const easeO2 = easeO(2);\nexport const easeIO2 = easeIO(2);\n\nexport const easeI3 = easeI(3);\nexport const easeO3 = easeO(3);\nexport const easeIO3 = easeIO(3);\n\nexport const easeI4 = easeI(4);\nexport const easeO4 = easeO(4);\nexport const easeIO4 = easeIO(4);\n\nexport function easeSinI(t: number) {\n\treturn 1 + Math.sin((Math.PI / 2) * t - Math.PI / 2);\n}\nexport function easeSinO(t: number) {\n\treturn Math.sin((Math.PI / 2) * t);\n}\nexport function easeSinIO(t: number) {\n\treturn (1 + Math.sin(Math.PI * t - Math.PI / 2)) / 2;\n}\n\nexport function easeElasticI(t: number) {\n\treturn t == 0 ? 0 : (0.04 - 0.04 / t) * Math.sin(25 * t) + 1;\n}\nexport function easeElasticO(t: number) {\n\treturn t == 1 ? 1 : ((0.04 * t) / --t) * Math.sin(25 * t);\n}\nexport function easeElasticIO(t: number) {\n\treturn t == 0.5\n\t\t? 0\n\t\t: (t -= 0.5) < 0\n\t\t? (0.02 + 0.01 / t) * Math.sin(50 * t)\n\t\t: (0.02 - 0.01 / t) * Math.sin(50 * t) + 1;\n}\n\nexport const Easing: EasingDictionary = {\n\t// linear: ease_io(1),\n\n\t// ease_i: function (t: number, power: number) {\n\t// \treturn ease_i(power)(t);\n\t// },\n\t// ease_o: function (t: number, power: number) {\n\t// \treturn ease_o(power)(t);\n\t// },\n\t// ease_io: function (t: number, power: number) {\n\t// \treturn ease_io(power)(t);\n\t// },\n\n\teaseI2,\n\teaseO2,\n\teaseIO2,\n\n\teaseI3,\n\teaseO3,\n\teaseIO3,\n\n\teaseI4,\n\teaseO4,\n\teaseIO4,\n\t// easeInQuart: EaseIn(4),\n\t// easeOutQuart: EaseOut(4),\n\t// easeInOutQuart: EaseInOut(4),\n\t// easeInQuint: EaseIn(5),\n\t// easeOutQuint: EaseOut(5),\n\t// easeInOutQuint: EaseInOut(5)\n\n\teaseSinI,\n\teaseSinO,\n\teaseSinIO,\n\n\teaseElasticI,\n\teaseElasticO,\n\teaseElasticIO,\n};\n\n// export class Easing {\n//   // no easing, no acceleration\n//   static linear(t:number):number{ return t }\n//   // accelerating from zero velocity\n//   static easeinquad (t:number):number{ return t*t }\n//   // decelerating to zero velocity\n//   static easeoutquad (t:number):number{ return t*(2-t) }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutquad (t:number):number{ return t<.5 ? 2*t*t : -1+(4-2*t)*t }\n//   // accelerating from zero velocity\n//   static easeincubic (t:number):number{ return t*t*t }\n//   // decelerating to zero velocity\n//   static easeoutcubic (t:number):number{ return (--t)*t*t+1 }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutcubic (t:number):number{ return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 }\n//   // accelerating from zero velocity\n//   static easeinquart (t:number):number{ return t*t*t*t }\n//   // decelerating to zero velocity\n//   static easeoutquart (t:number):number{ return 1-(--t)*t*t*t }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutquart (t:number):number{ return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t }\n//   // accelerating from zero velocity\n//   static easeinquint (t:number):number{ return t*t*t*t*t }\n//   // decelerating to zero velocity\n//   static easeoutquint (t:number):number{ return 1+(--t)*t*t*t*t }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutquint (t:number):number{ return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\n// }\n","import {LngLatLike, Vector2Like} from '../../types/GlobalTypes';\nimport {Vector3, Triangle} from 'three';\nimport {\n\tdegToRad as _degToRad,\n\tradToDeg as _radToDeg,\n\tsmoothstep as _smoothstep,\n\tsmootherstep as _smootherstep,\n} from 'three/src/math/MathUtils';\nimport {Easing} from './Easing';\nimport {CoreType} from '../Type';\n\nconst RAND_A = 12.9898;\nconst RAND_B = 78.233;\nconst RAND_C = 43758.5453;\n\nexport const degToRad = _degToRad;\nexport const radToDeg = _radToDeg;\n\nexport function clamp(val: number, min: number, max: number): number {\n\tif (val < min) {\n\t\treturn min;\n\t} else if (val > max) {\n\t\treturn max;\n\t} else {\n\t\treturn val;\n\t}\n}\nexport const smoothstep = _smoothstep;\nexport const smootherstep = _smootherstep;\nexport function fit(val: number, srcMin: number, srcMax: number, destMin: number, destMax: number): number {\n\tconst src_range = srcMax - srcMin;\n\tconst dest_range = destMax - destMin;\n\n\tconst r = (val - srcMin) / src_range;\n\treturn r * dest_range + destMin;\n}\nexport function fit01(val: number, destMin: number, destMax: number): number {\n\t// const size = max - min;\n\t// return (val - min) / size;\n\treturn fit(val, 0, 1, destMin, destMax);\n}\nexport function fitClamp(val: number, srcMin: number, srcMax: number, destMin: number, destMax: number): number {\n\tconst r = fit(val, srcMin, srcMax, destMin, destMax);\n\treturn clamp(r, destMin, destMax);\n}\nexport function mix(num0: number, num1: number, blend: number) {\n\treturn (1 - blend) * num0 + blend * num1;\n}\nexport const fract = (number: number) => number - Math.floor(number);\nconst DEFAULT_Y = 136574;\nconst _vec = {x: 0, y: DEFAULT_Y};\nexport function randFloat(x: number, y: number = DEFAULT_Y): number {\n\t_vec.x = x;\n\t_vec.y = y;\n\treturn randVec2(_vec);\n}\n\nexport function randVec2(uv: Vector2Like) {\n\tconst dt = uv.x * RAND_A + uv.y * RAND_B; //dot( uv.xy, vec2( a,b ) )\n\tconst sn = dt % Math.PI;\n\treturn fract(Math.sin(sn) * RAND_C);\n}\nexport function rand(number: number | Vector2Like): number {\n\tif (CoreType.isNumber(number)) {\n\t\treturn randFloat(number);\n\t} else {\n\t\treturn randVec2(number);\n\t}\n}\nexport function round(number: number, stepSize: number): number {\n\tconst stepsCount = number / stepSize;\n\tconst roundedStepsCount = number < 0 ? Math.ceil(stepsCount) : Math.floor(stepsCount);\n\treturn roundedStepsCount * stepSize;\n}\nexport function mod(number: number, _mod: number) {\n\treturn ((number % _mod) + _mod) % _mod;\n}\nexport function highestEven(number: number): number {\n\treturn 2 * Math.ceil(number * 0.5);\n}\nexport function nearestPower2(num: number) {\n\treturn Math.pow(2, Math.ceil(Math.log(num) / Math.log(2)));\n}\nexport function pow2Inverse(num: number) {\n\treturn Math.log(num) / Math.log(2);\n}\n// https://www.movable-type.co.uk/scripts/latlong.html\nexport function geodesicDistance(lnglat1: LngLatLike, lnglat2: LngLatLike): number {\n\tvar R = 6371e3; // metres\n\tvar d1 = degToRad(lnglat1.lat);\n\tvar d2 = degToRad(lnglat2.lat);\n\tvar ad1 = degToRad(lnglat2.lat - lnglat1.lat);\n\tvar ad2 = degToRad(lnglat2.lng - lnglat1.lng);\n\n\tvar a = Math.sin(ad1 / 2) * Math.sin(ad1 / 2) + Math.cos(d1) * Math.cos(d2) * Math.sin(ad2 / 2) * Math.sin(ad2 / 2);\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n\tvar d = R * c;\n\treturn d;\n}\nconst _triangleMid = new Vector3();\nconst _triangleMidToCorner = new Vector3();\nexport function expandTriangle(triangle: Triangle, margin: number) {\n\ttriangle.getMidpoint(_triangleMid);\n\n\t// a\n\t_triangleMidToCorner.copy(triangle.a).sub(_triangleMid);\n\t_triangleMidToCorner.normalize().multiplyScalar(margin);\n\ttriangle.a.add(_triangleMidToCorner);\n\t// b\n\t_triangleMidToCorner.copy(triangle.b).sub(_triangleMid);\n\t_triangleMidToCorner.normalize().multiplyScalar(margin);\n\ttriangle.b.add(_triangleMidToCorner);\n\t// c\n\t_triangleMidToCorner.copy(triangle.c).sub(_triangleMid);\n\t_triangleMidToCorner.normalize().multiplyScalar(margin);\n\ttriangle.c.add(_triangleMidToCorner);\n}\n\nexport function lerpFloat(current: number, target: number, blend: number) {\n\treturn current * (1 - blend) + target * blend;\n}\n\nexport class CoreMath {\n\tstatic Easing = Easing; // used in expressions\n\tstatic degToRad = degToRad; // used in expressions\n\tstatic radToDeg = radToDeg; // used in expressions\n\tstatic clamp = clamp; // used in expressions\n\tstatic smoothstep = smoothstep;\n\tstatic smootherstep = smootherstep;\n\tstatic fit01 = fit01; // used in expressions\n\tstatic fit = fit; // used in expressions\n\tstatic fitClamp = fitClamp; // used in expressions\n\tstatic mix = mix; // used in expressions\n\tstatic fract = fract; // used in expressions\n\tstatic rand = rand; // from threejs glsl rand\n\tstatic round = round;\n\n\tstatic highestEven = highestEven;\n\tstatic nearestPower2 = nearestPower2;\n\tstatic pow2Inverse = pow2Inverse;\n\n\tstatic randFloat = randFloat;\n\tstatic randVec2 = randVec2;\n\n\tstatic lerpFloat = lerpFloat;\n}\n","//\n// https://antfu.me/posts/watch-with-reactivity\n//\n\nimport {computed, Ref, ref} from '@vue/reactivity';\nimport {watch} from '@vue-reactivity/watch';\n\n// function traverse(value: any, seen: Set<any>) {\n// \tconsole.log(value);\n// \tif (seen.has(value)) {\n// \t\treturn value;\n// \t}\n// \tif (!CoreType.isObject(value)) {\n// \t\treturn value;\n// \t}\n\n// \tseen.add(value); // prevent circular reference\n// \tif (CoreType.isArray(value)) {\n// \t\tfor (let i = 0; i < value.length; i++) traverse(value[i], seen);\n// \t} else {\n// \t\tfor (const key of Object.keys(value)) traverse((value as any)[key], seen);\n// \t}\n// \treturn value;\n// }\n\n// interface WatchOptions {\n// \tdeep: boolean;\n// \tlazy?: boolean;\n// }\n// function watch(source: any, fn: EffectScheduler, options?: WatchOptions) {\n// \toptions = options || {deep: false, lazy: false};\n// \tconst {deep, lazy} = options;\n// \tlet getter = isRef(source) ? () => source.value : isReactive(source) ? () => source : source;\n// \tconsole.log({source, isRef: isRef(source), getter, fn});\n// \tif (deep) {\n// \t\tconst seen = new Set();\n// \t\tconst _getter = () => traverse(getter(), seen);\n// \t\tgetter = _getter;\n// \t}\n\n// \tconst runner = effect(getter, {\n// \t\tlazy,\n// \t\tscheduler: fn,\n// \t});\n// \tconsole.log(runner);\n\n// \treturn () => stop(runner);\n// }\n\nconst MAX = Math.floor(Number.MAX_SAFE_INTEGER / 100);\nexport function incrementRefSafely(_ref: Ref<number>) {\n\tif (_ref.value > MAX) {\n\t\t_ref.value = 0;\n\t} else {\n\t\t_ref.value += 1;\n\t}\n}\nexport function dummyReadRefVal(value: number) {\n\t// we just need this method to force a call to .value\n\t// and ensure that we have a dependency with the ref()\n}\n\nexport {computed, ref, watch};\n","import {Ref} from '@vue/reactivity';\nimport {incrementRefSafely, ref} from '../../core/reactivity/CoreReactivity';\n\nconst refByNodePath: Map<string, Ref<number>> = new Map();\nexport function getOrCreateNodeRef(nodePath: string) {\n\treturn getNodeRef(nodePath) || createNodeRef(nodePath);\n}\nexport function getNodeRef(nodePath: string) {\n\treturn refByNodePath.get(nodePath);\n}\nexport function createNodeRef(nodePath: string) {\n\tlet refForNodePath = refByNodePath.get(nodePath);\n\tif (!refForNodePath) {\n\t\trefForNodePath = ref(0);\n\t\trefByNodePath.set(nodePath, refForNodePath);\n\t}\n\treturn refForNodePath;\n}\n\nexport function touchNodeRef(nodePath: string) {\n\tconst _ref = getNodeRef(nodePath);\n\tif (!_ref) {\n\t\treturn;\n\t}\n\tincrementRefSafely(_ref);\n}\n","// import {ref} from './CoreReactivity';\nimport type {Ref} from '@vue/reactivity';\n// import type{ Vector2} from 'three';\n// import { ParamConvertibleJsType} from '../../engine/nodes/utils/io/connections/Js';\n\nimport type {AttribValue} from '../../types/GlobalTypes';\n\nimport type {CoreObjectType, ObjectContent} from '../geometry/ObjectContent';\nimport {JsIConnectionPointTypeToDataTypeMap, ParamConvertibleJsType} from '../../engine/nodes/utils/io/connections/Js';\n\nexport interface AttribRefs<T extends ParamConvertibleJsType> {\n\tcurrent: Ref<JsIConnectionPointTypeToDataTypeMap[T]>;\n\tprevious: Ref<JsIConnectionPointTypeToDataTypeMap[T]>;\n}\n\nexport type ObjectXD = ObjectContent<CoreObjectType>;\nexport const refByObjectUuidByAttribName: WeakMap<\n\tObjectXD,\n\tMap<string, AttribRefs<ParamConvertibleJsType>>\n> = new WeakMap();\n\nexport function _getObjectAttributeRef_(\n\tobject3D: ObjectXD,\n\tattribName: string\n\t// type: ParamConvertibleJsType\n): AttribRefs<ParamConvertibleJsType> | undefined {\n\treturn refByObjectUuidByAttribName.get(object3D)?.get(attribName);\n}\n\n// export function _getOrCreateObjectAttributeRef(\n// \tobject3D: ObjectXD,\n// \tattribName: string,\n// \ttype: ParamConvertibleJsType\n// ): AttribRefs {\n// \tlet mapForObject = refByObjectUuidByAttribName.get(object3D);\n// \tif (!mapForObject) {\n// \t\tmapForObject = new Map();\n// \t\trefByObjectUuidByAttribName.set(object3D, mapForObject);\n// \t}\n// \tlet refForAttribName = mapForObject.get(attribName);\n// \tif (!refForAttribName) {\n// \t\tlet _defaultValue = defaultValue(type);\n// \t\tlet _previousValue = defaultValue(type);\n// \t\tconst currentValue = CoreObject.attribValue(object3D, attribName, 0, _defaultValue as any as Vector2);\n// \t\tconst previousValue = CoreObject.attribValue(object3D, attribName, 0, _previousValue as any as Vector2);\n// \t\tif (currentValue == null || previousValue == null) {\n// \t\t\trefForAttribName = {\n// \t\t\t\tcurrent: ref(defaultValue(type)),\n// \t\t\t\tprevious: ref(defaultValue(type)),\n// \t\t\t};\n// \t\t} else {\n// \t\t\trefForAttribName = {\n// \t\t\t\tcurrent: ref(currentValue),\n// \t\t\t\tprevious: ref(previousValue),\n// \t\t\t};\n// \t\t}\n// \t\tmapForObject.set(attribName, refForAttribName);\n// \t}\n// \treturn refForAttribName;\n// }\nexport function _dummyReadAttributeRefVal(value: AttribValue) {\n\t// \t// console.log('_dummyReadAttributeRefVal', value);\n\t// \t// we just need this method to force a call to .value\n\t// \t// and ensure that we have a dependency with the ref()\n}\n\n// export function touchObjectAttribute(object3D: Object3D, attribName: string) {\n// \t// const _ref = _getObjectAttributeRef(object3D, attribName);\n// \t// incrementRefSafely(_ref);\n// }\n","import {ObjectXD, _getObjectAttributeRef_, refByObjectUuidByAttribName, AttribRefs} from './ObjectAttributeReactivity';\nimport {Color, Vector2, Vector3, Vector4} from 'three';\nimport {\n\tJsConnectionPointType,\n\tJsIConnectionPointTypeToDataTypeMap,\n\tParamConvertibleJsType,\n} from '../../engine/nodes/utils/io/connections/Js';\nimport {TypeAssert} from '../../engine/poly/Assert';\nimport {BaseCoreObject} from '../geometry/entities/object/BaseCoreObject';\nimport type {AttribValue} from '../../types/GlobalTypes';\nimport {ref} from './CoreReactivity';\nimport {Ref} from '@vue/reactivity';\n\nfunction defaultValue<T extends ParamConvertibleJsType>(type: T): JsIConnectionPointTypeToDataTypeMap[T] {\n\tswitch (type) {\n\t\tcase JsConnectionPointType.BOOLEAN: {\n\t\t\treturn false as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.COLOR: {\n\t\t\treturn new Color() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.FLOAT: {\n\t\t\treturn 0 as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.INT: {\n\t\t\treturn 0 as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.STRING: {\n\t\t\treturn '' as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.VECTOR2: {\n\t\t\treturn new Vector2() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.VECTOR3: {\n\t\t\treturn new Vector3() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.VECTOR4: {\n\t\t\treturn new Vector4() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t}\n\tTypeAssert.unreachable(type);\n}\nfunction cloneDefaultValue<T extends ParamConvertibleJsType>(\n\tvalue: JsIConnectionPointTypeToDataTypeMap[T],\n\ttype: T\n): JsIConnectionPointTypeToDataTypeMap[T] {\n\tswitch (type) {\n\t\tcase JsConnectionPointType.BOOLEAN: {\n\t\t\treturn value as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.COLOR: {\n\t\t\treturn (value as Color).clone() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.FLOAT: {\n\t\t\treturn value as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.INT: {\n\t\t\treturn value as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.STRING: {\n\t\t\treturn value as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.VECTOR2: {\n\t\t\treturn (value as Vector2).clone() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.VECTOR3: {\n\t\t\treturn (value as Vector3).clone() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t\tcase JsConnectionPointType.VECTOR4: {\n\t\t\treturn (value as Vector4).clone() as JsIConnectionPointTypeToDataTypeMap[T];\n\t\t}\n\t}\n\tTypeAssert.unreachable(type);\n}\n\nexport function getOrCreateObjectAttributeRef<T extends ParamConvertibleJsType>(\n\tobject3D: ObjectXD,\n\tattribName: string,\n\ttype: T,\n\tdefaultAttribValue?: JsIConnectionPointTypeToDataTypeMap[T]\n): AttribRefs<T> {\n\tlet mapForObject = refByObjectUuidByAttribName.get(object3D);\n\tif (!mapForObject) {\n\t\tmapForObject = new Map();\n\t\trefByObjectUuidByAttribName.set(object3D, mapForObject);\n\t}\n\tlet refForAttribName: AttribRefs<T> = mapForObject.get(attribName) as AttribRefs<T>;\n\tif (!refForAttribName) {\n\t\tlet _defaultValue = defaultAttribValue != null ? defaultAttribValue : defaultValue(type);\n\t\tlet _previousValue = cloneDefaultValue(_defaultValue, type);\n\t\tconst currentValue = BaseCoreObject.attribValue(\n\t\t\tobject3D,\n\t\t\tattribName,\n\t\t\t0,\n\t\t\t_defaultValue as unknown as Vector2\n\t\t) as JsIConnectionPointTypeToDataTypeMap[T] | undefined;\n\t\tconst previousValue = BaseCoreObject.attribValue(object3D, attribName, 0, _previousValue as any as Vector2) as\n\t\t\t| JsIConnectionPointTypeToDataTypeMap[T]\n\t\t\t| undefined;\n\t\tif (currentValue == null || previousValue == null) {\n\t\t\trefForAttribName = {\n\t\t\t\tcurrent: ref(_defaultValue) as Ref<JsIConnectionPointTypeToDataTypeMap[T]>,\n\t\t\t\tprevious: ref<JsIConnectionPointTypeToDataTypeMap[T]>(_previousValue) as Ref<\n\t\t\t\t\tJsIConnectionPointTypeToDataTypeMap[T]\n\t\t\t\t>,\n\t\t\t};\n\t\t} else {\n\t\t\trefForAttribName = {\n\t\t\t\tcurrent: ref(currentValue) as Ref<JsIConnectionPointTypeToDataTypeMap[T]>,\n\t\t\t\tprevious: ref(previousValue) as Ref<JsIConnectionPointTypeToDataTypeMap[T]>,\n\t\t\t};\n\t\t}\n\t\tmapForObject.set(attribName, refForAttribName);\n\t}\n\treturn refForAttribName;\n}\nexport function _dummyReadAttributeRefVal(value: AttribValue) {\n\t// \t// console.log('_dummyReadAttributeRefVal', value);\n\t// \t// we just need this method to force a call to .value\n\t// \t// and ensure that we have a dependency with the ref()\n}\n\n// export function touchObjectAttribute(object3D: Object3D, attribName: string) {\n// \t// const _ref = _getObjectAttributeRef(object3D, attribName);\n// \t// incrementRefSafely(_ref);\n// }\n","import {Ref} from '@vue/reactivity';\nimport {ref} from '../../core/reactivity/CoreReactivity';\nimport {CoreObjectType, ObjectContent} from '../geometry/ObjectContent';\n\nconst refChildrenCountByUuid: WeakMap<ObjectContent<CoreObjectType>, Ref<number>> = new WeakMap();\nexport function getObjectChildrenCountRef(object: ObjectContent<CoreObjectType>) {\n\tlet _ref = refChildrenCountByUuid.get(object);\n\tif (!_ref) {\n\t\t_ref = ref(object.children.length);\n\t\trefChildrenCountByUuid.set(object, _ref);\n\t}\n\treturn _ref;\n}\n\nexport function updateObjectChildrenCountRef(object: ObjectContent<CoreObjectType>) {\n\tgetObjectChildrenCountRef(object).value = object.children.length;\n}\n","import {WebGLRendererParameters} from 'three';\n\nexport enum PowerPreference {\n\tHIGH = 'high-performance',\n\tLOW = 'low-power',\n\tDEFAULT = 'default',\n}\nexport const POWER_PREFERENCES: PowerPreference[] = [\n\tPowerPreference.HIGH,\n\tPowerPreference.LOW,\n\tPowerPreference.DEFAULT,\n];\n\nexport enum RendererPrecision {\n\tHIGH = 'highp',\n\tMEDIUM = 'mediump',\n\tLOW = 'lowp',\n}\n\nexport const RENDERER_PRECISIONS: RendererPrecision[] = [\n\tRendererPrecision.HIGH,\n\tRendererPrecision.MEDIUM,\n\tRendererPrecision.LOW,\n];\n\nexport const WEBGL_RENDERER_DEFAULT_PARAMS: WebGLRendererParameters = {\n\talpha: true,\n\tprecision: RendererPrecision.HIGH,\n\tpremultipliedAlpha: true,\n\tantialias: true,\n\tpreserveDrawingBuffer: false,\n\tpowerPreference: PowerPreference.DEFAULT,\n\tdepth: true,\n\tstencil: true,\n\tlogarithmicDepthBuffer: false,\n};\n","import {PolyScene} from '../../../../src/engine/scene/PolyScene';\nexport function coreGetDefaultCamera(scene: PolyScene) {\n\treturn (\n\t\tscene.root().mainCameraController.cameraSync() ||\n\t\tscene.viewersRegister.lastRenderedViewer()?.camera() ||\n\t\tscene.root().mainCameraController.dummyPerspectiveCamera()\n\t);\n}\n","export default \"varying vec2 vUv;\\n\\nvoid main() {\\n\\tvUv = uv;\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\"","export default \"#include <packing>\\n\\nvarying vec2 vUv;\\nuniform sampler2D tDiffuse;\\nuniform sampler2D tDepth;\\nuniform float cameraNear;\\nuniform float cameraFar;\\n\\n\\nfloat readDepth( sampler2D depthSampler, vec2 coord ) {\\n\\tfloat fragCoordZ = texture2D( depthSampler, coord ).x;\\n\\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\\n\\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\\n}\\n\\nvoid main() {\\n\\tfloat alpha = texture2D( tDiffuse, vUv ).a;\\n\\tfloat depth = readDepth( tDepth, vUv );\\n\\n\\tgl_FragColor.rgb = vec3( depth );\\n\\tgl_FragColor.a = alpha;\\n}\"","import {\n\tWebGLRenderTarget,\n\tCamera,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tScene,\n\tShaderMaterial,\n\tTexture,\n\tPlaneGeometry,\n\tMesh,\n} from 'three';\nimport VERTEX from './depthRead/DepthRead.vert.glsl';\nimport FRAGMENT from './depthRead/DepthRead.frag.glsl';\n\nexport interface DepthReadMaterial extends ShaderMaterial {\n\tunifoms: {\n\t\tcameraNear: {value: number};\n\t\tcameraFar: {value: number};\n\t\ttDiffuse: {value: Texture | null};\n\t\ttDepth: {value: Texture | null};\n\t};\n}\nexport interface DepthSetup {\n\tscene: Scene;\n\tcamera: OrthographicCamera;\n\tmaterial: DepthReadMaterial;\n}\n\nexport function setupDepthReadScene(): DepthSetup {\n\t// Setup post processing stage\n\tconst camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\tconst material = new ShaderMaterial({\n\t\tvertexShader: VERTEX,\n\t\tfragmentShader: FRAGMENT,\n\t\tuniforms: {\n\t\t\tcameraNear: {value: camera.near},\n\t\t\tcameraFar: {value: camera.far},\n\t\t\ttDiffuse: {value: null},\n\t\t\ttDepth: {value: null},\n\t\t},\n\t}) as DepthReadMaterial;\n\tconst postPlane = new PlaneGeometry(2, 2);\n\tconst postQuad = new Mesh(postPlane, material);\n\tconst scene = new Scene();\n\tscene.add(postQuad);\n\n\treturn {scene, camera, material};\n}\nexport function updateDepthSetup(setup: DepthSetup, camera: Camera, renderTarget: WebGLRenderTarget) {\n\tif ((camera as PerspectiveCamera).isPerspectiveCamera || (camera as OrthographicCamera).isOrthographicCamera) {\n\t\tsetup.material.uniforms.cameraNear.value = (camera as PerspectiveCamera | OrthographicCamera).near;\n\t\tsetup.material.uniforms.cameraFar.value = (camera as PerspectiveCamera | OrthographicCamera).far;\n\t\tsetup.material.uniforms.tDiffuse.value = renderTarget.texture;\n\t\tsetup.material.uniforms.tDepth.value = renderTarget.depthTexture;\n\t} else {\n\t\tconsole.warn('camera is not a PerspectiveCamera or OrthographicCamera');\n\t}\n}\n","import {\n\tObject3D,\n\tMaterial,\n\tVector2,\n\tVector4,\n\tCamera,\n\tWebGLRenderTarget,\n\tNearestFilter,\n\tRGBAFormat,\n\tFloatType,\n\tWebGLRenderer,\n\tScene,\n\tNoToneMapping,\n\tNoColorSpace,\n\tColor,\n\tColorSpace,\n\tToneMapping,\n\tDepthTexture,\n\tUnsignedInt248Type,\n} from 'three';\nimport {coreGetDefaultCamera} from './CoreGetDefautCamera';\nimport {PolyScene} from '../../../../src/engine/scene/PolyScene';\nimport {setupDepthReadScene, updateDepthSetup} from './DepthRead';\n\nexport function coreCursorToUv(cursor: Vector2, target: Vector2) {\n\ttarget.x = 0.5 * (cursor.x + 1);\n\ttarget.y = 0.5 * (1 - cursor.y);\n}\n\ninterface Object3DRestoreContext {\n\tparent: Object3D | null;\n}\n\ninterface RendererRestoreContext {\n\ttoneMapping: ToneMapping;\n\toutputColorSpace: ColorSpace;\n}\ninterface RestoreContext {\n\tobject: Object3DRestoreContext;\n\trenderer: RendererRestoreContext;\n}\nfunction _createDepthTexture() {\n\tconst texture = new DepthTexture(1, 1);\n\ttexture.type = UnsignedInt248Type;\n\treturn texture;\n}\n\nexport class RenderPixelController {\n\t// Note for this to work on iOS:\n\t// The materials used for picking should have their transparency OFF.\n\t// This could potentially be done automatically by traversing the scene first.\n\tprivate _colorWriteRenderTarget: WebGLRenderTarget = new WebGLRenderTarget(1, 1, {\n\t\tminFilter: NearestFilter,\n\t\tmagFilter: NearestFilter,\n\t\tformat: RGBAFormat,\n\t\ttype: FloatType,\n\t\tcolorSpace: NoColorSpace,\n\t\tdepthTexture: _createDepthTexture(),\n\t});\n\tprivate _depthReadRenderTarget: WebGLRenderTarget = new WebGLRenderTarget(1, 1, {\n\t\tminFilter: NearestFilter,\n\t\tmagFilter: NearestFilter,\n\t\tformat: RGBAFormat,\n\t\ttype: FloatType,\n\t\tcolorSpace: NoColorSpace,\n\t});\n\tprivate _renderScene = new Scene();\n\tprivate _depthReadSetup = setupDepthReadScene();\n\tprivate _restoreContext: RestoreContext = {\n\t\tobject: {\n\t\t\tparent: null,\n\t\t},\n\t\t// scene: {\n\t\t// \toverrideMaterial: null,\n\t\t// },\n\t\trenderer: {\n\t\t\ttoneMapping: NoToneMapping,\n\t\t\toutputColorSpace: NoColorSpace,\n\t\t},\n\t};\n\tprivate _read = new Float32Array(4);\n\n\trenderColor(\n\t\tscene: PolyScene,\n\t\tobject3D: Object3D,\n\t\tmaterial: Material | null,\n\t\tcamera: Camera,\n\t\tbackgroundColor: Color | null,\n\t\tuv: Vector2,\n\t\ttarget: Vector4\n\t): Vector4 {\n\t\tthis._doRender(scene, object3D, camera, material, backgroundColor, uv, target, false);\n\n\t\treturn target;\n\t}\n\trenderDepth(\n\t\tscene: PolyScene,\n\t\tobject3D: Object3D,\n\t\tcamera: Camera,\n\t\tbackgroundColor: Color | null,\n\t\tuv: Vector2,\n\t\ttarget: Vector4\n\t): Vector4 {\n\t\tthis._doRender(scene, object3D, camera, null, backgroundColor, uv, target, true);\n\n\t\treturn target;\n\t}\n\tprivate _doRender(\n\t\tscene: PolyScene,\n\t\tobject3D: Object3D,\n\t\tcamera: Camera,\n\t\tmaterial: Material | null,\n\t\tbackgroundColor: Color | null,\n\t\tuv: Vector2,\n\t\ttarget: Vector4,\n\t\trenderDepth: boolean\n\t) {\n\t\tconst renderer = scene.renderersRegister.lastRegisteredRenderer();\n\t\tif (!renderer) {\n\t\t\treturn target;\n\t\t}\n\t\tif (!(renderer instanceof WebGLRenderer)) {\n\t\t\tconsole.log('renderPixel: renderer found is not WebGLRenderer');\n\t\t\treturn target;\n\t\t}\n\t\tif (camera == null) {\n\t\t\tcamera = coreGetDefaultCamera(scene);\n\t\t}\n\n\t\tthis._prepare(object3D, material, backgroundColor, renderer);\n\t\tthis._render(uv, camera, renderer, target, renderDepth);\n\t\tthis._restore(object3D, renderer);\n\n\t\treturn target;\n\t}\n\n\tprivate _prepare(\n\t\tobject3D: Object3D,\n\t\tmaterial: Material | null,\n\t\tbackgroundColor: Color | null,\n\t\trenderer: WebGLRenderer\n\t) {\n\t\t// save context\n\t\tthis._restoreContext.renderer.outputColorSpace = renderer.outputColorSpace;\n\t\tthis._restoreContext.renderer.toneMapping = renderer.toneMapping;\n\t\tthis._restoreContext.object.parent = object3D.parent;\n\n\t\t// set context\n\t\tthis._renderScene.background = backgroundColor;\n\t\tthis._renderScene.overrideMaterial = material || null;\n\t\tthis._renderScene.attach(object3D);\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.outputColorSpace = NoColorSpace;\n\t}\n\tprivate _render(uv: Vector2, camera: Camera, renderer: WebGLRenderer, target: Vector4, readDepth: boolean) {\n\t\t(camera as any).setViewOffset(\n\t\t\trenderer.domElement.width,\n\t\t\trenderer.domElement.height,\n\t\t\tuv.x * renderer.domElement.width,\n\t\t\tuv.y * renderer.domElement.height,\n\t\t\t1,\n\t\t\t1\n\t\t);\n\n\t\trenderer.setRenderTarget(this._colorWriteRenderTarget);\n\t\trenderer.clear();\n\t\trenderer.render(this._renderScene, camera);\n\n\t\tif (readDepth) {\n\t\t\t// read depth\n\t\t\tupdateDepthSetup(this._depthReadSetup, camera, this._colorWriteRenderTarget);\n\t\t\trenderer.setRenderTarget(this._depthReadRenderTarget);\n\t\t\trenderer.render(this._depthReadSetup.scene, this._depthReadSetup.camera);\n\t\t\trenderer.readRenderTargetPixels(this._depthReadRenderTarget, 0, 0, 1, 1, this._read);\n\t\t} else {\n\t\t\t// There are some cases where .readRenderTargetPixels is slow,\n\t\t\t// and this seems to be due to the calls to _gl.getParameters.\n\t\t\t// Here we are bypassing it.\n\t\t\t// Note: this attempt to bypass needs \"properties\", which is internal to WebGLRenderer.\n\t\t\t// const context = renderer.getContext();\n\t\t\t// const textureFormat = context.RGBA; // RGBAFormat see three/WebGLUtils.js\n\t\t\t// const textureType = context.FLOAT; // FloatType see three/WebGLUtils.js\n\t\t\t// context.readPixels(0, 0, 1, 1, textureFormat, textureType, this._read);\n\t\t\trenderer.readRenderTargetPixels(this._colorWriteRenderTarget, 0, 0, 1, 1, this._read);\n\t\t}\n\n\t\trenderer.setRenderTarget(null);\n\t\t(camera as any).clearViewOffset();\n\n\t\t// read buffer into target vector\n\t\ttarget.fromArray(this._read);\n\t}\n\tprivate _restore(object3D: Object3D, renderer: WebGLRenderer) {\n\t\trenderer.outputColorSpace = this._restoreContext.renderer.outputColorSpace;\n\t\trenderer.toneMapping = this._restoreContext.renderer.toneMapping;\n\t\tthis._restoreContext.object.parent?.attach(object3D);\n\t}\n}\n","type GsapCoreTimeline = gsap.core.Timeline;\ntype GsapCoreTimelineVars = gsap.TimelineVars;\ntype GsapTweenVars = gsap.TweenVars;\n\nexport interface GsapFactory {\n\tgsap: typeof gsap | undefined;\n\ttimeline: (vars?: GsapCoreTimelineVars | undefined) => GsapCoreTimeline | undefined;\n}\nexport const GSAP_FACTORY: GsapFactory = {\n\tgsap: undefined,\n\ttimeline: (vars?: GsapCoreTimelineVars | undefined) => {\n\t\treturn undefined;\n\t},\n};\nfunction gsapTimeline(vars?: GsapCoreTimelineVars | undefined) {\n\treturn GSAP_FACTORY.timeline(vars);\n\t// return gsap.timeline(vars);\n}\nfunction gsapLib() {\n\treturn GSAP_FACTORY.gsap;\n}\n\nexport {gsapTimeline, gsapLib, GsapCoreTimeline, GsapCoreTimelineVars, GsapTweenVars};\n","import {\n\tWebGLRenderer,\n\tWebGLRendererParameters,\n\tWebGLRenderTarget,\n\tWebGLRenderTargetOptions,\n\tNoColorSpace,\n\tNoToneMapping,\n} from 'three';\nimport type {AbstractRenderer} from '../viewers/Common';\nimport {WEBGL_RENDERER_DEFAULT_PARAMS} from '../../core/render/Common';\n\nexport interface WithPolyId {\n\t_polygonId?: number;\n}\nexport interface WithContextId {\n\t_polygonjsContextId?: number;\n}\nexport interface POLYAbstractRenderer extends AbstractRenderer, WithPolyId {}\nexport interface CanvasContext extends WebGLRenderingContext, WithContextId {}\n\nconst CONTEXT_OPTIONS: WebGLContextAttributes = {\n\t// powerPreference: 'high-performance', // attempt to fix issues in safari\n\t// antialias: false, // leave that to the renderer node\n\t// preserveDrawingBuffer: true, // this could only be useful to capture static images\n};\n\nenum WebGLContext {\n\tWEBGL = 'webgl',\n\tWEBGL2 = 'webgl2',\n\tEXPERIMENTAL_WEBGL = 'experimental-webgl',\n\tEXPERIMENTAL_WEBGL2 = 'experimental-webgl2',\n}\nlet nextRendererId: number = 0;\n\nexport class RenderersController {\n\tprivate static _nextGlContextId = 0;\n\t// private _firstRenderer: WebGLRenderer | null = null;\n\t// private _lastRenderer: WebGLRenderer | null = null;\n\tprivate _printDebug = false;\n\tprivate _requireWebGL2: boolean = false;\n\t// private _resolves: Callback[] = [];\n\tprivate _webgl2_available: boolean | undefined;\n\t// private _env_maps: TextureByString = {};\n\t// private _next_env_map_id: number = 0;\n\tprivate _webGLContextByCanvas: Map<HTMLCanvasElement, WebGLRenderingContext> = new Map();\n\tprivate _defaultRendererByCanvas = new Map<HTMLCanvasElement, WebGLRenderer>();\n\n\tdispose() {\n\t\tthis._webGLContextByCanvas.clear();\n\t\tthis._defaultRendererByCanvas.forEach((renderer) => {\n\t\t\trenderer.dispose();\n\t\t});\n\t\tthis._defaultRendererByCanvas.clear();\n\t}\n\n\tsetPrintDebug(state: boolean = true) {\n\t\tthis._printDebug = state;\n\t}\n\tprintDebug() {\n\t\treturn this._printDebug;\n\t}\n\tprintDebugMessage(message: any) {\n\t\tif (!this._printDebug) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn('[Poly debug]', message);\n\t}\n\n\tsetRequireWebGL2() {\n\t\tif (!this._requireWebGL2) {\n\t\t\tthis._requireWebGL2 = true;\n\t\t}\n\t}\n\twebGL2Available(canvas?: HTMLCanvasElement) {\n\t\tif (this._webgl2_available === undefined) {\n\t\t\tthis._webgl2_available = this._getWebGL2Available(canvas);\n\t\t}\n\t\treturn this._webgl2_available;\n\t}\n\tprivate _getWebGL2Available(canvas?: HTMLCanvasElement) {\n\t\tcanvas = canvas || document.createElement('canvas');\n\t\treturn (window.WebGL2RenderingContext && canvas.getContext(WebGLContext.WEBGL2)) != null;\n\t}\n\tdefaultWebGLRendererForCanvas(canvas: HTMLCanvasElement) {\n\t\tlet renderer = this._defaultRendererByCanvas.get(canvas);\n\t\tif (!renderer) {\n\t\t\tconst context = this.getRenderingContext(canvas)!;\n\t\t\trenderer = this.createWebGLRenderer({...WEBGL_RENDERER_DEFAULT_PARAMS, canvas, context});\n\t\t\tthis._defaultRendererByCanvas.set(canvas, renderer);\n\t\t}\n\t\treturn renderer;\n\t}\n\t// disposeWebGLRendererForCanvas(canvas: HTMLCanvasElement) {\n\t// \tconst renderer = this._defaultRendererByCanvas.get(canvas);\n\t// \tif (renderer) {\n\t// \t\trenderer.dispose();\n\t// \t\tthis._defaultRendererByCanvas.delete(canvas);\n\t// \t}\n\t// }\n\n\tcreateWebGLRenderer(params: WebGLRendererParameters) {\n\t\tconst renderer = new WebGLRenderer(params);\n\n\t\t// renderer.debug.checkShaderErrors = true;\n\t\t// renderer.debug.onShaderError = (gl, program, glVertexShader, glFragmentShader) => {\n\t\t// \tconsole.log('onShaderError', {gl, program, glVertexShader, glFragmentShader});\n\t\t// \tconsole.log(gl.getShaderSource(glVertexShader));\n\t\t// \tconsole.log(gl.getShaderSource(glFragmentShader));\n\t\t// };\n\n\t\tthis.assignIdToRenderer(renderer);\n\n\t\tthis.printDebugMessage([`create renderer:`, params]);\n\t\treturn renderer;\n\t}\n\n\tassignIdToRenderer(renderer: AbstractRenderer) {\n\t\tif ((renderer as POLYAbstractRenderer)._polygonId != null) {\n\t\t\t// we do not re-assign the id if there is already one\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextId = (nextRendererId += 1);\n\t\t(renderer as POLYAbstractRenderer)._polygonId = nextId;\n\t}\n\trendererId(renderer: AbstractRenderer) {\n\t\tconst id = (renderer as POLYAbstractRenderer)._polygonId;\n\n\t\tif (id == null) {\n\t\t\tconsole.error('renderer has no _polygonId');\n\t\t\treturn;\n\t\t}\n\t\treturn id;\n\t}\n\n\tgetRenderingContext(canvas: HTMLCanvasElement): WebGLRenderingContext | null {\n\t\tlet gl: WebGLRenderingContext | undefined = this._webGLContextByCanvas.get(canvas);\n\t\tif (gl) {\n\t\t\treturn gl;\n\t\t}\n\t\t// if (this._require_webgl2) {\n\t\tgl = this._getRenderingContextWebgl(canvas, true);\n\t\tif (!gl) {\n\t\t\tconsole.warn('failed to create webgl2 context');\n\t\t}\n\t\t// }\n\t\tif (!gl) {\n\t\t\tgl = this._getRenderingContextWebgl(canvas, false);\n\t\t}\n\n\t\tif (!gl) {\n\t\t\tconsole.error('failed to create webgl context');\n\t\t\treturn null;\n\t\t}\n\n\t\tif ((gl as CanvasContext)._polygonjsContextId == null) {\n\t\t\t(gl as CanvasContext)._polygonjsContextId = RenderersController._nextGlContextId++;\n\t\t}\n\t\tthis._webGLContextByCanvas.set(canvas, gl);\n\n\t\t// gl.getExtension('OES_standard_derivatives') // for derivative normals, but it cannot work at the moment (see node Gl/DerivativeNormals)\n\t\t// to test data texture\n\t\t// gl.getExtension('OES_texture_float')\n\t\t// gl.getExtension('OES_texture_float_linear')\n\n\t\treturn gl;\n\t}\n\tprivate _getRenderingContextWebgl(canvas: HTMLCanvasElement, webgl2: boolean): WebGLRenderingContext | undefined {\n\t\tlet contextName: WebGLContext;\n\t\tif (this.webGL2Available(canvas)) {\n\t\t\tcontextName = WebGLContext.WEBGL2;\n\t\t} else {\n\t\t\tcontextName = webgl2 ? WebGLContext.WEBGL2 : WebGLContext.WEBGL;\n\t\t}\n\t\tlet gl = canvas.getContext(contextName, CONTEXT_OPTIONS);\n\t\tif (gl) {\n\t\t\tthis.printDebugMessage(`create gl context: ${contextName}.`);\n\t\t} else {\n\t\t\tcontextName = webgl2 ? WebGLContext.EXPERIMENTAL_WEBGL2 : WebGLContext.EXPERIMENTAL_WEBGL;\n\t\t\tthis.printDebugMessage(`create gl context: ${contextName}.`);\n\t\t\tgl = canvas.getContext(contextName, CONTEXT_OPTIONS);\n\t\t}\n\n\t\treturn gl as WebGLRenderingContext | undefined;\n\t}\n\n\tcreateRenderTarget(width: number, height: number, parameters: WebGLRenderTargetOptions) {\n\t\tif (this.webGL2Available()) {\n\t\t\tconst multiSampleRenderTarget = new WebGLRenderTarget(width, height, parameters);\n\t\t\tmultiSampleRenderTarget.samples = 2;\n\t\t\treturn multiSampleRenderTarget;\n\t\t} else {\n\t\t\treturn new WebGLRenderTarget(width, height, parameters);\n\t\t}\n\t}\n\n\t/*\n\t *\n\t * Linear renderer, used for cop/builder, cop/render\n\t *\n\t */\n\tprivate _linearRenderer: WebGLRenderer | undefined;\n\tlinearRenderer() {\n\t\treturn (this._linearRenderer = this._linearRenderer || this._createLinearRenderer());\n\t}\n\tprivate _createLinearRenderer() {\n\t\tconst canvas = document.createElement('canvas');\n\t\tconst gl = this.getRenderingContext(canvas);\n\t\tif (!gl) {\n\t\t\treturn;\n\t\t}\n\t\tconst renderer = this.createWebGLRenderer({\n\t\t\t// antialias: true,\n\t\t\t// stencil: true,\n\t\t\t// depth: false,\n\t\t\talpha: true,\n\t\t\tpremultipliedAlpha: true,\n\t\t\tcanvas,\n\t\t\tcontext: gl,\n\t\t});\n\t\trenderer.outputColorSpace = NoColorSpace;\n\t\trenderer.toneMapping = NoToneMapping;\n\t\treturn renderer;\n\t}\n}\n","export class PolyLibsController {\n\tprivate _rootPrefix: string = '';\n\tprivate _root: string | null = '/three/js/libs';\n\n\troot() {\n\t\tif (this._root) {\n\t\t\tif (this._rootPrefix.length > 0) {\n\t\t\t\t// remove heading dots if any\n\t\t\t\tconst root = this._root.replace(/^(\\.)/, '');\n\t\t\t\treturn `${this._rootPrefix}${root}`;\n\t\t\t} else {\n\t\t\t\treturn this._root;\n\t\t\t}\n\t\t}\n\t}\n\tsetRoot(url: string | null) {\n\t\tthis._root = url;\n\t}\n\tsetRootPrefix(prefix: string) {\n\t\tthis._rootPrefix = prefix;\n\t}\n\t//\n\t//\n\t// KTX2\n\t//\n\t//\n\tprivate _KTX2Path: string | null = '/ktx2';\n\tKTX2Path() {\n\t\treturn this._KTX2Path;\n\t}\n\t//\n\t//\n\t// DRACO\n\t//\n\t//\n\tprivate _DRACOPath: string | null = '/draco';\n\t// setDRACOPath(path: string | null) {\n\t// \tthis._DRACOPath = path;\n\t// }\n\tDRACOPath() {\n\t\treturn this._DRACOPath;\n\t}\n\t//\n\t//\n\t// DRACO GLTF\n\t//\n\t//\n\tprivate _DRACOGLTFPath: string | null = '/draco/gltf';\n\t// setDRACOGLTFPath(path: string | null) {\n\t// \tthis._DRACOGLTFPath = path;\n\t// }\n\tDRACOGLTFPath() {\n\t\treturn this._DRACOGLTFPath;\n\t}\n\t//\n\t//\n\t// XATLAS\n\t//\n\t//\n\tprivate _XATLASPath: string | null = '/xatlas';\n\t// setDRACOGLTFPath(path: string | null) {\n\t// \tthis._DRACOGLTFPath = path;\n\t// }\n\tXATLASPath() {\n\t\treturn this._XATLASPath;\n\t}\n\t//\n\t//\n\t// OCCT\n\t//\n\t//\n\tprivate _OCCTPath: string | null = '/occt';\n\tOCCTPath() {\n\t\treturn this._OCCTPath;\n\t}\n\t//\n\t//\n\t// MANIFOLD\n\t//\n\t//\n\tprivate _ManifoldPath: string | null = '/manifold';\n\tManifoldPath() {\n\t\treturn this._ManifoldPath;\n\t}\n}\n","import {BaseNodeType} from '../nodes/_Base';\nimport {PolyEngine} from '../Poly';\nimport {CoreGraphNodeId} from '../../core/graph/CoreGraph';\nexport interface BlobUrlData {\n\tblobUrl: string;\n}\nexport interface BlobsControllerFetchNodeOptions {\n\tmultiAssetsForNode?: boolean;\n}\nexport interface FetchNodeBlobUrlOptions extends BlobsControllerFetchNodeOptions {\n\tfullUrl: string;\n\tnode: BaseNodeType;\n}\n\nexport interface FetchBlobResponse {\n\tblobWrapper?: BlobWrapper;\n\terror?: string;\n}\n\ninterface BlobWrapper {\n\tblob: Blob;\n\tblobUrl: string;\n\treferringNodeIds: Set<CoreGraphNodeId>;\n}\n\ninterface BlobData {\n\turl: string;\n\tblobWrapper: BlobWrapper;\n}\ntype BlobDataCallback = (params: BlobData) => void;\nexport class BlobsController {\n\tconstructor(private poly: PolyEngine) {}\n\n\trecording() {\n\t\treturn !this.poly.playerMode();\n\t}\n\n\tclear() {}\n\tclearBlobsForNode(node: BaseNodeType) {}\n\n\tasync setVirtualFile(file: File, uniqueId: string) {}\n\n\tasync fetchBlobGlobal(url: string): Promise<FetchBlobResponse | void> {}\n\n\ttraverse(callback: BlobDataCallback) {}\n}\n","import {PolyDictionary} from '../../types/GlobalTypes';\n\nexport class AssetUrlsController {\n\tprivate _map: PolyDictionary<string> | undefined;\n\n\tsetMap(map: PolyDictionary<string>) {\n\t\tthis._map = map;\n\t}\n\n\tremapedUrl(url: string) {\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tconst elements = url.split('?');\n\t\tconst preQuery = elements[0];\n\t\tconst query = elements[1];\n\t\tconst remapedUrl = this._map[preQuery];\n\t\tif (remapedUrl) {\n\t\t\tif (query) {\n\t\t\t\treturn `${remapedUrl}?${query}`;\n\t\t\t} else {\n\t\t\t\treturn remapedUrl;\n\t\t\t}\n\t\t}\n\t}\n}\n","interface PerformanceManager {\n\tnow: () => number;\n}\n\nexport class PolyPerformanceformanceController {\n\tprivate _performanceManager: PerformanceManager | undefined;\n\tsetPerformanceManager(p: PerformanceManager) {\n\t\tthis._performanceManager = p;\n\t}\n\tperformanceManager(): PerformanceManager {\n\t\treturn this._performanceManager || window.performance;\n\t}\n}\n","import {PolyScene} from '../scene/PolyScene';\n\nexport class ScenesRegister {\n\tprivate _lastRegisteredScene: PolyScene | undefined;\n\tprivate _scenes: Set<PolyScene> = new Set();\n\tprivate _registerTimeByScene: Map<PolyScene, number> = new Map();\n\n\tregisterScene(scene: PolyScene) {\n\t\tif (this._scenes.has(scene)) {\n\t\t\tconsole.warn('scene was already registered');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._scenes.add(scene);\n\t\tthis._registerTimeByScene.set(scene, performance.now());\n\t\tthis._updateCache();\n\t}\n\tderegisterScene(scene: PolyScene) {\n\t\tthis._scenes.delete(scene);\n\t\tthis._registerTimeByScene.delete(scene);\n\t\tthis._updateCache();\n\t}\n\tdispose() {\n\t\tconst scenes = this.scenes();\n\t\tfor (const scene of scenes) {\n\t\t\tscene.dispose();\n\t\t}\n\t}\n\tlastRegisteredScene() {\n\t\treturn this._lastRegisteredScene;\n\t}\n\tscenes() {\n\t\tconst scenes: PolyScene[] = [];\n\t\tthis._scenes.forEach((scene) => scenes.push(scene));\n\t\treturn scenes;\n\t}\n\n\tprivate _updateCache() {\n\t\tthis._lastRegisteredScene = undefined;\n\t\tthis._registerTimeByScene.forEach((registerTime, scene) => {\n\t\t\tif (this._lastRegisteredScene == undefined) {\n\t\t\t\tthis._lastRegisteredScene = scene;\n\t\t\t} else {\n\t\t\t\tconst lastRegisterTime = this._registerTimeByScene.get(this._lastRegisteredScene);\n\t\t\t\tif (registerTime != null && lastRegisterTime != null) {\n\t\t\t\t\tif (registerTime > lastRegisterTime) {\n\t\t\t\t\t\tthis._lastRegisteredScene = scene;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import type {CoreMarkerTrackingController} from '../../../core/webXR/markerTracking/MarkerTrackingController';\nimport type {CoreMarkerTrackingControllerOptions} from '../../../core/webXR/markerTracking/Common';\n\nexport type MarkerTrackingControllerCreateFunc = (\n\toptions: CoreMarkerTrackingControllerOptions\n) => CoreMarkerTrackingController;\nexport type MarkerTrackingBarCodeUrlFunc = (type: string, value: number) => string;\n\nexport interface MarkerTrackingConfig {\n\tbarcodeUrl: MarkerTrackingBarCodeUrlFunc;\n\tcreateController: MarkerTrackingControllerCreateFunc;\n\tbarCodes: {\n\t\ttypes: string[];\n\t\tvaluesCountByType: Record<string, number>;\n\t};\n}\n\nexport class PolyMarkerTrackingController {\n\tprivate _config: MarkerTrackingConfig | undefined;\n\tprivate _controller: CoreMarkerTrackingController | null = null;\n\tsetConfig(config: MarkerTrackingConfig) {\n\t\tthis._config = config;\n\t}\n\tbarCodeUrl(type: string, value: number): string | void {\n\t\tif (this._config) {\n\t\t\treturn this._config.barcodeUrl(type, value);\n\t\t}\n\t}\n\tbarCodeTypes() {\n\t\treturn this._config?.barCodes.types || [''];\n\t}\n\tconfig() {\n\t\treturn this._config;\n\t}\n\n\thasController(): boolean {\n\t\treturn this._config != null;\n\t}\n\n\tcreateController(options: CoreMarkerTrackingControllerOptions) {\n\t\tif (!this._config) {\n\t\t\treturn;\n\t\t}\n\t\tconst controller = this._config.createController(options);\n\t\tthis._controller = controller;\n\t\treturn controller;\n\t}\n\n\tcontroller() {\n\t\treturn this._controller;\n\t}\n}\n","import {PolyThirdPartyMapboxController} from './thirdParty/Mapbox';\nimport {PolyMarkerTrackingController} from './thirdParty/MarkerTracking';\n\nexport class PolyThirdPartyController {\n\t//\n\tprivate _markerTracking: PolyMarkerTrackingController | undefined;\n\tmarkerTracking() {\n\t\treturn (this._markerTracking = this._markerTracking || new PolyMarkerTrackingController());\n\t}\n\t//\n\tprivate _mapbox: PolyThirdPartyMapboxController | undefined;\n\tmapbox() {\n\t\treturn (this._mapbox = this._mapbox || new PolyThirdPartyMapboxController());\n\t}\n}\n","import {BaseNodeType} from '../nodes/_Base';\n\ntype Hook = () => void;\ntype HookByNode = Map<BaseNodeType, Hook>;\n\nexport class PolyOnSceneUpdatedHooksController {\n\tprivate _map: HookByNode = new Map();\n\tprivate _hooks: Hook[] | undefined;\n\tregisterHook(node: BaseNodeType, hook: Hook) {\n\t\tthis._map.set(node, hook);\n\t\tthis._updateCache();\n\t}\n\tunregisterHook(node: BaseNodeType) {\n\t\tthis._map.delete(node);\n\t\tthis._updateCache();\n\t}\n\trunHooks() {\n\t\tconst hooks = this._hooks;\n\t\tif (!hooks) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let hook of hooks) {\n\t\t\thook();\n\t\t}\n\t}\n\thookedNodes() {\n\t\treturn Array.from(this._map.keys());\n\t}\n\tprivate _updateCache() {\n\t\tif (this._map.size == 0) {\n\t\t\tthis._hooks = undefined;\n\t\t} else {\n\t\t\tthis._hooks = this._hooks || [];\n\t\t\tthis._hooks.length = 0;\n\t\t\tconst hooks = this._hooks;\n\t\t\tthis._map.forEach((hook) => hooks.push(hook));\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {CoreGroup} from '../../core/geometry/Group';\nimport {BaseSopNodeType} from '../nodes/sop/_Base';\nimport type {CSGOBJTesselationParams} from '../../core/geometry/modules/csg/CsgCommon';\nimport type {CADOBJTesselationParams} from '../../core/geometry/modules/cad/CadCommon';\nimport type {QUADOBJTesselationParams} from '../../core/geometry/modules/quad/QuadCommon';\nimport type {TetOBJTesselationParams} from '../../core/geometry/modules/tet/TetCommon';\n// import type {SDFOBJTesselationParams} from '../../core/geometry/modules/sdf/SDFCommon';\ninterface Params\n\textends CSGOBJTesselationParams,\n\t\tCADOBJTesselationParams,\n\t\tQUADOBJTesselationParams /*, SDFOBJTesselationParams*/,\n\t\tTetOBJTesselationParams {}\n\nexport type SpecializedChildrenHook = (\n\tdisplayNode: BaseSopNodeType,\n\tcoreGroup: CoreGroup,\n\tnewObjects: Object3D[],\n\tparams: Params\n) => boolean;\ntype HookByName = Map<string, SpecializedChildrenHook>;\n\nexport class PolySpecializedChildrenController {\n\tprivate _map: HookByName = new Map();\n\tprivate _hooks: Array<SpecializedChildrenHook> | undefined;\n\tregisterHook(hookName: string, hook: SpecializedChildrenHook) {\n\t\tthis._map.set(hookName, hook);\n\t\tthis._updateCache();\n\t}\n\tprivate _updateCache() {\n\t\tthis._hooks = [];\n\t\tconst hooks = this._hooks;\n\t\tthis._map.forEach((hook) => {\n\t\t\thooks.push(hook);\n\t\t});\n\t}\n\trunHooks(displayNode: BaseSopNodeType, coreGroup: CoreGroup, newObjects: Object3D[], params: Params): boolean {\n\t\tlet newObjectsAreDifferent = false;\n\t\tif (this._hooks) {\n\t\t\tfor (let hook of this._hooks) {\n\t\t\t\tconst _newObjectsAreDifferent = hook(displayNode, coreGroup, newObjects, params);\n\t\t\t\tif (_newObjectsAreDifferent) {\n\t\t\t\t\tnewObjectsAreDifferent = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn newObjectsAreDifferent;\n\t}\n}\n","import type {PolyEngine} from '../../../Poly';\n\ntype PolyPluginCallback = (poly: PolyEngine) => void;\ninterface PolyPluginOptions {\n\tlibraryName: string;\n\tlibraryImportPath: string;\n\t// no need yet to have a CND entry\n\t// as using the plugins is currently only possible\n\t// when doing js or ts export, NOT with html export\n}\nexport interface PolyPluginData {\n\tname: string;\n\tlibraryName: string;\n\tlibraryImportPath: string;\n}\n\nexport class PolyPlugin {\n\tconstructor(\n\t\tprotected _name: string,\n\t\tprotected _callback: PolyPluginCallback,\n\t\tprotected _options: PolyPluginOptions\n\t) {}\n\n\tname() {\n\t\treturn this._name;\n\t}\n\tlibraryName() {\n\t\treturn this._options.libraryName;\n\t}\n\n\tinit(poly: PolyEngine) {\n\t\tthis._callback(poly);\n\t}\n\n\ttoJSON(): PolyPluginData {\n\t\treturn {\n\t\t\tname: this._name,\n\t\t\tlibraryName: this._options.libraryName,\n\t\t\tlibraryImportPath: this._options.libraryImportPath,\n\t\t};\n\t}\n}\n\nexport type PolyPluginInterface = Pick<PolyPlugin, 'name' | 'libraryName' | 'init' | 'toJSON'>;\n","import {PolyEngine} from '../../../Poly';\nimport {PolyPlugin, PolyPluginData, PolyPluginInterface} from './Plugin';\nimport {BaseNodeConstructor, BaseOperationConstructor} from '../nodes/NodesRegister';\nimport {NodeContext} from '../../NodeContext';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\n\nexport interface PluginsRegisterData {\n\tplugins: PolyDictionary<PolyPluginData>;\n\tnodes: PolyDictionary<PolyDictionary<string>>;\n\toperations: PolyDictionary<PolyDictionary<string>>;\n}\nexport type WrapConfigurePolygonjsCallback = () => void | Promise<void>;\n\nexport class PluginsRegister {\n\t// private _inConfigurePolygonjs: boolean = false;\n\tprivate _configurePolygonjsPlugin: PolyPlugin | undefined;\n\n\tprivate _currentPlugin: PolyPluginInterface | undefined;\n\tprivate _pluginsByName: Map<string, PolyPluginInterface> = new Map();\n\tprivate _pluginNameByNodeContextByType: Map<NodeContext, Map<string, string>> = new Map();\n\tprivate _pluginNameByOperationContextByType: Map<NodeContext, Map<string, string>> = new Map();\n\n\tconstructor(private poly: PolyEngine) {}\n\n\tasync wrapConfigurePolygonjs(callback: WrapConfigurePolygonjsCallback) {\n\t\tthis._configurePolygonjsPlugin =\n\t\t\tthis._configurePolygonjsPlugin ||\n\t\t\tnew PolyPlugin('configurePolygonjs', () => {}, {libraryImportPath: '../PolyConfig', libraryName: ''});\n\n\t\tthis._currentPlugin = this._configurePolygonjsPlugin;\n\t\tthis._pluginsByName.set(this._currentPlugin.name(), this._currentPlugin);\n\t\tawait callback();\n\t\tthis._currentPlugin = undefined;\n\t}\n\n\tregister(plugin: PolyPluginInterface) {\n\t\tconst previousCurrentPlugin = this._currentPlugin;\n\t\tthis._currentPlugin = plugin;\n\t\tthis._pluginsByName.set(plugin.name(), plugin);\n\t\tplugin.init(this.poly);\n\t\tthis._currentPlugin = previousCurrentPlugin;\n\t}\n\tpluginByName(pluginName: string) {\n\t\treturn this._pluginsByName.get(pluginName);\n\t}\n\n\tregisterNode(node: BaseNodeConstructor) {\n\t\tif (!this._currentPlugin) {\n\t\t\treturn;\n\t\t}\n\t\tconst context = node.context();\n\t\tconst type = node.type();\n\t\tlet mapForContext = this._pluginNameByNodeContextByType.get(context);\n\t\tif (!mapForContext) {\n\t\t\tmapForContext = new Map();\n\t\t\tthis._pluginNameByNodeContextByType.set(context, mapForContext);\n\t\t}\n\t\tmapForContext.set(type, this._currentPlugin.name());\n\t}\n\tregisterOperation(operation: BaseOperationConstructor) {\n\t\tif (!this._currentPlugin) {\n\t\t\treturn;\n\t\t}\n\t\tconst context = operation.context();\n\t\tconst type = operation.type();\n\t\tlet mapForContext = this._pluginNameByOperationContextByType.get(context);\n\t\tif (!mapForContext) {\n\t\t\tmapForContext = new Map();\n\t\t\tthis._pluginNameByOperationContextByType.set(context, mapForContext);\n\t\t}\n\t\tmapForContext.set(type, this._currentPlugin.name());\n\t}\n\n\ttoJson() {\n\t\tconst data: PluginsRegisterData = {\n\t\t\tplugins: {},\n\t\t\tnodes: {},\n\t\t\toperations: {},\n\t\t};\n\n\t\tthis._pluginsByName.forEach((plugin, name) => {\n\t\t\tdata.plugins[name] = plugin.toJSON();\n\t\t});\n\n\t\tthis._pluginNameByNodeContextByType.forEach((mapForContext, context) => {\n\t\t\tdata.nodes[context] = {};\n\t\t\tmapForContext.forEach((pluginName, type) => {\n\t\t\t\tdata.nodes[context][type] = pluginName;\n\t\t\t});\n\t\t});\n\t\tthis._pluginNameByOperationContextByType.forEach((mapForContext, context) => {\n\t\t\tdata.operations[context] = {};\n\t\t\tmapForContext.forEach((pluginName, type) => {\n\t\t\t\tdata.operations[context][type] = pluginName;\n\t\t\t});\n\t\t});\n\n\t\treturn data;\n\t}\n}\n","import {Camera, Object3D} from 'three';\nimport {PolyScene} from '../../../scene/PolyScene';\nimport {PolyEngine} from '../../../Poly';\nimport {TypedViewer} from '../../../viewers/_Base';\nimport {AbstractRenderer} from '../../../viewers/Common';\n\nexport interface ViewerCallbackOptions<C extends Camera> {\n\tcamera: C;\n\tscene: PolyScene;\n\tcanvas?: HTMLCanvasElement;\n\trenderer?: AbstractRenderer;\n}\n\nexport type ViewerCreateCallback<C extends Camera> = (options: ViewerCallbackOptions<C>) => TypedViewer<C>;\n\nexport class PolyCamerasRegister {\n\tprivate _cameraNodeTypes: string[] = [];\n\tprivate _registeredViewerCreateCallbackByCamera: Map<typeof Camera, ViewerCreateCallback<Camera>> = new Map();\n\n\tconstructor(poly: PolyEngine) {}\n\n\tregisterNodeType(nodeType: string) {\n\t\tif (!this._cameraNodeTypes.includes(nodeType)) {\n\t\t\tthis._cameraNodeTypes.push(nodeType);\n\t\t}\n\t}\n\tregisteredNodeTypes() {\n\t\treturn this._cameraNodeTypes;\n\t}\n\tregister<C extends Camera>(cameraClass: any, viewerCreateCallback: ViewerCreateCallback<C>) {\n\t\tthis._registeredViewerCreateCallbackByCamera.set(cameraClass, viewerCreateCallback as any);\n\t}\n\tcreateViewer<C extends Camera>(options: ViewerCallbackOptions<C>) {\n\t\tconst callback = this._registeredViewerCreateCallbackByCamera.get(options.camera.constructor as typeof Camera);\n\t\tif (!callback) {\n\t\t\tconsole.error('no createViewer callback available');\n\t\t\tconsole.log(\n\t\t\t\t'createViewer',\n\t\t\t\toptions.camera,\n\t\t\t\toptions.camera.constructor,\n\t\t\t\tthis._registeredViewerCreateCallbackByCamera\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\treturn callback(options);\n\t}\n\tobjectRegistered(object: Object3D) {\n\t\tconst callback = this._registeredViewerCreateCallbackByCamera.get(object.constructor as typeof Camera);\n\t\treturn callback != null;\n\t}\n}\n","import {PolyEngine} from '../../../Poly';\nimport {ModuleName} from './Common';\nimport {BaseModule} from './_BaseModule';\n\nexport interface ModuleRegisterOptions {\n\tprintWarnings?: boolean;\n}\nexport class BaseModulesRegister {\n\tprivate _moduleByName: Map<ModuleName, any> = new Map();\n\tconstructor(private poly: PolyEngine) {}\n\tregister<K extends ModuleName>(moduleName: K, module: BaseModule<K>, options?: ModuleRegisterOptions) {\n\t\tlet printWarnings = options?.printWarnings;\n\t\tif (printWarnings == null) {\n\t\t\tprintWarnings = true;\n\t\t}\n\n\t\tif (this._moduleByName.has(moduleName) && printWarnings) {\n\t\t\tconsole.warn('module already registered', moduleName);\n\t\t\treturn;\n\t\t}\n\t\tthis._moduleByName.set(moduleName, module);\n\t\tmodule.onRegister(this.poly);\n\t}\n\n\tmoduleNames() {\n\t\tconst list: ModuleName[] = [];\n\t\tthis._moduleByName.forEach((module, moduleName) => {\n\t\t\tlist.push(moduleName);\n\t\t});\n\t\treturn list;\n\t}\n}\n","// import {ModulesMap} from './All';\nimport {BaseModulesRegister} from './_BaseRegister';\n\nexport class DynamicModulesRegister extends BaseModulesRegister {\n\t// module<K extends keyof ModulesMap>(moduleName: K): ModulesMap[K] {\n\t// \treturn super.module(moduleName as any);\n\t// }\n}\n","import {ExpressionType} from '../../../expressions/methods/Common';\nimport {BaseMethod} from '../../../expressions/methods/_Base';\n\nexport class BaseExpressionRegister {\n\tprivate _methodsNames: ExpressionType[] = [];\n\tprivate _methodsByName: Map<ExpressionType, typeof BaseMethod> = new Map();\n\n\tregister(expression: typeof BaseMethod, name: ExpressionType) {\n\t\tthis._methodsNames.push(name);\n\t\tthis._methodsByName.set(name, expression);\n\t}\n\tgetMethod(name: ExpressionType) {\n\t\treturn this._methodsByName.get(name);\n\t}\n\tavailableMethods(): ExpressionType[] {\n\t\treturn this._methodsNames;\n\t}\n}\n","import {BaseExpressionRegister} from './_BaseRegister';\nimport {ExpressionMap} from './All';\n\nexport class ExpressionRegister extends BaseExpressionRegister {\n\toverride getMethod<K extends keyof ExpressionMap>(name: K): ExpressionMap[K] | undefined {\n\t\treturn super.getMethod(name as any);\n\t}\n}\n","import {AssemblersMap} from './All';\nimport {BaseAssemblersRegister, AssemblerName} from './_BaseRegister';\nimport {BaseNodeType} from '../../../nodes/_Base';\n\nexport class AssemblersRegister extends BaseAssemblersRegister {\n\tassembler<K extends keyof AssemblersMap>(node: BaseNodeType, name: K): AssemblersMap[K]['controller'] | undefined {\n\t\tconst pair = this._controllerAssemblerByName.get(name as AssemblerName);\n\t\tif (pair) {\n\t\t\tconst {controller, assembler} = pair;\n\t\t\treturn new controller(node, assembler);\n\t\t}\n\t\treturn pair;\n\t}\n\n\toverride unregister<K extends keyof AssemblersMap>(name: K) {\n\t\tconst pair = this._controllerAssemblerByName.get(name as AssemblerName);\n\t\tsuper.unregister(name as AssemblerName);\n\t\treturn pair;\n\t}\n}\n","import {BaseNodeClass, BaseNodeType} from '../../../nodes/_Base';\nimport {BaseOperation} from '../../../operations/_Base';\nimport {NodeContext} from '../../NodeContext';\nimport {PolyEngine} from '../../../Poly';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {CoreType} from '../../../../core/Type';\n\nexport interface OperationRegisterOptions {\n\tprintWarnings?: boolean;\n}\nexport interface NodeRegisterOptions {\n\tonly?: string[];\n\texcept?: string[];\n\tuserAllowed?: boolean;\n\tpolyNode?: boolean;\n\tprintWarnings?: boolean;\n}\n\n// export interface BaseNodeConstructor {\n// \tnew (): BaseNode;\n// }\n\nexport type BaseNodeConstructor = typeof BaseNodeClass;\ntype NodeConstructorByType = Map<string, BaseNodeConstructor>;\ntype NodeConstructorByTypeByContext = Map<NodeContext, NodeConstructorByType>;\ntype TabMenuByTypeByContext = Map<NodeContext, Map<string, string[]>>;\ntype RegisterOptionsByTypeByContext = Map<NodeContext, Map<string, NodeRegisterOptions>>;\n\nexport type BaseOperationConstructor = typeof BaseOperation;\ntype OperationConstructorByType = Map<string, BaseOperationConstructor>;\ntype OperationConstructorByTypeByContext = Map<NodeContext, OperationConstructorByType>;\n\nexport type OnNodeRegisterCallback = (poly: PolyEngine) => void;\nexport type OnOperationRegisterCallback = (poly: PolyEngine) => void;\n\nexport class NodesRegister {\n\tprivate _nodesRegister: NodeConstructorByTypeByContext = new Map();\n\tprivate _nodesRegisterCategories: TabMenuByTypeByContext = new Map();\n\tprivate _nodesRegisterOptions: RegisterOptionsByTypeByContext = new Map();\n\n\tconstructor(private poly: PolyEngine) {}\n\n\tprivate static type(node: BaseNodeType | BaseNodeConstructor) {\n\t\treturn this.filterType(node.type());\n\t}\n\tprivate static filterType(nodeType: string) {\n\t\treturn nodeType.toLowerCase();\n\t}\n\n\tregister(node: BaseNodeConstructor, tabMenuCategory?: string | string[], options?: NodeRegisterOptions) {\n\t\tconst context = node.context();\n\t\t// if (node.type()[0].toLowerCase() != node.type()[0]) {\n\t\t// \tconsole.warn(`node type '${node.context()}/${node.type()}' should start with a lower case letter`);\n\t\t// }\n\t\tconst nodeType = NodesRegister.type(node);\n\t\tlet printWarnings = options?.printWarnings;\n\t\tif (printWarnings == null) {\n\t\t\tprintWarnings = true;\n\t\t}\n\n\t\tlet current_nodes_for_context = this._nodesRegister.get(context);\n\t\tif (!current_nodes_for_context) {\n\t\t\tcurrent_nodes_for_context = new Map();\n\t\t\tthis._nodesRegister.set(context, current_nodes_for_context);\n\t\t}\n\n\t\tconst alreadyRegisteredNode = current_nodes_for_context.get(nodeType);\n\t\tif (alreadyRegisteredNode) {\n\t\t\t// if the node that is already registered is a polyNode, it can be overwritten by another polyNode.\n\t\t\tconst isAlreadyRegisteredNodePolyNode =\n\t\t\t\tthis._nodesRegisterOptions.get(context)?.get(nodeType)?.polyNode == true;\n\t\t\tconst isNewNodePolyNode = options?.polyNode == true;\n\t\t\tif (isAlreadyRegisteredNodePolyNode && isNewNodePolyNode) {\n\t\t\t\t// we don't show a warning or return if both are polyNodes\n\t\t\t} else {\n\t\t\t\tif (printWarnings) {\n\t\t\t\t\tconsole.warn(`node ${context}/${nodeType} already registered`);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcurrent_nodes_for_context.set(nodeType, node);\n\t\tif (node.onRegister) {\n\t\t\tnode.onRegister(this.poly);\n\t\t}\n\n\t\tif (tabMenuCategory) {\n\t\t\tlet current_categories = this._nodesRegisterCategories.get(context);\n\t\t\tif (!current_categories) {\n\t\t\t\tcurrent_categories = new Map();\n\t\t\t\tthis._nodesRegisterCategories.set(context, current_categories);\n\t\t\t}\n\t\t\tconst savedCategory = CoreType.isArray(tabMenuCategory) ? tabMenuCategory : [tabMenuCategory];\n\t\t\tcurrent_categories.set(nodeType, savedCategory);\n\t\t}\n\n\t\tif (options) {\n\t\t\tlet current_options = this._nodesRegisterOptions.get(context);\n\t\t\tif (!current_options) {\n\t\t\t\tcurrent_options = new Map();\n\t\t\t\tthis._nodesRegisterOptions.set(context, current_options);\n\t\t\t}\n\t\t\tcurrent_options.set(nodeType, options);\n\t\t}\n\t\tthis.poly.pluginsRegister.registerNode(node);\n\t}\n\tderegister(context: NodeContext, nodeType: string) {\n\t\tnodeType = NodesRegister.filterType(nodeType);\n\t\tthis._nodesRegister.get(context)?.delete(nodeType);\n\t\tthis._nodesRegisterCategories.get(context)?.delete(nodeType);\n\t\tthis._nodesRegisterOptions.get(context)?.delete(nodeType);\n\t}\n\tisRegistered(context: NodeContext, nodeType: string): boolean {\n\t\tconst nodes_for_context = this._nodesRegister.get(context);\n\t\tif (!nodes_for_context) {\n\t\t\treturn false;\n\t\t}\n\t\tnodeType = NodesRegister.filterType(nodeType);\n\t\treturn nodes_for_context.get(nodeType) != null;\n\t}\n\tnodeOptions(context: NodeContext, nodeType: string): NodeRegisterOptions | undefined {\n\t\tnodeType = NodesRegister.filterType(nodeType);\n\t\treturn this._nodesRegisterOptions.get(context)?.get(nodeType);\n\t}\n\tregisteredNodesForParentNode(parentNode: BaseNodeType) {\n\t\tconst context = parentNode.childrenController?.context;\n\t\tif (!context) {\n\t\t\treturn [];\n\t\t}\n\t\tconst map = this._nodesRegister.get(context);\n\t\tif (map) {\n\t\t\tconst nodes_for_context: BaseNodeConstructor[] = [];\n\t\t\tthis._nodesRegister.get(context)?.forEach((node, type) => {\n\t\t\t\tnodes_for_context.push(node);\n\t\t\t});\n\t\t\treturn nodes_for_context.filter((node) => {\n\t\t\t\tconst nodeType = NodesRegister.type(node);\n\t\t\t\tconst options = this.nodeOptions(context, nodeType);\n\t\t\t\tif (!options) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tconst parentOptions = this.nodeOptions(parentNode.context(), parentNode.type());\n\t\t\t\t\tif (parentOptions?.polyNode == true) {\n\t\t\t\t\t\t// if parentNode is a polyNode, we should be able to create any node,\n\t\t\t\t\t\t// otherwise we would not be able to create gl/subnetInput and gl/subnetOutput\n\t\t\t\t\t\t// which would be problematic\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tconst option_only = options['only'];\n\t\t\t\t\tconst option_except = options['except'];\n\t\t\t\t\tconst context_and_type = `${parentNode.context()}/${parentNode.type()}`;\n\t\t\t\t\tif (option_only) {\n\t\t\t\t\t\treturn option_only.includes(context_and_type);\n\t\t\t\t\t}\n\t\t\t\t\tif (option_except) {\n\t\t\t\t\t\treturn !option_except.includes(context_and_type);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tregisteredNodes(parentNode: BaseNodeType): PolyDictionary<BaseNodeConstructor> {\n\t\tconst nodesByType: PolyDictionary<BaseNodeConstructor> = {};\n\t\tconst nodes = this.registeredNodesForParentNode(parentNode);\n\t\tfor (let node of nodes) {\n\t\t\tconst nodeType = NodesRegister.type(node);\n\t\t\tnodesByType[nodeType] = node;\n\t\t}\n\t\treturn nodesByType;\n\t}\n\tregisteredCategory(context: NodeContext, nodeType: string) {\n\t\tnodeType = NodesRegister.filterType(nodeType);\n\t\treturn this._nodesRegisterCategories.get(context)?.get(nodeType);\n\t}\n\n\tmap() {\n\t\treturn this._nodesRegister;\n\t}\n}\n\nexport class OperationsRegister {\n\tprivate _operation_register: OperationConstructorByTypeByContext = new Map();\n\n\tconstructor(private poly: PolyEngine) {}\n\n\tprivate static type(node: BaseOperationConstructor) {\n\t\treturn this.filterType(node.type());\n\t}\n\tprivate static filterType(nodeType: string) {\n\t\treturn nodeType.toLowerCase();\n\t}\n\n\tregister(operation: BaseOperationConstructor, options?: OperationRegisterOptions) {\n\t\tlet printWarnings = options?.printWarnings;\n\t\tif (printWarnings == null) {\n\t\t\tprintWarnings = true;\n\t\t}\n\n\t\tconst context = operation.context();\n\t\tlet current_operations_for_context = this._operation_register.get(context);\n\t\tif (!current_operations_for_context) {\n\t\t\tcurrent_operations_for_context = new Map();\n\t\t\tthis._operation_register.set(context, current_operations_for_context);\n\t\t}\n\n\t\tconst operationType = OperationsRegister.type(operation);\n\t\tconst already_registered_operation = current_operations_for_context.get(operationType);\n\t\tif (already_registered_operation) {\n\t\t\tif (printWarnings) {\n\t\t\t\tconst message = `operation ${context}/${operationType} already registered`;\n\t\t\t\tconsole.warn(message);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tcurrent_operations_for_context.set(operationType, operation);\n\t\tif (operation.onRegister) {\n\t\t\toperation.onRegister(this.poly);\n\t\t}\n\t\tthis.poly.pluginsRegister.registerOperation(operation);\n\t}\n\n\tregisteredOperationsForContextAndParentType(context: NodeContext, parentNodeType: string) {\n\t\tconst map = this._operation_register.get(context);\n\t\tif (map) {\n\t\t\tconst nodes_for_context: BaseOperationConstructor[] = [];\n\t\t\tthis._operation_register.get(context)?.forEach((operation, type) => {\n\t\t\t\tnodes_for_context.push(operation);\n\t\t\t});\n\t\t\treturn nodes_for_context;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tregisteredOperation(context: NodeContext, operationType: string): BaseOperationConstructor | undefined {\n\t\tconst current_operations_for_context = this._operation_register.get(context);\n\t\tif (current_operations_for_context) {\n\t\t\toperationType = OperationsRegister.filterType(operationType);\n\t\t\treturn current_operations_for_context.get(operationType);\n\t\t}\n\t}\n}\n","import {BaseNamedFunction} from '../../../functions/_Base';\n\nexport interface NamedFunctionRegisterOptions {\n\tprintWarnings?: boolean;\n}\nexport class BaseNamedFunctionRegister {\n\tprotected _functionByName: Map<string, typeof BaseNamedFunction> = new Map();\n\n\tregister(namedFunction: typeof BaseNamedFunction, options?: NamedFunctionRegisterOptions) {\n\t\tlet printWarnings = options?.printWarnings;\n\t\tif (printWarnings == null) {\n\t\t\tprintWarnings = true;\n\t\t}\n\n\t\tconst type = namedFunction.type();\n\t\tif (this._functionByName.has(type) && printWarnings) {\n\t\t\tconsole.warn(`namedFunction already registered`, type);\n\t\t}\n\n\t\tthis._functionByName.set(type, namedFunction);\n\t}\n}\n","import {JsLinesCollectionController} from '../../../nodes/js/code/utils/JsLinesCollectionController';\nimport {BaseNodeType} from '../../../nodes/_Base';\nimport {NamedFunctionMap} from './All';\nimport {BaseNamedFunctionRegister} from './_BaseRegister';\n\nexport class NamedFunctionRegister extends BaseNamedFunctionRegister {\n\tgetFunction<K extends keyof NamedFunctionMap>(\n\t\tfunctionName: K,\n\t\tnode: BaseNodeType,\n\t\tshadersCollectionController?: JsLinesCollectionController\n\t): NamedFunctionMap[K] {\n\t\tconst funcClass = this._functionByName.get(functionName);\n\t\tif (!funcClass) {\n\t\t\tconsole.error(`function not registered:'${functionName}'`);\n\t\t}\n\t\tconst func = new (funcClass as any)(node, shadersCollectionController);\n\t\treturn func;\n\t\t// return func as unknown as NamedFunctionMap[K];\n\t}\n}\n","import {BaseNodeClass, BaseNodeType} from './nodes/_Base';\nimport {PolyScene} from './scene/PolyScene';\nimport {RenderersController} from './poly/RenderersController';\nimport {PolyLibsController} from './poly/PolyLibsController';\n\nimport {NodeContext} from './poly/NodeContext';\nimport {BaseCoreLogger} from '../core/logger/Base';\nimport {BaseOperation} from './operations/_Base';\nimport {PolyDictionary} from '../types/GlobalTypes';\nimport {BlobsController} from './poly/BlobsController';\nimport {AssetUrlsController} from './poly/AssetUrlsController';\n// import {SelfContainedScenesLoader} from './poly/SelfContainedSceneLoader';\nimport {PolyPerformanceformanceController} from './poly/PerformanceController';\nimport {ScenesRegister} from './poly/ScenesRegister';\n// import {LogoController} from './poly/LogoController';\nimport {PolyThirdPartyController} from './poly/ThirdPartyController';\nimport {PolyOnObjectsAddRemoveHooksController} from './poly/PolyOnObjectsAddRemoveHooksController';\nimport {PolyOnSceneUpdatedHooksController} from './poly/PolyOnSceneUpdatedHooksController';\nimport {PolySpecializedChildrenController} from './poly/PolySpecializedChildrenController';\nimport {Camera} from 'three';\n\n// registers\nimport {PluginsRegister, WrapConfigurePolygonjsCallback} from './poly/registers/plugins/PluginsRegister';\nimport {PolyCamerasRegister, ViewerCreateCallback} from './poly/registers/cameras/PolyCamerasRegister';\nimport {BaseModule} from './poly/registers/modules/_BaseModule';\nimport {ModuleName} from './poly/registers/modules/Common';\nimport {DynamicModulesRegister} from './poly/registers/modules/DynamicModulesRegister';\nimport {ExpressionRegister} from './poly/registers/expressions/ExpressionRegister';\nimport {AssemblersRegister} from './poly/registers/assemblers/AssemblersRegistry';\nimport {\n\tNodesRegister,\n\tNodeRegisterOptions,\n\tOperationRegisterOptions,\n\tBaseNodeConstructor,\n\tOperationsRegister,\n} from './poly/registers/nodes/NodesRegister';\nimport {PolyPluginInterface} from './poly/registers/plugins/Plugin';\nimport {NamedFunctionRegister} from './poly/registers/functions/FunctionsRegister';\nimport {NamedFunctionRegisterOptions} from './poly/registers/functions/_BaseRegister';\nimport {ModuleRegisterOptions} from './poly/registers/modules/_BaseRegister';\nimport {BaseNamedFunction} from './functions/_Base';\n//\n\ndeclare global {\n\tinterface Window {\n\t\t__POLYGONJS_POLY_INSTANCE__: PolyEngine;\n\t}\n}\n\n// having __POLYGONJS_VERSION__ here really adds friction\n// for compiling this after exporting from the editor\n// UPDATE: it can be used now as the editor does not compile anymore\n// and we would use that to check if the editor is the same version as the installed one\ndeclare var __POLYGONJS_VERSION__: string;\nconst POLYGONJS_VERSION = __POLYGONJS_VERSION__;\nexport class PolyEngine {\n\t// static _instance: Poly | undefined;\n\tpublic readonly renderersController: RenderersController = new RenderersController();\n\tpublic readonly scenesRegister: ScenesRegister = new ScenesRegister();\n\tpublic readonly nodesRegister: NodesRegister = new NodesRegister(this);\n\tpublic readonly operationsRegister: OperationsRegister = new OperationsRegister(this);\n\tpublic readonly expressionsRegister: ExpressionRegister = new ExpressionRegister();\n\tpublic readonly assemblersRegister: AssemblersRegister = new AssemblersRegister();\n\tpublic readonly pluginsRegister: PluginsRegister = new PluginsRegister(this);\n\tpublic readonly camerasRegister: PolyCamerasRegister = new PolyCamerasRegister(this);\n\tpublic readonly modulesRegister: DynamicModulesRegister = new DynamicModulesRegister(this);\n\tpublic readonly namedFunctionsRegister: NamedFunctionRegister = new NamedFunctionRegister();\n\tpublic readonly blobs: BlobsController = new BlobsController(this);\n\tpublic readonly assetUrls: AssetUrlsController = new AssetUrlsController();\n\t// public readonly logo = new LogoController();\n\tpublic readonly thirdParty = new PolyThirdPartyController();\n\tpublic readonly onObjectsAddRemoveHooks = new PolyOnObjectsAddRemoveHooksController();\n\tpublic readonly onSceneUpdatedHooks = new PolyOnSceneUpdatedHooksController();\n\tpublic readonly specializedChildren = new PolySpecializedChildrenController();\n\t// public readonly selfContainedScenesLoader: SelfContainedScenesLoader = new SelfContainedScenesLoader();\n\tpublic readonly performance: PolyPerformanceformanceController = new PolyPerformanceformanceController();\n\tscenesByUuid: PolyDictionary<PolyScene> = {};\n\t_env: string | undefined;\n\tprivate _playerMode: boolean = true;\n\tprivate _logger: BaseCoreLogger | null = null;\n\n\tstatic _instance_() {\n\t\t// we are using a window globals to ensure 2 instances can never be created\n\t\t// even when the js are compiled by different means,\n\t\t// which can happen in the editor.\n\t\tif (window.__POLYGONJS_POLY_INSTANCE__) {\n\t\t\treturn window.__POLYGONJS_POLY_INSTANCE__;\n\t\t} else {\n\t\t\tconst instance = new PolyEngine();\n\t\t\twindow.__POLYGONJS_POLY_INSTANCE__ = instance;\n\t\t\t// this._instance = instance\n\t\t\treturn window.__POLYGONJS_POLY_INSTANCE__;\n\t\t}\n\t\t// return (this._instance = this._instance || new Poly());\n\t}\n\tprivate constructor() {}\n\n\tversion() {\n\t\treturn POLYGONJS_VERSION;\n\t}\n\n\tsetPlayerMode(mode: boolean) {\n\t\tthis._playerMode = mode;\n\t}\n\tplayerMode() {\n\t\treturn this._playerMode;\n\t}\n\tdispose() {\n\t\tthis.scenesRegister.dispose();\n\t\tthis.renderersController.dispose();\n\t}\n\n\tregisterNode(node: BaseNodeConstructor, tab_menu_category?: string | string[], options?: NodeRegisterOptions) {\n\t\tthis.nodesRegister.register(node, tab_menu_category, options);\n\t}\n\tregisterOperation(operation: typeof BaseOperation, options?: OperationRegisterOptions) {\n\t\tthis.operationsRegister.register(operation, options);\n\t}\n\tregisterNamedFunction(namedFunction: typeof BaseNamedFunction, options?: NamedFunctionRegisterOptions) {\n\t\tthis.namedFunctionsRegister.register(namedFunction, options);\n\t}\n\n\tregisterCamera<C extends Camera>(cameraClass: any, viewerCreateCallback: ViewerCreateCallback<C>) {\n\t\tthis.camerasRegister.register(cameraClass, viewerCreateCallback);\n\t}\n\tregisterCameraNodeType(nodeType: string) {\n\t\tthis.camerasRegister.registerNodeType(nodeType);\n\t}\n\tregisterPlugin(plugin: PolyPluginInterface) {\n\t\tthis.pluginsRegister.register(plugin);\n\t}\n\twrapConfigurePolygonjs(callback: WrapConfigurePolygonjsCallback) {\n\t\tthis.pluginsRegister.wrapConfigurePolygonjs(callback);\n\t}\n\n\tregisteredNodes(parentNode: BaseNodeType): PolyDictionary<typeof BaseNodeClass> {\n\t\treturn this.nodesRegister.registeredNodes(parentNode);\n\t}\n\tregisteredOperation(parent_context: NodeContext, operation_type: string): typeof BaseOperation | undefined {\n\t\treturn this.operationsRegister.registeredOperation(parent_context, operation_type);\n\t}\n\t// registeredCameraTypes() {\n\t// \treturn this.camerasRegister.registeredTypes();\n\t// }\n\tregisterModule(module: BaseModule<ModuleName>, options?: ModuleRegisterOptions) {\n\t\tthis.modulesRegister.register(module.moduleName, module /*.module()*/, options);\n\t}\n\n\tinWorkerThread() {\n\t\treturn false;\n\t}\n\n\t//\n\t//\n\t// LIBS\n\t//\n\t//\n\tprivate _libs_controller: PolyLibsController | undefined;\n\tget libs() {\n\t\treturn (this._libs_controller = this._libs_controller || new PolyLibsController());\n\t}\n\n\t//\n\t//\n\t// ENV\n\t//\n\t//\n\tsetEnv(env: string) {\n\t\tthis._env = env;\n\t}\n\tenv() {\n\t\treturn this._env;\n\t}\n\n\t//\n\t//\n\t// LOGGER\n\t//\n\t//\n\tsetLogger(logger: BaseCoreLogger | null) {\n\t\tthis._logger = logger;\n\t}\n\tlogger() {\n\t\treturn this._logger;\n\t}\n\n\tlog(message?: any, ...optionalParams: any[]) {\n\t\tthis._logger?.log(...[message, ...optionalParams]);\n\t}\n\twarn(message?: any, ...optionalParams: any[]) {\n\t\tthis._logger?.warn(...[message, ...optionalParams]);\n\t}\n\terror(message?: any, ...optionalParams: any[]) {\n\t\tthis._logger?.error(...[message, ...optionalParams]);\n\t}\n}\n\nexport const Poly = PolyEngine._instance_();\n","import {BaseMethodFindDependencyArgs} from './methods/_Base';\nimport {DecomposedPath} from '../../core/DecomposedPath';\nimport {CoreGraphNode} from '../../core/graph/CoreGraphNode';\nimport {BaseParamType} from '../params/_Base';\nimport {BaseNodeType} from '../nodes/_Base';\nimport jsep from 'jsep';\nimport {CoreType} from '../../core/Type';\n\nexport class MethodDependency extends CoreGraphNode {\n\tpublic jsep_node: jsep.Expression | undefined;\n\tpublic resolved_graph_node: CoreGraphNode | undefined;\n\tpublic unresolved_path: string | undefined;\n\tprivate _updateFromNameChangeBound = this._updateFromNameChange.bind(this);\n\n\tconstructor(\n\t\tpublic param: BaseParamType,\n\t\tpublic pathArgs: BaseMethodFindDependencyArgs,\n\t\tpublic decomposedPath?: DecomposedPath\n\t) {\n\t\tsuper(param.scene(), 'MethodDependency');\n\n\t\tparam.expressionController?.registerMethodDependency(this);\n\n\t\tthis.addPostDirtyHook('_updateFromNameChange', this._updateFromNameChangeBound);\n\t}\n\tprivate _updateFromNameChange(trigger?: CoreGraphNode) {\n\t\tif (trigger && this.decomposedPath) {\n\t\t\tconst node = trigger as BaseNodeType;\n\t\t\tthis.decomposedPath.updateFromNameChange(node);\n\t\t\tconst new_path = this.decomposedPath.toPath();\n\n\t\t\tconst literal = this.jsep_node as jsep.Literal;\n\t\t\tconst {indexOrPath} = this.pathArgs;\n\t\t\tif (literal && CoreType.isString(indexOrPath)) {\n\t\t\t\tliteral.value = `${literal.value}`.replace(`${indexOrPath}`, new_path);\n\t\t\t\tliteral.raw = literal.raw.replace(`${indexOrPath}`, new_path);\n\t\t\t}\n\t\t\tif (this.param.expressionController) {\n\t\t\t\tthis.param.expressionController.updateFromMethodDependencyNameChange();\n\t\t\t}\n\t\t}\n\t}\n\treset() {\n\t\tthis.graphDisconnectPredecessors();\n\t}\n\n\tlisten_for_name_changes() {\n\t\tif (this.jsep_node && this.decomposedPath) {\n\t\t\tconst nodes: BaseNodeType[] = [];\n\t\t\tthis.decomposedPath.namedNodes(nodes);\n\t\t\tfor (const nodeInPath of nodes) {\n\t\t\t\tif (nodeInPath) {\n\t\t\t\t\tconst node = nodeInPath as BaseNodeType;\n\t\t\t\t\tif (node.nameController) {\n\t\t\t\t\t\tthis.addGraphInput(node.nameController.graphNode());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_jsep_node(jsep_node: jsep.Expression) {\n\t\tthis.jsep_node = jsep_node;\n\t}\n\tset_resolved_graph_node(node: CoreGraphNode) {\n\t\tthis.resolved_graph_node = node;\n\t}\n\tset_unresolved_path(path: string) {\n\t\tthis.unresolved_path = path;\n\t}\n\n\tstatic create(\n\t\tparam: BaseParamType,\n\t\tpathArgs: BaseMethodFindDependencyArgs,\n\t\tnode: CoreGraphNode,\n\t\tdecomposedPath?: DecomposedPath\n\t) {\n\t\t// if(!decomposed_path){\n\t\t// \tconsole.log('nodes_in_path', decomposed_path.named_nodes);\n\t\t// \tfor (let node_in_path of decomposed_path.named_nodes) {\n\t\t// \t\tif (node_in_path) {\n\t\t// \t\t\tdecomposed_path.add_node(node_in_path.name, node_in_path);\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\tconst instance = new MethodDependency(param, pathArgs, decomposedPath);\n\t\tif (node) {\n\t\t\tinstance.set_resolved_graph_node(node);\n\t\t} else {\n\t\t\tconst {indexOrPath} = pathArgs;\n\t\t\tif (CoreType.isString(indexOrPath)) {\n\t\t\t\tinstance.set_unresolved_path(indexOrPath);\n\t\t\t}\n\t\t}\n\t\treturn instance;\n\t}\n}\n","/**\n * @implements {IHooks}\n */\nclass Hooks {\n\t/**\n\t * @callback HookCallback\n\t * @this {*|Jsep} this\n\t * @param {Jsep} env\n\t * @returns: void\n\t */\n\t/**\n\t * Adds the given callback to the list of callbacks for the given hook.\n\t *\n\t * The callback will be invoked when the hook it is registered for is run.\n\t *\n\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t *\n\t * @param {string|object} name The name of the hook, or an object of callbacks keyed by name\n\t * @param {HookCallback|boolean} callback The callback function which is given environment variables.\n\t * @param {?boolean} [first=false] Will add the hook to the top of the list (defaults to the bottom)\n\t * @public\n\t */\n\tadd(name, callback, first) {\n\t\tif (typeof arguments[0] != 'string') {\n\t\t\t// Multiple hook callbacks, keyed by name\n\t\t\tfor (let name in arguments[0]) {\n\t\t\t\tthis.add(name, arguments[0][name], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t(Array.isArray(name) ? name : [name]).forEach(function (name) {\n\t\t\t\tthis[name] = this[name] || [];\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tthis[name][first ? 'unshift' : 'push'](callback);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t}\n\t}\n\n\t/**\n\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t *\n\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t *\n\t * @param {string} name The name of the hook.\n\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t * @public\n\t */\n\trun(name, env) {\n\t\tthis[name] = this[name] || [];\n\t\tthis[name].forEach(function (callback) {\n\t\t\tcallback.call(env && env.context ? env.context : env, env);\n\t\t});\n\t}\n}\n\n/**\n * @implements {IPlugins}\n */\nclass Plugins {\n\tconstructor(jsep) {\n\t\tthis.jsep = jsep;\n\t\tthis.registered = {};\n\t}\n\n\t/**\n\t * @callback PluginSetup\n\t * @this {Jsep} jsep\n\t * @returns: void\n\t */\n\t/**\n\t * Adds the given plugin(s) to the registry\n\t *\n\t * @param {object} plugins\n\t * @param {string} plugins.name The name of the plugin\n\t * @param {PluginSetup} plugins.init The init function\n\t * @public\n\t */\n\tregister(...plugins) {\n\t\tplugins.forEach((plugin) => {\n\t\t\tif (typeof plugin !== 'object' || !plugin.name || !plugin.init) {\n\t\t\t\tthrow new Error('Invalid JSEP plugin format');\n\t\t\t}\n\t\t\tif (this.registered[plugin.name]) {\n\t\t\t\t// already registered. Ignore.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tplugin.init(this.jsep);\n\t\t\tthis.registered[plugin.name] = plugin;\n\t\t});\n\t}\n}\n\n//     JavaScript Expression Parser (JSEP) 1.0.2\n\nclass Jsep {\n\t/**\n\t * @returns {string}\n\t */\n\tstatic get version() {\n\t\t// To be filled in by the template\n\t\treturn '1.0.2';\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tstatic toString() {\n\t\treturn 'JavaScript Expression Parser (JSEP) v' + Jsep.version;\n\t};\n\n\t// ==================== CONFIG ================================\n\t/**\n\t * @method addUnaryOp\n\t * @param {string} op_name The name of the unary op to add\n\t * @returns {Jsep}\n\t */\n\tstatic addUnaryOp(op_name) {\n\t\tJsep.max_unop_len = Math.max(op_name.length, Jsep.max_unop_len);\n\t\tJsep.unary_ops[op_name] = 1;\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method jsep.addBinaryOp\n\t * @param {string} op_name The name of the binary op to add\n\t * @param {number} precedence The precedence of the binary op (can be a float). Higher number = higher precedence\n\t * @returns {Jsep}\n\t */\n\tstatic addBinaryOp(op_name, precedence) {\n\t\tJsep.max_binop_len = Math.max(op_name.length, Jsep.max_binop_len);\n\t\tJsep.binary_ops[op_name] = precedence;\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method addIdentifierChar\n\t * @param {string} char The additional character to treat as a valid part of an identifier\n\t * @returns {Jsep}\n\t */\n\tstatic addIdentifierChar(char) {\n\t\tJsep.additional_identifier_chars.add(char);\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method addLiteral\n\t * @param {string} literal_name The name of the literal to add\n\t * @param {*} literal_value The value of the literal\n\t * @returns {Jsep}\n\t */\n\tstatic addLiteral(literal_name, literal_value) {\n\t\tJsep.literals[literal_name] = literal_value;\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method removeUnaryOp\n\t * @param {string} op_name The name of the unary op to remove\n\t * @returns {Jsep}\n\t */\n\tstatic removeUnaryOp(op_name) {\n\t\tdelete Jsep.unary_ops[op_name];\n\t\tif (op_name.length === Jsep.max_unop_len) {\n\t\t\tJsep.max_unop_len = Jsep.getMaxKeyLen(Jsep.unary_ops);\n\t\t}\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method removeAllUnaryOps\n\t * @returns {Jsep}\n\t */\n\tstatic removeAllUnaryOps() {\n\t\tJsep.unary_ops = {};\n\t\tJsep.max_unop_len = 0;\n\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method removeIdentifierChar\n\t * @param {string} char The additional character to stop treating as a valid part of an identifier\n\t * @returns {Jsep}\n\t */\n\tstatic removeIdentifierChar(char) {\n\t\tJsep.additional_identifier_chars.delete(char);\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method removeBinaryOp\n\t * @param {string} op_name The name of the binary op to remove\n\t * @returns {Jsep}\n\t */\n\tstatic removeBinaryOp(op_name) {\n\t\tdelete Jsep.binary_ops[op_name];\n\n\t\tif (op_name.length === Jsep.max_binop_len) {\n\t\t\tJsep.max_binop_len = Jsep.getMaxKeyLen(Jsep.binary_ops);\n\t\t}\n\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method removeAllBinaryOps\n\t * @returns {Jsep}\n\t */\n\tstatic removeAllBinaryOps() {\n\t\tJsep.binary_ops = {};\n\t\tJsep.max_binop_len = 0;\n\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method removeLiteral\n\t * @param {string} literal_name The name of the literal to remove\n\t * @returns {Jsep}\n\t */\n\tstatic removeLiteral(literal_name) {\n\t\tdelete Jsep.literals[literal_name];\n\t\treturn Jsep;\n\t}\n\n\t/**\n\t * @method removeAllLiterals\n\t * @returns {Jsep}\n\t */\n\tstatic removeAllLiterals() {\n\t\tJsep.literals = {};\n\n\t\treturn Jsep;\n\t}\n\t// ==================== END CONFIG ============================\n\n\n\t/**\n\t * @returns {string}\n\t */\n\tget char() {\n\t\treturn this.expr.charAt(this.index);\n\t}\n\n\t/**\n\t * @returns {number}\n\t */\n\tget code() {\n\t\treturn this.expr.charCodeAt(this.index);\n\t};\n\n\n\t/**\n\t * @param {string} expr a string with the passed in express\n\t * @returns Jsep\n\t */\n\tconstructor(expr) {\n\t\t// `index` stores the character number we are currently at\n\t\t// All of the gobbles below will modify `index` as we move along\n\t\tthis.expr = expr;\n\t\tthis.index = 0;\n\t}\n\n\t/**\n\t * static top-level parser\n\t * @returns {jsep.Expression}\n\t */\n\tstatic parse(expr) {\n\t\treturn (new Jsep(expr)).parse();\n\t}\n\n\t/**\n\t * Get the longest key length of any object\n\t * @param {object} obj\n\t * @returns {number}\n\t */\n\tstatic getMaxKeyLen(obj) {\n\t\treturn Math.max(0, ...Object.keys(obj).map(k => k.length));\n\t}\n\n\t/**\n\t * `ch` is a character code in the next three functions\n\t * @param {number} ch\n\t * @returns {boolean}\n\t */\n\tstatic isDecimalDigit(ch) {\n\t\treturn (ch >= 48 && ch <= 57); // 0...9\n\t}\n\n\t/**\n\t * Returns the precedence of a binary operator or `0` if it isn't a binary operator. Can be float.\n\t * @param {string} op_val\n\t * @returns {number}\n\t */\n\tstatic binaryPrecedence(op_val) {\n\t\treturn Jsep.binary_ops[op_val] || 0;\n\t}\n\n\t/**\n\t * Looks for start of identifier\n\t * @param {number} ch\n\t * @returns {boolean}\n\t */\n\tstatic isIdentifierStart(ch) {\n\t\treturn  (ch >= 65 && ch <= 90) || // A...Z\n\t\t\t(ch >= 97 && ch <= 122) || // a...z\n\t\t\t(ch >= 128 && !Jsep.binary_ops[String.fromCharCode(ch)]) || // any non-ASCII that is not an operator\n\t\t\t(Jsep.additional_identifier_chars.has(String.fromCharCode(ch))); // additional characters\n\t}\n\n\t/**\n\t * @param {number} ch\n\t * @returns {boolean}\n\t */\n\tstatic isIdentifierPart(ch) {\n\t\treturn Jsep.isIdentifierStart(ch) || Jsep.isDecimalDigit(ch);\n\t}\n\n\t/**\n\t * throw error at index of the expression\n\t * @param {string} message\n\t * @throws\n\t */\n\tthrowError(message) {\n\t\tconst error = new Error(message + ' at character ' + this.index);\n\t\terror.index = this.index;\n\t\terror.description = message;\n\t\tthrow error;\n\t}\n\n\t/**\n\t * Run a given hook\n\t * @param {string} name\n\t * @param {jsep.Expression|false} [node]\n\t * @returns {?jsep.Expression}\n\t */\n\trunHook(name, node) {\n\t\tif (Jsep.hooks[name]) {\n\t\t\tconst env = { context: this, node };\n\t\t\tJsep.hooks.run(name, env);\n\t\t\treturn env.node;\n\t\t}\n\t\treturn node;\n\t}\n\n\t/**\n\t * Runs a given hook until one returns a node\n\t * @param {string} name\n\t * @returns {?jsep.Expression}\n\t */\n\tsearchHook(name) {\n\t\tif (Jsep.hooks[name]) {\n\t\t\tconst env = { context: this };\n\t\t\tJsep.hooks[name].find(function (callback) {\n\t\t\t\tcallback.call(env.context, env);\n\t\t\t\treturn env.node;\n\t\t\t});\n\t\t\treturn env.node;\n\t\t}\n\t}\n\n\t/**\n\t * Push `index` up to the next non-space character\n\t */\n\tgobbleSpaces() {\n\t\tlet ch = this.code;\n\t\t// Whitespace\n\t\twhile (ch === Jsep.SPACE_CODE\n\t\t|| ch === Jsep.TAB_CODE\n\t\t|| ch === Jsep.LF_CODE\n\t\t|| ch === Jsep.CR_CODE) {\n\t\t\tch = this.expr.charCodeAt(++this.index);\n\t\t}\n\t\tthis.runHook('gobble-spaces');\n\t}\n\n\t/**\n\t * Top-level method to parse all expressions and returns compound or single node\n\t * @returns {jsep.Expression}\n\t */\n\tparse() {\n\t\tthis.runHook('before-all');\n\t\tconst nodes = this.gobbleExpressions();\n\n\t\t// If there's only one expression just try returning the expression\n\t\tconst node = nodes.length === 1\n\t\t  ? nodes[0]\n\t\t\t: {\n\t\t\t\ttype: Jsep.COMPOUND,\n\t\t\t\tbody: nodes\n\t\t\t};\n\t\treturn this.runHook('after-all', node);\n\t}\n\n\t/**\n\t * top-level parser (but can be reused within as well)\n\t * @param {number} [untilICode]\n\t * @returns {jsep.Expression[]}\n\t */\n\tgobbleExpressions(untilICode) {\n\t\tlet nodes = [], ch_i, node;\n\n\t\twhile (this.index < this.expr.length) {\n\t\t\tch_i = this.code;\n\n\t\t\t// Expressions can be separated by semicolons, commas, or just inferred without any\n\t\t\t// separators\n\t\t\tif (ch_i === Jsep.SEMCOL_CODE || ch_i === Jsep.COMMA_CODE) {\n\t\t\t\tthis.index++; // ignore separators\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Try to gobble each expression individually\n\t\t\t\tif (node = this.gobbleExpression()) {\n\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t// If we weren't able to find a binary expression and are out of room, then\n\t\t\t\t\t// the expression passed in probably has too much\n\t\t\t\t}\n\t\t\t\telse if (this.index < this.expr.length) {\n\t\t\t\t\tif (ch_i === untilICode) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.throwError('Unexpected \"' + this.char + '\"');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t/**\n\t * The main parsing function.\n\t * @returns {?jsep.Expression}\n\t */\n\tgobbleExpression() {\n\t\tconst node = this.searchHook('gobble-expression') || this.gobbleBinaryExpression();\n\t\tthis.gobbleSpaces();\n\n\t\treturn this.runHook('after-expression', node);\n\t}\n\n\t/**\n\t * Search for the operation portion of the string (e.g. `+`, `===`)\n\t * Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\n\t * and move down from 3 to 2 to 1 character until a matching binary operation is found\n\t * then, return that binary operation\n\t * @returns {string|boolean}\n\t */\n\tgobbleBinaryOp() {\n\t\tthis.gobbleSpaces();\n\t\tlet to_check = this.expr.substr(this.index, Jsep.max_binop_len);\n\t\tlet tc_len = to_check.length;\n\n\t\twhile (tc_len > 0) {\n\t\t\t// Don't accept a binary op when it is an identifier.\n\t\t\t// Binary ops that start with a identifier-valid character must be followed\n\t\t\t// by a non identifier-part valid character\n\t\t\tif (Jsep.binary_ops.hasOwnProperty(to_check) && (\n\t\t\t\t!Jsep.isIdentifierStart(this.code) ||\n\t\t\t\t(this.index + to_check.length < this.expr.length && !Jsep.isIdentifierPart(this.expr.charCodeAt(this.index + to_check.length)))\n\t\t\t)) {\n\t\t\t\tthis.index += tc_len;\n\t\t\t\treturn to_check;\n\t\t\t}\n\t\t\tto_check = to_check.substr(0, --tc_len);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * This function is responsible for gobbling an individual expression,\n\t * e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\n\t * @returns {?jsep.BinaryExpression}\n\t */\n\tgobbleBinaryExpression() {\n\t\tlet node, biop, prec, stack, biop_info, left, right, i, cur_biop;\n\n\t\t// First, try to get the leftmost thing\n\t\t// Then, check to see if there's a binary operator operating on that leftmost thing\n\t\t// Don't gobbleBinaryOp without a left-hand-side\n\t\tleft = this.gobbleToken();\n\t\tif (!left) {\n\t\t\treturn left;\n\t\t}\n\t\tbiop = this.gobbleBinaryOp();\n\n\t\t// If there wasn't a binary operator, just return the leftmost node\n\t\tif (!biop) {\n\t\t\treturn left;\n\t\t}\n\n\t\t// Otherwise, we need to start a stack to properly place the binary operations in their\n\t\t// precedence structure\n\t\tbiop_info = { value: biop, prec: Jsep.binaryPrecedence(biop)};\n\n\t\tright = this.gobbleToken();\n\n\t\tif (!right) {\n\t\t\tthis.throwError(\"Expected expression after \" + biop);\n\t\t}\n\n\t\tstack = [left, biop_info, right];\n\n\t\t// Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\n\t\twhile ((biop = this.gobbleBinaryOp())) {\n\t\t\tprec = Jsep.binaryPrecedence(biop);\n\n\t\t\tif (prec === 0) {\n\t\t\t\tthis.index -= biop.length;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tbiop_info = { value: biop, prec };\n\n\t\t\tcur_biop = biop;\n\n\t\t\t// Reduce: make a binary expression from the three topmost entries.\n\t\t\twhile ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n\t\t\t\tright = stack.pop();\n\t\t\t\tbiop = stack.pop().value;\n\t\t\t\tleft = stack.pop();\n\t\t\t\tnode = {\n\t\t\t\t\ttype: Jsep.BINARY_EXP,\n\t\t\t\t\toperator: biop,\n\t\t\t\t\tleft,\n\t\t\t\t\tright\n\t\t\t\t};\n\t\t\t\tstack.push(node);\n\t\t\t}\n\n\t\t\tnode = this.gobbleToken();\n\n\t\t\tif (!node) {\n\t\t\t\tthis.throwError(\"Expected expression after \" + cur_biop);\n\t\t\t}\n\n\t\t\tstack.push(biop_info, node);\n\t\t}\n\n\t\ti = stack.length - 1;\n\t\tnode = stack[i];\n\n\t\twhile (i > 1) {\n\t\t\tnode = {\n\t\t\t\ttype: Jsep.BINARY_EXP,\n\t\t\t\toperator: stack[i - 1].value,\n\t\t\t\tleft: stack[i - 2],\n\t\t\t\tright: node\n\t\t\t};\n\t\t\ti -= 2;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * An individual part of a binary expression:\n\t * e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\n\t * @returns {boolean|jsep.Expression}\n\t */\n\tgobbleToken() {\n\t\tlet ch, to_check, tc_len, node;\n\n\t\tthis.gobbleSpaces();\n\t\tnode = this.searchHook('gobble-token');\n\t\tif (node) {\n\t\t\treturn this.runHook('after-token', node);\n\t\t}\n\n\t\tch = this.code;\n\n\t\tif (Jsep.isDecimalDigit(ch) || ch === Jsep.PERIOD_CODE) {\n\t\t\t// Char code 46 is a dot `.` which can start off a numeric literal\n\t\t\treturn this.gobbleNumericLiteral();\n\t\t}\n\n\t\tif (ch === Jsep.SQUOTE_CODE || ch === Jsep.DQUOTE_CODE) {\n\t\t\t// Single or double quotes\n\t\t\tnode = this.gobbleStringLiteral();\n\t\t}\n\t\telse if (ch === Jsep.OBRACK_CODE) {\n\t\t\tnode = this.gobbleArray();\n\t\t}\n\t\telse {\n\t\t\tto_check = this.expr.substr(this.index, Jsep.max_unop_len);\n\t\t\ttc_len = to_check.length;\n\n\t\t\twhile (tc_len > 0) {\n\t\t\t\t// Don't accept an unary op when it is an identifier.\n\t\t\t\t// Unary ops that start with a identifier-valid character must be followed\n\t\t\t\t// by a non identifier-part valid character\n\t\t\t\tif (Jsep.unary_ops.hasOwnProperty(to_check) && (\n\t\t\t\t\t!Jsep.isIdentifierStart(this.code) ||\n\t\t\t\t\t(this.index + to_check.length < this.expr.length && !Jsep.isIdentifierPart(this.expr.charCodeAt(this.index + to_check.length)))\n\t\t\t\t)) {\n\t\t\t\t\tthis.index += tc_len;\n\t\t\t\t\tconst argument = this.gobbleToken();\n\t\t\t\t\tif (!argument) {\n\t\t\t\t\t\tthis.throwError('missing unaryOp argument');\n\t\t\t\t\t}\n\t\t\t\t\treturn this.runHook('after-token', {\n\t\t\t\t\t\ttype: Jsep.UNARY_EXP,\n\t\t\t\t\t\toperator: to_check,\n\t\t\t\t\t\targument,\n\t\t\t\t\t\tprefix: true\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tto_check = to_check.substr(0, --tc_len);\n\t\t\t}\n\n\t\t\tif (Jsep.isIdentifierStart(ch)) {\n\t\t\t\tnode = this.gobbleIdentifier();\n\t\t\t\tif (Jsep.literals.hasOwnProperty(node.name)) {\n\t\t\t\t\tnode = {\n\t\t\t\t\t\ttype: Jsep.LITERAL,\n\t\t\t\t\t\tvalue: Jsep.literals[node.name],\n\t\t\t\t\t\traw: node.name,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (node.name === Jsep.this_str) {\n\t\t\t\t\tnode = { type: Jsep.THIS_EXP };\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (ch === Jsep.OPAREN_CODE) { // open parenthesis\n\t\t\t\tnode = this.gobbleGroup();\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\treturn this.runHook('after-token', false);\n\t\t}\n\n\t\tnode = this.gobbleTokenProperty(node);\n\t\treturn this.runHook('after-token', node);\n\t}\n\n\t/**\n\t * Gobble properties of of identifiers/strings/arrays/groups.\n\t * e.g. `foo`, `bar.baz`, `foo['bar'].baz`\n\t * It also gobbles function calls:\n\t * e.g. `Math.acos(obj.angle)`\n\t * @param {jsep.Expression} node\n\t * @returns {jsep.Expression}\n\t */\n\tgobbleTokenProperty(node) {\n\t\tthis.gobbleSpaces();\n\n\t\tlet ch = this.code;\n\t\twhile (ch === Jsep.PERIOD_CODE || ch === Jsep.OBRACK_CODE || ch === Jsep.OPAREN_CODE) {\n\t\t\tthis.index++;\n\n\t\t\tif (ch === Jsep.PERIOD_CODE) {\n\t\t\t\tthis.gobbleSpaces();\n\t\t\t\tnode = {\n\t\t\t\t\ttype: Jsep.MEMBER_EXP,\n\t\t\t\t\tcomputed: false,\n\t\t\t\t\tobject: node,\n\t\t\t\t\tproperty: this.gobbleIdentifier(),\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (ch === Jsep.OBRACK_CODE) {\n\t\t\t\tnode = {\n\t\t\t\t\ttype: Jsep.MEMBER_EXP,\n\t\t\t\t\tcomputed: true,\n\t\t\t\t\tobject: node,\n\t\t\t\t\tproperty: this.gobbleExpression()\n\t\t\t\t};\n\t\t\t\tthis.gobbleSpaces();\n\t\t\t\tch = this.code;\n\t\t\t\tif (ch !== Jsep.CBRACK_CODE) {\n\t\t\t\t\tthis.throwError('Unclosed [');\n\t\t\t\t}\n\t\t\t\tthis.index++;\n\t\t\t}\n\t\t\telse if (ch === Jsep.OPAREN_CODE) {\n\t\t\t\t// A function call is being made; gobble all the arguments\n\t\t\t\tnode = {\n\t\t\t\t\ttype: Jsep.CALL_EXP,\n\t\t\t\t\t'arguments': this.gobbleArguments(Jsep.CPAREN_CODE),\n\t\t\t\t\tcallee: node\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.gobbleSpaces();\n\t\t\tch = this.code;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\n\t * keep track of everything in the numeric literal and then calling `parseFloat` on that string\n\t * @returns {jsep.Literal}\n\t */\n\tgobbleNumericLiteral() {\n\t\tlet number = '', ch, chCode;\n\n\t\twhile (Jsep.isDecimalDigit(this.code)) {\n\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t}\n\n\t\tif (this.code === Jsep.PERIOD_CODE) { // can start with a decimal marker\n\t\t\tnumber += this.expr.charAt(this.index++);\n\n\t\t\twhile (Jsep.isDecimalDigit(this.code)) {\n\t\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\t}\n\t\t}\n\n\t\tch = this.char;\n\n\t\tif (ch === 'e' || ch === 'E') { // exponent marker\n\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\tch = this.char;\n\n\t\t\tif (ch === '+' || ch === '-') { // exponent sign\n\t\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\t}\n\n\t\t\twhile (Jsep.isDecimalDigit(this.code)) { // exponent itself\n\t\t\t\tnumber += this.expr.charAt(this.index++);\n\t\t\t}\n\n\t\t\tif (!Jsep.isDecimalDigit(this.expr.charCodeAt(this.index - 1)) ) {\n\t\t\t\tthis.throwError('Expected exponent (' + number + this.char + ')');\n\t\t\t}\n\t\t}\n\n\t\tchCode = this.code;\n\n\t\t// Check to make sure this isn't a variable name that start with a number (123abc)\n\t\tif (Jsep.isIdentifierStart(chCode)) {\n\t\t\tthis.throwError('Variable names cannot start with a number (' +\n\t\t\t\tnumber + this.char + ')');\n\t\t}\n\t\telse if (chCode === Jsep.PERIOD_CODE || (number.length === 1 && number.charCodeAt(0) === Jsep.PERIOD_CODE)) {\n\t\t\tthis.throwError('Unexpected period');\n\t\t}\n\n\t\treturn {\n\t\t\ttype: Jsep.LITERAL,\n\t\t\tvalue: parseFloat(number),\n\t\t\traw: number\n\t\t};\n\t}\n\n\t/**\n\t * Parses a string literal, staring with single or double quotes with basic support for escape codes\n\t * e.g. `\"hello world\"`, `'this is\\nJSEP'`\n\t * @returns {jsep.Literal}\n\t */\n\tgobbleStringLiteral() {\n\t\tlet str = '';\n\t\tlet quote = this.expr.charAt(this.index++);\n\t\tlet closed = false;\n\n\t\twhile (this.index < this.expr.length) {\n\t\t\tlet ch = this.expr.charAt(this.index++);\n\n\t\t\tif (ch === quote) {\n\t\t\t\tclosed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (ch === '\\\\') {\n\t\t\t\t// Check for all of the common escape codes\n\t\t\t\tch = this.expr.charAt(this.index++);\n\n\t\t\t\tswitch (ch) {\n\t\t\t\t\tcase 'n': str += '\\n'; break;\n\t\t\t\t\tcase 'r': str += '\\r'; break;\n\t\t\t\t\tcase 't': str += '\\t'; break;\n\t\t\t\t\tcase 'b': str += '\\b'; break;\n\t\t\t\t\tcase 'f': str += '\\f'; break;\n\t\t\t\t\tcase 'v': str += '\\x0B'; break;\n\t\t\t\t\tdefault : str += ch;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr += ch;\n\t\t\t}\n\t\t}\n\n\t\tif (!closed) {\n\t\t\tthis.throwError('Unclosed quote after \"' + str + '\"');\n\t\t}\n\n\t\treturn {\n\t\t\ttype: Jsep.LITERAL,\n\t\t\tvalue: str,\n\t\t\traw: quote + str + quote\n\t\t};\n\t}\n\n\t/**\n\t * Gobbles only identifiers\n\t * e.g.: `foo`, `_value`, `$x1`\n\t * Also, this function checks if that identifier is a literal:\n\t * (e.g. `true`, `false`, `null`) or `this`\n\t * @returns {jsep.Identifier}\n\t */\n\tgobbleIdentifier() {\n\t\tlet ch = this.code, start = this.index;\n\n\t\tif (Jsep.isIdentifierStart(ch)) {\n\t\t\tthis.index++;\n\t\t}\n\t\telse {\n\t\t\tthis.throwError('Unexpected ' + this.char);\n\t\t}\n\n\t\twhile (this.index < this.expr.length) {\n\t\t\tch = this.code;\n\n\t\t\tif (Jsep.isIdentifierPart(ch)) {\n\t\t\t\tthis.index++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\ttype: Jsep.IDENTIFIER,\n\t\t\tname: this.expr.slice(start, this.index),\n\t\t};\n\t}\n\n\t/**\n\t * Gobbles a list of arguments within the context of a function call\n\t * or array literal. This function also assumes that the opening character\n\t * `(` or `[` has already been gobbled, and gobbles expressions and commas\n\t * until the terminator character `)` or `]` is encountered.\n\t * e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\n\t * @param {number} termination\n\t * @returns {jsep.Expression[]}\n\t */\n\tgobbleArguments(termination) {\n\t\tconst args = [];\n\t\tlet closed = false;\n\t\tlet separator_count = 0;\n\n\t\twhile (this.index < this.expr.length) {\n\t\t\tthis.gobbleSpaces();\n\t\t\tlet ch_i = this.code;\n\n\t\t\tif (ch_i === termination) { // done parsing\n\t\t\t\tclosed = true;\n\t\t\t\tthis.index++;\n\n\t\t\t\tif (termination === Jsep.CPAREN_CODE && separator_count && separator_count >= args.length){\n\t\t\t\t\tthis.throwError('Unexpected token ' + String.fromCharCode(termination));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (ch_i === Jsep.COMMA_CODE) { // between expressions\n\t\t\t\tthis.index++;\n\t\t\t\tseparator_count++;\n\n\t\t\t\tif (separator_count !== args.length) { // missing argument\n\t\t\t\t\tif (termination === Jsep.CPAREN_CODE) {\n\t\t\t\t\t\tthis.throwError('Unexpected token ,');\n\t\t\t\t\t}\n\t\t\t\t\telse if (termination === Jsep.CBRACK_CODE) {\n\t\t\t\t\t\tfor (let arg = args.length; arg < separator_count; arg++) {\n\t\t\t\t\t\t\targs.push(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (args.length !== separator_count && separator_count !== 0) {\n\t\t\t\t// NOTE: `&& separator_count !== 0` allows for either all commas, or all spaces as arguments\n\t\t\t\tthis.throwError('Expected comma');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst node = this.gobbleExpression();\n\n\t\t\t\tif (!node || node.type === Jsep.COMPOUND) {\n\t\t\t\t\tthis.throwError('Expected comma');\n\t\t\t\t}\n\n\t\t\t\targs.push(node);\n\t\t\t}\n\t\t}\n\n\t\tif (!closed) {\n\t\t\tthis.throwError('Expected ' + String.fromCharCode(termination));\n\t\t}\n\n\t\treturn args;\n\t}\n\n\t/**\n\t * Responsible for parsing a group of things within parentheses `()`\n\t * that have no identifier in front (so not a function call)\n\t * This function assumes that it needs to gobble the opening parenthesis\n\t * and then tries to gobble everything within that parenthesis, assuming\n\t * that the next thing it should see is the close parenthesis. If not,\n\t * then the expression probably doesn't have a `)`\n\t * @returns {boolean|jsep.Expression}\n\t */\n\tgobbleGroup() {\n\t\tthis.index++;\n\t\tlet nodes = this.gobbleExpressions(Jsep.CPAREN_CODE);\n\t\tif (this.code === Jsep.CPAREN_CODE) {\n\t\t\tthis.index++;\n\t\t\tif (nodes.length === 1) {\n\t\t\t\treturn nodes[0];\n\t\t\t}\n\t\t\telse if (!nodes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn {\n\t\t\t\t\ttype: Jsep.SEQUENCE_EXP,\n\t\t\t\t\texpressions: nodes,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.throwError('Unclosed (');\n\t\t}\n\t}\n\n\t/**\n\t * Responsible for parsing Array literals `[1, 2, 3]`\n\t * This function assumes that it needs to gobble the opening bracket\n\t * and then tries to gobble the expressions as arguments.\n\t * @returns {jsep.ArrayExpression}\n\t */\n\tgobbleArray() {\n\t\tthis.index++;\n\n\t\treturn {\n\t\t\ttype: Jsep.ARRAY_EXP,\n\t\t\telements: this.gobbleArguments(Jsep.CBRACK_CODE)\n\t\t};\n\t}\n}\n\n// Static fields:\nconst hooks = new Hooks();\nObject.assign(Jsep, {\n\thooks,\n\tplugins: new Plugins(Jsep),\n\n\t// Node Types\n\t// ----------\n\t// This is the full set of types that any JSEP node can be.\n\t// Store them here to save space when minified\n\tCOMPOUND:        'Compound',\n\tSEQUENCE_EXP:    'SequenceExpression',\n\tIDENTIFIER:      'Identifier',\n\tMEMBER_EXP:      'MemberExpression',\n\tLITERAL:         'Literal',\n\tTHIS_EXP:        'ThisExpression',\n\tCALL_EXP:        'CallExpression',\n\tUNARY_EXP:       'UnaryExpression',\n\tBINARY_EXP:      'BinaryExpression',\n\tARRAY_EXP:       'ArrayExpression',\n\n\tTAB_CODE:    9,\n\tLF_CODE:     10,\n\tCR_CODE:     13,\n\tSPACE_CODE:  32,\n\tPERIOD_CODE: 46, // '.'\n\tCOMMA_CODE:  44, // ','\n\tSQUOTE_CODE: 39, // single quote\n\tDQUOTE_CODE: 34, // double quotes\n\tOPAREN_CODE: 40, // (\n\tCPAREN_CODE: 41, // )\n\tOBRACK_CODE: 91, // [\n\tCBRACK_CODE: 93, // ]\n\tQUMARK_CODE: 63, // ?\n\tSEMCOL_CODE: 59, // ;\n\tCOLON_CODE:  58, // :\n\n\n\t// Operations\n\t// ----------\n\t// Use a quickly-accessible map to store all of the unary operators\n\t// Values are set to `1` (it really doesn't matter)\n\tunary_ops: {\n\t\t'-': 1,\n\t\t'!': 1,\n\t\t'~': 1,\n\t\t'+': 1\n\t},\n\n\t// Also use a map for the binary operations but set their values to their\n\t// binary precedence for quick reference (higher number = higher precedence)\n\t// see [Order of operations](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)\n\tbinary_ops: {\n\t\t'||': 1, '&&': 2, '|': 3, '^': 4, '&': 5,\n\t\t'==': 6, '!=': 6, '===': 6, '!==': 6,\n\t\t'<': 7, '>': 7, '<=': 7, '>=': 7,\n\t\t'<<': 8, '>>': 8, '>>>': 8,\n\t\t'+': 9, '-': 9,\n\t\t'*': 10, '/': 10, '%': 10\n\t},\n\n\t// Additional valid identifier chars, apart from a-z, A-Z and 0-9 (except on the starting char)\n\tadditional_identifier_chars: new Set(['$', '_']),\n\n\t// Literals\n\t// ----------\n\t// Store the values to return for the various literals we may encounter\n\tliterals: {\n\t\t'true': true,\n\t\t'false': false,\n\t\t'null': null\n\t},\n\n\t// Except for `this`, which is special. This could be changed to something like `'self'` as well\n\tthis_str: 'this',\n});\nJsep.max_unop_len = Jsep.getMaxKeyLen(Jsep.unary_ops);\nJsep.max_binop_len = Jsep.getMaxKeyLen(Jsep.binary_ops);\n\n// Backward Compatibility:\nconst jsep = expr => (new Jsep(expr)).parse();\nconst staticMethods = Object.getOwnPropertyNames(Jsep);\nstaticMethods\n\t.forEach((m) => {\n\t\tif (jsep[m] === undefined && m !== 'prototype') {\n\t\t\tjsep[m] = Jsep[m];\n\t\t}\n\t});\njsep.Jsep = Jsep; // allows for const { Jsep } = require('jsep');\n\nconst CONDITIONAL_EXP = 'ConditionalExpression';\n\nvar ternary = {\n\tname: 'ternary',\n\n\tinit(jsep) {\n\t\t// Ternary expression: test ? consequent : alternate\n\t\tjsep.hooks.add('after-expression', function gobbleTernary(env) {\n\t\t\tif (env.node && this.code === jsep.QUMARK_CODE) {\n\t\t\t\tthis.index++;\n\t\t\t\tconst test = env.node;\n\t\t\t\tconst consequent = this.gobbleExpression();\n\n\t\t\t\tif (!consequent) {\n\t\t\t\t\tthis.throwError('Expected expression');\n\t\t\t\t}\n\n\t\t\t\tthis.gobbleSpaces();\n\n\t\t\t\tif (this.code === jsep.COLON_CODE) {\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tconst alternate = this.gobbleExpression();\n\n\t\t\t\t\tif (!alternate) {\n\t\t\t\t\t\tthis.throwError('Expected expression');\n\t\t\t\t\t}\n\t\t\t\t\tenv.node = {\n\t\t\t\t\t\ttype: CONDITIONAL_EXP,\n\t\t\t\t\t\ttest,\n\t\t\t\t\t\tconsequent,\n\t\t\t\t\t\talternate,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// if binary operator is custom-added (i.e. object plugin), then correct it to a ternary node:\n\t\t\t\telse if (consequent.operator === ':') {\n\t\t\t\t\tenv.node = {\n\t\t\t\t\t\ttype: CONDITIONAL_EXP,\n\t\t\t\t\t\ttest,\n\t\t\t\t\t\tconsequent: consequent.left,\n\t\t\t\t\t\talternate: consequent.right,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError('Expected :');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n};\n\n// Add default plugins:\n\njsep.plugins.register(ternary);\n\nexport { Jsep, jsep as default };\n","import jsep from 'jsep';\nimport {CoreType} from '../../../core/Type';\nimport {BaseParamType} from '../../params/_Base';\njsep.addUnaryOp('@');\nlet precedence = 10;\njsep.addBinaryOp('**', precedence);\n// precedence = 1\n// jsep.addBinaryOp('`', precedence)\n// const HOUDINI_QUOTE_CODE = 96; // houdini quote\n// const JSEP_COMPOUND = 'Compound'\nconst JSEP_IDENTIFIER = 'Identifier';\nconst JSEP_LITERAL = 'Literal';\n// const JSEP_BINARY_EXPRESSION = 'BynaryExpression'\nconst JSEP_CALL_EXPRESSION = 'CallExpression';\nconst STRING_EXPRESSION_SEPARATOR = '`';\n\nexport function stringValueElements(v: string): string[] {\n\tif (v != null) {\n\t\tif (CoreType.isString(v)) {\n\t\t\treturn v.split(STRING_EXPRESSION_SEPARATOR);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t} else {\n\t\treturn [];\n\t}\n}\n\nexport class ParsedTree {\n\tprivate _node: jsep.Expression | undefined;\n\tprivate _errorMessage: string | undefined;\n\n\tconstructor(private _param: BaseParamType) {}\n\tnode() {\n\t\treturn this._node;\n\t}\n\terrorMessage() {\n\t\treturn this._errorMessage;\n\t}\n\n\tparseExpression(string: string) {\n\t\ttry {\n\t\t\tthis.reset();\n\t\t\tthis._node = jsep(string);\n\t\t} catch (e) {\n\t\t\tconst message = `could not parse the expression '${string}' (error: ${e})`;\n\t\t\tthis._errorMessage = message;\n\t\t}\n\t}\n\tparseExpressionForStringParam(string: string) {\n\t\ttry {\n\t\t\tthis.reset();\n\n\t\t\tconst elements = stringValueElements(string);\n\t\t\tconst nodes = [];\n\t\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\t\tconst element = elements[i];\n\t\t\t\tlet node: jsep.Expression;\n\t\t\t\tif (i % 2 == 1) {\n\t\t\t\t\tnode = jsep(element);\n\t\t\t\t} else {\n\t\t\t\t\t// if the expression is like:\n\t\t\t\t\t//\n\t\t\t\t\t// <div style='will-change: transform, opacity;'>`@ptnum`</div>\n\t\t\t\t\t//\n\t\t\t\t\t// then the first element here will be:\n\t\t\t\t\t//\n\t\t\t\t\t// <div style='will-change: transform, opacity;'>\n\t\t\t\t\t//\n\t\t\t\t\t// and if we surround it by single quotes (')\n\t\t\t\t\t// the the quotes already inside the element will create a parsing error.\n\t\t\t\t\t// We therefore need to escape them first.\n\t\t\t\t\tconst sanitizedElement = element.replace(/\\'/g, \"\\\\'\");\n\t\t\t\t\tnode = {\n\t\t\t\t\t\ttype: JSEP_LITERAL,\n\t\t\t\t\t\tvalue: `'${sanitizedElement}'`,\n\t\t\t\t\t\traw: `'${sanitizedElement}'`,\n\t\t\t\t\t};\n\t\t\t\t\t// we must add this node to the ignore list of the missing references controller.\n\t\t\t\t\t// If it is not added, a param with the name of the element will be searched for.\n\t\t\t\t\tthis._param.scene().missingExpressionReferencesController.registerToIgnore(node);\n\t\t\t\t}\n\t\t\t\tnodes.push(node);\n\t\t\t\t// nodes.push({\n\t\t\t\t// \ttype: JSEP_CALL_EXPRESSION,\n\t\t\t\t// \targuments: [node],\n\t\t\t\t// \tcallee: {\n\t\t\t\t// \t\ttype: JSEP_IDENTIFIER,\n\t\t\t\t// \t\tname: 'toString',\n\t\t\t\t// \t}\n\t\t\t\t// })\n\t\t\t}\n\t\t\t// let last_plus_node;\n\t\t\t// for(let i=0; i<(nodes.length-1); i++){\n\t\t\t// \tconst plus_node = {\n\t\t\t// \t\ttype: JSEP_BINARY_EXPRESSION,\n\t\t\t// \t\toperator: '+',\n\t\t\t// \t\tleft: last_plus_node || nodes[i],\n\t\t\t// \t\tright: nodes[i+1],\n\t\t\t// \t}\n\t\t\t// \tlast_plus_node = plus_node;\n\t\t\t// }\n\t\t\t// this.node = last_plus_node\n\t\t\tthis._node = (<unknown>{\n\t\t\t\ttype: JSEP_CALL_EXPRESSION,\n\t\t\t\targuments: nodes,\n\t\t\t\tcallee: {\n\t\t\t\t\ttype: JSEP_IDENTIFIER,\n\t\t\t\t\tname: 'strConcat',\n\t\t\t\t},\n\t\t\t}) as jsep.Compound;\n\t\t} catch (e) {\n\t\t\tconst message = `could not parse the expression '${string}' (error: ${e})`;\n\t\t\tthis._errorMessage = message;\n\t\t}\n\t}\n\n\t// static string_value_contains_expression(v:string): boolean{\n\t// \treturn ((this.string_value_elements(v).length - 1) % 2) === 0;\n\t// }\n\n\t// deep_parse_for_string_expressions(){\n\t// \t// for string expressions which have more than a single `<expr>` element\n\t// \t// pt_`@ptnum`\n\t// \t// `@ptnum`_pt\n\t// \t// pt_`@ptnum`_`1+1`\n\t// \tif(this.node.type == JSEP_COMPOUND){\n\t// \t\tconst args = this.node.body\n\t// \t\tlet arg;\n\t// \t\tfor(let i=0; i<args.length; i++){\n\t// \t\t\targ = args[i]\n\t// \t\t\tif(arg.type == JSEP_LITERAL){\n\t// \t\t\t\tconst arg_node = jsep(arg.value)\n\t// \t\t\t\targs[i] = arg_node\n\t// \t\t\t}\n\t// \t\t}\n\t// \t} else {\n\t// \t\t// for string expressions which havea single `<expr>` element\n\t// \t\t// `@ptnum`\n\t// \t\tif(this.node.type == JSEP_LITERAL){\n\t// \t\t\tconst raw = this.node.raw\n\t// \t\t\tconst first_char_code = raw.charCodeAt(0)\n\t// \t\t\tconst last_char_code = raw.charCodeAt(raw.length-1)\n\t// \t\t\tif(first_char_code == HOUDINI_QUOTE_CODE && last_char_code == HOUDINI_QUOTE_CODE){\n\t// \t\t\t\tthis.node = jsep(\"''+\"+this.node.value) // add the prefix ''+ to ensure we have a string as a result, and not a number\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tprivate reset() {\n\t\tthis._node = undefined;\n\t\tthis._errorMessage = undefined;\n\t}\n}\n","import {TypedNode} from '../../../nodes/_Base';\nimport {Vector2} from 'three';\nimport type {JsonImportDispatcher} from './Dispatcher';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamsUpdateOptions} from '../../../nodes/utils/params/ParamsController';\nimport {SceneJsonImporter} from '../../../io/json/import/Scene';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {NodeJsonExporterData, NodeJsonExporterUIData, InputData, IoConnectionPointsData} from '../export/Node';\nimport {\n\tParamJsonExporterData,\n\tSimpleParamJsonExporterData,\n\tComplexParamJsonExporterData,\n} from '../../../nodes/utils/io/IOController';\nimport type {NodesJsonImporter} from './Nodes';\nimport {Poly} from '../../../Poly';\nimport {CoreType, isString} from '../../../../core/Type';\n// import {CoreString} from '../../../../core/String';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {VelocityColliderFunctionBody} from '../../../nodes/js/code/assemblers/_Base';\n\nconst COMPLEX_PARAM_DATA_KEYS: Readonly<string[]> = ['overriden_options', 'type'];\n\ntype BaseNodeTypeWithIO = TypedNode<NodeContext, any>;\nexport class NodeJsonImporter<T extends BaseNodeTypeWithIO> {\n\tconstructor(\n\t\tprotected _node: T,\n\t\tprivate dispatcher: JsonImportDispatcher,\n\t\tprotected nodesImporter: NodesJsonImporter<any>\n\t) {}\n\n\tprocess_data(scene_importer: SceneJsonImporter, data: NodeJsonExporterData) {\n\t\tif (this._node.sceneReadonly()) {\n\t\t\tscene_importer.report.markAsLoadedWithoutAssemblers();\n\t\t}\n\n\t\tthis.set_connection_points(data['connection_points']);\n\n\t\t// rather than having the children creation dependent on the persisted config and player mode, use the childrenAllowed() method\n\t\t// const skip_create_children = Poly.playerMode() && data.persisted_config;\n\t\tif (this._node.childrenAllowed()) {\n\t\t\tthis.create_nodes(scene_importer, data['nodes'], data);\n\t\t}\n\n\t\t// inputs clone\n\t\tif (this._node.io.inputs.overrideClonedStateAllowed()) {\n\t\t\tconst override = data['cloned_state_overriden'];\n\t\t\tif (override) {\n\t\t\t\tthis._node.io.inputs.overrideClonedState(override);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_flags(data);\n\n\t\t// params\n\t\t// const spare_params_data = ParamJsonImporter.spare_params_data(data['params']);\n\t\t// this.set_params(spare_params_data);\n\t\tthis.set_params(data);\n\n\t\tif (data.persisted_config) {\n\t\t\tconst shadersData = scene_importer.shadersData();\n\t\t\tconst jsFunctionBodiesData = scene_importer.jsFunctionBodiesData();\n\t\t\tif (shadersData) {\n\t\t\t\tlet shaders = shadersData[this._node.path()];\n\t\t\t\t// make sure this is never undefined\n\t\t\t\tif (!shaders) {\n\t\t\t\t\tshaders = {};\n\t\t\t\t}\n\t\t\t\tdata.persisted_config.shaders = shaders;\n\t\t\t}\n\t\t\tif (jsFunctionBodiesData) {\n\t\t\t\tconst jsFunctionBodyData = jsFunctionBodiesData[this._node.path()];\n\t\t\t\tif (jsFunctionBodyData) {\n\t\t\t\t\tif (isString(jsFunctionBodyData)) {\n\t\t\t\t\t\tdata.persisted_config.functionBody = jsFunctionBodyData;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.persisted_config.functionBody = jsFunctionBodyData as any as VelocityColliderFunctionBody;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.set_persisted_config(data.persisted_config);\n\t\t}\n\n\t\tthis.setCustomData(data);\n\n\t\t// already called in create_node()\n\t\t// this._node.lifecycle.set_creation_completed();\n\t}\n\tprocess_inputs_data(scene_importer: SceneJsonImporter, data: NodeJsonExporterData) {\n\t\tconst maxInputsCount = data.maxInputsCount;\n\t\tif (maxInputsCount != null) {\n\t\t\tconst minCount = this._node.io.inputs.minCount();\n\t\t\tthis._node.io.inputs.setCount(minCount, maxInputsCount);\n\t\t}\n\n\t\ttry {\n\t\t\tthis.setInputs(data['inputs']);\n\t\t} catch (err) {\n\t\t\tconst message = (err as ErrorEvent).message || `failed connecting inputs of node ${data['type']}`;\n\t\t\tscene_importer.report.addWarning(message);\n\t\t\tconsole.warn(data['inputs']);\n\t\t}\n\t}\n\n\tprocess_ui_data(scene_importer: SceneJsonImporter, data: NodeJsonExporterUIData) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tif (Poly.playerMode()) {\n\t\t\treturn;\n\t\t}\n\t\tconst ui_data = this._node.uiData;\n\t\tconst pos = data['pos'];\n\t\tif (pos) {\n\t\t\tconst vector = new Vector2().fromArray(pos);\n\t\t\tui_data.setPosition(vector);\n\t\t}\n\t\tconst comment = data['comment'];\n\t\tif (comment) {\n\t\t\tui_data.setComment(comment);\n\t\t}\n\t\tconst selection = data['selection'];\n\t\tif (selection) {\n\t\t\tthis.set_selection(selection);\n\t\t}\n\t\tif (this._node.childrenAllowed()) {\n\t\t\tconst nodesData = data['nodes'];\n\t\t\tif (nodesData) {\n\t\t\t\tthis.processNodesUiData(scene_importer, nodesData);\n\t\t\t}\n\t\t}\n\t}\n\n\tcreate_nodes(\n\t\tscene_importer: SceneJsonImporter,\n\t\tdata: PolyDictionary<NodeJsonExporterData> | undefined,\n\t\tnodeData: NodeJsonExporterData\n\t) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\t// const nodes_importer = new NodesJsonImporter(this._node);\n\t\tthis.nodesImporter.process_data(scene_importer, data);\n\t}\n\tset_selection(data?: string[]) {\n\t\tif (this._node.childrenAllowed() && this._node.childrenController) {\n\t\t\tif (data && data.length > 0) {\n\t\t\t\tconst selected_nodes: BaseNodeTypeWithIO[] = [];\n\t\t\t\tdata.forEach((node_name) => {\n\t\t\t\t\tconst node = this._node.node(node_name);\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tselected_nodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._node.childrenController.selection.set(selected_nodes);\n\t\t\t}\n\t\t}\n\t}\n\n\tset_flags(data: NodeJsonExporterData) {\n\t\tconst flags = data['flags'];\n\t\tif (flags) {\n\t\t\tconst bypass = flags['bypass'];\n\t\t\tif (bypass != null) {\n\t\t\t\tthis._node.flags?.bypass?.set(bypass);\n\t\t\t}\n\t\t\tconst display = flags['display'];\n\t\t\tif (display != null) {\n\t\t\t\tthis._node.flags?.display?.set(display);\n\t\t\t}\n\t\t\tconst optimize = flags['optimize'];\n\t\t\tif (optimize != null) {\n\t\t\t\tthis._node.flags?.optimize?.set(optimize);\n\t\t\t}\n\t\t}\n\t}\n\n\tset_connection_points(connection_points_data: IoConnectionPointsData | undefined) {\n\t\tif (!connection_points_data) {\n\t\t\treturn;\n\t\t}\n\t\tif (connection_points_data['in']) {\n\t\t\tthis._node.io.saved_connection_points_data.set_in(connection_points_data['in']);\n\t\t}\n\t\tif (connection_points_data['out']) {\n\t\t\tthis._node.io.saved_connection_points_data.set_out(connection_points_data['out']);\n\t\t}\n\n\t\tif (this._node.io.has_connection_points_controller) {\n\t\t\tthis._node.io.connection_points.update_signature_if_required();\n\t\t}\n\t}\n\n\tprivate setInputs(inputsData?: InputData[]) {\n\t\tif (!inputsData) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputData: InputData;\n\t\tfor (let i = 0; i < inputsData.length; i++) {\n\t\t\tinputData = inputsData[i];\n\t\t\tif (inputData && this._node.parent()) {\n\t\t\t\tif (CoreType.isString(inputData)) {\n\t\t\t\t\tconst inputNodeName = inputData;\n\t\t\t\t\tconst inputNode = this._node.nodeSibling(inputNodeName);\n\t\t\t\t\tthis._node.setInput(i, inputNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst inputNode = this._node.nodeSibling(inputData['node']);\n\t\t\t\t\tlet inputIndex = inputData['index'];\n\t\t\t\t\tconst inputName = inputData['inputName'];\n\t\t\t\t\tlet outputName = inputData['output'];\n\t\t\t\t\tif (inputName != null) {\n\t\t\t\t\t\t// If we have inputName, try and find the input index matching it.\n\t\t\t\t\t\t// If we find nothing, we use inputIndex\n\t\t\t\t\t\tconst connectionPoints = this._node.io.inputs.namedInputConnectionPoints();\n\t\t\t\t\t\tif (connectionPoints) {\n\t\t\t\t\t\t\tconst connectionPointIndex = connectionPoints\n\t\t\t\t\t\t\t\t.map((point) => point?.name().toLowerCase())\n\t\t\t\t\t\t\t\t.indexOf(inputName.toLowerCase());\n\t\t\t\t\t\t\tif (connectionPointIndex >= 0) {\n\t\t\t\t\t\t\t\tinputIndex = connectionPointIndex;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (inputNode != null && outputName != null) {\n\t\t\t\t\t\t// If we have outtputName, try and find the input index matching it.\n\n\t\t\t\t\t\tconst connectionPoints = inputNode.io.outputs.namedOutputConnectionPoints();\n\t\t\t\t\t\tif (connectionPoints) {\n\t\t\t\t\t\t\tfor (let connectionPoint of connectionPoints) {\n\t\t\t\t\t\t\t\tif (connectionPoint) {\n\t\t\t\t\t\t\t\t\tif (connectionPoint.name().toLowerCase() == outputName.toLowerCase()) {\n\t\t\t\t\t\t\t\t\t\toutputName = connectionPoint.name();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (inputIndex != null) {\n\t\t\t\t\t\tthis._node.setInput(inputIndex, inputNode, outputName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessNodesUiData(scene_importer: SceneJsonImporter, data: PolyDictionary<NodeJsonExporterUIData>) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tif (Poly.playerMode()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node_names = Object.keys(data);\n\t\tfor (let node_name of node_names) {\n\t\t\tconst node = this._node.node(node_name);\n\t\t\tif (node) {\n\t\t\t\tconst node_data = data[node_name];\n\t\t\t\tthis.dispatcher.dispatchNode(node).process_ui_data(scene_importer, node_data);\n\t\t\t\t// node.visit(JsonImporterVisitor).process_ui_data(node_data);\n\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t//\n\t// PARAMS\n\t//\n\t//\n\tset_params(nodeData: NodeJsonExporterData) {\n\t\tconst data = nodeData['params'];\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tconst param_names = Object.keys(data);\n\n\t\tconst params_update_options: ParamsUpdateOptions = {};\n\t\tfor (let param_name of param_names) {\n\t\t\tconst param_data = data[param_name] as ComplexParamJsonExporterData<ParamType>;\n\t\t\tif (param_data != null) {\n\t\t\t\tconst options = param_data['options'];\n\t\t\t\t// const is_spare = options && options['spare'] === true;\n\n\t\t\t\t// make camelCase if required\n\t\t\t\t// if (false && param_name.includes('_')) {\n\t\t\t\t// \tparam_name = CoreString.camelCase(param_name);\n\t\t\t\t// }\n\n\t\t\t\tlet param_type = param_data['type']!;\n\n\t\t\t\tconst has_param = this._node.params.has_param(param_name);\n\t\t\t\tlet has_param_and_same_type = false;\n\t\t\t\tlet param;\n\t\t\t\tif (has_param) {\n\t\t\t\t\tparam = this._node.params.get(param_name);\n\t\t\t\t\t// we can safely consider same type if param_type is not mentioned\n\t\t\t\t\tif ((param && param.type() == param_type) || param_type == null) {\n\t\t\t\t\t\thas_param_and_same_type = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (has_param_and_same_type) {\n\t\t\t\t\tif (this._is_param_data_complex(param_data)) {\n\t\t\t\t\t\tthis._process_param_data_complex(param_name, param_data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._process_param_data_simple(\n\t\t\t\t\t\t\tparam_name,\n\t\t\t\t\t\t\tparam_data as SimpleParamJsonExporterData<ParamType>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// it the param is a spare one,\n\t\t\t\t\t// we check if it is currently exists with same type first.\n\t\t\t\t\t// - if it is, we only update the value\n\t\t\t\t\t// - if it's not, we delete it and add it again\n\t\t\t\t\tparams_update_options.namesToDelete = params_update_options.namesToDelete || [];\n\t\t\t\t\tparams_update_options.namesToDelete.push(param_name);\n\t\t\t\t\tparams_update_options.toAdd = params_update_options.toAdd || [];\n\t\t\t\t\tparams_update_options.toAdd.push({\n\t\t\t\t\t\tname: param_name,\n\t\t\t\t\t\ttype: param_type,\n\t\t\t\t\t\tinitValue: param_data['default_value'] as any,\n\t\t\t\t\t\trawInput: param_data['raw_input'] as any,\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t});\n\n\t\t\t\t\t// if (options && param_type) {\n\t\t\t\t\t// \tif (param_data['default_value']) {\n\t\t\t\t\t// \t\tif (has_param) {\n\t\t\t\t\t// \t\t\tthis._node.params.delete_param(param_name);\n\t\t\t\t\t// \t\t}\n\t\t\t\t\t// \t\tparam = this._node.add_param(param_type, param_name, param_data['default_value'], options);\n\t\t\t\t\t// \t\tif (param) {\n\t\t\t\t\t// \t\t\tJsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t\t\t\t// \t\t}\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// delete and create the spare params we need to\n\t\tconst params_delete_required =\n\t\t\tparams_update_options.namesToDelete && params_update_options.namesToDelete.length > 0;\n\t\tconst params_add_required = params_update_options.toAdd && params_update_options.toAdd.length > 0;\n\n\t\tif (params_delete_required || params_add_required) {\n\t\t\tthis._node.params.updateParams(params_update_options);\n\t\t\t// update them based on the imported data\n\t\t\tfor (let spare_param of this._node.params.spare) {\n\t\t\t\tconst param_data = data[spare_param.name()] as ComplexParamJsonExporterData<ParamType>;\n\t\t\t\t// JsonImportDispatcher.dispatch_param(spare_param).process_data(param_data);\n\t\t\t\tif (!spare_param.parentParam() && param_data) {\n\t\t\t\t\tif (this._is_param_data_complex(param_data)) {\n\t\t\t\t\t\tthis._process_param_data_complex(spare_param.name(), param_data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._process_param_data_simple(\n\t\t\t\t\t\t\tspare_param.name(),\n\t\t\t\t\t\t\tparam_data as SimpleParamJsonExporterData<ParamType>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// those hooks are useful for some gl nodes,\n\t\t// such as the constant, which needs to update its connections\n\t\t// based on another parameter, which will be set just before\n\t\tthis._node.params.runOnSceneLoadHooks();\n\t}\n\n\tprivate _process_param_data_simple(param_name: string, param_data: SimpleParamJsonExporterData<ParamType>) {\n\t\tthis._node.params.get(param_name)?.set(param_data);\n\t}\n\n\tprivate _process_param_data_complex(param_name: string, param_data: ComplexParamJsonExporterData<ParamType>) {\n\t\tconst param = this._node.params.get(param_name);\n\t\tif (param) {\n\t\t\tthis.dispatcher.dispatchParam(param).process_data(param_data);\n\t\t}\n\t\t// return\n\t\t// const has_param = this._node.params.has_param(param_name);\n\t\t// const param_type = param_data['type']!;\n\n\t\t// let has_param_and_same_type = false;\n\t\t// let param;\n\t\t// if (has_param) {\n\t\t// \tparam = this._node.params.get(param_name);\n\t\t// \t// we can safely consider same type if param_type is not mentioned\n\t\t// \tif ((param && param.type == param_type) || param_type == null) {\n\t\t// \t\thas_param_and_same_type = true;\n\t\t// \t}\n\t\t// }\n\t\t// if (has_param_and_same_type) {\n\t\t// \tparam = this._node.params.get(param_name);\n\t\t// \tif (param) {\n\t\t// \t\tJsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t// \t\t// param.visit(JsonImporterVisitor).process_data(param_data);\n\t\t// \t}\n\t\t// } else {\n\t\t// \tconst options = param_data['options'];\n\t\t// \tif (options && param_type) {\n\t\t// \t\tconst is_spare = options['spare'] === true;\n\t\t// \t\tif (is_spare && param_data['default_value']) {\n\t\t// \t\t\tif (has_param) {\n\t\t// \t\t\t\tthis._node.params.delete_param(param_name);\n\t\t// \t\t\t}\n\t\t// \t\t\tparam = this._node.add_param(param_type, param_name, param_data['default_value'], options);\n\t\t// \t\t\tif (param) {\n\t\t// \t\t\t\tJsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t}\n\n\tprivate _is_param_data_complex(param_data: ParamJsonExporterData<ParamType>): boolean {\n\t\t// we can test here most param value serialized, except for ramp\n\t\tif (\n\t\t\tCoreType.isString(param_data) ||\n\t\t\tCoreType.isNumber(param_data) ||\n\t\t\tCoreType.isArray(param_data) ||\n\t\t\tCoreType.isBoolean(param_data)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (CoreType.isObject(param_data)) {\n\t\t\tconst keys = Object.keys(param_data);\n\t\t\tfor (let complex_key of COMPLEX_PARAM_DATA_KEYS) {\n\t\t\t\tif (keys.includes(complex_key)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tset_persisted_config(persisted_config_data: object) {\n\t\tif (this._node.persisted_config) {\n\t\t\tthis._node.persisted_config.load(persisted_config_data);\n\t\t}\n\t}\n\n\tsetCustomData(data: NodeJsonExporterData) {}\n}\n","import {ParamJsonImporter} from '../Param';\nimport {ComplexParamJsonExporterData} from '../../../../nodes/utils/io/IOController';\nimport {TypedMultipleParam} from '../../../../params/_Multiple';\nimport {ParamType} from '../../../../poly/ParamType';\n\nexport class ParamMultipleJsonImporter extends ParamJsonImporter<TypedMultipleParam<ParamType>> {\n\toverride add_main(data: ComplexParamJsonExporterData<ParamType>) {\n\t\t// const components = data['components'];\n\t\t// if (components) {\n\t\t// \tObject.keys(components).forEach((component_name) => {\n\t\t// \t\tconst param_name = `${this._param.name}${component_name}`;\n\t\t// \t\tconst component_param = this._param.node.params\n\t\t// \t\t\t.get(this._param.name)\n\t\t// \t\t\t?.components?.filter((c) => c.name == param_name)[0];\n\t\t// \t\tif (component_param) {\n\t\t// \t\t\tconst component_data = components[component_name];\n\t\t// \t\t\tJsonImportDispatcher.dispatch_param(component_param as FloatParam).process_data(component_data);\n\t\t// \t\t}\n\t\t// \t});\n\t\t// }\n\t}\n}\n","import {ParamJsonImporter} from '../Param';\nimport {ComplexParamJsonExporterData} from '../../../../nodes/utils/io/IOController';\nimport {StringParam} from '../../../../params/String';\nimport {ParamType} from '../../../../poly/ParamType';\n\nconst LINE_BREAK_REGEXP = /\\\\n+/g;\n\nexport class ParamStringJsonImporter extends ParamJsonImporter<StringParam> {\n\toverride add_main(data: ComplexParamJsonExporterData<ParamType.STRING>) {\n\t\tlet raw_input = data['raw_input'];\n\t\tif (raw_input !== undefined) {\n\t\t\t// if (CoreType.isString(value)) {\n\t\t\traw_input = raw_input.replace(LINE_BREAK_REGEXP, '\\n');\n\t\t\tthis._param.set(raw_input);\n\t\t\t// }\n\t\t}\n\t}\n}\n","import {ParamJsonImporter} from '../Param';\n// import {RampValueJson} from '../../../../params/ramp/RampValue';\nimport {ComplexParamJsonExporterData} from '../../../../nodes/utils/io/IOController';\nimport {RampParam} from '../../../../params/Ramp';\nimport {ParamType} from '../../../../poly/ParamType';\n\nexport class ParamRampJsonImporter extends ParamJsonImporter<RampParam> {\n\toverride add_main(data: ComplexParamJsonExporterData<ParamType.RAMP>) {\n\t\tconst raw_input = data['raw_input']; // as RampValueJson;\n\t\tif (raw_input) {\n\t\t\t// const ramp_value = RampValue.from_json(value);\n\t\t\tthis._param.set(raw_input);\n\t\t}\n\t}\n}\n","import {NodeJsonImporter} from '../Node';\nimport {NodeJsonExporterData} from '../../export/Node';\nimport {SceneJsonImporter} from '../Scene';\nimport {PolyDictionary} from '../../../../../types/GlobalTypes';\nimport {PolyNodeController} from '../../../../nodes/utils/poly/PolyNodeController';\n\nexport class PolyNodeJsonImporter extends NodeJsonImporter<any> {\n\toverride create_nodes(\n\t\tscene_importer: SceneJsonImporter,\n\t\tdata: PolyDictionary<NodeJsonExporterData>,\n\t\tnodeData: NodeJsonExporterData\n\t) {\n\t\tconst node = this._node;\n\t\tconst polyNodeController = node.polyNodeController as PolyNodeController;\n\t\t// const oldLockedState = polyNodeController.locked();\n\t\tpolyNodeController.setLockedState(false);\n\t\tif (this._isDataLocked(nodeData)) {\n\t\t\tpolyNodeController.createChildNodesFromDefinition();\n\t\t} else {\n\t\t\tsuper.create_nodes(scene_importer, data, nodeData);\n\t\t}\n\t\t// polyNodeController.setLockedState(oldLockedState);\n\t}\n\toverride setCustomData(data: NodeJsonExporterData): void {\n\t\tif (this._node.polyNodeController) {\n\t\t\tthis._node.polyNodeController.setLockedState(this._isDataLocked(data));\n\t\t}\n\t}\n\tprivate _isDataLocked(data: NodeJsonExporterData): boolean {\n\t\tif (data['polyNode']) {\n\t\t\treturn data['polyNode']['locked'];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n","import {TypedNode, BaseNodeType} from '../../../nodes/_Base';\nimport {SceneJsonImporter} from '../../../io/json/import/Scene';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {NodeJsonExporterData} from '../export/Node';\nimport {ParamJsonImporter} from './Param';\nimport {Poly} from '../../../Poly';\nimport {OperationsComposerSopNode} from '../../../nodes/sop/OperationsComposer';\nimport {SopOperationContainer} from '../../../../engine/operations/container/sop';\nimport {OPERATIONS_COMPOSER_NODE_TYPE} from '../../../operations/_Base';\nimport {CoreType} from '../../../../core/Type';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {NodeCreateOptions} from '../../../nodes/utils/hierarchy/ChildrenController';\nimport {TypedNodeConnection} from '../../../nodes/utils/io/NodeConnection';\n\ntype BaseNodeTypeWithIO = TypedNode<NodeContext, any>;\n\ninterface RootNodeGenericData {\n\toutputs_count: number;\n\tnon_optimized_count: number;\n}\n\nexport class OptimizedNodesJsonImporter<T extends BaseNodeTypeWithIO> {\n\tconstructor(protected _node: T) {}\n\n\tprivate _nodes: BaseNodeTypeWithIO[] = [];\n\tprivate _optimized_root_node_names: Set<string> = new Set();\n\tprivate _operation_containers_by_name: Map<string, SopOperationContainer> = new Map();\n\tnodes() {\n\t\treturn this._nodes;\n\t}\n\n\tprocess_data(scene_importer: SceneJsonImporter, data?: PolyDictionary<NodeJsonExporterData>) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tif (!(this._node.childrenAllowed() && this._node.childrenController)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {optimized_names} = OptimizedNodesJsonImporter.child_names_by_optimized_state(data);\n\n\t\tthis._nodes = [];\n\t\tthis._optimized_root_node_names = new Set();\n\t\tfor (let node_name of optimized_names) {\n\t\t\tif (OptimizedNodesJsonImporter.is_optimized_root_node(data, node_name)) {\n\t\t\t\tthis._optimized_root_node_names.add(node_name);\n\t\t\t}\n\t\t}\n\n\t\tfor (let nodeName of this._optimized_root_node_names) {\n\t\t\tconst node_data = data[nodeName];\n\t\t\tconst nodeCreateOptions: NodeCreateOptions = {\n\t\t\t\tnodeName,\n\t\t\t};\n\t\t\tconst node = this._node.createNode(OPERATIONS_COMPOSER_NODE_TYPE, nodeCreateOptions);\n\t\t\tif (node) {\n\t\t\t\tthis._nodes.push(node);\n\n\t\t\t\t// ensure the display flag is set accordingly\n\t\t\t\tif (node_data.flags?.display) {\n\t\t\t\t\tnode.flags?.display?.set(true);\n\t\t\t\t}\n\t\t\t\tconst operation_container = this._createOperationContainer(\n\t\t\t\t\tscene_importer,\n\t\t\t\t\tnode as OperationsComposerSopNode,\n\t\t\t\t\tnode_data,\n\t\t\t\t\tnode.name()\n\t\t\t\t);\n\t\t\t\t(node as OperationsComposerSopNode).setOutputOperationContainer(\n\t\t\t\t\toperation_container as SopOperationContainer\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (let node of this._nodes) {\n\t\t\tconst operation_container = (node as OperationsComposerSopNode).outputOperationContainer();\n\t\t\tif (operation_container) {\n\t\t\t\tthis._node_inputs = [];\n\t\t\t\tthis._add_optimized_node_inputs(\n\t\t\t\t\tscene_importer,\n\t\t\t\t\tnode as OperationsComposerSopNode,\n\t\t\t\t\tdata,\n\t\t\t\t\tnode.name(),\n\t\t\t\t\toperation_container\n\t\t\t\t);\n\t\t\t\tnode.io.inputs.setCount(this._node_inputs.length);\n\t\t\t\tfor (let i = 0; i < this._node_inputs.length; i++) {\n\t\t\t\t\tnode.setInput(i, this._node_inputs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _node_inputs: BaseNodeType[] = [];\n\tprivate _add_optimized_node_inputs(\n\t\tscene_importer: SceneJsonImporter,\n\t\tnode: OperationsComposerSopNode,\n\t\tdata: PolyDictionary<NodeJsonExporterData>,\n\t\tnode_name: string,\n\t\tcurrent_operation_container: SopOperationContainer\n\t) {\n\t\tconst node_data: NodeJsonExporterData = data[node_name];\n\t\tconst inputs_data = node_data['inputs'];\n\t\tif (!inputs_data) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let input_data of inputs_data) {\n\t\t\tif (CoreType.isString(input_data)) {\n\t\t\t\tconst input_node_data = data[input_data];\n\t\t\t\tif (input_node_data) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tOptimizedNodesJsonImporter.is_node_optimized(input_node_data) &&\n\t\t\t\t\t\t!this._optimized_root_node_names.has(input_data) // ensure it is not a root\n\t\t\t\t\t) {\n\t\t\t\t\t\t// ensure we do not create multiple operation containers from the same node\n\t\t\t\t\t\tlet operation_container = this._operation_containers_by_name.get(input_data);\n\t\t\t\t\t\tif (!operation_container) {\n\t\t\t\t\t\t\t// if the input is an optimized node, we create an operation and go recursive\n\t\t\t\t\t\t\toperation_container = this._createOperationContainer(\n\t\t\t\t\t\t\t\tscene_importer,\n\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\tinput_node_data,\n\t\t\t\t\t\t\t\tinput_data\n\t\t\t\t\t\t\t) as SopOperationContainer;\n\t\t\t\t\t\t\tif (operation_container) {\n\t\t\t\t\t\t\t\tthis._add_optimized_node_inputs(\n\t\t\t\t\t\t\t\t\tscene_importer,\n\t\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\tinput_data,\n\t\t\t\t\t\t\t\t\toperation_container\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrent_operation_container.addInput(operation_container);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if the input is NOT an optimized node, we set the input to the node\n\t\t\t\t\t\tconst input_node = node.parent()?.node(input_data);\n\t\t\t\t\t\tif (input_node) {\n\t\t\t\t\t\t\tthis._node_inputs.push(input_node);\n\t\t\t\t\t\t\tconst node_input_index = this._node_inputs.length - 1;\n\t\t\t\t\t\t\t// node.setInput(node_input_index, input_node as BaseSopNodeType);\n\t\t\t\t\t\t\tnode.addInputConfig(current_operation_container, {\n\t\t\t\t\t\t\t\toperation_input_index: current_operation_container.currentInputIndex(),\n\t\t\t\t\t\t\t\tnode_input_index: node_input_index,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcurrent_operation_container.incrementInputIndex();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// once the inputs have been set, we can initialize the inputs_clone_state\n\t\tif (node_data.cloned_state_overriden == true) {\n\t\t\tcurrent_operation_container.overrideInputCloneState(node_data.cloned_state_overriden);\n\t\t}\n\t}\n\n\tstatic child_names_by_optimized_state(data: PolyDictionary<NodeJsonExporterData>) {\n\t\tconst node_names = Object.keys(data);\n\t\tconst optimized_names: string[] = [];\n\t\tconst non_optimized_names: string[] = [];\n\t\tfor (let node_name of node_names) {\n\t\t\tconst node_data = data[node_name];\n\t\t\tconst optimized_state = Poly.playerMode() && this.is_node_optimized(node_data);\n\t\t\tif (optimized_state) {\n\t\t\t\toptimized_names.push(node_name);\n\t\t\t} else {\n\t\t\t\tnon_optimized_names.push(node_name);\n\t\t\t}\n\t\t}\n\t\treturn {optimized_names, non_optimized_names};\n\t}\n\n\t// private _optimized_names_for_root(\n\t// \tdata: PolyDictionary<NodeJsonExporterData>,\n\t// \tcurrent_node_name: string,\n\t// \tcurrent_node_data: NodeJsonExporterData,\n\t// \tinput_names: string[] = []\n\t// ) {\n\t// \tinput_names.push(current_node_name);\n\t// \tconst inputs = current_node_data['inputs'];\n\t// \tif (inputs) {\n\t// \t\tfor (let input_data of inputs) {\n\t// \t\t\tif (CoreType.isString(input_data)) {\n\t// \t\t\t\tconst input_node_name = input_data;\n\t// \t\t\t\t// if (input_node_name != current_node_name) {\n\t// \t\t\t\tconst input_node_data = data[input_node_name];\n\n\t// \t\t\t\tif (input_node_data) {\n\t// \t\t\t\t\tif (\n\t// \t\t\t\t\t\tOptimizedNodesJsonImporter.is_node_optimized(input_node_data) &&\n\t// \t\t\t\t\t\t!this._is_optimized_root_node(data, input_node_name, input_node_data)\n\t// \t\t\t\t\t) {\n\t// \t\t\t\t\t\tthis._optimized_names_for_root(data, input_node_name, input_node_data, input_names);\n\t// \t\t\t\t\t}\n\t// \t\t\t\t}\n\t// \t\t\t\t// }\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \treturn input_names;\n\t// }\n\n\t// a node will be considered optimized root node if:\n\t// - it has no output\n\t// - at least one output is not optimized (as it if it has 2 outputs, and only 1 is optimized, it will not be considered root)\n\tstatic is_optimized_root_node_generic(data: RootNodeGenericData): boolean {\n\t\tif (data.outputs_count == 0) {\n\t\t\treturn true;\n\t\t}\n\t\tif (data.non_optimized_count > 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tstatic is_optimized_root_node(data: PolyDictionary<NodeJsonExporterData>, current_node_name: string) {\n\t\tconst output_names = this.node_outputs(data, current_node_name);\n\n\t\tlet non_optimized_count = 0;\n\t\toutput_names.forEach((node_name) => {\n\t\t\tconst node_data = data[node_name];\n\t\t\tif (!this.is_node_optimized(node_data)) {\n\t\t\t\tnon_optimized_count++;\n\t\t\t}\n\t\t});\n\n\t\treturn this.is_optimized_root_node_generic({\n\t\t\toutputs_count: output_names.size,\n\t\t\tnon_optimized_count: non_optimized_count,\n\t\t});\n\t}\n\t// same algo as is_optimized_root_node, but for a node\n\tstatic is_optimized_root_node_from_node<NC extends NodeContext>(node: TypedNode<NC, any>) {\n\t\tif (!node.flags?.optimize?.active()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst outputConnections: TypedNodeConnection<NC>[] = [];\n\t\tnode.io.connections.outputConnections(outputConnections);\n\t\tconst outputNodes = outputConnections.map((c) => c.nodeDest());\n\t\tlet non_optimized_count = 0;\n\t\tfor (let output_node of outputNodes) {\n\t\t\tif (!output_node.flags?.optimize?.active()) {\n\t\t\t\tnon_optimized_count++;\n\t\t\t}\n\t\t}\n\t\treturn this.is_optimized_root_node_generic({\n\t\t\toutputs_count: outputNodes.length,\n\t\t\tnon_optimized_count: non_optimized_count,\n\t\t});\n\t}\n\n\tstatic node_outputs(\n\t\tdata: PolyDictionary<NodeJsonExporterData>,\n\t\tcurrent_node_name: string\n\t\t// current_node_data: NodeJsonExporterData\n\t) {\n\t\tconst node_names = Object.keys(data);\n\t\tconst output_node_names: Set<string> = new Set();\n\t\tfor (let node_name of node_names) {\n\t\t\tif (node_name != current_node_name) {\n\t\t\t\tconst node_data = data[node_name];\n\t\t\t\tconst inputs = node_data['inputs'];\n\t\t\t\tif (inputs) {\n\t\t\t\t\tfor (let input_data of inputs) {\n\t\t\t\t\t\tif (CoreType.isString(input_data)) {\n\t\t\t\t\t\t\tconst input_node_name = input_data;\n\t\t\t\t\t\t\tif (input_node_name == current_node_name) {\n\t\t\t\t\t\t\t\toutput_node_names.add(node_name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn output_node_names;\n\t}\n\n\tprivate _createOperationContainer(\n\t\tscene_importer: SceneJsonImporter,\n\t\tnode: OperationsComposerSopNode,\n\t\tnode_data: NodeJsonExporterData,\n\t\tnode_name: string\n\t) {\n\t\tconst paramsInitValueOverrides = ParamJsonImporter.non_spare_params_data_value(node_data['params']);\n\t\tconst operation_type = OptimizedNodesJsonImporter.operation_type(node_data);\n\t\tconst createOptions: NodeCreateOptions = {paramsInitValueOverrides};\n\t\tconst operation_container = this._node.createOperationContainer(\n\t\t\toperation_type,\n\t\t\tnode_name,\n\t\t\tcreateOptions\n\t\t) as SopOperationContainer;\n\t\tif (operation_container) {\n\t\t\t// ensure we do not create another operation container from the same node\n\t\t\tthis._operation_containers_by_name.set(node_name, operation_container);\n\n\t\t\t// store for path_param resolve when all nodes are created\n\t\t\tif (operation_container.pathParamResolveRequired()) {\n\t\t\t\tnode.addOperationContainerWithPathParamResolveRequired(operation_container);\n\t\t\t\tscene_importer.add_operations_composer_node_with_path_param_resolve_required(node);\n\t\t\t}\n\t\t}\n\n\t\treturn operation_container;\n\t}\n\n\tstatic operation_type(node_data: NodeJsonExporterData) {\n\t\tif (OptimizedNodesJsonImporter.is_node_bypassed(node_data)) {\n\t\t\treturn 'null';\n\t\t}\n\t\treturn node_data['type'];\n\t}\n\n\tstatic is_node_optimized(node_data: NodeJsonExporterData) {\n\t\tconst node_flags = node_data['flags'];\n\t\tif (node_flags && node_flags['optimize']) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tstatic is_node_bypassed(node_data: NodeJsonExporterData) {\n\t\tconst node_flags = node_data['flags'];\n\t\tif (node_flags && node_flags['bypass']) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import type {TypedNode, BaseNodeType} from '../../../nodes/_Base';\nimport type {JsonImportDispatcher} from './Dispatcher';\nimport type {SceneJsonImporter} from '../../../io/json/import/Scene';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport type {NodeJsonExporterData} from '../export/Node';\nimport {ParamJsonImporter} from './Param';\nimport {OptimizedNodesJsonImporter} from './OptimizedNodes';\nimport type {PolyNodeJsonImporter} from './nodes/Poly';\nimport {Poly} from '../../../Poly';\nimport type {NodeJsonImporter} from './Node';\nimport {CoreString} from '../../../../core/String';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\nimport type {NodeCreateOptions} from '../../../nodes/utils/hierarchy/ChildrenController';\n\ntype BaseNodeTypeWithIO = TypedNode<NodeContext, any>;\nexport class NodesJsonImporter<T extends BaseNodeTypeWithIO> {\n\tconstructor(protected _node: T, protected dispatcher: JsonImportDispatcher) {}\n\n\tprocess_data(sceneImporter: SceneJsonImporter, data?: PolyDictionary<NodeJsonExporterData>) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tif (!(this._node.childrenAllowed() && this._node.childrenController)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {optimized_names, non_optimized_names} = OptimizedNodesJsonImporter.child_names_by_optimized_state(data);\n\t\tconst nonOptimizedNodes: BaseNodeTypeWithIO[] = [];\n\t\tconst migrateHelper = sceneImporter.migrateHelper();\n\t\tfor (let nodeName of non_optimized_names) {\n\t\t\tconst node_data = data[nodeName];\n\t\t\tconst nodeType = migrateHelper ? migrateHelper.migrateNodeType(this._node, node_data) : node_data.type;\n\t\t\tmigrateHelper?.migrateParams(this._node, node_data);\n\t\t\tconst paramsInitValueOverrides = ParamJsonImporter.non_spare_params_data_value(node_data['params']);\n\t\t\tconst nodeCreateOptions: NodeCreateOptions = {\n\t\t\t\tparamsInitValueOverrides,\n\t\t\t\tnodeName,\n\t\t\t};\n\n\t\t\tconst loadNodeAttempt = (nodeType: string, nodeCreateOptions: NodeCreateOptions) => {\n\t\t\t\ttry {\n\t\t\t\t\t// try with current type\n\t\t\t\t\tconst node = this._node.createNode(nodeType, nodeCreateOptions);\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(`error importing node: cannot create with type ${nodeType}`, e);\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet node = loadNodeAttempt(nodeType, nodeCreateOptions);\n\n\t\t\tif (!node) {\n\t\t\t\t// try with camelCased type\n\t\t\t\tconst nodeTypeCamelCase = CoreString.camelCase(nodeType);\n\t\t\t\tnode = loadNodeAttempt(nodeTypeCamelCase, nodeCreateOptions);\n\t\t\t}\n\t\t\tif (!node) {\n\t\t\t\t// add Network\n\t\t\t\tconst nodeTypeWithNetwork = `${nodeType}Network`;\n\t\t\t\tnode = loadNodeAttempt(nodeTypeWithNetwork, nodeCreateOptions);\n\t\t\t}\n\t\t\tif (node) {\n\t\t\t\tnonOptimizedNodes.push(node);\n\t\t\t} else {\n\t\t\t\tconst message = `failed to create node with type '${nodeType}' (in '${this._node.path()}')`;\n\t\t\t\tsceneImporter.report.addWarning(message);\n\t\t\t\tPoly.warn(message);\n\t\t\t}\n\n\t\t\t// try {\n\t\t\t// \t// try with current type\n\t\t\t// \tconst node = this._node.createNode(nodeType, nodeCreateOptions);\n\t\t\t// \tif (node) {\n\t\t\t// \t\t// node.setName(node_name);\n\t\t\t// \t\tnonOptimizedNodes.push(node);\n\t\t\t// \t}\n\t\t\t// } catch (e) {\n\t\t\t// \t// try with camelCased type\n\t\t\t// \tconsole.error(`error importing node: cannot create with type ${nodeType}`, e);\n\t\t\t// \tconst nodeTypeCamelCase = CoreString.camelCase(nodeType);\n\t\t\t// \ttry {\n\t\t\t// \t\tconst node = this._node.createNode(nodeTypeCamelCase, nodeCreateOptions);\n\t\t\t// \t\tif (node) {\n\t\t\t// \t\t\t// node.setName(node_name);\n\t\t\t// \t\t\tnonOptimizedNodes.push(node);\n\t\t\t// \t\t}\n\t\t\t// \t} catch (e) {\n\t\t\t// \t\t// add Network\n\t\t\t// \t\tconst nodeTypeWithNetwork = `${nodeType}Network`;\n\t\t\t// \t\ttry {\n\t\t\t// \t\t\tconst node = this._node.createNode(nodeTypeWithNetwork, nodeCreateOptions);\n\t\t\t// \t\t\tif (node) {\n\t\t\t// \t\t\t\t// node.setName(node_name);\n\t\t\t// \t\t\t\tnonOptimizedNodes.push(node);\n\t\t\t// \t\t\t}\n\t\t\t// \t\t} catch (e) {\n\t\t\t// \t\t\tconst message = `failed to create node with type '${nodeType}', '${nodeTypeCamelCase}' or '${nodeTypeWithNetwork}'`;\n\t\t\t// \t\t\tscene_importer.report.addWarning(message);\n\t\t\t// \t\t\tPoly.warn(message, e);\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\n\t\tif (optimized_names.length > 0) {\n\t\t\tconst optimized_nodes_importer = new OptimizedNodesJsonImporter(this._node);\n\t\t\toptimized_nodes_importer.process_data(sceneImporter, data);\n\n\t\t\t// ensure that the display node is still created\n\t\t\t// as it may not be if the display flag is set to a node that will\n\t\t\t// be part of an optimized series of nodes\n\t\t\t// for instance\n\t\t\t// A -> B > C\n\t\t\t// D -> E\n\t\t\t// if A, B and C are optimized,\n\t\t\t// and D, E are not\n\t\t\t// And B has the display flag,\n\t\t\t// what will happen is that B will not exist anymore\n\t\t\t// and the display flag will end up in either C, D or E\n\t\t\t// which can lead to unexpected display in the player\n\t\t\tif (this._node.childrenController.context == NodeContext.SOP) {\n\t\t\t\tconst nodeNames = Object.keys(data);\n\t\t\t\tlet nodeNameWithDisplayFlag: string | undefined = undefined;\n\t\t\t\tfor (let nodeName of nodeNames) {\n\t\t\t\t\tconst nodeData = data[nodeName];\n\t\t\t\t\tif (nodeData.flags?.display) {\n\t\t\t\t\t\tnodeNameWithDisplayFlag = nodeName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nodeNameWithDisplayFlag) {\n\t\t\t\t\tconst existingNodeNames = nonOptimizedNodes.map((n) => n.name());\n\t\t\t\t\tconst optimizedNodes = optimized_nodes_importer.nodes();\n\t\t\t\t\tfor (let optimizedNode of optimizedNodes) {\n\t\t\t\t\t\texistingNodeNames.push(optimizedNode.name());\n\t\t\t\t\t}\n\t\t\t\t\tif (!existingNodeNames.includes(nodeNameWithDisplayFlag)) {\n\t\t\t\t\t\tconst parentFullPath = this._node.path();\n\t\t\t\t\t\tconst nodeFullPath = `${parentFullPath}/${nodeNameWithDisplayFlag}`;\n\t\t\t\t\t\tconst message = `node '${nodeFullPath}' with display flag has been optimized and does not exist in player mode`;\n\t\t\t\t\t\tconsole.error(message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst importers_by_node_name: Map<string, PolyNodeJsonImporter | NodeJsonImporter<BaseNodeType>> = new Map();\n\t\tfor (let node of nonOptimizedNodes) {\n\t\t\tconst child_data = data[node.name()];\n\t\t\tif (child_data) {\n\t\t\t\tconst importer = this.dispatcher.dispatchNode(node);\n\t\t\t\timporters_by_node_name.set(node.name(), importer);\n\t\t\t\timporter.process_data(sceneImporter, data[node.name()]);\n\t\t\t} else {\n\t\t\t\tPoly.warn(`possible import error for node ${node.name()}`);\n\t\t\t\tPoly.log('available names are', Object.keys(data).sort(), data);\n\t\t\t}\n\t\t}\n\t\tfor (let node of nonOptimizedNodes) {\n\t\t\tconst importer = importers_by_node_name.get(node.name());\n\t\t\tif (importer) {\n\t\t\t\timporter.process_inputs_data(sceneImporter, data[node.name()]);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../../../nodes/_Base';\nimport {BaseParamType} from '../../../params/_Base';\n\nimport {NodeJsonImporter} from './Node';\n// import {BaseNodeObjJsonImporter} from './node/Obj';\n// import {BaseNodeSopSubnetworkJsonImporter} from './node/Subnetwork';\n\nimport {ParamJsonImporter} from './Param';\nimport {ParamMultipleJsonImporter} from './param/Multiple';\nimport {ParamStringJsonImporter} from './param/String';\nimport {ParamRampJsonImporter} from './param/Ramp';\n// import {TypedObjNode} from '../../../nodes/obj/_Base';\nimport {TypedMultipleParam} from '../../../params/_Multiple';\nimport {StringParam} from '../../../params/String';\nimport {RampParam} from '../../../params/Ramp';\n// import {PolySopNode} from '../../../nodes/sop/Poly';\n// import {PolyObjNode} from '../../../nodes/obj/Poly';\nimport {PolyNodeJsonImporter} from './nodes/Poly';\nimport {NodesJsonImporter} from './Nodes';\n\nexport class JsonImportDispatcher {\n\tdispatchNode(node: BaseNodeType) {\n\t\t// using PolySopNode and PolyObjNode seem to create circular dependency with webpack\n\t\t// if (node instanceof PolySopNode || node instanceof PolyObjNode)\n\t\tif (node.polyNodeController) {\n\t\t\treturn this._dispatchPolyNode(node);\n\t\t}\n\t\treturn this.dispatchNonPolyNode(node);\n\t}\n\tprivate _dispatchPolyNode(node: BaseNodeType) {\n\t\tconst nodesImporter = new NodesJsonImporter(node, this);\n\t\treturn new PolyNodeJsonImporter(node, this, nodesImporter);\n\t}\n\tdispatchNonPolyNode(node: BaseNodeType) {\n\t\tconst nodesImporter = new NodesJsonImporter(node, this);\n\t\treturn new NodeJsonImporter(node, this, nodesImporter);\n\t}\n\n\tdispatchParam(param: BaseParamType) {\n\t\tif (param instanceof TypedMultipleParam) {\n\t\t\treturn new ParamMultipleJsonImporter(param);\n\t\t}\n\t\tif (param instanceof StringParam) {\n\t\t\treturn new ParamStringJsonImporter(param);\n\t\t}\n\t\tif (param instanceof RampParam) {\n\t\t\treturn new ParamRampJsonImporter(param);\n\t\t}\n\t\treturn new ParamJsonImporter(param);\n\t}\n}\n\n// export class CodeImporterVisitor {\n// \tstatic node(node: BaseNode): NodeCodeImporter {\n// \t\treturn new NodeCodeImporter(node);\n// \t}\n// \tstatic node_obj(node: BaseNode) {\n// \t\treturn new BaseNodeObjCodeImporter(node);\n// \t}\n// \tstatic node_sop_subnetwork(node: BaseNode) {\n// \t\treturn new BaseNodeSopSubnetworkCodeImporter(node);\n// \t}\n\n// \tstatic visit_param(param: BaseParam) {\n// \t\treturn new ParamCodeImporter(param);\n// \t}\n// \tstatic param_multiple(param: BaseParam) {\n// \t\treturn new ParamMultipleCodeImporter(param);\n// \t}\n// \tstatic param_numeric(param: BaseParam) {\n// \t\treturn new ParamNumericCodeImporter(param);\n// \t}\n// \tstatic param_operator_path(param: BaseParam) {\n// \t\treturn new ParamOperatorPathCodeImporter(param);\n// \t}\n// \tstatic param_string(param: BaseParam) {\n// \t\treturn new ParamStringCodeImporter(param);\n// \t}\n// \tstatic param_ramp(param: BaseParam) {\n// \t\treturn new ParamRampCodeImporter(param);\n// \t}\n// }\n","import {BaseParamType} from '../../../params/_Base';\nimport {\n\tComplexParamJsonExporterData,\n\tParamJsonExporterData,\n\tParamsJsonExporterData,\n\tSimpleParamJsonExporterData,\n\tParamsInitData,\n} from '../../../nodes/utils/io/IOController';\nimport {ParamType} from '../../../poly/ParamType';\n\nexport class ParamJsonImporter<T extends BaseParamType> {\n\tconstructor(protected _param: T) {}\n\n\tprocess_data(data: ComplexParamJsonExporterData<ParamType>) {\n\t\tconst raw_input = data['raw_input'];\n\t\t// const expression = data['expression'];\n\t\t// const components = data['components'];\n\t\t// if (expression !== undefined) {\n\t\t// \tthis._param.set(expression);\n\t\t// }\n\t\tif (raw_input !== undefined) {\n\t\t\tthis._param.set(raw_input);\n\t\t}\n\n\t\t// const referenced_asset = data['referenced_asset']\n\t\t// if(referenced_asset){\n\t\t// \tthis._param.mark_as_referencing_asset(referenced_asset)\n\t\t// }\n\n\t\tthis.add_main(data);\n\t}\n\n\tadd_main(data: ComplexParamJsonExporterData<ParamType>) {}\n\n\tstatic spare_params_data(params_data?: ParamsJsonExporterData) {\n\t\treturn this.params_data(true, params_data);\n\t}\n\n\tstatic non_spare_params_data_value(params_data?: ParamsJsonExporterData): ParamsInitData | undefined {\n\t\treturn this.params_data_value(false, params_data);\n\t}\n\tstatic params_data(spare: boolean, params_data?: ParamsJsonExporterData): ParamsJsonExporterData | undefined {\n\t\tlet non_spare_params_data: ParamsJsonExporterData | undefined;\n\t\tif (params_data) {\n\t\t\tnon_spare_params_data = {};\n\t\t\tconst param_names = Object.keys(params_data);\n\t\t\tlet param_data: ParamJsonExporterData<ParamType>;\n\t\t\tfor (let param_name of param_names) {\n\t\t\t\tparam_data = params_data[param_name];\n\t\t\t\tif (param_data) {\n\t\t\t\t\tnon_spare_params_data[param_name] = params_data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn non_spare_params_data;\n\t}\n\tprivate static params_data_value(spare: boolean, params_data?: ParamsJsonExporterData): ParamsInitData | undefined {\n\t\tlet non_spare_params_data: ParamsInitData | undefined;\n\t\tif (params_data) {\n\t\t\tnon_spare_params_data = {};\n\t\t\tconst param_names = Object.keys(params_data);\n\t\t\tlet param_data: ParamJsonExporterData<ParamType>;\n\t\t\tfor (let param_name of param_names) {\n\t\t\t\tparam_data = params_data[param_name];\n\t\t\t\tif (param_data != null) {\n\t\t\t\t\tconst options = (param_data as ComplexParamJsonExporterData<ParamType>).options;\n\t\t\t\t\tconst overriden_options = (param_data as ComplexParamJsonExporterData<ParamType>).overriden_options;\n\t\t\t\t\tif (options || overriden_options) {\n\t\t\t\t\t\tconst complex_data = param_data as ComplexParamJsonExporterData<ParamType>;\n\t\t\t\t\t\tif (options && options.spare == spare) {\n\t\t\t\t\t\t\tif (complex_data.raw_input != null) {\n\t\t\t\t\t\t\t\tnon_spare_params_data[param_name] = {complex_data: complex_data};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// TODO: THIS IS A MESS\n\t\t\t\t\t\t\tif (overriden_options) {\n\t\t\t\t\t\t\t\tnon_spare_params_data[param_name] = {complex_data: complex_data};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// TODO: THIS IS A MESS\n\t\t\t\t\t\tconst simple_data = param_data as SimpleParamJsonExporterData<ParamType>;\n\t\t\t\t\t\tif (overriden_options || simple_data != null) {\n\t\t\t\t\t\t\tnon_spare_params_data[param_name] = {\n\t\t\t\t\t\t\t\tsimple_data: simple_data,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn non_spare_params_data;\n\t}\n}\n","import {CoreFeaturesController} from './../../../../core/FeaturesController';\nimport {SceneJsonImporter} from './Scene';\n\nexport class ImportReport {\n\tprivate _warnings: string[] = [];\n\tprivate _readonly: boolean = false;\n\tprivate _loadedWithoutAssemblers: boolean = false;\n\tconstructor(_sceneImporter: SceneJsonImporter) {}\n\n\twarnings() {\n\t\treturn this._warnings;\n\t}\n\treadonly() {\n\t\treturn this._readonly;\n\t}\n\tloadedWithoutAssemblers() {\n\t\treturn this._loadedWithoutAssemblers;\n\t}\n\n\treset() {\n\t\tthis._warnings = [];\n\t}\n\n\tmarkAsLoadedWithoutAssemblers() {\n\t\tthis._readonly = true;\n\t\tthis._loadedWithoutAssemblers = true;\n\t}\n\taddWarning(message: string) {\n\t\tthis._warnings.push(message);\n\t\tif (CoreFeaturesController.debugLoadProgress()) {\n\t\t\tconsole.warn(message);\n\t\t}\n\t}\n}\n","import {CoreFeaturesController} from './../../../../core/FeaturesController';\nimport {NodeJsonExporterData} from './../export/Node';\nimport {BaseNodeType} from './../../../nodes/_Base';\nimport {NodeContext} from './../../../poly/NodeContext';\nimport {PolyNodeController} from './../../../nodes/utils/poly/PolyNodeController';\nimport {PolyScene} from '../../../scene/PolyScene';\n// import {JsonImporterVisitor} from './Visitor'\nimport {SceneJsonExporterData} from '../export/Scene';\nimport {JsonImportDispatcher} from './Dispatcher';\nimport {ImportReport} from './ImportReport';\nimport {OperationsComposerSopNode} from '../../../nodes/sop/OperationsComposer';\nimport {TimeController} from '../../../scene/utils/TimeController';\nimport {ParamJsonImporter} from './Param';\nimport {NodeCreateOptions} from '../../../nodes/utils/hierarchy/ChildrenController';\nimport {ROOT_NODE_NAME} from '../../../nodes/manager/Root';\nimport {CoreNodeSerializer} from '../../../nodes/utils/CoreNodeSerializer';\nimport {CoreParamSerializer} from '../../../params/utils/CoreParamSerializer';\nimport type {ParamType} from '../../../poly/ParamType';\nexport type ConfigureSceneCallback = (scene: PolyScene) => void;\nexport type NodeCookWatchCallback = (scene: PolyScene) => void;\n\nexport interface SerializerOptions {\n\tnodeSerializerClass: typeof CoreNodeSerializer;\n\tparamsSerializerClass: typeof CoreParamSerializer<ParamType>;\n}\ninterface SceneJSONImporterOptions {\n\tsceneName?: string;\n\tconfigureScene?: ConfigureSceneCallback;\n\tnodeCookWatcher?: NodeCookWatchCallback;\n\tmeasurePerformanceOnLoad?: boolean;\n\tserializers?: SerializerOptions;\n}\n\ninterface MigrateHelper {\n\tmigrateData: (data: SceneJsonExporterData) => SceneJsonExporterData;\n\tmigrateNodeType: (parentNode: BaseNodeType, nodeData: NodeJsonExporterData) => string;\n\tmigrateParams: (parentNode: BaseNodeType, nodeData: NodeJsonExporterData) => void;\n}\n\nexport class SceneJsonImporter {\n\tpublic readonly report = new ImportReport(this);\n\tprivate _base_operations_composer_nodes_with_resolve_required: OperationsComposerSopNode[] | undefined;\n\tconstructor(private _data: SceneJsonExporterData, private _options?: SceneJSONImporterOptions) {}\n\n\tstatic async loadData(data: SceneJsonExporterData, options?: SceneJSONImporterOptions) {\n\t\tconst importer = new SceneJsonImporter(data, options);\n\t\treturn await importer.scene(options?.serializers);\n\t}\n\tprivate _migrateHelper: MigrateHelper | undefined;\n\tsetMigrateHelper(migrateHelper: MigrateHelper) {\n\t\tthis._migrateHelper = migrateHelper;\n\t}\n\tmigrateHelper() {\n\t\treturn this._migrateHelper;\n\t}\n\toldPolygonjsSceneVersion() {\n\t\tconst properties = this._data['properties'];\n\t\tif (properties) {\n\t\t\treturn properties.versions?.polygonjs;\n\t\t}\n\t}\n\n\tscene(options?: SerializerOptions): PolyScene {\n\t\tif (this._migrateHelper) {\n\t\t\tthis._data = this._migrateHelper.migrateData(this._data);\n\t\t}\n\n\t\tif (CoreFeaturesController.debugLoadProgress()) {\n\t\t\tconsole.log(`polygonjs version:${this.oldPolygonjsSceneVersion()}`);\n\t\t}\n\t\tconst rootData = this._data['root']!;\n\t\tconst paramsInitValueOverrides = ParamJsonImporter.non_spare_params_data_value(rootData['params']);\n\t\tconst nodeCreateOptions: NodeCreateOptions = {\n\t\t\tparamsInitValueOverrides,\n\t\t\tnodeName: ROOT_NODE_NAME,\n\t\t\tserializerClass: options?.nodeSerializerClass,\n\t\t};\n\n\t\tconst embeddedPolyNodes = this._data.embeddedPolyNodes;\n\t\tif (embeddedPolyNodes) {\n\t\t\tconst keys = Object.keys(embeddedPolyNodes);\n\t\t\tfor (let key of keys) {\n\t\t\t\tconst elements = key.split('/');\n\t\t\t\tconst nodeContext = elements[0] as NodeContext;\n\t\t\t\tconst nodeType = elements[1];\n\t\t\t\tconst data = embeddedPolyNodes[key];\n\t\t\t\tPolyNodeController.createNodeClassAndRegister({\n\t\t\t\t\tnode_context: nodeContext,\n\t\t\t\t\tnode_type: nodeType,\n\t\t\t\t\tdata,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst scene = new PolyScene({root: nodeCreateOptions, paramsSerializerClass: options?.paramsSerializerClass});\n\t\tif (this._options) {\n\t\t\tif (this._options.sceneName) {\n\t\t\t\tscene.setName(this._options.sceneName);\n\t\t\t}\n\t\t\tif (this._options.measurePerformanceOnLoad == true) {\n\t\t\t\tscene.performance.start();\n\t\t\t}\n\t\t}\n\t\tscene.loadingController.markAsLoading();\n\n\t\t// scene.set_js_version(this._data['__js_version'])\n\t\tconst properties = this._data['properties'];\n\t\tif (properties) {\n\t\t\t// properties.versions?.polygonjs\n\t\t\t// scene.setName(properties['name'])\n\t\t\tconst maxFrame = properties['maxFrame'] || 600;\n\t\t\tscene.timeController.setMaxFrame(maxFrame);\n\t\t\tconst maxFrameLocked = properties['maxFrameLocked'];\n\t\t\tif (maxFrameLocked) {\n\t\t\t\tscene.timeController.setMaxFrameLocked(maxFrameLocked);\n\t\t\t}\n\t\t\tconst realtimeState = properties['realtimeState'];\n\t\t\tif (realtimeState != null) {\n\t\t\t\tscene.timeController.setRealtimeState(realtimeState);\n\t\t\t}\n\t\t\t// set frame after the range has been set, to avoid clamping\n\t\t\tscene.setFrame(properties['frame'] || TimeController.START_FRAME);\n\n\t\t\t// scene.time_controller.set_fps(properties['fps'] || 30);\n\t\t\tconst mainCameraPath = properties['mainCameraNodePath'] || properties['mainCameraPath'];\n\t\t\tif (mainCameraPath) {\n\t\t\t\tscene.camerasController.setMainCameraPath(mainCameraPath);\n\t\t\t}\n\t\t}\n\n\t\t// we block to ensure that nodes will not run their dirty_hooks\n\t\t// which would trigger operator_path params to search for nodes that\n\t\t// may not exist yet\n\t\tscene.cooker.block();\n\n\t\tthis._base_operations_composer_nodes_with_resolve_required = undefined;\n\n\t\tconst dispatcher = new JsonImportDispatcher();\n\t\tconst importer = dispatcher.dispatchNode(scene.root());\n\n\t\tif (rootData) {\n\t\t\timporter.process_data(this, rootData);\n\t\t}\n\t\tconst uiData = this._data['ui'];\n\t\tif (uiData) {\n\t\t\timporter.process_ui_data(this, uiData);\n\t\t}\n\n\t\tthis._resolve_operation_containers_with_path_param_resolve();\n\n\t\tif (this._options) {\n\t\t\tif (this._options.nodeCookWatcher) {\n\t\t\t\tthis._options.nodeCookWatcher(scene);\n\t\t\t}\n\t\t\tif (this._options.configureScene) {\n\t\t\t\t// make sure configureScene is called after the setName above\n\t\t\t\tthis._options.configureScene(scene);\n\t\t\t}\n\t\t}\n\t\tscene.loadingController.markAsLoaded();\n\t\tscene.cooker.unblock();\n\n\t\t// DO NOT wait for cooks here,\n\t\t// as a viewer will only be created once everything has cooked\n\t\t// which would be a problem for envMap or other nodes relying on the renderer being created\n\t\t// await scene.waitForCooksCompleted();\n\n\t\treturn scene;\n\t}\n\tshadersData() {\n\t\treturn this._data['shaders'];\n\t}\n\tjsFunctionBodiesData() {\n\t\treturn this._data['jsFunctionBodies'];\n\t}\n\n\t//\n\t//\n\t// OPERATION CONTAINER RESOLVE\n\t//\n\t//\n\tadd_operations_composer_node_with_path_param_resolve_required(operations_composer_node: OperationsComposerSopNode) {\n\t\tif (!this._base_operations_composer_nodes_with_resolve_required) {\n\t\t\tthis._base_operations_composer_nodes_with_resolve_required = [];\n\t\t}\n\t\tthis._base_operations_composer_nodes_with_resolve_required.push(operations_composer_node);\n\t}\n\tprivate _resolve_operation_containers_with_path_param_resolve() {\n\t\tif (!this._base_operations_composer_nodes_with_resolve_required) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let operations_composer_node of this._base_operations_composer_nodes_with_resolve_required) {\n\t\t\toperations_composer_node.resolveOperationContainersPathParams();\n\t\t}\n\t}\n}\n","import {Vector2} from 'three';\nimport {Color} from 'three';\nimport {BaseNodeType} from '../_Base';\nimport {NodeEvent} from '../../poly/NodeEvent';\nimport {CoreType} from '../../../core/Type';\n\nexport interface NodeUIDataJson {\n\tx: number;\n\ty: number;\n\tcomment?: string;\n}\n\nexport class UIData {\n\tprivate _position: Vector2 = new Vector2();\n\tprotected _width: number = 50;\n\t// private _border_radius: number = 3;\n\tprivate _color: Color = new Color(0.75, 0.75, 0.75);\n\t// private _icon: string | null = null;\n\tprivate _layoutVertical: boolean = true;\n\tprivate _comment: string | undefined;\n\tprivate _json: NodeUIDataJson = {\n\t\tx: 0,\n\t\ty: 0,\n\t};\n\n\tconstructor(private node: BaseNodeType, x: number = 0, y: number = 0) {\n\t\tthis._position.x = x;\n\t\tthis._position.y = y;\n\t}\n\tdispose() {\n\t\tthis._comment = undefined;\n\t}\n\n\tsetComment(comment: string | undefined) {\n\t\tthis._comment = comment;\n\t\tthis.node.emit(NodeEvent.UI_DATA_COMMENT_UPDATED);\n\t}\n\tcomment(): string | undefined {\n\t\treturn this._comment;\n\t}\n\tsetColor(color: Color) {\n\t\tthis._color = color;\n\t}\n\tcolor() {\n\t\treturn this._color;\n\t}\n\t// setIcon(icon: string) {\n\t// \tthis._icon = icon;\n\t// }\n\t// icon() {\n\t// \treturn this._icon;\n\t// }\n\tsetLayoutHorizontal() {\n\t\tthis._layoutVertical = false;\n\t}\n\tisLayoutVertical() {\n\t\treturn this._layoutVertical;\n\t}\n\n\tcopy(ui_data: UIData) {\n\t\tthis._position.copy(ui_data.position());\n\t\tthis._color.copy(ui_data.color());\n\t}\n\n\tposition() {\n\t\treturn this._position;\n\t}\n\n\tsetPosition(newPosition: Vector2 | number, y: number = 0) {\n\t\tif (CoreType.isNumber(newPosition)) {\n\t\t\tconst x = newPosition;\n\t\t\tthis._position.set(x, y);\n\t\t} else {\n\t\t\tthis._position.copy(newPosition);\n\t\t}\n\t\tthis.node.emit(NodeEvent.UI_DATA_POSITION_UPDATED);\n\t\treturn this;\n\t}\n\n\ttranslate(offset: Vector2, snap: boolean = false) {\n\t\tthis._position.add(offset);\n\n\t\tif (snap) {\n\t\t\tthis._position.x = Math.round(this._position.x);\n\t\t\tthis._position.y = Math.round(this._position.y);\n\t\t}\n\n\t\tthis.node.emit(NodeEvent.UI_DATA_POSITION_UPDATED);\n\t\treturn this;\n\t}\n\n\ttoJSON(): NodeUIDataJson {\n\t\tthis._json.x = this._position.x;\n\t\tthis._json.y = this._position.y;\n\t\tthis._json.comment = this._comment;\n\t\treturn this._json;\n\t}\n}\n","import {NodeContext} from '../../../poly/NodeContext';\nimport {TypedNode} from '../../_Base';\n\nexport class NodeBaseState<NC extends NodeContext> {\n\tconstructor(protected node: TypedNode<NC, any>) {}\n}\n","import {NodeContext} from '../../../poly/NodeContext';\nimport {NodeBaseState} from './Base';\n\nexport class NodeTimeDependentState<NC extends NodeContext> extends NodeBaseState<NC> {\n\tactive() {\n\t\treturn this.paramsTimeDependent() || this.inputsTimeDependent();\n\t}\n\n\tparamsTimeDependent(): boolean {\n\t\tconst paramNames = this.node.params.names;\n\t\tfor (const paramName of paramNames) {\n\t\t\tconst param = this.node.params.get(paramName);\n\t\t\tif (param && param.states.timeDependent.active()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tinputsTimeDependent(): boolean {\n\t\tconst inputs = this.node.io.inputs.inputs();\n\t\tfor (const input of inputs) {\n\t\t\tif (input && input.states.timeDependent.active()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tforceTimeDependent() {\n\t\tconst predecessorIds = this.node.graphPredecessorIds();\n\t\tconst frameNode = this.node.scene().timeController.graphNode;\n\t\tif (predecessorIds == null || !predecessorIds.includes(frameNode.graphNodeId())) {\n\t\t\tthis.node.addGraphInput(frameNode, false);\n\t\t}\n\t}\n\tunforceTimeDependent() {\n\t\tconst frameNode = this.node.scene().timeController.graphNode;\n\t\tthis.node.removeGraphInput(frameNode);\n\t}\n}\n","import {NodeEvent} from '../../../poly/NodeEvent';\nimport {NodeBaseState} from './Base';\nimport {Poly} from '../../../Poly';\nimport {NodeContext} from '../../../poly/NodeContext';\n\nexport class NodeErrorState<NC extends NodeContext> extends NodeBaseState<NC> {\n\tprivate _message: string | undefined;\n\n\tset(message: string | undefined) {\n\t\tif (this._message != message) {\n\t\t\tif (message) {\n\t\t\t\tPoly.error(`[${this.node.path()}] error: '${message}' (from '${this._message}')`);\n\t\t\t} else {\n\t\t\t\tPoly.warn(`[${this.node.path()}] clear error`);\n\t\t\t}\n\t\t\tthis._message = message;\n\t\t\tthis.onUpdate();\n\t\t}\n\t}\n\tmessage() {\n\t\treturn this._message;\n\t}\n\tclear() {\n\t\tthis.set(undefined);\n\t}\n\tactive(): boolean {\n\t\treturn this._message != null;\n\t}\n\n\tprotected onUpdate() {\n\t\tif (this._message != null) {\n\t\t\t// console.warn(\"new error\", message, this.self.path())\n\t\t\tthis.node._setContainer(null as any /*, `from error '${this._message}'`*/);\n\t\t}\n\n\t\tthis.node.emit(NodeEvent.ERROR_UPDATED);\n\t}\n}\n","import {BaseNodeType} from '../_Base';\n\nimport {NodeTimeDependentState} from './states/TimeDependent';\nimport {NodeErrorState} from './states/Error';\nimport {NodeContext} from '../../poly/NodeContext';\n\nexport class NodeStatesController<NC extends NodeContext> {\n\ttimeDependent = new NodeTimeDependentState(this.node);\n\terror = new NodeErrorState(this.node);\n\tconstructor(protected node: BaseNodeType) {}\n}\n","import {BaseNodeType} from '../../_Base';\n// import {NodeTypeMap} from '../../../containers/utils/ContainerMap';\n\ntype NodeParentControllerCallback = () => void;\nimport {CoreWalker} from '../../../../core/Walker';\nimport {BaseNodeByContextMap, NodeContext} from '../../../poly/NodeContext';\n\nexport class HierarchyParentController {\n\tprivate _parent: BaseNodeType | null = null;\n\tprivate _on_set_parent_hooks: NodeParentControllerCallback[] | undefined;\n\n\tconstructor(protected node: BaseNodeType) {}\n\n\tparent() {\n\t\treturn this._parent;\n\t}\n\n\tsetParent(parent: BaseNodeType | null) {\n\t\tif (parent != this.node.parentController.parent()) {\n\t\t\tthis._parent = parent;\n\t\t\tif (this._parent) {\n\t\t\t\tthis.node.nameController.requestNameToParent(this.node.name());\n\t\t\t}\n\t\t}\n\t}\n\tfirstAncestorWithContext<N extends NodeContext>(context: N): BaseNodeByContextMap[N] | null {\n\t\tif (this._parent) {\n\t\t\tif (this._parent.context() == context) {\n\t\t\t\treturn this._parent as BaseNodeByContextMap[N];\n\t\t\t} else {\n\t\t\t\treturn this._parent.parentController.firstAncestorWithContext(context);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tfindParent(callback: (parent: BaseNodeType) => boolean): BaseNodeType | null {\n\t\tif (this._parent) {\n\t\t\tif (callback(this._parent) == true) {\n\t\t\t\treturn this._parent;\n\t\t\t} else {\n\t\t\t\treturn this._parent.parentController.findParent(callback);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpath(relativeToParent?: BaseNodeType): string {\n\t\t// if (this.node.disposed) {\n\t\t// \tconsole.warn('.path() called from a disposed node, this may return an invalid path', this.node);\n\t\t// }\n\n\t\tconst separator = CoreWalker.SEPARATOR;\n\t\tif (this._parent != null) {\n\t\t\tif (this._parent == relativeToParent) {\n\t\t\t\treturn this.node.name();\n\t\t\t} else {\n\t\t\t\tconst parent_fullPath = this._parent.path(relativeToParent);\n\t\t\t\tif (parent_fullPath === separator) {\n\t\t\t\t\treturn parent_fullPath + this.node.name();\n\t\t\t\t} else {\n\t\t\t\t\treturn parent_fullPath + separator + this.node.name();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn separator;\n\t\t}\n\t}\n\n\tonSetParent() {\n\t\tif (this._on_set_parent_hooks) {\n\t\t\tfor (const hook of this._on_set_parent_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n\tfindNode(path: string | null): BaseNodeType | null {\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (path == CoreWalker.CURRENT || path == CoreWalker.CURRENT_WITH_SLASH) {\n\t\t\treturn this.node;\n\t\t}\n\t\tif (path == CoreWalker.PARENT || path == CoreWalker.PARENT_WITH_SLASH) {\n\t\t\treturn this.node.parent();\n\t\t}\n\n\t\tconst separator = CoreWalker.SEPARATOR;\n\t\tif (path === separator) {\n\t\t\treturn this.node.scene().root();\n\t\t}\n\t\tif (path[0] === separator) {\n\t\t\tpath = path.substring(1, path.length);\n\t\t\treturn this.node.scene().root().node(path);\n\t\t}\n\n\t\t// check that path is a string, since there has been errors where it wasn't the case\n\t\tif (path.split) {\n\t\t\tconst elements = path.split(separator);\n\t\t\tif (elements.length === 1) {\n\t\t\t\tconst name = elements[0];\n\t\t\t\tif (this.node.childrenController) {\n\t\t\t\t\treturn this.node.childrenController.childByName(name);\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn CoreWalker.findNode(this.node, path);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error('unexpected path given:', path);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../engine/nodes/_Base';\nimport {NodeEvent} from '../engine/poly/NodeEvent';\nimport {CoreGraphNodeId} from './graph/CoreGraph';\nimport {arrayIsEqual, arrayUnion, arrayDifference, arrayMap, arrayCopy} from './ArrayUtils';\n\nconst _nodes: BaseNodeType[] = [];\nconst _nodeIds: number[] = [];\nexport class CoreNodeSelection {\n\tprivate _nodeIds: CoreGraphNodeId[] = [];\n\tconstructor(private _node: BaseNodeType) {}\n\n\tnode() {\n\t\treturn this._node;\n\t}\n\tnodeIds() {\n\t\treturn this._nodeIds;\n\t}\n\n\tnodeFromIndex(index: number): BaseNodeType | undefined {\n\t\tthis._node.scene().graph.nodesFromIds(this._nodeIds, _nodes);\n\t\treturn _nodes[index];\n\t}\n\tnodes(target: BaseNodeType[]): BaseNodeType[] {\n\t\tthis._node.scene().graph.nodesFromIds(this._nodeIds, target);\n\t\treturn target;\n\t}\n\n\tcontains(node: BaseNodeType): boolean {\n\t\treturn this._nodeIds.includes(node.graphNodeId());\n\t}\n\tequals(nodes: BaseNodeType[]): boolean {\n\t\tarrayMap(nodes, (node) => node.graphNodeId(), _nodeIds);\n\t\t_nodeIds.sort();\n\t\treturn arrayIsEqual(_nodeIds, this._nodeIds);\n\t}\n\n\tclear() {\n\t\tthis._nodeIds.length = 0;\n\t\tthis._sendUpdateEvent();\n\t}\n\tset(nodes: Readonly<BaseNodeType[]>) {\n\t\tthis._nodeIds.length = 0;\n\t\tthis.add(nodes);\n\t}\n\n\tadd(nodesToAdd: Readonly<BaseNodeType[]>) {\n\t\tarrayMap(nodesToAdd, (node) => node.graphNodeId(), _nodeIds);\n\t\tarrayUnion(this._nodeIds, _nodeIds, this._nodeIds);\n\n\t\tthis._sendUpdateEvent();\n\t}\n\n\tremove(nodesToRemove: Readonly<BaseNodeType[]>) {\n\t\tarrayMap(nodesToRemove, (node) => node.graphNodeId(), _nodeIds);\n\t\tarrayDifference(this._nodeIds, _nodeIds, this._nodeIds);\n\n\t\tthis._sendUpdateEvent();\n\t}\n\n\tprivate _checkValidity() {\n\t\tthis.nodes(_nodes);\n\t\tif (_nodes.length != this._nodeIds.length) {\n\t\t\tconsole.error('selection invalid: at least one node is not part of the graph');\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of _nodes) {\n\t\t\tif (node.parent() != this._node) {\n\t\t\t\tconsole.error('selection invalid: at least one node is not has another parent');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _sendUpdateEvent() {\n\t\tthis._checkValidity();\n\t\tthis._node.emit(NodeEvent.SELECTION_UPDATED);\n\t}\n\n\ttoJSON(target: CoreGraphNodeId[]): void {\n\t\tarrayCopy(this._nodeIds, target);\n\t}\n}\n","import {OperationInputsController} from '../InputsController';\nimport {InputCloneMode} from '../../../../../engine/poly/InputCloneMode';\nimport {TypeAssert} from '../../../../../engine/poly/Assert';\nimport {CoreType} from '../../../../../core/Type';\nimport {NodeContext} from '../../../../poly/NodeContext';\n\nexport class ClonedStatesController<NC extends NodeContext> {\n\tprivate _cloned_states: InputCloneMode[] | undefined;\n\tprivate _cloned_state: InputCloneMode | undefined;\n\tprivate _clone_required_states: boolean[] = [];\n\tprivate _overridden: boolean = false;\n\n\tconstructor(protected inputs_controller: OperationInputsController<NC>) {}\n\tinitInputsClonedState(states: InputCloneMode | InputCloneMode[]) {\n\t\tif (CoreType.isArray(states)) {\n\t\t\tthis._cloned_states = states;\n\t\t} else {\n\t\t\tthis._cloned_state = states;\n\t\t}\n\n\t\tthis._update_clone_required_state();\n\t}\n\n\toverride_cloned_state_allowed() {\n\t\tif (this._cloned_states) {\n\t\t\tfor (let state of this._cloned_states) {\n\t\t\t\tif (state == InputCloneMode.FROM_NODE) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._cloned_state) {\n\t\t\treturn this._cloned_state == InputCloneMode.FROM_NODE;\n\t\t}\n\t\treturn false;\n\t}\n\n\tclone_required_state(index: number): boolean {\n\t\treturn this._clone_required_states[index];\n\t}\n\tclone_required_states(): boolean | boolean[] {\n\t\treturn this._clone_required_states;\n\t}\n\n\tprivate _get_clone_required_state(index: number): boolean {\n\t\tconst states = this._cloned_states;\n\t\tif (states) {\n\t\t\tconst state = states[index];\n\t\t\tif (state != null) {\n\t\t\t\treturn this.clone_required_from_state(state);\n\t\t\t}\n\t\t}\n\t\tif (this._cloned_state) {\n\t\t\treturn this.clone_required_from_state(this._cloned_state);\n\t\t}\n\t\treturn true;\n\t}\n\tprivate clone_required_from_state(state: InputCloneMode) {\n\t\tswitch (state) {\n\t\t\tcase InputCloneMode.ALWAYS:\n\t\t\t\treturn true;\n\t\t\tcase InputCloneMode.NEVER:\n\t\t\t\treturn false;\n\t\t\tcase InputCloneMode.FROM_NODE:\n\t\t\t\treturn !this._overridden;\n\t\t}\n\t\treturn TypeAssert.unreachable(state);\n\t}\n\n\toverride_cloned_state(state: boolean) {\n\t\tthis._overridden = state;\n\t\tthis._update_clone_required_state();\n\t}\n\toverriden() {\n\t\treturn this._overridden;\n\t}\n\tprivate _update_clone_required_state() {\n\t\tif (this._cloned_states) {\n\t\t\tconst states: boolean[] = [];\n\t\t\tfor (let i = 0; i < this._cloned_states.length; i++) {\n\t\t\t\tstates[i] = this._get_clone_required_state(i);\n\t\t\t}\n\t\t\tthis._clone_required_states = states;\n\t\t\treturn;\n\t\t}\n\t\tif (this._cloned_state) {\n\t\t\tconst max_inputs = this.inputs_controller.inputsCount();\n\t\t\tconst states: boolean[] = [];\n\t\t\tfor (let i = 0; i < max_inputs; i++) {\n\t\t\t\tstates[i] = this._get_clone_required_state(i);\n\t\t\t}\n\t\t\tthis._clone_required_states = states;\n\t\t\treturn;\n\t\t}\n\t}\n}\n","import {ClonedStatesController} from './inputs/ClonedStatesController';\nimport {InputCloneMode} from '../../../../engine/poly/InputCloneMode';\nimport {BaseOperationContainer} from '../_Base';\nimport {NodeContext} from '../../../poly/NodeContext';\n\nexport class OperationInputsController<NC extends NodeContext> {\n\tconstructor(private operationContainer: BaseOperationContainer<NC>) {}\n\tinputsCount() {\n\t\treturn this.operationContainer.inputsCount();\n\t}\n\n\t//\n\t//\n\t// CLONABLE STATES\n\t//\n\t//\n\tprivate _clonedStatesController: ClonedStatesController<NC> | undefined;\n\tinitInputsClonedState(states: InputCloneMode | InputCloneMode[]) {\n\t\tif (!this._clonedStatesController) {\n\t\t\tthis._clonedStatesController = new ClonedStatesController(this);\n\t\t\tthis._clonedStatesController.initInputsClonedState(states);\n\t\t}\n\t}\n\n\tcloneRequired(index: number) {\n\t\tconst state = this._clonedStatesController?.clone_required_state(index);\n\t\tif (state != null) {\n\t\t\treturn state;\n\t\t}\n\t\treturn true;\n\t}\n\toverride_cloned_state(state: boolean) {\n\t\tthis._clonedStatesController?.override_cloned_state(state);\n\t}\n}\n","import {ParamsInitData} from '../../../engine/nodes/utils/io/IOController';\nimport {ParamType} from '../../../engine/poly/ParamType';\nimport {Color} from 'three';\nimport {Vector2} from 'three';\nimport {Vector3} from 'three';\nimport {Vector4} from 'three';\nimport {TypedNodePathParamValue} from '../../../core/Walker';\nimport {BaseNodeType} from '../../../engine/nodes/_Base';\nimport {BaseOperation} from '../_Base';\nimport {OperationInputsController} from './utils/InputsController';\nimport {CoreType} from '../../../core/Type';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {DefaultOperationParam, DefaultOperationParams} from '../../../core/operations/_Base';\n\nexport class BaseOperationContainer<NC extends NodeContext> {\n\tprotected params: DefaultOperationParams = {};\n\tprivate _path_params: TypedNodePathParamValue[] | undefined;\n\n\tconstructor(protected operation: BaseOperation<NC>, protected name: string, init_params: ParamsInitData) {\n\t\tthis._applyDefaultParams();\n\t\tthis._applyInitParams(init_params);\n\t\tthis._initClonedStates();\n\t}\n\n\t//\n\t//\n\t// PATH PARAMS\n\t//\n\t//\n\tpathParamResolveRequired() {\n\t\treturn this._path_params != null;\n\t}\n\tresolvePathParams(node_start: BaseNodeType) {\n\t\tif (!this._path_params) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let path_param of this._path_params) {\n\t\t\tpath_param.resolve(node_start);\n\t\t}\n\t}\n\n\t//\n\t//\n\t// PARAM VALUES CONVERSION\n\t//\n\t//\n\tprivate _applyDefaultParams() {\n\t\tconst default_params = (this.operation.constructor as typeof BaseOperation).DEFAULT_PARAMS;\n\t\tconst param_names = Object.keys(default_params);\n\t\tfor (let param_name of param_names) {\n\t\t\tconst param_data = default_params[param_name];\n\t\t\tconst clone_param_data = this._convertParamData(param_name, param_data);\n\t\t\tif (clone_param_data != undefined) {\n\t\t\t\tthis.params[param_name] = clone_param_data;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _applyInitParams(init_params: ParamsInitData) {\n\t\tconst paramNames = Object.keys(init_params);\n\t\tfor (let paramName of paramNames) {\n\t\t\tconst param_data = init_params[paramName];\n\t\t\tif (param_data.simple_data != null) {\n\t\t\t\tconst simple_data = param_data.simple_data;\n\t\t\t\tconst clone_param_data = this.operation.convertExportParamData({\n\t\t\t\t\tparamName,\n\t\t\t\t\tparamData: simple_data,\n\t\t\t\t\tparams: this.params,\n\t\t\t\t});\n\t\t\t\tif (clone_param_data != undefined) {\n\t\t\t\t\tthis.params[paramName] = clone_param_data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _convertParamData(param_name: string, param_data: DefaultOperationParam<ParamType>) {\n\t\tif (CoreType.isNumber(param_data) || CoreType.isBoolean(param_data) || CoreType.isString(param_data)) {\n\t\t\treturn param_data;\n\t\t}\n\t\tif (param_data instanceof TypedNodePathParamValue) {\n\t\t\tconst cloned = param_data.clone();\n\t\t\tif (!this._path_params) {\n\t\t\t\tthis._path_params = [];\n\t\t\t}\n\t\t\tthis._path_params.push(cloned);\n\t\t\treturn cloned;\n\t\t}\n\t\tif (\n\t\t\tparam_data instanceof Color ||\n\t\t\tparam_data instanceof Vector2 ||\n\t\t\tparam_data instanceof Vector3 ||\n\t\t\tparam_data instanceof Vector4\n\t\t) {\n\t\t\treturn param_data.clone();\n\t\t}\n\t}\n\n\t//\n\t//\n\t// INPUTS\n\t//\n\t//\n\tprotected _inputs: BaseOperationContainer<NC>[] | undefined;\n\tsetInput(index: number, input: BaseOperationContainer<NC>) {\n\t\tthis._inputs = this._inputs || [];\n\t\tthis._inputs[index] = input;\n\t}\n\tinputsCount() {\n\t\tif (this._inputs) {\n\t\t\treturn this._inputs.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate _inputsController: OperationInputsController<NC> | undefined;\n\tprotected inputsController() {\n\t\treturn (this._inputsController = this._inputsController || new OperationInputsController<NC>(this));\n\t}\n\tprivate _initClonedStates() {\n\t\tconst default_cloned_states = (this.operation.constructor as typeof BaseOperation).INPUT_CLONED_STATE;\n\t\tthis.inputsController().initInputsClonedState(default_cloned_states);\n\t}\n\tinputCloneRequired(index: number): boolean {\n\t\tif (!this._inputsController) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this._inputsController.cloneRequired(index);\n\t}\n\toverrideInputCloneState(state: boolean) {\n\t\tthis.inputsController().override_cloned_state(state);\n\t}\n\n\t//\n\t//\n\t// COOK\n\t//\n\t//\n\tcook(input_contents: any[]) {\n\t\treturn this.operation.cook(input_contents, this.params);\n\t}\n}\n","import {BaseOperationContainer} from './_Base';\nimport {BaseSopOperation} from '../sop/_Base';\nimport {ParamsInitData} from '../../../engine/nodes/utils/io/IOController';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {NodeContext} from '../../poly/NodeContext';\n\nexport type OperationInputsMap = WeakMap<SopOperationContainer, Map<number, number>>;\n\nexport class SopOperationContainer extends BaseOperationContainer<NodeContext.SOP> {\n\tconstructor(\n\t\tprotected override operation: BaseSopOperation,\n\t\tprotected override name: string,\n\t\tprotected init_params: ParamsInitData\n\t) {\n\t\tsuper(operation, name, init_params);\n\t}\n\n\toperationType() {\n\t\treturn this.operation.type();\n\t}\n\n\t// TODO: there may a better to overload add_input\n\tprotected override _inputs: SopOperationContainer[] = [];\n\tprivate _currentInputIndex: number = 0;\n\taddInput(input: SopOperationContainer) {\n\t\tsuper.setInput(this._currentInputIndex, input);\n\t\tthis.incrementInputIndex();\n\t}\n\tincrementInputIndex() {\n\t\tthis._currentInputIndex++;\n\t}\n\tcurrentInputIndex() {\n\t\treturn this._currentInputIndex;\n\t}\n\n\tprivate _computeResult: CoreGroup | undefined;\n\tprivate _dirty: boolean = true;\n\tsetDirty() {\n\t\tif (this._dirty) {\n\t\t\treturn;\n\t\t}\n\t\tthis._computeResult = undefined;\n\t\tfor (let i = 0; i < this._inputs.length; i++) {\n\t\t\tconst inputOperation = this._inputs[i];\n\t\t\tinputOperation.setDirty();\n\t\t}\n\t}\n\n\tasync compute(input_contents: CoreGroup[], operation_inputs_map: OperationInputsMap) {\n\t\tif (this._computeResult) {\n\t\t\treturn this._computeResult;\n\t\t}\n\n\t\tconst operationInputContents: CoreGroup[] = [];\n\n\t\t// process node inputs\n\t\tconst nodeInputsMap = operation_inputs_map.get(this);\n\t\tif (nodeInputsMap) {\n\t\t\tnodeInputsMap.forEach((node_input_index: number, operation_input_index: number) => {\n\t\t\t\toperationInputContents[operation_input_index] = input_contents[node_input_index];\n\t\t\t});\n\t\t}\n\n\t\t// process operation inputs\n\t\tfor (let i = 0; i < this._inputs.length; i++) {\n\t\t\tconst inputOperation = this._inputs[i];\n\t\t\tlet result = await inputOperation.compute(input_contents, operation_inputs_map);\n\t\t\tif (result) {\n\t\t\t\tif (this.inputCloneRequired(i)) {\n\t\t\t\t\tresult = result.clone();\n\t\t\t\t}\n\t\t\t\toperationInputContents[i] = result;\n\t\t\t}\n\t\t}\n\n\t\t// cook and store result\n\t\tconst result = this.operation.cook(operationInputContents, this.params);\n\t\tif (result) {\n\t\t\tif (result instanceof Promise) {\n\t\t\t\tthis._computeResult = await result;\n\t\t\t} else {\n\t\t\t\tthis._computeResult = result;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._computeResult = undefined;\n\t\t}\n\t\tthis._dirty = false;\n\t\treturn this._computeResult;\n\t}\n}\n","import {BaseNodeClass, BaseNodeType} from '../_Base';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {NodeEvent} from '../../poly/NodeEvent';\nimport {CoreType} from '../../../core/Type';\n\ntype NameControllerCallback = () => void;\n\nexport class NameController {\n\tprivate _graphNode: CoreGraphNode;\n\tprivate _onSetNameHooks: NameControllerCallback[] | undefined;\n\tprivate _onSetFullPathHooks: NameControllerCallback[] | undefined;\n\n\tconstructor(protected node: BaseNodeType) {\n\t\tthis._graphNode = new CoreGraphNode(node.scene(), 'nodeNameController');\n\t\t// this._graph_node.setScene(this.node.scene);\n\t}\n\n\tdispose() {\n\t\tthis._graphNode.dispose();\n\t\tthis._onSetNameHooks = undefined;\n\t\tthis._onSetFullPathHooks = undefined;\n\t}\n\n\tgraphNode() {\n\t\treturn this._graphNode;\n\t}\n\n\tstatic baseName(node: BaseNodeType | typeof BaseNodeClass) {\n\t\tlet base: string = node.type();\n\t\tconst last_char = base[base.length - 1];\n\t\tif (!CoreType.isNaN(parseInt(last_char))) {\n\t\t\tbase += '_';\n\t\t}\n\t\treturn `${base}1`;\n\t}\n\n\trequestNameToParent(newName: string) {\n\t\tconst parent = this.node.parent();\n\t\tif (parent && parent.childrenAllowed() && parent.childrenController) {\n\t\t\tparent.childrenController.setChildName(this.node, newName);\n\t\t} else {\n\t\t\tconsole.warn('requestNameToParent failed, no parent found');\n\t\t}\n\t}\n\tsetName(newName: string) {\n\t\tif (newName != this.node.name()) {\n\t\t\tif (this.node.insideALockedParent()) {\n\t\t\t\tconst lockedParent = this.node.lockedParent();\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`node '${this.node.path()}' cannot have its name changed, since it is inside '${\n\t\t\t\t\t\tlockedParent ? lockedParent.path() : ''\n\t\t\t\t\t}', which is locked`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.requestNameToParent(newName);\n\t\t}\n\t}\n\tupdateNameFromParent(new_name: string) {\n\t\tthis.node._setCoreName(new_name);\n\t\tthis._postSetName();\n\t\tthis.runPostSetFullPathHooks();\n\t\tif (this.node.childrenAllowed()) {\n\t\t\tconst children = this.node.childrenController?.children();\n\t\t\tif (children) {\n\t\t\t\tfor (const child_node of children) {\n\t\t\t\t\tchild_node.nameController.runPostSetFullPathHooks();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.node.lifecycle.creationCompleted() && this.node.scene().loadingController.loaded()) {\n\t\t\tthis.node.scene().missingExpressionReferencesController.checkForMissingNodeReferences(this.node);\n\t\t\tthis.node.scene().expressionsController.regenerateReferringExpressions(this.node);\n\t\t}\n\t\tthis.node.scene().referencesController.notifyNameUpdated(this.node);\n\t\tthis.node.emit(NodeEvent.NAME_UPDATED);\n\t}\n\n\tadd_post_set_name_hook(hook: NameControllerCallback) {\n\t\tthis._onSetNameHooks = this._onSetNameHooks || [];\n\t\tthis._onSetNameHooks.push(hook);\n\t}\n\tadd_post_set_fullPath_hook(hook: NameControllerCallback) {\n\t\tthis._onSetFullPathHooks = this._onSetFullPathHooks || [];\n\t\tthis._onSetFullPathHooks.push(hook);\n\t}\n\n\tprivate _postSetName() {\n\t\tif (this._onSetNameHooks) {\n\t\t\tfor (const hook of this._onSetNameHooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n\trunPostSetFullPathHooks() {\n\t\tif (this._onSetFullPathHooks) {\n\t\t\tfor (const hook of this._onSetFullPathHooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Constructor} from '../../../../types/GlobalTypes';\nimport {CoreString} from '../../../../core/String';\nimport {BaseNodeClass, BaseNodeType} from '../../_Base';\nimport {NodeEvent} from '../../../poly/NodeEvent';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {CoreNodeSelection} from '../../../../core/NodeSelection';\nimport {Poly} from '../../../Poly';\nimport {ParamsInitData} from '../io/IOController';\nimport {CoreGraphNodeId} from '../../../../core/graph/CoreGraph';\nimport {BaseOperationContainer} from '../../../operations/container/_Base';\nimport {SopOperationContainer} from '../../../operations/container/sop';\nimport {BaseSopOperation} from '../../../operations/sop/_Base';\nimport {MapUtils} from '../../../../core/MapUtils';\nimport {NameController} from '../NameController';\nimport {CoreNodeSerializer} from '../CoreNodeSerializer';\nimport {TypedNodeConnection} from '../io/NodeConnection';\nimport {arrayCopy} from '../../../../core/ArrayUtils';\n\ntype OutputNodeFindMethod = (() => BaseNodeType) | undefined;\ntype TraverseNodeCallback = (node: BaseNodeType) => void;\ntype TraverseNodeConditionCallback = (node: BaseNodeType) => boolean;\n\nexport interface NodeCreateOptions {\n\tparamsInitValueOverrides?: ParamsInitData;\n\tnodeName?: string;\n\tserializerClass?: typeof CoreNodeSerializer;\n}\n\nexport class HierarchyChildrenController {\n\tprivate _childrenByName: Map<string, BaseNodeType> = new Map();\n\tprivate _childrenIdByType: Map<string, Set<CoreGraphNodeId>> = new Map();\n\tprivate _childrenByType: Map<string, Array<BaseNodeType>> = new Map();\n\tprivate _childrenAndGrandchildrenByContext: Map<NodeContext, Set<CoreGraphNodeId>> = new Map();\n\n\tprivate _selection: CoreNodeSelection | undefined;\n\tget selection(): CoreNodeSelection {\n\t\treturn (this._selection = this._selection || new CoreNodeSelection(this.node));\n\t}\n\tconstructor(protected node: BaseNodeType, private _context: NodeContext) {}\n\n\tdispose() {\n\t\tconst _tmpChildren: BaseNodeType[] = [];\n\t\tarrayCopy(this.children(), _tmpChildren);\n\t\tfor (const child of _tmpChildren) {\n\t\t\tthis.node.removeNode(child);\n\t\t}\n\t\t_tmpChildren.length = 0;\n\t\tthis._selection = undefined;\n\t}\n\n\tget context() {\n\t\treturn this._context;\n\t}\n\n\t//\n\t//\n\t// OUTPUT NODE\n\t//\n\t//\n\tprivate _outputNodeFindMethod: (() => BaseNodeType) | undefined;\n\tsetOutputNodeFindMethod(method: OutputNodeFindMethod) {\n\t\tthis._outputNodeFindMethod = method;\n\t}\n\toutputNode() {\n\t\tif (this._outputNodeFindMethod) {\n\t\t\treturn this._outputNodeFindMethod();\n\t\t}\n\t}\n\n\t//\n\t//\n\t//\n\t//\n\t//\n\n\tsetChildName(node: BaseNodeType, newName: string): void {\n\t\tlet currentChildWithName: BaseNodeType | undefined;\n\t\tnewName = CoreString.sanitizeName(newName);\n\n\t\tif ((currentChildWithName = this._childrenByName.get(newName)) != null) {\n\t\t\t// only return if found node is same as argument node, and if new_name is same as current_name\n\t\t\tif (node.name() === newName && currentChildWithName.graphNodeId() === node.graphNodeId()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// increment new_name\n\t\t\tnewName = CoreString.increment(newName);\n\n\t\t\treturn this.setChildName(node, newName);\n\t\t} else {\n\t\t\tconst currentName = node.name();\n\n\t\t\t// delete old entry if node was in _children with old name\n\t\t\tconst currentChild = this._childrenByName.get(currentName);\n\t\t\tif (currentChild) {\n\t\t\t\tthis._childrenByName.delete(currentName);\n\t\t\t}\n\n\t\t\t// add to new name\n\t\t\tthis._childrenByName.set(newName, node);\n\t\t\tthis._updateCache();\n\t\t\tnode.nameController.updateNameFromParent(newName);\n\n\t\t\tthis.node.scene().nodesController.addToInstanciatedNode(node);\n\t\t\tthis.node.scene().graphNodesController.notifyNodePathChanged(node);\n\t\t}\n\t}\n\tprivate _nextAvailableChildName(nodeName: string): string {\n\t\tnodeName = CoreString.sanitizeName(nodeName);\n\t\treturn this._childrenByName.get(nodeName)\n\t\t\t? this._nextAvailableChildName(CoreString.increment(nodeName))\n\t\t\t: nodeName;\n\t}\n\n\tnodeContextSignature() {\n\t\treturn `${this.node.context()}/${this.node.type()}`;\n\t}\n\n\tavailableChildrenClasses() {\n\t\treturn Poly.registeredNodes(this.node);\n\t}\n\n\tisValidChildType(node_type: string): boolean {\n\t\tconst node_class = this.availableChildrenClasses()[node_type];\n\t\treturn node_class != null;\n\t}\n\n\t// create_node(node_type: string, options?: NodeCreateOptions): BaseNodeType {\n\t// \tconst node_class = this.available_children_classes()[node_type];\n\n\t// \tif (node_class == null) {\n\t// \t\tconst message = `child node type '${node_type}' not found for node '${this.node.path()}'. Available types are: ${Object.keys(\n\t// \t\t\tthis.available_children_classes()\n\t// \t\t).join(', ')}, ${this._context}, ${this.node.type}`;\n\t// \t\tconsole.error(message);\n\t// \t\tthrow message;\n\t// \t} else {\n\t// \t\tconst child_node = new node_class(this.node.scene, `child_node_${node_type}`, paramsInitValueOverrides);\n\t// \t\tchild_node.initialize_base_and_node();\n\t// \t\tthis.add_node(child_node);\n\t// \t\tchild_node.lifecycle.set_creation_completed();\n\t// \t\treturn child_node;\n\t// \t}\n\t// }\n\tcreateNode<K extends BaseNodeType>(nodeClassOrString: string | Constructor<K>, options?: NodeCreateOptions): K {\n\t\t// adding a test here means that this function could return undefined\n\t\t// which would all the existing calls\n\t\t// if (this.node.lockedOrInsideALockedParent()) {\n\t\t// \tconst lockedParent = this.node.lockedParent();\n\t\t// \tconsole.error(\n\t\t// \t\t`node '${this.node.path()}' cannot create nodes, since it is inside '${\n\t\t// \t\t\tlockedParent ? lockedParent.path() : ''\n\t\t// \t\t}', which is locked`\n\t\t// \t);\n\t\t// \treturn;\n\t\t// }\n\n\t\tif (typeof nodeClassOrString == 'string') {\n\t\t\tconst nodeClass = this._findNodeClass(nodeClassOrString);\n\t\t\treturn this._createAndInitNode(nodeClass, options) as K;\n\t\t} else {\n\t\t\treturn this._createAndInitNode(nodeClassOrString, options);\n\t\t}\n\t}\n\tprivate _createAndInitNode<K extends BaseNodeType>(nodeClass: Constructor<K>, options?: NodeCreateOptions) {\n\t\tconst requestedNodeName =\n\t\t\toptions?.nodeName || NameController.baseName((<unknown>nodeClass) as typeof BaseNodeClass);\n\t\tconst nodeName = this._nextAvailableChildName(requestedNodeName);\n\t\tconst childNode = new nodeClass(this.node.scene(), nodeName, {\n\t\t\t...options,\n\t\t\tserializerClass: this.node.serializer?.constructor,\n\t\t});\n\t\tchildNode.initializeBaseAndNode();\n\t\tthis._addNode(childNode);\n\t\tchildNode.lifecycle.setCreationCompleted();\n\t\treturn childNode;\n\t}\n\tprivate _findNodeClass(node_type: string) {\n\t\tconst nodeClass = this.availableChildrenClasses()[node_type.toLowerCase()];\n\n\t\tif (nodeClass == null) {\n\t\t\tconst message = `child node type '${node_type}' not found for node '${this.node.path()}'. Available types are: ${Object.keys(\n\t\t\t\tthis.availableChildrenClasses()\n\t\t\t).join(', ')}, ${this._context}, ${this.node.type()}`;\n\t\t\tconsole.error(message);\n\t\t\tthrow message;\n\t\t}\n\t\treturn nodeClass;\n\t}\n\tcreateOperationContainer(\n\t\toperationType: string,\n\t\toperationContainerName: string,\n\t\toptions?: NodeCreateOptions\n\t): BaseOperationContainer<any> {\n\t\tconst operationClass = Poly.registeredOperation(this._context, operationType);\n\n\t\tif (operationClass == null) {\n\t\t\tconst message = `no operation found with context ${this._context}/${operationType}`;\n\t\t\tconsole.error(message);\n\t\t\tthrow message;\n\t\t} else {\n\t\t\tconst operation = new operationClass(this.node.scene()) as BaseSopOperation;\n\t\t\tconst operation_container = new SopOperationContainer(\n\t\t\t\toperation,\n\t\t\t\toperationContainerName,\n\t\t\t\toptions?.paramsInitValueOverrides || {}\n\t\t\t);\n\t\t\treturn operation_container;\n\t\t}\n\t}\n\n\tprivate _addNode(childNode: BaseNodeType) {\n\t\tchildNode.setParent(this.node);\n\t\tthis._addToNodesByType(childNode);\n\t\tchildNode.params.init();\n\t\tchildNode.parentController.onSetParent();\n\t\tchildNode.nameController.runPostSetFullPathHooks();\n\t\tif (childNode.childrenAllowed() && childNode.childrenController) {\n\t\t\tfor (const child of childNode.childrenController.children()) {\n\t\t\t\tchild.nameController.runPostSetFullPathHooks();\n\t\t\t}\n\t\t}\n\t\tif (this.node.serializer) {\n\t\t\tconst childNodeJSON = childNode.toJSON();\n\t\t\tif (childNodeJSON) {\n\t\t\t\tthis.node.emit(NodeEvent.CREATED, {child_node_json: childNodeJSON});\n\t\t\t}\n\t\t}\n\t\tif (this.node.scene().lifecycleController.onAfterCreatedCallbackAllowed()) {\n\t\t\tchildNode.lifecycle.runOnAfterCreatedCallbacks();\n\t\t}\n\t\tchildNode.lifecycle.runOnAfterAddedCallbacks();\n\t\tthis.node.lifecycle.runOnChildAddCallbacks(childNode);\n\n\t\tif (childNode.requireWebGL2()) {\n\t\t\tthis.node.scene().webglController.setRequireWebGL2();\n\t\t}\n\n\t\tthis.node.scene().missingExpressionReferencesController.checkForMissingNodeReferences(childNode);\n\n\t\treturn childNode;\n\t}\n\n\tremoveNode(childNode: BaseNodeType): void {\n\t\tif (this.node.lockedOrInsideALockedParent()) {\n\t\t\tconst lockedNode = this.node.selfOrLockedParent();\n\t\t\tconst reason =\n\t\t\t\tlockedNode == this.node\n\t\t\t\t\t? `it is locked`\n\t\t\t\t\t: `it is inside '${lockedNode ? lockedNode.path() : ''}', which is locked`;\n\t\t\tconsole.warn(`node '${this.node.path()}' cannot remove nodes, since ${reason}`);\n\t\t\tconsole.log(this.node.graphNodeId(), this.node.name());\n\t\t\treturn;\n\t\t}\n\n\t\tif (childNode.parent() != this.node) {\n\t\t\treturn console.warn(`node ${childNode.name()} not under parent ${this.node.path()}`);\n\t\t} else {\n\t\t\tchildNode.polyNodeController?.setLockedState(false); // makes it easier to dispose its content\n\n\t\t\tchildNode.lifecycle.runOnBeforeDeleteCallbacks();\n\t\t\tif (this.selection.contains(childNode)) {\n\t\t\t\tthis.selection.remove([childNode]);\n\t\t\t}\n\n\t\t\tconst firstConnection = childNode.io.connections.firstInputConnection();\n\t\t\tconst inputConnections = childNode.io.connections.inputConnections();\n\t\t\tconst outputConnections: TypedNodeConnection<NodeContext>[] = [];\n\t\t\tchildNode.io.connections.outputConnections(outputConnections);\n\t\t\tif (inputConnections) {\n\t\t\t\tfor (const inputConnection of inputConnections) {\n\t\t\t\t\tif (inputConnection) {\n\t\t\t\t\t\tinputConnection.disconnect({setInput: true});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (outputConnections) {\n\t\t\t\tfor (const outputConnection of outputConnections) {\n\t\t\t\t\tif (outputConnection) {\n\t\t\t\t\t\toutputConnection.disconnect({setInput: true});\n\t\t\t\t\t\tif (firstConnection) {\n\t\t\t\t\t\t\tconst oldSrc = firstConnection.nodeSrc();\n\t\t\t\t\t\t\tconst oldOutputIndex = firstConnection.outputIndex();\n\t\t\t\t\t\t\tconst oldDest = outputConnection.nodeDest();\n\t\t\t\t\t\t\tconst oldInputIndex = outputConnection.inputIndex();\n\t\t\t\t\t\t\toldDest.io.inputs.setInput(oldInputIndex, oldSrc, oldOutputIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove from children\n\t\t\tchildNode.setParent(null);\n\t\t\tthis._childrenByName.delete(childNode.name());\n\t\t\tthis._updateCache();\n\t\t\tthis._removeFromNodesByType(childNode);\n\t\t\tthis.node.scene().nodesController.removeFromInstanciatedNode(childNode);\n\n\t\t\t// set other dependencies dirty\n\t\t\t// Note that this call to set_dirty was initially before this._children_node.remove_graph_input\n\t\t\t// but that prevented the obj/geo node to properly clear its sopGroup if this was the last node\n\t\t\t// if (this._is_dependent_on_children && this._children_node) {\n\t\t\t// \tthis._children_node.set_successors_dirty(this.node);\n\t\t\t// }\n\t\t\tchildNode.setSuccessorsDirty(this.node);\n\t\t\t// disconnect successors\n\t\t\tchildNode.graphDisconnectSuccessors();\n\n\t\t\tthis.node.lifecycle.runOnChildRemoveCallbacks(childNode);\n\t\t\tchildNode.lifecycle.runOnDeleteCallbacks();\n\t\t\tchildNode.dispose();\n\t\t\tchildNode.emit(NodeEvent.DELETED, {parent_id: this.node.graphNodeId()});\n\t\t\tthis.node.scene().graphNodesController.notifyNodePathChanged(childNode);\n\t\t}\n\t}\n\n\tprivate _addToNodesByType(node: BaseNodeType) {\n\t\tconst nodeId = node.graphNodeId();\n\t\tconst type = node.type();\n\n\t\tMapUtils.addToSetAtEntry(this._childrenIdByType, type, nodeId);\n\t\tMapUtils.pushOnArrayAtEntry(this._childrenByType, type, node);\n\n\t\tthis._addToChildrenAndGrandchildrenByContext(node);\n\t}\n\tprivate _removeFromNodesByType(node: BaseNodeType) {\n\t\tconst nodeId = node.graphNodeId();\n\t\tconst type = node.type();\n\n\t\tMapUtils.removeFromSetAtEntry(this._childrenIdByType, type, nodeId);\n\t\tMapUtils.popFromArrayAtEntry(this._childrenByType, type, node);\n\t\tthis._removeFromChildrenAndGrandchildrenByContext(node);\n\t}\n\tprivate _addToChildrenAndGrandchildrenByContext(node: BaseNodeType) {\n\t\tconst nodeId = node.graphNodeId();\n\t\tconst nodeContext = node.context();\n\n\t\tMapUtils.addToSetAtEntry(this._childrenAndGrandchildrenByContext, nodeContext, nodeId);\n\t\tconst parent = this.node.parent();\n\t\tif (parent && parent.childrenAllowed()) {\n\t\t\tparent.childrenController?._addToChildrenAndGrandchildrenByContext(node);\n\t\t}\n\t}\n\tprivate _removeFromChildrenAndGrandchildrenByContext(node: BaseNodeType) {\n\t\tconst nodeId = node.graphNodeId();\n\t\tconst type = node.context();\n\n\t\tMapUtils.removeFromSetAtEntry(this._childrenAndGrandchildrenByContext, type, nodeId);\n\t\tconst parent = this.node.parent();\n\t\tif (parent && parent.childrenAllowed()) {\n\t\t\tparent.childrenController?._removeFromChildrenAndGrandchildrenByContext(node);\n\t\t}\n\t}\n\n\tnodesByType(type: string, target: BaseNodeType[] = []): BaseNodeType[] {\n\t\tconst nodes = this._childrenByType.get(type);\n\t\t// if (!nodes) {\n\t\t// \tnodes = [];\n\t\t// \tthis._childrenByType.set(type, nodes);\n\t\t// }\n\t\t// ensure we don't return the same array,\n\t\t// otherwise a previous call to .nodesByType()\n\t\t// would share the same array,\n\t\t// which is not what we want, when we aim to compare\n\t\t// different results after different node creation/deletion\n\t\ttarget.length = nodes ? nodes.length : 0;\n\t\tif (nodes) {\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\ttarget[i] = nodes[i];\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n\tchildByName(name: string) {\n\t\treturn this._childrenByName.get(name) || null;\n\t}\n\n\thasChildrenAndGrandchildrenWithContext(context: NodeContext) {\n\t\treturn this._childrenAndGrandchildrenByContext.get(context) != null;\n\t}\n\n\tprivate _children: BaseNodeType[] = [];\n\tprivate _childrenNames: string[] = [];\n\tprivate _updateCache() {\n\t\tthis._children.length = 0;\n\t\tthis._childrenNames.length = 0;\n\t\tthis._childrenByName.forEach((node) => {\n\t\t\tthis._children.push(node);\n\t\t\tthis._childrenNames.push(node.name());\n\t\t});\n\t}\n\tchildren(): Readonly<BaseNodeType[]> {\n\t\treturn this._children;\n\t}\n\tchildrenNames(): Readonly<string[]> {\n\t\treturn this._childrenNames;\n\t}\n\n\ttraverseChildren(callback: TraverseNodeCallback, conditionCallback?: TraverseNodeConditionCallback) {\n\t\tthis._childrenByName.forEach((childNode) => {\n\t\t\tcallback(childNode);\n\t\t\tif (conditionCallback == null || conditionCallback(childNode) == true) {\n\t\t\t\tchildNode.childrenController?.traverseChildren(callback);\n\t\t\t}\n\t\t});\n\t}\n}\n","import {BaseNodeType} from '../_Base';\n\ntype NodeLifeCycleControllerCallback = () => void;\ntype NodeLifeCycleControllerCallbackWithChildNode = (childNode: BaseNodeType) => void;\n\nexport class NodeLifeCycleController {\n\tprotected _creationCompleted = false;\n\tprotected _onChildAddCallbacks: NodeLifeCycleControllerCallbackWithChildNode[] | undefined;\n\tprivate _onChildRemoveCallbacks: NodeLifeCycleControllerCallbackWithChildNode[] | undefined;\n\t// _on_creation_completed_hooks are used in the importer, once the node has been created, added and params are set\n\t// private _on_creation_completed_hooks: Callback[] | undefined;\n\tprivate _onAfterCreatedCallbacks: NodeLifeCycleControllerCallback[] | undefined;\n\tprivate _onAfterAddedCallbacks: NodeLifeCycleControllerCallback[] | undefined;\n\tprivate _onBeforeDeletedCallbacks: NodeLifeCycleControllerCallback[] | undefined;\n\tprivate _onAfterDeletedCallbacks: NodeLifeCycleControllerCallback[] | undefined;\n\tconstructor(protected node: BaseNodeType) {}\n\n\tdispose() {\n\t\tthis._onChildAddCallbacks = undefined;\n\t\tthis._onChildRemoveCallbacks = undefined;\n\t\tthis._onAfterCreatedCallbacks = undefined;\n\t\tthis._onAfterAddedCallbacks = undefined;\n\t\tthis._onBeforeDeletedCallbacks = undefined;\n\t\tthis._onAfterDeletedCallbacks = undefined;\n\t}\n\n\tsetCreationCompleted() {\n\t\tif (!this._creationCompleted) {\n\t\t\tthis._creationCompleted = true;\n\t\t\t// this.run_on_creation_completed_hooks();\n\t\t}\n\t}\n\tcreationCompleted() {\n\t\treturn this.node.scene().loadingController.loaded() && this._creationCompleted;\n\t}\n\t//\n\t//\n\t// ON CREATION COMPLETED\n\t//\n\t//\n\t// add_on_creation_completed_hook(callback: Callback) {\n\t// \tthis._on_creation_completed_hooks = this._on_creation_completed_hooks || [];\n\t// \tthis._on_creation_completed_hooks.push(callback);\n\t// }\n\t// private run_on_creation_completed_hooks() {\n\t// \tif (this._on_creation_completed_hooks) {\n\t// \t\tconsole.log('run_on_creation_completed_hooks', this.node.name);\n\t// \t}\n\t// \tthis.execute_hooks(this._on_creation_completed_hooks);\n\t// }\n\t//\n\t//\n\t// ON CHILD ADD\n\t//\n\t//\n\tonChildAdd(callback: NodeLifeCycleControllerCallbackWithChildNode) {\n\t\tthis._onChildAddCallbacks = this._onChildAddCallbacks || [];\n\t\tthis._onChildAddCallbacks.push(callback);\n\t}\n\trunOnChildAddCallbacks(node: BaseNodeType) {\n\t\tthis._runCallbacksWithChildNode(this._onChildAddCallbacks, node);\n\t}\n\n\t//\n\t//\n\t// ON CHILD REMOVE\n\t//\n\t//\n\tonChildRemove(callback: NodeLifeCycleControllerCallbackWithChildNode) {\n\t\tthis._onChildRemoveCallbacks = this._onChildRemoveCallbacks || [];\n\t\tthis._onChildRemoveCallbacks.push(callback);\n\t}\n\trunOnChildRemoveCallbacks(node: BaseNodeType) {\n\t\tthis._runCallbacksWithChildNode(this._onChildRemoveCallbacks, node);\n\t}\n\n\t//\n\t//\n\t// ON CREATE\n\t//\n\t//\n\tonAfterCreated(callback: NodeLifeCycleControllerCallback) {\n\t\tthis._onAfterCreatedCallbacks = this._onAfterCreatedCallbacks || [];\n\t\tthis._onAfterCreatedCallbacks.push(callback);\n\t}\n\trunOnAfterCreatedCallbacks() {\n\t\tthis._runCallbacks(this._onAfterCreatedCallbacks);\n\t}\n\n\t//\n\t//\n\t// ON ADD\n\t//\n\t//\n\tonAfterAdded(callback: NodeLifeCycleControllerCallback) {\n\t\tthis._onAfterAddedCallbacks = this._onAfterAddedCallbacks || [];\n\t\tthis._onAfterAddedCallbacks.push(callback);\n\t}\n\trunOnAfterAddedCallbacks() {\n\t\tthis._runCallbacks(this._onAfterAddedCallbacks);\n\t}\n\n\t//\n\t//\n\t// ON DELETE\n\t//\n\t//\n\tonBeforeDeleted(callback: NodeLifeCycleControllerCallback) {\n\t\tthis._onBeforeDeletedCallbacks = this._onBeforeDeletedCallbacks || [];\n\t\tthis._onBeforeDeletedCallbacks.push(callback);\n\t}\n\trunOnBeforeDeleteCallbacks() {\n\t\tthis._runCallbacks(this._onBeforeDeletedCallbacks);\n\t}\n\t// TODO: onAfterDeleted is not very different than methods in .dispose\n\t// so this should probably be removed/refactored\n\tonAfterDeleted(callback: NodeLifeCycleControllerCallback) {\n\t\tthis._onAfterDeletedCallbacks = this._onAfterDeletedCallbacks || [];\n\t\tthis._onAfterDeletedCallbacks.push(callback);\n\t}\n\trunOnDeleteCallbacks() {\n\t\tthis._runCallbacks(this._onAfterDeletedCallbacks);\n\t}\n\n\t//\n\t//\n\t// UTILS\n\t//\n\t//\n\tprotected _runCallbacks(hooks: NodeLifeCycleControllerCallback[] | undefined) {\n\t\tif (!hooks) {\n\t\t\treturn;\n\t\t}\n\t\tlet hook: NodeLifeCycleControllerCallback | undefined;\n\t\t// do not flush, as this MAY BE needed multiple times\n\t\tfor (hook of hooks) {\n\t\t\thook();\n\t\t}\n\t}\n\tprotected _runCallbacksWithChildNode(\n\t\thooks: NodeLifeCycleControllerCallbackWithChildNode[] | undefined,\n\t\tchildNode: BaseNodeType\n\t) {\n\t\tif (!hooks) {\n\t\t\treturn;\n\t\t}\n\t\tlet hook: NodeLifeCycleControllerCallbackWithChildNode | undefined;\n\t\t// do not flush, as this is needed multiple times\n\t\tfor (hook of hooks) {\n\t\t\thook(childNode);\n\t\t}\n\t}\n}\n","import {CoreGroup} from '../../../core/geometry/Group';\nimport {Material, Texture, Object3D} from 'three';\nimport {TimelineBuilder} from '../../../core/animation/TimelineBuilder';\nimport {AudioBuilder} from '../../../core/audio/AudioBuilder';\nimport {NodeContext} from '../../poly/NodeContext';\n\nexport interface ContainableMap {\n\t[NodeContext.ANIM]: TimelineBuilder;\n\t[NodeContext.AUDIO]: AudioBuilder;\n\t[NodeContext.COP]: Texture;\n\t[NodeContext.EVENT]: string;\n\t[NodeContext.GL]: string;\n\t[NodeContext.JS]: string;\n\t[NodeContext.MANAGER]: boolean;\n\t[NodeContext.MAT]: Material;\n\t[NodeContext.OBJ]: Object3D;\n\t[NodeContext.ROP]: any;\n\t[NodeContext.POST]: number;\n\t[NodeContext.SOP]: CoreGroup;\n}\n\nexport const ContainableClassMap = {\n\t[NodeContext.ANIM]: TimelineBuilder,\n\t[NodeContext.AUDIO]: AudioBuilder,\n\t[NodeContext.COP]: Texture,\n\t[NodeContext.EVENT]: String,\n\t[NodeContext.GL]: String,\n\t[NodeContext.JS]: String,\n\t[NodeContext.MANAGER]: Boolean,\n\t[NodeContext.MAT]: Material,\n\t[NodeContext.OBJ]: Object3D,\n\t[NodeContext.ROP]: String,\n\t[NodeContext.POST]: Number,\n\t[NodeContext.SOP]: CoreGroup,\n\t// JS: JsContainer;\n};\n","import {TypedNode} from '../nodes/_Base';\n\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport abstract class TypedContainer<NC extends NodeContext> {\n\tprotected _content!: ContainableMap[NC];\n\n\tconstructor(protected _node: TypedNode<NC, any>) {\n\t\t// this.update_eval_key();\n\t\t// this.set_content(this._default_content());\n\t}\n\n\tset_node(node: TypedNode<NC, any>) {\n\t\tthis._node = node;\n\t}\n\tnode(): TypedNode<NC, any> {\n\t\treturn this._node;\n\t}\n\n\t// clone() {\n\t// \tlet content;\n\t// \tconst cloned_container = new (<any>this.constructor)() as TypedContainer<T>;\n\t// \tcloned_container.set_node(this.node());\n\t// \tif ((content = this.content()) != null) {\n\t// \t\tcloned_container.set_content(content); //, this.eval_key() );\n\t// \t}\n\t// \treturn cloned_container;\n\t// }\n\t// reset_caches() {}\n\n\tset_content(content: ContainableMap[NC]) {\n\t\t// this.reset_caches();\n\t\tthis._content = content;\n\t\tthis._post_set_content();\n\t}\n\thas_content(): boolean {\n\t\treturn this._content != null;\n\t}\n\n\tcontent() {\n\t\treturn this._content;\n\t}\n\tprotected _post_set_content() {}\n\tpublic coreContent(): ContainableMap[NC] | undefined {\n\t\treturn this._content;\n\t}\n\tpublic coreContentCloned(): ContainableMap[NC] | undefined {\n\t\treturn this._content;\n\t}\n\t// abstract clone_content(): T\n\n\t// update_eval_key(eval_key?: number){\n\t// \tthis._eval_key = eval_key || performance.now();\n\t// }\n\t// eval_key(): number {\n\t// \treturn this._eval_key;\n\t// }\n\n\tinfos(): any {\n\t\treturn [];\n\t}\n}\n\nexport class BaseContainer extends TypedContainer<any> {}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {TimelineBuilder} from '../../core/animation/TimelineBuilder';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class AnimationContainer extends TypedContainer<NodeContext.ANIM> {\n\toverride set_content(content: ContainableMap[NodeContext.ANIM]) {\n\t\tsuper.set_content(content);\n\t}\n\tsetTimelineBuilder(timeline_builder: TimelineBuilder) {\n\t\treturn this.set_content(timeline_builder);\n\t}\n\ttimelineBuilder() {\n\t\treturn this.content();\n\t}\n\n\toverride coreContentCloned() {\n\t\tif (this._content) {\n\t\t\treturn this._content.clone();\n\t\t}\n\t}\n\n\t// infos() {\n\t// \tconst node = this.node()\n\t// \treturn [\n\t// \t\t`full path: ${node.path()}`,\n\t// \t\t`${node.cooks_count()} cooks`,\n\t// \t\t`cook time: ${node.cook_time()}`,\n\t// \t\tthis.content(),\n\t// \t]\n\t// }\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\nimport {AudioBuilder} from '../../core/audio/AudioBuilder';\n\nexport class AudioContainer extends TypedContainer<NodeContext.AUDIO> {\n\tsetContent(content: ContainableMap[NodeContext.AUDIO]) {\n\t\tsuper.set_content(content);\n\t}\n\tsetAudioBuilder(audioBuilder: AudioBuilder) {\n\t\treturn this.set_content(audioBuilder);\n\t}\n\taudioBuilder() {\n\t\treturn this.content();\n\t}\n\n\toverride coreContentCloned() {\n\t\tif (this._content) {\n\t\t\treturn this._content.clone();\n\t\t}\n\t}\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class EventContainer extends TypedContainer<NodeContext.EVENT> {\n\toverride set_content(content: ContainableMap[NodeContext.EVENT]) {\n\t\tsuper.set_content(content);\n\t}\n}\n","import {TypedContainer} from './_Base';\nimport type {CoreGroup} from '../../core/geometry/Group';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class GeometryContainer extends TypedContainer<NodeContext.SOP> {\n\toverride coreContentCloned(): CoreGroup | undefined {\n\t\tif (this._content) {\n\t\t\treturn this._content.clone();\n\t\t}\n\t}\n\n\toverride set_content(content: ContainableMap[NodeContext.SOP]) {\n\t\tsuper.set_content(content);\n\t}\n\n\t// pointsCount(): number {\n\t// \tif (this._content) {\n\t// \t\treturn this._content.pointsCount();\n\t// \t} else {\n\t// \t\treturn 0;\n\t// \t}\n\t// }\n}\n","import {TypedContainer} from './_Base';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class GlContainer extends TypedContainer<NodeContext.GL> {\n\tobject() {\n\t\treturn this._content;\n\t}\n}\n","import {TypedContainer} from './_Base';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class JsContainer extends TypedContainer<NodeContext.JS> {\n\tobject() {\n\t\treturn this._content;\n\t}\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class ManagerContainer extends TypedContainer<NodeContext.MANAGER> {\n\toverride set_content(content: ContainableMap[NodeContext.MANAGER]) {\n\t\tsuper.set_content(content);\n\t}\n}\n","import {Material} from 'three';\nimport {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\nimport {CoreMaterial} from '../../core/geometry/Material';\n\nexport class MaterialContainer extends TypedContainer<NodeContext.MAT> {\n\toverride set_content(content: ContainableMap[NodeContext.MAT]) {\n\t\tsuper.set_content(content);\n\t}\n\toverride coreContentCloned(): ContainableMap[NodeContext.MAT] | undefined {\n\t\tif (this._content) {\n\t\t\tconst cloned = CoreMaterial.clone(this._node.scene(), this._content, {\n\t\t\t\tshareCustomUniforms: true,\n\t\t\t\taddCustomMaterials: true,\n\t\t\t}); //.clone();\n\t\t\t// const cloned = this._content.clone();\n\t\t\treturn cloned;\n\t\t}\n\t}\n\tset_material(material: Material) {\n\t\tif (this._content != null) {\n\t\t\tthis._content.dispose();\n\t\t}\n\t\tthis.set_content(material);\n\t}\n\thas_material() {\n\t\treturn this.has_content();\n\t}\n\tmaterial() {\n\t\treturn this.content();\n\t}\n}\n","import {Object3D} from 'three';\nimport {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class ObjectContainer extends TypedContainer<NodeContext.OBJ> {\n\toverride set_content(content: ContainableMap[NodeContext.OBJ]) {\n\t\tsuper.set_content(content);\n\t}\n\tset_object(object: Object3D) {\n\t\treturn this.set_content(object);\n\t}\n\thas_object() {\n\t\treturn this.has_content();\n\t}\n\tobject() {\n\t\treturn this.content();\n\t}\n\n\t// infos() {\n\t// \tconst node = this.node()\n\t// \treturn [\n\t// \t\t`full path: ${node.path()}`,\n\t// \t\t`${node.cooks_count()} cooks`,\n\t// \t\t`cook time: ${node.cook_time()}`,\n\t// \t\tthis.content(),\n\t// \t]\n\t// }\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\nimport {Number2} from '../../types/GlobalTypes';\nimport {CoreType} from '../../core/Type';\n\nexport class TextureContainer extends TypedContainer<NodeContext.COP> {\n\toverride set_content(content: ContainableMap[NodeContext.COP]) {\n\t\tsuper.set_content(content);\n\t}\n\n\ttexture(): ContainableMap[NodeContext.COP] {\n\t\treturn this._content;\n\t}\n\toverride coreContent(): ContainableMap[NodeContext.COP] {\n\t\treturn this._content;\n\t}\n\toverride coreContentCloned(): ContainableMap[NodeContext.COP] | undefined {\n\t\tconst texture = this._content?.clone();\n\t\tif (texture) {\n\t\t\ttexture.needsUpdate = true;\n\t\t}\n\t\treturn texture;\n\t}\n\n\tobject() {\n\t\treturn this.texture();\n\t}\n\n\toverride infos() {\n\t\tif (this._content != null) {\n\t\t\treturn [this._content];\n\t\t}\n\t}\n\tresolution(): Number2 {\n\t\tfunction _resolutionFromHTMLVideoElement(video: HTMLVideoElement): Number2 {\n\t\t\treturn [video.videoWidth, video.videoHeight];\n\t\t}\n\n\t\tif (this._content) {\n\t\t\tconst image = this._content.image;\n\t\t\tif (image) {\n\t\t\t\t// check if normal image or gif\n\t\t\t\tif (\n\t\t\t\t\timage instanceof HTMLImageElement ||\n\t\t\t\t\timage instanceof Image ||\n\t\t\t\t\timage instanceof ImageData ||\n\t\t\t\t\timage instanceof HTMLCanvasElement // HTMLCanvasElement for gif\n\t\t\t\t) {\n\t\t\t\t\treturn [image.width, image.height];\n\t\t\t\t}\n\t\t\t\t// check if video\n\t\t\t\tif (image instanceof HTMLVideoElement) {\n\t\t\t\t\treturn _resolutionFromHTMLVideoElement(image);\n\t\t\t\t}\n\t\t\t\t// check if image data\n\t\t\t\tif (CoreType.isNumber(image.width) && CoreType.isNumber(image.height)) {\n\t\t\t\t\treturn [image.width, image.height];\n\t\t\t\t}\n\n\t\t\t\t// if just an object like {width: 2, height: 2}\n\t\t\t\t// which can be returned by\n\t\t\t}\n\t\t\tconst source = this._content.source;\n\t\t\tif (source) {\n\t\t\t\tif (source instanceof HTMLVideoElement) {\n\t\t\t\t\treturn _resolutionFromHTMLVideoElement(source);\n\t\t\t\t}\n\n\t\t\t\tconst data = source.data;\n\t\t\t\tif (data && CoreType.isNumber(data.width) && CoreType.isNumber(data.height)) {\n\t\t\t\t\treturn [data.width, data.height];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn [-1, -1];\n\t}\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class PostProcessContainer extends TypedContainer<NodeContext.POST> {\n\t// _content: any;\n\n\t// constructor() {\n\t// \tsuper();\n\t// }\n\toverride set_content(content: ContainableMap[NodeContext.POST]) {\n\t\tsuper.set_content(content);\n\t}\n\trender_pass() {\n\t\treturn this._content;\n\t}\n\n\tobject(options = {}) {\n\t\treturn this.render_pass();\n\t}\n\n\t// infos() {\n\t// \tif (this._content) {\n\t// \t\treturn [this._content];\n\t// \t}\n\t// }\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\nimport {NodeContext} from '../poly/NodeContext';\n\nexport class RopContainer extends TypedContainer<NodeContext.ROP> {\n\toverride set_content(content: ContainableMap[NodeContext.ROP]) {\n\t\tsuper.set_content(content);\n\t}\n\trenderer() {\n\t\treturn this._content;\n\t}\n}\n","import {NodeContext} from '../../poly/NodeContext';\nimport {TypedContainer} from '../_Base';\nimport {AnimationContainer} from '../Animation';\nimport {AudioContainer} from '../Audio';\nimport {EventContainer} from '../Event';\nimport {GeometryContainer} from '../Geometry';\nimport {GlContainer} from '../Gl';\nimport {JsContainer} from '../Js';\nimport {ManagerContainer} from '../Manager';\nimport {MaterialContainer} from '../Material';\nimport {ObjectContainer} from '../Object';\nimport {TextureContainer} from '../Texture';\nimport {PostProcessContainer} from '../PostProcess';\nimport {RopContainer} from '../Rop';\n\nexport type ContainerClassMapGeneric = {[key in NodeContext]: TypedContainer<key>};\nexport const ContainerClassMap = {\n\t[NodeContext.ANIM]: AnimationContainer,\n\t[NodeContext.AUDIO]: AudioContainer,\n\t[NodeContext.COP]: TextureContainer,\n\t[NodeContext.EVENT]: EventContainer,\n\t[NodeContext.GL]: GlContainer,\n\t[NodeContext.JS]: JsContainer,\n\t[NodeContext.MANAGER]: ManagerContainer,\n\t[NodeContext.MAT]: MaterialContainer,\n\t[NodeContext.OBJ]: ObjectContainer,\n\t[NodeContext.ROP]: RopContainer,\n\t[NodeContext.POST]: PostProcessContainer,\n\t[NodeContext.SOP]: GeometryContainer,\n};\n\ntype ContainerMapGeneric = {[key in NodeContext]: TypedContainer<key>};\n\nexport interface ContainerMap extends ContainerMapGeneric {\n\t[NodeContext.ANIM]: AnimationContainer;\n\t[NodeContext.AUDIO]: AudioContainer;\n\t[NodeContext.COP]: TextureContainer;\n\t[NodeContext.EVENT]: EventContainer;\n\t[NodeContext.GL]: GlContainer;\n\t[NodeContext.JS]: JsContainer;\n\t[NodeContext.MANAGER]: ManagerContainer;\n\t[NodeContext.MAT]: MaterialContainer;\n\t[NodeContext.OBJ]: ObjectContainer;\n\t[NodeContext.ROP]: RopContainer;\n\t[NodeContext.POST]: PostProcessContainer;\n\t[NodeContext.SOP]: GeometryContainer;\n}\n","import {ContainableMap} from './../../../../src/engine/containers/utils/ContainableMap';\nimport {ContainableClassMap} from './../../containers/utils/ContainableMap';\nimport {TypedNode} from '../_Base';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {ContainerMap, ContainerClassMap} from '../../containers/utils/ContainerMap';\n\ntype NodeContainerControllerCallback<NC extends NodeContext> = (container: ContainerMap[NC] | undefined) => void;\n\nexport class TypedContainerController<NC extends NodeContext> {\n\tprivate _callbacks: NodeContainerControllerCallback<NC>[] = [];\n\tprivate _callbacksTmp: NodeContainerControllerCallback<NC>[] = [];\n\tprotected _container: ContainerMap[NC];\n\n\tconstructor(protected node: TypedNode<NC, any>) {\n\t\tthis._container = this._createContainer();\n\t}\n\n\tcontainer() {\n\t\treturn this._container;\n\t}\n\tprivate _createContainer() {\n\t\tconst ContainerClass = ContainerClassMap[this.node.context()];\n\t\treturn new ContainerClass(this.node as any) as ContainerMap[NC];\n\t}\n\tprivate _createContainerWithContent() {\n\t\tconst container = this._createContainer();\n\t\tconst ContentClass = ContainableClassMap[this.node.context()];\n\t\tconst content = new ContentClass() as ContainableMap[NC];\n\t\tcontainer.set_content(<never>content);\n\t\treturn container;\n\t}\n\n\tfirstNonBypassedNode() {\n\t\tif (this.node.flags?.bypass?.active()) {\n\t\t\tconst inputNode = (<unknown>this.node.io.inputs.input(0)) as TypedNode<NC, any>;\n\t\t\treturn inputNode;\n\t\t} else {\n\t\t\treturn this.node;\n\t\t}\n\t}\n\n\tcontainerUnlessBypassed(): ContainerMap[NC] | undefined {\n\t\tif (this.node.flags?.bypass?.active()) {\n\t\t\tthis.node.states.error.clear();\n\t\t\tconst inputNode = (<unknown>this.node.io.inputs.input(0)) as TypedNode<NC, any>;\n\t\t\tif (inputNode) {\n\t\t\t\treturn inputNode.containerController.containerUnlessBypassed();\n\t\t\t} else {\n\t\t\t\treturn this._createContainerWithContent();\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.container();\n\t\t}\n\t}\n\n\tasync compute(): Promise<ContainerMap[NC]> {\n\t\tif (this.node.disposed()) {\n\t\t\tconsole.warn('.compute() requested from a disposed node', this.node);\n\t\t}\n\t\tif (this.node.flags?.bypass?.active()) {\n\t\t\tthis.node.states.error.clear();\n\t\t\tconst inputNode = (<unknown>this.node.io.inputs.input(0)) as TypedNode<NC, any>;\n\t\t\tif (inputNode) {\n\t\t\t\tconst container = (await this.requestInputContainer(0)) || this._container;\n\t\t\t\tthis.node.cookController.endCook();\n\t\t\t\treturn container;\n\t\t\t} else {\n\t\t\t\treturn this._createContainerWithContent();\n\t\t\t}\n\t\t}\n\t\tif (this.node.isDirty()) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis._callbacks.push(resolve as () => ContainerMap[NC]);\n\t\t\t\tif (this.node.flags?.bypass?.active()) {\n\t\t\t\t\tthrow 'we should not be here';\n\t\t\t\t}\n\t\t\t\tthis.node.cookController.cookMain();\n\t\t\t});\n\t\t}\n\t\treturn this._container;\n\t}\n\t// async requestContainerTEST(): Promise<ContainerMap[NC]> {\n\t// \tif (this.node.flags?.bypass?.active()) {\n\t// \t\tconst container = await this.requestInputContainer(0);\n\t// \t\treturn container || this._container;\n\t// \t}\n\t// \tif (this.node.isDirty()) {\n\t// \t\tawait this.node.cookController.cook_main();\n\t// \t}\n\t// \treturn this._container;\n\t// }\n\n\t// TODO: should I merge this into the method above?\n\t// private process_container_request() {\n\t// \tif (this.node.flags?.bypass?.active()) {\n\t// \t\tconst input_index = 0;\n\t// \t\tthis.requestInputContainer(input_index).then((container) => {\n\t// \t\t\tthis.node.removeDirtyState();\n\t// \t\t\tif (container) {\n\t// \t\t\t\tthis.notify_requesters(container);\n\t// \t\t\t} else {\n\t// \t\t\t\tthis.node.states.error.set('input invalid');\n\t// \t\t\t}\n\t// \t\t});\n\t// \t} else {\n\t// \t\tif (this.node.isDirty()) {\n\t// \t\t\tthis.node.cookController.cook_main();\n\t// \t\t} else {\n\t// \t\t\tthis.notify_requesters();\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tasync requestInputContainer(inputIndex: number) {\n\t\tconst inputNode = (<unknown>this.node.io.inputs.input(inputIndex)) as TypedNode<NC, any>;\n\t\tif (inputNode) {\n\t\t\treturn await inputNode.compute();\n\t\t} else {\n\t\t\tthis.node.states.error.set(`input ${inputIndex} required`);\n\t\t\tthis.notifyRequesters();\n\t\t\treturn null;\n\t\t}\n\t}\n\tnotifyRequesters(container?: ContainerMap[NC]) {\n\t\t// make a copy of the callbacks first,\n\t\t// to ensure that new ones are not added to this list\n\t\t// in side effects from those callbacks\n\t\t// (the test suite for the File SOP is a good test for this)\n\t\tthis._callbacksTmp = this._callbacks.slice(); // clone\n\t\tthis._callbacks.splice(0, this._callbacks.length); // empty\n\n\t\tif (!container) {\n\t\t\tcontainer = this.node.containerController.container();\n\t\t}\n\t\tlet callback: NodeContainerControllerCallback<NC> | undefined;\n\t\twhile ((callback = this._callbacksTmp.pop())) {\n\t\t\tcallback(container);\n\t\t}\n\t\tthis.node.scene().cookController.removeNode(this.node);\n\t}\n}\n\nexport class BaseContainerController extends TypedContainerController<any> {}\n","import {Poly} from '../../../Poly';\nimport {NodeCookController} from '../CookController';\n\nexport interface NodePerformanceData {\n\tinputsTime: number;\n\tparamsTime: number;\n\tcookTime: number;\n}\n\nconst performance = Poly.performance.performanceManager();\nexport class NodeCookPerformanceformanceController {\n\tprivate _inputsStart: number = 0;\n\tprivate _inputsTime: number = 0;\n\tprivate _paramsStart: number = 0;\n\tprivate _paramsTime: number = 0;\n\tprivate _cookStart: number = 0;\n\tprivate _cookTime: number = 0;\n\tprivate _cooksCount: number = 0;\n\tprivate _data: NodePerformanceData = {\n\t\tinputsTime: 0,\n\t\tparamsTime: 0,\n\t\tcookTime: 0,\n\t};\n\n\tconstructor(private cookController: NodeCookController<any>) {}\n\n\tcooksCount() {\n\t\treturn this._cooksCount;\n\t}\n\tdata() {\n\t\tthis._data.inputsTime = this._inputsTime;\n\t\tthis._data.paramsTime = this._paramsTime;\n\t\tthis._data.cookTime = this._cookTime;\n\t\treturn this._data;\n\t}\n\n\tactive(): boolean {\n\t\treturn this.cookController.performanceRecordStarted();\n\t}\n\n\t//\n\t// INPUTS\n\t//\n\trecordInputsStart() {\n\t\tif (this.active()) {\n\t\t\tthis._inputsStart = performance.now();\n\t\t}\n\t}\n\trecordInputsEnd() {\n\t\tif (this.active()) {\n\t\t\tthis._inputsTime = performance.now() - this._inputsStart;\n\t\t}\n\t}\n\t//\n\t// PARAMS\n\t//\n\trecordParamsStart() {\n\t\tif (this.active()) {\n\t\t\tthis._paramsStart = performance.now();\n\t\t}\n\t}\n\trecordParamsEnd() {\n\t\tif (this.active()) {\n\t\t\tthis._paramsTime = performance.now() - this._paramsStart;\n\t\t}\n\t}\n\t//\n\t// COOK\n\t//\n\trecordCookStart() {\n\t\tif (this.active()) {\n\t\t\tthis._cookStart = performance.now();\n\t\t}\n\t}\n\trecordCookEnd() {\n\t\tif (this.active()) {\n\t\t\tthis._cookTime = performance.now() - this._cookStart;\n\t\t\tthis._cooksCount += 1;\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../_Base';\nimport {Poly} from '../../Poly';\nimport {CorePerformance} from '../../../core/performance/CorePerformance';\nimport {NodeCookPerformanceformanceController} from './cook/PerformanceController';\nimport {ContainerMap} from '../../containers/utils/ContainerMap';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {ContainableMap} from '../../containers/utils/ContainableMap';\nimport {touchNodeRef} from '../../../core/reactivity/NodeReactivity';\nimport {NodeInputsController} from './io/InputsController';\n\nenum ErrorType {\n\tFROM_INPUTS = 'node inputs error',\n\tINTERNAL = 'node internal error',\n}\n\nexport type OnCookCompleteHook = () => void;\n\nexport class NodeCookController<NC extends NodeContext> {\n\tprivate _corePerformance: CorePerformance;\n\tprivate _cooking: boolean = false;\n\tprivate _cookingDirtyTimestamp: number | undefined;\n\tprivate _performanceController: NodeCookPerformanceformanceController = new NodeCookPerformanceformanceController(\n\t\tthis\n\t);\n\tprivate _inputContainers: Array<ContainerMap[NC] | null> = [];\n\tprivate _inputContents: ContainableMap[NC][] = [];\n\tprivate _EMPTY_ARRAY: ContainableMap[NC][] = [];\n\n\tconstructor(private node: BaseNodeType) {\n\t\tthis._corePerformance = this.node.scene().performance;\n\t}\n\tperformanceRecordStarted() {\n\t\treturn this._corePerformance.started();\n\t}\n\tdispose() {\n\t\tthis._clearHooks();\n\t}\n\n\t// Disallowing inputs evaluation is important for switch nodes (such as SOP and COP)\n\t// that should not evaluate all inputs, but only a single one, depending on a param value\n\t// currently only for switch SOP and COP\n\tprivate _inputsEvaluationRequired: boolean = true;\n\tdisallowInputsEvaluation() {\n\t\tthis._inputsEvaluationRequired = false;\n\t}\n\n\tisCooking(): boolean {\n\t\treturn this._cooking === true;\n\t}\n\n\tprivate _startCookIfNoErrors(inputContents: ContainableMap[NC][]) {\n\t\tif (this.node.states.error.active() || this.node.disposed() == true) {\n\t\t\tthis.endCook();\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis._performanceController.recordCookStart();\n\t\t\t\t// make sure we treat rejected promise\n\t\t\t\t// if cook is async\n\t\t\t\tconst promise = this.node.cook(inputContents);\n\t\t\t\tif (promise != null) {\n\t\t\t\t\tpromise.catch((e: any) => {\n\t\t\t\t\t\tthis._onError(e, ErrorType.INTERNAL, false);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis._onError(e, ErrorType.INTERNAL);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync cookMain() {\n\t\tif (this.isCooking()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.node.disposed() == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._initCookingState();\n\t\tthis.node.states.error.clear();\n\t\tthis.node.scene().cookController.addNode(this.node);\n\n\t\ttry {\n\t\t\t// we need to try/catch inputs fetching,\n\t\t\t// as some nodes like the sop/normalsHelper\n\t\t\t// currently fail when being cloned\n\t\t\t// const inputContents: ContainableMap[NC][] | undefined = this._inputsEvaluationRequired\n\t\t\t// \t? await this._evaluateInputs()\n\t\t\t// \t: undefined;\n\t\t\tthis._inputContents.length = 0;\n\t\t\tif (this._inputsEvaluationRequired) {\n\t\t\t\tawait this._evaluateInputs(this._inputContents);\n\t\t\t}\n\n\t\t\tif (this.node.params.paramsEvalRequired()) {\n\t\t\t\tawait this._evaluateParams();\n\t\t\t}\n\t\t\tthis._startCookIfNoErrors(this._inputContents);\n\t\t} catch (e) {\n\t\t\tthis._onError(e, ErrorType.FROM_INPUTS);\n\t\t}\n\t}\n\tprivate _onError(e: unknown, errorType: ErrorType, alwaysSet: boolean = true) {\n\t\tif (alwaysSet || !this.node.states.error.active()) {\n\t\t\tconst processedError = this.node.processError(e);\n\t\t\tthis.node.states.error.set(`${errorType}: '${processedError}'.`);\n\t\t\tPoly.warn(e);\n\t\t}\n\t\tthis.endCook();\n\t}\n\n\tasync cookMainWithoutInputs() {\n\t\tthis.node.scene().cookController.addNode(this.node);\n\t\tif (this.isCooking()) {\n\t\t\t// TODO:\n\t\t\t// this seems to happen because when we flush the cooker queue,\n\t\t\t// some graph nodes will trigger more updates, which will then make dependent nodes\n\t\t\t// dirty again\n\t\t\tPoly.warn('cook_main_without_inputs already cooking', this.node.path());\n\t\t\treturn;\n\t\t}\n\t\tthis._initCookingState();\n\t\tthis.node.states.error.clear();\n\n\t\tif (this.node.params.paramsEvalRequired()) {\n\t\t\tawait this._evaluateParams();\n\t\t}\n\t\tthis._startCookIfNoErrors(this._EMPTY_ARRAY);\n\t}\n\n\tendCook(/*message?: string | null*/) {\n\t\tthis._finalizeCookPerformance();\n\n\t\tconst dirtyTimestamp = this.node.dirtyController.dirtyTimestamp();\n\t\tconst timestampUnchangedSinceCookStarted =\n\t\t\tdirtyTimestamp == null || dirtyTimestamp === this._cookingDirtyTimestamp;\n\t\tif (\n\t\t\ttimestampUnchangedSinceCookStarted ||\n\t\t\tthis.node.flags?.bypass?.active() /* || this._scenePlayingAndNodeAlreadyCookedForCurrentFrame()*/\n\t\t) {\n\t\t\tthis.node.removeDirtyState();\n\t\t\tthis._terminateCookProcess();\n\t\t} else {\n\t\t\tif (this.node.disposed() == true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tPoly.log('COOK AGAIN', dirtyTimestamp, this._cookingDirtyTimestamp, this.node.path());\n\t\t\tthis._cooking = false;\n\t\t\tthis.cookMain();\n\t\t}\n\t}\n\t// private _lastFrameCooked: number | undefined;\n\t// private _scenePlayingAndNodeAlreadyCookedForCurrentFrame() {\n\t// \tif (this.node.scene().timeController.playing()) {\n\t// \t\treturn this._lastFrameCooked == this.node.scene().frame();\n\t// \t}\n\t// \treturn false;\n\t// }\n\tprivate _initCookingState() {\n\t\tthis._cooking = true;\n\t\t// this._lastFrameCooked = this.node.scene().frame();\n\t\tthis._cookingDirtyTimestamp = this.node.dirtyController.dirtyTimestamp();\n\t}\n\tprivate _terminateCookProcess() {\n\t\tif (this.isCooking() || this.node.flags?.bypass?.active()) {\n\t\t\tthis._cooking = false;\n\n\t\t\t// setTimeout(this.node.containerController.notifyRequesters.bind(this.node.containerController), 0);\n\t\t\tthis.node.containerController.notifyRequesters();\n\t\t\tthis._runOnCookCompleteHooks();\n\t\t\tif (this.node.disposed() == true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttouchNodeRef(this.node.path());\n\t\t}\n\t}\n\n\tprivate async _evaluateInputs(inputContents: ContainableMap[NC][]): Promise<ContainableMap[NC][]> {\n\t\tthis._performanceController.recordInputsStart();\n\n\t\tconst ioOnputs: NodeInputsController<NC> = this.node.io.inputs;\n\n\t\t// const inputContainers: (ContainerMap[NC] | null)[] = this._inputsEvaluationRequired\n\t\t// \t? ioOnputs.isGraphNodeDirty()\n\t\t// \t\t? await ioOnputs.evalRequiredInputs()\n\t\t// \t\t: ioOnputs.containersWithoutEvaluation()\n\t\t// \t: [];\n\n\t\tthis._inputContainers.length = 0;\n\t\tif (this._inputsEvaluationRequired) {\n\t\t\tif (ioOnputs.isGraphNodeDirty()) {\n\t\t\t\tawait ioOnputs.evalRequiredInputs(this._inputContainers);\n\t\t\t} else {\n\t\t\t\tioOnputs.containersWithoutEvaluation(this._inputContainers);\n\t\t\t}\n\t\t}\n\n\t\tconst inputs = ioOnputs.inputs();\n\t\t// const inputContents: ContainableMap[NC][] = [];\n\t\tlet inputContainer: ContainerMap[NC] | null;\n\t\tfor (let i = 0; i < inputs.length; i++) {\n\t\t\tinputContainer = this._inputContainers[i];\n\t\t\tif (inputContainer) {\n\t\t\t\tif (ioOnputs.cloneRequired(i)) {\n\t\t\t\t\tinputContents[i] = inputContainer.coreContentCloned() as ContainableMap[NC];\n\t\t\t\t} else {\n\t\t\t\t\tinputContents[i] = inputContainer.coreContent() as ContainableMap[NC];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._performanceController.recordInputsEnd();\n\t\treturn inputContents;\n\t}\n\tprivate async _evaluateParams() {\n\t\tthis._performanceController.recordParamsStart();\n\t\tawait this.node.params.evalAll();\n\t\tthis._performanceController.recordParamsEnd();\n\t}\n\n\t//\n\t//\n\t// PERFORMANCE\n\t//\n\t//\n\tcooksCount(): number {\n\t\treturn this._performanceController.cooksCount();\n\t}\n\tcookTime(): number {\n\t\treturn this._performanceController.data().cookTime;\n\t}\n\n\tprivate _finalizeCookPerformance() {\n\t\tif (!this._corePerformance.started()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._performanceController.recordCookEnd();\n\n\t\tthis._corePerformance.recordNodeCookData(this.node, this._performanceController.data());\n\t}\n\n\t//\n\t//\n\t// HOOK\n\t//\n\t//\n\tprivate _onCookCompleteHookNames: string[] | undefined;\n\tprivate _onCookCompleteHooks: OnCookCompleteHook[] | undefined;\n\tregisterOnCookEnd(callbackName: string, callback: OnCookCompleteHook) {\n\t\tthis._onCookCompleteHookNames = this._onCookCompleteHookNames || [];\n\t\tthis._onCookCompleteHooks = this._onCookCompleteHooks || [];\n\t\tthis._onCookCompleteHookNames.push(callbackName);\n\t\tthis._onCookCompleteHooks.push(callback);\n\t}\n\tprivate _clearHooks() {\n\t\tif (!this._onCookCompleteHookNames || !this._onCookCompleteHooks) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const hookName of this._onCookCompleteHookNames) {\n\t\t\tthis.deregisterOnCookEnd(hookName);\n\t\t}\n\t}\n\tderegisterOnCookEnd(callbackName: string) {\n\t\tif (!this._onCookCompleteHookNames || !this._onCookCompleteHooks) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = this._onCookCompleteHookNames?.indexOf(callbackName);\n\t\tthis._onCookCompleteHookNames.splice(index, 1);\n\t\tthis._onCookCompleteHooks.splice(index, 1);\n\t\tif (this._onCookCompleteHookNames.length == 0) {\n\t\t\tthis._onCookCompleteHookNames = undefined;\n\t\t}\n\t\tif (this._onCookCompleteHooks.length == 0) {\n\t\t\tthis._onCookCompleteHooks = undefined;\n\t\t}\n\t}\n\tprivate _runOnCookCompleteHooks() {\n\t\tif (this._onCookCompleteHooks) {\n\t\t\tconst hooks = [...this._onCookCompleteHooks];\n\t\t\tfor (let hook of hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n\tonCookEndCallbackNames() {\n\t\treturn this._onCookCompleteHookNames;\n\t}\n}\n","import {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport class ButtonParam extends TypedParam<ParamType.BUTTON> {\n\tstatic override type() {\n\t\treturn ParamType.BUTTON;\n\t}\n\toverride defaultValueSerialized() {\n\t\treturn this._default_value;\n\t}\n\toverride rawInputSerialized() {\n\t\treturn this._raw_input;\n\t}\n\toverride valueSerialized() {\n\t\treturn this.value;\n\t}\n\tprotected override _copyValue(param: ButtonParam) {}\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.BUTTON],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.BUTTON]\n\t) {\n\t\treturn true;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.BUTTON],\n\t\tval2: ParamValuesTypeMap[ParamType.BUTTON]\n\t) {\n\t\treturn true;\n\t}\n\tasync pressButton() {\n\t\t// cook the node in case it requires it, since the callback will not be ran if the node is cooking\n\t\tif (this.node.isDirty() || this.node.cookController.isCooking()) {\n\t\t\tawait this.node.compute();\n\t\t}\n\t\tawait this.options.executeCallback();\n\t}\n}\n","import {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport class FolderParam extends TypedParam<ParamType.FOLDER> {\n\tstatic override type() {\n\t\treturn ParamType.FOLDER;\n\t}\n\toverride defaultValueSerialized() {\n\t\treturn this._default_value;\n\t}\n\toverride rawInputSerialized() {\n\t\treturn this._raw_input;\n\t}\n\toverride valueSerialized() {\n\t\treturn this.value;\n\t}\n\tprotected override _copyValue(param: FolderParam) {}\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.FOLDER],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.FOLDER]\n\t) {\n\t\treturn true;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.FOLDER],\n\t\tval2: ParamValuesTypeMap[ParamType.FOLDER]\n\t) {\n\t\treturn true;\n\t}\n}\n","import {BooleanParam} from '../Boolean';\nimport {ButtonParam} from '../Button';\nimport {ColorParam} from '../Color';\nimport {FloatParam} from '../Float';\nimport {FolderParam} from '../Folder';\nimport {IntegerParam} from '../Integer';\n// import {OperatorPathParam} from '../OperatorPath';\nimport {ParamPathParam} from '../ParamPath';\nimport {NodePathParam} from '../NodePath';\nimport {RampParam} from '../Ramp';\nimport {StringParam} from '../String';\nimport {Vector2Param} from '../Vector2';\nimport {Vector3Param} from '../Vector3';\nimport {Vector4Param} from '../Vector4';\n\nimport {ParamType} from '../../poly/ParamType';\n\ntype ParamClassMapType = {[key in ParamType]: any};\nexport const ParamConstructorByType: ParamClassMapType = {\n\t[ParamType.BOOLEAN]: BooleanParam,\n\t[ParamType.BUTTON]: ButtonParam,\n\t[ParamType.COLOR]: ColorParam,\n\t[ParamType.FLOAT]: FloatParam,\n\t[ParamType.FOLDER]: FolderParam,\n\t[ParamType.INTEGER]: IntegerParam,\n\t// [ParamType.OPERATOR_PATH]: OperatorPathParam,\n\t[ParamType.PARAM_PATH]: ParamPathParam,\n\t[ParamType.NODE_PATH]: NodePathParam,\n\t[ParamType.RAMP]: RampParam,\n\t[ParamType.STRING]: StringParam,\n\t[ParamType.VECTOR2]: Vector2Param,\n\t[ParamType.VECTOR3]: Vector3Param,\n\t[ParamType.VECTOR4]: Vector4Param,\n};\n","import {BaseNodeType} from '../../_Base';\nimport {BaseParamType} from '../../../params/_Base';\nimport {ParamOptions} from '../../../params/utils/OptionsController';\nimport {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\nimport {FloatParam} from '../../../params/Float';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamTemplate} from './ParamsConfig';\nimport {ParamConstructorMap} from '../../../params/types/ParamConstructorMap';\nimport {ParamConstructorByType} from '../../../params/types/ParamConstructorByType';\nimport {ParamInitValuesTypeMap} from '../../../params/types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from '../../../params/types/ParamValuesTypeMap';\nimport {NodeEvent} from '../../../poly/NodeEvent';\nimport {ParamInitValueSerializedTypeMap} from '../../../params/types/ParamInitValueSerializedTypeMap';\nimport {Poly} from '../../../Poly';\nimport {ParamInitData} from '../io/IOController';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {arrayCopy} from '../../../../core/ArrayUtils';\n\nconst NODE_SIMPLE_NAME = 'params';\n\nexport type OnSceneLoadHook = () => void;\ntype PostCreateParamsHook = () => void;\n\nexport interface ParamOptionToAdd<T extends ParamType> {\n\tname: string;\n\ttype: T;\n\tinitValue: ParamInitValueSerializedTypeMap[T];\n\trawInput: ParamInitValueSerializedTypeMap[T];\n\toptions?: ParamOptions;\n}\nexport interface ParamsUpdateOptions {\n\tnamesToDelete?: string[];\n\ttoAdd?: ParamOptionToAdd<ParamType>[];\n}\nconst _tmpAll: BaseParamType[] = [];\n\nexport class ParamsController {\n\tprivate _param_create_mode: boolean = false;\n\tprivate _params_created: boolean = false;\n\tprivate _paramsByName: Map<string, BaseParamType> = new Map();\n\t// caches\n\tprivate _paramsList: BaseParamType[] = [];\n\tprivate _paramNames: string[] = [];\n\tprivate _non_spare_params: BaseParamType[] = [];\n\tprivate _spare_params: BaseParamType[] = [];\n\tprivate _non_spare_param_names: string[] = [];\n\tprivate _spare_param_names: string[] = [];\n\n\tprivate _params_node: CoreGraphNode | undefined;\n\t// private _params_eval_key: string;\n\tprivate _params_added_since_last_params_eval: boolean = false;\n\t// private _current_param_folder_name: string | undefined;\n\n\t// hooks\n\tprivate _post_create_params_hook_names: string[] | undefined;\n\tprivate _post_create_params_hooks: PostCreateParamsHook[] | undefined;\n\tprivate _on_scene_load_hooks: OnSceneLoadHook[] | undefined;\n\tprivate _on_scene_load_hook_names: string[] | undefined;\n\n\tconstructor(public readonly node: BaseNodeType) {}\n\n\tdispose() {\n\t\tif (this._params_node) {\n\t\t\tthis._params_node.dispose();\n\t\t}\n\n\t\t// dispose params\n\t\tarrayCopy(this.all, _tmpAll);\n\t\tfor (const param of _tmpAll) {\n\t\t\tparam.dispose();\n\t\t}\n\n\t\t// hooks\n\t\tthis._post_create_params_hook_names = undefined;\n\t\tthis._post_create_params_hooks = undefined;\n\t\tthis._on_scene_load_hooks = undefined;\n\t\tthis._on_scene_load_hook_names = undefined;\n\t}\n\n\tprivate initDependencyNode() {\n\t\tif (!this._params_node) {\n\t\t\t// TODO: consider not having a params_node for nodes which have no parameters\n\t\t\tthis._params_node = new CoreGraphNode(this.node.scene(), NODE_SIMPLE_NAME);\n\t\t\t// this._params_node.setScene(this.node.scene);\n\t\t\tthis.node.addGraphInput(this._params_node, false);\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.initDependencyNode();\n\t\t// this.reset_params()\n\t\tthis._param_create_mode = true;\n\n\t\tthis._initFromParamsConfig();\n\t\tthis.node.createParams();\n\t\tthis._postCreateParams();\n\t}\n\tprivate _postCreateParams() {\n\t\tthis._updateCaches();\n\t\t// this._create_params_ui_data_dependencies();\n\t\tthis._initParamAccessors();\n\t\tthis._param_create_mode = false;\n\t\tthis._params_created = true;\n\n\t\tthis._runPostCreateParamsHooks();\n\n\t\t// This was to debug a weird bug where I was adding nodes to the list\n\t\t// of params, from the DependenciesController\n\t\t// this._params_list.push = (...items: BaseParamType[]) => {\n\t\t// \tif (items[0] && !items[0].compute) {\n\t\t// \t\tPoly.warn('adding params', items);\n\t\t// \t}\n\t\t// \tfor (let i of items) {\n\t\t// \t\tthis._params_list[this._params_list.length] = i;\n\t\t// \t}\n\t\t// \treturn 0;\n\t\t// };\n\t}\n\tpostCreateSpareParams() {\n\t\tthis._updateCaches();\n\t\tthis._initParamAccessors();\n\t\t// param.emit(ParamEvent.DELETED);\n\t\tthis.node.scene().referencesController.notifyParamsUpdated(this.node);\n\t\tthis.node.emit(NodeEvent.PARAMS_UPDATED);\n\t}\n\tupdateParams(options: ParamsUpdateOptions) {\n\t\tlet hasCreatedAParam = false;\n\t\tlet hasDeletedAParam = false;\n\t\tconst addedParams: BaseParamType[] = [];\n\t\tif (options.namesToDelete) {\n\t\t\tfor (const param_name of options.namesToDelete) {\n\t\t\t\tif (this.has(param_name)) {\n\t\t\t\t\tthis._deleteParam(param_name);\n\t\t\t\t\thasDeletedAParam = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (options.toAdd) {\n\t\t\tfor (const paramData of options.toAdd) {\n\t\t\t\tconst param = this.addParam(paramData.type, paramData.name, paramData.initValue, paramData.options);\n\t\t\t\tif (param) {\n\t\t\t\t\tif (paramData.rawInput != null) {\n\t\t\t\t\t\tparam.set(paramData.rawInput as never);\n\t\t\t\t\t}\n\t\t\t\t\thasCreatedAParam = true;\n\t\t\t\t\taddedParams.push(param);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDeletedAParam || hasCreatedAParam) {\n\t\t\tthis.postCreateSpareParams();\n\t\t}\n\t\tfor (const param of addedParams) {\n\t\t\tthis.node.scene().missingExpressionReferencesController.checkForMissingParamReferences(param);\n\t\t}\n\t}\n\n\tprivate _initFromParamsConfig() {\n\t\tconst paramsConfig = this.node.paramsConfig as PolyDictionary<ParamTemplate<ParamType>>;\n\t\tlet init_values_used = false;\n\t\tif (paramsConfig) {\n\t\t\tconst paramsInitValueOverrides = this.node.createOptions?.paramsInitValueOverrides;\n\t\t\tconst names = Object.keys(paramsConfig);\n\t\t\tfor (const name of names) {\n\t\t\t\tconst config = paramsConfig[name];\n\t\t\t\tlet init_value: ParamInitData<ParamType> | undefined;\n\t\t\t\tif (paramsInitValueOverrides) {\n\t\t\t\t\tinit_value = paramsInitValueOverrides[name];\n\t\t\t\t\tinit_values_used = true;\n\t\t\t\t}\n\t\t\t\tthis.addParam(config.type, name, config.init_value, config.options, init_value);\n\t\t\t}\n\t\t}\n\t\t// this set dirty may not be necessary, but when starting a scene with a spotlight\n\t\t// with a non default t (ie: [2,2,0]), it would not be positionned correctly and would require\n\t\t// a cook\n\t\tif (init_values_used) {\n\t\t\tthis.node.setDirty();\n\t\t}\n\t\tif (this.node.createOptions) {\n\t\t\tthis.node.createOptions.paramsInitValueOverrides = undefined;\n\t\t}\n\t}\n\tprivate _initParamAccessors() {\n\t\tlet currentNamesInAccessor = Object.getOwnPropertyNames(this.node.pv);\n\t\tthis._removeUnneededAccessors(currentNamesInAccessor);\n\t\t// update var after having removed accessors\n\t\tcurrentNamesInAccessor = Object.getOwnPropertyNames(this.node.pv);\n\t\tconst all = this.all;\n\t\tfor (const param of all) {\n\t\t\tconst isSpare: boolean = param.options.isSpare();\n\n\t\t\tconst paramNotYetInAccessors = !currentNamesInAccessor.includes(param.name());\n\n\t\t\ttry {\n\t\t\t\t// this currently fails\n\t\t\t\t// when copy/pasting the js/getObjectAttribute node\n\t\t\t\tif (paramNotYetInAccessors || isSpare) {\n\t\t\t\t\tObject.defineProperty(this.node.pv, param.name(), {\n\t\t\t\t\t\tget: () => {\n\t\t\t\t\t\t\treturn param.value;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// only spare parameters can be removed\n\t\t\t\t\t\tconfigurable: isSpare,\n\t\t\t\t\t});\n\t\t\t\t\tObject.defineProperty(this.node.p, param.name(), {\n\t\t\t\t\t\tget: () => {\n\t\t\t\t\t\t\treturn param;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tconfigurable: isSpare,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (err) {}\n\t\t}\n\t}\n\tprivate _removeUnneededAccessors(current_names_in_accessor: string[]) {\n\t\tconst current_param_names = this._paramNames;\n\t\tconst names_to_remove = [];\n\t\tfor (const current_name_in_accessor of current_names_in_accessor) {\n\t\t\tif (!current_param_names.includes(current_name_in_accessor)) {\n\t\t\t\tnames_to_remove.push(current_name_in_accessor);\n\t\t\t}\n\t\t}\n\n\t\tfor (const name_to_remove of names_to_remove) {\n\t\t\tObject.defineProperty(this.node.pv, name_to_remove, {\n\t\t\t\tget: () => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tconfigurable: true,\n\t\t\t});\n\t\t\tObject.defineProperty(this.node.p, name_to_remove, {\n\t\t\t\tget: () => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tconfigurable: true,\n\t\t\t});\n\t\t}\n\t}\n\n\tget params_node() {\n\t\treturn this._params_node;\n\t}\n\tget all() {\n\t\treturn this._paramsList;\n\t}\n\tget non_spare() {\n\t\treturn this._non_spare_params;\n\t}\n\tget spare() {\n\t\treturn this._spare_params;\n\t}\n\tget names(): string[] {\n\t\treturn this._paramNames;\n\t}\n\tget non_spare_names(): string[] {\n\t\treturn this._non_spare_param_names;\n\t}\n\tget spare_names(): string[] {\n\t\treturn this._spare_param_names;\n\t}\n\n\tprivate set_with_type<T extends ParamType>(paramName: string, value: ParamInitValuesTypeMap[T], type: T) {\n\t\tconst param = this.paramWithType(paramName, type);\n\t\tif (param) {\n\t\t\tparam.set(value as never);\n\t\t} else {\n\t\t\tPoly.warn(`param ${paramName} not found with type ${type}`);\n\t\t}\n\t}\n\tset_float(paramName: string, value: ParamInitValuesTypeMap[ParamType.FLOAT]) {\n\t\tthis.set_with_type(paramName, value, ParamType.FLOAT);\n\t}\n\tset_vector3(paramName: string, value: ParamInitValuesTypeMap[ParamType.VECTOR3]) {\n\t\tthis.set_with_type(paramName, value, ParamType.VECTOR3);\n\t}\n\n\thas_param(paramName: string) {\n\t\treturn this._paramsByName.has(paramName);\n\t}\n\thas(paramName: string) {\n\t\treturn this.has_param(paramName);\n\t}\n\tget(paramName: string) {\n\t\treturn this.param(paramName);\n\t}\n\tparamWithType<T extends ParamType>(param_name: string, type: T): ParamConstructorMap[T] | undefined {\n\t\tconst param = this.param(param_name);\n\t\tif (param && param.type() == type) {\n\t\t\treturn param as ParamConstructorMap[T];\n\t\t}\n\t}\n\tgetFloat(param_name: string): FloatParam {\n\t\treturn this.paramWithType(param_name, ParamType.FLOAT) as FloatParam;\n\t}\n\t// get_operator_path(param_name: string): OperatorPathParam {\n\t// \treturn this.paramWithType(param_name, ParamType.OPERATOR_PATH) as OperatorPathParam;\n\t// }\n\tvalue(paramName: string) {\n\t\treturn this.param(paramName)?.value;\n\t}\n\tvalueWithType<T extends ParamType>(paramName: string, type: T): ParamValuesTypeMap[T] {\n\t\treturn this.paramWithType(paramName, type)?.value as ParamValuesTypeMap[T];\n\t\t// const param = this.param(name);\n\t\t// if (param && param.type() == type) {\n\t\t// \treturn param.value();\n\t\t// }\n\t}\n\tboolean(paramName: string) {\n\t\treturn this.valueWithType(paramName, ParamType.BOOLEAN);\n\t}\n\tfloat(paramName: string) {\n\t\treturn this.valueWithType(paramName, ParamType.FLOAT);\n\t}\n\tinteger(paramName: string) {\n\t\treturn this.valueWithType(paramName, ParamType.INTEGER);\n\t}\n\tstring(paramName: string) {\n\t\treturn this.valueWithType(paramName, ParamType.STRING);\n\t}\n\tvector2(paramName: string) {\n\t\treturn this.valueWithType(paramName, ParamType.VECTOR2);\n\t}\n\tvector3(paramName: string) {\n\t\treturn this.valueWithType(paramName, ParamType.VECTOR3);\n\t}\n\tcolor(paramName: string) {\n\t\treturn this.valueWithType(paramName, ParamType.COLOR);\n\t}\n\n\tparam(paramName: string) {\n\t\tconst p = this._paramsByName.get(paramName);\n\t\tif (p != null) {\n\t\t\treturn p;\n\t\t} else {\n\t\t\tPoly.warn(\n\t\t\t\t`tried to access param '${paramName}' in node ${this.node.path()}, but existing params are: ${\n\t\t\t\t\tthis.names\n\t\t\t\t} on node ${this.node.path()}`\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t}\n\t// param_cache_name(param_name: string) {\n\t// \treturn `_param_${param_name}`;\n\t// }\n\n\t// delete_params(param_names: string[]) {\n\t// \tfor (let param_name of param_names) {\n\t// \t\tthis.delete_param(param_name);\n\t// \t}\n\n\t// }\n\t// call update_params instead\n\tprivate _deleteParam(paramName: string) {\n\t\tconst param = this._paramsByName.get(paramName);\n\t\tif (param) {\n\t\t\tif (this._params_node) {\n\t\t\t\tthis._params_node.removeGraphInput(param);\n\t\t\t}\n\t\t\tparam._setupNodeDependencies(null);\n\t\t\tthis._paramsByName.delete(paramName);\n\t\t\tif (param.isMultiple() && param.components) {\n\t\t\t\tfor (const component of param.components) {\n\t\t\t\t\tconst childName = component.name();\n\t\t\t\t\tthis._paramsByName.delete(childName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tparam.dispose();\n\t\t\tparam.scene().graphNodesController.notifyParamPathChanged(param);\n\n\t\t\t// const name_index = this._param_names.indexOf(param_name)\n\t\t\t// if(name_index >= 0){\n\t\t\t// \tthis._param_names.splice(name_index, 1)\n\t\t\t// }\n\t\t\t// param.emit(ParamEvent.DELETED);\n\t\t} else {\n\t\t\tthrow new Error(`param '${paramName}' does not exist on node ${this.node.path()}`);\n\t\t}\n\t}\n\n\taddParam<T extends ParamType>(\n\t\ttype: T,\n\t\tparamName: string,\n\t\tdefaultValue: ParamInitValuesTypeMap[T],\n\t\toptions: ParamOptions = {},\n\t\tinitData?: ParamInitData<T>\n\t): ParamConstructorMap[T] | undefined {\n\t\tconst isSpare = options['spare'] || false;\n\t\tif (this._param_create_mode === false && !isSpare) {\n\t\t\tPoly.warn(\n\t\t\t\t`node ${this.node.path()} (${this.node.type()}) param '${paramName}' cannot be created outside of createParams`\n\t\t\t);\n\t\t}\n\t\tif (this.node.scene() == null) {\n\t\t\tPoly.warn(`node ${this.node.path()} (${this.node.type()}) has no scene assigned`);\n\t\t}\n\n\t\tconst constructor = ParamConstructorByType[type];\n\t\tif (constructor != null) {\n\t\t\tconst existing_param = this._paramsByName.get(paramName);\n\t\t\tif (existing_param) {\n\t\t\t\tif (isSpare) {\n\t\t\t\t\t// delete the old one, otherwise the gl nodes when saved will attempt to set the value\n\t\t\t\t\t// of a param with the potentially wrong type\n\t\t\t\t\tif (existing_param.type() != type) {\n\t\t\t\t\t\tthis._deleteParam(existing_param.name());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// check that the param is spare, so that the ones generated by gl nodes are not generating an exception\n\t\t\t\t\tPoly.warn(`a param named ${paramName} already exists`, this.node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst param: ParamConstructorMap[T] = new constructor(this.node.scene(), this.node, {\n\t\t\t\tserializerClass: this.node.scene().paramSerializerClass(),\n\t\t\t});\n\t\t\tparam.options.set(options);\n\n\t\t\tparam.setName(paramName);\n\t\t\tparam.setInitValue(defaultValue as never);\n\t\t\tparam.initComponents();\n\n\t\t\t// set param value\n\t\t\t// and overriden options\n\t\t\tif (initData == null) {\n\t\t\t\tparam.set(defaultValue as never);\n\t\t\t} else {\n\t\t\t\t// If is_expression_for_entities is true, we need to call param.set with default_value first, such as for attribCreate.\n\t\t\t\t// Otherwise, as it would fail if the attribute was a vector\n\t\t\t\t// since that attribute would have .value equal to {x: undefined, y: undefined, z:undefined}\n\t\t\t\tif (param.options.isExpressionForEntities()) {\n\t\t\t\t\tparam.set(defaultValue as never);\n\t\t\t\t}\n\n\t\t\t\tif (initData.raw_input != null) {\n\t\t\t\t\tparam.set(initData.raw_input as never);\n\t\t\t\t} else {\n\t\t\t\t\tif (initData.simple_data != null) {\n\t\t\t\t\t\tparam.set(initData.simple_data as never);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (initData.complex_data != null) {\n\t\t\t\t\t\t\tconst raw_input = initData.complex_data.raw_input;\n\t\t\t\t\t\t\tif (raw_input) {\n\t\t\t\t\t\t\t\tparam.set(raw_input as never);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparam.set(defaultValue as never);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst overriden_options = initData.complex_data.overriden_options;\n\t\t\t\t\t\t\tif (overriden_options != null) {\n\t\t\t\t\t\t\t\tconst keys = Object.keys(overriden_options);\n\t\t\t\t\t\t\t\tfor (const key of keys) {\n\t\t\t\t\t\t\t\t\tparam.options.setOption(key as keyof ParamOptions, overriden_options[key]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tparam.postOptionsInitialize();\n\t\t\tparam._setupNodeDependencies(this.node);\n\n\t\t\tthis._paramsByName.set(param.name(), param as BaseParamType);\n\n\t\t\t// we add the components, so that we can access them with expressions like ch('ty')\n\t\t\tif (param.isMultiple() && param.components) {\n\t\t\t\tfor (const component of param.components) {\n\t\t\t\t\tthis._paramsByName.set(component.name(), component as BaseParamType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._params_added_since_last_params_eval = true;\n\n\t\t\tparam.scene().graphNodesController.notifyParamPathChanged(param);\n\t\t\treturn param;\n\t\t}\n\t}\n\n\tprivate _updateCaches() {\n\t\tthis._paramsList.splice(0, this._paramsList.length);\n\t\tthis._paramsByName.forEach((param) => {\n\t\t\tthis._paramsList.push(param);\n\t\t});\n\t\tthis._paramNames = this._paramsList.map((param) => param.name());\n\t\tthis._non_spare_params = this._paramsList.filter((p) => !p.options.isSpare());\n\t\tthis._spare_params = this._paramsList.filter((p) => p.options.isSpare());\n\t\tthis._non_spare_param_names = this._non_spare_params.map((p) => p.name());\n\t\tthis._spare_param_names = this._spare_params.map((p) => p.name());\n\t}\n\n\tasync _evalParam(param: BaseParamType) {\n\t\tif (param.isDirty()) {\n\t\t\tawait param.compute();\n\t\t\tif (param.states.error.active() && param.disposed() == false) {\n\t\t\t\tthis.node.states.error.set(`param '${param.name()}' error: ${param.states.error.message()}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _promises: Promise<void>[] = [];\n\tasync evalParams(params: BaseParamType[]) {\n\t\tlet dirtyParamsCount = 0;\n\t\tfor (const param of params) {\n\t\t\tif (param.isDirty()) {\n\t\t\t\tdirtyParamsCount += 1;\n\t\t\t}\n\t\t}\n\t\tthis._promises.length = dirtyParamsCount;\n\t\tlet i = 0;\n\t\tfor (const param of params) {\n\t\t\tif (param.isDirty()) {\n\t\t\t\tthis._promises[i] = this._evalParam(param);\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\n\t\tawait Promise.all(this._promises);\n\n\t\tif (this.node.states.error.active()) {\n\t\t\tthis.node._setContainer(null);\n\t\t}\n\t}\n\n\tparamsEvalRequired(): boolean {\n\t\treturn this._params_node != null && (this._params_node.isDirty() || this._params_added_since_last_params_eval);\n\t}\n\tasync evalAll() {\n\t\tif (this.paramsEvalRequired()) {\n\t\t\tawait this.evalParams(this._paramsList);\n\n\t\t\tthis._params_node?.removeDirtyState();\n\t\t\tthis._params_added_since_last_params_eval = false;\n\t\t}\n\t}\n\n\t//\n\t//\n\t// HOOKS\n\t//\n\t//\n\tonParamsCreated(hook_name: string, hook: PostCreateParamsHook) {\n\t\tif (this._params_created) {\n\t\t\thook();\n\t\t} else {\n\t\t\tif (this._post_create_params_hook_names && this._post_create_params_hook_names.includes(hook_name)) {\n\t\t\t\tPoly.error(`hook name ${hook_name} already exists`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._post_create_params_hook_names = this._post_create_params_hook_names || [];\n\t\t\tthis._post_create_params_hook_names.push(hook_name);\n\t\t\tthis._post_create_params_hooks = this._post_create_params_hooks || [];\n\t\t\tthis._post_create_params_hooks.push(hook);\n\t\t}\n\t}\n\taddOnSceneLoadHook(param_name: string, method: OnSceneLoadHook) {\n\t\tthis._on_scene_load_hook_names = this._on_scene_load_hook_names || [];\n\t\tthis._on_scene_load_hooks = this._on_scene_load_hooks || [];\n\n\t\tif (!this._on_scene_load_hook_names.includes(param_name)) {\n\t\t\tthis._on_scene_load_hook_names.push(param_name);\n\t\t\tthis._on_scene_load_hooks.push(method);\n\t\t} else {\n\t\t\tPoly.warn(`hook with name ${param_name} already exists`, this.node);\n\t\t}\n\t}\n\tprivate _runPostCreateParamsHooks() {\n\t\tif (this._post_create_params_hooks) {\n\t\t\tfor (const hook of this._post_create_params_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n\trunOnSceneLoadHooks() {\n\t\tif (this._on_scene_load_hooks) {\n\t\t\tfor (const hook of this._on_scene_load_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {NodeParamsConfig} from './ParamsConfig';\n// import {ParamValuesTypeMap} from './ParamsController';\n// import {ParamType} from '../../../poly/ParamType';\n\n// function getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n// \treturn o[propertyName]; // o[propertyName] is of type T[K]\n// }\n\n// let t: getProperty(ParamConfig, 'type')\n// function prop<T, K extends keyof T>(obj: T, key: K) {\n// \treturn typeof obj[key];\n// }\n// type test = Pick<ParamConfig<ParamType.FLOAT>, 'default_value'>;\n\nexport type ParamsValueAccessorType<T extends NodeParamsConfig> = {\n\treadonly // @ts-ignore\n\t[P in keyof T]: T[P]['value_type'];\n};\n\nexport class ParamsValueAccessor<T extends NodeParamsConfig> {\n\tconstructor() {\n\t\t// console.log('accessor', this);\n\t}\n}\n","import {NodeContext} from '../../../../poly/NodeContext';\nimport {InputCloneMode} from '../../../../poly/InputCloneMode';\nimport {NodeInputsController} from '../InputsController';\nimport {TypeAssert} from '../../../../poly/Assert';\nimport {NodeEvent} from '../../../../poly/NodeEvent';\nimport {TypedNode} from '../../../_Base';\nimport {isArray} from '../../../../../core/Type';\n\nexport class ClonedStatesController<NC extends NodeContext> {\n\t// private _user_inputs_clonable_states: InputCloneMode[] | undefined;\n\tprivate _clonedStates: InputCloneMode[] | undefined;\n\tprivate _clonedState: InputCloneMode | undefined;\n\tprivate _cloneRequiredStates: boolean[] = [];\n\t// private _cloneRequiredStatesMap: Map<number, boolean> = new Map();\n\tprivate _overridden: boolean = false;\n\n\tprivate node: TypedNode<NC, any>;\n\tconstructor(private inputsController: NodeInputsController<NC>) {\n\t\tthis.node = inputsController.node;\n\t}\n\tinitInputsClonedState(states: InputCloneMode | InputCloneMode[]) {\n\t\t// if (values) {\n\t\t// \tthis._user_inputs_clonable_states = values;\n\t\t// }\n\t\tif (isArray(states)) {\n\t\t\tthis._clonedStates = states; //this._user_inputs_clonable_states || this._default_inputs_clonale_state_values();\n\t\t} else {\n\t\t\tthis._clonedState = states;\n\t\t}\n\n\t\tthis.updateCloneRequiredState();\n\t}\n\n\toverrideClonedStateAllowed() {\n\t\tif (this._clonedStates) {\n\t\t\tfor (const state of this._clonedStates) {\n\t\t\t\tif (state == InputCloneMode.FROM_NODE) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._clonedState) {\n\t\t\treturn this._clonedState == InputCloneMode.FROM_NODE;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// private get inputs_clonable_state(): InputCloneMode[] {\n\t// \treturn (this._inputs_clonable_states = this._inputs_clonable_states || this.init_inputs_clonable_state());\n\t// }\n\tcloneRequiredState(index: number): boolean | undefined {\n\t\tconst result = this._cloneRequiredStates[index]; //this._cloneRequiredStatesMap.get(index);\n\t\t// TODO: rework this and test with sop/merge\n\t\t// if (result == null) {\n\t\t// \t// If we do not have a value for index,\n\t\t// \t// we can use the last of the array.\n\t\t// \t// This is useful for sop/merge\n\t\t// \tconsole.log(this._cloneRequiredStates, this._cloneRequiredStates[this._cloneRequiredStates.length - 1]);\n\t\t// \treturn this._cloneRequiredStates[this._cloneRequiredStates.length - 1];\n\t\t// }\n\t\treturn result;\n\t}\n\tcloneRequiredStates(): boolean[] {\n\t\treturn this._cloneRequiredStates;\n\t}\n\t// inputs_clonable_state_with_override(): boolean[] {\n\t// \t// const list = [];\n\t// \t// const states = this.inputs_clonable_state();\n\t// \t// for (let i = 0; i < states.length; i++) {\n\t// \t// \tlist.push(this.input_clonable_state_with_override(i));\n\t// \t// }\n\t// \t// return list;\n\t// \treturn this._inputs_cloned_state;\n\t// }\n\tprivate _getCloneRequiredState(index: number): boolean {\n\t\tconst states = this._clonedStates;\n\t\tif (states) {\n\t\t\tconst state = states[index];\n\t\t\tif (state != null) {\n\t\t\t\treturn this._cloneRequiredFromState(state);\n\t\t\t}\n\t\t}\n\t\tif (this._clonedState) {\n\t\t\treturn this._cloneRequiredFromState(this._clonedState);\n\t\t}\n\t\treturn true;\n\t}\n\tprivate _cloneRequiredFromState(state: InputCloneMode) {\n\t\tswitch (state) {\n\t\t\tcase InputCloneMode.ALWAYS:\n\t\t\t\treturn true;\n\t\t\tcase InputCloneMode.NEVER:\n\t\t\t\treturn false;\n\t\t\tcase InputCloneMode.FROM_NODE:\n\t\t\t\treturn !this._overridden;\n\t\t}\n\t\treturn TypeAssert.unreachable(state);\n\t}\n\n\t// private _default_inputs_clonale_state_values() {\n\t// \tconst list = [];\n\t// \tfor (let i = 0; i < this.inputs_controller.max_inputs_count; i++) {\n\t// \t\tlist.push(InputCloneMode.ALWAYS);\n\t// \t}\n\t// \treturn list;\n\t// }\n\n\toverrideClonedState(state: boolean) {\n\t\tthis._overridden = state;\n\t\tthis.updateCloneRequiredState();\n\t}\n\toverriden() {\n\t\treturn this._overridden;\n\t}\n\tupdateCloneRequiredState() {\n\t\tif (this._clonedStates) {\n\t\t\tconst states: boolean[] = [];\n\t\t\tfor (let i = 0; i < this._clonedStates.length; i++) {\n\t\t\t\tstates[i] = this._getCloneRequiredState(i);\n\t\t\t}\n\t\t\tthis._cloneRequiredStates = states;\n\t\t} else {\n\t\t\tif (this._clonedState) {\n\t\t\t\tconst max_inputs = this.inputsController.maxInputsCount();\n\t\t\t\tconst states: boolean[] = [];\n\t\t\t\tfor (let i = 0; i < max_inputs; i++) {\n\t\t\t\t\tstates[i] = this._getCloneRequiredState(i);\n\t\t\t\t}\n\t\t\t\tthis._cloneRequiredStates = states;\n\t\t\t}\n\t\t}\n\t\t// no need to trigger updates\n\t\t// if the node is not in the hierarchy\n\t\tif (this.node.parent()) {\n\t\t\tthis.node.emit(NodeEvent.OVERRIDE_CLONABLE_STATE_UPDATE);\n\t\t\tthis.node.setDirty();\n\t\t}\n\t\t// update map\n\t\t// this._cloneRequiredStatesMap.clear();\n\t\t// if (this._cloneRequiredStates) {\n\t\t// \tfor (let i = 0; i < this._cloneRequiredStates.length; i++) {\n\t\t// \t\tthis._cloneRequiredStatesMap.set(i, this._cloneRequiredStates[i]);\n\t\t// \t}\n\t\t// }\n\t}\n}\n","import {TypedNodeConnection} from './NodeConnection';\nimport {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\nimport {NodeEvent} from '../../../poly/NodeEvent';\nimport {BaseNodeByContextMap, NodeContext} from '../../../poly/NodeContext';\nimport {ConnectionPointTypeMap} from './connections/ConnectionMap';\nimport {TypedNode} from '../../_Base';\nimport {ContainerMap} from '../../../containers/utils/ContainerMap';\nimport {ClonedStatesController} from './utils/ClonedStatesController';\nimport {InputCloneMode} from '../../../poly/InputCloneMode';\nimport {BaseConnectionPoint} from './connections/_Base';\nimport {CoreType} from '../../../../core/Type';\nimport {arrayShallowClone} from '../../../../core/ArrayUtils';\n\ntype OnUpdateHook = () => void;\ntype OnEvalSingleInputListen = () => Promise<void>;\nconst _existingInputIndices: number[] = [];\nexport interface SetInputsOptions {\n\tnoExceptionOnInvalidInput?: boolean;\n\tignoreLockedState?: boolean;\n}\n\nconst MAX_INPUTS_COUNT_UNSET = 0;\nexport class NodeInputsController<NC extends NodeContext> {\n\tprivate _graphNode: CoreGraphNode | undefined;\n\tprivate _graphNodeInputs: CoreGraphNode[] = [];\n\tprivate _inputs: Array<BaseNodeByContextMap[NC] | null> = [];\n\tprivate _has_named_inputs: boolean = false;\n\tprivate _named_input_connection_points: ConnectionPointTypeMap[NC][] | undefined;\n\tprivate _minInputsCount: number = 0;\n\tprivate _maxInputsCount: number = MAX_INPUTS_COUNT_UNSET;\n\tprivate _maxInputsCountOnInput: number = MAX_INPUTS_COUNT_UNSET;\n\tprivate _depends_on_inputs: boolean = true;\n\n\t// hooks\n\tprivate _on_update_hooks: OnUpdateHook[] | undefined;\n\tprivate _on_update_hook_names: string[] | undefined;\n\n\t// clonable\n\n\tdispose() {\n\t\tif (this._graphNode) {\n\t\t\tthis._graphNode.dispose();\n\t\t}\n\t\tfor (const graph_node of this._graphNodeInputs) {\n\t\t\tif (graph_node) {\n\t\t\t\tgraph_node.dispose();\n\t\t\t}\n\t\t}\n\t\t// hooks\n\t\tthis._on_update_hooks = undefined;\n\t\tthis._on_update_hook_names = undefined;\n\t}\n\n\t// private _user_inputs_clonable_states: InputCloneMode[] | undefined;\n\t// private _inputs_clonable_states: InputCloneMode[] | undefined;\n\t// private _inputs_cloned_state: boolean[] = [];\n\t// private _override_clonable_state: boolean = false;\n\n\tconstructor(public node: TypedNode<NC, any>) {}\n\n\tsetDependsOnInputs(depends_on_inputs: boolean) {\n\t\tthis._depends_on_inputs = depends_on_inputs;\n\t}\n\tprivate setMinCount(minInputsCount: number) {\n\t\tthis._minInputsCount = minInputsCount;\n\t}\n\tminCount() {\n\t\treturn this._minInputsCount;\n\t}\n\n\tprivate setMaxCount(maxInputsCount: number) {\n\t\tif (this._maxInputsCount == MAX_INPUTS_COUNT_UNSET) {\n\t\t\tthis._maxInputsCountOnInput = maxInputsCount;\n\t\t}\n\t\tthis._maxInputsCount = maxInputsCount;\n\t\tthis._initGraphNodeInputs();\n\t\t// we need to update the cloneRequiredState here,\n\t\t// in case the inputsCount changes\n\t\tthis._updateCloneRequiredState();\n\t}\n\tprivate _singleInputIndexListenedTo: number | null = null;\n\tlistenToSingleInputIndex(index: number) {\n\t\tthis._singleInputIndexListenedTo = index;\n\t}\n\tprivate _onEnsureListenToSingleInputIndexUpdatedCallback: OnEvalSingleInputListen | undefined;\n\tonEnsureListenToSingleInputIndexUpdated(callback: OnEvalSingleInputListen) {\n\t\tthis._onEnsureListenToSingleInputIndexUpdatedCallback = callback;\n\t}\n\n\tnamedInputConnectionPointsByName(name: string): ConnectionPointTypeMap[NC] | undefined {\n\t\tif (this._named_input_connection_points) {\n\t\t\tfor (const connection_point of this._named_input_connection_points) {\n\t\t\t\tif (connection_point && connection_point.name() == name) {\n\t\t\t\t\treturn connection_point;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetNamedInputConnectionPoints(newConnectionPoints: ConnectionPointTypeMap[NC][]) {\n\t\tthis._has_named_inputs = true;\n\n\t\tconst connectionPointsToKeep =\n\t\t\tthis._named_input_connection_points?.filter((cp) => cp?.inNodeDefinition()) || [];\n\n\t\t// ensure names are unique\n\t\tconst allNewConnectionPoints: ConnectionPointTypeMap[NC][] = arrayShallowClone(connectionPointsToKeep);\n\t\tconst currentNames: Set<string> = new Set();\n\t\tfor (const connectionPointToKeep of connectionPointsToKeep) {\n\t\t\tif (connectionPointToKeep) {\n\t\t\t\tcurrentNames.add(connectionPointToKeep.name());\n\t\t\t}\n\t\t}\n\t\tfor (const newConnectionPoint of newConnectionPoints) {\n\t\t\tif (newConnectionPoint) {\n\t\t\t\tif (!currentNames.has(newConnectionPoint.name())) {\n\t\t\t\t\tcurrentNames.add(newConnectionPoint.name());\n\t\t\t\t\tallNewConnectionPoints.push(newConnectionPoint);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// disconnect if the number of inputs changes\n\t\tconst connections = this.node.io.connections.inputConnections();\n\t\tif (connections) {\n\t\t\tfor (const connection of connections) {\n\t\t\t\tif (connection) {\n\t\t\t\t\t// assume we only work with indices for now, not with connection point names\n\t\t\t\t\t// so we only need to check again the new max number of connection points.\n\t\t\t\t\tif (connection.inputIndex() >= allNewConnectionPoints.length) {\n\t\t\t\t\t\tconnection.disconnect({setInput: true, ignoreLockedState: true});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update connections\n\t\tthis._named_input_connection_points = allNewConnectionPoints;\n\t\tthis.setMinCount(0);\n\t\tthis.setMaxCount(this._named_input_connection_points.length);\n\t\tthis._initGraphNodeInputs();\n\t\tthis.node.emit(NodeEvent.NAMED_INPUTS_UPDATED);\n\t}\n\t// private _has_connected_inputs() {\n\t// \tfor (let input of this._inputs) {\n\t// \t\tif (input != null) {\n\t// \t\t\treturn true;\n\t// \t\t}\n\t// \t}\n\t// \treturn false;\n\t// }\n\n\t// private _check_name_changed(connection_points: ConnectionPointTypeMap[NC][]) {\n\t// \tif (this._named_input_connection_points) {\n\t// \t\tif (this._named_input_connection_points.length != connection_points.length) {\n\t// \t\t\treturn true;\n\t// \t\t} else {\n\t// \t\t\tfor (let i = 0; i < this._named_input_connection_points.length; i++) {\n\t// \t\t\t\tif (this._named_input_connection_points[i]?.name != connection_points[i]?.name) {\n\t// \t\t\t\t\treturn true;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \treturn false;\n\t// }\n\n\thasNamedInputs() {\n\t\treturn this._has_named_inputs;\n\t}\n\tnamedInputConnectionPoints(): ConnectionPointTypeMap[NC][] | undefined {\n\t\treturn this._named_input_connection_points;\n\t}\n\tprivate _initGraphNodeInputs() {\n\t\tfor (let i = 0; i < this._maxInputsCount; i++) {\n\t\t\tthis._graphNodeInputs[i] = this._graphNodeInputs[i] || this._createGraphNodeInput(i);\n\t\t}\n\t}\n\tprivate _createGraphNodeInput(index: number): CoreGraphNode {\n\t\tconst graphInputNode = new CoreGraphNode(this.node.scene(), `input_${index}`);\n\t\tthis.graphNode().addGraphInput(graphInputNode, false);\n\t\treturn graphInputNode;\n\t}\n\tgraphNode() {\n\t\treturn (this._graphNode = this._graphNode || this._createGraphNode());\n\t}\n\tprivate _createGraphNode() {\n\t\tconst graphNode = new CoreGraphNode(this.node.scene(), 'inputs');\n\t\tthis.node.addGraphInput(graphNode, false);\n\t\treturn graphNode;\n\t}\n\n\tmaxInputsCount(): number {\n\t\treturn this._maxInputsCount || 0;\n\t}\n\tmaxInputsCountOverriden(): boolean {\n\t\treturn this._maxInputsCount != this._maxInputsCountOnInput;\n\t}\n\tinputGraphNode(input_index: number): CoreGraphNode {\n\t\treturn this._graphNodeInputs[input_index];\n\t}\n\n\tsetCount(min: number, max?: number) {\n\t\tif (max == null) {\n\t\t\tmax = min;\n\t\t}\n\t\tthis.setMinCount(min);\n\t\tthis.setMaxCount(max);\n\n\t\t// this._clonable_states_controller.init_inputs_clonable_state();\n\t\tthis._initConnectionControllerInputs();\n\t}\n\tprivate _initConnectionControllerInputs() {\n\t\tthis.node.io.connections.initInputs();\n\t}\n\n\tisGraphNodeDirty() {\n\t\t// Update:\n\t\t// we cannot simply check if this._graphNode is dirty,\n\t\t// as with the following case:\n\t\t// a merge node has 2 nodes as input\n\t\t// both those nodes are set to dirty (without using the scene batching)\n\t\t// then\n\t\t// - the merge node with be set dirty a first time as the first input is made dirty.\n\t\t// - the merge node starts cooking\n\t\t// - the merge node is made dirty a second time\n\t\t// - the merge node completes its first cook, having only processed the new content of the first input\n\t\t// - when the merge node completes, it realises it needs to cook a second time, since it was made dirty after starting the cook\n\t\t// - but when it attempts to get the content of the second node, the .isAnyInputDirty returns false when it should return true\n\t\t// because this._graphNode is not dirty anymore\n\t\t// OR...\n\t\t// we can instead make sure that this._graphNode is only made un-dirty if all inputs are clean too.\n\n\t\treturn this._graphNode?.isDirty() || false;\n\t}\n\tprivate _isAnyInputDirty() {\n\t\t// let anyDirty=false\n\t\t// const inputNodes = this.inputs()\n\t\tfor (const input of this._inputs) {\n\t\t\tif (input && input.isDirty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t\t// if (this._maxInputsCount > 0) {\n\t\t// \tfor (let i = 0; i < this._inputs.length; i++) {\n\t\t// \t\tif (this._inputs[i]?.isDirty()) {\n\t\t// \t\t\treturn true;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// } else {\n\t\t// \treturn false;\n\t\t// }\n\t}\n\tcontainersWithoutEvaluation(target: Array<ContainerMap[NC] | null>) {\n\t\ttarget.length = 0;\n\t\tfor (let i = 0; i < this._inputs.length; i++) {\n\t\t\tconst inputNode = this._inputs[i];\n\t\t\tlet container: ContainerMap[NC] | null = null;\n\t\t\tif (inputNode) {\n\t\t\t\t// container = (await inputNode.compute()) as ContainerMap[NC];\n\t\t\t\t// we do not need a promise using await here,\n\t\t\t\t// as we know that the input node is not dirty\n\t\t\t\t// therefore we can simply request the container\n\t\t\t\t// and only check if it is bypassed or not\n\t\t\t\tcontainer = inputNode.containerController.containerUnlessBypassed() as ContainerMap[NC] | null;\n\t\t\t}\n\t\t\ttarget.push(container);\n\t\t}\n\t\treturn target;\n\t}\n\n\tprivate _existingInputIndices(target: number[]) {\n\t\ttarget.length = 0;\n\t\tif (this._maxInputsCount > 0) {\n\t\t\tfor (let i = 0; i < this._inputs.length; i++) {\n\t\t\t\tif (this._inputs[i]) {\n\t\t\t\t\ttarget.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n\n\tasync evalRequiredInputs(\n\t\ttarget: Array<ContainerMap[NC] | null | undefined>\n\t): Promise<Array<ContainerMap[NC] | null | undefined>> {\n\t\ttarget.length = 0;\n\t\t// let containers: Array<ContainerMap[NC] | null | undefined> = [];\n\t\tif (this.node.disposed() == true) {\n\t\t\treturn target;\n\t\t}\n\t\tif (this._maxInputsCount > 0) {\n\t\t\tthis._existingInputIndices(_existingInputIndices);\n\t\t\tif (_existingInputIndices.length < this._minInputsCount) {\n\t\t\t\tthis.node.states.error.set('inputs are missing');\n\t\t\t} else {\n\t\t\t\tif (_existingInputIndices.length > 0) {\n\t\t\t\t\tif (this._onEnsureListenToSingleInputIndexUpdatedCallback) {\n\t\t\t\t\t\tawait this._onEnsureListenToSingleInputIndexUpdatedCallback();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._maxInputsCount == 1) {\n\t\t\t\t\t\tconst container = await this.evalRequiredInput(0);\n\t\t\t\t\t\ttarget.push(container as ContainerMap[NC]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst promises: Promise<ContainerMap[NC] | null>[] = [];\n\t\t\t\t\t\tif (this._singleInputIndexListenedTo != null) {\n\t\t\t\t\t\t\tpromises.push(\n\t\t\t\t\t\t\t\tthis.evalRequiredInput(this._singleInputIndexListenedTo) as Promise<ContainerMap[NC]>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst lastExistingInputIndex = _existingInputIndices[_existingInputIndices.length - 1];\n\t\t\t\t\t\t\t// let input: BaseNodeByContextMap[NC] | null;\n\t\t\t\t\t\t\tfor (let i = 0; i < this._inputs.length; i++) {\n\t\t\t\t\t\t\t\tconst input = this._inputs[i];\n\t\t\t\t\t\t\t\tif (input) {\n\t\t\t\t\t\t\t\t\t// I tried here to only use a promise for dirty inputs,\n\t\t\t\t\t\t\t\t\t// but that messes up with the order\n\t\t\t\t\t\t\t\t\t// if (input.isDirty()) {\n\t\t\t\t\t\t\t\t\t// \tcontainers.push(input.containerController.container as ContainerMap[NC]);\n\t\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t\tpromises.push(this.evalRequiredInput(i) as Promise<ContainerMap[NC]>);\n\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// we need to add an empty container,\n\t\t\t\t\t\t\t\t\t// for non connected inputs.\n\t\t\t\t\t\t\t\t\t// otherwise, if input 0 is not connected,\n\t\t\t\t\t\t\t\t\t// and input 1 is, then we get only 1 container\n\t\t\t\t\t\t\t\t\t// which appears to be from input 0\n\t\t\t\t\t\t\t\t\tif (i <= lastExistingInputIndex) {\n\t\t\t\t\t\t\t\t\t\tpromises.push(undefined as any);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst results = await Promise.all(promises);\n\t\t\t\t\t\tfor (const result of results) {\n\t\t\t\t\t\t\ttarget.push(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this._isAnyInputDirty()) {\n\t\t\t\t\t\tthis._graphNode?.removeDirtyState();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n\n\tasync evalRequiredInput(inputIndex: number) {\n\t\tlet container: ContainerMap[NC] | undefined = undefined;\n\t\tconst inputNode = this.input(inputIndex);\n\t\t// if (input_node && !input_node.isDirty()) {\n\t\t// \tcontainer = input_node.containerController.container as ContainerMap[NC] | null;\n\t\t// } else {\n\t\t// \tcontainer = await this.node.containerController.requestInputContainer(input_index);\n\t\t// \tthis._graph_node_inputs[input_index].removeDirtyState();\n\t\t// }\n\t\tif (inputNode) {\n\t\t\tcontainer = (await inputNode.compute()) as ContainerMap[NC];\n\t\t\tthis._graphNodeInputs[inputIndex].removeDirtyState();\n\t\t}\n\n\t\t// we do not clone here, as we just check if a group is present\n\t\tif (container && container.coreContent()) {\n\t\t\t// return container;\n\t\t} else {\n\t\t\t// const input_node = this.input(input_index);\n\t\t\tif (inputNode) {\n\t\t\t\tconst inputErrorMessage = inputNode.states.error.message();\n\t\t\t\tif (inputErrorMessage && this.node.disposed() == false) {\n\t\t\t\t\tthis.node.states.error.set(`input ${inputIndex} is invalid (error: ${inputErrorMessage})`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn container;\n\t}\n\n\tgetNamedInputIndex(name: string): number {\n\t\tif (this._named_input_connection_points) {\n\t\t\tfor (let i = 0; i < this._named_input_connection_points.length; i++) {\n\t\t\t\tif (this._named_input_connection_points[i]?.name() == name) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tgetInputIndex(input_index_or_name: number | string): number {\n\t\tif (CoreType.isString(input_index_or_name)) {\n\t\t\tif (this.hasNamedInputs()) {\n\t\t\t\treturn this.getNamedInputIndex(input_index_or_name);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`node ${this.node.path()} has no named inputs`);\n\t\t\t}\n\t\t} else {\n\t\t\treturn input_index_or_name;\n\t\t}\n\t}\n\n\tsetInput(\n\t\tinputIndexOrName: number | string,\n\t\tnode: BaseNodeByContextMap[NC] | null,\n\t\toutputIndexOrName?: number | string,\n\t\toptions?: Readonly<SetInputsOptions>\n\t) {\n\t\tconst ignoreLockedState = options?.ignoreLockedState || false;\n\t\tif (ignoreLockedState == false && this.node.insideALockedParent()) {\n\t\t\tconst lockedParent = this.node.lockedParent();\n\t\t\tconsole.warn(\n\t\t\t\t`node '${this.node.path()}' cannot have its inputs changed, since it is inside '${\n\t\t\t\t\tlockedParent ? lockedParent.path() : ''\n\t\t\t\t}', which is locked`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (outputIndexOrName == null) {\n\t\t\toutputIndexOrName = 0;\n\t\t}\n\t\tconst noExceptionOnInvalidInput = options?.noExceptionOnInvalidInput || false;\n\t\tconst inputIndex = this.getInputIndex(inputIndexOrName) || 0;\n\t\tif (inputIndex < 0) {\n\t\t\tconst message = `invalid input (${inputIndexOrName}) for node ${this.node.path()}`;\n\t\t\tif (!noExceptionOnInvalidInput) {\n\t\t\t\tconsole.warn(message);\n\t\t\t\tthrow new Error(message);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet outputIndex = 0;\n\t\tif (node) {\n\t\t\tif (node.io.outputs.hasNamedOutputs()) {\n\t\t\t\toutputIndex = node.io.outputs.getOutputIndex(outputIndexOrName);\n\t\t\t\tif (outputIndex == null || outputIndex < 0) {\n\t\t\t\t\tconst connection_points = node.io.outputs.namedOutputConnectionPoints() as\n\t\t\t\t\t\t| BaseConnectionPoint[]\n\t\t\t\t\t\t| undefined;\n\t\t\t\t\tconst names: string[] = connection_points ? connection_points.map((cp) => cp.name()) : [];\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`node ${node.path()} does not have an output named ${outputIndexOrName}. inputs are: ${names.join(\n\t\t\t\t\t\t\t', '\n\t\t\t\t\t\t)}`\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// check that parents exists and are the same\n\n\t\t\tconst nodeParent = node.parent();\n\t\t\tconst currentNodeParent = this.node.parent();\n\t\t\tif (!(nodeParent && currentNodeParent && nodeParent.graphNodeId() == currentNodeParent.graphNodeId())) {\n\t\t\t\tconsole.warn(`node ${node.path()} does not have the same parent as ${this.node.path()}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst graphInputNode = this._graphNodeInputs[inputIndex];\n\t\tif (graphInputNode == null) {\n\t\t\tconst message = `no input at index ${inputIndex} (name: ${inputIndexOrName}) for node '${this.node.name()}' at path '${this.node.path()}'`;\n\t\t\tconsole.warn(message);\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\tif (node && this.node.parent() != node.parent()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldInputNode = this._inputs[inputIndex];\n\t\tlet oldOutputIndex: number | null = null;\n\t\tlet oldConnection: TypedNodeConnection<NC> | undefined = undefined;\n\t\tif (this.node.io.connections) {\n\t\t\toldConnection = this.node.io.connections.inputConnection(inputIndex);\n\t\t}\n\t\tif (oldConnection) {\n\t\t\toldOutputIndex = oldConnection.outputIndex();\n\t\t}\n\n\t\tif (node !== oldInputNode || outputIndex != oldOutputIndex) {\n\t\t\t// TODO: test: add test to make sure this is necessary\n\t\t\tif (oldInputNode != null) {\n\t\t\t\tif (this._depends_on_inputs) {\n\t\t\t\t\tgraphInputNode.removeGraphInput(oldInputNode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (node != null) {\n\t\t\t\tconst connectionResult = graphInputNode.addGraphInput(node);\n\t\t\t\tif (connectionResult) {\n\t\t\t\t\t// we do test if we can create the graph connection\n\t\t\t\t\t// to ensure we are not in a cyclical graph,\n\t\t\t\t\t// but we delete it right after\n\t\t\t\t\tif (!this._depends_on_inputs) {\n\t\t\t\t\t\tgraphInputNode.removeGraphInput(node);\n\t\t\t\t\t}\n\n\t\t\t\t\t// this._input_connections[input_index] = new NodeConnection(node, this.self, outputIndex, input_index);\n\t\t\t\t\tif (oldConnection) {\n\t\t\t\t\t\toldConnection.disconnect({setInput: false});\n\t\t\t\t\t}\n\t\t\t\t\tthis._inputs[inputIndex] = node;\n\t\t\t\t\tnew TypedNodeConnection<NC>(\n\t\t\t\t\t\t(<unknown>node) as TypedNode<NC, any>,\n\t\t\t\t\t\tthis.node,\n\t\t\t\t\t\toutputIndex,\n\t\t\t\t\t\tinputIndex\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(`cannot connect ${node.path()} to ${this.node.path()}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._inputs[inputIndex] = null;\n\t\t\t\tif (oldConnection) {\n\t\t\t\t\toldConnection.disconnect({setInput: false});\n\t\t\t\t}\n\t\t\t\t// this._input_connections[input_index] = null;\n\t\t\t}\n\n\t\t\tthis._run_on_set_input_hooks();\n\t\t\tgraphInputNode.setSuccessorsDirty();\n\t\t\t// this.node.set_dirty(node);\n\t\t\tthis.node.emit(NodeEvent.INPUTS_UPDATED);\n\t\t}\n\t}\n\n\t// remove_input(node: BaseNodeByContextMap[NC]) {\n\t// \tconst inputs = this.inputs();\n\t// \tlet input: BaseNodeByContextMap[NC] | null;\n\t// \tfor (let i = 0; i < inputs.length; i++) {\n\t// \t\tinput = inputs[i];\n\t// \t\tif (input != null && node != null) {\n\t// \t\t\tif (input.graphNodeId() === node.graphNodeId()) {\n\t// \t\t\t\tthis.setInput(i, null);\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tinput(input_index: number): BaseNodeByContextMap[NC] | null {\n\t\treturn this._inputs[input_index];\n\t}\n\tnamed_input(input_name: string): BaseNodeByContextMap[NC] | null {\n\t\tif (this.hasNamedInputs()) {\n\t\t\tconst input_index = this.getInputIndex(input_name);\n\t\t\treturn this._inputs[input_index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tnamed_input_connection_point(input_name: string): ConnectionPointTypeMap[NC] | undefined {\n\t\tif (this.hasNamedInputs() && this._named_input_connection_points) {\n\t\t\tconst input_index = this.getInputIndex(input_name);\n\t\t\treturn this._named_input_connection_points[input_index];\n\t\t}\n\t}\n\thas_named_input(name: string): boolean {\n\t\treturn this.getNamedInputIndex(name) >= 0;\n\t}\n\thasInput(input_index: number): boolean {\n\t\treturn this._inputs[input_index] != null;\n\t}\n\tinputs() {\n\t\treturn this._inputs;\n\t}\n\n\t//\n\t//\n\t// CLONABLE STATES\n\t//\n\t//\n\tprivate _clonedStatesController: ClonedStatesController<NC> | undefined;\n\tinitInputsClonedState(states: InputCloneMode | InputCloneMode[]) {\n\t\tif (!this._clonedStatesController) {\n\t\t\tthis._clonedStatesController = new ClonedStatesController(this);\n\t\t\tthis._clonedStatesController.initInputsClonedState(states);\n\t\t}\n\t}\n\toverrideClonedStateAllowed(): boolean {\n\t\treturn this._clonedStatesController?.overrideClonedStateAllowed() || false;\n\t}\n\toverrideClonedState(state: boolean) {\n\t\tthis._clonedStatesController?.overrideClonedState(state);\n\t}\n\tclonedStateOverriden() {\n\t\treturn this._clonedStatesController?.overriden() || false;\n\t}\n\tcloneRequired(index: number) {\n\t\tconst state = this._clonedStatesController?.cloneRequiredState(index);\n\t\tif (state != null) {\n\t\t\treturn state;\n\t\t}\n\t\treturn true;\n\t}\n\tcloneRequiredStates(): boolean | boolean[] {\n\t\tconst states = this._clonedStatesController?.cloneRequiredStates();\n\t\tif (states != null) {\n\t\t\treturn states;\n\t\t}\n\t\treturn true;\n\t}\n\tprivate _updateCloneRequiredState() {\n\t\tthis._clonedStatesController?.updateCloneRequiredState();\n\t}\n\n\t//\n\t//\n\t// HOOKS\n\t//\n\t//\n\tadd_on_set_input_hook(name: string, hook: OnUpdateHook) {\n\t\tthis._on_update_hooks = this._on_update_hooks || [];\n\t\tthis._on_update_hook_names = this._on_update_hook_names || [];\n\n\t\tif (!this._on_update_hook_names.includes(name)) {\n\t\t\tthis._on_update_hooks.push(hook);\n\t\t\tthis._on_update_hook_names.push(name);\n\t\t} else {\n\t\t\tconsole.warn(`hook with name ${name} already exists`, this.node);\n\t\t}\n\t}\n\tprivate _run_on_set_input_hooks() {\n\t\tif (this._on_update_hooks) {\n\t\t\tfor (const hook of this._on_update_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {NodeEvent} from '../../../poly/NodeEvent';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {ConnectionPointTypeMap} from './connections/ConnectionMap';\nimport {TypedNode} from '../../_Base';\nimport {CoreType} from '../../../../core/Type';\nimport {arrayUniq} from '../../../../core/ArrayUtils';\nimport {TypedNodeConnection} from './NodeConnection';\n\nconst _uniqOutputIndices:number[]=[]\nconst _usedOutputIndices: number[] = [];\n\nexport class OutputsController<NC extends NodeContext> {\n\tprivate _has_outputs: boolean = false;\n\tprivate _named_output_connection_points: ConnectionPointTypeMap[NC][] | undefined;\n\tprivate _has_named_outputs: boolean = false;\n\tprivate _connections: TypedNodeConnection<NC>[] = [];\n\n\tconstructor(private node: TypedNode<NC, any>) {\n\t\tthis.node.scene().timeController.onPlayingStateChange(this._onPlayingStateChangeBound);\n\t}\n\n\tprivate _onPlayingStateChangeBound = this._onPlayingStateChange.bind(this);\n\tprivate _onPlayingStateChange() {\n\t\tthis._clearCache();\n\t}\n\tprivate _outputIndexCache: Map<number | string, number> = new Map();\n\tprivate _clearCache() {\n\t\tthis._outputIndexCache.clear();\n\t}\n\n\tdispose() {\n\t\tthis.node.scene().timeController.removeOnPlayingStateChange(this._onPlayingStateChangeBound);\n\t\tif (this._named_output_connection_points) {\n\t\t\tthis._named_output_connection_points.splice(0, this._named_output_connection_points.length);\n\t\t}\n\t}\n\n\tsetHasOneOutput() {\n\t\tthis._has_outputs = true;\n\t}\n\tsetHasNoOutput() {\n\t\tthis._has_outputs = false;\n\t}\n\n\thasOutputs() {\n\t\treturn this._has_outputs;\n\t}\n\thasNamedOutputs() {\n\t\treturn this._has_named_outputs;\n\t}\n\thasNamedOutput(name: string): boolean {\n\t\treturn this.getNamedOutputIndex(name) >= 0;\n\t}\n\tnamedOutputConnectionPoints(): Readonly<ConnectionPointTypeMap[NC][]> | undefined {\n\t\treturn this._named_output_connection_points;\n\t}\n\tnamedOutputConnection(index: number): Readonly<ConnectionPointTypeMap[NC]> | undefined {\n\t\tif (this._named_output_connection_points) {\n\t\t\treturn this._named_output_connection_points[index];\n\t\t}\n\t}\n\n\tgetNamedOutputIndex(name: string): number {\n\t\tif (this._named_output_connection_points) {\n\t\t\tlet i = 0;\n\t\t\tfor (const connectionPoint of this._named_output_connection_points) {\n\t\t\t\tif (connectionPoint && connectionPoint.name() == name) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tgetOutputIndex(output_index_or_name: number | string): number {\n\t\tlet currentCache = this._outputIndexCache.get(output_index_or_name);\n\t\tif (currentCache == null) {\n\t\t\tcurrentCache = this._getOutputIndex(output_index_or_name);\n\t\t\tthis._outputIndexCache.set(output_index_or_name, currentCache);\n\t\t}\n\t\treturn currentCache;\n\t}\n\tprivate _getOutputIndex(output_index_or_name: number | string): number {\n\t\tif (output_index_or_name != null) {\n\t\t\tif (CoreType.isString(output_index_or_name)) {\n\t\t\t\tif (this.hasNamedOutputs()) {\n\t\t\t\t\treturn this.getNamedOutputIndex(output_index_or_name);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(`node ${this.node.path()} has no named outputs`);\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn output_index_or_name;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tnamedOutputConnectionPointsByName(name: string): ConnectionPointTypeMap[NC] | undefined {\n\t\tif (this._named_output_connection_points) {\n\t\t\tfor (const connection_point of this._named_output_connection_points) {\n\t\t\t\tif (connection_point?.name() == name) {\n\t\t\t\t\treturn connection_point;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetNamedOutputConnectionPoints(connection_points: ConnectionPointTypeMap[NC][], set_dirty: boolean = true) {\n\t\tthis._has_named_outputs = true;\n\n\t\tthis.node.io.connections.outputConnections(this._connections);\n\t\tfor (const connection of this._connections) {\n\t\t\tif (connection) {\n\t\t\t\t// assume we only work with indices for now, not with connection point names\n\t\t\t\t// so we only need to check again the new max number of connection points.\n\t\t\t\tif (connection.outputIndex() >= connection_points.length) {\n\t\t\t\t\tconnection.disconnect({setInput: true});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update connections\n\t\tthis._named_output_connection_points = connection_points;\n\t\tif (set_dirty && this.node.scene()) {\n\t\t\t// why do I need this set dirty here?\n\t\t\t// I currently have to have a flag to optionally prevent this,\n\t\t\t// for instance from gl nodes which have their outputs updated in a post dirty hook\n\t\t\tthis.node.setDirty(this.node);\n\t\t}\n\t\tthis.node.emit(NodeEvent.NAMED_OUTPUTS_UPDATED);\n\t}\n\tused_output_names(): string[] {\n\t\t// target.length = 0;\n\t\tconst target: string[] = [];\n\t\tconst connectionsController = this.node.io.connections;\n\t\tif (connectionsController) {\n\t\t\tconnectionsController.outputConnections(this._connections);\n\t\t\t\n\t\t\t arrayUniq(\n\t\t\t\tthis._connections.map((connection) => (connection ? connection.outputIndex() : null))\n\t\t\t,_uniqOutputIndices);\n\t\t\t// outputIndices = arrayUniq(output_indices);\n\t\t\t// const used_output_indices: number[] = [];\n\t\t\t_usedOutputIndices.length = 0;\n\t\t\tfor(const index of _uniqOutputIndices){\n\t\t\t\tif (CoreType.isNumber(index)) {\n\t\t\t\t\t_usedOutputIndices.push(index);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// const used_output_names: string[] = [];\n\t\t\tconst connectionPoints = this.namedOutputConnectionPoints();\n\t\t\tif (connectionPoints) {\n\t\t\t\tfor (const index of _usedOutputIndices) {\n\t\t\t\t\tconst name = connectionPoints[index]?.name();\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\ttarget.push(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n}\n","import {TypedNodeConnection} from './NodeConnection';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {TypedNode} from '../../_Base';\n\nexport class ConnectionsController<NC extends NodeContext> {\n\tprivate _inputConnections: Array<TypedNodeConnection<NC> | undefined> | undefined;\n\tprivate _outputConnections: Map<number, Map<number, TypedNodeConnection<NC>>> = new Map();\n\n\tconstructor(protected _node: TypedNode<NC, any>) {}\n\n\tinitInputs() {\n\t\tconst count = this._node.io.inputs.maxInputsCount();\n\t\tthis._inputConnections = this._inputConnections || new Array(count);\n\t\t// adjust the array if this method is called more than once\n\t\t// which can be the case for nodes that have adjustable input counts\n\t\t// such as sop/merge\n\t\twhile (this._inputConnections.length < count) {\n\t\t\tthis._inputConnections.push(undefined);\n\t\t}\n\t}\n\tdispose() {\n\t\tif (this._inputConnections) {\n\t\t\tthis._inputConnections.splice(0, this._inputConnections.length);\n\t\t}\n\t\tif (this._outputConnections) {\n\t\t\tthis._outputConnections.clear();\n\t\t}\n\t}\n\n\t//\n\t//\n\t// INPUT CONNECTIONS\n\t//\n\t//\n\taddInputConnection(connection: TypedNodeConnection<NC>) {\n\t\tif (this._inputConnections) {\n\t\t\t// if (connection.input_index < this._input_connections.length) {\n\t\t\tthis._inputConnections[connection.inputIndex()] = connection;\n\t\t\t// } else {\n\t\t\t// \tconsole.warn(`attempt to add an input connection at index ${connection.input_index}`);\n\t\t\t// }\n\t\t} else {\n\t\t\tconsole.warn(`input connections array not initialized`);\n\t\t}\n\t}\n\tremoveInputConnection(connection: TypedNodeConnection<NC>) {\n\t\tif (this._inputConnections) {\n\t\t\tif (connection.inputIndex() < this._inputConnections.length) {\n\t\t\t\tthis._inputConnections[connection.inputIndex()] = undefined;\n\t\t\t\t// if all connections after are also undefined, we can safely shrink the array\n\t\t\t\tlet all_connections_after_are_undefined = true;\n\t\t\t\tfor (let i = connection.inputIndex(); i < this._inputConnections.length; i++) {\n\t\t\t\t\tif (this._inputConnections[i]) {\n\t\t\t\t\t\tall_connections_after_are_undefined = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (all_connections_after_are_undefined) {\n\t\t\t\t\tthis._inputConnections = this._inputConnections.slice(0, connection.inputIndex());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn(`attempt to remove an input connection at index ${connection.inputIndex()}`);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(`input connections array not initialized`);\n\t\t}\n\t}\n\tinputConnection(index: number): TypedNodeConnection<NC> | undefined {\n\t\tif (this._inputConnections) {\n\t\t\treturn this._inputConnections[index];\n\t\t}\n\t}\n\tfirstInputConnection(): TypedNodeConnection<NC> | null {\n\t\tif (this._inputConnections) {\n\t\t\tfor (const connection of this._inputConnections) {\n\t\t\t\tif (connection) {\n\t\t\t\t\treturn connection;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tinputConnections() {\n\t\treturn this._inputConnections;\n\t}\n\texistingInputConnections() {\n\t\tconst current_connections = this._inputConnections;\n\t\tif (current_connections) {\n\t\t\t// remove the last one if it is undefined\n\t\t\twhile (\n\t\t\t\tcurrent_connections.length > 1 &&\n\t\t\t\tcurrent_connections[current_connections.length - 1] === undefined\n\t\t\t) {\n\t\t\t\tcurrent_connections.pop();\n\t\t\t}\n\t\t}\n\t\treturn current_connections;\n\t}\n\n\t//\n\t//\n\t// OUTPUT CONNECTIONS\n\t//\n\t//\n\taddOutputConnection(connection: TypedNodeConnection<NC>) {\n\t\tconst output_index = connection.outputIndex();\n\t\tconst id = connection.id();\n\t\tlet connections_by_id = this._outputConnections.get(output_index);\n\t\tif (!connections_by_id) {\n\t\t\tconnections_by_id = new Map<number, TypedNodeConnection<NC>>();\n\t\t\tthis._outputConnections.set(output_index, connections_by_id);\n\t\t}\n\t\tconnections_by_id.set(id, connection);\n\t\t// this._output_connections[output_index] = this._output_connections[output_index] || {};\n\t\t// this._output_connections[output_index][id] = connection;\n\t}\n\tremoveOutputConnection(connection: TypedNodeConnection<NC>) {\n\t\tconst output_index = connection.outputIndex();\n\t\tconst id = connection.id();\n\t\tlet connections_by_id = this._outputConnections.get(output_index);\n\t\tif (connections_by_id) {\n\t\t\tconnections_by_id.delete(id);\n\t\t}\n\t\t// delete this._output_connections[output_index][id];\n\t}\n\toutputConnectionsByOutputIndex(outputIndex: number) {\n\t\treturn this._outputConnections.get(outputIndex);\n\t}\n\n\toutputConnections(target: TypedNodeConnection<NC>[]) {\n\t\ttarget.length = 0;\n\t\tthis._outputConnections.forEach((connections_by_id, output_index) => {\n\t\t\tconnections_by_id.forEach((connection, id) => {\n\t\t\t\tif (connection) {\n\t\t\t\t\ttarget.push(connection);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t// Object.keys(this._output_connections).forEach((index) => {\n\t\t// \tconst connections_for_index = this._output_connections[index];\n\t\t// \tObject.keys(connections_for_index).forEach((id) => {\n\t\t// \t\tlist.push(connections_for_index[id]);\n\t\t// \t});\n\t\t// });\n\t\treturn target;\n\t}\n}\n","import {NodeContext} from '../../../poly/NodeContext';\nimport {TypedNode} from '../../_Base';\nimport {BaseConnectionPointData} from './connections/_Base';\n\nexport class SavedConnectionPointsDataController<NC extends NodeContext> {\n\tprivate _in: BaseConnectionPointData[] | undefined;\n\tprivate _out: BaseConnectionPointData[] | undefined;\n\n\tconstructor(protected _node: TypedNode<NC, any>) {}\n\n\tset_in(data: BaseConnectionPointData[]) {\n\t\tthis._in = data;\n\t}\n\tset_out(data: BaseConnectionPointData[]) {\n\t\tthis._out = data;\n\t}\n\tclear() {\n\t\tthis._in = undefined;\n\t\tthis._out = undefined;\n\t}\n\tin() {\n\t\treturn this._in;\n\t}\n\tout() {\n\t\treturn this._out;\n\t}\n}\n","import {NodeContext, NodeContextUnion} from '../../../../poly/NodeContext';\nimport {\n\tBaseGlConnectionPoint,\n\tGlConnectionPointType,\n\tGlConnectionPoint,\n\tGLParamTypeToConnectionPointTypeMap,\n} from './Gl';\nimport {\n\tBaseJsConnectionPoint,\n\tJsConnectionPointType,\n\tJsConnectionPoint,\n\tJsParamTypeToConnectionPointTypeMap,\n} from './Js';\nimport {BaseEventConnectionPoint, EventConnectionPoint, EventConnectionPointType} from './Event';\n\ntype ConnectionPointTypeMapGeneric = {\n\t[key in NodeContext]: BaseEventConnectionPoint | BaseGlConnectionPoint | BaseJsConnectionPoint | undefined;\n};\n\nexport interface ConnectionPointTypeMap extends ConnectionPointTypeMapGeneric {\n\t[NodeContext.ANIM]: undefined;\n\t[NodeContext.AUDIO]: undefined;\n\t// [NodeContext.CAD]: undefined;\n\t[NodeContext.COP]: undefined;\n\t// [NodeContext.CSG]: undefined;\n\t[NodeContext.EVENT]: BaseEventConnectionPoint;\n\t[NodeContext.GL]: BaseGlConnectionPoint;\n\t[NodeContext.JS]: BaseJsConnectionPoint;\n\t[NodeContext.MANAGER]: undefined;\n\t[NodeContext.MAT]: undefined;\n\t[NodeContext.OBJ]: undefined;\n\t[NodeContext.POST]: undefined;\n\t[NodeContext.ROP]: undefined;\n\t[NodeContext.SOP]: undefined;\n}\ntype ConnectionPointEnumMapGeneric = {\n\t[key in NodeContext]: EventConnectionPointType | GlConnectionPointType | JsConnectionPointType | undefined;\n};\n\nexport interface ConnectionPointEnumMap extends ConnectionPointEnumMapGeneric {\n\t[NodeContext.ANIM]: undefined;\n\t[NodeContext.AUDIO]: undefined;\n\t// [NodeContext.CAD]: undefined;\n\t[NodeContext.COP]: undefined;\n\t// [NodeContext.CSG]: undefined;\n\t[NodeContext.EVENT]: EventConnectionPointType;\n\t[NodeContext.GL]: GlConnectionPointType;\n\t[NodeContext.JS]: JsConnectionPointType;\n\t[NodeContext.MANAGER]: undefined;\n\t[NodeContext.MAT]: undefined;\n\t[NodeContext.OBJ]: undefined;\n\t[NodeContext.POST]: undefined;\n\t[NodeContext.ROP]: undefined;\n\t[NodeContext.SOP]: undefined;\n}\n\ntype IConnectionPointEnumMap = {[key in NodeContextUnion]: ConnectionPointEnumMap[key]};\n\nexport const DEFAULT_CONNECTION_POINT_ENUM_MAP: IConnectionPointEnumMap = {\n\t[NodeContext.ANIM]: undefined,\n\t[NodeContext.AUDIO]: undefined,\n\t// [NodeContext.CAD]: undefined,\n\t[NodeContext.COP]: undefined,\n\t// [NodeContext.CSG]: undefined,\n\t[NodeContext.EVENT]: EventConnectionPointType.BASE,\n\t[NodeContext.GL]: GlConnectionPointType.FLOAT,\n\t[NodeContext.JS]: JsConnectionPointType.FLOAT,\n\t[NodeContext.MANAGER]: undefined,\n\t[NodeContext.MAT]: undefined,\n\t[NodeContext.OBJ]: undefined,\n\t[NodeContext.POST]: undefined,\n\t[NodeContext.ROP]: undefined,\n\t[NodeContext.SOP]: undefined,\n};\n\nexport function createConnectionPoint<NC extends NodeContext>(\n\tcontext: NC,\n\tname: string,\n\ttype: ConnectionPointEnumMap[NC]\n) {\n\tswitch (context) {\n\t\tcase NodeContext.EVENT: {\n\t\t\treturn new EventConnectionPoint(name, type as EventConnectionPointType);\n\t\t}\n\t\tcase NodeContext.GL: {\n\t\t\treturn new GlConnectionPoint(name, type as GlConnectionPointType);\n\t\t}\n\t\tcase NodeContext.JS: {\n\t\t\treturn new JsConnectionPoint(name, type as JsConnectionPointType);\n\t\t}\n\t\tdefault: {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nexport function paramTypeToConnectionPointTypeMap<NC extends NodeContext>(context: NC) {\n\tswitch (context) {\n\t\tcase NodeContext.EVENT: {\n\t\t\treturn undefined;\n\t\t}\n\t\tcase NodeContext.GL: {\n\t\t\treturn GLParamTypeToConnectionPointTypeMap;\n\t\t}\n\t\tcase NodeContext.JS: {\n\t\t\treturn JsParamTypeToConnectionPointTypeMap;\n\t\t}\n\t\tdefault: {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n","import {Number2} from '../../../../types/GlobalTypes';\nimport {\n\tConnectionPointTypeMap,\n\tConnectionPointEnumMap,\n\tparamTypeToConnectionPointTypeMap,\n\tcreateConnectionPoint,\n} from './connections/ConnectionMap';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamsUpdateOptions} from '../params/ParamsController';\nimport {ParamInitValueSerialized} from '../../../params/types/ParamInitValueSerialized';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {TypedNode} from '../../_Base';\nimport {CoreType} from '../../../../core/Type';\nimport {objectClone} from '../../../../core/ObjectUtils';\n\n/*\nGlNodeSpareParamsController creates spare params from inputs on gl nodes\n*/\nexport class ConnectionPointsSpareParamsController<NC extends NodeContext> {\n\t// private _allow_inputs_created_from_params: boolean = true;\n\tprivate _inputlessParamNames: string[] | undefined;\n\tprivate _raw_input_serialized_by_param_name: Map<string, ParamInitValueSerialized> = new Map();\n\tprivate _default_value_serialized_by_param_name: Map<string, ParamInitValueSerialized> = new Map();\n\tconstructor(private node: TypedNode<NC, any>, private _context: NC) {}\n\n\t// disallow_inputs_created_from_params() {\n\t// \tthis._allow_inputs_created_from_params = false;\n\t// }\n\n\tprivate _initialized = false;\n\tinitializeNode() {\n\t\tif (this._initialized) {\n\t\t\tconsole.warn('already initialized', this.node);\n\t\t\treturn;\n\t\t}\n\t\tthis._initialized = true;\n\t\tthis.node.params.onParamsCreated('createInputsFromParams', this._createInputsFromParams.bind(this));\n\t}\n\tinitialized() {\n\t\treturn this._initialized;\n\t}\n\n\tprivate _createInputsFromParams() {\n\t\t// if (!this._allow_inputs_created_from_params) {\n\t\t// \treturn;\n\t\t// }\n\t\tconst connectionTypeMap = paramTypeToConnectionPointTypeMap(this._context);\n\t\tif (!connectionTypeMap) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst connectionPoints: ConnectionPointTypeMap[NC][] = [];\n\t\tfor (const paramName of this.node.params.names) {\n\t\t\tlet addInput = true;\n\t\t\tif (\n\t\t\t\tthis._inputlessParamNames &&\n\t\t\t\tthis._inputlessParamNames.length > 0 &&\n\t\t\t\tthis._inputlessParamNames.includes(paramName)\n\t\t\t) {\n\t\t\t\taddInput = false;\n\t\t\t}\n\t\t\tif (addInput) {\n\t\t\t\tif (this.node.params.has(paramName)) {\n\t\t\t\t\tconst param = this.node.params.get(paramName);\n\t\t\t\t\tif (param && !param.parentParam()) {\n\t\t\t\t\t\tconst connectionType = connectionTypeMap[param.type()] as ConnectionPointEnumMap[NC];\n\t\t\t\t\t\tif (connectionType) {\n\t\t\t\t\t\t\tconst connectionPoint = createConnectionPoint(\n\t\t\t\t\t\t\t\tthis._context,\n\t\t\t\t\t\t\t\tparam.name(),\n\t\t\t\t\t\t\t\tconnectionType\n\t\t\t\t\t\t\t) as ConnectionPointTypeMap[NC];\n\t\t\t\t\t\t\tif (connectionPoint) {\n\t\t\t\t\t\t\t\tconnectionPoints.push(connectionPoint);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.node.io.inputs.setNamedInputConnectionPoints(connectionPoints);\n\t}\n\n\tsetInputlessParamNames(names: string[]) {\n\t\treturn (this._inputlessParamNames = names);\n\t}\n\n\t//\n\t// Create spare params on gl nodes\n\t//\n\tcreateSpareParameters() {\n\t\tif (this.node.scene().loadingController.isLoading()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst current_param_names: string[] = this.node.params.spare_names;\n\t\tconst params_update_options: ParamsUpdateOptions = {};\n\n\t\tfor (const param_name of current_param_names) {\n\t\t\tif (this.node.params.has(param_name)) {\n\t\t\t\tconst param = this.node.params.get(param_name);\n\t\t\t\tif (param) {\n\t\t\t\t\tthis._raw_input_serialized_by_param_name.set(param_name, param.rawInputSerialized());\n\t\t\t\t\tthis._default_value_serialized_by_param_name.set(param_name, param.defaultValueSerialized());\n\t\t\t\t\tparams_update_options.namesToDelete = params_update_options.namesToDelete || [];\n\t\t\t\t\tparams_update_options.namesToDelete.push(param_name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst inputConnectionPoints = this.node.io.inputs.namedInputConnectionPoints();\n\t\tif (inputConnectionPoints) {\n\t\t\tlet i = 0;\n\t\t\tfor (const connection_point of inputConnectionPoints) {\n\t\t\t\tif (connection_point) {\n\t\t\t\t\tconst isConnected = this.node.io.inputs.input(i) != null;\n\t\t\t\t\tconst param_name = connection_point.name();\n\t\t\t\t\tconst paramType: ParamType | null = connection_point.param_type;\n\t\t\t\t\tif (paramType) {\n\t\t\t\t\t\tlet init_value = connection_point.init_value;\n\n\t\t\t\t\t\tconst last_param_init_value = this._default_value_serialized_by_param_name.get(param_name);\n\t\t\t\t\t\tlet default_value_from_name = this.node.paramDefaultValue(param_name);\n\n\t\t\t\t\t\tif (default_value_from_name != null) {\n\t\t\t\t\t\t\tinit_value = default_value_from_name;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (last_param_init_value != null) {\n\t\t\t\t\t\t\t\tinit_value = last_param_init_value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinit_value = connection_point.init_value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (CoreType.isArray(connection_point.init_value)) {\n\t\t\t\t\t\t\t// if we need to use an init_value from a float to an array\n\t\t\t\t\t\t\tif (CoreType.isNumber(init_value)) {\n\t\t\t\t\t\t\t\tconst array = new Array(connection_point.init_value.length) as Number2;\n\t\t\t\t\t\t\t\tarray.fill(init_value);\n\t\t\t\t\t\t\t\tinit_value = array;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if we need to use an init_value from a array to an array, we need to check their length.\n\t\t\t\t\t\t\t// if they are different, we need to match them.\n\t\t\t\t\t\t\telse if (CoreType.isArray(init_value)) {\n\t\t\t\t\t\t\t\t// if (init_value.length < connection_point.init_value.length) {\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t// if (init_value.length > connection_point.init_value.length) {\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\tif (init_value.length == connection_point.init_value.length) {\n\t\t\t\t\t\t\t\t\tif (last_param_init_value != null) {\n\t\t\t\t\t\t\t\t\t\tinit_value = connection_point.init_value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (init_value != null && paramType != ParamType.BUTTON) {\n\t\t\t\t\t\t\tparams_update_options.toAdd = params_update_options.toAdd || [];\n\t\t\t\t\t\t\tparams_update_options.toAdd.push({\n\t\t\t\t\t\t\t\tname: param_name,\n\t\t\t\t\t\t\t\ttype: paramType,\n\t\t\t\t\t\t\t\t// TODO: I should really treat differently init_value and raw_input here\n\t\t\t\t\t\t\t\tinitValue: objectClone(init_value as any),\n\t\t\t\t\t\t\t\trawInput: objectClone(init_value as any),\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tspare: true,\n\t\t\t\t\t\t\t\t\teditable: !isConnected,\n\t\t\t\t\t\t\t\t\t// computeOnDirty should be false for PARAM_PATH\n\t\t\t\t\t\t\t\t\t// so that js/setParam and js/getParam can link to a parameter\n\t\t\t\t\t\t\t\t\t// without having their parent node actor being recooked\n\t\t\t\t\t\t\t\t\tcomputeOnDirty: paramType != ParamType.PARAM_PATH,\n\t\t\t\t\t\t\t\t\t// dependentOnFoundParam should be false for PARAM_PATH\n\t\t\t\t\t\t\t\t\t// so that js/setParam and js/getParam can link to a parameter\n\t\t\t\t\t\t\t\t\t// without having their parent node actor being recooked\n\t\t\t\t\t\t\t\t\tdependentOnFoundParam: false,\n\t\t\t\t\t\t\t\t\t// dependentOnFoundNode: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\t// if (!this.node.scene.loading_controller.isLoading()) {\n\t\tthis.node.params.updateParams(params_update_options);\n\n\t\tfor (const spare_param of this.node.params.spare) {\n\t\t\tif (!spare_param.parentParam()) {\n\t\t\t\tconst raw_input = this._raw_input_serialized_by_param_name.get(spare_param.name());\n\t\t\t\tif (raw_input) {\n\t\t\t\t\tspare_param.set(raw_input as any);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// }\n\t}\n}\n","import {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\nimport {\n\tConnectionPointTypeMap,\n\tConnectionPointEnumMap,\n\tDEFAULT_CONNECTION_POINT_ENUM_MAP,\n\tcreateConnectionPoint,\n} from './connections/ConnectionMap';\nimport {TypedNode} from '../../_Base';\nimport {ConnectionPointsSpareParamsController} from './ConnectionPointsSpareParamsController';\nimport {NodeContext, NetworkChildNodeType} from '../../../poly/NodeContext';\nimport {arrayCopy} from '../../../../core/ArrayUtils';\n\ntype IONameFunction = (index: number) => string;\ntype ExpectedConnectionTypesFunction<NC extends NodeContext> = () => ConnectionPointEnumMap[NC][];\nfunction arraysMatch<T>(array0: Array<T>, array1: Array<T>): boolean {\n\tif (array0.length != array1.length) {\n\t\treturn false;\n\t}\n\tfor (let i = 0; i < array0.length; i++) {\n\t\tif (array0[i] != array1[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nexport class ConnectionPointsController<NC extends NodeContext> {\n\tprivate _spare_params_controller: ConnectionPointsSpareParamsController<NC>;\n\tprivate _create_spare_params_from_inputs = true;\n\tprivate _functions_overridden = false;\n\n\tconstructor(private node: TypedNode<NC, any>, private _context: NC) {\n\t\tthis._spare_params_controller = new ConnectionPointsSpareParamsController(this.node, this._context);\n\t}\n\n\tprivate _input_name_function: IONameFunction = (index: number) => {\n\t\treturn `in${index}`;\n\t};\n\tprivate _output_name_function: IONameFunction = (index: number) => {\n\t\treturn index == 0 ? 'val' : `val${index}`;\n\t};\n\t// private _default_input_type: ConnectionPointType = ConnectionPointType.FLOAT;\n\tprivate _expected_input_types_function: ExpectedConnectionTypesFunction<NC> = () => {\n\t\tconst type = this.first_input_connection_type() || this.default_connection_type();\n\t\treturn [type, type];\n\t};\n\tprivate _expected_output_types_function: ExpectedConnectionTypesFunction<NC> = () => {\n\t\treturn [this._expected_input_types_function()[0]];\n\t};\n\tprotected default_connection_type(): ConnectionPointEnumMap[NC] {\n\t\treturn DEFAULT_CONNECTION_POINT_ENUM_MAP[this._context];\n\t}\n\tprotected createConnectionPoint(name: string, type: ConnectionPointEnumMap[NC]): ConnectionPointTypeMap[NC] {\n\t\treturn createConnectionPoint(this._context, name, type) as ConnectionPointTypeMap[NC];\n\t}\n\n\tfunctions_overridden(): boolean {\n\t\treturn this._functions_overridden;\n\t}\n\tinitialized(): boolean {\n\t\treturn this._initialized;\n\t}\n\n\tset_create_spare_params_from_inputs(state: boolean) {\n\t\tthis._create_spare_params_from_inputs = state;\n\t}\n\n\tset_input_name_function(func: IONameFunction) {\n\t\tthis._initialize_if_required();\n\t\tthis._input_name_function = func;\n\t}\n\tset_output_name_function(func: IONameFunction) {\n\t\tthis._initialize_if_required();\n\t\tthis._output_name_function = func;\n\t}\n\n\t// set_default_input_type(type: ConnectionPointType) {\n\t// \tthis._default_input_type = type;\n\t// }\n\tset_expected_input_types_function(func: ExpectedConnectionTypesFunction<NC>) {\n\t\tthis._initialize_if_required();\n\t\tthis._functions_overridden = true;\n\t\tthis._expected_input_types_function = func;\n\t}\n\tset_expected_output_types_function(func: ExpectedConnectionTypesFunction<NC>) {\n\t\tthis._initialize_if_required();\n\t\tthis._functions_overridden = true;\n\t\tthis._expected_output_types_function = func;\n\t}\n\n\tinput_name(index: number) {\n\t\treturn this._wrapped_input_name_function(index);\n\t}\n\toutput_name(index: number) {\n\t\treturn this._wrapped_output_name_function(index);\n\t}\n\n\tprivate _update_signature_if_required_bound = this.update_signature_if_required.bind(this);\n\tprivate _initialized: boolean = false;\n\tinitializeNode() {\n\t\t// I don't want this check here, as I should refactor to have the has_named_inputs\n\t\t// be initialized from here\n\t\t// if (!this.node.io.inputs.hasNamedInputs()) {\n\t\t// \treturn;\n\t\t// }\n\n\t\tif (this._initialized) {\n\t\t\tconsole.warn('already initialized', this.node);\n\t\t\treturn;\n\t\t}\n\t\tthis._initialized = true;\n\n\t\t// hooks\n\t\tthis.node.io.inputs.add_on_set_input_hook(\n\t\t\t'_update_signature_if_required',\n\t\t\tthis._update_signature_if_required_bound\n\t\t);\n\t\t// this.node.lifecycle.onAfterAdded(this._update_signature_if_required_bound);\n\t\tthis.node.params.addOnSceneLoadHook('_update_signature_if_required', this._update_signature_if_required_bound);\n\t\tthis.node.params.onParamsCreated(\n\t\t\t'_update_signature_if_required_bound',\n\t\t\tthis._update_signature_if_required_bound\n\t\t);\n\t\tthis.node.addPostDirtyHook('_update_signature_if_required', this._update_signature_if_required_bound);\n\n\t\tif (!this._spare_params_controller.initialized()) {\n\t\t\tthis._spare_params_controller.initializeNode();\n\t\t}\n\t}\n\tprivate _initialize_if_required() {\n\t\tif (!this._initialized) {\n\t\t\tthis.initializeNode();\n\t\t}\n\t}\n\n\tget spare_params() {\n\t\treturn this._spare_params_controller;\n\t}\n\n\tupdate_signature_if_required() {\n\t\tif (!this.node.lifecycle.creationCompleted() || !this._inputsOutputsMatchExpectations()) {\n\t\t\tthis.update_connection_types();\n\t\t\tthis.node.removeDirtyState();\n\n\t\t\t// no need to update the successors when loading,\n\t\t\t// since the connection point types are stored in the scene data\n\t\t\tif (!this.node.scene().loadingController.isLoading()) {\n\t\t\t\tthis.make_successors_update_signatures();\n\t\t\t}\n\t\t}\n\t}\n\n\t// used when a node changes its signature, adn the output nodes need to adapt their own signatures\n\tprivate _successorsCopy: CoreGraphNode[] = [];\n\tprivate make_successors_update_signatures() {\n\t\tconst successors = this.node.graphAllSuccessors();\n\t\tarrayCopy(successors, this._successorsCopy);\n\t\tif (this.node.childrenAllowed()) {\n\t\t\tconst subnet_inputs = this.node.nodesByType(NetworkChildNodeType.INPUT);\n\t\t\tconst subnet_outputs = this.node.nodesByType(NetworkChildNodeType.OUTPUT);\n\t\t\tfor (const subnet_input of subnet_inputs) {\n\t\t\t\tthis._successorsCopy.push(subnet_input);\n\t\t\t}\n\t\t\tfor (const subnet_output of subnet_outputs) {\n\t\t\t\tthis._successorsCopy.push(subnet_output);\n\t\t\t}\n\t\t}\n\n\t\tfor (const graphNode of this._successorsCopy) {\n\t\t\tconst node = graphNode as TypedNode<NC, any>;\n\t\t\t// we need to check if node.io exists to be sure it is a node, not just a graph_node\n\t\t\tif (node.io && node.io.has_connection_points_controller && node.io.connection_points.initialized()) {\n\t\t\t\tnode.io.connection_points.update_signature_if_required();\n\t\t\t}\n\t\t}\n\t\t// we also need to have subnet_output nodes update their parents\n\t\t// if (this.node.type == NetworkChildNodeType.OUTPUT) {\n\t\t// this.node.parent?.io.connection_points.update_signature_if_required(this.node);\n\t\t// }\n\t}\n\n\tupdate_connection_types() {\n\t\tconst set_dirty = false;\n\t\tconst expected_input_types = this._wrapped_expected_input_types_function();\n\t\tconst expected_output_types = this._wrapped_expected_output_types_function();\n\n\t\tconst named_input_connection_points: ConnectionPointTypeMap[NC][] = [];\n\t\tfor (let i = 0; i < expected_input_types.length; i++) {\n\t\t\tconst type = expected_input_types[i];\n\t\t\tconst point = this.createConnectionPoint(this._wrapped_input_name_function(i), type);\n\t\t\tnamed_input_connection_points.push(point);\n\t\t}\n\t\tconst named_output_connect_points: ConnectionPointTypeMap[NC][] = [];\n\t\tfor (let i = 0; i < expected_output_types.length; i++) {\n\t\t\tconst type = expected_output_types[i];\n\t\t\tconst point = this.createConnectionPoint(this._wrapped_output_name_function(i), type);\n\t\t\tnamed_output_connect_points.push(point);\n\t\t}\n\n\t\tthis.node.io.inputs.setNamedInputConnectionPoints(named_input_connection_points);\n\n\t\tthis.node.io.outputs.setNamedOutputConnectionPoints(named_output_connect_points, set_dirty);\n\t\tif (this._create_spare_params_from_inputs) {\n\t\t\tthis._spare_params_controller.createSpareParameters();\n\t\t}\n\t}\n\n\tprotected _inputsOutputsMatchExpectations(): boolean {\n\t\tconst namedInputConnections = this.node.io.inputs.namedInputConnectionPoints();\n\t\tconst namedOutputConnections = this.node.io.outputs.namedOutputConnectionPoints();\n\t\tif (!(namedInputConnections && namedOutputConnections)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst inputTypesMatch = arraysMatch(\n\t\t\t// make sure to test the expected ones against all except the inNodeDefinition ones\n\t\t\tnamedInputConnections.filter((c) => !c?.inNodeDefinition()).map((c) => c?.type()),\n\t\t\tthis._wrapped_expected_input_types_function()\n\t\t);\n\t\tconst outputTypesMatch = arraysMatch(\n\t\t\tnamedOutputConnections.map((c) => c?.type()),\n\t\t\tthis._wrapped_expected_output_types_function()\n\t\t);\n\t\tconst inputNamesMatch = arraysMatch(\n\t\t\t// make sure to test the expected ones against all except the inNodeDefinition ones\n\t\t\tnamedInputConnections.filter((c) => !c?.inNodeDefinition()).map((c) => c?.name()),\n\t\t\tnamedInputConnections\n\t\t\t\t.filter((c) => !c?.inNodeDefinition())\n\t\t\t\t.map((c, i) => this._wrapped_input_name_function(i))\n\t\t);\n\t\tconst outputNamesMatch = arraysMatch(\n\t\t\tnamedOutputConnections.map((c) => c?.name()),\n\t\t\tnamedOutputConnections.map((c, i) => this._wrapped_output_name_function(i))\n\t\t);\n\n\t\treturn inputTypesMatch && outputTypesMatch && inputNamesMatch && outputNamesMatch;\n\t}\n\n\t//\n\t//\n\t// WRAPPPED METHOD\n\t// the goal here is to use the types data saved in the scene file\n\t// when the scene is loading. That has 2 purposes:\n\t// - avoid an update cascade during loading, where nodes with many inputs are updated\n\t//\t several times.\n\t// - allow the subnet_input to load with the connection_points it had on save,\n\t//   which in turn allows connected nodes to not lose their connections.\n\t//\n\tprivate _wrapped_expected_input_types_function() {\n\t\tif (this.node.scene().loadingController.isLoading()) {\n\t\t\tconst in_data = this.node.io.saved_connection_points_data.in();\n\t\t\tif (in_data) {\n\t\t\t\treturn in_data.map((d) => d.type as ConnectionPointEnumMap[NC]);\n\t\t\t}\n\t\t}\n\t\treturn this._expected_input_types_function();\n\t}\n\tprivate _wrapped_expected_output_types_function() {\n\t\tif (this.node.scene().loadingController.isLoading()) {\n\t\t\tconst out_data = this.node.io.saved_connection_points_data.out();\n\t\t\tif (out_data) {\n\t\t\t\treturn out_data.map((d) => d.type as ConnectionPointEnumMap[NC]);\n\t\t\t}\n\t\t}\n\t\treturn this._expected_output_types_function();\n\t}\n\tprivate _wrapped_input_name_function(index: number) {\n\t\tif (this.node.scene().loadingController.isLoading()) {\n\t\t\tconst in_data = this.node.io.saved_connection_points_data.in();\n\t\t\tif (in_data) {\n\t\t\t\treturn in_data[index].name;\n\t\t\t}\n\t\t}\n\t\treturn this._input_name_function(index);\n\t}\n\tprivate _wrapped_output_name_function(index: number) {\n\t\tif (this.node.scene().loadingController.isLoading()) {\n\t\t\tconst out_data = this.node.io.saved_connection_points_data.out();\n\t\t\tif (out_data) {\n\t\t\t\treturn out_data[index].name;\n\t\t\t}\n\t\t}\n\t\treturn this._output_name_function(index);\n\t}\n\n\t// protected input_connection_type() {\n\t// \treturn this.first_input_connection_type();\n\t// }\n\t// protected output_connection_type() {\n\t// \treturn this.first_input_connection_type();\n\t// }\n\n\tfirst_input_connection_type(): ConnectionPointEnumMap[NC] | undefined {\n\t\treturn this.input_connection_type(0);\n\t}\n\tinput_connection_type(index: number): ConnectionPointEnumMap[NC] | undefined {\n\t\tconst connections = this.node.io.connections.inputConnections();\n\t\tif (!connections) {\n\t\t\treturn;\n\t\t}\n\t\tconst connection = connections[index];\n\t\tif (!connection) {\n\t\t\treturn;\n\t\t}\n\t\tconst connectionPoint = connection.srcConnectionPoint();\n\t\tif (!connectionPoint) {\n\t\t\treturn;\n\t\t}\n\t\treturn connectionPoint.type() as ConnectionPointEnumMap[NC];\n\t}\n\t// input_connection_point_from_connection(connection: TypedNodeConnection<NC>): ConnectionPointTypeMap[NC] {\n\t// \tconst node_dest = connection.node_dest;\n\t// \tconst output_index = connection.output_index;\n\t// \treturn node_dest.io.outputs.namedOutputConnectionPoints()[output_index] as ConnectionPointTypeMap[NC];\n\t// }\n\t// output_connection_point_from_connection(connection: TypedNodeConnection<NC>): ConnectionPointTypeMap[NC] {\n\t// \tconst node_src = connection.node_src;\n\t// \tconst output_index = connection.output_index;\n\t// \treturn node_src.io.outputs.namedOutputConnectionPoints()[output_index] as ConnectionPointTypeMap[NC];\n\t// }\n\t// connection_point_type_from_connection(connection: TypedNodeConnection<NC>): ConnectionPointEnumMap[NC] {\n\t// \treturn connection.dest_connection_point()?.type as ConnectionPointEnumMap[NC];\n\t// \t// const connection_point = this.output_connection_point_from_connection(connection)!;\n\t// \t// return connection_point.type as ConnectionPointEnumMap[NC];\n\t// }\n\t// connection_point_name_from_connection(connection: TypedNodeConnection<NC>): string {\n\t// \treturn connection.dest_connection_point()!.name\n\t// \t// const connection_point = this.output_connection_point_from_connection(connection)!;\n\t// \t// return connection_point.name;\n\t// }\n}\n","import {NodeInputsController} from './InputsController';\nimport {OutputsController} from './OutputsController';\nimport {ConnectionsController} from './ConnectionsController';\nimport {SavedConnectionPointsDataController} from './SavedConnectionPointsDataController';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {TypedNode} from '../../_Base';\nimport {ConnectionPointsController} from './ConnectionPointsController';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamInitValueSerializedTypeMap} from '../../../params/types/ParamInitValueSerializedTypeMap';\nimport {ParamOptions} from '../../../params/utils/OptionsController';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\n\nexport type OverridenOptions = PolyDictionary<string | number>;\n\nexport type SimpleParamJsonExporterData<T extends ParamType> = ParamInitValueSerializedTypeMap[T];\n\nexport interface ComplexParamJsonExporterData<T extends ParamType> {\n\ttype?: T;\n\tdefault_value?: ParamInitValueSerializedTypeMap[T];\n\traw_input?: ParamInitValueSerializedTypeMap[T];\n\toptions?: ParamOptions;\n\toverriden_options?: OverridenOptions;\n\t// components?: ParamJsonExporterDataByName;\n\t// expression?: string;\n}\nexport type ParamJsonExporterData<T extends ParamType> =\n\t| SimpleParamJsonExporterData<T>\n\t| ComplexParamJsonExporterData<T>;\nexport type ParamJsonExporterDataByName = PolyDictionary<ParamJsonExporterData<ParamType>>;\n\nexport type ParamsJsonExporterData = PolyDictionary<ParamJsonExporterData<ParamType>>;\n\nexport interface ParamInitData<T extends ParamType> {\n\traw_input?: ParamInitValueSerializedTypeMap[T];\n\tsimple_data?: SimpleParamJsonExporterData<T>;\n\tcomplex_data?: ComplexParamJsonExporterData<T>;\n}\nexport type ParamsInitData = PolyDictionary<ParamInitData<ParamType>>;\n\nexport class IOController<NC extends NodeContext> {\n\tprotected _inputs: NodeInputsController<NC> | undefined;\n\tprotected _outputs: OutputsController<NC> | undefined;\n\tprotected _connections: ConnectionsController<NC> = new ConnectionsController(this.node);\n\tprotected _saved_connection_points_data: SavedConnectionPointsDataController<NC> | undefined;\n\tprotected _connection_points: ConnectionPointsController<NC> | undefined;\n\n\tconstructor(protected node: TypedNode<NC, any>) {}\n\n\tdispose() {\n\t\tthis.inputs.dispose();\n\t\tthis.outputs.dispose();\n\t\tthis.connections.dispose();\n\t}\n\n\tget connections() {\n\t\treturn this._connections;\n\t}\n\n\t//\n\t//\n\t// inputs\n\t//\n\t//\n\tget inputs(): NodeInputsController<NC> {\n\t\treturn (this._inputs = this._inputs || new NodeInputsController(this.node));\n\t}\n\thasInputs() {\n\t\treturn this._inputs != null;\n\t}\n\n\t//\n\t//\n\t// outputs\n\t//\n\t//\n\tget outputs(): OutputsController<NC> {\n\t\treturn (this._outputs = this._outputs || new OutputsController(this.node));\n\t}\n\thas_outputs() {\n\t\treturn this._outputs != null;\n\t}\n\n\t//\n\t//\n\t// connection_points\n\t//\n\t//\n\tget connection_points(): ConnectionPointsController<NC> {\n\t\treturn (this._connection_points =\n\t\t\tthis._connection_points || new ConnectionPointsController(this.node, this.node.context() as NC));\n\t}\n\tget has_connection_points_controller(): boolean {\n\t\treturn this._connection_points != null;\n\t}\n\n\t//\n\t//\n\t// saved connection points data\n\t//\n\t//\n\tget saved_connection_points_data() {\n\t\treturn (this._saved_connection_points_data =\n\t\t\tthis._saved_connection_points_data || new SavedConnectionPointsDataController(this.node));\n\t}\n\tclear_saved_connection_points_data() {\n\t\tif (this._saved_connection_points_data) {\n\t\t\tthis._saved_connection_points_data.clear();\n\t\t\tthis._saved_connection_points_data = undefined;\n\t\t}\n\t}\n}\n","import {NodeParamsConfig} from './ParamsConfig';\n// import {ParamValuesTypeMap} from './ParamsController';\n// import {ParamType} from '../../../poly/ParamType';\n\n// function getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n// \treturn o[propertyName]; // o[propertyName] is of type T[K]\n// }\n\n// let t: getProperty(ParamConfig, 'type')\n// function prop<T, K extends keyof T>(obj: T, key: K) {\n// \treturn typeof obj[key];\n// }\n// type test = Pick<ParamConfig<ParamType.FLOAT>, 'default_value'>;\n\nexport type ParamsAccessorType<T extends NodeParamsConfig> = {\n\treadonly // @ts-ignore\n\t[P in keyof T]: T[P]['param_class'];\n};\n\nexport class ParamsAccessor<T extends NodeParamsConfig> {\n\tconstructor() {\n\t\t// console.log('accessor', this);\n\t}\n}\n","import {PolyScene} from '../scene/PolyScene';\nimport {CoreGraphNode} from '../../core/graph/CoreGraphNode';\nimport {UIData} from './utils/UIData';\nimport {FlagsController, FlagsControllerD} from './utils/FlagsController';\nimport {NodeStatesController} from './utils/StatesController';\nimport {HierarchyParentController} from './utils/hierarchy/ParentController';\nimport {HierarchyChildrenController, NodeCreateOptions} from './utils/hierarchy/ChildrenController';\nimport {NodeLifeCycleController} from './utils/LifeCycleController';\nimport {TypedContainerController} from './utils/ContainerController';\nimport {NodeCookController, OnCookCompleteHook} from './utils/CookController';\nimport {NameController} from './utils/NameController';\nimport {CoreNodeSerializer, NodeSerializerData} from './utils/CoreNodeSerializer';\nimport {ParamsController} from './utils/params/ParamsController';\nimport {ParamConstructorMap} from '../params/types/ParamConstructorMap';\nimport {ParamInitValuesTypeMap} from '../params/types/ParamInitValuesTypeMap';\nimport {NodeParamsConfig} from './utils/params/ParamsConfig';\nimport {ParamsValueAccessor, ParamsValueAccessorType} from './utils/params/ParamsValueAccessor';\n// import {ProcessingContext} from './utils/ProcessingContext';\nimport {IOController} from './utils/io/IOController';\nimport {NodeEvent} from '../poly/NodeEvent';\nimport {BaseNodeByContextMap, NodeContext} from '../poly/NodeContext';\nimport {ParamsAccessorType, ParamsAccessor} from './utils/params/ParamsAccessor';\n// import {ContainerMap, ContainerType} from '../containers/utils/ContainerMap';\nimport {ContainableMap} from '../containers/utils/ContainableMap';\nimport {ParamOptions} from '../params/utils/OptionsController';\nimport {ParamType} from '../poly/ParamType';\nimport {DisplayNodeController} from './utils/DisplayNodeController';\n// import {NodeTypeMap} from '../containers/utils/ContainerMap';\nimport {ParamInitValueSerialized} from '../params/types/ParamInitValueSerialized';\nimport {ModuleName} from '../poly/registers/modules/Common';\nimport {BasePersistedConfig} from './utils/BasePersistedConfig';\nimport {AssemblerName} from '../poly/registers/assemblers/_BaseRegister';\nimport {PolyNodeController} from './utils/poly/PolyNodeController';\nimport {CoreGraphNodeId} from '../../core/graph/CoreGraph';\nimport {PolyDictionary} from '../../types/GlobalTypes';\nimport {SetInputsOptions} from './utils/io/InputsController';\nimport {OnNodeRegisterCallback} from '../poly/registers/nodes/NodesRegister';\nimport {EventDispatcher, BaseEvent, EventListener} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../core/geometry/ObjectContent';\nexport interface NodeDeletedEmitData {\n\tparent_id: CoreGraphNodeId;\n}\ntype AnyString= 'any-string'\nconst ANY_STRING:AnyString='any-string'\nexport interface NodeCreatedEmitData {\n\tchild_node_json: NodeSerializerData;\n}\ntype EmitDataByNodeEventMapGeneric = {[key in NodeEvent]: any};\nexport interface EmitDataByNodeEventMap extends EmitDataByNodeEventMapGeneric {\n\t[NodeEvent.CREATED]: NodeCreatedEmitData;\n\t[NodeEvent.DELETED]: NodeDeletedEmitData;\n\t[NodeEvent.ERROR_UPDATED]: undefined;\n}\nexport interface IntegrationData {\n\tname: string;\n\tdata: PolyDictionary<string>;\n}\n\nexport interface BaseNodeEvent extends BaseEvent {\n\ttarget?: BaseNodeType;\n\t// [attachment: string]: any;\n}\nexport type NodeEventListener = EventListener<BaseNodeEvent, string, EventDispatcher<BaseNodeEvent>>;\nexport const DEFAULT_DATA_TYPE = 'default';\n\n/**\n *\n *\n * TypedNode is the base class that all nodes inherit from. This inherits from [CoreGraphNode](/docs/api/CoreGraphNode).\n *\n */\nexport class TypedNode<NC extends NodeContext, K extends NodeParamsConfig> extends CoreGraphNode {\n\tcontainerController: TypedContainerController<NC> = new TypedContainerController<NC>(this);\n\n\tprivate _parentController: HierarchyParentController | undefined;\n\n\tprivate _uiData: UIData | undefined;\n\n\tprivate _states: NodeStatesController<NC> | undefined;\n\tprivate _lifecycle: NodeLifeCycleController | undefined;\n\tprivate _serializer: CoreNodeSerializer | undefined;\n\tprivate _cookController: NodeCookController<NC> | undefined;\n\tpublic readonly flags: FlagsController | undefined;\n\tpublic readonly displayNodeController: DisplayNodeController | undefined;\n\tpublic readonly persisted_config: BasePersistedConfig | undefined;\n\n\tprivate _paramsController: ParamsController | undefined;\n\treadonly paramsConfig: K | undefined;\n\treadonly pv: ParamsValueAccessorType<K> = (<unknown>new ParamsValueAccessor<K>()) as ParamsValueAccessorType<K>;\n\t// readonly pv: ParamsValueAccessor<K> = new ParamsValueAccessor<K>(this);\n\treadonly p: ParamsAccessorType<K> = (<unknown>new ParamsAccessor<K>()) as ParamsAccessorType<K>;\n\tcopy_param_values(node: TypedNode<NC, K>) {\n\t\tconst non_spare = this.params.non_spare;\n\t\tfor (const param of non_spare) {\n\t\t\tconst other_param = node.params.get(param.name());\n\t\t\tif (other_param) {\n\t\t\t\tparam.copyValue(other_param);\n\t\t\t}\n\t\t}\n\t}\n\tdataType(): string {\n\t\treturn DEFAULT_DATA_TYPE;\n\t}\n\n\tprivate _nameController: NameController | undefined;\n\tget parentController(): HierarchyParentController {\n\t\treturn (this._parentController = this._parentController || new HierarchyParentController(this));\n\t}\n\tstatic displayedInputNames(): string[] | undefined {\n\t\treturn undefined;\n\t}\n\tdisplayedInputNames(): string[] | undefined {\n\t\treturn (this.constructor as any as TypedNode<NC, K>).displayedInputNames();\n\t}\n\n\tprivate _childrenController: HierarchyChildrenController | undefined;\n\tprotected _childrenControllerContext: NodeContext | undefined;\n\tchildrenControllerContext() {\n\t\treturn this._childrenControllerContext;\n\t}\n\tprivate _create_childrenController(): HierarchyChildrenController | undefined {\n\t\tif (this._childrenControllerContext) {\n\t\t\treturn new HierarchyChildrenController(this, this._childrenControllerContext);\n\t\t}\n\t}\n\tget childrenController(): HierarchyChildrenController | undefined {\n\t\treturn (this._childrenController = this._childrenController || this._create_childrenController());\n\t}\n\tchildrenAllowed(): boolean {\n\t\treturn this._childrenControllerContext != null;\n\t}\n\tsceneReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tget uiData(): UIData {\n\t\treturn (this._uiData = this._uiData || new UIData(this));\n\t}\n\n\tget states(): NodeStatesController<NC> {\n\t\treturn (this._states = this._states || new NodeStatesController(this));\n\t}\n\tget lifecycle(): NodeLifeCycleController {\n\t\treturn (this._lifecycle = this._lifecycle || new NodeLifeCycleController(this));\n\t}\n\n\tget serializer(): CoreNodeSerializer | undefined {\n\t\treturn this._serializer;\n\t}\n\n\tget cookController(): NodeCookController<NC> {\n\t\treturn (this._cookController = this._cookController || new NodeCookController(this));\n\t}\n\tprotected _io: IOController<NC> | undefined;\n\tget io(): IOController<NC> {\n\t\treturn (this._io = this._io || new IOController(this));\n\t}\n\tget nameController(): NameController {\n\t\treturn (this._nameController = this._nameController || new NameController(this));\n\t}\n\t/**\n\t * sets the name of a node. Note that if a sibling node already has that name, it will be updated to be unique.\n\t *\n\t */\n\toverride setName(name: string) {\n\t\tthis.nameController.setName(name);\n\t}\n\t_setCoreName(name: string) {\n\t\tthis._name = name;\n\t}\n\n\tget params(): ParamsController {\n\t\treturn (this._paramsController = this._paramsController || new ParamsController(this));\n\t}\n\t// get processing_context(): ProcessingContext {\n\t// \treturn (this._processing_context = this._processing_context || new ProcessingContext(this));\n\t// }\n\n\tconstructor(scene: PolyScene, nodeName: string = 'BaseNode', public createOptions?: NodeCreateOptions) {\n\t\tsuper(scene, nodeName);\n\t\tconst serializerClass = createOptions?.serializerClass;\n\t\tif (serializerClass) {\n\t\t\tthis._serializer = new serializerClass(this);\n\t\t}\n\t}\n\n\tprivate _initialized: boolean = false;\n\tpublic initializeBaseAndNode() {\n\t\tif (!this._initialized) {\n\t\t\tthis._initialized = true;\n\n\t\t\tthis.displayNodeController?.initializeNode();\n\n\t\t\tthis.initializeBaseNode(); // for base classes of Sop, Obj...\n\t\t\tthis.initializeNode(); // for Derivated node clases, like BoxSop, TransformSop...\n\t\t\tif (this.polyNodeController) {\n\t\t\t\tthis.polyNodeController.initializeNode();\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn('node already initialized');\n\t\t}\n\t}\n\tprotected initializeBaseNode() {}\n\tprotected initializeNode() {}\n\n\tstatic type(): string {\n\t\tthrow 'type to be overriden';\n\t}\n\tstatic onRegister: OnNodeRegisterCallback | undefined;\n\t/**\n\t * returns the type of the node.\n\t *\n\t */\n\ttype() {\n\t\tconst c = this.constructor as typeof BaseNodeClass;\n\t\treturn c.type();\n\t}\n\tstatic context(): NodeContext {\n\t\tconsole.error('node has no node_context', this);\n\t\tthrow 'context requires override';\n\t}\n\t/**\n\t * returns the context.\n\t *\n\t */\n\tcontext(): NodeContext {\n\t\tconst c = this.constructor as typeof BaseNodeClass;\n\t\treturn c.context();\n\t}\n\n\tstatic requireWebGL2(): boolean {\n\t\treturn false;\n\t}\n\trequireWebGL2(): boolean {\n\t\tconst c = this.constructor as typeof BaseNodeClass;\n\t\treturn c.requireWebGL2();\n\t}\n\n\tsetParent(parent: BaseNodeType | null) {\n\t\tthis.parentController.setParent(parent);\n\t}\n\t/**\n\t * returns the parent.\n\t *\n\t */\n\tparent() {\n\t\treturn this.parentController.parent();\n\t}\n\tinsideALockedParent(): boolean {\n\t\treturn this.lockedParent() != null;\n\t}\n\tlockedOrInsideALockedParent(): boolean {\n\t\treturn this.polyNodeController?.locked() || this.insideALockedParent();\n\t}\n\tselfOrLockedParent(): BaseNodeType | null {\n\t\tif (this.polyNodeController?.locked()) {\n\t\t\treturn this;\n\t\t}\n\t\treturn this.lockedParent();\n\t}\n\tlockedParent(): BaseNodeType | null {\n\t\tconst parent = this.parent();\n\t\tif (!parent) {\n\t\t\treturn null;\n\t\t}\n\t\tif (parent.polyNodeController && parent.polyNodeController.locked()) {\n\t\t\treturn parent;\n\t\t}\n\t\treturn parent.lockedParent();\n\t}\n\tfirstAncestorWithContext<N extends NodeContext>(context: N) {\n\t\treturn this.parentController.firstAncestorWithContext(context);\n\t}\n\troot() {\n\t\treturn this._scene.root();\n\t}\n\t/**\n\t * returns the path.\n\t *\n\t */\n\tpath(relative_to_parent?: BaseNodeType): string {\n\t\treturn this.parentController.path(relative_to_parent);\n\t}\n\n\t// params\n\tcreateParams() {}\n\taddParam<T extends ParamType>(\n\t\ttype: T,\n\t\tname: string,\n\t\tdefault_value: ParamInitValuesTypeMap[T],\n\t\toptions?: ParamOptions\n\t): ParamConstructorMap[T] | undefined {\n\t\treturn this._paramsController?.addParam(type, name, default_value, options);\n\t}\n\tparamDefaultValue(name: string): ParamInitValueSerialized {\n\t\treturn null;\n\t}\n\n\t// cook\n\tcook(inputContents: any[]): any {\n\t\treturn null;\n\t}\n\t/**\n\t * registers a callback that will be run every time the node finishes cooking.\n\t *\n\t */\n\tonCookEnd(callbackName: string, callback: OnCookCompleteHook) {\n\t\tthis.cookController.registerOnCookEnd(callbackName, callback);\n\t}\n\n\t/**\n\t * returns a promise that will be resolved when the node finishes cooking.\n\t *\n\t */\n\tasync compute() {\n\t\tif (this.isDirty() || this.flags?.bypass?.active()) {\n\t\t\treturn await this.containerController.compute();\n\t\t} else {\n\t\t\treturn this.containerController.container();\n\t\t}\n\t}\n\t_setContainer(content: ContainableMap[NC] /*, message: string | null = null*/) {\n\t\t// TODO: typescript: why is this a type of never\n\t\tthis.containerController.container().set_content(content as never); //, this.self.cook_eval_key());\n\t\t// if (content != null) {\n\t\t// \t// if (content.name==null) {\n\t\t// \t// \tcontent.name = this.path();\n\t\t// \t// }\n\t\t// \t// if (!(content as any).node) {\n\t\t// \t// \t(content as any).node = this;\n\t\t// \t// }\n\t\t// }\n\t\tthis.cookController.endCook(/*message*/);\n\t}\n\n\t/**\n\t * create a node.\n\t *\n\t */\n\tcreateNode(nodeClass: any, options?: NodeCreateOptions) {\n\t\treturn this.childrenController?.createNode(nodeClass, options);\n\t}\n\tcreateOperationContainer(type: string, operation_container_name: string, options?: NodeCreateOptions) {\n\t\treturn this.childrenController?.createOperationContainer(type, operation_container_name, options);\n\t}\n\t/**\n\t * removes a child node\n\t *\n\t */\n\tremoveNode(node: BaseNodeType) {\n\t\tthis.childrenController?.removeNode(node);\n\t}\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.setParent(null);\n\t\tif (this._nameController) {\n\t\t\tthis._nameController.dispose();\n\t\t\tthis._nameController = undefined;\n\t\t}\n\t\tif (this._io) {\n\t\t\tthis._io.dispose();\n\t\t\tthis._io = undefined;\n\t\t}\n\t\tif (this._lifecycle) {\n\t\t\tthis._lifecycle.dispose();\n\t\t\tthis._lifecycle = undefined;\n\t\t}\n\t\tif (this.displayNodeController) {\n\t\t\tthis.displayNodeController.dispose();\n\t\t\t// this.displayNodeController = undefined\n\t\t}\n\t\tif (this._childrenController) {\n\t\t\tthis._childrenController.dispose();\n\t\t\tthis._childrenController = undefined;\n\t\t}\n\t\tif (this._paramsController) {\n\t\t\tthis._paramsController.dispose();\n\t\t\tthis._paramsController = undefined;\n\t\t}\n\t\tif (this._cookController) {\n\t\t\tthis._cookController.dispose();\n\t\t\tthis._cookController = undefined;\n\t\t}\n\t\tif (this._serializer) {\n\t\t\tthis._serializer.dispose();\n\t\t\tthis._serializer = undefined;\n\t\t}\n\t\tif (this._uiData) {\n\t\t\tthis._uiData.dispose();\n\t\t\tthis._uiData = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * returns the list of children\n\t *\n\t */\n\tchildren(): Readonly<BaseNodeType[]> {\n\t\treturn this.childrenController?.children() || [];\n\t}\n\t/**\n\t * returns a child node\n\t *\n\t */\n\tnode(path: string) {\n\t\treturn this.parentController?.findNode(path) || null;\n\t}\n\t/**\n\t * returns a sibling node\n\t *\n\t */\n\tnodeSibling(name: string): BaseNodeByContextMap[NC] | null {\n\t\tconst parent = this.parent();\n\t\tif (parent) {\n\t\t\tconst node = parent.childrenController?.childByName(name);\n\t\t\tif (node) {\n\t\t\t\treturn node as BaseNodeByContextMap[NC];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t/**\n\t * returns the children matching the type\n\t *\n\t */\n\tnodesByType(type: string) {\n\t\treturn this.childrenController?.nodesByType(type) || [];\n\t}\n\n\t/**\n\t * sets a node as input\n\t *\n\t */\n\tsetInput(\n\t\tinputIndexOrName: number | string,\n\t\tnode: BaseNodeByContextMap[NC] | null,\n\t\toutputIndexOrName?: number | string,\n\t\toptions?: SetInputsOptions\n\t) {\n\t\tthis.io.inputs.setInput(inputIndexOrName, node, outputIndexOrName, options);\n\t}\n\n\t// emit\n\temit(event_name: NodeEvent.CREATED, data: EmitDataByNodeEventMap[NodeEvent.CREATED]): void;\n\temit(event_name: NodeEvent.DELETED, data: EmitDataByNodeEventMap[NodeEvent.DELETED]): void;\n\temit(event_name: NodeEvent.NAME_UPDATED): void;\n\temit(event_name: NodeEvent.OVERRIDE_CLONABLE_STATE_UPDATE): void;\n\temit(event_name: NodeEvent.NAMED_INPUTS_UPDATED): void;\n\temit(event_name: NodeEvent.NAMED_OUTPUTS_UPDATED): void;\n\temit(event_name: NodeEvent.INPUTS_UPDATED): void;\n\temit(event_name: NodeEvent.PARAMS_UPDATED): void;\n\temit(event_name: NodeEvent.UI_DATA_POSITION_UPDATED): void;\n\temit(event_name: NodeEvent.UI_DATA_COMMENT_UPDATED): void;\n\temit(event_name: NodeEvent.ERROR_UPDATED): void;\n\temit(event_name: NodeEvent.FLAG_BYPASS_UPDATED): void;\n\temit(event_name: NodeEvent.FLAG_DISPLAY_UPDATED): void;\n\temit(event_name: NodeEvent.FLAG_OPTIMIZE_UPDATED): void;\n\temit(event_name: NodeEvent.SELECTION_UPDATED): void;\n\temit(event_name: NodeEvent.POLY_NODE_LOCK_STATE_UPDATED): void;\n\temit(event_name: NodeEvent, data: object | null = null): void {\n\t\tthis.scene().dispatchController.dispatch(this, event_name, data);\n\t}\n\tprivate __eventsDispatcher: EventDispatcher<{[ANY_STRING]:any}> | undefined;\n\tprivate _eventsDispatcher() {\n\t\treturn (this.__eventsDispatcher = this.__eventsDispatcher || new EventDispatcher());\n\t}\n\tdispatchEvent(event: BaseEvent<string>) {\n\t\tthis._eventsDispatcher().dispatchEvent(event);\n\t}\n\taddEventListener(type: string, listener: NodeEventListener) {\n\t\tthis._eventsDispatcher().addEventListener(type as AnyString, listener);\n\t}\n\tremoveEventListener(type: string, listener: NodeEventListener) {\n\t\tthis._eventsDispatcher().removeEventListener(type as AnyString, listener);\n\t}\n\n\t// serializer\n\ttoJSON(includeParamComponents: boolean = false) {\n\t\tif (!this._serializer) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._serializer.toJSON(includeParamComponents);\n\t}\n\n\t// modules\n\tpublic requiredModules(): ModuleName[] | void {}\n\tpublic usedAssembler(): AssemblerName | void {}\n\tpublic integrationData(): IntegrationData | void {}\n\n\t// poly nodes\n\tpublic readonly polyNodeController: PolyNodeController | undefined;\n\n\t// error processing\n\tprocessError(e: unknown) {\n\t\treturn e;\n\t}\n\n\tpublic updateObjectOnAdd(object: ObjectContent<CoreObjectType>, parent: ObjectContent<CoreObjectType>) {}\n\tpublic updateObjectOnRemove(object: ObjectContent<CoreObjectType>, parent: ObjectContent<CoreObjectType>) {}\n}\n\nexport type BaseNodeType = TypedNode<any, any>;\nexport class BaseNodeClass extends TypedNode<any, any> {}\n\nexport class BaseNodeClassWithDisplayFlag extends TypedNode<any, any> {\n\tpublic override readonly flags: FlagsControllerD = new FlagsControllerD(this);\n}\n","/**\n * A subnet to create ANIM nodes\n *\n */\nimport {TypedAnimNode} from './_Base';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {NetworkNodeType, NodeContext} from '../../poly/NodeContext';\nimport {AnimNodeChildrenMap} from '../../poly/registers/nodes/Anim';\nimport {NodeCreateOptions} from '../utils/hierarchy/ChildrenController';\nimport {Constructor, valueof} from '../../../types/GlobalTypes';\nimport {BaseAnimNodeType} from './_Base';\nimport {TimelineBuilder} from '../../../core/animation/TimelineBuilder';\nimport {SubnetOutputAnimNode} from './SubnetOutput';\nclass ParamLessSubnetAnimParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new ParamLessSubnetAnimParamsConfig();\n\nexport class BaseSubnetAnimNode<K extends NodeParamsConfig> extends TypedAnimNode<K> {\n\toverride initializeNode() {\n\t\tthis.io.inputs.setCount(0, 4);\n\t}\n\n\tprotected override _childrenControllerContext = NodeContext.ANIM;\n\n\toverride createNode<S extends keyof AnimNodeChildrenMap>(\n\t\tnodeClass: S,\n\t\toptions?: NodeCreateOptions\n\t): AnimNodeChildrenMap[S];\n\toverride createNode<K extends valueof<AnimNodeChildrenMap>>(\n\t\tnodeClass: Constructor<K>,\n\t\toptions?: NodeCreateOptions\n\t): K;\n\toverride createNode<K extends valueof<AnimNodeChildrenMap>>(\n\t\tnodeClass: Constructor<K>,\n\t\toptions?: NodeCreateOptions\n\t): K {\n\t\treturn super.createNode(nodeClass, options) as K;\n\t}\n\toverride children() {\n\t\treturn super.children() as BaseAnimNodeType[];\n\t}\n\toverride nodesByType<K extends keyof AnimNodeChildrenMap>(type: K): AnimNodeChildrenMap[K][] {\n\t\treturn super.nodesByType(type) as AnimNodeChildrenMap[K][];\n\t}\n\n\toverride async cook(inputContents: TimelineBuilder[]) {\n\t\tconst subnetOutput = this.nodesByType(SubnetOutputAnimNode.type())[0];\n\t\tif (!subnetOutput) {\n\t\t\tthis.states.error.set('no output node found inside subnet');\n\t\t\treturn this.cookController.endCook();\n\t\t}\n\t\tconst container = await subnetOutput.compute();\n\t\tconst timelineBuilder = container.coreContent();\n\t\tif (!timelineBuilder) {\n\t\t\tthis.states.error.set('invalid subnetOutput');\n\t\t\treturn this.cookController.endCook();\n\t\t}\n\t\tthis.setTimelineBuilder(timelineBuilder);\n\t}\n}\n\nexport class SubnetAnimNode extends BaseSubnetAnimNode<ParamLessSubnetAnimParamsConfig> {\n\toverride paramsConfig = ParamsConfig;\n\tstatic override type() {\n\t\treturn NetworkNodeType.SUBNET;\n\t}\n}\n","/**\n * Sets which node is used as the output of a parent subnet node.\n *\n * @remarks\n * Can only be created inside a subnet ANIM node.\n *\n */\nimport {TypedAnimNode} from './_Base';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {NetworkChildNodeType} from '../../poly/NodeContext';\nimport {TimelineBuilder} from '../../../core/animation/TimelineBuilder';\nclass AnimSubnetOutputSopParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new AnimSubnetOutputSopParamsConfig();\n\nexport class SubnetOutputAnimNode extends TypedAnimNode<AnimSubnetOutputSopParamsConfig> {\n\toverride paramsConfig = ParamsConfig;\n\tstatic override type(): Readonly<NetworkChildNodeType.OUTPUT> {\n\t\treturn NetworkChildNodeType.OUTPUT;\n\t}\n\n\toverride initializeNode() {\n\t\tthis.io.inputs.setCount(1);\n\t\tthis.io.outputs.setHasNoOutput();\n\n\t\tthis.lifecycle.onAfterAdded(this._setParentDirtyBound);\n\t\tthis.addPostDirtyHook('makeParentDirty', this._setParentDirtyBound);\n\t}\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._setParentDirty();\n\t}\n\n\toverride cook(inputContents: TimelineBuilder[]) {\n\t\tconst timelineBuilder = inputContents[0];\n\t\tthis.setTimelineBuilder(timelineBuilder);\n\t}\n\n\tprivate _setParentDirtyBound = this._setParentDirty.bind(this);\n\tprivate _setParentDirty() {\n\t\tthis.parent()?.setDirty();\n\t}\n}\n","import {TypedNode} from '../_Base';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {FlagsControllerB} from '../utils/FlagsController';\nimport {TimelineBuilder} from '../../../core/animation/TimelineBuilder';\nimport {ModuleName} from '../../poly/registers/modules/Common';\n\n/**\n *\n *\n * TypedAnimNode is the base class for all nodes that process animations. This inherits from [TypedNode](/docs/api/TypedNode).\n *\n */\nexport class TypedAnimNode<K extends NodeParamsConfig> extends TypedNode<NodeContext.ANIM, K> {\n\tpublic override readonly flags: FlagsControllerB = new FlagsControllerB(this);\n\n\tstatic override context(): NodeContext {\n\t\treturn NodeContext.ANIM;\n\t}\n\toverride requiredModules() {\n\t\treturn [ModuleName.GSAP];\n\t}\n\n\toverride initializeBaseNode() {\n\t\tthis.io.outputs.setHasOneOutput();\n\t}\n\tprotected setTimelineBuilder(timeline_builder: TimelineBuilder) {\n\t\tthis._setContainer(timeline_builder);\n\t}\n}\n\nexport type BaseAnimNodeType = TypedAnimNode<NodeParamsConfig>;\nexport class BaseAnimNodeClass extends TypedAnimNode<NodeParamsConfig> {}\n","import {Vector2} from 'three';\n\nexport class CoreVector {\n\tstatic isVector2Valid(vector: Vector2): boolean {\n\t\treturn !isNaN(vector.x) && !isNaN(vector.y) && isFinite(vector.x) && isFinite(vector.y);\n\t}\n}\n","import {Vector2} from 'three';\nimport {CoreVector} from '../../../../core/Vector';\nimport {EventContext} from '../../../scene/utils/events/_BaseEventsController';\n\nexport interface CursorOffset {\n\toffsetX: number;\n\toffsetY: number;\n}\nexport interface CursorPage {\n\tclientX: number;\n\tclientY: number;\n}\n\nclass MouseHelperClass {\n\tprivate static _instance: MouseHelperClass;\n\n\tstatic instance() {\n\t\treturn (this._instance = this._instance || new MouseHelperClass());\n\t}\n\tprivate constructor() {\n\t\twindow.addEventListener('resize', this._resetCacheBound);\n\t\tdocument.addEventListener('scroll', this._resetCacheBound);\n\t}\n\tprivate _rectByCanvas: Map<HTMLCanvasElement, DOMRect> = new Map();\n\n\tsetEventOffset(cursorPage: CursorPage, canvas: HTMLCanvasElement, offset: CursorOffset) {\n\t\tlet rect = this._rectByCanvas.get(canvas);\n\t\tif (!rect) {\n\t\t\trect = canvas.getBoundingClientRect();\n\t\t\tthis._rectByCanvas.set(canvas, rect);\n\t\t}\n\t\t// this function used to use cursorPage.pageX/pageY\n\t\t// but this was returning an incorrect position when the page was scrolled\n\t\toffset.offsetX = cursorPage.clientX - rect.left;\n\t\toffset.offsetY = cursorPage.clientY - rect.top;\n\t}\n\n\tprivate _resetCacheBound = this._resetCache.bind(this);\n\tprivate _resetCache() {\n\t\tthis._rectByCanvas.clear();\n\t}\n}\n\nconst MouseHelper = MouseHelperClass.instance();\n\nconst _offset: CursorOffset = {offsetX: 0, offsetY: 0};\n\nexport class CursorHelper {\n\t// protected _cursor: Vector2 = new Vector2();\n\n\tsetCursorForCPU(context: EventContext<MouseEvent | DragEvent | PointerEvent | TouchEvent>, target: Vector2) {\n\t\tthis.setCursor(context, target);\n\t\ttarget.x = target.x * 2 - 1;\n\t\ttarget.y = -target.y * 2 + 1;\n\t}\n\tsetCursorForGPU(context: EventContext<MouseEvent | DragEvent | PointerEvent | TouchEvent>, target: Vector2) {\n\t\tthis.setCursor(context, target);\n\t\ttarget.y = 1 - target.y;\n\t}\n\n\tprivate setCursor(context: EventContext<MouseEvent | DragEvent | PointerEvent | TouchEvent>, target: Vector2) {\n\t\tconst canvas = context.viewer?.canvas();\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = context.event;\n\t\tif (event instanceof PointerEvent || event instanceof MouseEvent || event instanceof DragEvent) {\n\t\t\tMouseHelper.setEventOffset(event, canvas, _offset);\n\t\t}\n\t\tif (\n\t\t\twindow.TouchEvent /* check first that TouchEvent is defined, since it does on firefox desktop */ &&\n\t\t\tevent instanceof TouchEvent\n\t\t) {\n\t\t\tconst touch = event.touches[0];\n\t\t\t// no touch for touchend events\n\t\t\tif (touch) {\n\t\t\t\tMouseHelper.setEventOffset(touch, canvas, _offset);\n\t\t\t}\n\t\t}\n\t\tthis._updateFromCursor(canvas, target);\n\t}\n\tprivate _updateFromCursor(canvas: HTMLCanvasElement, target: Vector2) {\n\t\tif (canvas.offsetWidth <= 0 || canvas.offsetHeight <= 0) {\n\t\t\tconsole.warn('zero size canvas', canvas);\n\t\t\t// the canvas can have a size of 0 if it has been removed from the scene\n\t\t\ttarget.set(0, 0);\n\t\t} else {\n\t\t\ttarget.x = _offset.offsetX / canvas.offsetWidth;\n\t\t\ttarget.y = _offset.offsetY / canvas.offsetHeight;\n\t\t\t// this._remapCursor();\n\t\t}\n\t\t// there can be some conditions leading to an infinite mouse number, so we check here what we got\n\t\tif (!CoreVector.isVector2Valid(target)) {\n\t\t\tconsole.warn('invalid number detected');\n\t\t\tconsole.warn(target.toArray(), _offset.offsetX, _offset.offsetY, canvas.offsetWidth, canvas.offsetHeight);\n\t\t\treturn;\n\t\t}\n\t}\n\t// protected _remapCursor() {}\n}\n","import {ShaderMaterial, Material, IUniform, Shader} from 'three';\nimport {PolyScene} from '../../../../../scene/PolyScene';\nimport {GlParamConfig, GlParamConfigJSON} from '../../utils/GLParamConfig';\nimport {ParamType} from '../../../../../poly/ParamType';\nimport {PolyDictionary} from '../../../../../../types/GlobalTypes';\nimport {IUniformTexture} from '../../../../utils/code/gl/Uniforms';\n\nexport interface OnBeforeCompileData {\n\tvertexShader: string;\n\tfragmentShader: string;\n\tparamConfigs: readonly GlParamConfig<ParamType>[];\n\t// additionalUniformNames: string[];\n\tadditionalTextureUniforms: PolyDictionary<IUniformTexture>;\n\ttimeDependent: boolean;\n\tresolutionDependent: boolean;\n\traymarchingLightsWorldCoordsDependent: boolean;\n}\ninterface CloneOptions {\n\tclonedParamConfigName: string;\n\tclonedParamConfig?: GlParamConfig<ParamType>;\n}\nexport function cloneOnBeforeCompileData(data: OnBeforeCompileData, options: CloneOptions): OnBeforeCompileData {\n\tconst {clonedParamConfigName} = options;\n\tlet {clonedParamConfig} = options;\n\tconst json = OnBeforeCompileDataConverter.toJSON(data);\n\tconst clonedData = OnBeforeCompileDataConverter.fromJSON(json);\n\n\tconst preservedParamConfigs = data.paramConfigs.filter((p) => p.name() != clonedParamConfigName);\n\n\tif (!clonedParamConfig) {\n\t\tclonedParamConfig = clonedData.paramConfigs.find((p) => p.name() == clonedParamConfigName);\n\t}\n\n\tconst paramConfigs = preservedParamConfigs;\n\tif (clonedParamConfig) {\n\t\tparamConfigs.push(clonedParamConfig);\n\t}\n\treturn {\n\t\t...clonedData,\n\t\tparamConfigs,\n\t};\n}\n\n// from https://www.typescriptlang.org/docs/handbook/2/mapped-types.html\ntype RemoveParamConfigField<Type> = {\n\t[Property in keyof Type as Exclude<Property, 'paramConfigs' | 'additionalTextureUniforms'>]: Type[Property];\n};\nexport interface OnBeforeCompileDataJSON extends RemoveParamConfigField<OnBeforeCompileData> {\n\tparamConfigs: GlParamConfigJSON<ParamType>[];\n}\ntype OnBeforeCompile = (shader: Shader) => void;\n\nexport function assignUniformViaUserData(material: Material, uniformName: string, newUniform: IUniformTexture) {\n\tconst uniforms = MaterialUserDataUniforms.getUniforms(material);\n\tif (uniforms) {\n\t\tconst currentUniform = uniforms[uniformName];\n\t\tif (currentUniform) {\n\t\t\tcurrentUniform.value = newUniform.value;\n\t\t} else {\n\t\t\tuniforms[uniformName] = newUniform;\n\t\t}\n\t} else {\n\t\t// if there are no uniforms, the material has not been compiled yet.\n\t\t// we therefore must add those to userData so that they are picked up in onBeforeCompile.\n\t\t// For instance, this can be the case for materials assigned to particles, when run without assemblers.\n\t\t// Since the assembler is responsible for assigning the additionalTextures, this is not done when they are not loaded.\n\t\t// But for this to work, we also need to make sure that the persistedConfig will not contain the uniforms in the userData\n\t\t// so those must be stripped out when saving it\n\t\tOnBeforeCompileDataHandler.addAdditionalTexture(material, uniformName, newUniform);\n\t}\n}\n\nexport class MaterialUserDataUniforms {\n\tstatic getUniforms(material: Material): PolyDictionary<IUniform> | undefined {\n\t\treturn material.userData?.uniforms || (material as ShaderMaterial).uniforms;\n\t}\n\tstatic setUniforms(material: Material, uniforms: PolyDictionary<IUniform>) {\n\t\tmaterial.userData.uniforms = uniforms;\n\t}\n\tstatic removeUniforms(material: Material) {\n\t\tconst uniforms = this.getUniforms(material);\n\t\tif (uniforms) {\n\t\t\tconst userData = material.userData;\n\t\t\tdelete userData['uniforms'];\n\t\t}\n\t\treturn uniforms;\n\t}\n}\n\nexport function assignOnBeforeCompileDataAndFunction(scene: PolyScene, material: Material, data: OnBeforeCompileData) {\n\tOnBeforeCompileDataHandler.setData(material, data);\n\tmaterial.onBeforeCompile = _createOnBeforeCompile(scene, material);\n\t// it is important that customProgramCacheKey is also set when there are no assemblers\n\t// as otherwise the material will all use the same key, and will override each other\n\tconst key = `${material.uuid}:${performance.now()}`;\n\tmaterial.customProgramCacheKey = () => key;\n}\ninterface CopyParams {\n\tsrc: Material;\n\tdest: Material;\n\tshareCustomUniforms: boolean;\n}\nexport function copyOnBeforeCompileData(scene: PolyScene, params: CopyParams) {\n\tconst {src, dest, shareCustomUniforms} = params;\n\tconst data = OnBeforeCompileDataHandler.getData(src);\n\tif (data) {\n\t\tfunction cloneData(data: OnBeforeCompileData) {\n\t\t\tconst json = OnBeforeCompileDataConverter.toJSON(data);\n\t\t\treturn OnBeforeCompileDataConverter.fromJSON(json);\n\t\t}\n\t\tconst newData = shareCustomUniforms ? data : cloneData(data);\n\t\tassignOnBeforeCompileDataAndFunction(scene, dest, newData);\n\t}\n}\n\nfunction _createOnBeforeCompile(scene: PolyScene, material: Material): OnBeforeCompile {\n\tconst onBeforeCompile = (shader: Shader) => {\n\t\tconst data = OnBeforeCompileDataHandler.getData(material);\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tconst {\n\t\t\tvertexShader,\n\t\t\tfragmentShader,\n\t\t\tparamConfigs,\n\t\t\tadditionalTextureUniforms,\n\t\t\ttimeDependent,\n\t\t\tresolutionDependent,\n\t\t\traymarchingLightsWorldCoordsDependent,\n\t\t} = data;\n\t\tshader.vertexShader = vertexShader;\n\t\tshader.fragmentShader = fragmentShader;\n\t\tscene.uniformsController.addUniforms(shader.uniforms, {\n\t\t\tparamConfigs,\n\t\t\tadditionalTextureUniforms,\n\t\t\ttimeDependent,\n\t\t\tresolutionDependent,\n\t\t\traymarchingLightsWorldCoordsDependent,\n\t\t});\n\n\t\t// also add to the material itself so that the material is easy to debug in the console, as well as in tests\n\t\tconst shaderMaterial = material as ShaderMaterial;\n\t\tshaderMaterial.vertexShader = shader.vertexShader;\n\t\tshaderMaterial.fragmentShader = shader.fragmentShader;\n\t\tMaterialUserDataUniforms.setUniforms(material, shader.uniforms);\n\t\t// saving the compilations count here\n\t\t// seems to have side effects and make tests fail.\n\t\t// so not using it for now\n\t\t// shaderMaterial.userData.compilationsCount = shaderMaterial.userData.compilationsCount || 0;\n\t\t// shaderMaterial.userData.compilationsCount++;\n\t};\n\n\treturn onBeforeCompile;\n}\n\nexport class OnBeforeCompileDataHandler {\n\tstatic setData(material: Material, data: OnBeforeCompileData) {\n\t\tmaterial.userData.onBeforeCompileData = data;\n\t}\n\tstatic addAdditionalTexture(material: Material, uniformName: string, newUniform: IUniformTexture) {\n\t\tconst data = this.getData(material);\n\t\tif (data) {\n\t\t\tconst currentUniform = data.additionalTextureUniforms[uniformName];\n\t\t\tif (currentUniform == null) {\n\t\t\t\tdata.additionalTextureUniforms[uniformName] = newUniform;\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn('no data found on material', material);\n\t\t}\n\t}\n\tstatic getData(material: Material): OnBeforeCompileData | undefined {\n\t\treturn material.userData.onBeforeCompileData;\n\t}\n\tstatic removeData(material: Material): OnBeforeCompileData | undefined {\n\t\tconst data = this.getData(material);\n\t\tif (data) {\n\t\t\tconst userData = material.userData;\n\t\t\tdelete userData['onBeforeCompileData'];\n\t\t}\n\t\treturn data;\n\t}\n}\n\nexport class OnBeforeCompileDataConverter {\n\tstatic toJSON(onBeforeCompileData: OnBeforeCompileData): OnBeforeCompileDataJSON {\n\t\tconst onBeforeCompileDataJSON: OnBeforeCompileDataJSON = {\n\t\t\tvertexShader: onBeforeCompileData.vertexShader,\n\t\t\tfragmentShader: onBeforeCompileData.fragmentShader,\n\t\t\ttimeDependent: onBeforeCompileData.timeDependent,\n\t\t\tresolutionDependent: onBeforeCompileData.resolutionDependent,\n\t\t\traymarchingLightsWorldCoordsDependent: onBeforeCompileData.raymarchingLightsWorldCoordsDependent,\n\t\t\tparamConfigs: onBeforeCompileData.paramConfigs.map((pc) => pc.toJSON()),\n\t\t};\n\t\treturn onBeforeCompileDataJSON;\n\t}\n\tstatic fromJSON(json: OnBeforeCompileDataJSON): OnBeforeCompileData {\n\t\tconst onBeforeCompileData: OnBeforeCompileData = {\n\t\t\t...json,\n\t\t\tadditionalTextureUniforms: {},\n\t\t\tparamConfigs: json.paramConfigs.map((json) => GlParamConfig.fromJSON(json)),\n\t\t};\n\t\treturn onBeforeCompileData;\n\t}\n}\n","import {IUniform, Color, Vector2, Vector3, Vector4} from 'three';\nimport {ParamType} from '../../../../poly/ParamType';\nimport {ParamInitValuesTypeMap} from '../../../../params/types/ParamInitValuesTypeMap';\nimport {BaseNodeType} from '../../../_Base';\nimport {BaseParamType} from '../../../../params/_Base';\nimport {TypeAssert} from '../../../../poly/Assert';\nimport {RampParam} from '../../../../params/Ramp';\nimport {BaseParamConfig} from '../../../utils/code/configs/BaseParamConfig';\nimport {NodePathParam} from '../../../../params/NodePath';\nimport {NodeContext} from '../../../../poly/NodeContext';\n\nexport interface GlParamConfigJSON<T extends ParamType> {\n\ttype: T;\n\tname: string;\n\tdefaultValue: ParamInitValuesTypeMap[T];\n\tuniformName: string;\n}\nexport class GlParamConfig<T extends ParamType> extends BaseParamConfig<T> {\n\tprivate _uniform: IUniform | undefined;\n\n\tconstructor(_type: T, _name: string, _defaultValue: ParamInitValuesTypeMap[T], private _uniformName: string) {\n\t\tsuper(_type, _name, _defaultValue);\n\t}\n\n\ttoJSON(): GlParamConfigJSON<T> {\n\t\treturn {\n\t\t\ttype: this._type,\n\t\t\tname: this._name,\n\t\t\tdefaultValue: this._defaultValue,\n\t\t\tuniformName: this._uniformName,\n\t\t};\n\t}\n\tstatic fromJSON(json: GlParamConfigJSON<ParamType>): GlParamConfig<ParamType> {\n\t\treturn new GlParamConfig(json.type, json.name, json.defaultValue, json.uniformName);\n\t}\n\n\tuniformName() {\n\t\treturn this._uniformName;\n\t}\n\n\tuniform() {\n\t\treturn (this._uniform = this._uniform || this._createUniform());\n\t}\n\n\tprivate _createUniform() {\n\t\treturn GlParamConfig.uniformByType(this._type);\n\t}\n\n\tprotected override _callback(node: BaseNodeType, param: BaseParamType) {\n\t\tGlParamConfig.callback(param, this.uniform());\n\t\t// switch (param.type) {\n\t\t// \tcase ParamType.RAMP:\n\t\t// \t\tthis.uniform.value = (param as RampParam).rampTexture();\n\t\t// \t\treturn;\n\t\t// \tcase ParamType.OPERATOR_PATH:\n\t\t// \t\tGlParamConfig.set_uniform_value_from_texture(param as OperatorPathParam, this.uniform);\n\t\t// \t\treturn;\n\t\t// \tdefault:\n\t\t// \t\tthis.uniform.value = param.value;\n\t\t// }\n\t}\n\n\tstatic callback(param: BaseParamType, uniform: IUniform) {\n\t\tswitch (param.type()) {\n\t\t\tcase ParamType.RAMP:\n\t\t\t\tuniform.value = (param as RampParam).rampTexture();\n\t\t\t\treturn;\n\t\t\t// case ParamType.OPERATOR_PATH:\n\t\t\t// \tGlParamConfig.set_uniform_value_from_texture(param as OperatorPathParam, uniform);\n\t\t\t// \treturn;\n\t\t\tcase ParamType.NODE_PATH:\n\t\t\t\tGlParamConfig.setUniformValueFromTextureFromNodePathParam(param as NodePathParam, uniform);\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tuniform.value = param.value;\n\t\t}\n\t}\n\n\t// TODO: refactor that to use the default values map?\n\tstatic uniformByType(type: ParamType): IUniform {\n\t\tswitch (type) {\n\t\t\tcase ParamType.BOOLEAN:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.BUTTON:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.COLOR:\n\t\t\t\treturn {value: new Color(0, 0, 0)};\n\t\t\tcase ParamType.FLOAT:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.FOLDER:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.INTEGER:\n\t\t\t\treturn {value: 0};\n\t\t\t// case ParamType.OPERATOR_PATH:\n\t\t\t// \treturn {value: 0};\n\t\t\tcase ParamType.NODE_PATH:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.PARAM_PATH:\n\t\t\t\treturn {value: 0};\n\t\t\t// case ParamType.STRING: return {type: 't', value: null} // new Texture()}\n\t\t\tcase ParamType.RAMP:\n\t\t\t\treturn {value: null}; // new Texture()}\n\t\t\tcase ParamType.STRING:\n\t\t\t\treturn {value: null};\n\t\t\tcase ParamType.VECTOR2:\n\t\t\t\treturn {value: new Vector2(0, 0)};\n\t\t\tcase ParamType.VECTOR3:\n\t\t\t\treturn {value: new Vector3(0, 0, 0)};\n\t\t\tcase ParamType.VECTOR4:\n\t\t\t\treturn {value: new Vector4(0, 0, 0, 0)};\n\t\t}\n\t\tTypeAssert.unreachable(type);\n\t}\n\n\t// private static set_uniform_value_from_texture(param: OperatorPathParam, uniform: IUniform) {\n\t// \tconst found_node = param.found_node();\n\t// \tif (found_node) {\n\t// \t\tif (found_node.isDirty()) {\n\t// \t\t\tfound_node.compute().then((container) => {\n\t// \t\t\t\tconst texture = container.texture();\n\t// \t\t\t\tuniform.value = texture;\n\t// \t\t\t});\n\t// \t\t} else {\n\t// \t\t\tconst container = found_node.containerController.container();\n\t// \t\t\tconst texture = container.texture();\n\t// \t\t\tuniform.value = texture;\n\t// \t\t}\n\t// \t} else {\n\t// \t\tuniform.value = null;\n\t// \t}\n\t// }\n\tprivate static async setUniformValueFromTextureFromNodePathParam(param: NodePathParam, uniform: IUniform) {\n\t\tif (param.isDirty()) {\n\t\t\tawait param.compute();\n\t\t}\n\t\tconst node = param.value.nodeWithContext(NodeContext.COP);\n\t\tif (node) {\n\t\t\tif (node.isDirty()) {\n\t\t\t\tawait node.compute();\n\t\t\t}\n\t\t\tconst container = node.containerController.container();\n\t\t\tconst texture = container.texture();\n\t\t\tuniform.value = texture;\n\t\t} else {\n\t\t\tuniform.value = null;\n\t\t}\n\t}\n}\n","import {PolyScene} from '../../../../scene/PolyScene';\nimport {BaseNodeType} from '../../../../nodes/_Base';\nimport {TimeController} from '../../../../scene/utils/TimeController';\nimport {WatchStopHandle} from '@vue-reactivity/watch';\n\ntype OnDisposeCallback = () => void;\nexport class BaseEvaluator {\n\tprotected scene: PolyScene;\n\tprotected timeController: TimeController;\n\tprotected _watchStopHandles: WatchStopHandle[] = [];\n\tconstructor(public readonly node: BaseNodeType) {\n\t\tthis.scene = node.scene();\n\t\tthis.timeController = this.scene.timeController;\n\t}\n\n\t// dispose logic\n\t_onDisposeCallbacks?: OnDisposeCallback[];\n\tonDispose(callback: OnDisposeCallback) {\n\t\tthis._onDisposeCallbacks = this._onDisposeCallbacks || [];\n\t\tthis._onDisposeCallbacks.push(callback);\n\t}\n\tdispose() {\n\t\tconst _disposeWatchEffects = () => {\n\t\t\tif (!this._watchStopHandles) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet watchStopHandle: WatchStopHandle | undefined;\n\t\t\twhile ((watchStopHandle = this._watchStopHandles.pop())) {\n\t\t\t\twatchStopHandle();\n\t\t\t}\n\t\t};\n\n\t\tconst _runOnDisposeCallback = () => {\n\t\t\tif (!this._onDisposeCallbacks) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet callback: OnDisposeCallback | undefined;\n\t\t\twhile ((callback = this._onDisposeCallbacks.pop())) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\t_runOnDisposeCallback();\n\t\t_disposeWatchEffects();\n\t}\n}\n","// shared by ALL objects\n// shared between 2 triggers nodes depending on it\n// function getSin(object){\n// \treturn Math.sin(time)\n// }\n\nimport {Object3D} from 'three';\nimport {JsType} from '../../../../../poly/registers/nodes/types/Js';\nimport {EventData} from '../../../../../../core/event/EventData';\nimport {ActorBuilderNode} from '../../../../../scene/utils/ActorsManager';\nimport {BaseEvaluator} from '../_BaseEvaluator';\nimport {CoreObjectType, ObjectContent} from '../../../../../../core/geometry/ObjectContent';\n// import {watch} from '../../../../../../core/reactivity/CoreReactivity';\n// import {getObjectAttributeRef} from '../../../../../../core/reactivity/ObjectAttributeReactivity';\n// import {ref} from '../../../../../../core/reactivity';\n\n// // updateObjectPosition\n// function runUpdatePosition(object){\n\n// \tobject.position.y = getSin(object)\n// \tobject.updateMatrix();\n\n// \t// fire trigger\n// \trunUpdatePosition(object)\n// }\n\n// // updateObjectRotation\n// function runUpdateRotation(object){\n\n// \tobject.rotation.y = getSin(object)\n// \tobject.updateMatrix();\n// }\n\n//////////////\n// import {Ref, ref, computed} from '@vue/reactivity';\n// import {Vector3, Object3D} from 'three';\n// import {PolyScene} from '../../../../../scene/PolyScene';\n// import {ActorNodeTriggerContext} from '../../../../actor/_Base';\n// const _v3 = new Vector3();\n// export class JsActorEvaluator {\n// \tpublic globalsTime = ref(0);\n// \tpublic targetObject: Ref<Object3D | null> = ref(null);\n// \t// public sinNodeValue = computed(()=>Math.sin(globalsTime.value)); // only depends on time\n// \tpublic sinNodePos = computed(() => {\n// \t\t// _var.y = sinNodeValue.value;\n// \t\tconst globalsTime = this.scene.timeController.timeUniform();\n// \t\t_v3.y = Math.sin(globalsTime.value); // only depends on time\n// \t\treturn _v3;\n// \t});\n// \t// public getMaterial = computed(()=> ... )// depends on a string\n// \tconstructor(private scene: PolyScene) {}\n\n// \t// time could be a reactive element inside the timeController\n// \ttriggerOnTick(context: ActorNodeTriggerContext) {\n// \t\tconst Object3D = this.targetObject.value!;\n// \t\tthis.targetObject.value = Object3D;\n\n// \t\t//\n// \t\tObject3D.position.copy(this.sinNodePos.value);\n// \t\t// object.updateMatrix(); // not generated?\n\n// \t\tthis.trigger2(context);\n// \t}\n// \ttrigger2(context: ActorNodeTriggerContext) {\n// \t\tconst Object3D = this.targetObject.value!;\n// \t\tthis.targetObject.value = Object3D; // does not trigger a change\n\n// \t\tObject3D.rotation.setFromVector3(this.sinNodePos.value);\n// \t\tObject3D.updateMatrix();\n// \t}\n// }\nexport interface EvaluationContext {\n\tObject3D: Object3D;\n}\ntype TriggerCallback = () => void;\n// type KeyboardTriggerCallback = (event: KeyboardEvent) => void;\nexport type EvaluatorKeyboardMethod = JsType.ON_KEY | JsType.ON_KEYDOWN | JsType.ON_KEYPRESS | JsType.ON_KEYUP;\nexport type EvaluatorPointerMethod =\n\t// | JsType.ON_OBJECT_CLICK\n\t// | 'onClick'\n\t| 'onContextMenu'\n\t// | JsType.ON_OBJECT_HOVER\n\t// | 'onPointerdown'\n\t| 'onPointermove'\n\t// | 'onPointerup'\n\t// | JsType.ON_OBJECT_POINTERDOWN\n\t// | JsType.ON_OBJECT_POINTERUP\n\t| JsType.ON_POINTERDOWN\n\t| JsType.ON_POINTERUP;\n\nexport type EvaluatorMethodName =\n\t| JsType.ON_KEY\n\t| JsType.ON_KEYDOWN\n\t| JsType.ON_KEYPRESS\n\t| JsType.ON_KEYUP\n\t// | JsType.ON_MANUAL_TRIGGER\n\t| JsType.ON_MAPBOX_CAMERA_MOVE\n\t| JsType.ON_MAPBOX_CAMERA_MOVE_START\n\t| JsType.ON_MAPBOX_CAMERA_MOVE_END\n\t| JsType.ON_OBJECT_ATTRIBUTE_UPDATE\n\t// | JsType.ON_OBJECT_CLICK\n\t// | 'onClick'\n\t| 'onContextMenu'\n\t| JsType.ON_OBJECT_DISPATCH_EVENT\n\t// | JsType.ON_OBJECT_HOVER\n\t// | JsType.ON_OBJECT_POINTERDOWN\n\t// | JsType.ON_OBJECT_POINTERUP\n\t| JsType.ON_PERFORMANCE_CHANGE\n\t| JsType.ON_POINTERDOWN\n\t| 'onPointermove'\n\t| JsType.ON_POINTERUP\n\t| JsType.ON_SCENE_PAUSE\n\t| JsType.ON_SCENE_PLAY\n\t| JsType.ON_SCENE_RESET\n\t| JsType.ON_TICK\n\t| JsType.ON_VIDEO_EVENT\n\t| JsType.ON_WEBXR_CONTROLLER_EVENT;\nexport const EVALUATOR_METHOD_NAMES: Array<EvaluatorMethodName> = [\n\tJsType.ON_KEY,\n\tJsType.ON_KEYDOWN,\n\tJsType.ON_KEYPRESS,\n\tJsType.ON_KEYUP,\n\t// JsType.ON_MANUAL_TRIGGER,\n\tJsType.ON_MAPBOX_CAMERA_MOVE,\n\tJsType.ON_MAPBOX_CAMERA_MOVE_START,\n\tJsType.ON_MAPBOX_CAMERA_MOVE_END,\n\tJsType.ON_OBJECT_ATTRIBUTE_UPDATE,\n\t// JsType.ON_OBJECT_CLICK,\n\t// 'onClick',\n\tJsType.ON_OBJECT_DISPATCH_EVENT,\n\t// JsType.ON_OBJECT_HOVER,\n\t// JsType.ON_OBJECT_POINTERDOWN,\n\t// JsType.ON_OBJECT_POINTERUP,\n\tJsType.ON_PERFORMANCE_CHANGE,\n\tJsType.ON_POINTERDOWN,\n\t'onPointermove',\n\tJsType.ON_POINTERUP,\n\tJsType.ON_SCENE_PAUSE,\n\tJsType.ON_SCENE_PLAY,\n\tJsType.ON_SCENE_RESET,\n\tJsType.ON_TICK,\n\tJsType.ON_VIDEO_EVENT,\n\tJsType.ON_WEBXR_CONTROLLER_EVENT,\n];\n\nexport interface EvaluatorEventData extends EventData {\n\tjsType: JsType;\n\t// methodName: EvaluatorMethodName;\n}\nexport class ActorEvaluator extends BaseEvaluator {\n\tconstructor(\n\t\tpublic override readonly node: ActorBuilderNode,\n\t\t// make sure the name of this member 'object3D'\n\t\t// remains consistent with this.object3D used in the ActorAssembler\n\t\tpublic readonly object3D: ObjectContent<CoreObjectType>\n\t) {\n\t\tsuper(node);\n\t}\n\n\tonKey?: TriggerCallback;\n\tonKeydown?: TriggerCallback;\n\tonKeypress?: TriggerCallback;\n\tonKeyup?: TriggerCallback;\n\tonPlayerEvent?: TriggerCallback;\n\t// onManualTrigger?: TriggerCallback;\n\tonMapboxCameraMove?: TriggerCallback;\n\tonMapboxCameraMoveStart?: TriggerCallback;\n\tonMapboxCameraMoveEnd?: TriggerCallback;\n\tonObjectAttributeUpdate?: TriggerCallback;\n\tonObjectClick?: TriggerCallback;\n\tonObjectDispatchEvent?: TriggerCallback;\n\tonObjectHover?: TriggerCallback;\n\tonObjectPointerdown?: TriggerCallback;\n\tonObjectPointerup?: TriggerCallback;\n\tonPerformanceChange?: TriggerCallback;\n\tonPointerdown?: TriggerCallback;\n\tonPointerup?: TriggerCallback;\n\tonScenePause?: TriggerCallback;\n\tonScenePlay?: TriggerCallback;\n\tonSceneReset?: TriggerCallback;\n\tonTick?: TriggerCallback;\n\tonVideoEvent?: TriggerCallback;\n\tonWebXRControllerEvent?: TriggerCallback;\n}\n","import {EvaluatorEventData, ActorEvaluator, EvaluatorMethodName} from './ActorEvaluator';\nimport {CoreObjectType, ObjectContent} from '../../../../../../core/geometry/ObjectContent';\nimport {getObjectMethodNames} from '../../../../../../core/ObjectUtils';\n\ntype GeneratorFunction = (object: ObjectContent<CoreObjectType>) => ActorEvaluator;\ntype EvaluatorCallback = (evaluator: ActorEvaluator) => void;\n\nconst evaluatorGeneratorByObject: WeakMap<ObjectContent<CoreObjectType>, Set<ActorEvaluatorGenerator>> = new WeakMap();\nfunction registerGeneratorForObject(object: ObjectContent<CoreObjectType>, generator: ActorEvaluatorGenerator) {\n\tlet set = evaluatorGeneratorByObject.get(object);\n\tif (!set) {\n\t\tset = new Set();\n\t\tevaluatorGeneratorByObject.set(object, set);\n\t}\n\tset.add(generator);\n}\nfunction deregisterGeneratorForObject(object: ObjectContent<CoreObjectType>, generator: ActorEvaluatorGenerator) {\n\tlet set = evaluatorGeneratorByObject.get(object);\n\tif (!set) {\n\t\treturn;\n\t}\n\tset.delete(generator);\n}\nexport function deregisterGeneratorsForObject(object: ObjectContent<CoreObjectType>) {\n\tlet set = evaluatorGeneratorByObject.get(object);\n\tif (!set) {\n\t\treturn;\n\t}\n\tset.forEach((evaluatorGenerator) => {\n\t\tevaluatorGenerator.disposeEvaluator(object);\n\t});\n\n\tevaluatorGeneratorByObject.delete(object);\n}\nexport function generatorsForObject(object: ObjectContent<CoreObjectType>) {\n\treturn evaluatorGeneratorByObject.get(object);\n}\n\nconst NOT_STORABLE_METHOD_NAMES = new Set([\n\t'constructor',\n\t'onDispose',\n\t'dispose',\n\t'__defineGetter__',\n\t'__defineSetter__',\n\t'hasOwnProperty',\n\t'__lookupGetter__',\n\t'__lookupSetter__',\n\t'isPrototypeOf',\n\t'propertyIsEnumerable',\n\t'toString',\n\t'valueOf',\n\t'toLocaleString',\n]);\n\nexport class ActorEvaluatorGenerator {\n\t// the possible method names are not only EvaluatorMethodName,\n\t// but can be any string, such as \"onManualTrigger1\"\n\tprivate _expectedEvaluatorMethodNames: Set<string> = new Set();\n\tconstructor(private _func: GeneratorFunction) {}\n\tprivate _evaluatorByObject: Map<ObjectContent<CoreObjectType>, ActorEvaluator> = new Map();\n\teventDatas?: Set<EvaluatorEventData>;\n\tprivate _createEvaluator(object: ObjectContent<CoreObjectType>) {\n\t\treturn this._func(object);\n\t}\n\tsetExpectedEvaluatorMethodNames(dummyEvaluator: ActorEvaluator) {\n\t\tthis._expectedEvaluatorMethodNames.clear();\n\t\tconst methodNames = getObjectMethodNames(dummyEvaluator);\n\t\tfor (const methodName of methodNames) {\n\t\t\tif ((dummyEvaluator as any)[methodName] && !NOT_STORABLE_METHOD_NAMES.has(methodName)) {\n\t\t\t\tthis._expectedEvaluatorMethodNames.add(methodName);\n\t\t\t}\n\t\t}\n\t}\n\thasExpectedEvaluatorMethodName(methodName: EvaluatorMethodName): boolean {\n\t\treturn this._expectedEvaluatorMethodNames.has(methodName);\n\t}\n\tsize(): number {\n\t\treturn this._evaluatorByObject.size;\n\t}\n\tdisposeEvaluator(object: ObjectContent<CoreObjectType>) {\n\t\tconst evaluator = this._evaluatorByObject.get(object);\n\t\tif (!evaluator) {\n\t\t\treturn;\n\t\t}\n\t\tevaluator.dispose();\n\t\tthis._evaluatorByObject.delete(object);\n\t}\n\tfindOrCreateEvaluator(object: ObjectContent<CoreObjectType>) {\n\t\tlet evaluator = this._evaluatorByObject.get(object);\n\t\tif (!evaluator) {\n\t\t\tevaluator = this._createEvaluator(object);\n\t\t\tthis._evaluatorByObject.set(object, evaluator);\n\t\t\tregisterGeneratorForObject(object, this);\n\t\t}\n\t\treturn evaluator;\n\t}\n\ttraverseEvaluator(callback: EvaluatorCallback) {\n\t\tthis._evaluatorByObject.forEach(callback);\n\t}\n\tclearObjects() {\n\t\tthis._evaluatorByObject.forEach((evaluator, object) => {\n\t\t\tevaluator.dispose();\n\t\t\tderegisterGeneratorForObject(object, this);\n\t\t});\n\n\t\tthis._evaluatorByObject.clear();\n\t}\n}\n","import {JsType} from './../../../../poly/registers/nodes/types/Js';\nimport {NodeContext} from './../../../../poly/NodeContext';\nimport {AssemblerControllerNode} from '../Controller';\nimport {BaseJsNodeType} from '../../_Base';\nimport {BaseJsShaderAssembler} from '../assemblers/_Base';\n\nexport class JsNodeFinder {\n\tstatic findOutputNodes(node: AssemblerControllerNode<BaseJsShaderAssembler>) {\n\t\tconst output = node.nodesByType(JsType.OUTPUT);\n\t\tconst outputAmbientLight = node.nodesByType(JsType.OUTPUT_AMBIENT_LIGHT);\n\t\tconst outputAreaLight = node.nodesByType(JsType.OUTPUT_AREA_LIGHT);\n\t\tconst outputDirectionalLight = node.nodesByType(JsType.OUTPUT_DIRECTIONAL_LIGHT);\n\t\tconst outputHemisphereLight = node.nodesByType(JsType.OUTPUT_HEMISPHERE_LIGHT);\n\t\tconst outputPointLight = node.nodesByType(JsType.OUTPUT_POINT_LIGHT);\n\t\tconst outputSpotLight = node.nodesByType(JsType.OUTPUT_SPOT_LIGHT);\n\n\t\treturn output\n\t\t\t.concat(outputAmbientLight)\n\t\t\t.concat(outputAreaLight)\n\t\t\t.concat(outputDirectionalLight)\n\t\t\t.concat(outputHemisphereLight)\n\t\t\t.concat(outputPointLight)\n\t\t\t.concat(outputSpotLight);\n\t}\n\tstatic findParamGeneratingNodes(node: AssemblerControllerNode<BaseJsShaderAssembler>) {\n\t\tconst list: BaseJsNodeType[] = [];\n\t\tnode.childrenController?.traverseChildren(\n\t\t\t(child) => {\n\t\t\t\tconst childJsNode = child as BaseJsNodeType;\n\t\t\t\tif (childJsNode.paramsGenerating()) {\n\t\t\t\t\tlist.push(childJsNode);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(child) => {\n\t\t\t\tif (!child.childrenController) {\n\t\t\t\t\treturn child.context() == NodeContext.GL;\n\t\t\t\t} else {\n\t\t\t\t\treturn child.context() == NodeContext.GL && child.childrenController.context == NodeContext.GL;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn list;\n\t}\n\t// static findVaryingNodes(node: BaseJsParentNode) {\n\t// \tconst nodes = node.nodesByType(JsType.VARYING_WRITE);\n\t// \treturn nodes;\n\t// }\n\tstatic findAttributeExportNodes(node: AssemblerControllerNode<BaseJsShaderAssembler>) {\n\t\tconst nodes = node.nodesByType(JsType.ATTRIBUTE);\n\t\treturn nodes.filter((node) => {\n\t\t\t// do not use attributes that are used as an input, as export\n\t\t\t// return (node.used_output_names().length == 0) &&\n\t\t\treturn node.isExporting();\n\t\t});\n\t}\n}\n","export const FUNC_POINTS_COUNT_FROM_OBJECT = `pointsCountFromObject`;\nexport const FUNC_CORE_PRIMITIVE_CLASS_FACTORY = `corePrimitiveClassFactory`;\n","import {TypedNode} from '../_Base';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nexport class TypedBaseManagerNode<K extends NodeParamsConfig> extends TypedNode<NodeContext.MANAGER, K> {\n\tstatic override context(): NodeContext {\n\t\treturn NodeContext.MANAGER;\n\t}\n}\n\nexport type BaseManagerNodeType = TypedBaseManagerNode<any>;\nexport class BaseManagerNodeClass extends TypedBaseManagerNode<any> {}\n","import type {Constructor} from '../../../../../types/GlobalTypes';\nimport type {BaseNodeType} from '../../../_Base';\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nimport type {RootManagerNode} from '../../Root';\nimport {isBooleanTrue} from '../../../../../core/Type';\nimport type {AudioListenerObjNode} from '../../../obj/AudioListener';\n\nconst CallbackOptions = {\n\tcomputeOnDirty: false,\n\tcallback: (node: BaseNodeType) => {\n\t\tRootAudioController.update(node as RootManagerNode);\n\t},\n};\n\nexport function RootAudioParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t// audio\n\t\t/** @param set if a audio icon is shown in the viewer to toggle sound on/off */\n\t\tdisplayAudioIcon = ParamConfig.BOOLEAN(0, {\n\t\t\t...CallbackOptions,\n\t\t\tseparatorBefore: true,\n\t\t});\n\t\t/** @param icon color */\n\t\taudioIconColor = ParamConfig.COLOR([0, 0, 0], {\n\t\t\t...CallbackOptions,\n\t\t\tvisibleIf: {displayAudioIcon: 1},\n\t\t});\n\t\t/** @param icon style properties */\n\t\taudioIconStyle = ParamConfig.STRING(\n\t\t\t'position: absolute; top: 10px; right: 10px; width: 24px; height: 24px; cursor: pointer',\n\t\t\t{\n\t\t\t\t...CallbackOptions,\n\t\t\t\tvisibleIf: {displayAudioIcon: 1},\n\t\t\t}\n\t\t);\n\t};\n}\n\ntype onToggleSoundCallback = (soundOn: boolean) => void;\nexport class RootAudioController {\n\tconstructor(protected node: RootManagerNode) {}\n\n\tasync toggleSound() {\n\t\tthis.audioListeners().forEach((node) => {\n\t\t\tnode.toggleSound();\n\t\t});\n\n\t\tthis.update();\n\t\tthis._runOnToggleSoundCallbacks();\n\t}\n\tsoundOn() {\n\t\tconst listener = this.audioListeners()[0];\n\t\tif (listener) {\n\t\t\treturn isBooleanTrue(listener.pv.soundOn) || false;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tupdate() {\n\t\tthis._updateViewers();\n\t}\n\taudioListeners(): AudioListenerObjNode[] {\n\t\treturn this.node.nodesByType('audioListener') as AudioListenerObjNode[];\n\t}\n\n\tprivate _updateViewers() {\n\t\tthis.node.scene().viewersRegister.traverseViewers((viewer) => {\n\t\t\tviewer.audioController().update();\n\t\t});\n\t}\n\tstatic update(node: RootManagerNode) {\n\t\tnode.audioController.update();\n\t}\n\n\t/*\n\t *\n\t * CALLBACKS\n\t *\n\t */\n\tprivate _callbacksByName = new Map<string, onToggleSoundCallback>();\n\tonToggleSound(callbackName: string, callback: onToggleSoundCallback) {\n\t\tif (this._callbacksByName.get(callbackName)) {\n\t\t\tconsole.warn(`callback already registered ith name '${callbackName}'`);\n\t\t\treturn;\n\t\t}\n\t\tthis._callbacksByName.set(callbackName, callback);\n\t}\n\tprivate _runOnToggleSoundCallbacks() {\n\t\tconst soundOn = this.soundOn();\n\t\tthis._callbacksByName.forEach((callback) => {\n\t\t\tcallback(soundOn);\n\t\t});\n\t}\n}\n","import {Constructor} from '../../../../../types/GlobalTypes';\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {RootManagerNode} from '../../Root';\nimport {Camera, PerspectiveCamera} from 'three';\nimport {CoreWalker} from '../../../../../core/Walker';\nimport {GeoObjNode} from '../../../obj/Geo';\nimport {CorePath} from '../../../../../core/geometry/CorePath';\n\nlet __defaultDummyPerspectiveCamera: PerspectiveCamera | undefined;\nexport function _defaultDummyPerspectiveCamera() {\n\treturn (__defaultDummyPerspectiveCamera = __defaultDummyPerspectiveCamera || new PerspectiveCamera());\n}\n\nexport function RootMainCameraParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param path to the main camera object that will be used when the scene loads outside of the editor */\n\t\tmainCameraPath = ParamConfig.STRING('', {\n\t\t\tcook: false,\n\t\t\tseparatorBefore: true,\n\t\t\tobjectMask: true,\n\t\t});\n\t};\n}\n\nexport class RootMainCameraController {\n\tconstructor(protected node: RootManagerNode) {}\n\n\tsetCamera(object: Camera) {\n\t\tconst path = CorePath.objectPath(object);\n\t\tthis.setCameraPath(path);\n\t}\n\tsetCameraPath(path: string) {\n\t\tthis.mainCameraPathParam().set(path);\n\t}\n\tmainCameraPathParam() {\n\t\treturn this.node.p.mainCameraPath;\n\t}\n\trawCameraPath() {\n\t\treturn this.mainCameraPathParam().rawInput();\n\t}\n\tasync cameraPath() {\n\t\tconst param = this.mainCameraPathParam();\n\t\tif (param.isDirty()) {\n\t\t\tawait param.compute();\n\t\t}\n\t\treturn param.value;\n\t}\n\tprivate _cameraPathSync() {\n\t\tconst param = this.mainCameraPathParam();\n\t\treturn param.value;\n\t}\n\tcameraSync() {\n\t\tconst path = this._cameraPathSync();\n\t\tconst object = this.node.scene().objectsController.findObjectByMask(path) as Camera | undefined;\n\t\treturn object;\n\t}\n\tdummyPerspectiveCamera() {\n\t\treturn _defaultDummyPerspectiveCamera();\n\t}\n\tcameraSyncOrDummy() {\n\t\treturn this.cameraSync(); // || this.dummyPerspectiveCamera();\n\t}\n\tasync camera() {\n\t\tconst path = await this.cameraPath();\n\t\tconst object = this.node.scene().objectsController.findObjectByMask(path) as Camera | undefined;\n\t\treturn object;\n\t}\n\tasync cameraCreatorNode() {\n\t\tconst path = await this.cameraPath();\n\t\tconst elements = path.split(CoreWalker.SEPARATOR);\n\t\tconst nodeName = elements[1];\n\t\tconst objNode = this.node.node(nodeName);\n\t\tif (objNode && elements.length != 2) {\n\t\t\tconst displayNodeController = (objNode as GeoObjNode).displayNodeController;\n\t\t\tif (displayNodeController) {\n\t\t\t\treturn (objNode as GeoObjNode).displayNodeController.displayNode() || objNode;\n\t\t\t}\n\t\t}\n\t\treturn objNode;\n\t}\n}\n","/**\n * the node to rull them all\n *\n * @remarks\n *\n * The root node is unique in the scene. it is the higest parent, just above the [obj](/docs/nodes/obj) nodes.\n *\n * It allows you to control the following scene properties:\n *\n * - the scene background (which can be nothing, a plain color, or a texture)\n * - which camera is used when exporting the scene\n * - the fog\n * - an environment map which would override every material's environment map\n * - a material which would override every other material\n * - the display of an audio icon in the viewer, which is useful when using sound in your scene, and allowing users to turn it on/off\n *\n */\nimport {TypedBaseManagerNode} from './_Base';\nimport {BaseObjNodeType} from '../obj/_Base';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {ObjNodeChildrenMap} from '../../poly/registers/nodes/Obj';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {BaseNodeType} from '../_Base';\nimport {HierarchyObjNode} from '../obj/utils/HierarchyController';\nimport {Constructor, valueof} from '../../../types/GlobalTypes';\nimport {ROOT_NAME} from '../../scene/utils/ObjectsController';\nimport {Scene} from 'three';\n\nimport {RootAudioController, RootAudioParamConfig} from './utils/Scene/Audio';\nimport {SceneAutoUpdateParamConfig, SceneAutoUpdateController} from './utils/Scene/AutoUpdate';\nimport {SceneBackgroundParamConfig, SceneBackgroundController} from './utils/Scene/Background';\nimport {SceneEnvParamConfig, SceneEnvController} from './utils/Scene/Env';\nimport {SceneFogParamConfig, SceneFogController} from './utils/Scene/Fog';\nimport {RootLoadProgressParamConfig, RootLoadProgressController} from './utils/Scene/LoadProgress';\nimport {SceneMaterialOverrideParamConfig, SceneMaterialOverrideController} from './utils/Scene/MaterialOverride';\nimport {RootMainCameraController, RootMainCameraParamConfig} from './utils/Scene/RootMainCamera';\nimport {NodeCreateOptions} from '../utils/hierarchy/ChildrenController';\n\nexport const ROOT_NODE_NAME = 'RootNode';\nclass ObjectsManagerParamsConfig extends RootLoadProgressParamConfig(\n\tRootAudioParamConfig(\n\t\tSceneMaterialOverrideParamConfig(\n\t\t\tSceneEnvParamConfig(\n\t\t\t\tSceneFogParamConfig(\n\t\t\t\t\tRootMainCameraParamConfig(SceneBackgroundParamConfig(SceneAutoUpdateParamConfig(NodeParamsConfig)))\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n) {}\nconst ParamsConfig = new ObjectsManagerParamsConfig();\n\nexport class RootManagerNode extends TypedBaseManagerNode<ObjectsManagerParamsConfig> {\n\toverride paramsConfig = ParamsConfig;\n\tstatic override type() {\n\t\treturn 'root';\n\t}\n\n\tprotected _object: Scene = this._createScene();\n\tprivate _queuedNodesById: Map<number, BaseObjNodeType> = new Map();\n\t// private _expected_geo_nodes: PolyDictionary<GeoObjNode> = {};\n\t// private _process_queue_start: number = -1;\n\treadonly audioController: RootAudioController = new RootAudioController(this);\n\treadonly sceneAutoUpdateController: SceneAutoUpdateController = new SceneAutoUpdateController(this);\n\treadonly sceneBackgroundController: SceneBackgroundController = new SceneBackgroundController(this);\n\treadonly sceneEnvController: SceneEnvController = new SceneEnvController(this);\n\treadonly sceneFogController: SceneFogController = new SceneFogController(this);\n\treadonly loadProgress: RootLoadProgressController = new RootLoadProgressController(this);\n\treadonly sceneMaterialOverrideController: SceneMaterialOverrideController = new SceneMaterialOverrideController(\n\t\tthis as any\n\t);\n\treadonly mainCameraController: RootMainCameraController = new RootMainCameraController(this);\n\n\toverride cook() {\n\t\t// the cook method is necessary here,\n\t\t// with the .endCook()\n\t\t// Without it, the button param of this node would not execute\n\t\t// its callback, as this node would not be perceived as cooking done\n\t\tthis.cookController.endCook();\n\t}\n\n\tprotected override _childrenControllerContext = NodeContext.OBJ;\n\toverride initializeNode() {\n\t\t// this.children_controller?.init({dependent: false});\n\n\t\tthis.params.onParamsCreated('init controllers', () => {\n\t\t\tthis.sceneEnvController.addHooks();\n\t\t\tthis.sceneBackgroundController.addHooks();\n\t\t});\n\n\t\tthis.lifecycle.onChildAdd(this._onChildAdd.bind(this));\n\t\tthis.lifecycle.onChildRemove(this._onChildRemove.bind(this));\n\t}\n\n\tprivate _createScene() {\n\t\tconst scene = new Scene();\n\t\tscene.name = ROOT_NAME;\n\t\t// DO NOT set matrixAutoUpdate to false\n\t\t// on the scene, as this has too many side effects\n\t\t// and is probably an over optimisation anyway\n\t\tscene.matrixAutoUpdate = true;\n\t\treturn scene;\n\t}\n\n\tget object() {\n\t\treturn this._object;\n\t}\n\toverride createNode<S extends keyof ObjNodeChildrenMap>(\n\t\tnodeClass: S,\n\t\toptions?: NodeCreateOptions\n\t): ObjNodeChildrenMap[S];\n\toverride createNode<K extends valueof<ObjNodeChildrenMap>>(\n\t\tnodeClass: Constructor<K>,\n\t\toptions?: NodeCreateOptions\n\t): K;\n\toverride createNode<K extends valueof<ObjNodeChildrenMap>>(\n\t\tnodeClass: Constructor<K>,\n\t\toptions?: NodeCreateOptions\n\t): K {\n\t\treturn super.createNode(nodeClass, options) as K;\n\t}\n\toverride children() {\n\t\treturn super.children() as BaseObjNodeType[];\n\t}\n\toverride nodesByType<K extends keyof ObjNodeChildrenMap>(type: K): ObjNodeChildrenMap[K][] {\n\t\treturn super.nodesByType(type) as ObjNodeChildrenMap[K][];\n\t}\n\n\t// multiple_display_flags_allowed() {\n\t// \treturn true;\n\t// }\n\tprivate _updateScene() {\n\t\tthis.sceneAutoUpdateController.update();\n\t\tthis.sceneBackgroundController.update();\n\t\tthis.sceneEnvController.update();\n\t\tthis.sceneFogController.update();\n\t\tthis.sceneMaterialOverrideController.update();\n\t}\n\n\tprivate _addToQueue(node: BaseObjNodeType) {\n\t\tconst id = node.graphNodeId();\n\t\tif (!this._queuedNodesById.has(id)) {\n\t\t\tthis._queuedNodesById.set(id, node);\n\t\t}\n\t\treturn node;\n\t}\n\n\tprocessQueue() {\n\t\tthis._updateScene();\n\n\t\tconst queuedNodesByPath: Map<string, BaseObjNodeType> = new Map();\n\t\tconst paths: string[] = [];\n\t\tthis._queuedNodesById.forEach((node, id) => {\n\t\t\tconst fullPath = `_____${node.renderOrder}__${node.path()}`;\n\t\t\tpaths.push(fullPath);\n\t\t\tqueuedNodesByPath.set(fullPath, node);\n\t\t});\n\t\tthis._queuedNodesById.clear();\n\n\t\t// const promises = [];\n\t\tfor (const path_id of paths) {\n\t\t\tconst node = queuedNodesByPath.get(path_id);\n\t\t\tif (node) {\n\t\t\t\tqueuedNodesByPath.delete(path_id);\n\t\t\t\tthis._addToScene(node);\n\t\t\t\t// promises.push();\n\t\t\t}\n\t\t}\n\t\t// this._expected_geo_nodes = this._expected_geo_nodes || (await this.expected_loading_geo_nodes_by_id());\n\n\t\t// this._process_queue_start = performance.now();\n\t\t// Promise.all(promises).then(() => {\n\t\t// \t// Poly.log(`SCENE LOADED '${this.scene.name}`);\n\t\t// \t// `SCENE LOADED '${this.scene.name}' in ${performance.now() - this._process_queue_start}`\n\t\t// \t// this.scene().performance().print()\n\t\t// \t// do the update here if there are no objects to load\n\t\t// \t// otherwise an empty scene will have a loader that never gets removed\n\t\t// \t// if (Object.keys(this._expected_geo_nodes).length == 0) {\n\t\t// \t// \tthis.update_on_all_objects_loaded();\n\t\t// \t// }\n\t\t// });\n\t}\n\n\tprivate _updateObject(node: BaseObjNodeType) {\n\t\tif (!this.scene().loadingController.autoUpdating()) {\n\t\t\treturn this._addToQueue(node);\n\t\t} else {\n\t\t\t// update 25/01/2022: the light obj nodes, the null obj do not cook when created.\n\t\t\t// this aims to solve this.\n\t\t\t// and only once the scene has loaded\n\t\t\tif (node.isDisplayed() && !node.cookController.isCooking()) {\n\t\t\t\tnode.compute();\n\t\t\t}\n\t\t\treturn this._addToScene(node);\n\t\t}\n\t}\n\n\t//\n\t//\n\t// OBJ PARENTING\n\t//\n\t//\n\tgetParentForNode(node: BaseObjNodeType) {\n\t\tif (node.attachableToHierarchy()) {\n\t\t\tconst node_input = node.io.inputs.input(0);\n\t\t\tif (node_input) {\n\t\t\t\treturn node_input.childrenGroup();\n\t\t\t} else {\n\t\t\t\treturn this._object;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate _addToScene(node: BaseObjNodeType): void {\n\t\tif (node.attachableToHierarchy()) {\n\t\t\tconst parentObject = this.getParentForNode(node);\n\t\t\tif (parentObject) {\n\t\t\t\t// await node.params.eval_all().then((params_eval_key) => {\n\t\t\t\t// \tnode.compute();\n\t\t\t\t// });\n\n\t\t\t\tif (node.usedInScene()) {\n\t\t\t\t\t// I need to query the displayNodeController here,\n\t\t\t\t\t// for geo obj whose display_node is a node without inputs.\n\t\t\t\t\t// Since that node will not be made dirty, it seems that there is\n\t\t\t\t\t// nothing triggering the obj to request it itself.\n\t\t\t\t\t// TODO: investigate if it has a performance cost, or if it could be done\n\t\t\t\t\t// only when scene loads. Or if the displayNodeController itself could be improved\n\t\t\t\t\t// to take care of it itself.\n\t\t\t\t\t// node.compute();\n\n\t\t\t\t\tif (node.childrenDisplayController) {\n\t\t\t\t\t\tnode.childrenDisplayController.requestDisplayNodeContainer();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.compute();\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.addObjectToParent(parentObject);\n\t\t\t\t} else {\n\t\t\t\t\tnode.removeObjectFromParent();\n\t\t\t\t\t// parent_object.remove(node.object);\n\t\t\t\t}\n\n\t\t\t\t// node.request_display_node();\n\t\t\t} else {\n\t\t\t\t// node.compute().then(() => {\n\t\t\t\t// \t// force events and mat to cook and remove the dirty state\n\t\t\t\t// \t// ensure that pickers are cooked\n\t\t\t\t// \t// TODO: although there has been cases with two picker and\n\t\t\t\t// \t// one referencing the other with an expression, and that\n\t\t\t\t// \t// expression be evaluated before the second was created\n\t\t\t\t// \t// which led to an error. This should not happen\n\t\t\t\t// \tnode.children_controller.traverse_children((child) => child.setDirty());\n\t\t\t\t// });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _removeFromScene(node: BaseObjNodeType) {\n\t\tnode.removeObjectFromParent();\n\t}\n\tareChildrenCooking(): boolean {\n\t\tconst children = this.children();\n\t\tfor (const child of children) {\n\t\t\tif (child.cookController.isCooking() || child.isDisplayNodeCooking()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// private async expected_loading_geo_nodes_by_id() {\n\t// \tconst geo_nodes = this.nodesByType('geo');\n\t// \tconst node_by_id: PolyDictionary<GeoObjNode> = {};\n\t// \tfor (let geo_node of geo_nodes) {\n\t// \t\tconst isDisplayed = await geo_node.isDisplayed();\n\t// \t\tif (isDisplayed) {\n\t// \t\t\tnode_by_id[geo_node.graphNodeId()] = geo_node;\n\t// \t\t}\n\t// \t}\n\t// \treturn node_by_id;\n\t// }\n\n\taddToParentTransform(node: HierarchyObjNode) {\n\t\tthis._updateObject(node);\n\t}\n\n\tremoveFromParentTransform(node: HierarchyObjNode) {\n\t\tthis._updateObject(node);\n\t}\n\n\tprivate _onChildAdd(node?: BaseNodeType) {\n\t\tif (node) {\n\t\t\tthis._updateObject(node as BaseObjNodeType);\n\t\t}\n\t}\n\tprivate _onChildRemove(node?: BaseNodeType) {\n\t\tif (node) {\n\t\t\tthis._removeFromScene(node as BaseObjNodeType);\n\t\t}\n\t}\n}\n","import {Constructor} from '../../../../../types/GlobalTypes';\nimport {BaseNodeType} from '../../../_Base';\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {isBooleanTrue} from '../../../../../core/BooleanValue';\nimport {RootManagerNode} from '../../Root';\n\nconst CallbackOptions = {\n\tcomputeOnDirty: false,\n\tcallback: (node: BaseNodeType) => {\n\t\tSceneAutoUpdateController.update(node as RootManagerNode);\n\t},\n};\n\nexport function SceneAutoUpdateParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param autoUpdate */\n\t\tautoUpdate = ParamConfig.BOOLEAN(1, {\n\t\t\t...CallbackOptions,\n\t\t\tseparatorBefore: true,\n\t\t});\n\t};\n}\n// class SceneAutoUpdateParamsConfig extends SceneAutoUpdateParamConfig(NodeParamsConfig) {}\n// abstract class SceneAutoUpdateNode extends TypedNode<any, SceneAutoUpdateParamsConfig> {\n// \treadonly sceneAutoUpdateController = new SceneAutoUpdateController(this);\n// \tprotected _object = new Scene();\n// \tget object() {\n// \t\treturn this._object;\n// \t}\n// }\n\nexport class SceneAutoUpdateController {\n\tconstructor(protected node: RootManagerNode) {}\n\n\tasync update() {\n\t\tconst scene = this.node.object;\n\t\tconst pv = this.node.pv;\n\n\t\tif (isBooleanTrue(pv.autoUpdate) != scene.matrixWorldAutoUpdate) {\n\t\t\tscene.matrixWorldAutoUpdate = isBooleanTrue(pv.autoUpdate);\n\t\t}\n\t}\n\n\tstatic async update(node: RootManagerNode) {\n\t\tnode.sceneAutoUpdateController.update();\n\t}\n}\n","import {Constructor} from '../../../../../types/GlobalTypes';\nimport {BaseNodeType} from '../../../_Base';\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {NodeContext} from '../../../../poly/NodeContext';\nimport {RootManagerNode} from '../../Root';\n// import {ColorConversion} from '../../../../../core/Color';\nimport {Color} from 'three';\nimport {TypeAssert} from '../../../../poly/Assert';\n\nexport enum BackgroundMode {\n\tNONE = 'none',\n\tCOLOR = 'color',\n\tTEXTURE = 'texture',\n}\nexport const BACKGROUND_MODES: BackgroundMode[] = [BackgroundMode.NONE, BackgroundMode.COLOR, BackgroundMode.TEXTURE];\n\nconst CallbackOptions = {\n\tcook: false,\n\tcallback: (node: BaseNodeType) => {\n\t\tSceneBackgroundController.update(node as RootManagerNode);\n\t},\n};\n\nexport function SceneBackgroundParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t// background\n\t\t/** @param set background mode (none, color or texture). Note that in order to have a transparent background, you also need to set the renderer's alpha to true. In order to do so, you may need to create a rop/WebGLRenderer node, set it alpha parameter, and assign the node to your camera. */\n\t\tbackgroundMode = ParamConfig.INTEGER(BACKGROUND_MODES.indexOf(BackgroundMode.COLOR), {\n\t\t\tmenu: {\n\t\t\t\tentries: BACKGROUND_MODES.map((mode, i) => {\n\t\t\t\t\treturn {name: mode, value: i};\n\t\t\t\t}),\n\t\t\t},\n\t\t\t...CallbackOptions,\n\t\t\tseparatorBefore: true,\n\t\t});\n\t\t/** @param background color */\n\t\tbgColor = ParamConfig.COLOR([0.01, 0.01, 0.01], {\n\t\t\tvisibleIf: {backgroundMode: BACKGROUND_MODES.indexOf(BackgroundMode.COLOR)},\n\t\t\t...CallbackOptions,\n\t\t\t// conversion: ColorConversion.SRGB_TO_LINEAR,\n\t\t});\n\t\t/** @param background texture */\n\t\tbgTexture = ParamConfig.NODE_PATH('', {\n\t\t\tvisibleIf: {backgroundMode: BACKGROUND_MODES.indexOf(BackgroundMode.TEXTURE)},\n\t\t\tnodeSelection: {\n\t\t\t\tcontext: NodeContext.COP,\n\t\t\t},\n\t\t\t// dependentOnFoundNode: false,\n\t\t\t...CallbackOptions,\n\t\t});\n\t\t/** @param background blur */\n\t\tbgBlur = ParamConfig.FLOAT(0, {\n\t\t\tvisibleIf: {backgroundMode: BACKGROUND_MODES.indexOf(BackgroundMode.TEXTURE)},\n\t\t\trange: [0, 1],\n\t\t\trangeLocked: [true, false],\n\t\t\t...CallbackOptions,\n\t\t});\n\t\t/** @param background intensity */\n\t\tbgIntensity = ParamConfig.FLOAT(1, {\n\t\t\tvisibleIf: {backgroundMode: BACKGROUND_MODES.indexOf(BackgroundMode.TEXTURE)},\n\t\t\trange: [0, 2],\n\t\t\trangeLocked: [true, false],\n\t\t\t...CallbackOptions,\n\t\t});\n\t};\n}\n\nconst CALLBACK_NAME = 'SceneBackgroundController';\nexport class SceneBackgroundController {\n\tconstructor(protected node: RootManagerNode) {}\n\taddHooks() {\n\t\tconst p = this.node.p;\n\t\tconst params = [p.backgroundMode, p.bgColor, p.bgTexture];\n\t\tfor (const param of params) {\n\t\t\tparam.addPostDirtyHook(CALLBACK_NAME, this._updateBound);\n\t\t}\n\t}\n\n\tsetMode(mode: BackgroundMode) {\n\t\tthis.node.p.backgroundMode.set(BACKGROUND_MODES.indexOf(mode));\n\t}\n\tbackgroundMode(): BackgroundMode {\n\t\treturn BACKGROUND_MODES[this.node.pv.backgroundMode];\n\t}\n\tprivate _updateBound = this.update.bind(this);\n\tasync update() {\n\t\tconst backgroundMode = this.backgroundMode();\n\t\tswitch (backgroundMode) {\n\t\t\tcase BackgroundMode.NONE: {\n\t\t\t\treturn this._setBackgroundNone();\n\t\t\t}\n\t\t\tcase BackgroundMode.COLOR: {\n\t\t\t\treturn await this._setBackgroundColor();\n\t\t\t}\n\t\t\tcase BackgroundMode.TEXTURE: {\n\t\t\t\treturn await this._setBackgroundTexture();\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(backgroundMode);\n\t}\n\n\tprivate _setBackgroundNone() {\n\t\tconst scene = this.node.object;\n\t\tscene.background = null;\n\t}\n\tprivate async _setBackgroundColor() {\n\t\tconst scene = this.node.object;\n\t\tconst pv = this.node.pv;\n\t\tawait this.node.p.bgColor.compute();\n\t\tif (scene.background && scene.background instanceof Color) {\n\t\t\tscene.background.copy(pv.bgColor);\n\t\t} else {\n\t\t\tscene.background = pv.bgColor;\n\t\t}\n\t}\n\tprivate async _setBackgroundTexture() {\n\t\tconst scene = this.node.object;\n\t\tconst pv = this.node.pv;\n\t\tconst node = pv.bgTexture.nodeWithContext(NodeContext.COP);\n\t\tif (node) {\n\t\t\tconst container = await node.compute();\n\t\t\tscene.background = container.texture();\n\t\t} else {\n\t\t\tthis.node.states.error.set('bgTexture node not found');\n\t\t\tscene.background = null;\n\t\t}\n\t\tscene.backgroundBlurriness = pv.bgBlur;\n\t\tscene.backgroundIntensity = pv.bgIntensity;\n\t}\n\n\tstatic update(node: RootManagerNode) {\n\t\tnode.sceneBackgroundController.update();\n\t}\n}\n","import {Constructor} from '../../../../../types/GlobalTypes';\nimport {BaseNodeType} from '../../../_Base';\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {isBooleanTrue} from '../../../../../core/BooleanValue';\nimport {NodeContext} from '../../../../poly/NodeContext';\nimport {RootManagerNode} from '../../Root';\n\nconst CallbackOptions = {\n\tcook: false,\n\tcallback: (node: BaseNodeType) => {\n\t\tSceneEnvController.update(node as RootManagerNode);\n\t},\n};\n\nexport function SceneEnvParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param toggle on to use an environment map */\n\t\tuseEnvironment = ParamConfig.BOOLEAN(0, {\n\t\t\t...CallbackOptions,\n\t\t\tseparatorBefore: true,\n\t\t});\n\t\t/** @param environment map */\n\t\tenvironment = ParamConfig.NODE_PATH('', {\n\t\t\tvisibleIf: {useEnvironment: 1},\n\t\t\tnodeSelection: {\n\t\t\t\tcontext: NodeContext.COP,\n\t\t\t},\n\t\t\t// dependentOnFoundNode: false,\n\t\t\t...CallbackOptions,\n\t\t});\n\t};\n}\n\nconst CALLBACK_NAME = 'SceneEnvController';\nexport class SceneEnvController {\n\tconstructor(protected node: RootManagerNode) {}\n\taddHooks() {\n\t\tconst p = this.node.p;\n\t\tconst params = [p.useEnvironment, p.environment];\n\t\tfor (const param of params) {\n\t\t\tparam.addPostDirtyHook(CALLBACK_NAME, this._updateBound);\n\t\t}\n\t}\n\n\tprivate _updateBound = this.update.bind(this);\n\tasync update() {\n\t\tconst scene = this.node.object;\n\t\tconst pv = this.node.pv;\n\n\t\tif (isBooleanTrue(pv.useEnvironment)) {\n\t\t\tconst node = pv.environment.nodeWithContext(NodeContext.COP);\n\t\t\tif (node) {\n\t\t\t\tnode.compute().then((container) => {\n\t\t\t\t\tscene.environment = container.texture();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tscene.environment = null;\n\t\t\t\tthis.node.states.error.set('environment node not found');\n\t\t\t}\n\t\t} else {\n\t\t\tscene.environment = null;\n\t\t}\n\t}\n\n\tstatic async update(node: RootManagerNode) {\n\t\tnode.sceneEnvController.update();\n\t}\n}\n","import {Constructor} from '../../../../../types/GlobalTypes';\nimport {BaseNodeType} from '../../../_Base';\nimport {NodeParamsConfig, ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {isBooleanTrue} from '../../../../../core/BooleanValue';\nimport {Fog} from 'three';\nimport {FogExp2} from 'three';\nimport {ParamsValueAccessorType} from '../../../utils/params/ParamsValueAccessor';\nimport {RootManagerNode} from '../../Root';\n\nconst CallbackOptions = {\n\tcomputeOnDirty: false,\n\tcallback: (node: BaseNodeType) => {\n\t\tSceneFogController.update(node as RootManagerNode);\n\t},\n};\n\nexport enum FogType {\n\tLINEAR = 'linear',\n\tEXPONENTIAL = 'exponential',\n}\nexport const FOG_TYPES: FogType[] = [FogType.LINEAR, FogType.EXPONENTIAL];\n\nexport function SceneFogParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param toggle on to use fog */\n\t\tuseFog = ParamConfig.BOOLEAN(0, {\n\t\t\t...CallbackOptions,\n\t\t\tseparatorBefore: true,\n\t\t});\n\t\t/** @param fog type */\n\t\tfogType = ParamConfig.INTEGER(FOG_TYPES.indexOf(FogType.EXPONENTIAL), {\n\t\t\tvisibleIf: {useFog: 1},\n\t\t\tmenu: {\n\t\t\t\tentries: FOG_TYPES.map((mode, i) => {\n\t\t\t\t\treturn {name: mode, value: i};\n\t\t\t\t}),\n\t\t\t},\n\t\t\t...CallbackOptions,\n\t\t});\n\t\t/** @param fog color */\n\t\tfogColor = ParamConfig.COLOR([1, 1, 1], {\n\t\t\tvisibleIf: {useFog: 1},\n\t\t\t...CallbackOptions,\n\t\t});\n\t\t/** @param fog near */\n\t\tfogNear = ParamConfig.FLOAT(1, {\n\t\t\trange: [0, 100],\n\t\t\trangeLocked: [true, false],\n\t\t\tvisibleIf: {useFog: 1, fogType: FOG_TYPES.indexOf(FogType.LINEAR)},\n\t\t\t...CallbackOptions,\n\t\t});\n\t\t/** @param fog far */\n\t\tfogFar = ParamConfig.FLOAT(100, {\n\t\t\trange: [0, 100],\n\t\t\trangeLocked: [true, false],\n\t\t\tvisibleIf: {useFog: 1, fogType: FOG_TYPES.indexOf(FogType.LINEAR)},\n\t\t\t...CallbackOptions,\n\t\t});\n\t\t/** @param fog density */\n\t\tfogDensity = ParamConfig.FLOAT(0.00025, {\n\t\t\tvisibleIf: {useFog: 1, fogType: FOG_TYPES.indexOf(FogType.EXPONENTIAL)},\n\t\t\t...CallbackOptions,\n\t\t});\n\t};\n}\nclass SceneFogParamsConfig extends SceneFogParamConfig(NodeParamsConfig) {}\n\nexport class SceneFogController {\n\tconstructor(protected node: RootManagerNode) {}\n\tprivate _fog: Fog | undefined;\n\tprivate _fogExp2: FogExp2 | undefined;\n\n\tasync update() {\n\t\tconst scene = this.node.object;\n\t\tconst pv = this.node.pv;\n\n\t\tif (isBooleanTrue(pv.useFog)) {\n\t\t\tif (pv.fogType == FOG_TYPES.indexOf(FogType.LINEAR)) {\n\t\t\t\tconst fog = this.fog2(pv);\n\t\t\t\tscene.fog = fog;\n\t\t\t\tfog.color = pv.fogColor;\n\t\t\t\tfog.near = pv.fogNear;\n\t\t\t\tfog.far = pv.fogFar;\n\t\t\t} else {\n\t\t\t\tconst fogExp2 = this.fogExp2(pv);\n\t\t\t\tscene.fog = this.fogExp2(pv);\n\t\t\t\tfogExp2.color = pv.fogColor;\n\t\t\t\tfogExp2.density = pv.fogDensity;\n\t\t\t}\n\t\t} else {\n\t\t\tconst current_fog = scene.fog;\n\t\t\tif (current_fog) {\n\t\t\t\tscene.fog = null;\n\t\t\t}\n\t\t}\n\t}\n\tfog2(pv: ParamsValueAccessorType<SceneFogParamsConfig>) {\n\t\treturn (this._fog = this._fog || new Fog(0xffffff, pv.fogNear, pv.fogFar));\n\t}\n\tfogExp2(pv: ParamsValueAccessorType<SceneFogParamsConfig>) {\n\t\treturn (this._fogExp2 = this._fogExp2 || new FogExp2(0xffffff, pv.fogDensity));\n\t}\n\n\tstatic async update(node: RootManagerNode) {\n\t\tnode.sceneFogController.update();\n\t}\n}\n","import {CoreFeaturesController} from './../../../../../core/FeaturesController';\nimport {Constructor} from '../../../../../types/GlobalTypes';\nimport {BaseNodeType} from '../../../_Base';\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {RootManagerNode} from '../../Root';\nimport {PolyScene} from '../../../../scene/PolyScene';\nimport {setToArray} from '../../../../../core/SetUtils';\nimport {Poly} from '../../../../Poly';\nimport {arrayUniq, arrayCompact, arrayToSet} from '../../../../../core/ArrayUtils';\nimport {BaseObjNodeType} from '../../../obj/_Base';\nimport {GeoObjNode} from '../../../obj/Geo';\n\nclass NodeGroup {\n\tpublic readonly totalCount: number;\n\tprivate _processed: Set<BaseNodeType>;\n\tprivate _remaining: Set<BaseNodeType> = new Set();\n\tconstructor(public readonly nodes: BaseNodeType[]) {\n\t\tif (CoreFeaturesController.debugLoadProgress()) {\n\t\t\tconsole.log(nodes);\n\t\t}\n\t\tthis.totalCount = nodes.length;\n\t\tthis._processed = new Set();\n\t\tarrayToSet(nodes, this._remaining);\n\t}\n\tmarkNodeAsProcessed(node: BaseNodeType) {\n\t\tthis._processed.add(node);\n\t\tthis._remaining.delete(node);\n\t\tif (CoreFeaturesController.debugLoadProgress()) {\n\t\t\tconsole.log('markNodeAsProcessed', node.path(), {\n\t\t\t\tprocessed: setToArray(this._processed, []).map((n) => n.path()),\n\t\t\t\tremaining: setToArray(this._remaining, []).map((n) => n.path()),\n\t\t\t});\n\t\t}\n\t}\n\tisNodeProcessed(node: BaseNodeType) {\n\t\treturn this._processed.has(node);\n\t}\n\tprocessedCount(): number {\n\t\treturn this._processed.size;\n\t}\n}\ninterface NodeGroups {\n\ttoCook: NodeGroup;\n\tsopGroupToUpdate: NodeGroup;\n}\n\nexport interface OnProgressArguments {\n\tscene: PolyScene;\n\ttriggerNode?: BaseNodeType;\n\tgroups: NodeGroups;\n}\nexport type OnProgressUpdateCallback = (progressRatio: number, args: OnProgressArguments) => void;\n\nexport function RootLoadProgressParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param when the scene loads, nodes that match the mask will update the progress bar as they cook */\n\t\tnodesMask = ParamConfig.STRING('*/image* */envMap*', {\n\t\t\tcook: false,\n\t\t\tseparatorBefore: true,\n\t\t\tobjectMask: false, // do not use objectMask, since it is a node mask, not object\n\t\t});\n\t\t/** @param prints which nodes match the mask in the console */\n\t\tprintNodes = ParamConfig.BUTTON(null, {\n\t\t\tcook: false,\n\t\t\tcallback: (node: BaseNodeType) => {\n\t\t\t\tRootLoadProgressController.PARAM_CALLBACK_printResolve(node as RootManagerNode);\n\t\t\t},\n\t\t\t// objectMask: false // do not use objectMask, since it is a node mask, not object\n\t\t});\n\t};\n}\n\nexport class RootLoadProgressController {\n\tconstructor(protected node: RootManagerNode) {}\n\n\tstatic async PARAM_CALLBACK_printResolve(node: RootManagerNode) {\n\t\tconst nodes = await node.loadProgress.resolvedNodes();\n\t\tconsole.log(nodes);\n\t\tconst nodePaths = nodes.map((node) => node.path()).sort();\n\t\tconsole.log(nodePaths);\n\t}\n\tasync resolvedNodes() {\n\t\tconst param = this.node.p.nodesMask;\n\t\tif (param.isDirty()) {\n\t\t\tawait param.compute();\n\t\t}\n\t\tconst mask = param.value;\n\t\tconst scene = this.node.scene();\n\t\tconst nodes = scene.nodesController.nodesFromMask(mask || '');\n\n\t\tconst nodeDisplayNodes = await this._loadDisplayNodes();\n\t\tconst uniqNodes: BaseNodeType[] = [];\n\t\tarrayUniq(nodes.concat(nodeDisplayNodes), uniqNodes);\n\t\treturn uniqNodes;\n\t}\n\tprivate async _loadDisplayNodes() {\n\t\tconst scene = this.node.scene();\n\t\t// we also need to get the cameras at the obj level\n\t\tconst cameraNodeTypes = Poly.camerasRegister.registeredNodeTypes();\n\t\tconst cameraNodes = cameraNodeTypes.map((type) => scene.nodesByType(type)).flat();\n\t\t// and we also need to get the displayed nodes\n\t\tconst displayNodes = this._displayNodes();\n\t\tconst nodes = cameraNodes.concat(displayNodes);\n\t\tconst cameraCreatorNode = await this.cameraCreatorNode();\n\t\tif (cameraCreatorNode) {\n\t\t\tnodes.push(cameraCreatorNode);\n\t\t}\n\t\tconst uniqNodes: BaseNodeType[] = [];\n\t\tarrayUniq(nodes, uniqNodes);\n\t\treturn uniqNodes;\n\t}\n\tprivate _displayNodes() {\n\t\tconst objNodesWithDisplayNodeController = this._objectNodesWithDisplayNodeController() as GeoObjNode[];\n\t\tconst displayNodes: BaseNodeType[] = [];\n\t\tarrayCompact(\n\t\t\tobjNodesWithDisplayNodeController.map((node) => node.displayNodeController.firstNonBypassedDisplayNode()),\n\t\t\tdisplayNodes\n\t\t);\n\t\treturn displayNodes;\n\t}\n\tprivate _objectNodesWithDisplayNodeController() {\n\t\tconst scene = this.node.scene();\n\t\tconst objNodesWithDisplayNodeController = scene\n\t\t\t.root()\n\t\t\t.children()\n\t\t\t.filter((node) => (node as BaseObjNodeType).displayNodeController != null)\n\t\t\t.filter((node) => node.flags?.display?.active());\n\t\treturn objNodesWithDisplayNodeController;\n\t}\n\t// private _getNodesWithSopGroup() {\n\t// \treturn this._displayNodes().filter((node) => (node as GeoObjNode).childrenDisplayController != null);\n\t// }\n\tpublic cameraCreatorNode() {\n\t\treturn this.node.mainCameraController.cameraCreatorNode();\n\t}\n\n\tprivate _nodeGroups: NodeGroups | undefined;\n\t// private _toCook: NodeGroup | undefined;\n\t// private _sopGroupToUpdate: NodeGroup | undefined;\n\tprivate _onProgressUpdateCallback: OnProgressUpdateCallback | undefined;\n\tprivate _runCallback(progress: number, nodeTrigger?: BaseNodeType) {\n\t\tthis._debug2('_runCallback', {progress, nodeTrigger});\n\t\tif (!(this._onProgressUpdateCallback && this._nodeGroups)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._debug2('_onProgressUpdateCallback', this._nodeGroups);\n\t\tthis._onProgressUpdateCallback(progress, {\n\t\t\tscene: this.node.scene(),\n\t\t\ttriggerNode: undefined,\n\t\t\tgroups: this._nodeGroups,\n\t\t});\n\t}\n\tprivate _updateProgressAndRunCallback(nodeTrigger: BaseNodeType) {\n\t\tif (!(this._onProgressUpdateCallback && this._nodeGroups)) {\n\t\t\treturn;\n\t\t}\n\t\tconst totalNodesCount = this._nodeGroups.toCook.totalCount + this._nodeGroups.sopGroupToUpdate.totalCount;\n\t\tconst processedNodesCount =\n\t\t\tthis._nodeGroups.toCook.processedCount() + this._nodeGroups.sopGroupToUpdate.processedCount();\n\t\tconst progress = processedNodesCount / totalNodesCount;\n\t\tthis._runCallback(progress, nodeTrigger);\n\t}\n\n\tasync watchNodesProgress(callback: OnProgressUpdateCallback) {\n\t\tthis._onProgressUpdateCallback = callback;\n\t\tconst resolvedNodes = await this.resolvedNodes();\n\t\tconst nodesToCook = resolvedNodes.filter((node) => node.isDirty());\n\t\tthis._debug({nodesToCook});\n\t\tconst nodesToUpdateSopGroup = this._objectNodesWithDisplayNodeController()\n\t\t\t.filter((node) => {\n\t\t\t\tconst displayNode = (node as GeoObjNode).displayNodeController.displayNode();\n\t\t\t\treturn displayNode != null && !displayNode.flags.bypass?.active();\n\t\t\t})\n\t\t\t.filter((node) => node.isDirty());\n\t\tthis._debug({nodesToUpdateSopGroup});\n\t\tthis._nodeGroups = {\n\t\t\ttoCook: new NodeGroup(nodesToCook),\n\t\t\tsopGroupToUpdate: new NodeGroup(nodesToUpdateSopGroup),\n\t\t};\n\t\tconst totalNodesCount = this._nodeGroups.toCook.totalCount + this._nodeGroups.sopGroupToUpdate.totalCount;\n\t\tthis._debug({totalNodesCount});\n\t\tif (totalNodesCount == 0) {\n\t\t\tthis._runCallback(1);\n\t\t\treturn;\n\t\t}\n\t\tthis._watchNodesWithSopGroup();\n\t\tthis._watchNodesToCook();\n\t}\n\tprivate async _watchNodesToCook() {\n\t\tconst nodesGroup = this._nodeGroups?.toCook;\n\t\tif (!nodesGroup) {\n\t\t\treturn;\n\t\t}\n\t\tconst callbackName = 'RootLoadProgressController';\n\n\t\tconst onNodeCooked = (node: BaseNodeType) => {\n\t\t\tif (!nodesGroup.isNodeProcessed(node)) {\n\t\t\t\tnodesGroup.markNodeAsProcessed(node);\n\n\t\t\t\tthis._updateProgressAndRunCallback(node);\n\n\t\t\t\tnode.cookController.deregisterOnCookEnd(callbackName);\n\t\t\t}\n\t\t};\n\n\t\tfor (const node of nodesGroup.nodes) {\n\t\t\tnode.cookController.registerOnCookEnd(callbackName, () => {\n\t\t\t\tthis._debug2('nodeToCook - completed', node.path());\n\t\t\t\tonNodeCooked(node);\n\t\t\t});\n\t\t\t// we force nodes to compute\n\t\t\t// in case they do not have a display flag on, or are not connected\n\t\t\t// as it would get the loading stuck\n\t\t\tthis._debug2('nodeToCook - start', node.path());\n\t\t\tnode.compute();\n\t\t}\n\t}\n\tprivate _watchNodesWithSopGroup() {\n\t\tconst nodesGroup = this._nodeGroups?.sopGroupToUpdate;\n\t\tif (!nodesGroup) {\n\t\t\treturn;\n\t\t}\n\t\tconst callbackName = 'RootLoadProgressController';\n\n\t\tconst onNodeCooked = (node: BaseNodeType) => {\n\t\t\tif (!nodesGroup.isNodeProcessed(node)) {\n\t\t\t\tnodesGroup.markNodeAsProcessed(node);\n\n\t\t\t\tthis._updateProgressAndRunCallback(node);\n\n\t\t\t\tconst childrenDisplayController = (node as GeoObjNode).childrenDisplayController;\n\t\t\t\tchildrenDisplayController.deregisterOnSopGroupUpdated(callbackName);\n\t\t\t}\n\t\t};\n\n\t\tfor (const node of nodesGroup.nodes) {\n\t\t\tconst childrenDisplayController = (node as GeoObjNode).childrenDisplayController;\n\t\t\tthis._debug2('nodeWithSopGroup - watch', node.path());\n\t\t\tchildrenDisplayController.registerOnSopGroupUpdated(callbackName, () => {\n\t\t\t\tthis._debug2('nodeWithSopGroup - completed', node.path());\n\t\t\t\tonNodeCooked(node);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected static debugActive(): boolean {\n\t\treturn CoreFeaturesController.debugLoadProgress();\n\t}\n\tstatic debug(arg0: any) {\n\t\tif (!this.debugActive()) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(arg0);\n\t}\n\tstatic debug2(arg0: any, arg1: any) {\n\t\tif (!this.debugActive()) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(arg0, arg1);\n\t}\n\tprotected _debug(arg0: any) {\n\t\tRootLoadProgressController.debug(arg0);\n\t}\n\tprotected _debug2(arg0: any, arg1: any) {\n\t\tRootLoadProgressController.debug2(arg0, arg1);\n\t}\n}\n","import {Constructor} from '../../../../../types/GlobalTypes';\nimport {BaseNodeType} from '../../../_Base';\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {isBooleanTrue} from '../../../../../core/BooleanValue';\nimport {NodeContext} from '../../../../poly/NodeContext';\nimport {RootManagerNode} from '../../Root';\n\nconst CallbackOptions = {\n\tcomputeOnDirty: false,\n\tcallback: (node: BaseNodeType) => {\n\t\tSceneMaterialOverrideController.update(node as RootManagerNode);\n\t},\n};\n\nexport function SceneMaterialOverrideParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param toggle on to override all materials */\n\t\tuseOverrideMaterial = ParamConfig.BOOLEAN(0, {\n\t\t\t...CallbackOptions,\n\t\t\tseparatorBefore: true,\n\t\t});\n\t\t/** @param material */\n\t\toverrideMaterial = ParamConfig.NODE_PATH('', {\n\t\t\tvisibleIf: {useOverrideMaterial: 1},\n\t\t\tnodeSelection: {\n\t\t\t\tcontext: NodeContext.MAT,\n\t\t\t},\n\t\t\tdependentOnFoundNode: false,\n\t\t\t...CallbackOptions,\n\t\t});\n\t};\n}\n// class SceneMaterialOverrideParamsConfig extends SceneMaterialOverrideParamConfig(NodeParamsConfig) {}\n// abstract class SceneMaterialOverrideNode extends TypedNode<any, SceneMaterialOverrideParamsConfig> {\n// \treadonly sceneMaterialOverrideController = new SceneMaterialOverrideController(this);\n// \tprotected _object = new Scene();\n// \tget object() {\n// \t\treturn this._object;\n// \t}\n// }\n\nexport class SceneMaterialOverrideController {\n\tconstructor(protected node: RootManagerNode) {}\n\n\tasync update() {\n\t\tconst scene = this.node.object;\n\t\tconst pv = this.node.pv;\n\n\t\tif (isBooleanTrue(pv.useOverrideMaterial)) {\n\t\t\tconst node = pv.overrideMaterial.nodeWithContext(NodeContext.MAT);\n\t\t\tif (node) {\n\t\t\t\tconst container = await node.compute();\n\t\t\t\tscene.overrideMaterial = container.material();\n\t\t\t} else {\n\t\t\t\tscene.overrideMaterial = null;\n\t\t\t\tthis.node.states.error.set('overrideMaterial node not found');\n\t\t\t}\n\t\t} else {\n\t\t\tscene.overrideMaterial = null;\n\t\t}\n\t}\n\n\tstatic async update(node: RootManagerNode) {\n\t\tnode.sceneMaterialOverrideController.update();\n\t}\n}\n","import {CoreEntity} from '../../../../../core/geometry/CoreEntity';\n\nexport type CoreEntitySelectionState = Map<CoreEntity, boolean>;\n\nexport function updateSelectionState(selectionStates: CoreEntitySelectionState, entity: CoreEntity, state: boolean) {\n\tconst currentState = selectionStates.get(entity);\n\tif (!currentState) {\n\t\tselectionStates.set(entity, state);\n\t}\n}\n\nexport function selectedIndicesFromSelectionStates(\n\tselectionStates: CoreEntitySelectionState,\n\tselectedIndices: Set<number>,\n\tinvert: boolean\n): void {\n\tselectionStates.forEach((state, entity) => {\n\t\tconst selected = (!invert && state) || (invert && !state);\n\t\tif (selected) {\n\t\t\tselectedIndices.add(entity.index());\n\t\t}\n\t});\n}\n","import {BaseNodeType} from '../../_Base';\n\ntype FlagHookCallback = () => void;\n\nexport class BaseFlag {\n\tprotected _state: boolean = true;\n\tprotected _hooks: FlagHookCallback[] | null = null;\n\tconstructor(protected node: BaseNodeType) {}\n\n\tonUpdate(hook: FlagHookCallback) {\n\t\tthis._hooks = this._hooks || [];\n\t\tthis._hooks.push(hook);\n\t}\n\tprotected _onUpdate() {}\n\tset(newState: boolean) {\n\t\tif (this._state != newState) {\n\t\t\tif (this.node.insideALockedParent()) {\n\t\t\t\tconst lockedParent = this.node.lockedParent();\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`node '${this.node.path()}' cannot have its flag changed, since it is inside '${\n\t\t\t\t\t\tlockedParent ? lockedParent.path() : ''\n\t\t\t\t\t}', which is locked`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._state = newState;\n\t\t\tthis._onUpdate();\n\t\t\tthis.runHooks();\n\t\t}\n\t}\n\tactive() {\n\t\treturn this._state;\n\t}\n\ttoggle() {\n\t\tthis.set(!this._state);\n\t}\n\tprivate runHooks() {\n\t\tif (this._hooks) {\n\t\t\tfor (const hook of this._hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseFlag} from './Base';\nimport {NodeEvent} from '../../../poly/NodeEvent';\n\nexport class BypassFlag extends BaseFlag {\n\tprotected override _state: boolean = false;\n\tprotected override _onUpdate() {\n\t\tthis.node.emit(NodeEvent.FLAG_BYPASS_UPDATED);\n\t\tthis.node.setDirty();\n\t}\n}\n","import {BaseFlag} from './Base';\nimport {NodeEvent} from '../../../poly/NodeEvent';\n\nexport class DisplayFlag extends BaseFlag {\n\tprotected override _onUpdate() {\n\t\tthis.node.emit(NodeEvent.FLAG_DISPLAY_UPDATED);\n\t\t// this.node.setDirty();\n\t}\n}\n","import {BaseFlag} from './Base';\nimport {NodeEvent} from '../../../poly/NodeEvent';\n\nexport class OptimizeFlag extends BaseFlag {\n\tprotected override _state: boolean = false;\n\tprotected override _onUpdate() {\n\t\tthis.node.emit(NodeEvent.FLAG_OPTIMIZE_UPDATED);\n\t}\n}\n","import {Constructor} from '../../../types/GlobalTypes';\nimport {BaseNodeType} from '../_Base';\nimport {BypassFlag} from './flags/Bypass';\nimport {DisplayFlag} from './flags/Display';\nimport {OptimizeFlag} from './flags/Optimize';\n\nexport class FlagsController {\n\tpublic readonly bypass: DisplayFlag | undefined;\n\tpublic readonly display: BypassFlag | undefined;\n\tpublic readonly optimize: OptimizeFlag | undefined;\n\tconstructor(public readonly node: BaseNodeType) {}\n\thasDisplay(): boolean {\n\t\treturn false;\n\t}\n\thasBypass(): boolean {\n\t\treturn false;\n\t}\n\thasOptimize(): boolean {\n\t\treturn false;\n\t}\n}\n\nfunction Display<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tpublic readonly node!: BaseNodeType;\n\t\tpublic display: DisplayFlag = new DisplayFlag(this.node);\n\t\thasDisplay(): boolean {\n\t\t\treturn true;\n\t\t}\n\t};\n}\nfunction Bypass<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tpublic readonly node!: BaseNodeType;\n\t\tpublic readonly bypass: BypassFlag = new BypassFlag(this.node);\n\t\thasBypass(): boolean {\n\t\t\treturn true;\n\t\t}\n\t};\n}\nfunction Optimize<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tpublic readonly node!: BaseNodeType;\n\t\tpublic readonly optimize: OptimizeFlag = new OptimizeFlag(this.node);\n\t\thasOptimize(): boolean {\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\nexport class FlagsControllerD extends Display(FlagsController) {}\nexport class FlagsControllerB extends Bypass(FlagsController) {}\nexport class FlagsControllerDB extends Bypass(Display(FlagsController)) {}\nexport class FlagsControllerBO extends Optimize(Bypass(FlagsController)) {}\nexport class FlagsControllerDBO extends Optimize(Bypass(Display(FlagsController))) {}\n","import {ParamType} from '../../../../poly/ParamType';\nimport {ParamInitValuesTypeMap} from '../../../../params/types/ParamInitValuesTypeMap';\n\nimport {TypedParam, BaseParamType} from '../../../../params/_Base';\nimport {NodeContext} from '../../../../poly/NodeContext';\nimport {BaseNodeType} from '../../../_Base';\nimport {ParamOptions} from '../../../../params/utils/OptionsController';\n\n// import {ParamValueComparer} from '../../params/ParamValueComparer';\n// import {ParamValueCloner} from '../../params/ParamValueCloner';\n// import {CoreTextureLoader} from '../../../../../Core/Loader/Texture'\n\nexport class BaseParamConfig<T extends ParamType> {\n\t// private _texture_loader: CoreTextureLoader\n\n\tconstructor(protected _type: T, protected _name: string, protected _defaultValue: ParamInitValuesTypeMap[T]) {\n\t\tif (_name == '' || _name == null) {\n\t\t\tthrow new Error(`name must not be an empty string`);\n\t\t}\n\t}\n\n\tstatic fromParam<K extends ParamType>(param: TypedParam<K>): BaseParamConfig<K> {\n\t\treturn new BaseParamConfig<K>(param.type(), param.name(), param.defaultValue());\n\t}\n\n\ttype() {\n\t\treturn this._type;\n\t}\n\tname() {\n\t\treturn this._name;\n\t}\n\tdefaultValue() {\n\t\treturn this._defaultValue;\n\t}\n\n\tparamOptions(): ParamOptions {\n\t\tconst callbackBound = this._callback.bind(this);\n\t\tswitch (this._type) {\n\t\t\tcase ParamType.NODE_PATH:\n\t\t\t\treturn {callback: callbackBound, nodeSelection: {context: NodeContext.COP}};\n\t\t\tdefault:\n\t\t\t\treturn {callback: callbackBound};\n\t\t}\n\t}\n\tapplyToNode(node: BaseNodeType) {\n\t\tif (!node.params.has(this._name)) {\n\t\t\treturn;\n\t\t}\n\t\tconst param = node.params.get(this._name);\n\t\tif (!param) {\n\t\t\treturn;\n\t\t}\n\t\tconst additionalOptions = this.paramOptions();\n\t\tconst additionalOptionNames = Object.keys(additionalOptions) as Array<keyof ParamOptions>;\n\t\tfor (const optionName of additionalOptionNames) {\n\t\t\tparam.options.setOption(optionName, additionalOptions[optionName]);\n\t\t}\n\n\t\t// We force the param configs to run their callbacks to ensure that the uniforms are up to date.\n\t\t// This seems better than running the parameter options callback, since it would check\n\t\t// if the scene is loading or the node cooking, which is unnecessary for uniforms\n\t\tthis.executeCallback(node, param);\n\n\t\t// we also have a special case for operator path,\n\t\t// since they would not have found their node at load time\n\t\tif (param.type() == ParamType.NODE_PATH) {\n\t\t\tsetTimeout(async () => {\n\t\t\t\tif (param.isDirty()) {\n\t\t\t\t\tawait param.compute();\n\t\t\t\t}\n\t\t\t\tparam.options.executeCallback();\n\t\t\t}, 200);\n\t\t}\n\t}\n\texecuteCallback(node: BaseNodeType, param: BaseParamType) {\n\t\tthis._callback(node, param);\n\t}\n\n\tprotected _callback(node: BaseNodeType, param: BaseParamType) {}\n}\n","import {EventDispatcher,BaseEvent} from 'three';\nimport {BaseNodeByContextMap, NodeContext} from '../../../poly/NodeContext';\nimport {TypedNode} from '../../_Base';\n// import {NodeTypeMap} from '../../../containers/utils/ContainerMap';\nimport {ConnectionPointTypeMap} from './connections/ConnectionMap';\ninterface DisconnectionOptions {\n\tsetInput?: boolean;\n\tignoreLockedState?: boolean;\n}\nexport const NODE_CONNECTION_TRIGGERED_EVENT_NAME:'triggered' = 'triggered';\nexport const NODE_CONNECTION_TRIGGERED_EVENT:BaseEvent<'triggered'> = {type: NODE_CONNECTION_TRIGGERED_EVENT_NAME};\n\nexport class TypedNodeConnection<NC extends NodeContext> {\n\tprivate static _nextId: number = 0;\n\tprivate _id: number;\n\n\tconstructor(\n\t\tprivate _nodeSrc: TypedNode<NC, any>,\n\t\tprivate _nodeDest: TypedNode<NC, any>,\n\t\tprivate _outputIndex: number = 0,\n\t\tprivate _inputIndex: number = 0\n\t) {\n\t\tif (this._outputIndex == null) {\n\t\t\tthrow 'bad output index';\n\t\t}\n\t\tif (this._inputIndex == null) {\n\t\t\tthrow 'bad input index';\n\t\t}\n\n\t\tthis._id = TypedNodeConnection._nextId++;\n\n\t\tif (this._nodeSrc.io.connections && this._nodeDest.io.connections) {\n\t\t\tthis._nodeSrc.io.connections.addOutputConnection(this);\n\t\t\tthis._nodeDest.io.connections.addInputConnection(this);\n\t\t}\n\t}\n\tid() {\n\t\treturn this._id;\n\t}\n\n\tnodeSrc(): BaseNodeByContextMap[NC] {\n\t\treturn (<unknown>this._nodeSrc) as BaseNodeByContextMap[NC];\n\t}\n\tnodeDest(): BaseNodeByContextMap[NC] {\n\t\treturn (<unknown>this._nodeDest) as BaseNodeByContextMap[NC];\n\t}\n\toutputIndex() {\n\t\treturn this._outputIndex;\n\t}\n\tinputIndex() {\n\t\treturn this._inputIndex;\n\t}\n\tsrcConnectionPoint(): ConnectionPointTypeMap[NC] | undefined {\n\t\tconst connectionPoints = this._nodeSrc.io.outputs.namedOutputConnectionPoints();\n\t\tif (!connectionPoints) {\n\t\t\treturn;\n\t\t}\n\t\treturn connectionPoints[this._outputIndex];\n\t}\n\tdestConnectionPoint(): ConnectionPointTypeMap[NC] | undefined {\n\t\tconst connectionPoints = this._nodeDest.io.inputs.namedInputConnectionPoints();\n\t\tif (!connectionPoints) {\n\t\t\treturn;\n\t\t}\n\t\treturn connectionPoints[this._inputIndex];\n\t}\n\n\tdisconnect(options: DisconnectionOptions = {}) {\n\t\tif (this._nodeSrc.io.connections && this._nodeDest.io.connections) {\n\t\t\tthis._nodeSrc.io.connections.removeOutputConnection(this);\n\t\t\tthis._nodeDest.io.connections.removeInputConnection(this);\n\t\t}\n\n\t\tif (options.setInput === true) {\n\t\t\tthis._nodeDest.io.inputs.setInput(this._inputIndex, null, undefined, {\n\t\t\t\tignoreLockedState: options.ignoreLockedState,\n\t\t\t});\n\t\t}\n\t}\n\n\t// observer\n\tprivate __eventDispatcher: EventDispatcher<{triggered:any}> | undefined;\n\t_eventDispatcher() {\n\t\treturn this.__eventDispatcher;\n\t}\n\teventDispatcher() {\n\t\treturn (this.__eventDispatcher = this.__eventDispatcher || new EventDispatcher());\n\t}\n}\n","//\n//\n// Event Data types\n//\n//\n\nexport enum EventConnectionPointType {\n\tBASE = 'base',\n\tDRAG = 'drag',\n\tKEYBOARD = 'keyboard',\n\tMOUSE = 'mouse',\n\tPOINTER = 'pointer',\n}\n// interface IEventConnectionPointType {\n// \t[EventConnectionPointType.BASE]: Readonly<'base'>;\n// \t[EventConnectionPointType.KEYBOARD]: Readonly<'keyboard'>;\n// \t[EventConnectionPointType.MOUSE]: Readonly<'mouse'>;\n// }\n\n// export const ConnectionPointTypeGL: IEventConnectionPointType = {\n// \t[EventConnectionPointType.BASE]: 'base',\n// \t[EventConnectionPointType.KEYBOARD]: 'keyboard',\n// \t[EventConnectionPointType.MOUSE]: 'mouse',\n// };\n\n//\n//\n// ALL Event Data types in an array\n//\n//\nexport const EVENT_CONNECTION_POINT_TYPES: Array<EventConnectionPointType> = [\n\tEventConnectionPointType.BASE,\n\tEventConnectionPointType.DRAG,\n\tEventConnectionPointType.KEYBOARD,\n\tEventConnectionPointType.MOUSE,\n\tEventConnectionPointType.POINTER,\n];\n\nexport interface EventConnectionPointData<T extends EventConnectionPointType> {\n\tname: string;\n\ttype: T;\n\tisArray?: boolean;\n}\n\nimport {BaseConnectionPoint} from './_Base';\nimport {EventContext} from '../../../../scene/utils/events/_BaseEventsController';\nimport {ParamType} from '../../../../poly/ParamType';\nexport class EventConnectionPoint<T extends EventConnectionPointType> extends BaseConnectionPoint {\n\tprotected override _json: EventConnectionPointData<T> | undefined;\n\n\tconstructor(\n\t\tprotected override _name: string,\n\t\tprotected override _type: T, // protected _init_value?: ConnectionPointInitValueMapGeneric[T]\n\t\tprotected _event_listener?: (event_context: EventContext<any>) => void\n\t) {\n\t\tsuper(_name, _type);\n\t\t// if (this._init_value === undefined) {\n\t\t// this._init_value = null\n\t\t// }\n\t}\n\toverride type() {\n\t\treturn this._type;\n\t}\n\tget param_type() {\n\t\treturn ParamType.FLOAT; // should never be used anyway\n\t}\n\toverride are_types_matched(src_type: string, dest_type: string): boolean {\n\t\tif (dest_type == EventConnectionPointType.BASE) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn src_type == dest_type;\n\t\t}\n\t}\n\tget event_listener() {\n\t\treturn this._event_listener;\n\t}\n\t// get param_type(): IConnectionPointTypeToParamTypeMap[T] {\n\t// \treturn ConnectionPointTypeToParamTypeMap[this._type];\n\t// }\n\t// get init_value() {\n\t// \treturn this._init_value;\n\t// }\n\n\toverride toJSON(): EventConnectionPointData<T> {\n\t\treturn (this._json = this._json || this._createJSON());\n\t}\n\tprotected override _createJSON(): EventConnectionPointData<T> {\n\t\treturn {\n\t\t\tname: this._name,\n\t\t\ttype: this._type,\n\t\t\tisArray: false,\n\t\t};\n\t}\n}\n\nexport type BaseEventConnectionPoint = EventConnectionPoint<EventConnectionPointType>;\n","import {ParamInitValuesTypeMap} from '../../../../params/types/ParamInitValuesTypeMap';\n\nimport {ParamType} from '../../../../poly/ParamType';\nimport {RampParam} from '../../../../params/Ramp';\n// import {BaseTypedConnection} from './_Base';\n\n// TODO: simplify GLDataType into one enum\n// http://learnwebgl.brown37.net/12_shader_language/glsl_data_types.html\n\n//\n//\n// GL Data types\n//\n//\n\nexport enum GlConnectionPointType {\n\tBOOL = 'bool',\n\t// BVEC2 = 'bvec2',\n\t// BVEC3 = 'bvec3',\n\t// BVEC4 = 'bvec4',\n\tINT = 'int',\n\t// IVEC2 = 'ivec2',\n\t// IVEC3 = 'ivec3',\n\t// IVEC4 = 'ivec4',\n\tFLOAT = 'float',\n\tMAT3 = 'mat3',\n\tMAT4 = 'mat4',\n\tVEC2 = 'vec2',\n\tVEC3 = 'vec3',\n\tVEC4 = 'vec4',\n\t// matrices to be used later\n\t// MAT2 = 'mat2',\n\t// MAT3 = 'mat3',\n\t// MAT4 = 'mat4',\n\tSAMPLER_2D = 'sampler2D',\n\tSAMPLER_2D_ARRAY = 'sampler2DArray',\n\tSAMPLER_3D = 'sampler3D',\n\tSAMPLER_CUBE = 'samplerCube',\n\tSSS_MODEL = 'SSSModel',\n\tSDF_CONTEXT = 'SDFContext',\n\tSDF_MATERIAL = 'SDFMaterial',\n}\n// interface IGlConnectionPointType {\n// \t[EnumGlConnectionPointType.BOOL]: Readonly<'bool'>;\n// \t// BVEC2 = 'bvec2',\n// \t// BVEC3 = 'bvec3',\n// \t// BVEC4 = 'bvec4',\n// \t[EnumGlConnectionPointType.INT]: Readonly<'int'>;\n// \t// IVEC2 = 'ivec2',\n// \t// IVEC3 = 'ivec3',\n// \t// IVEC4 = 'ivec4',\n// \t[EnumGlConnectionPointType.FLOAT]: Readonly<'float'>;\n// \t[EnumGlConnectionPointType.VEC2]: Readonly<'vec2'>;\n// \t[EnumGlConnectionPointType.VEC3]: Readonly<'vec3'>;\n// \t[EnumGlConnectionPointType.VEC4]: Readonly<'vec4'>;\n// \t// matrices to be used later\n// \t// MAT2 = 'mat2',\n// \t// MAT3 = 'mat3',\n// \t// MAT4 = 'mat4',\n// \t[EnumGlConnectionPointType.SAMPLER_2D]: Readonly<'sampler2D'>;\n// }\n\n// export const GlConnectionPointType: IGlConnectionPointType = {\n// \t[EnumGlConnectionPointType.BOOL]: 'bool',\n// \t// BVEC2 = 'bvec2',\n// \t// BVEC3 = 'bvec3',\n// \t// BVEC4 = 'bvec4',\n// \t[EnumGlConnectionPointType.INT]: 'int',\n// \t// IVEC2 = 'ivec2',\n// \t// IVEC3 = 'ivec3',\n// \t// IVEC4 = 'ivec4',\n// \t[EnumGlConnectionPointType.FLOAT]: 'float',\n// \t[EnumGlConnectionPointType.VEC2]: 'vec2',\n// \t[EnumGlConnectionPointType.VEC3]: 'vec3',\n// \t[EnumGlConnectionPointType.VEC4]: 'vec4',\n// \t// matrices to be used later\n// \t// MAT2 = 'mat2',\n// \t// MAT3 = 'mat3',\n// \t// MAT4 = 'mat4',\n// \t[EnumGlConnectionPointType.SAMPLER_2D]: 'sampler2D',\n// };\n\n//\n//\n// ALL GL Data types in an array\n//\n//\nexport const GL_CONNECTION_POINT_TYPES: Array<GlConnectionPointType> = [\n\tGlConnectionPointType.BOOL,\n\t// ConnectionPointType.BVEC2,\n\t// ConnectionPointType.BVEC3,\n\t// ConnectionPointType.BVEC4,\n\tGlConnectionPointType.INT,\n\t// ConnectionPointType.IVEC2,\n\t// ConnectionPointType.IVEC3,\n\t// ConnectionPointType.IVEC4,\n\tGlConnectionPointType.FLOAT,\n\tGlConnectionPointType.VEC2,\n\tGlConnectionPointType.VEC3,\n\tGlConnectionPointType.VEC4,\n\tGlConnectionPointType.MAT3,\n\tGlConnectionPointType.MAT4,\n\tGlConnectionPointType.SAMPLER_2D,\n\tGlConnectionPointType.SSS_MODEL,\n\tGlConnectionPointType.SDF_CONTEXT,\n\tGlConnectionPointType.SDF_MATERIAL,\n];\nexport const GL_CONNECTION_POINT_TYPES_FOR_CONSTANT: Array<GlConnectionPointType> = [\n\tGlConnectionPointType.BOOL,\n\tGlConnectionPointType.INT,\n\tGlConnectionPointType.FLOAT,\n\tGlConnectionPointType.VEC2,\n\tGlConnectionPointType.VEC3,\n\tGlConnectionPointType.VEC4,\n];\n\n//\n//\n// Map to convert from a GL Data type to a ParamType\n//\n//\ntype GlConnectionPointTypeToParamTypeMapGeneric = {[key in GlConnectionPointType]: ParamType};\nexport interface GlIConnectionPointTypeToParamTypeMap extends GlConnectionPointTypeToParamTypeMapGeneric {\n\t[GlConnectionPointType.BOOL]: ParamType.BOOLEAN;\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[GlConnectionPointType.INT]: ParamType.INTEGER;\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[GlConnectionPointType.FLOAT]: ParamType.FLOAT;\n\t[GlConnectionPointType.VEC2]: ParamType.VECTOR2;\n\t[GlConnectionPointType.VEC3]: ParamType.VECTOR3;\n\t[GlConnectionPointType.VEC4]: ParamType.VECTOR4;\n\t[GlConnectionPointType.MAT3]: ParamType.BUTTON;\n\t[GlConnectionPointType.MAT4]: ParamType.BUTTON;\n}\nexport const GlConnectionPointTypeToParamTypeMap: GlIConnectionPointTypeToParamTypeMap = {\n\t[GlConnectionPointType.BOOL]: ParamType.BOOLEAN,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[GlConnectionPointType.INT]: ParamType.INTEGER,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[GlConnectionPointType.FLOAT]: ParamType.FLOAT,\n\t[GlConnectionPointType.VEC2]: ParamType.VECTOR2,\n\t[GlConnectionPointType.VEC3]: ParamType.VECTOR3,\n\t[GlConnectionPointType.VEC4]: ParamType.VECTOR4,\n\t[GlConnectionPointType.MAT3]: ParamType.BUTTON,\n\t[GlConnectionPointType.MAT4]: ParamType.BUTTON,\n\n\t[GlConnectionPointType.SAMPLER_2D]: ParamType.RAMP,\n\t[GlConnectionPointType.SAMPLER_2D_ARRAY]: ParamType.RAMP,\n\t[GlConnectionPointType.SAMPLER_3D]: ParamType.RAMP,\n\t[GlConnectionPointType.SAMPLER_CUBE]: ParamType.RAMP,\n\t[GlConnectionPointType.SSS_MODEL]: ParamType.STRING,\n\t[GlConnectionPointType.SDF_CONTEXT]: ParamType.STRING,\n\t[GlConnectionPointType.SDF_MATERIAL]: ParamType.STRING,\n};\n\n//\n//\n// Map to convert from a ParamType to GL Data type\n//\n//\ntype GLParamTypeToConnectionPointTypeMapGeneric = {[key in ParamType]: GlConnectionPointType | undefined};\nexport interface IGLParamTypeToConnectionPointTypeMap extends GLParamTypeToConnectionPointTypeMapGeneric {\n\t[ParamType.BOOLEAN]: GlConnectionPointType.BOOL;\n\t[ParamType.COLOR]: GlConnectionPointType.VEC3;\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ParamType.INTEGER]: GlConnectionPointType.INT;\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ParamType.FLOAT]: GlConnectionPointType.FLOAT;\n\t[ParamType.FOLDER]: undefined;\n\t[ParamType.VECTOR2]: GlConnectionPointType.VEC2;\n\t[ParamType.VECTOR3]: GlConnectionPointType.VEC3;\n\t[ParamType.VECTOR4]: GlConnectionPointType.VEC4;\n\t[ParamType.BUTTON]: undefined;\n\t// [ParamType.OPERATOR_PATH]: undefined;\n\t[ParamType.NODE_PATH]: undefined;\n\t[ParamType.PARAM_PATH]: undefined;\n\t[ParamType.RAMP]: undefined;\n\t[ParamType.STRING]: undefined;\n}\nexport const GLParamTypeToConnectionPointTypeMap: IGLParamTypeToConnectionPointTypeMap = {\n\t[ParamType.BOOLEAN]: GlConnectionPointType.BOOL,\n\t[ParamType.COLOR]: GlConnectionPointType.VEC3,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ParamType.INTEGER]: GlConnectionPointType.INT,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ParamType.FLOAT]: GlConnectionPointType.FLOAT,\n\t[ParamType.FOLDER]: undefined,\n\t[ParamType.VECTOR2]: GlConnectionPointType.VEC2,\n\t[ParamType.VECTOR3]: GlConnectionPointType.VEC3,\n\t[ParamType.VECTOR4]: GlConnectionPointType.VEC4,\n\t[ParamType.BUTTON]: undefined,\n\t// [ParamType.OPERATOR_PATH]: undefined,\n\t[ParamType.PARAM_PATH]: undefined,\n\t[ParamType.NODE_PATH]: undefined,\n\t[ParamType.RAMP]: undefined,\n\t[ParamType.STRING]: undefined,\n};\n\n//\n//\n// Map of GL Data type default values\n//\n//\nexport type GlConnectionPointInitValueMapGeneric = {\n\t[key in GlConnectionPointType]: ParamInitValuesTypeMap[GlIConnectionPointTypeToParamTypeMap[key]];\n};\nexport const GlConnectionPointInitValueMap: GlConnectionPointInitValueMapGeneric = {\n\t[GlConnectionPointType.BOOL]: false,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[GlConnectionPointType.INT]: 0,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[GlConnectionPointType.FLOAT]: 0,\n\t[GlConnectionPointType.VEC2]: [0, 0],\n\t[GlConnectionPointType.VEC3]: [0, 0, 0],\n\t[GlConnectionPointType.VEC4]: [0, 0, 0, 0],\n\t[GlConnectionPointType.MAT3]: null,\n\t[GlConnectionPointType.MAT4]: null,\n\n\t[GlConnectionPointType.SAMPLER_2D]: RampParam.DEFAULT_VALUE_JSON,\n\t[GlConnectionPointType.SAMPLER_2D_ARRAY]: RampParam.DEFAULT_VALUE_JSON,\n\t[GlConnectionPointType.SAMPLER_3D]: RampParam.DEFAULT_VALUE_JSON,\n\t[GlConnectionPointType.SAMPLER_CUBE]: RampParam.DEFAULT_VALUE_JSON,\n\t[GlConnectionPointType.SSS_MODEL]: 'SSSModel()',\n\t[GlConnectionPointType.SDF_CONTEXT]: 'DefaultSDFContext()',\n\t[GlConnectionPointType.SDF_MATERIAL]: 'DefaultSDFMaterial()',\n};\n\n//\n//\n// Map of GL Data type component counts\n//\n//\nexport type ConnectionPointComponentsCountMapGeneric = {\n\t[key in GlConnectionPointType]: number;\n};\nexport const GlConnectionPointComponentsCountMap: ConnectionPointComponentsCountMapGeneric = {\n\t[GlConnectionPointType.BOOL]: 1,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[GlConnectionPointType.INT]: 1,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[GlConnectionPointType.FLOAT]: 1,\n\t[GlConnectionPointType.VEC2]: 2,\n\t[GlConnectionPointType.VEC3]: 3,\n\t[GlConnectionPointType.VEC4]: 4,\n\t[GlConnectionPointType.MAT3]: 9,\n\t[GlConnectionPointType.MAT4]: 16,\n\t[GlConnectionPointType.SAMPLER_2D]: 1,\n\t[GlConnectionPointType.SAMPLER_2D_ARRAY]: 1,\n\t[GlConnectionPointType.SAMPLER_3D]: 1,\n\t[GlConnectionPointType.SAMPLER_CUBE]: 1,\n\t[GlConnectionPointType.SSS_MODEL]: 1,\n\t[GlConnectionPointType.SDF_CONTEXT]: 1,\n\t[GlConnectionPointType.SDF_MATERIAL]: 1,\n};\n\n// import {\n// ConnectionPointType,\n// ConnectionPointInitValueMapGeneric,\n// ConnectionPointInitValueMap,\n// ConnectionPointTypeToParamTypeMap,\n// IConnectionPointTypeToParamTypeMap,\n// } from '../ConnectionPointType';\n// import {ParamInitValuesTypeMap} from '../params/ParamsController';\n\nexport interface GlConnectionPointData<T extends GlConnectionPointType> {\n\tname: string;\n\ttype: T;\n\tisArray?: boolean;\n}\n\nimport {BaseConnectionPoint} from './_Base';\nexport class GlConnectionPoint<T extends GlConnectionPointType> extends BaseConnectionPoint {\n\tprotected override _json: GlConnectionPointData<T> | undefined;\n\t// protected _init_value: any;\n\n\tconstructor(\n\t\tprotected override _name: string,\n\t\tprotected override _type: T,\n\t\tprotected override _init_value?: GlConnectionPointInitValueMapGeneric[T]\n\t) {\n\t\tsuper(_name, _type);\n\t\t// if (this._init_value === undefined) {\n\t\tthis._init_value = this._init_value || GlConnectionPointInitValueMap[this._type];\n\t\t// }\n\t}\n\toverride type() {\n\t\treturn this._type;\n\t}\n\toverride are_types_matched(src_type: string, dest_type: string): boolean {\n\t\treturn src_type == dest_type;\n\t}\n\tget param_type(): GlIConnectionPointTypeToParamTypeMap[T] {\n\t\treturn GlConnectionPointTypeToParamTypeMap[this._type];\n\t}\n\toverride get init_value() {\n\t\treturn this._init_value;\n\t}\n\n\toverride toJSON(): GlConnectionPointData<T> {\n\t\treturn (this._json = this._json || this._createJSON());\n\t}\n\tprotected override _createJSON(): GlConnectionPointData<T> {\n\t\treturn {\n\t\t\tname: this._name,\n\t\t\ttype: this._type,\n\t\t\t// isArray: false,\n\t\t};\n\t}\n}\n\nexport type BaseGlConnectionPoint = GlConnectionPoint<GlConnectionPointType>;\n","import {Plane} from '@jscad/modeling/src/maths/plane';\nimport {\n\tAnimationAction,\n\tAnimationMixer,\n\tBox3,\n\tCamera,\n\tCatmullRomCurve3,\n\tColor,\n\tMatrix4,\n\tQuaternion,\n\tVector2,\n\tVector3,\n\tVector4,\n\tIntersection,\n\tMaterial,\n\tObject3D,\n\tRay,\n\tSphere,\n\tTexture,\n\tEuler,\n} from 'three';\nimport {ParamInitValuesTypeMap} from '../../../../params/types/ParamInitValuesTypeMap';\nimport {ParamType} from '../../../../poly/ParamType';\nimport {BaseConnectionPoint} from './_Base';\nimport {BaseParamType} from '../../../../params/_Base';\nimport {BaseNodeType} from '../../../_Base';\n\nexport enum JsConnectionPointType {\n\tANIMATION_MIXER = 'AnimationMixer',\n\tANIMATION_ACTION = 'AnimationAction',\n\tBOOLEAN = 'boolean',\n\tBOOLEAN_ARRAY = 'boolean[]',\n\tBOX3 = 'Box3',\n\tCAMERA = 'Camera',\n\tCATMULL_ROM_CURVE3 = 'CatmullRomCurve3',\n\tCOLOR = 'Color',\n\tCOLOR_ARRAY = 'Color[]',\n\tEULER = 'Euler',\n\tEULER_ARRAY = 'Euler[]',\n\tFLOAT = 'float',\n\tFLOAT_ARRAY = 'float[]',\n\tINT = 'int',\n\tINT_ARRAY = 'int[]',\n\tINTERSECTION = 'Intersection',\n\tINTERSECTION_ARRAY = 'Intersection[]',\n\tMATERIAL = 'Material',\n\tMATRIX4 = 'Matrix4',\n\tMATRIX4_ARRAY = 'Matrix4[]',\n\tNODE = 'Node',\n\tOBJECT_3D = 'Object3D',\n\tOBJECT_3D_ARRAY = 'Object3D[]',\n\tPARAM = 'Param',\n\tPLANE = 'Plane',\n\tQUATERNION = 'Quaternion',\n\tQUATERNION_ARRAY = 'Quaternion[]',\n\tRAY = 'Ray',\n\tSPHERE = 'Sphere',\n\tSTRING = 'string',\n\tSTRING_ARRAY = 'string[]',\n\tTEXTURE = 'Texture',\n\tTEXTURE_ARRAY = 'Texture[]',\n\tTRIGGER = 'trigger',\n\tVECTOR2 = 'Vector2',\n\tVECTOR2_ARRAY = 'Vector2[]',\n\tVECTOR3 = 'Vector3',\n\tVECTOR3_ARRAY = 'Vector3[]',\n\tVECTOR4 = 'Vector4',\n\tVECTOR4_ARRAY = 'Vector4[]',\n\t// MAT3 = 'mat3',\n\t// MAT4 = 'mat4',\n}\nexport type PrimitiveArrayElement = boolean | number | string;\nexport type VectorArrayElement = Color | Euler | Matrix4 | Quaternion | Vector2 | Vector3 | Vector4;\nconst NUMBER_JS_CONNECTION_TYPES = new Set([JsConnectionPointType.FLOAT, JsConnectionPointType.INT]);\nconst PRIMITIVE_JS_CONNECTION_TYPES = new Set([\n\tJsConnectionPointType.BOOLEAN,\n\tJsConnectionPointType.FLOAT,\n\tJsConnectionPointType.INT,\n\tJsConnectionPointType.STRING,\n]);\nconst VECTOR_JS_CONNECTION_TYPES = new Set([\n\tJsConnectionPointType.VECTOR2,\n\tJsConnectionPointType.VECTOR3,\n\tJsConnectionPointType.VECTOR4,\n]);\nexport const JS_CONNECTION_TYPES_FOR_CONSTANT = [\n\tJsConnectionPointType.BOOLEAN,\n\tJsConnectionPointType.COLOR,\n\tJsConnectionPointType.FLOAT,\n\tJsConnectionPointType.INT,\n\tJsConnectionPointType.STRING,\n\tJsConnectionPointType.VECTOR2,\n\tJsConnectionPointType.VECTOR3,\n\tJsConnectionPointType.VECTOR4,\n];\nexport function isJsConnectionPointNumber(type: JsConnectionPointType) {\n\treturn NUMBER_JS_CONNECTION_TYPES.has(type);\n}\nexport function isJsConnectionPointPrimitive(type: JsConnectionPointType) {\n\treturn PRIMITIVE_JS_CONNECTION_TYPES.has(type);\n}\nexport function isJsConnectionPointVector(type: JsConnectionPointType) {\n\treturn VECTOR_JS_CONNECTION_TYPES.has(type);\n}\nexport function isJsConnectionPointArray(type: JsConnectionPointType) {\n\treturn ARRAY_JS_CONNECTION_TYPES_SET.has(type as JsConnectionPointTypeArray);\n}\n\n//\n//\n// ALL Js Data types in an array\n//\n//\nexport const JS_CONNECTION_POINT_TYPES: Array<JsConnectionPointType> = [\n\tJsConnectionPointType.ANIMATION_MIXER,\n\tJsConnectionPointType.ANIMATION_ACTION,\n\tJsConnectionPointType.BOX3,\n\tJsConnectionPointType.BOOLEAN,\n\tJsConnectionPointType.BOOLEAN_ARRAY,\n\tJsConnectionPointType.CAMERA,\n\tJsConnectionPointType.CATMULL_ROM_CURVE3,\n\tJsConnectionPointType.COLOR,\n\tJsConnectionPointType.COLOR_ARRAY,\n\tJsConnectionPointType.EULER,\n\tJsConnectionPointType.EULER_ARRAY,\n\tJsConnectionPointType.FLOAT,\n\tJsConnectionPointType.FLOAT_ARRAY,\n\tJsConnectionPointType.INT,\n\tJsConnectionPointType.INT_ARRAY,\n\tJsConnectionPointType.INTERSECTION,\n\tJsConnectionPointType.INTERSECTION_ARRAY,\n\tJsConnectionPointType.MATERIAL,\n\tJsConnectionPointType.MATRIX4,\n\tJsConnectionPointType.MATRIX4_ARRAY,\n\tJsConnectionPointType.NODE,\n\tJsConnectionPointType.OBJECT_3D,\n\tJsConnectionPointType.OBJECT_3D_ARRAY,\n\tJsConnectionPointType.PARAM,\n\tJsConnectionPointType.PLANE,\n\tJsConnectionPointType.QUATERNION,\n\tJsConnectionPointType.QUATERNION_ARRAY,\n\tJsConnectionPointType.RAY,\n\tJsConnectionPointType.SPHERE,\n\tJsConnectionPointType.STRING,\n\tJsConnectionPointType.STRING_ARRAY,\n\tJsConnectionPointType.TEXTURE,\n\tJsConnectionPointType.TEXTURE_ARRAY,\n\tJsConnectionPointType.TRIGGER,\n\tJsConnectionPointType.VECTOR2,\n\tJsConnectionPointType.VECTOR2_ARRAY,\n\tJsConnectionPointType.VECTOR3,\n\tJsConnectionPointType.VECTOR3_ARRAY,\n\tJsConnectionPointType.VECTOR4,\n\tJsConnectionPointType.VECTOR4_ARRAY,\n\t// JsConnectionPointType.MAT3,\n\t// JsConnectionPointType.MAT4,\n];\n\ntype JsConnectionPointTypeToArrayTypeMapGeneric = {[key in JsConnectionPointType]: JsConnectionPointType};\nexport interface JsIConnectionPointTypeToArrayTypeMap extends JsConnectionPointTypeToArrayTypeMapGeneric {\n\t[JsConnectionPointType.ANIMATION_MIXER]: JsConnectionPointType.ANIMATION_MIXER;\n\t[JsConnectionPointType.ANIMATION_ACTION]: JsConnectionPointType.ANIMATION_ACTION;\n\t[JsConnectionPointType.BOOLEAN]: JsConnectionPointType.BOOLEAN_ARRAY;\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: JsConnectionPointType.BOOLEAN_ARRAY;\n\t[JsConnectionPointType.BOX3]: JsConnectionPointType.BOX3;\n\t[JsConnectionPointType.CAMERA]: JsConnectionPointType.CAMERA;\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: JsConnectionPointType.CATMULL_ROM_CURVE3;\n\t[JsConnectionPointType.COLOR]: JsConnectionPointType.COLOR_ARRAY;\n\t[JsConnectionPointType.COLOR_ARRAY]: JsConnectionPointType.COLOR_ARRAY;\n\t[JsConnectionPointType.EULER]: JsConnectionPointType.EULER_ARRAY;\n\t[JsConnectionPointType.EULER_ARRAY]: JsConnectionPointType.EULER_ARRAY;\n\t[JsConnectionPointType.FLOAT]: JsConnectionPointType.FLOAT_ARRAY;\n\t[JsConnectionPointType.FLOAT_ARRAY]: JsConnectionPointType.FLOAT_ARRAY;\n\t[JsConnectionPointType.INT]: JsConnectionPointType.INT_ARRAY;\n\t[JsConnectionPointType.INT_ARRAY]: JsConnectionPointType.INT_ARRAY;\n\t[JsConnectionPointType.INTERSECTION]: JsConnectionPointType.INTERSECTION_ARRAY;\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: JsConnectionPointType.INTERSECTION_ARRAY;\n\t[JsConnectionPointType.MATERIAL]: JsConnectionPointType.MATERIAL; //\n\t[JsConnectionPointType.MATRIX4]: JsConnectionPointType.MATRIX4_ARRAY; //\n\t[JsConnectionPointType.MATRIX4_ARRAY]: JsConnectionPointType.MATRIX4_ARRAY; //\n\t[JsConnectionPointType.NODE]: JsConnectionPointType.NODE; //\n\t[JsConnectionPointType.OBJECT_3D]: JsConnectionPointType.OBJECT_3D_ARRAY; //\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: JsConnectionPointType.OBJECT_3D_ARRAY; //\n\t[JsConnectionPointType.PARAM]: JsConnectionPointType.PARAM; //\n\t[JsConnectionPointType.PLANE]: JsConnectionPointType.PLANE; //\n\t[JsConnectionPointType.QUATERNION]: JsConnectionPointType.QUATERNION_ARRAY; //\n\t[JsConnectionPointType.QUATERNION_ARRAY]: JsConnectionPointType.QUATERNION_ARRAY; //\n\t[JsConnectionPointType.RAY]: JsConnectionPointType.RAY; //\n\t[JsConnectionPointType.SPHERE]: JsConnectionPointType.SPHERE; //\n\t[JsConnectionPointType.STRING]: JsConnectionPointType.STRING_ARRAY;\n\t[JsConnectionPointType.STRING_ARRAY]: JsConnectionPointType.STRING_ARRAY;\n\t[JsConnectionPointType.TEXTURE]: JsConnectionPointType.TEXTURE_ARRAY;\n\t[JsConnectionPointType.TEXTURE_ARRAY]: JsConnectionPointType.TEXTURE_ARRAY;\n\t[JsConnectionPointType.TRIGGER]: JsConnectionPointType.TRIGGER;\n\t[JsConnectionPointType.VECTOR2]: JsConnectionPointType.VECTOR2_ARRAY;\n\t[JsConnectionPointType.VECTOR2_ARRAY]: JsConnectionPointType.VECTOR2_ARRAY;\n\t[JsConnectionPointType.VECTOR3]: JsConnectionPointType.VECTOR3_ARRAY;\n\t[JsConnectionPointType.VECTOR3_ARRAY]: JsConnectionPointType.VECTOR3_ARRAY;\n\t[JsConnectionPointType.VECTOR4]: JsConnectionPointType.VECTOR4_ARRAY;\n\t[JsConnectionPointType.VECTOR4_ARRAY]: JsConnectionPointType.VECTOR4_ARRAY;\n}\nexport const JsConnectionPointTypeToArrayTypeMap: JsIConnectionPointTypeToArrayTypeMap = {\n\t[JsConnectionPointType.ANIMATION_MIXER]: JsConnectionPointType.ANIMATION_MIXER,\n\t[JsConnectionPointType.ANIMATION_ACTION]: JsConnectionPointType.ANIMATION_ACTION,\n\t[JsConnectionPointType.BOOLEAN]: JsConnectionPointType.BOOLEAN_ARRAY,\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: JsConnectionPointType.BOOLEAN_ARRAY,\n\t[JsConnectionPointType.BOX3]: JsConnectionPointType.BOX3,\n\t[JsConnectionPointType.CAMERA]: JsConnectionPointType.CAMERA,\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: JsConnectionPointType.CATMULL_ROM_CURVE3,\n\t[JsConnectionPointType.COLOR]: JsConnectionPointType.COLOR_ARRAY,\n\t[JsConnectionPointType.COLOR_ARRAY]: JsConnectionPointType.COLOR_ARRAY,\n\t[JsConnectionPointType.EULER]: JsConnectionPointType.EULER_ARRAY,\n\t[JsConnectionPointType.EULER_ARRAY]: JsConnectionPointType.EULER_ARRAY,\n\t[JsConnectionPointType.FLOAT]: JsConnectionPointType.FLOAT_ARRAY,\n\t[JsConnectionPointType.FLOAT_ARRAY]: JsConnectionPointType.FLOAT_ARRAY,\n\t[JsConnectionPointType.INT]: JsConnectionPointType.INT_ARRAY,\n\t[JsConnectionPointType.INT_ARRAY]: JsConnectionPointType.INT_ARRAY,\n\t[JsConnectionPointType.INTERSECTION]: JsConnectionPointType.INTERSECTION_ARRAY,\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: JsConnectionPointType.INTERSECTION_ARRAY,\n\t[JsConnectionPointType.MATERIAL]: JsConnectionPointType.MATERIAL,\n\t[JsConnectionPointType.MATRIX4]: JsConnectionPointType.MATRIX4_ARRAY,\n\t[JsConnectionPointType.MATRIX4_ARRAY]: JsConnectionPointType.MATRIX4_ARRAY,\n\t[JsConnectionPointType.NODE]: JsConnectionPointType.NODE,\n\t[JsConnectionPointType.OBJECT_3D]: JsConnectionPointType.OBJECT_3D_ARRAY,\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: JsConnectionPointType.OBJECT_3D_ARRAY,\n\t[JsConnectionPointType.PARAM]: JsConnectionPointType.PARAM,\n\t[JsConnectionPointType.PLANE]: JsConnectionPointType.PLANE,\n\t[JsConnectionPointType.QUATERNION]: JsConnectionPointType.QUATERNION_ARRAY,\n\t[JsConnectionPointType.QUATERNION_ARRAY]: JsConnectionPointType.QUATERNION_ARRAY,\n\t[JsConnectionPointType.RAY]: JsConnectionPointType.RAY,\n\t[JsConnectionPointType.SPHERE]: JsConnectionPointType.SPHERE, //\n\t[JsConnectionPointType.STRING]: JsConnectionPointType.STRING_ARRAY,\n\t[JsConnectionPointType.STRING_ARRAY]: JsConnectionPointType.STRING_ARRAY,\n\t[JsConnectionPointType.TEXTURE]: JsConnectionPointType.TEXTURE_ARRAY,\n\t[JsConnectionPointType.TEXTURE_ARRAY]: JsConnectionPointType.TEXTURE_ARRAY,\n\t// [ActorConnectionPointType.TRACKING_RESULT_HAND]: ActorConnectionPointType.TRACKING_RESULT_HAND,\n\t[JsConnectionPointType.TRIGGER]: JsConnectionPointType.TRIGGER,\n\t[JsConnectionPointType.VECTOR2]: JsConnectionPointType.VECTOR2_ARRAY,\n\t[JsConnectionPointType.VECTOR2_ARRAY]: JsConnectionPointType.VECTOR2_ARRAY,\n\t[JsConnectionPointType.VECTOR3]: JsConnectionPointType.VECTOR3_ARRAY,\n\t[JsConnectionPointType.VECTOR3_ARRAY]: JsConnectionPointType.VECTOR3_ARRAY,\n\t[JsConnectionPointType.VECTOR4]: JsConnectionPointType.VECTOR4_ARRAY,\n\t[JsConnectionPointType.VECTOR4_ARRAY]: JsConnectionPointType.VECTOR4_ARRAY,\n};\n\ntype JsConnectionPointTypeFromArrayTypeMapGeneric = {[key in JsConnectionPointType]: JsConnectionPointType};\nexport interface JsIConnectionPointTypeFromArrayTypeMap extends JsConnectionPointTypeFromArrayTypeMapGeneric {\n\t[JsConnectionPointType.ANIMATION_MIXER]: JsConnectionPointType.ANIMATION_MIXER;\n\t[JsConnectionPointType.ANIMATION_ACTION]: JsConnectionPointType.ANIMATION_ACTION;\n\t[JsConnectionPointType.BOOLEAN]: JsConnectionPointType.BOOLEAN;\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: JsConnectionPointType.BOOLEAN;\n\t[JsConnectionPointType.BOX3]: JsConnectionPointType.BOX3;\n\t[JsConnectionPointType.CAMERA]: JsConnectionPointType.CAMERA;\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: JsConnectionPointType.CATMULL_ROM_CURVE3;\n\t[JsConnectionPointType.COLOR]: JsConnectionPointType.COLOR;\n\t[JsConnectionPointType.COLOR_ARRAY]: JsConnectionPointType.COLOR;\n\t[JsConnectionPointType.EULER]: JsConnectionPointType.EULER;\n\t[JsConnectionPointType.EULER_ARRAY]: JsConnectionPointType.EULER;\n\t[JsConnectionPointType.FLOAT]: JsConnectionPointType.FLOAT;\n\t[JsConnectionPointType.FLOAT_ARRAY]: JsConnectionPointType.FLOAT;\n\t[JsConnectionPointType.INT]: JsConnectionPointType.INT;\n\t[JsConnectionPointType.INT_ARRAY]: JsConnectionPointType.INT;\n\t[JsConnectionPointType.INTERSECTION]: JsConnectionPointType.INTERSECTION;\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: JsConnectionPointType.INTERSECTION;\n\t[JsConnectionPointType.MATERIAL]: JsConnectionPointType.MATERIAL; //\n\t[JsConnectionPointType.MATRIX4]: JsConnectionPointType.MATRIX4; //\n\t[JsConnectionPointType.MATRIX4_ARRAY]: JsConnectionPointType.MATRIX4; //\n\t[JsConnectionPointType.NODE]: JsConnectionPointType.NODE; //\n\t[JsConnectionPointType.OBJECT_3D]: JsConnectionPointType.OBJECT_3D; //\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: JsConnectionPointType.OBJECT_3D; //\n\t[JsConnectionPointType.PARAM]: JsConnectionPointType.PARAM; //\n\t[JsConnectionPointType.PLANE]: JsConnectionPointType.PLANE; //\n\t[JsConnectionPointType.QUATERNION]: JsConnectionPointType.QUATERNION; //\n\t[JsConnectionPointType.QUATERNION_ARRAY]: JsConnectionPointType.QUATERNION; //\n\t[JsConnectionPointType.RAY]: JsConnectionPointType.RAY; //\n\t[JsConnectionPointType.SPHERE]: JsConnectionPointType.SPHERE; //\n\t[JsConnectionPointType.STRING]: JsConnectionPointType.STRING;\n\t[JsConnectionPointType.STRING_ARRAY]: JsConnectionPointType.STRING;\n\t[JsConnectionPointType.TEXTURE]: JsConnectionPointType.TEXTURE;\n\t[JsConnectionPointType.TEXTURE_ARRAY]: JsConnectionPointType.TEXTURE;\n\t[JsConnectionPointType.TRIGGER]: JsConnectionPointType.TRIGGER;\n\t[JsConnectionPointType.VECTOR2]: JsConnectionPointType.VECTOR2;\n\t[JsConnectionPointType.VECTOR2_ARRAY]: JsConnectionPointType.VECTOR2;\n\t[JsConnectionPointType.VECTOR3]: JsConnectionPointType.VECTOR3;\n\t[JsConnectionPointType.VECTOR3_ARRAY]: JsConnectionPointType.VECTOR3;\n\t[JsConnectionPointType.VECTOR4]: JsConnectionPointType.VECTOR4;\n\t[JsConnectionPointType.VECTOR4_ARRAY]: JsConnectionPointType.VECTOR4;\n}\nexport const JsConnectionPointTypeFromArrayTypeMap: JsIConnectionPointTypeFromArrayTypeMap = {\n\t[JsConnectionPointType.ANIMATION_MIXER]: JsConnectionPointType.ANIMATION_MIXER,\n\t[JsConnectionPointType.ANIMATION_ACTION]: JsConnectionPointType.ANIMATION_ACTION,\n\t[JsConnectionPointType.BOOLEAN]: JsConnectionPointType.BOOLEAN,\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: JsConnectionPointType.BOOLEAN,\n\t[JsConnectionPointType.BOX3]: JsConnectionPointType.BOX3,\n\t[JsConnectionPointType.CAMERA]: JsConnectionPointType.CAMERA,\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: JsConnectionPointType.CATMULL_ROM_CURVE3,\n\t[JsConnectionPointType.COLOR]: JsConnectionPointType.COLOR,\n\t[JsConnectionPointType.COLOR_ARRAY]: JsConnectionPointType.COLOR,\n\t[JsConnectionPointType.EULER]: JsConnectionPointType.EULER,\n\t[JsConnectionPointType.EULER_ARRAY]: JsConnectionPointType.EULER,\n\t[JsConnectionPointType.FLOAT]: JsConnectionPointType.FLOAT,\n\t[JsConnectionPointType.FLOAT_ARRAY]: JsConnectionPointType.FLOAT,\n\t[JsConnectionPointType.INT]: JsConnectionPointType.INT,\n\t[JsConnectionPointType.INT_ARRAY]: JsConnectionPointType.INT,\n\t[JsConnectionPointType.INTERSECTION]: JsConnectionPointType.INTERSECTION,\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: JsConnectionPointType.INTERSECTION,\n\t[JsConnectionPointType.MATERIAL]: JsConnectionPointType.MATERIAL,\n\t[JsConnectionPointType.MATRIX4]: JsConnectionPointType.MATRIX4,\n\t[JsConnectionPointType.MATRIX4_ARRAY]: JsConnectionPointType.MATRIX4,\n\t[JsConnectionPointType.NODE]: JsConnectionPointType.NODE,\n\t[JsConnectionPointType.OBJECT_3D]: JsConnectionPointType.OBJECT_3D,\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: JsConnectionPointType.OBJECT_3D,\n\t[JsConnectionPointType.PARAM]: JsConnectionPointType.PARAM,\n\t[JsConnectionPointType.PLANE]: JsConnectionPointType.PLANE,\n\t[JsConnectionPointType.QUATERNION]: JsConnectionPointType.QUATERNION,\n\t[JsConnectionPointType.QUATERNION_ARRAY]: JsConnectionPointType.QUATERNION,\n\t[JsConnectionPointType.RAY]: JsConnectionPointType.RAY,\n\t[JsConnectionPointType.SPHERE]: JsConnectionPointType.SPHERE, //\n\t[JsConnectionPointType.STRING]: JsConnectionPointType.STRING,\n\t[JsConnectionPointType.STRING_ARRAY]: JsConnectionPointType.STRING,\n\t[JsConnectionPointType.TEXTURE]: JsConnectionPointType.TEXTURE,\n\t[JsConnectionPointType.TEXTURE_ARRAY]: JsConnectionPointType.TEXTURE,\n\t// [ActorConnectionPointType.TRACKING_RESULT_HAND]: ActorConnectionPointType.TRACKING_RESULT_HAND,\n\t[JsConnectionPointType.TRIGGER]: JsConnectionPointType.TRIGGER,\n\t[JsConnectionPointType.VECTOR2]: JsConnectionPointType.VECTOR2,\n\t[JsConnectionPointType.VECTOR2_ARRAY]: JsConnectionPointType.VECTOR2,\n\t[JsConnectionPointType.VECTOR3]: JsConnectionPointType.VECTOR3,\n\t[JsConnectionPointType.VECTOR3_ARRAY]: JsConnectionPointType.VECTOR3,\n\t[JsConnectionPointType.VECTOR4]: JsConnectionPointType.VECTOR4,\n\t[JsConnectionPointType.VECTOR4_ARRAY]: JsConnectionPointType.VECTOR4,\n};\n\nexport type ArrayableConnectionPointType =\n\t| JsConnectionPointType.BOOLEAN\n\t| JsConnectionPointType.COLOR\n\t| JsConnectionPointType.FLOAT\n\t| JsConnectionPointType.INT\n\t| JsConnectionPointType.INTERSECTION\n\t| JsConnectionPointType.MATRIX4\n\t| JsConnectionPointType.QUATERNION\n\t| JsConnectionPointType.STRING\n\t| JsConnectionPointType.TEXTURE\n\t| JsConnectionPointType.VECTOR2\n\t| JsConnectionPointType.VECTOR3\n\t| JsConnectionPointType.VECTOR4;\nexport const ARRAYABLE_CONNECTION_TYPES: Set<ArrayableConnectionPointType> = new Set([\n\tJsConnectionPointType.BOOLEAN,\n\tJsConnectionPointType.COLOR,\n\tJsConnectionPointType.FLOAT,\n\tJsConnectionPointType.INT,\n\tJsConnectionPointType.INTERSECTION,\n\tJsConnectionPointType.MATRIX4,\n\tJsConnectionPointType.QUATERNION,\n\tJsConnectionPointType.STRING,\n\tJsConnectionPointType.TEXTURE,\n\tJsConnectionPointType.VECTOR2,\n\tJsConnectionPointType.VECTOR3,\n\tJsConnectionPointType.VECTOR4,\n]);\nexport type JsConnectionPointTypeArray =\n\t| JsConnectionPointType.BOOLEAN_ARRAY\n\t| JsConnectionPointType.COLOR_ARRAY\n\t| JsConnectionPointType.FLOAT_ARRAY\n\t| JsConnectionPointType.INT_ARRAY\n\t| JsConnectionPointType.INTERSECTION_ARRAY\n\t| JsConnectionPointType.MATRIX4_ARRAY\n\t| JsConnectionPointType.OBJECT_3D_ARRAY\n\t| JsConnectionPointType.QUATERNION_ARRAY\n\t| JsConnectionPointType.STRING_ARRAY\n\t| JsConnectionPointType.TEXTURE_ARRAY\n\t| JsConnectionPointType.VECTOR2_ARRAY\n\t| JsConnectionPointType.VECTOR3_ARRAY\n\t| JsConnectionPointType.VECTOR4_ARRAY;\n\nexport const ARRAY_JS_CONNECTION_TYPES: Array<JsConnectionPointTypeArray> = [\n\tJsConnectionPointType.BOOLEAN_ARRAY,\n\tJsConnectionPointType.COLOR_ARRAY,\n\tJsConnectionPointType.FLOAT_ARRAY,\n\tJsConnectionPointType.INT_ARRAY,\n\tJsConnectionPointType.INTERSECTION_ARRAY,\n\tJsConnectionPointType.MATRIX4_ARRAY,\n\tJsConnectionPointType.OBJECT_3D_ARRAY,\n\tJsConnectionPointType.QUATERNION_ARRAY,\n\tJsConnectionPointType.STRING_ARRAY,\n\tJsConnectionPointType.TEXTURE_ARRAY,\n\tJsConnectionPointType.VECTOR2_ARRAY,\n\tJsConnectionPointType.VECTOR3_ARRAY,\n\tJsConnectionPointType.VECTOR4_ARRAY,\n];\n\nexport const ARRAY_JS_CONNECTION_TYPES_SET: Set<JsConnectionPointTypeArray> = new Set(ARRAY_JS_CONNECTION_TYPES);\n\nexport type ParamConvertibleJsType =\n\t| JsConnectionPointType.BOOLEAN\n\t| JsConnectionPointType.COLOR\n\t| JsConnectionPointType.FLOAT\n\t| JsConnectionPointType.INT\n\t| JsConnectionPointType.STRING\n\t| JsConnectionPointType.VECTOR2\n\t| JsConnectionPointType.VECTOR3\n\t| JsConnectionPointType.VECTOR4;\nexport const PARAM_CONVERTIBLE_JS_CONNECTION_POINT_TYPES: Array<ParamConvertibleJsType> = [\n\tJsConnectionPointType.BOOLEAN,\n\tJsConnectionPointType.COLOR,\n\tJsConnectionPointType.FLOAT,\n\tJsConnectionPointType.INT,\n\tJsConnectionPointType.STRING,\n\tJsConnectionPointType.VECTOR2,\n\tJsConnectionPointType.VECTOR3,\n\tJsConnectionPointType.VECTOR4,\n];\nexport type PointAttributeJsType =\n\t| JsConnectionPointType.COLOR\n\t| JsConnectionPointType.FLOAT\n\t| JsConnectionPointType.INT\n\t| JsConnectionPointType.VECTOR2\n\t| JsConnectionPointType.VECTOR3\n\t| JsConnectionPointType.VECTOR4;\nexport const POINT_ATTRIBUTE_JS_CONNECTION_POINT_TYPES: Array<PointAttributeJsType> = [\n\tJsConnectionPointType.COLOR,\n\tJsConnectionPointType.FLOAT,\n\tJsConnectionPointType.INT,\n\tJsConnectionPointType.VECTOR2,\n\tJsConnectionPointType.VECTOR3,\n\tJsConnectionPointType.VECTOR4,\n];\n\n//\n//\n// GET DATA TYPE\n//\n//\nexport type JsDataType =\n\t| PrimitiveArrayElement\n\t| Array<PrimitiveArrayElement>\n\t| VectorArrayElement\n\t| Array<VectorArrayElement>\n\t| AnimationMixer\n\t| AnimationAction\n\t| Box3\n\t| Camera\n\t| CatmullRomCurve3\n\t| Euler\n\t| Euler[]\n\t| Intersection\n\t| Array<Intersection>\n\t| Material\n\t| Object3D\n\t| Array<Object3D>\n\t| Ray\n\t| Sphere\n\t| Texture\n\t| Array<Texture>\n\t| BaseNodeType\n\t| BaseParamType\n\t| null;\ntype JSConnectionPointTypeToDataTypeMapGeneric = {[key in JsConnectionPointType]: JsDataType};\nexport interface JsIConnectionPointTypeToDataTypeMap extends JSConnectionPointTypeToDataTypeMapGeneric {\n\t[JsConnectionPointType.ANIMATION_MIXER]: AnimationMixer;\n\t[JsConnectionPointType.ANIMATION_ACTION]: AnimationAction;\n\t[JsConnectionPointType.BOOLEAN]: boolean;\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: boolean[];\n\t[JsConnectionPointType.BOX3]: Box3;\n\t[JsConnectionPointType.CAMERA]: Camera;\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: CatmullRomCurve3;\n\t[JsConnectionPointType.COLOR]: Color;\n\t[JsConnectionPointType.COLOR_ARRAY]: Color[];\n\t[JsConnectionPointType.EULER]: Euler;\n\t[JsConnectionPointType.EULER_ARRAY]: Euler[];\n\t[JsConnectionPointType.FLOAT]: number;\n\t[JsConnectionPointType.FLOAT_ARRAY]: number[];\n\t[JsConnectionPointType.INT]: number;\n\t[JsConnectionPointType.INT_ARRAY]: number[];\n\t[JsConnectionPointType.INTERSECTION]: Intersection;\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: Intersection[];\n\t[JsConnectionPointType.MATERIAL]: Material;\n\t[JsConnectionPointType.MATRIX4]: Matrix4;\n\t[JsConnectionPointType.MATRIX4_ARRAY]: Matrix4[];\n\t[JsConnectionPointType.NODE]: BaseNodeType;\n\t[JsConnectionPointType.OBJECT_3D]: Object3D;\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: Object3D[];\n\t[JsConnectionPointType.PARAM]: BaseParamType;\n\t[JsConnectionPointType.PLANE]: Plane;\n\t[JsConnectionPointType.QUATERNION]: Quaternion;\n\t[JsConnectionPointType.QUATERNION_ARRAY]: Quaternion[];\n\t[JsConnectionPointType.RAY]: Ray;\n\t[JsConnectionPointType.SPHERE]: Sphere;\n\t[JsConnectionPointType.STRING]: string;\n\t[JsConnectionPointType.STRING_ARRAY]: string[];\n\t[JsConnectionPointType.TEXTURE]: Texture;\n\t[JsConnectionPointType.TEXTURE_ARRAY]: Texture[];\n\t[JsConnectionPointType.TRIGGER]: null;\n\t[JsConnectionPointType.VECTOR2]: Vector2;\n\t[JsConnectionPointType.VECTOR2_ARRAY]: Vector2[];\n\t[JsConnectionPointType.VECTOR3]: Vector3;\n\t[JsConnectionPointType.VECTOR3_ARRAY]: Vector3[];\n\t[JsConnectionPointType.VECTOR4]: Vector4;\n\t[JsConnectionPointType.VECTOR4_ARRAY]: Vector4[];\n}\n// export const JsConnectionPointTypeToParamTypeMap: JsIConnectionPointTypeToDataTypeMap = {\n// \t[JsConnectionPointType.ANIMATION_MIXER]: AnimationMixer;\n// \t[JsConnectionPointType.ANIMATION_ACTION]: AnimationAction;\n// \t[JsConnectionPointType.BOOLEAN]: boolean,\n// \t[JsConnectionPointType.BOOLEAN_ARRAY]: boolean[],\n// \t[JsConnectionPointType.BOX3]: Box3,\n// \t[JsConnectionPointType.CAMERA]: Camera,\n// \t[JsConnectionPointType.CATMULL_ROM_CURVE3]: ParamType.BUTTON,\n// \t[JsConnectionPointType.COLOR]: ParamType.COLOR,\n// \t[JsConnectionPointType.COLOR_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.FLOAT]: ParamType.FLOAT,\n// \t[JsConnectionPointType.FLOAT_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.INT]: ParamType.INTEGER,\n// \t[JsConnectionPointType.INT_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.INTERSECTION]: ParamType.BUTTON,\n// \t[JsConnectionPointType.INTERSECTION_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.MATERIAL]: ParamType.BUTTON,\n// \t[JsConnectionPointType.MATRIX4]: ParamType.BUTTON,\n// \t[JsConnectionPointType.MATRIX4_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.OBJECT_3D]: ParamType.BUTTON,\n// \t[JsConnectionPointType.PLANE]: ParamType.BUTTON,\n// \t[JsConnectionPointType.QUATERNION]: ParamType.BUTTON,\n// \t[JsConnectionPointType.QUATERNION_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.RAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.SPHERE]: ParamType.BUTTON,\n// \t[JsConnectionPointType.STRING]: ParamType.STRING,\n// \t[JsConnectionPointType.STRING_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.TEXTURE]: ParamType.BUTTON,\n// \t[JsConnectionPointType.TEXTURE_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.TRIGGER]: ParamType.BUTTON,\n// \t[JsConnectionPointType.VECTOR2]: ParamType.VECTOR2,\n// \t[JsConnectionPointType.VECTOR2_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.VECTOR3]: ParamType.VECTOR3,\n// \t[JsConnectionPointType.VECTOR3_ARRAY]: ParamType.BUTTON,\n// \t[JsConnectionPointType.VECTOR4]: ParamType.VECTOR4,\n// \t[JsConnectionPointType.VECTOR4_ARRAY]: ParamType.BUTTON,\n// \t// [JsConnectionPointType.MAT3]: undefined,\n// \t// [JsConnectionPointType.MAT4]: undefined,\n// };\n\n//\n//\n// Map to convert from a Js Data type to a ParamType\n//\n//\ntype JSConnectionPointTypeToParamTypeMapGeneric = {[key in JsConnectionPointType]: ParamType | undefined};\nexport interface JsIConnectionPointTypeToParamTypeMap extends JSConnectionPointTypeToParamTypeMapGeneric {\n\t[JsConnectionPointType.ANIMATION_MIXER]: ParamType.BUTTON;\n\t[JsConnectionPointType.ANIMATION_ACTION]: ParamType.BUTTON;\n\t[JsConnectionPointType.BOOLEAN]: ParamType.BOOLEAN;\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.BOX3]: ParamType.BUTTON;\n\t[JsConnectionPointType.CAMERA]: ParamType.BUTTON;\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: ParamType.BUTTON;\n\t[JsConnectionPointType.COLOR]: ParamType.COLOR;\n\t[JsConnectionPointType.COLOR_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.EULER]: ParamType.BUTTON;\n\t[JsConnectionPointType.EULER_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.FLOAT]: ParamType.FLOAT;\n\t[JsConnectionPointType.FLOAT_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.INT]: ParamType.INTEGER;\n\t[JsConnectionPointType.INT_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.INTERSECTION]: ParamType.BUTTON;\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.MATERIAL]: ParamType.BUTTON;\n\t[JsConnectionPointType.MATRIX4]: ParamType.BUTTON;\n\t[JsConnectionPointType.MATRIX4_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.NODE]: ParamType.NODE_PATH;\n\t[JsConnectionPointType.OBJECT_3D]: ParamType.BUTTON;\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.PARAM]: ParamType.PARAM_PATH;\n\t[JsConnectionPointType.PLANE]: ParamType.BUTTON;\n\t[JsConnectionPointType.QUATERNION]: ParamType.BUTTON;\n\t[JsConnectionPointType.QUATERNION_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.RAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.SPHERE]: ParamType.BUTTON;\n\t[JsConnectionPointType.STRING]: ParamType.STRING;\n\t[JsConnectionPointType.STRING_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.TEXTURE]: ParamType.BUTTON;\n\t[JsConnectionPointType.TEXTURE_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.TRIGGER]: ParamType.BUTTON;\n\t[JsConnectionPointType.VECTOR2]: ParamType.VECTOR2;\n\t[JsConnectionPointType.VECTOR2_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.VECTOR3]: ParamType.VECTOR3;\n\t[JsConnectionPointType.VECTOR3_ARRAY]: ParamType.BUTTON;\n\t[JsConnectionPointType.VECTOR4]: ParamType.VECTOR4;\n\t[JsConnectionPointType.VECTOR4_ARRAY]: ParamType.BUTTON;\n\t// [JsConnectionPointType.MAT3]: undefined;\n\t// [JsConnectionPointType.MAT4]: undefined;\n}\nexport const JsConnectionPointTypeToParamTypeMap: JsIConnectionPointTypeToParamTypeMap = {\n\t[JsConnectionPointType.ANIMATION_MIXER]: ParamType.BUTTON,\n\t[JsConnectionPointType.ANIMATION_ACTION]: ParamType.BUTTON,\n\t[JsConnectionPointType.BOOLEAN]: ParamType.BOOLEAN,\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.BOX3]: ParamType.BUTTON,\n\t[JsConnectionPointType.CAMERA]: ParamType.BUTTON,\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: ParamType.BUTTON,\n\t[JsConnectionPointType.COLOR]: ParamType.COLOR,\n\t[JsConnectionPointType.COLOR_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.EULER]: ParamType.BUTTON,\n\t[JsConnectionPointType.EULER_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.FLOAT]: ParamType.FLOAT,\n\t[JsConnectionPointType.FLOAT_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.INT]: ParamType.INTEGER,\n\t[JsConnectionPointType.INT_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.INTERSECTION]: ParamType.BUTTON,\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.MATERIAL]: ParamType.BUTTON,\n\t[JsConnectionPointType.MATRIX4]: ParamType.BUTTON,\n\t[JsConnectionPointType.MATRIX4_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.NODE]: ParamType.NODE_PATH,\n\t[JsConnectionPointType.OBJECT_3D]: ParamType.BUTTON,\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.PARAM]: ParamType.PARAM_PATH,\n\t[JsConnectionPointType.PLANE]: ParamType.BUTTON,\n\t[JsConnectionPointType.QUATERNION]: ParamType.BUTTON,\n\t[JsConnectionPointType.QUATERNION_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.RAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.SPHERE]: ParamType.BUTTON,\n\t[JsConnectionPointType.STRING]: ParamType.STRING,\n\t[JsConnectionPointType.STRING_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.TEXTURE]: ParamType.BUTTON,\n\t[JsConnectionPointType.TEXTURE_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.TRIGGER]: ParamType.BUTTON,\n\t[JsConnectionPointType.VECTOR2]: ParamType.VECTOR2,\n\t[JsConnectionPointType.VECTOR2_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.VECTOR3]: ParamType.VECTOR3,\n\t[JsConnectionPointType.VECTOR3_ARRAY]: ParamType.BUTTON,\n\t[JsConnectionPointType.VECTOR4]: ParamType.VECTOR4,\n\t[JsConnectionPointType.VECTOR4_ARRAY]: ParamType.BUTTON,\n\t// [JsConnectionPointType.MAT3]: undefined,\n\t// [JsConnectionPointType.MAT4]: undefined,\n};\n\n//\n//\n// Map to convert from a ParamType to GL Data type\n//\n//\ntype JsParamTypeToConnectionPointTypeMapGeneric = {[key in ParamType]: JsConnectionPointType | undefined};\nexport interface IJsParamTypeToConnectionPointTypeMap extends JsParamTypeToConnectionPointTypeMapGeneric {\n\t[ParamType.BOOLEAN]: JsConnectionPointType.BOOLEAN;\n\t[ParamType.COLOR]: JsConnectionPointType.COLOR;\n\t[ParamType.FLOAT]: JsConnectionPointType.FLOAT;\n\t[ParamType.INTEGER]: JsConnectionPointType.INT;\n\t[ParamType.FOLDER]: undefined;\n\t[ParamType.VECTOR2]: JsConnectionPointType.VECTOR2;\n\t[ParamType.VECTOR3]: JsConnectionPointType.VECTOR3;\n\t[ParamType.VECTOR4]: JsConnectionPointType.VECTOR4;\n\t[ParamType.BUTTON]: undefined;\n\t[ParamType.NODE_PATH]: JsConnectionPointType.NODE;\n\t[ParamType.PARAM_PATH]: JsConnectionPointType.PARAM;\n\t[ParamType.RAMP]: undefined;\n\t[ParamType.STRING]: JsConnectionPointType.STRING;\n}\nexport const JsParamTypeToConnectionPointTypeMap: IJsParamTypeToConnectionPointTypeMap = {\n\t[ParamType.BOOLEAN]: JsConnectionPointType.BOOLEAN,\n\t[ParamType.COLOR]: JsConnectionPointType.COLOR,\n\t[ParamType.FLOAT]: JsConnectionPointType.FLOAT,\n\t[ParamType.INTEGER]: JsConnectionPointType.INT,\n\t[ParamType.FOLDER]: undefined,\n\t[ParamType.VECTOR2]: JsConnectionPointType.VECTOR2,\n\t[ParamType.VECTOR3]: JsConnectionPointType.VECTOR3,\n\t[ParamType.VECTOR4]: JsConnectionPointType.VECTOR4,\n\t[ParamType.BUTTON]: undefined,\n\t[ParamType.NODE_PATH]: JsConnectionPointType.NODE,\n\t[ParamType.PARAM_PATH]: JsConnectionPointType.PARAM,\n\t[ParamType.RAMP]: undefined,\n\t[ParamType.STRING]: JsConnectionPointType.STRING,\n};\n\n//\n//\n// Map of Js Data type default values\n//\n//\nexport type ConnectionPointInitValueMapGeneric = {\n\t[key in JsConnectionPointType]: ParamInitValuesTypeMap[JsIConnectionPointTypeToParamTypeMap[key]];\n};\nexport const JsConnectionPointInitValueMap: ConnectionPointInitValueMapGeneric = {\n\t[JsConnectionPointType.ANIMATION_ACTION]: null,\n\t[JsConnectionPointType.ANIMATION_MIXER]: null,\n\t[JsConnectionPointType.BOOLEAN]: false,\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: null,\n\t[JsConnectionPointType.BOX3]: null,\n\t[JsConnectionPointType.CAMERA]: null,\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: null,\n\t[JsConnectionPointType.COLOR]: [1, 1, 1],\n\t[JsConnectionPointType.COLOR_ARRAY]: null,\n\t[JsConnectionPointType.EULER]: null,\n\t[JsConnectionPointType.EULER_ARRAY]: null,\n\t[JsConnectionPointType.FLOAT]: 0,\n\t[JsConnectionPointType.FLOAT_ARRAY]: null,\n\t[JsConnectionPointType.INT]: 0,\n\t[JsConnectionPointType.INT_ARRAY]: null,\n\t[JsConnectionPointType.INTERSECTION]: null,\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: null,\n\t[JsConnectionPointType.MATERIAL]: null,\n\t[JsConnectionPointType.MATRIX4]: null,\n\t[JsConnectionPointType.MATRIX4_ARRAY]: null,\n\t[JsConnectionPointType.NODE]: '',\n\t[JsConnectionPointType.OBJECT_3D]: null,\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: null,\n\t[JsConnectionPointType.PARAM]: '',\n\t[JsConnectionPointType.PLANE]: null,\n\t[JsConnectionPointType.QUATERNION]: null,\n\t[JsConnectionPointType.QUATERNION_ARRAY]: null,\n\t[JsConnectionPointType.RAY]: null,\n\t[JsConnectionPointType.SPHERE]: null,\n\t[JsConnectionPointType.STRING]: '',\n\t[JsConnectionPointType.STRING_ARRAY]: null,\n\t[JsConnectionPointType.TEXTURE]: null,\n\t[JsConnectionPointType.TEXTURE_ARRAY]: null,\n\t[JsConnectionPointType.TRIGGER]: null,\n\t[JsConnectionPointType.VECTOR2]: [0, 0],\n\t[JsConnectionPointType.VECTOR2_ARRAY]: null,\n\t[JsConnectionPointType.VECTOR3]: [0, 0, 0],\n\t[JsConnectionPointType.VECTOR3_ARRAY]: null,\n\t[JsConnectionPointType.VECTOR4]: [0, 0, 0, 0],\n\t[JsConnectionPointType.VECTOR4_ARRAY]: null,\n\t// [JsConnectionPointType.MAT3]: [0],\n\t// [JsConnectionPointType.MAT4]: [0],\n};\n\n//\n//\n// Map of Js Data type component counts\n//\n//\nexport type ConnectionPointComponentsCountMapGeneric = {\n\t[key in JsConnectionPointType]: number;\n};\nexport const JsConnectionPointComponentsCountMap: ConnectionPointComponentsCountMapGeneric = {\n\t[JsConnectionPointType.ANIMATION_ACTION]: 1,\n\t[JsConnectionPointType.ANIMATION_MIXER]: 1,\n\t[JsConnectionPointType.BOOLEAN]: 1,\n\t[JsConnectionPointType.BOOLEAN_ARRAY]: 1,\n\t[JsConnectionPointType.BOX3]: 1,\n\t[JsConnectionPointType.CAMERA]: 1,\n\t[JsConnectionPointType.CATMULL_ROM_CURVE3]: 1,\n\t[JsConnectionPointType.COLOR]: 3,\n\t[JsConnectionPointType.COLOR_ARRAY]: 1,\n\t[JsConnectionPointType.EULER]: 3,\n\t[JsConnectionPointType.EULER_ARRAY]: 1,\n\t[JsConnectionPointType.FLOAT]: 1,\n\t[JsConnectionPointType.FLOAT_ARRAY]: 1,\n\t[JsConnectionPointType.INT]: 1,\n\t[JsConnectionPointType.INT_ARRAY]: 1,\n\t[JsConnectionPointType.INTERSECTION]: 1,\n\t[JsConnectionPointType.INTERSECTION_ARRAY]: 1,\n\t[JsConnectionPointType.MATERIAL]: 1,\n\t[JsConnectionPointType.MATRIX4]: 1,\n\t[JsConnectionPointType.MATRIX4_ARRAY]: 1,\n\t[JsConnectionPointType.NODE]: 1,\n\t[JsConnectionPointType.OBJECT_3D]: 1,\n\t[JsConnectionPointType.OBJECT_3D_ARRAY]: 1,\n\t[JsConnectionPointType.PARAM]: 1,\n\t[JsConnectionPointType.PLANE]: 1,\n\t[JsConnectionPointType.QUATERNION]: 1,\n\t[JsConnectionPointType.QUATERNION_ARRAY]: 1,\n\t[JsConnectionPointType.RAY]: 1,\n\t[JsConnectionPointType.SPHERE]: 1,\n\t[JsConnectionPointType.STRING]: 1,\n\t[JsConnectionPointType.STRING_ARRAY]: 1,\n\t[JsConnectionPointType.TEXTURE]: 1,\n\t[JsConnectionPointType.TEXTURE_ARRAY]: 1,\n\t[JsConnectionPointType.TRIGGER]: 1,\n\t[JsConnectionPointType.VECTOR2]: 2,\n\t[JsConnectionPointType.VECTOR2_ARRAY]: 1,\n\t[JsConnectionPointType.VECTOR3]: 3,\n\t[JsConnectionPointType.VECTOR3_ARRAY]: 1,\n\t[JsConnectionPointType.VECTOR4]: 4,\n\t[JsConnectionPointType.VECTOR4_ARRAY]: 1,\n};\n\nexport interface JsConnectionPointData<T extends JsConnectionPointType> {\n\tname: string;\n\ttype: T;\n\tisArray?: boolean;\n}\n\ninterface JsConnectionPointOptions<T extends JsConnectionPointType> {\n\tinNodeDefinition?: boolean;\n\tinit_value?: ConnectionPointInitValueMapGeneric[T];\n}\nexport const JS_CONNECTION_POINT_IN_NODE_DEF: JsConnectionPointOptions<JsConnectionPointType> = {\n\tinNodeDefinition: true,\n};\n\nexport class JsConnectionPoint<T extends JsConnectionPointType> extends BaseConnectionPoint {\n\tprotected override _json: JsConnectionPointData<T> | undefined;\n\tprotected override _init_value?: ConnectionPointInitValueMapGeneric[T];\n\tprotected _isArray: boolean;\n\n\tconstructor(_name: string, protected override _type: T, protected _options?: JsConnectionPointOptions<T>) {\n\t\tsuper(_name, _type);\n\t\t// if (this._init_value === undefined) {\n\t\tthis._isArray = ARRAY_JS_CONNECTION_TYPES_SET.has(_type as JsConnectionPointTypeArray);\n\t\tthis._init_value = JsConnectionPointInitValueMap[this._type];\n\t\t// }\n\n\t\tif (_options) {\n\t\t\tthis._inNodeDefinition = _options.inNodeDefinition == true;\n\t\t\tif (_options.init_value != null) {\n\t\t\t\tthis._init_value = _options.init_value;\n\t\t\t}\n\t\t}\n\t}\n\toverride type() {\n\t\treturn this._type;\n\t}\n\toverride are_types_matched(src_type: string, dest_type: string): boolean {\n\t\treturn src_type == dest_type;\n\t}\n\tget param_type(): JsIConnectionPointTypeToParamTypeMap[T] {\n\t\treturn JsConnectionPointTypeToParamTypeMap[this._type];\n\t}\n\toverride get init_value() {\n\t\treturn this._init_value;\n\t}\n\n\toverride toJSON(): JsConnectionPointData<T> {\n\t\treturn (this._json = this._json || this._createJSON());\n\t}\n\tprotected override _createJSON(): JsConnectionPointData<T> {\n\t\treturn {\n\t\t\tname: this._name,\n\t\t\ttype: this._type,\n\t\t\tisArray: this._isArray,\n\t\t};\n\t}\n}\n\nexport type BaseJsConnectionPoint = JsConnectionPoint<JsConnectionPointType>;\n","// import {\n// \tConnectionPointType,\n// \tConnectionPointInitValueMapGeneric,\n// \tConnectionPointInitValueMap,\n// \tConnectionPointTypeToParamTypeMap,\n// \tIConnectionPointTypeToParamTypeMap,\n// } from '../ConnectionPointType';\n// import {ParamInitValuesTypeMap} from '../params/ParamsController';\n\nimport {ParamType} from '../../../../poly/ParamType';\n\nexport interface BaseConnectionPointData {\n\tname: string;\n\ttype: string;\n\tisArray?: boolean;\n}\n\nexport abstract class BaseConnectionPoint {\n\tprotected _json: BaseConnectionPointData | undefined;\n\t// protected _init_value: any;\n\n\tprotected _inNodeDefinition: boolean = false;\n\n\tconstructor(protected _name: string, protected _type: string, protected _init_value?: any) {\n\t\t// if (this._init_value === undefined) {\n\t\t// this._init_value = ConnectionPointInitValueMap[this._type];\n\t\t// }\n\t}\n\tget init_value() {\n\t\treturn this._init_value;\n\t}\n\tname() {\n\t\treturn this._name;\n\t}\n\ttype() {\n\t\treturn this._type;\n\t}\n\n\tare_types_matched(src_type: string, dest_type: string): boolean {\n\t\treturn true;\n\t}\n\tinNodeDefinition() {\n\t\treturn this._inNodeDefinition;\n\t}\n\tabstract get param_type(): ParamType | null;\n\t// get param_type(): IConnectionPointTypeToParamTypeMap[T] {\n\t// \treturn ConnectionPointTypeToParamTypeMap[this._type];\n\t// }\n\t// get init_value() {\n\t// \treturn this._init_value;\n\t// }\n\n\ttoJSON(): BaseConnectionPointData {\n\t\treturn (this._json = this._json || this._createJSON());\n\t}\n\tprotected _createJSON(): BaseConnectionPointData {\n\t\treturn {\n\t\t\tname: this._name,\n\t\t\ttype: this._type,\n\t\t\t// isArray: false,\n\t\t};\n\t}\n}\n\n// export type BaseNamedConnectionPointType = TypedNamedConnectionPoint<ConnectionPointType>;\n","import {Number2, Number3, Number4} from '../../../../types/GlobalTypes';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamOptions} from '../../../params/utils/OptionsController';\nimport {RampParam} from '../../../params/Ramp';\nimport {ParamValuesTypeMap} from '../../../params/types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from '../../../params/types/ParamInitValuesTypeMap';\nimport {ParamConstructorMap} from '../../../params/types/ParamConstructorMap';\nimport {ParamOptionsByTypeMap} from '../../../params/types/ParamOptionsByTypeMap';\nimport {Color} from 'three';\nimport {Vector2} from 'three';\nimport {Vector3} from 'three';\nimport {Vector4} from 'three';\n\nexport class ParamTemplate<T extends ParamType> {\n\treadonly value_type!: ParamValuesTypeMap[T];\n\treadonly param_class!: ParamConstructorMap[T];\n\n\tconstructor(public type: T, public init_value: ParamInitValuesTypeMap[T], public options?: ParamOptions) {}\n}\n\nexport class ParamConfig {\n\tstatic BUTTON(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.BUTTON],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.BUTTON]\n\t) {\n\t\treturn new ParamTemplate<ParamType.BUTTON>(ParamType.BUTTON, init_value, options);\n\t}\n\tstatic BOOLEAN(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.BOOLEAN],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.BOOLEAN]\n\t) {\n\t\treturn new ParamTemplate<ParamType.BOOLEAN>(ParamType.BOOLEAN, init_value, options);\n\t}\n\tstatic COLOR(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.COLOR],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.COLOR]\n\t) {\n\t\tif (init_value instanceof Color) {\n\t\t\tinit_value = init_value.toArray() as Number3;\n\t\t}\n\t\treturn new ParamTemplate<ParamType.COLOR>(ParamType.COLOR, init_value, options);\n\t}\n\tstatic FLOAT(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.FLOAT],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.FLOAT]\n\t) {\n\t\treturn new ParamTemplate<ParamType.FLOAT>(ParamType.FLOAT, init_value, options);\n\t}\n\tstatic FOLDER(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.FOLDER] = null,\n\t\toptions?: ParamOptionsByTypeMap[ParamType.FOLDER]\n\t) {\n\t\treturn new ParamTemplate<ParamType.FOLDER>(ParamType.FOLDER, init_value, options);\n\t}\n\tstatic INTEGER(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.INTEGER],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.INTEGER]\n\t) {\n\t\treturn new ParamTemplate<ParamType.INTEGER>(ParamType.INTEGER, init_value, options);\n\t}\n\tstatic RAMP(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.RAMP] = RampParam.DEFAULT_VALUE,\n\t\toptions?: ParamOptionsByTypeMap[ParamType.RAMP]\n\t) {\n\t\treturn new ParamTemplate<ParamType.RAMP>(ParamType.RAMP, init_value, options);\n\t}\n\n\tstatic STRING(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.STRING] = '',\n\t\toptions?: ParamOptionsByTypeMap[ParamType.STRING]\n\t) {\n\t\treturn new ParamTemplate<ParamType.STRING>(ParamType.STRING, init_value, options);\n\t}\n\tstatic VECTOR2(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.VECTOR2],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.VECTOR2]\n\t) {\n\t\tif (init_value instanceof Vector2) {\n\t\t\tinit_value = init_value.toArray() as Number2;\n\t\t}\n\t\treturn new ParamTemplate<ParamType.VECTOR2>(ParamType.VECTOR2, init_value, options);\n\t}\n\tstatic VECTOR3(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.VECTOR3],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.VECTOR3]\n\t) {\n\t\tif (init_value instanceof Vector3) {\n\t\t\tinit_value = init_value.toArray() as Number3;\n\t\t}\n\t\treturn new ParamTemplate<ParamType.VECTOR3>(ParamType.VECTOR3, init_value, options);\n\t}\n\tstatic VECTOR4(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.VECTOR4],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.VECTOR4]\n\t) {\n\t\tif (init_value instanceof Vector4) {\n\t\t\tinit_value = init_value.toArray() as Number4;\n\t\t}\n\t\treturn new ParamTemplate<ParamType.VECTOR4>(ParamType.VECTOR4, init_value, options);\n\t}\n\n\t//\n\t//\n\t// PATH PARAMS\n\t//\n\t//\n\t// static OPERATOR_PATH(\n\t// \tinit_value: ParamInitValuesTypeMap[ParamType.OPERATOR_PATH],\n\t// \toptions?: ParamOptionsByTypeMap[ParamType.OPERATOR_PATH]\n\t// ) {\n\t// \treturn new ParamTemplate<ParamType.OPERATOR_PATH>(ParamType.OPERATOR_PATH, init_value, options);\n\t// }\n\tstatic NODE_PATH(\n\t\tinit_value: '', // forces at empty value at init, instead of ParamInitValuesTypeMap[ParamType.NODE_PATH],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.NODE_PATH]\n\t) {\n\t\treturn new ParamTemplate<ParamType.NODE_PATH>(ParamType.NODE_PATH, init_value, options);\n\t}\n\tstatic PARAM_PATH(\n\t\tinit_value: '', // forces at empty value at init, instead of ParamInitValuesTypeMap[ParamType.PARAM_PATH],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.PARAM_PATH]\n\t) {\n\t\treturn new ParamTemplate<ParamType.PARAM_PATH>(ParamType.PARAM_PATH, init_value, options);\n\t}\n}\n\n//\n// NodeParamsConfig:\n//\n// export class NodeParamsConfig implements PolyDictionary<ParamTemplate<ParamType>> {\n// \t[name: string]: ParamTemplate<ParamType>;\n// }\n// in order to have all param names validated by typescript, this definition of NodeParamsConfig could be used:\nexport class NodeParamsConfig {}\n\n// but it will lead to some type error in ParamsValueAccessorType and ParamsAccessorType, preventing compilation with it.\n// TODO: try and find a way that prevents node.p.nonExistingAttribute to be accessible, and that has not other compilation error\n\nexport class HierarchyParamConfig extends NodeParamsConfig {\n\t/** @param group to apply this node to */\n\tgroup = ParamConfig.STRING('', {\n\t\tobjectMask: true,\n\t});\n}\nexport class HierarchyParamConfigAll extends NodeParamsConfig {\n\t/** @param group to apply this node to */\n\tgroup = ParamConfig.STRING('*', {\n\t\tobjectMask: true,\n\t});\n}\n","import {CoreString} from '../../../../core/String';\n\nexport function sanitizeExportedString(word: string): string {\n\tword = word.replace(/'/g, \"'\"); // escapes ' (used to be with 2 /, but now only one to have Ian's Mediation saved and loaded correctly - but is actually 2 in Code Exporter)\n\tword = CoreString.escapeLineBreaks(word);\n\treturn word;\n}\n","import {PersistedConfigWithShaders} from './../../../nodes/utils/BasePersistedConfig';\nimport {Number2, PolyDictionary} from '../../../../types/GlobalTypes';\nimport {BaseNodeType, TypedNode} from '../../../nodes/_Base';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport type {JsonExportDispatcher} from './Dispatcher';\nimport {ParamJsonExporterData} from '../../../nodes/utils/io/IOController';\nimport {ParamType} from '../../../poly/ParamType';\nimport {BaseConnectionPointData} from '../../../nodes/utils/io/connections/_Base';\nimport {sanitizeExportedString} from './sanitize';\nimport {isString} from '../../../../core/Type';\nimport {VelocityColliderFunctionBody} from '../../../nodes/js/code/assemblers/_Base';\n\n// revert to using index instead of name\n// for gl nodes such as the if node, whose input names\n// changes depending on the input\ninterface NamedInputData {\n\tindex?: number;\n\tinputName?: string;\n\tnode: string;\n\toutput: string;\n}\ntype IndexedInputData = string | null;\nexport type InputData = NamedInputData | IndexedInputData;\n\ninterface FlagsData {\n\tbypass?: boolean;\n\tdisplay?: boolean;\n\toptimize?: boolean;\n}\nexport interface IoConnectionPointsData {\n\tin?: BaseConnectionPointData[];\n\tout?: BaseConnectionPointData[];\n}\n\nexport interface NodeJsonExporterData {\n\ttype: string;\n\tnodes?: PolyDictionary<NodeJsonExporterData>;\n\tchildren_context?: NodeContext;\n\tparams?: PolyDictionary<ParamJsonExporterData<ParamType>>;\n\tmaxInputsCount?: number;\n\tinputs?: InputData[];\n\tconnection_points?: IoConnectionPointsData;\n\n\tflags?: FlagsData;\n\tcloned_state_overriden?: boolean;\n\tpersisted_config?: PersistedConfigWithShaders;\n\tpolyNode?: {\n\t\tlocked: boolean;\n\t};\n}\n\nexport interface NodeJsonExporterUIData {\n\tpos?: Number2;\n\tcomment?: string;\n\tselection?: string[];\n\tnodes?: PolyDictionary<NodeJsonExporterUIData>;\n}\nexport type NodeJSONShadersData = PolyDictionary<PolyDictionary<string>>;\nexport type NodeJSONFunctionBodiesData = PolyDictionary<string | PolyDictionary<string>>;\n\ntype BaseNodeTypeWithIO = TypedNode<NodeContext, any>;\n\nexport interface JSONExporterDataRequestOption {\n\tshowPolyNodesData?: boolean;\n\twithPersistedConfig?: boolean;\n}\n\nexport class NodeJsonExporter<T extends BaseNodeTypeWithIO> {\n\tprivate _data: NodeJsonExporterData | undefined; // = {} as NodeJsonExporterData;\n\tconstructor(protected _node: T, protected dispatcher: JsonExportDispatcher) {}\n\n\tasync data(options: JSONExporterDataRequestOption): Promise<NodeJsonExporterData> {\n\t\tif (!this._isRoot()) {\n\t\t\tthis._node.scene().nodesController.registerNodeContextSignature(this._node);\n\t\t}\n\t\tthis._data = {\n\t\t\ttype: this._node.type(),\n\t\t} as NodeJsonExporterData;\n\n\t\tif (this._node.polyNodeController) {\n\t\t\tthis._data['polyNode'] = {\n\t\t\t\tlocked: this._node.polyNodeController.locked(),\n\t\t\t};\n\t\t}\n\n\t\t// const required_imports = this._node.required_imports()\n\t\t// if(required_imports){\n\t\t// \tthis._data['required_imports'] = required_imports\n\t\t// }\n\n\t\tconst nodes_data = await this.nodes_data(options);\n\t\tif (Object.keys(nodes_data).length > 0) {\n\t\t\tthis._data['nodes'] = nodes_data;\n\n\t\t\t// required by the Store::Scene::Exporter.rb\n\t\t\t// Update: removed as there should be a better way\n\t\t\t// const context = this._node.childrenController?.context;\n\t\t\t// if (context) {\n\t\t\t// \tthis._data['children_context'] = context;\n\t\t\t// }\n\t\t}\n\n\t\tconst params_data = this.params_data();\n\t\tif (Object.keys(params_data).length > 0) {\n\t\t\tthis._data['params'] = params_data;\n\t\t}\n\t\tif (!this._isRoot()) {\n\t\t\t//data['custom'] = []\n\t\t\tif (this._node.io.inputs.maxInputsCountOverriden()) {\n\t\t\t\tthis._data['maxInputsCount'] = this._node.io.inputs.maxInputsCount();\n\t\t\t}\n\n\t\t\tconst inputs_data = this.inputs_data();\n\t\t\tif (inputs_data.length > 0) {\n\t\t\t\tthis._data['inputs'] = inputs_data;\n\t\t\t}\n\t\t\tconst connection_points_data = this.connection_points_data();\n\t\t\tif (connection_points_data) {\n\t\t\t\tthis._data['connection_points'] = connection_points_data;\n\t\t\t}\n\t\t}\n\n\t\tif (this._node.flags) {\n\t\t\tconst flags_data: FlagsData = {};\n\t\t\tif (this._node.flags.hasBypass() || this._node.flags.hasDisplay() || this._node.flags.hasOptimize()) {\n\t\t\t\tif (this._node.flags.hasBypass()) {\n\t\t\t\t\tif (this._node.flags.bypass?.active()) {\n\t\t\t\t\t\tflags_data['bypass'] = this._node.flags.bypass.active();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._node.flags.hasDisplay()) {\n\t\t\t\t\t// only save the display flag if it is true, or if the parent does not have a displayNodeController\n\t\t\t\t\t// This will then always save it for OBJ\n\t\t\t\t\t// And only if true for SOP\n\t\t\t\t\tif (this._node.flags.display?.active() || !this._node.parent()?.displayNodeController) {\n\t\t\t\t\t\tflags_data['display'] = this._node.flags.display?.active();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._node.flags.hasOptimize()) {\n\t\t\t\t\tif (this._node.flags.optimize?.active()) {\n\t\t\t\t\t\tflags_data['optimize'] = this._node.flags.optimize?.active();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Object.keys(flags_data).length > 0) {\n\t\t\t\tthis._data['flags'] = flags_data;\n\t\t\t}\n\t\t}\n\n\t\t// inputs clone\n\t\tif (this._node.io.inputs.overrideClonedStateAllowed()) {\n\t\t\tconst overriden = this._node.io.inputs.clonedStateOverriden();\n\t\t\tif (overriden) {\n\t\t\t\tthis._data['cloned_state_overriden'] = overriden;\n\t\t\t}\n\t\t}\n\n\t\t// persisted config\n\t\tconst withPersistedConfig = options.withPersistedConfig == null ? true : options.withPersistedConfig;\n\t\tif (withPersistedConfig == true) {\n\t\t\tconst persisted_config = this._node.persisted_config;\n\t\t\tif (persisted_config) {\n\t\t\t\tconst persisted_config_data = options.showPolyNodesData\n\t\t\t\t\t? await persisted_config.toData()\n\t\t\t\t\t: await persisted_config.toDataWithoutShaders();\n\t\t\t\tif (persisted_config_data) {\n\t\t\t\t\tthis._data.persisted_config = persisted_config_data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// custom\n\t\tthis.add_custom();\n\n\t\treturn this._data;\n\t}\n\n\tuiData(options: JSONExporterDataRequestOption): NodeJsonExporterUIData {\n\t\tconst data: NodeJsonExporterUIData = this.ui_data_without_children();\n\t\tconst children = this._node.children();\n\t\tif (children.length > 0) {\n\t\t\tconst nodesData: PolyDictionary<NodeJsonExporterUIData> = {};\n\t\t\tfor (let child of children) {\n\t\t\t\tconst node_exporter = this.dispatcher.dispatchNode(child); //.visit(JsonExporterVisitor); //.json_exporter()\n\t\t\t\tnodesData[child.name()] = node_exporter.uiData(options);\n\t\t\t}\n\t\t\tdata['nodes'] = nodesData;\n\t\t}\n\n\t\treturn data;\n\t}\n\tprotected ui_data_without_children(): NodeJsonExporterUIData {\n\t\tconst data: NodeJsonExporterUIData = {} as NodeJsonExporterUIData;\n\t\tif (!this._isRoot()) {\n\t\t\tconst ui_data = this._node.uiData;\n\t\t\tdata['pos'] = ui_data.position().toArray() as Number2;\n\t\t\tconst comment = ui_data.comment();\n\t\t\tif (comment) {\n\t\t\t\tdata['comment'] = sanitizeExportedString(comment);\n\t\t\t}\n\n\t\t\t// selection\n\t\t\tif (this._node.childrenAllowed()) {\n\t\t\t\tconst selection = this._node.childrenController?.selection;\n\t\t\t\tif (selection && this._node.children().length > 0) {\n\t\t\t\t\t// only save the nodes that are still present, in case the selection just got deleted\n\t\t\t\t\tconst selected_children: BaseNodeTypeWithIO[] = [];\n\t\t\t\t\tconst selected_ids: PolyDictionary<boolean> = {};\n\t\t\t\t\tconst selectedNodes: BaseNodeType[] = [];\n\t\t\t\t\tselection.nodes(selectedNodes);\n\t\t\t\t\tfor (const selected_node of selectedNodes) {\n\t\t\t\t\t\tselected_ids[selected_node.graphNodeId()] = true;\n\t\t\t\t\t}\n\t\t\t\t\tfor (const child of this._node.children()) {\n\t\t\t\t\t\tif (child.graphNodeId() in selected_ids) {\n\t\t\t\t\t\t\tselected_children.push(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst selection_data = selected_children.map((n) => n.name());\n\t\t\t\t\tif (selection_data.length > 0) {\n\t\t\t\t\t\tdata['selection'] = selection_data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\tasync persistedConfigData(\n\t\tshadersData: NodeJSONShadersData,\n\t\tjsFunctionBodiesData: NodeJSONFunctionBodiesData,\n\t\toptions: JSONExporterDataRequestOption\n\t): Promise<void> {\n\t\tconst children = this._node.children();\n\t\tif (children.length > 0) {\n\t\t\tfor (let child of children) {\n\t\t\t\tconst node_exporter = this.dispatcher.dispatchNode(child);\n\t\t\t\tawait node_exporter.persistedConfigData(shadersData, jsFunctionBodiesData, options);\n\t\t\t}\n\t\t}\n\n\t\tif (this._node.persisted_config) {\n\t\t\tconst persisted_config_data = await this._node.persisted_config.toData();\n\t\t\tif (persisted_config_data) {\n\t\t\t\tif (persisted_config_data.shaders) {\n\t\t\t\t\tshadersData[this._node.path()] = persisted_config_data.shaders;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (persisted_config_data.functionBody != null) {\n\t\t\t\t\tif (isString(persisted_config_data.functionBody)) {\n\t\t\t\t\t\tjsFunctionBodiesData[this._node.path()] = persisted_config_data.functionBody;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst dict: Record<string, string> = {};\n\t\t\t\t\t\tconst keys = Object.keys(persisted_config_data.functionBody) as Array<\n\t\t\t\t\t\t\tkeyof VelocityColliderFunctionBody\n\t\t\t\t\t\t>;\n\t\t\t\t\t\tfor (let key of keys) {\n\t\t\t\t\t\t\tdict[key] = persisted_config_data.functionBody[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjsFunctionBodiesData[this._node.path()] = dict;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.warn(`persisted config data not handled`, persisted_config_data);\n\t\t\t}\n\t\t}\n\t}\n\t// async jsFunctionBodies(data: NodeJSONFunctionBodiesData, options: JSONExporterDataRequestOption = {}): Promise<void> {\n\t// \tconst children = this._node.children();\n\t// \tif (children.length > 0) {\n\t// \t\tfor (let child of children) {\n\t// \t\t\tconst node_exporter = this.dispatcher.dispatchNode(child);\n\t// \t\t\tawait node_exporter.jsFunctionBodies(data);\n\t// \t\t}\n\t// \t}\n\n\t// \tif (this._node.persisted_config) {\n\t// \t\tconst persisted_config_data = await this._node.persisted_config.toData();\n\t// \t\tif (persisted_config_data && persisted_config_data.functionBody) {\n\t// \t\t\tdata[this._node.path()] = persisted_config_data.functionBody\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tprivate _isRoot() {\n\t\treturn this._node.parent() === null && this._node.graphNodeId() == this._node.root().graphNodeId();\n\t}\n\n\tprotected inputs_data() {\n\t\tconst data: InputData[] = [];\n\t\tthis._node.io.inputs.inputs().forEach((input, input_index) => {\n\t\t\tif (input) {\n\t\t\t\tconst connection = this._node.io.connections.inputConnection(input_index)!;\n\t\t\t\tif (this._node.io.inputs.hasNamedInputs()) {\n\t\t\t\t\tconst inputConnectionPoints = this._node.io.inputs.namedInputConnectionPoints();\n\t\t\t\t\tconst outputConnectionPoints = input.io.outputs.namedOutputConnectionPoints();\n\t\t\t\t\tif (inputConnectionPoints && outputConnectionPoints) {\n\t\t\t\t\t\tconst inputName = inputConnectionPoints[input_index]?.name();\n\t\t\t\t\t\tconst output_index = connection.outputIndex();\n\t\t\t\t\t\tconst output_name = outputConnectionPoints[output_index]?.name();\n\t\t\t\t\t\tif (output_name) {\n\t\t\t\t\t\t\tdata[input_index] = {\n\t\t\t\t\t\t\t\tindex: input_index,\n\t\t\t\t\t\t\t\tinputName: inputName,\n\t\t\t\t\t\t\t\tnode: input.name(),\n\t\t\t\t\t\t\t\toutput: output_name,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata[input_index] = input.name();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tprotected connection_points_data() {\n\t\tif (!this._node.io.has_connection_points_controller) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._node.io.connection_points.initialized()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._node.io.inputs.hasNamedInputs() || this._node.io.outputs.hasNamedOutputs()) {\n\t\t\tconst data: IoConnectionPointsData = {};\n\t\t\tif (this._node.io.inputs.hasNamedInputs()) {\n\t\t\t\tdata['in'] = [];\n\t\t\t\tconst connectionPoints = this._node.io.inputs.namedInputConnectionPoints();\n\t\t\t\tif (connectionPoints) {\n\t\t\t\t\tfor (let cp of connectionPoints) {\n\t\t\t\t\t\tif (cp) {\n\t\t\t\t\t\t\tdata['in'].push(cp.toJSON());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._node.io.outputs.hasNamedOutputs()) {\n\t\t\t\tdata['out'] = [];\n\t\t\t\tconst connectionPoints = this._node.io.outputs.namedOutputConnectionPoints();\n\t\t\t\tif (connectionPoints) {\n\t\t\t\t\tfor (let cp of connectionPoints) {\n\t\t\t\t\t\tif (cp) {\n\t\t\t\t\t\t\tdata['out'].push(cp.toJSON());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn data;\n\t\t}\n\t}\n\n\tprotected params_data() {\n\t\tconst data: PolyDictionary<ParamJsonExporterData<ParamType>> = {};\n\n\t\tfor (let param_name of this._node.params.names) {\n\t\t\tconst param = this._node.params.get(param_name);\n\t\t\tif (param && !param.parentParam()) {\n\t\t\t\tconst param_exporter = this.dispatcher.dispatchParam(param);\n\t\t\t\tif (param_exporter.required()) {\n\t\t\t\t\tconst params_data = param_exporter.data();\n\t\t\t\t\tdata[param.name()] = params_data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprotected async nodes_data(options: JSONExporterDataRequestOption) {\n\t\tconst data: PolyDictionary<NodeJsonExporterData> = {};\n\t\tfor (let child of this._node.children()) {\n\t\t\tconst node_exporter = this.dispatcher.dispatchNode(child); //.json_exporter()\n\t\t\tdata[child.name()] = await node_exporter.data(options);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprotected add_custom() {}\n}\n","import {BaseParamType} from '../../../params/_Base';\nimport {ParamType} from '../../../poly/ParamType';\n\nimport {ParamOptions} from '../../../params/utils/OptionsController';\nimport {OverridenOptions, ComplexParamJsonExporterData} from '../../../nodes/utils/io/IOController';\nimport {CoreType} from '../../../../core/Type';\n\nexport class ParamJsonExporter<T extends BaseParamType> {\n\t// protected _simple_data: SimpleParamJsonExporterData<ParamType>=0;\n\tprotected _complex_data: ComplexParamJsonExporterData<ParamType> = {};\n\tconstructor(protected _param: T) {}\n\n\trequired(): boolean {\n\t\tconst is_spare_and_not_component = this._param.options.isSpare() && !this._param.parentParam();\n\n\t\t// we should not need to check if it has an expression anymore,\n\t\t// as it could have an expression AND be of default value\n\t\tconst value_changed = !this._param.isDefault(); //|| this._param.has_expression();\n\t\t// const referencing_asset = this._param.is_referencing_asset()\n\t\treturn is_spare_and_not_component || value_changed || this._param.options.hasOptionsOverridden();\n\t}\n\n\tdata() {\n\t\tif (this._param.parentParam()) {\n\t\t\tconsole.warn('no component should be saved');\n\t\t\tthrow 'no component should be saved';\n\t\t}\n\n\t\tif (this._require_data_complex()) {\n\t\t\treturn this._data_complex();\n\t\t} else {\n\t\t\treturn this._data_simple();\n\t\t}\n\t}\n\n\tprivate _data_simple() {\n\t\treturn this._param.rawInputSerialized();\n\t}\n\n\tprivate _data_complex() {\n\t\tthis._complex_data = {};\n\n\t\tif (this._param.options.isSpare() && !this._param.parentParam()) {\n\t\t\tthis._complex_data['type'] = this._param.type();\n\t\t\tthis._complex_data['default_value'] = this._param.defaultValueSerialized();\n\t\t\tthis._complex_data['options'] = this._param.options.current();\n\t\t}\n\n\t\tif (!this._param.isDefault()) {\n\t\t\tthis._complex_data['raw_input'] = this._param.rawInputSerialized();\n\t\t}\n\n\t\tif (this._param.options.hasOptionsOverridden()) {\n\t\t\tconst overridden_options: OverridenOptions = {};\n\t\t\tconst options_overridden = this._param.options.overriddenOptions();\n\t\t\tfor (let option_name of Object.keys(options_overridden)) {\n\t\t\t\tconst option_value = options_overridden[option_name as keyof ParamOptions];\n\t\t\t\tif (CoreType.isString(option_value) || CoreType.isNumber(option_value)) {\n\t\t\t\t\toverridden_options[option_name] = option_value;\n\t\t\t\t} else {\n\t\t\t\t\toverridden_options[option_name] = JSON.stringify(option_value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._complex_data['overriden_options'] = overridden_options;\n\t\t}\n\t\treturn this._complex_data;\n\t}\n\n\tprotected _require_data_complex() {\n\t\tif (this._param.options.isSpare()) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._param.options.hasOptionsOverridden()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// default_value(): ParamValueSerialized {\n\t// \treturn this._param.defaultValueSerialized();\n\t// }\n\n\t// cannot remember why this is useful, but it messes up\n\t// with gl nodes like the noise node, as the default value\n\t// gets saved as a string '[1,1]' instead of an array [1,1] (should be without quotes)\n\t// protected default_value(){\n\t// \tlet default_value = this._param.default_value()\n\t// \tif(CoreType.isString(default_value)){\n\t// \t\tdefault_value = `'${default_value}'`\n\t// \t}\n\t// \tif (CoreType.isArray(default_value)){\n\t// \t\tdefault_value = `[${default_value}]`\n\t// \t}\n\t// \treturn default_value\n\t// }\n\n\tprotected add_main() {}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {TypedNumericParam} from '../../../../params/_Numeric';\nimport {ParamType} from '../../../../poly/ParamType';\n\nexport class ParamNumericJsonExporter extends ParamJsonExporter<TypedNumericParam<ParamType>> {\n\toverride add_main() {\n\t\t// if (this._param.hasExpression() && this._param.expressionController?.expression) {\n\t\t// \t// const escaped_expression = this._param.expression().replace(/'/g, \"\\\\'\");\n\t\t// \tthis._data['expression'] = this._param.expressionController?.expression;\n\t\t// } else {\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = this._param.rawInputSerialized();\n\t\t} else {\n\t\t\treturn this._param.rawInputSerialized();\n\t\t}\n\t\t// }\n\t}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {NodePathParam} from '../../../../params/NodePath';\nimport {sanitizeExportedString} from '../sanitize';\n\nexport class ParamNodePathJsonExporter extends ParamJsonExporter<NodePathParam> {\n\toverride add_main() {\n\t\tlet val = this._param.rawInput();\n\t\t// val = val.replace(/'/g, \"\\\\'\");\n\t\tval = sanitizeExportedString(val);\n\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = val;\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {ParamPathParam} from '../../../../params/ParamPath';\nimport {sanitizeExportedString} from '../sanitize';\n\nexport class ParamParamPathJsonExporter extends ParamJsonExporter<ParamPathParam> {\n\toverride add_main() {\n\t\tlet val = this._param.rawInput();\n\t\t// val = val.replace(/'/g, \"\\\\'\");\n\t\tval = sanitizeExportedString(val);\n\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = val;\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {StringParam} from '../../../../params/String';\nimport {sanitizeExportedString} from '../sanitize';\n\nexport class ParamStringJsonExporter extends ParamJsonExporter<StringParam> {\n\toverride add_main() {\n\t\t// let val = this._param.input_value();\n\t\tlet val = this._param.rawInput();\n\t\t// if (CoreType.isString(val)){\n\t\tval = sanitizeExportedString(val);\n\t\t// }\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = val;\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {RampParam} from '../../../../params/Ramp';\n\nexport class ParamRampJsonExporter extends ParamJsonExporter<RampParam> {\n\toverride add_main() {\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = this._param.rawInputSerialized();\n\t\t} else {\n\t\t\treturn this._param.rawInputSerialized();\n\t\t}\n\t}\n}\n","import {NodeJSONFunctionBodiesData, NodeJSONShadersData} from './../Node';\nimport {NodeJsonExporter, NodeJsonExporterUIData, JSONExporterDataRequestOption} from '../Node';\n\nexport class PolyNodeJsonExporter extends NodeJsonExporter<any> {\n\tprotected override async nodes_data(options: JSONExporterDataRequestOption) {\n\t\tif (options.showPolyNodesData || !this._node.polyNodeController?.locked()) {\n\t\t\treturn await super.nodes_data(options);\n\t\t}\n\t\t// the PolyNode does not save it children\n\t\treturn {};\n\t}\n\toverride uiData(options: JSONExporterDataRequestOption): NodeJsonExporterUIData {\n\t\tif (options.showPolyNodesData || !this._node.polyNodeController?.locked()) {\n\t\t\treturn super.uiData(options);\n\t\t} else {\n\t\t\treturn this.ui_data_without_children();\n\t\t}\n\t}\n\toverride async persistedConfigData(\n\t\tshadersData: NodeJSONShadersData,\n\t\tjsFunctionBodiesData: NodeJSONFunctionBodiesData,\n\t\toptions: JSONExporterDataRequestOption\n\t): Promise<void> {\n\t\tif (options.showPolyNodesData || !this._node.polyNodeController?.locked()) {\n\t\t\treturn await super.persistedConfigData(shadersData, jsFunctionBodiesData, options);\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../../../nodes/_Base';\nimport {BaseParamType} from '../../../params/_Base';\n\nimport {NodeJsonExporter} from './Node';\n// import {BaseNodeObjJsonExporter} from './node/Obj';\n// import {BaseNodeSopSubnetworkJsonExporter} from './node/Subnetwork';\n\nimport {ParamJsonExporter} from './Param';\n// import {ParamMultipleJsonExporter} from './param/Multiple';\nimport {ParamNumericJsonExporter} from './param/Numeric';\n// import {ParamOperatorPathJsonExporter} from './param/OperatorPath';\nimport {ParamNodePathJsonExporter} from './param/NodePath';\nimport {ParamParamPathJsonExporter} from './param/ParamPath';\n\nimport {ParamStringJsonExporter} from './param/String';\nimport {ParamRampJsonExporter} from './param/Ramp';\n// import {TypedObjNode} from '../../../nodes/obj/_Base';\n// import {TypedMultipleParam} from '../../../params/_Multiple';\nimport {TypedNumericParam} from '../../../params/_Numeric';\n// import {OperatorPathParam} from '../../../params/OperatorPath';\nimport {NodePathParam} from '../../../params/NodePath';\nimport {ParamPathParam} from '../../../params/ParamPath';\nimport {StringParam} from '../../../params/String';\nimport {RampParam} from '../../../params/Ramp';\n// import {PolySopNode} from '../../../nodes/sop/Poly';\n// import {PolyObjNode} from '../../../nodes/obj/Poly';\nimport {PolyNodeJsonExporter} from './nodes/Poly';\n\nexport class JsonExportDispatcher {\n\tdispatchNode(node: BaseNodeType) {\n\t\t// using PolySopNode and PolyObjNode seem to create circular dependency with webpack\n\t\t// if (node instanceof PolySopNode || node instanceof PolyObjNode)\n\t\tif (node.polyNodeController) {\n\t\t\treturn new PolyNodeJsonExporter(node, this);\n\t\t}\n\t\treturn new NodeJsonExporter(node, this);\n\t}\n\n\tdispatchParam(param: BaseParamType) {\n\t\t// if (param instanceof TypedMultipleParam) {\n\t\t// \treturn new ParamMultipleJsonExporter(param);\n\t\t// }\n\t\tif (param instanceof TypedNumericParam) {\n\t\t\treturn new ParamNumericJsonExporter(param);\n\t\t}\n\t\t// if (param instanceof OperatorPathParam) {\n\t\t// \treturn new ParamOperatorPathJsonExporter(param);\n\t\t// }\n\t\tif (param instanceof NodePathParam) {\n\t\t\treturn new ParamNodePathJsonExporter(param);\n\t\t}\n\t\tif (param instanceof ParamPathParam) {\n\t\t\treturn new ParamParamPathJsonExporter(param);\n\t\t}\n\t\tif (param instanceof StringParam) {\n\t\t\treturn new ParamStringJsonExporter(param);\n\t\t}\n\t\tif (param instanceof RampParam) {\n\t\t\treturn new ParamRampJsonExporter(param);\n\t\t}\n\t\treturn new ParamJsonExporter(param);\n\t}\n}\n","import {BaseNodeType} from './../../_Base';\nimport {NodeJsonExporterData} from './../../../io/json/export/Node';\nimport {NodeEvent} from './../../../poly/NodeEvent';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {SceneJsonImporter} from '../../../io/json/import/Scene';\nimport {JsonExportDispatcher} from '../../../io/json/export/Dispatcher';\nimport {NodeParamsConfig, ParamTemplate} from '../params/ParamsConfig';\nimport {PolyNodeDefinition, PolyNodesInputsData} from './PolyNodeDefinition';\nimport {PolyNodeClassByContext} from './PolyNodeClassByContext';\nimport {Poly} from '../../../Poly';\nimport {ParamOptionToAdd} from '../params/ParamsController';\nimport {ParamType} from '../../../poly/ParamType';\nimport {PolyNodeDataRegister} from './PolyNodeDataRegister';\nimport {arrayCompact} from '../../../../core/ArrayUtils';\nimport {NodeInputsController} from '../io/InputsController';\nimport {JsonImportDispatcher} from '../../../io/json/import/Dispatcher';\n// import {createPolyAnimNode} from '../../anim/utils/poly/createPolyAnimNode';\n// import {createPolyGlNode} from '../../gl/utils/poly/createPolyGlNode';\n// import {createPolyObjNode} from '../../obj/utils/poly/createPolyObjNode';\n// import {createPolySopNode} from '../../sop/utils/poly/createPolySopNode';\nimport {BaseGlConnectionPoint} from '../io/connections/Gl';\n\n// export const IS_POLY_NODE_BOOLEAN = 'isPolyNode';\n\ntype CreatePolyNodeFunction = (\n\tnodeType: string,\n\tdefinition: PolyNodeDefinition,\n\tpolyNodeControllerClass: typeof PolyNodeController\n) => any;\n\nexport class PolyNodeController {\n\tprivate static _createPolyNodeFunctionByContext: Map<NodeContext, CreatePolyNodeFunction> = new Map();\n\tstatic registerCreatePolyNodeFunctionForContext(\n\t\tcontext: NodeContext,\n\t\tcreatePolyNodeFunction: CreatePolyNodeFunction\n\t) {\n\t\tthis._createPolyNodeFunctionByContext.set(context, createPolyNodeFunction);\n\t}\n\n\tprivate static _definitionRegister: Map<NodeContext, Map<string, PolyNodeDefinition>> = new Map();\n\tprivate _locked = true;\n\tconstructor(private node: BaseNodeType, private _definition: PolyNodeDefinition) {}\n\n\tinitializeNode() {\n\t\tthis._initInputs();\n\n\t\t// add hooks\n\t\t// this.node.params.onParamsCreated('PolyNodeInit', () => {\n\t\t// \tthis._createParamsFromDefinition();\n\t\t// });\n\n\t\tthis.node.lifecycle.onAfterCreated(() => {\n\t\t\t// this._createParamsFromDefinition();\n\t\t\tthis.createChildNodesFromDefinition();\n\t\t});\n\t}\n\tlocked() {\n\t\treturn this._locked;\n\t}\n\tsetLockedState(state: boolean) {\n\t\tif (state == this._locked) {\n\t\t\treturn;\n\t\t}\n\t\tthis._locked = state;\n\t\tthis.node.emit(NodeEvent.POLY_NODE_LOCK_STATE_UPDATED);\n\t}\n\n\tprivate _initInputs() {\n\t\tconst inputsData = this._definition.inputs;\n\t\tif (!inputsData) {\n\t\t\treturn;\n\t\t}\n\t\tconst simpleData = inputsData.simple;\n\t\tif (simpleData) {\n\t\t\tthis.node.io.inputs.setCount(simpleData.min, simpleData.max);\n\t\t}\n\t}\n\n\t// private _createParamsFromDefinition() {\n\t// \tconst paramsData = this._definition.params;\n\t// \tif (!paramsData) {\n\t// \t\treturn;\n\t// \t}\n\t// \tfor (let paramData of paramsData) {\n\t// \t\tparamData.options = paramData.options || {};\n\t// \t\tparamData.options.spare = true;\n\t// \t}\n\t// \tthis.node.params.updateParams({toAdd: paramsData});\n\t// }\n\tstatic setupParamsConfig(paramsConfig: NodeParamsConfig, data: PolyNodeDefinition) {\n\t\tif (!data.params) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const paramData of data.params) {\n\t\t\tconst paramName = paramData.name;\n\t\t\tconst paramType = paramData.type;\n\t\t\tconst initValue = paramData.initValue;\n\t\t\tconst options = paramData.options;\n\t\t\t(paramsConfig as any)[paramName] = new ParamTemplate(paramType, initValue, options); //ParamConfig.STRING('aa');\n\t\t}\n\t}\n\n\tcreateChildNodesFromDefinition() {\n\t\tconst childrenData = this._definition.nodes;\n\t\tif (!childrenData) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: this is to avoid creating gl globals and output nodes\n\t\t// but there should be a better way, on a per-node basis.\n\t\t// Especially since it can create problem when loading a scene with gl builders\n\t\t// as those may trigger the creation of globals and output nodes too early, resulting in a broken load\n\t\tconst currentSceneLoadedState: boolean = this.node.scene().loadingController.loaded();\n\t\tif (currentSceneLoadedState) {\n\t\t\tthis.node.scene().loadingController.markAsLoading();\n\t\t}\n\t\tconst oldLockedState = this.locked();\n\t\tthis.setLockedState(false);\n\n\t\tconst sceneImporter = new SceneJsonImporter({});\n\t\tconst dispatcher = new JsonImportDispatcher();\n\t\tconst nodeImporter = dispatcher.dispatchNonPolyNode(this.node);\n\t\tconst exporterData: NodeJsonExporterData = {\n\t\t\t// ...this._definition,\n\t\t\ttype: this.node.type(),\n\t\t\tpolyNode: {\n\t\t\t\tlocked: true,\n\t\t\t},\n\t\t};\n\t\tnodeImporter.create_nodes(sceneImporter, childrenData, exporterData);\n\n\t\tconst uiData = this._definition.ui;\n\t\tif (uiData) {\n\t\t\tnodeImporter.processNodesUiData(sceneImporter, uiData);\n\t\t}\n\n\t\tif (currentSceneLoadedState) {\n\t\t\tthis.node.scene().loadingController.markAsLoaded();\n\t\t}\n\n\t\tthis.setLockedState(oldLockedState);\n\t}\n\n\tstatic inputsData(node: BaseNodeType): PolyNodesInputsData {\n\t\tif (node.io.inputs.hasNamedInputs()) {\n\t\t\tconst inputs = node.io.inputs as NodeInputsController<NodeContext.GL>;\n\t\t\tconst connectionPoints: BaseGlConnectionPoint[] = [];\n\t\t\tconst namedInputConnectionPoints = inputs.namedInputConnectionPoints();\n\t\t\tif (namedInputConnectionPoints) {\n\t\t\t\tarrayCompact(namedInputConnectionPoints, connectionPoints);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttyped: {\n\t\t\t\t\ttypes: connectionPoints.map((cp) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: cp.name(),\n\t\t\t\t\t\t\ttype: cp.type(),\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tsimple: {\n\t\t\t\t\tmin: node.io.inputs.minCount(),\n\t\t\t\t\tmax: node.io.inputs.maxInputsCount(),\n\t\t\t\t\tnames: node.displayedInputNames(),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\tstatic async polyNodeData(node: BaseNodeType, inputsData?: PolyNodesInputsData): Promise<PolyNodeDefinition> {\n\t\tconst dispatcher = new JsonExportDispatcher();\n\t\tconst rootExporter = dispatcher.dispatchNode(node);\n\t\tconst nodesData = await rootExporter.data({showPolyNodesData: true});\n\t\tconst uiData = rootExporter.uiData({showPolyNodesData: true});\n\n\t\tconst nodeInputsData = inputsData || this.inputsData(node);\n\n\t\tconst data: PolyNodeDefinition = {\n\t\t\tmetadata: {\n\t\t\t\tversion: {\n\t\t\t\t\tpolygonjs: '1',\n\t\t\t\t},\n\t\t\t\tcreatedAt: 1,\n\t\t\t},\n\t\t\tnodeContext: node.context(),\n\t\t\tinputs: nodeInputsData,\n\t\t\tparams: node.params.non_spare\n\t\t\t\t.filter((p) => p.parentParam() == null)\n\t\t\t\t.map((param) => {\n\t\t\t\t\tconst paramData: ParamOptionToAdd<ParamType> = {\n\t\t\t\t\t\tname: param.name(),\n\t\t\t\t\t\ttype: param.type(),\n\t\t\t\t\t\tinitValue: param.defaultValueSerialized(),\n\t\t\t\t\t\trawInput: param.rawInputSerialized(),\n\t\t\t\t\t\toptions: param.options.current(),\n\t\t\t\t\t};\n\t\t\t\t\treturn paramData;\n\t\t\t\t}),\n\t\t\tnodes: nodesData.nodes,\n\t\t\tui: uiData.nodes,\n\t\t};\n\t\treturn data;\n\t}\n\n\tstatic _createNodeClass<NC extends NodeContext>(\n\t\tnodeContext: NC,\n\t\tnodeType: string,\n\t\tdata: PolyNodeDefinition\n\t): PolyNodeClassByContext[NC] | undefined {\n\t\tconst createFunction = this._createPolyNodeFunctionByContext.get(nodeContext);\n\t\tif (!createFunction) {\n\t\t\treturn;\n\t\t}\n\t\treturn createFunction(nodeType, data, PolyNodeController) as any;\n\t}\n\tstatic createNodeClassAndRegister<NC extends NodeContext>(dataRegister: PolyNodeDataRegister<NC>) {\n\t\tconst {node_context, node_type, data} = dataRegister;\n\t\tconst nodeClass = this._createNodeClass(node_context, node_type, data);\n\t\tif (nodeClass) {\n\t\t\tlet registerMapForContext = this._definitionRegister.get(node_context);\n\t\t\tif (!registerMapForContext) {\n\t\t\t\tregisterMapForContext = new Map();\n\t\t\t\tthis._definitionRegister.set(node_context, registerMapForContext);\n\t\t\t}\n\t\t\tregisterMapForContext.set(node_type, data);\n\t\t\tPoly.registerNode(nodeClass, 'polyNodes', {polyNode: true});\n\t\t} else {\n\t\t\tconsole.warn('failed to create node from definition', node_context, node_type, data);\n\t\t}\n\t}\n\tstatic definition<NC extends NodeContext>(context: NC, type: string) {\n\t\treturn this._definitionRegister.get(context)?.get(type);\n\t}\n\tstatic register() {\n\t\treturn this._definitionRegister;\n\t}\n}\n","import {NodeParamsConfig, ParamTemplate} from '../params/ParamsConfig';\nimport {PolyNodeDefinition} from './PolyNodeDefinition';\n\nexport class PolyNodeParamsConfig {\n\tstatic ParamsConfig(data: PolyNodeDefinition, paramsConfig: NodeParamsConfig = new NodeParamsConfig()) {\n\t\tif (data.params) {\n\t\t\tfor (const paramData of data.params) {\n\t\t\t\tconst paramName = paramData.name;\n\t\t\t\tconst paramType = paramData.type;\n\t\t\t\tconst initValue = paramData.initValue;\n\t\t\t\tconst options = paramData.options;\n\t\t\t\t(paramsConfig as any)[paramName] = new ParamTemplate(paramType, initValue, options); //ParamConfig.STRING('aa');\n\t\t\t}\n\t\t}\n\t\treturn paramsConfig;\n\t}\n}\n","import {NodeContext} from '../../engine/poly/NodeContext';\nimport {ParamType} from '../../engine/poly/ParamType';\nimport {NodeStatesController} from '../../engine/nodes/utils/StatesController';\nimport {PolyScene} from '../../engine/scene/PolyScene';\nimport {InputCloneMode} from '../../engine/poly/InputCloneMode';\nimport {BaseNodeType} from '../nodes/_Base';\nimport {CoreType} from '../../core/Type';\nimport {TypedNodePathParamValue, TypedParamPathParamValue} from '../../core/Walker';\nimport {Vector3} from 'three';\nimport {SimpleParamJsonExporterData} from '../nodes/utils/io/IOController';\nimport {DefaultOperationParams} from '../../core/operations/_Base';\nimport {OnOperationRegisterCallback} from '../poly/registers/nodes/NodesRegister';\n\nexport interface ConvertExportParamDataParams {\n\tparamName: string;\n\tparamData: SimpleParamJsonExporterData<ParamType>;\n\tparams: DefaultOperationParams;\n}\n\nexport const OPERATIONS_COMPOSER_NODE_TYPE: Readonly<string> = 'operationsComposer';\n\nexport class BaseOperation<NC extends NodeContext> {\n\tstatic type(): string {\n\t\tthrow 'type to be overriden';\n\t}\n\ttype() {\n\t\tconst c = this.constructor as typeof BaseOperation;\n\t\treturn c.type();\n\t}\n\tstatic onRegister: OnOperationRegisterCallback | undefined;\n\tstatic context(): NodeContext {\n\t\tconsole.error('operation has no node_context', this);\n\t\tthrow 'context requires override';\n\t}\n\tcontext(): NodeContext {\n\t\tconst c = this.constructor as typeof BaseOperation;\n\t\treturn c.context();\n\t}\n\n\tstatic readonly DEFAULT_PARAMS: DefaultOperationParams = {};\n\tstatic readonly INPUT_CLONED_STATE: InputCloneMode | InputCloneMode[] = [];\n\n\tconstructor(\n\t\tprotected _scene: PolyScene,\n\t\tprotected states?: NodeStatesController<NC>,\n\t\tprotected _node?: BaseNodeType\n\t) {}\n\tscene() {\n\t\treturn this._scene;\n\t}\n\tcook(input_contents: any[], params: object): any {}\n\n\tconvertExportParamData(options: ConvertExportParamDataParams) {\n\t\tconst {params, paramName, paramData} = options;\n\t\tconst default_param = params[paramName];\n\t\tif (CoreType.isBoolean(paramData)) {\n\t\t\treturn paramData;\n\t\t}\n\t\tif (CoreType.isNumber(paramData)) {\n\t\t\tif (CoreType.isBoolean(default_param)) {\n\t\t\t\t// if we receive 0, it may be for a boolean param,\n\t\t\t\t// so if the default is a boolean, we convert\n\t\t\t\treturn paramData >= 1 ? true : false;\n\t\t\t} else {\n\t\t\t\treturn paramData;\n\t\t\t}\n\t\t}\n\t\tif (CoreType.isString(paramData)) {\n\t\t\tif (default_param) {\n\t\t\t\tif (default_param instanceof TypedNodePathParamValue) {\n\t\t\t\t\treturn default_param.setPath(paramData);\n\t\t\t\t}\n\t\t\t\tif (default_param instanceof TypedParamPathParamValue) {\n\t\t\t\t\treturn default_param.setPath(paramData);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn paramData;\n\t\t}\n\t\tif (CoreType.isArray(paramData)) {\n\t\t\t(params[paramName] as Vector3).fromArray(paramData as number[]);\n\t\t}\n\t}\n}\n","import {CoreGroup} from '../../../core/geometry/Group';\nimport {BaseOperation} from '../_Base';\nimport {NodeContext} from '../../../engine/poly/NodeContext';\nimport {\n\tObjectType,\n\tObjectByObjectType,\n\tobjectConstructorByObjectType,\n\tDEFAULT_MATERIALS,\n} from '../../../core/geometry/Constant';\nimport {CoreGeometryIndexBuilder} from '../../../core/geometry/util/IndexBuilder';\nimport {BufferGeometry, Material, Object3D} from 'three';\nimport {CoreObjectType, ObjectContent} from '../../../core/geometry/ObjectContent';\n\nexport class BaseSopOperation extends BaseOperation<NodeContext.SOP> {\n\tstatic override context() {\n\t\treturn NodeContext.SOP;\n\t}\n\toverride cook(inputCoreGroups: CoreGroup[], params: any): CoreGroup | Promise<CoreGroup> | void {}\n\n\t//\n\t//\n\t// UTILS\n\t//\n\t//\n\tprotected createCoreGroupFromObjects(objects: ObjectContent<CoreObjectType>[]) {\n\t\tconst coreGroup = new CoreGroup();\n\t\tcoreGroup.setAllObjects(objects);\n\t\treturn coreGroup;\n\t}\n\tprotected createCoreGroupFromGeometry(geometry: BufferGeometry, type: ObjectType = ObjectType.MESH) {\n\t\tconst object = BaseSopOperation.createObject(geometry, type);\n\t\treturn this.createCoreGroupFromObjects(object ? [object] : []);\n\t}\n\tprotected createObject<OT extends ObjectType>(\n\t\tgeometry: BufferGeometry,\n\t\ttype: OT,\n\t\tmaterial?: Material\n\t): ObjectByObjectType[OT] {\n\t\treturn BaseSopOperation.createObject(geometry, type, material);\n\t}\n\tstatic createObject<OT extends ObjectType>(\n\t\tgeometry: BufferGeometry,\n\t\ttype: OT,\n\t\tmaterial?: Material\n\t): ObjectByObjectType[OT] {\n\t\t// ensure it has an index\n\t\tthis.createIndexIfNone(geometry);\n\n\t\tconst objectConstructor = objectConstructorByObjectType(type) || objectConstructorByObjectType(ObjectType.MESH);\n\t\tmaterial = material || DEFAULT_MATERIALS[type];\n\t\tconst object = new (objectConstructor as any)(geometry, material);\n\t\tthis.applyObjectDefault(object);\n\n\t\treturn object as ObjectByObjectType[OT];\n\t}\n\tstatic applyObjectDefault(object: Object3D) {\n\t\tobject.castShadow = true;\n\t\tobject.receiveShadow = true;\n\t\tobject.frustumCulled = false;\n\t\tobject.matrixAutoUpdate = false;\n\t}\n\tprotected createIndexIfNone(geometry: BufferGeometry) {\n\t\tBaseSopOperation.createIndexIfNone(geometry);\n\t}\n\tstatic createIndexIfNone(geometry: BufferGeometry) {\n\t\tCoreGeometryIndexBuilder.createIndexIfNone(geometry);\n\t}\n}\n","import {TypedNumericParam} from './_Numeric';\nimport {ParamType} from '../poly/ParamType';\nimport {CoreString} from '../../core/String';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {CoreType} from '../../core/Type';\n\nexport class BooleanParam extends TypedNumericParam<ParamType.BOOLEAN> {\n\tstatic override type() {\n\t\treturn ParamType.BOOLEAN;\n\t}\n\t// TODO: be careful as this does not allow serialization of expressions as default value\n\toverride defaultValueSerialized() {\n\t\tif (CoreType.isString(this._default_value)) {\n\t\t\treturn this._default_value;\n\t\t} else {\n\t\t\treturn this.convert(this._default_value) || false;\n\t\t}\n\t}\n\toverride rawInputSerialized() {\n\t\treturn this._raw_input;\n\t}\n\toverride valueSerialized() {\n\t\treturn this.value;\n\t}\n\tprotected override _copyValue(param: BooleanParam) {\n\t\tthis.set(param.value);\n\t}\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.BOOLEAN],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.BOOLEAN]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.BOOLEAN],\n\t\tval2: ParamValuesTypeMap[ParamType.BOOLEAN]\n\t) {\n\t\treturn val1 == val2;\n\t}\n\toverride convert(raw_val: ParamInitValuesTypeMap[ParamType.BOOLEAN]): boolean | null {\n\t\tif (CoreType.isBoolean(raw_val)) {\n\t\t\treturn raw_val;\n\t\t} else {\n\t\t\tif (CoreType.isNumber(raw_val)) {\n\t\t\t\treturn raw_val >= 1;\n\t\t\t} else {\n\t\t\t\tif (CoreType.isString(raw_val)) {\n\t\t\t\t\tif (CoreString.isBoolean(raw_val)) {\n\t\t\t\t\t\treturn CoreString.toBoolean(raw_val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (CoreString.isNumber(raw_val)) {\n\t\t\t\t\t\t\tconst parsed = parseFloat(raw_val);\n\t\t\t\t\t\t\treturn parsed >= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n","import {Number3, StringOrNumber3} from '../../types/GlobalTypes';\nimport {TypedMultipleParam} from './_Multiple';\nimport {Color} from 'three';\nimport {ParamType} from '../poly/ParamType';\nimport {FloatParam} from './Float';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ColorConversion} from '../../core/Color';\nimport {TypeAssert} from '../poly/Assert';\nimport {CoreType} from '../../core/Type';\n\nconst COMPONENT_NAMES_COLOR: Readonly<string[]> = ['r', 'g', 'b'];\nconst tmp: Number3 = [0, 0, 0];\n\nfunction colorEqualsStringNumber3(c: Color, array: StringOrNumber3): boolean {\n\treturn c.r == array[0] && c.g == array[1] && c.b == array[2];\n}\nfunction stringNumber3Equals(array1: StringOrNumber3, array2: StringOrNumber3): boolean {\n\treturn array1[0] == array2[0] && array1[1] == array2[1] && array1[2] == array2[2];\n}\n\nexport class ColorParam extends TypedMultipleParam<ParamType.COLOR> {\n\tprotected override _value = new Color();\n\tprivate _valuePreConversion = new Color();\n\tprivate _valueSerializedDirty: boolean = false;\n\tprivate _valueSerialized: Number3 = [0, 0, 0];\n\tprivate _valuePreConversionSerialized: Number3 = [0, 0, 0];\n\tr!: FloatParam;\n\tg!: FloatParam;\n\tb!: FloatParam;\n\tstatic override type() {\n\t\treturn ParamType.COLOR;\n\t}\n\toverride componentNames(): Readonly<string[]> {\n\t\treturn COMPONENT_NAMES_COLOR;\n\t}\n\toverride defaultValueSerialized() {\n\t\tif (CoreType.isArray(this._default_value)) {\n\t\t\treturn this._default_value;\n\t\t} else {\n\t\t\treturn this._default_value.toArray() as Number3;\n\t\t}\n\t}\n\toverride _prefilterInvalidRawInput(rawInput: any) {\n\t\tif (rawInput instanceof Color) {\n\t\t\trawInput.toArray(tmp);\n\t\t\treturn tmp;\n\t\t}\n\t\treturn super._prefilterInvalidRawInput(rawInput);\n\t}\n\t// rawInputSerialized() {\n\t// \tif (this._raw_input instanceof Color) {\n\t// \t\treturn this._raw_input.toArray() as Number3;\n\t// \t} else {\n\t// \t\tconst new_array: StringOrNumber3 = [this._raw_input[0], this._raw_input[1], this._raw_input[2]];\n\t// \t\treturn new_array;\n\t// \t}\n\t// }\n\toverride valueSerialized() {\n\t\tthis._updateValueSerializedIfRequired();\n\t\treturn this._valueSerialized;\n\t}\n\toverride valuePreConversionSerialized() {\n\t\tthis._updateValueSerializedIfRequired();\n\t\treturn this._valuePreConversionSerialized;\n\t}\n\tprivate _copiedValue: Number3 = [0, 0, 0];\n\tprotected override _copyValue(param: ColorParam) {\n\t\tparam.value.toArray(this._copiedValue);\n\t\tthis.set(this._copiedValue);\n\t}\n\t// protected _prefilterInvalidRawInput(\n\t// \traw_input: ParamInitValuesTypeMap[ParamType.COLOR]\n\t// ): ParamInitValuesTypeMap[ParamType.COLOR] {\n\t// \treturn raw_input;\n\t// }\n\tprotected override _cloneRawInput(raw_input: ParamInitValuesTypeMap[ParamType.COLOR]) {\n\t\tif (raw_input instanceof Color) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\tconst new_array: StringOrNumber3 = [raw_input[0], raw_input[1], raw_input[2]];\n\t\t\t// in case array elements are undefined\n\t\t\tif (new_array[0] == null) {\n\t\t\t\tnew_array[0] = new_array[0] || 0;\n\t\t\t}\n\t\t\tif (new_array[1] == null) {\n\t\t\t\tnew_array[1] = new_array[1] || new_array[0];\n\t\t\t}\n\t\t\tif (new_array[2] == null) {\n\t\t\t\tnew_array[2] = new_array[2] || new_array[1];\n\t\t\t}\n\t\t\treturn new_array;\n\t\t}\n\t}\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.COLOR],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.COLOR]\n\t) {\n\t\tif (raw_input1 instanceof Color) {\n\t\t\tif (raw_input2 instanceof Color) {\n\t\t\t\treturn raw_input1.equals(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn colorEqualsStringNumber3(raw_input1, raw_input2);\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof Color) {\n\t\t\t\treturn colorEqualsStringNumber3(raw_input2, raw_input1);\n\t\t\t} else {\n\t\t\t\treturn stringNumber3Equals(raw_input1, raw_input2);\n\t\t\t}\n\t\t}\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.COLOR],\n\t\tval2: ParamValuesTypeMap[ParamType.COLOR]\n\t) {\n\t\treturn val1.equals(val2);\n\t}\n\toverride initComponents() {\n\t\tsuper.initComponents();\n\t\tthis.r = this.components[0];\n\t\tthis.g = this.components[1];\n\t\tthis.b = this.components[2];\n\t\tthis._valueSerializedDirty = true;\n\t\t// this.options.onOptionChange('conversion', () => {\n\t\t// \tthis.setValueFromComponents();\n\t\t// });\n\t}\n\toverride postOptionsInitialize() {\n\t\tthis.setValueFromComponents();\n\t}\n\n\tprivate _updateValueSerializedIfRequired() {\n\t\tif (!this._valueSerializedDirty) {\n\t\t\treturn;\n\t\t}\n\t\tthis._valueSerialized[0] = this._value.r;\n\t\tthis._valueSerialized[1] = this._value.g;\n\t\tthis._valueSerialized[2] = this._value.b;\n\t\tthis._valuePreConversionSerialized[0] = this._valuePreConversion.r;\n\t\tthis._valuePreConversionSerialized[1] = this._valuePreConversion.g;\n\t\tthis._valuePreConversionSerialized[2] = this._valuePreConversion.b;\n\t}\n\n\tvaluePreConversion() {\n\t\treturn this._valuePreConversion;\n\t}\n\tasync setConversion(conversion: ColorConversion) {\n\t\tthis.options.setOption('conversion', conversion);\n\t\tthis.setDirty(); // to ensure value is recomputed\n\t\tawait this.options.executeCallback();\n\t}\n\n\toverride setValueFromComponents() {\n\t\tthis._valuePreConversion.r = this.r.value;\n\t\tthis._valuePreConversion.g = this.g.value;\n\t\tthis._valuePreConversion.b = this.b.value;\n\t\tthis._value.copy(this._valuePreConversion);\n\n\t\tthis._applyColorConversion();\n\n\t\tthis._valueSerializedDirty = true;\n\t}\n\tprivate _applyColorConversion() {\n\t\tconst conversion = this.options.colorConversion();\n\n\t\tswitch (conversion) {\n\t\t\tcase ColorConversion.NONE: {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase ColorConversion.SRGB_TO_LINEAR: {\n\t\t\t\tthis._value.convertSRGBToLinear();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase ColorConversion.LINEAR_TO_SRGB: {\n\t\t\t\tthis._value.convertLinearToSRGB();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(conversion);\n\t}\n}\n","import {TypedNumericParam} from './_Numeric';\nimport {ParamType} from '../poly/ParamType';\nimport {CoreString} from '../../core/String';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {CoreType} from '../../core/Type';\nexport class FloatParam extends TypedNumericParam<ParamType.FLOAT> {\n\tstatic override type() {\n\t\treturn ParamType.FLOAT;\n\t}\n\toverride defaultValueSerialized() {\n\t\treturn this._default_value;\n\t}\n\toverride rawInputSerialized() {\n\t\treturn this._raw_input;\n\t}\n\toverride valueSerialized() {\n\t\treturn this.value;\n\t}\n\tprotected override _copyValue(param: FloatParam) {\n\t\tthis.set(param.valueSerialized());\n\t}\n\tprotected override _prefilterInvalidRawInput(raw_input: any): ParamInitValuesTypeMap[ParamType.INTEGER] {\n\t\tif (CoreType.isArray(raw_input)) {\n\t\t\treturn raw_input[0] as ParamInitValuesTypeMap[ParamType.INTEGER];\n\t\t}\n\t\tif (CoreType.isString(raw_input) && CoreString.isNumber(raw_input)) {\n\t\t\t// we check here that we have a string AND that the string can be converted to a valid number\n\t\t\tconst num = parseFloat(raw_input);\n\t\t\tif (num != null) {\n\t\t\t\tconst converted = this.convert(num);\n\t\t\t\tif (converted != null) {\n\t\t\t\t\treturn converted;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (CoreType.isNumber(raw_input)) {\n\t\t\tconst converted = this.convert(raw_input);\n\t\t\tif (converted != null) {\n\t\t\t\treturn converted;\n\t\t\t}\n\t\t}\n\t\treturn raw_input;\n\t}\n\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.FLOAT],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.FLOAT]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.FLOAT],\n\t\tval2: ParamValuesTypeMap[ParamType.FLOAT]\n\t) {\n\t\treturn val1 == val2;\n\t}\n\tstatic convert(raw_val: ParamInitValuesTypeMap[ParamType.FLOAT]): number | null {\n\t\tif (CoreType.isNumber(raw_val)) {\n\t\t\treturn raw_val;\n\t\t} else {\n\t\t\tif (CoreType.isBoolean(raw_val)) {\n\t\t\t\treturn raw_val ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tif (CoreString.isNumber(raw_val)) {\n\t\t\t\t\tconst parsed = parseFloat(raw_val);\n\t\t\t\t\tif (CoreType.isNumber(parsed)) {\n\t\t\t\t\t\treturn parsed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\toverride convert(raw_val: ParamInitValuesTypeMap[ParamType.FLOAT]): number | null {\n\t\tconst result = FloatParam.convert(raw_val);\n\t\tif (result != null) {\n\t\t\treturn this.options.ensureInRange(result);\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n}\n","import {TypedNumericParam} from './_Numeric';\nimport {ParamType} from '../poly/ParamType';\nimport {CoreString} from '../../core/String';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {CoreType} from '../../core/Type';\n\nexport class IntegerParam extends TypedNumericParam<ParamType.INTEGER> {\n\tstatic override type() {\n\t\treturn ParamType.INTEGER;\n\t}\n\toverride defaultValueSerialized() {\n\t\treturn this._default_value;\n\t}\n\toverride rawInputSerialized() {\n\t\treturn this._raw_input;\n\t}\n\toverride valueSerialized() {\n\t\treturn this.value;\n\t}\n\tprotected override _copyValue(param: IntegerParam) {\n\t\tthis.set(param.valueSerialized());\n\t}\n\tprotected override _prefilterInvalidRawInput(raw_input: any): ParamInitValuesTypeMap[ParamType.INTEGER] {\n\t\tif (CoreType.isArray(raw_input)) {\n\t\t\treturn raw_input[0] as ParamInitValuesTypeMap[ParamType.INTEGER];\n\t\t}\n\t\tif (CoreType.isString(raw_input) && CoreString.isNumber(raw_input)) {\n\t\t\t// we check here that we have a string AND that the string can be converted to a valid number\n\t\t\tconst num = parseInt(raw_input);\n\t\t\tif (num != null) {\n\t\t\t\tconst converted = this.convert(num);\n\t\t\t\tif (converted != null) {\n\t\t\t\t\treturn converted;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (CoreType.isNumber(raw_input)) {\n\t\t\tconst converted = this.convert(raw_input);\n\t\t\tif (converted != null) {\n\t\t\t\treturn converted;\n\t\t\t}\n\t\t}\n\t\treturn raw_input;\n\t}\n\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.INTEGER],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.INTEGER]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.INTEGER],\n\t\tval2: ParamValuesTypeMap[ParamType.INTEGER]\n\t) {\n\t\treturn val1 == val2;\n\t}\n\tstatic convert(raw_val: ParamInitValuesTypeMap[ParamType.INTEGER]): number | null {\n\t\tif (CoreType.isNumber(raw_val)) {\n\t\t\treturn Math.round(raw_val);\n\t\t} else {\n\t\t\tif (CoreType.isBoolean(raw_val)) {\n\t\t\t\treturn raw_val ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tif (CoreString.isNumber(raw_val)) {\n\t\t\t\t\tconst parsed = parseInt(raw_val);\n\t\t\t\t\tif (CoreType.isNumber(parsed)) {\n\t\t\t\t\t\treturn parsed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\toverride convert(raw_val: ParamInitValuesTypeMap[ParamType.INTEGER]): number | null {\n\t\tconst result = IntegerParam.convert(raw_val);\n\t\tif (result != null) {\n\t\t\tlet validVal = this.options.ensureInRange(result);\n\t\t\tvalidVal = this.options.ensureValueInMenuEntries(validVal);\n\t\t\treturn validVal;\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n}\n","import {CoreType} from './../../core/Type';\nimport {TypedPathParam} from './_BasePath';\nimport {CoreWalker} from '../../core/Walker';\nimport {BaseNodeType} from '../nodes/_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {TypedNodePathParamValue} from '../../core/Walker';\n\ninterface SetNodeOptions {\n\trelative: boolean;\n}\n\nconst tmpConvertedValue = new TypedNodePathParamValue();\nexport class NodePathParam extends TypedPathParam<ParamType.NODE_PATH> {\n\tstatic override type() {\n\t\treturn ParamType.NODE_PATH;\n\t}\n\tprotected override _initializeParam() {\n\t\tthis._value = new TypedNodePathParamValue();\n\t}\n\n\toverride defaultValueSerialized() {\n\t\treturn this._default_value;\n\t}\n\toverride rawInputSerialized() {\n\t\treturn `${this._raw_input}`;\n\t}\n\toverride valueSerialized() {\n\t\treturn `${this.value}`;\n\t}\n\tprotected override _copyValue(param: NodePathParam) {\n\t\tthis.set(param.valueSerialized());\n\t}\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.NODE_PATH],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.NODE_PATH]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.NODE_PATH],\n\t\tval2: ParamValuesTypeMap[ParamType.NODE_PATH]\n\t) {\n\t\treturn val1 == val2;\n\t}\n\toverride isDefault(): boolean {\n\t\treturn this._raw_input == this._default_value;\n\t}\n\tsetNode(node: BaseNodeType, options?: SetNodeOptions) {\n\t\tif (options?.relative == true) {\n\t\t\tconst path = CoreWalker.relativePath(this.node, node);\n\t\t\tthis.set(path);\n\t\t} else {\n\t\t\tthis.set(node.path());\n\t\t}\n\t}\n\n\tprotected _assignValue(value: ParamValuesTypeMap[ParamType.NODE_PATH] | string): void {\n\t\tconst path = CoreType.isString(value) ? value : value.path();\n\t\tif (this._value.path() != path) {\n\t\t\tthis._setValuePathAndFindTarget(path, false);\n\t\t}\n\t}\n\toverride convert(rawVal: any): ParamValuesTypeMap[ParamType.NODE_PATH] | null {\n\t\tif (CoreType.isString(rawVal)) {\n\t\t\ttmpConvertedValue.setPath(rawVal);\n\t\t\treturn tmpConvertedValue;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t// protected override async processComputation() {\n\t// \tthis._findTarget();\n\t// }\n\tprotected _findTarget() {\n\t\tif (!this.node) {\n\t\t\treturn;\n\t\t}\n\t\tconst path = this._value.path();\n\t\tlet node: BaseNodeType | null = null;\n\t\tconst pathNonEmpty = path != null && path !== '';\n\n\t\tthis.scene().referencesController.resetReferenceFromParam(this); // must be before decomposed path is changed\n\t\tthis.decomposedPath.reset();\n\t\tif (pathNonEmpty) {\n\t\t\tnode = CoreWalker.findNode(this.node, path, this.decomposedPath);\n\t\t}\n\n\t\tconst currentFoundEntity = this._value.node();\n\t\tconst newlyFoundEntity = node;\n\n\t\t// if the param refers to its own node, we set an error\n\t\tif (newlyFoundEntity) {\n\t\t\tif (newlyFoundEntity.graphNodeId() == this.node.graphNodeId()) {\n\t\t\t\tthis.states.error.set(`param cannot refer to its own node`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._handleReferences(node, path);\n\n\t\tif (currentFoundEntity?.graphNodeId() !== newlyFoundEntity?.graphNodeId()) {\n\t\t\tconst dependentOnFoundNode = this.options.dependentOnFoundNode();\n\n\t\t\tconst previouslyFoundNode = this._value.node();\n\t\t\tif (previouslyFoundNode) {\n\t\t\t\tif (dependentOnFoundNode) {\n\t\t\t\t\tthis.removeGraphInput(previouslyFoundNode);\n\t\t\t\t} else {\n\t\t\t\t\t// this._found_node.remove_param_referree(this) // TODO: typescript\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (node) {\n\t\t\t\tthis._assignFoundNode(node);\n\t\t\t} else {\n\t\t\t\tthis._value.setNode(null);\n\t\t\t}\n\n\t\t\tthis.options.executeCallback();\n\t\t}\n\t\tif (pathNonEmpty && !node && this.scene().loadingController.loaded()) {\n\t\t\tif (pathNonEmpty) {\n\t\t\t\tthis.states.error.set(`no node found at path '${path}'`);\n\t\t\t}\n\t\t}\n\n\t\tthis.removeDirtyState();\n\t}\n\n\tprivate _assignFoundNode(node: BaseNodeType) {\n\t\tconst dependentOnFoundNode = this.options.dependentOnFoundNode();\n\t\tif (this._isNodeExpectedContext(node)) {\n\t\t\tif (this._isNodeExpectedType(node)) {\n\t\t\t\tthis.states.error.clear();\n\t\t\t\tthis._value.setNode(node);\n\t\t\t\tif (dependentOnFoundNode) {\n\t\t\t\t\tthis.addGraphInput(node);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.states.error.set(\n\t\t\t\t\t`node type is ${node.type()} but the params expects one of ${(this._expectedNodeTypes() || []).join(\n\t\t\t\t\t\t', '\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.states.error.set(\n\t\t\t\t`node context is ${node.context()} but the params expects a ${this._expectedContext()}`\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _expectedContext() {\n\t\treturn this.options.nodeSelectionContext();\n\t}\n\tprivate _isNodeExpectedContext(node: BaseNodeType) {\n\t\tconst expectedContext = this._expectedContext();\n\t\tif (expectedContext == null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn expectedContext == node.context();\n\t}\n\tprivate _expectedNodeTypes() {\n\t\treturn this.options.nodeSelectionTypes();\n\t}\n\n\tprivate _isNodeExpectedType(node: BaseNodeType) {\n\t\tconst expected_types = this._expectedNodeTypes();\n\t\tif (expected_types == null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn expected_types?.includes(node.type());\n\t}\n\n\tnotifyPathRebuildRequired(node: BaseNodeType) {\n\t\tthis.decomposedPath.updateFromNameChange(node);\n\t\tconst newPath = this.decomposedPath.toPath();\n\t\tthis.set(newPath);\n\t}\n\tnotifyTargetParamOwnerParamsUpdated(node: BaseNodeType) {\n\t\tthis.setDirty();\n\t}\n}\n","import {CoreType} from './../../core/Type';\nimport {BaseParamType} from './_Base';\nimport {TypedPathParam} from './_BasePath';\nimport {CoreWalker, TypedParamPathParamValue} from '../../core/Walker';\nimport {BaseNodeType} from '../nodes/_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nconst tmpConvertedValue = new TypedParamPathParamValue();\nexport class ParamPathParam extends TypedPathParam<ParamType.PARAM_PATH> {\n\tstatic override type() {\n\t\treturn ParamType.PARAM_PATH;\n\t}\n\tprotected override _initializeParam() {\n\t\tthis._value = new TypedParamPathParamValue();\n\t}\n\n\toverride defaultValueSerialized() {\n\t\treturn this._default_value;\n\t}\n\toverride rawInputSerialized() {\n\t\treturn `${this._raw_input}`;\n\t}\n\toverride valueSerialized() {\n\t\treturn `${this.value}`;\n\t}\n\tprotected override _copyValue(param: ParamPathParam) {\n\t\tthis.set(param.valueSerialized());\n\t}\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.PARAM_PATH],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.PARAM_PATH]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.PARAM_PATH],\n\t\tval2: ParamValuesTypeMap[ParamType.PARAM_PATH]\n\t) {\n\t\treturn val1 == val2;\n\t}\n\toverride isDefault(): boolean {\n\t\treturn this._raw_input == this._default_value;\n\t}\n\tsetParam(param: BaseParamType) {\n\t\tthis.set(param.path());\n\t}\n\n\tprotected _assignValue(value: ParamValuesTypeMap[ParamType.PARAM_PATH] | string): void {\n\t\tconst path = CoreType.isString(value) ? value : value.path();\n\t\tif (this._value.path() != path) {\n\t\t\tthis._setValuePathAndFindTarget(path, false);\n\t\t}\n\t}\n\toverride convert(rawVal: any): ParamValuesTypeMap[ParamType.PARAM_PATH] | null {\n\t\tif (CoreType.isString(rawVal)) {\n\t\t\ttmpConvertedValue.setPath(rawVal);\n\t\t\treturn tmpConvertedValue;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t// protected override async processComputation() {\n\t// \tthis.findTarget();\n\t// }\n\tprotected _findTarget() {\n\t\tif (!this.node) {\n\t\t\treturn;\n\t\t}\n\t\tconst path = this._value.path();\n\t\tlet param: BaseParamType | null = null;\n\t\tconst pathNonEmpty = path != null && path !== '';\n\n\t\tthis.scene().referencesController.resetReferenceFromParam(this); // must be before decomposed path is changed\n\t\tthis.decomposedPath.reset();\n\t\tif (pathNonEmpty) {\n\t\t\tparam = CoreWalker.findParam(this.node, path, this.decomposedPath);\n\t\t}\n\n\t\tconst currentFoundEntity = this._value.param();\n\t\tconst newlyFoundEntity = param;\n\n\t\t// if the param refers to itself, we set an error\n\t\tif (newlyFoundEntity) {\n\t\t\tif (newlyFoundEntity.graphNodeId() == this.graphNodeId()) {\n\t\t\t\tthis.states.error.set(`param cannot refer to itself`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleReferences(param, path);\n\n\t\tif (currentFoundEntity?.graphNodeId() !== newlyFoundEntity?.graphNodeId()) {\n\t\t\tconst dependentOnFoundParam = this.options.dependentOnFoundParam();\n\n\t\t\tconst previouslyFoundParam = this._value.param();\n\t\t\tif (previouslyFoundParam) {\n\t\t\t\tif (dependentOnFoundParam) {\n\t\t\t\t\tthis.removeGraphInput(previouslyFoundParam);\n\t\t\t\t} else {\n\t\t\t\t\t// this._found_node.remove_param_referree(this) // TODO: typescript\n\t\t\t\t}\n\t\t\t\tpreviouslyFoundParam.deregisterOnDispose(this._onResolvedParamDisposeBound);\n\t\t\t}\n\n\t\t\tif (param) {\n\t\t\t\tthis._assignFoundParam(param);\n\t\t\t} else {\n\t\t\t\tthis._value.setParam(null);\n\t\t\t}\n\n\t\t\tthis.options.executeCallback();\n\t\t}\n\t\tthis.removeDirtyState();\n\t}\n\n\tprivate _assignFoundParam(param: BaseParamType) {\n\t\tconst dependentOnFoundParam = this.options.dependentOnFoundParam();\n\t\t// if (this._is_node_expected_context(node)) {\n\t\t// \tif (this._is_node_expected_type(node)) {\n\t\tthis._value.setParam(param);\n\t\tif (dependentOnFoundParam) {\n\t\t\tthis.addGraphInput(param);\n\t\t}\n\t\tparam.onDispose(this._onResolvedParamDisposeBound);\n\t\t// \t} else {\n\t\t// \t\tthis.states.error.set(\n\t\t// \t\t\t`node type is ${node.type} but the params expects one of ${(this._expected_node_types() || []).join(\n\t\t// \t\t\t\t', '\n\t\t// \t\t\t)}`\n\t\t// \t\t);\n\t\t// \t}\n\t\t// } else {\n\t\t// \tthis.states.error.set(\n\t\t// \t\t`node context is ${node.node_context()} but the params expects a ${this._expected_context()}`\n\t\t// \t);\n\t\t// }\n\t}\n\n\t// private _expected_context() {\n\t// \treturn this.options.node_selection_context;\n\t// }\n\t// private _is_node_expected_context(node: BaseNodeType) {\n\t// \tconst expected_context = this._expected_context();\n\t// \tif (expected_context == null) {\n\t// \t\treturn true;\n\t// \t}\n\t// \tconst node_context = node.parent?.childrenController?.context;\n\t// \treturn expected_context == node_context;\n\t// }\n\t// private _expected_node_types() {\n\t// \treturn this.options.node_selection_types;\n\t// }\n\n\t// private _is_node_expected_type(node: BaseNodeType) {\n\t// \tconst expected_types = this._expected_node_types();\n\t// \tif (expected_types == null) {\n\t// \t\treturn true;\n\t// \t}\n\t// \treturn expected_types?.includes(node.type);\n\t// }\n\n\tnotifyPathRebuildRequired(param: BaseParamType) {\n\t\tthis.decomposedPath.updateFromNameChange(param);\n\t\tconst new_path = this.decomposedPath.toPath();\n\t\tthis.set(new_path);\n\t}\n\tnotifyTargetParamOwnerParamsUpdated(node: BaseNodeType) {\n\t\tthis.setDirty();\n\t}\n\tprivate _onResolvedParamDisposeBound = this._onResolvedParamDispose.bind(this);\n\tprivate async _onResolvedParamDispose() {\n\t\tthis.setDirty();\n\t\tawait this.compute();\n\t}\n}\n","import {CubicInterpolant} from 'three';\nimport {MathUtils} from 'three';\nimport {arraySortBy} from '../../../core/ArrayUtils';\n\nexport interface RampPointJson {\n\tposition: number;\n\tvalue: number;\n}\nexport interface RampValueJson {\n\tpoints: RampPointJson[];\n\tinterpolation: RampInterpolation;\n}\n\nexport class RampPoint {\n\tconstructor(private _position: number = 0, private _value: number = 0) {}\n\n\ttoJSON(): RampPointJson {\n\t\treturn {\n\t\t\tposition: this._position,\n\t\t\tvalue: this._value,\n\t\t};\n\t}\n\tposition() {\n\t\treturn this._position;\n\t}\n\tvalue() {\n\t\treturn this._value;\n\t}\n\tcopy(point: RampPoint) {\n\t\tthis._position = point.position();\n\t\tthis._value = point.value();\n\t}\n\tclone() {\n\t\tconst point = new RampPoint();\n\t\tpoint.copy(this);\n\t\treturn point;\n\t}\n\tisEqual(other_point: RampPoint) {\n\t\treturn this._position == other_point.position() && this._value == other_point.value();\n\t}\n\tisEqualJSON(json: RampPointJson) {\n\t\treturn this._position == json.position && this._value == json.value;\n\t}\n\tfromJSON(json: RampPointJson) {\n\t\tthis._position = json.position;\n\t\tthis._value = json.value;\n\t}\n\tstatic areEqualJSON(json1: RampPointJson, json2: RampPointJson) {\n\t\treturn json1.position == json2.position && json1.value == json2.value;\n\t}\n\tstatic fromJSON(json: RampPointJson) {\n\t\treturn new RampPoint(json.position, json.value);\n\t}\n}\n\nexport enum RampInterpolation {\n\tCUBIC = 'cubic',\n}\nexport const RAMP_INTERPOLATIONS: RampInterpolation[] = [RampInterpolation.CUBIC];\nexport class RampValue {\n\tprivate _uuid: string;\n\n\tconstructor(\n\t\tprivate _interpolation: RampInterpolation = RampInterpolation.CUBIC,\n\t\tprivate _points: RampPoint[] = []\n\t) {\n\t\tthis._uuid = MathUtils.generateUUID();\n\t}\n\n\tuuid() {\n\t\treturn this._uuid;\n\t}\n\tinterpolation() {\n\t\treturn this._interpolation;\n\t}\n\tpoints() {\n\t\treturn this._points;\n\t}\n\tstatic createInterpolantFromValues(positions: Float32Array, values: Float32Array) {\n\t\tconst valuesCount = 1;\n\t\tconst interpolatedValues = new Float32Array(valuesCount);\n\t\treturn new CubicInterpolant(positions, values, valuesCount, interpolatedValues);\n\t}\n\tcreateInterpolant() {\n\t\treturn RampValue.createInterpolant(this);\n\t}\n\tstatic createInterpolant(rampValue: RampValue) {\n\t\tconst points = rampValue.points();\n\t\tconst sortedPoints = arraySortBy(points, (point) => point.position());\n\t\tconst positions = new Float32Array(sortedPoints.length);\n\t\tconst values = new Float32Array(sortedPoints.length);\n\n\t\tlet i = 0;\n\t\tfor (const sortedPoint of sortedPoints) {\n\t\t\tpositions[i] = sortedPoint.position();\n\t\t\tvalues[i] = sortedPoint.value();\n\t\t\ti++;\n\t\t}\n\n\t\treturn this.createInterpolantFromValues(positions, values);\n\t}\n\n\tstatic fromJSON(json: RampValueJson): RampValue {\n\t\tconst points = [];\n\t\tfor (const jsonPoint of json.points) {\n\t\t\tpoints.push(RampPoint.fromJSON(jsonPoint));\n\t\t}\n\t\tlet interpolation = json.interpolation;\n\t\tif (interpolation == null || (interpolation as string) == '') {\n\t\t\tinterpolation = RampInterpolation.CUBIC;\n\t\t}\n\t\treturn new RampValue(interpolation, points);\n\t}\n\ttoJSON(): RampValueJson {\n\t\treturn {\n\t\t\tinterpolation: this._interpolation,\n\t\t\tpoints: this._points.map((p) => p.toJSON()),\n\t\t};\n\t}\n\tclone(): RampValue {\n\t\tconst ramp = new RampValue();\n\t\tramp.copy(this);\n\t\treturn ramp;\n\t}\n\tcopy(ramp: RampValue) {\n\t\tthis._interpolation = ramp.interpolation();\n\t\tconst newPointsCount = ramp.points().length;\n\t\tconst currentPointsCount = this._points.length;\n\t\tif (currentPointsCount > newPointsCount) {\n\t\t\tconst pointsCountToRemove = currentPointsCount - newPointsCount;\n\t\t\tconst spliceStart = currentPointsCount - pointsCountToRemove;\n\t\t\tthis._points.splice(spliceStart, pointsCountToRemove);\n\t\t}\n\n\t\tlet index = 0;\n\t\tfor (const point of ramp.points()) {\n\t\t\tconst currentPoint = this._points[index];\n\t\t\tif (currentPoint) {\n\t\t\t\tcurrentPoint.copy(point);\n\t\t\t} else {\n\t\t\t\tthis._points.push(point.clone());\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t}\n\n\tisEqual(other_ramp_value: RampValue): boolean {\n\t\tif (this._interpolation != other_ramp_value.interpolation()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst other_points = other_ramp_value.points();\n\t\tif (this._points.length != other_points.length) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (const point of this._points) {\n\t\t\tconst other_point = other_points[index];\n\t\t\tif (!point.isEqual(other_point)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\n\t\treturn true;\n\t}\n\tisEqualJSON(json: RampValueJson) {\n\t\tif (this._interpolation != json.interpolation) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._points.length != json.points.length) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (const point of this._points) {\n\t\t\tconst other_point = json.points[index];\n\t\t\tif (!point.isEqualJSON(other_point)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t\treturn true;\n\t}\n\tstatic are_json_equal(json1: RampValueJson, json2: RampValueJson) {\n\t\tif (json1.interpolation != json2.interpolation) {\n\t\t\treturn false;\n\t\t}\n\t\tif (json1.points.length != json2.points.length) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (const point1 of json1.points) {\n\t\t\tconst point2 = json2.points[index];\n\t\t\tif (!RampPoint.areEqualJSON(point1, point2)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t\treturn true;\n\t}\n\tfromJSON(json: RampValueJson) {\n\t\tthis._interpolation = json.interpolation;\n\n\t\tconst newPointsCount = json.points.length;\n\t\tconst currentPointsCount = this._points.length;\n\t\tif (currentPointsCount > newPointsCount) {\n\t\t\tconst pointsCountToRemove = currentPointsCount - newPointsCount;\n\t\t\tconst spliceStart = currentPointsCount - pointsCountToRemove;\n\t\t\tthis._points.splice(spliceStart, pointsCountToRemove);\n\t\t}\n\n\t\tlet index = 0;\n\t\tfor (const json_point of json.points) {\n\t\t\tconst currentPoint = this._points[index];\n\t\t\tif (currentPoint) {\n\t\t\t\tcurrentPoint.fromJSON(json_point);\n\t\t\t} else {\n\t\t\t\tthis._points.push(RampPoint.fromJSON(json_point));\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t}\n}\n","import {RGBAFormat, FloatType} from 'three';\nimport {DataTexture} from 'three';\nimport {CubicInterpolant} from 'three';\nimport {TypedParam} from './_Base';\nimport {RampValue, RampPoint, RampValueJson, RampInterpolation} from './ramp/RampValue';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamEvent} from '../poly/ParamEvent';\n\nconst STRIDE = 4;\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1;\nconst TEXTURE_SIZE = TEXTURE_WIDTH * TEXTURE_HEIGHT;\nconst TEXTURE_BYTES_MULT = 1;\n\nexport class RampParam extends TypedParam<ParamType.RAMP> {\n\tstatic override type() {\n\t\treturn ParamType.RAMP;\n\t}\n\n\tprivate _rampInterpolant: CubicInterpolant | undefined;\n\tprivate _textureData = new Float32Array(STRIDE * TEXTURE_SIZE);\n\tprivate _rampTexture = new DataTexture(this._textureData, TEXTURE_WIDTH, TEXTURE_HEIGHT, RGBAFormat, FloatType);\n\n\tstatic DEFAULT_VALUE = new RampValue(RampInterpolation.CUBIC, [new RampPoint(0, 0), new RampPoint(1, 1)]);\n\tstatic DEFAULT_VALUE_JSON: RampValueJson = RampParam.DEFAULT_VALUE.toJSON();\n\n\toverride defaultValueSerialized() {\n\t\tif (this._default_value instanceof RampValue) {\n\t\t\treturn this._default_value.toJSON();\n\t\t} else {\n\t\t\treturn this._default_value;\n\t\t}\n\t}\n\tprotected override _cloneRawInput(raw_input: ParamInitValuesTypeMap[ParamType.RAMP]) {\n\t\tif (raw_input instanceof RampValue) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\treturn RampValue.fromJSON(raw_input).toJSON();\n\t\t}\n\t}\n\toverride rawInputSerialized() {\n\t\tif (this._raw_input instanceof RampValue) {\n\t\t\treturn this._raw_input.toJSON();\n\t\t} else {\n\t\t\treturn RampValue.fromJSON(this._raw_input).toJSON();\n\t\t}\n\t}\n\toverride valueSerialized() {\n\t\treturn this.value.toJSON();\n\t}\n\tprotected override _copyValue(param: RampParam) {\n\t\tthis.set(param.valueSerialized());\n\t}\n\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.RAMP],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.RAMP]\n\t) {\n\t\tif (raw_input1 instanceof RampValue) {\n\t\t\tif (raw_input2 instanceof RampValue) {\n\t\t\t\treturn raw_input1.isEqual(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn raw_input1.isEqualJSON(raw_input2);\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof RampValue) {\n\t\t\t\treturn raw_input2.isEqualJSON(raw_input1);\n\t\t\t} else {\n\t\t\t\treturn RampValue.are_json_equal(raw_input1, raw_input2);\n\t\t\t}\n\t\t}\n\t}\n\tstatic override areValuesEqual(val1: ParamValuesTypeMap[ParamType.RAMP], val2: ParamValuesTypeMap[ParamType.RAMP]) {\n\t\treturn val1.isEqual(val2);\n\t}\n\t// initialize_param() {\n\t// \tthis.addPostDirtyHook(\n\t// \t\t'_reset_ramp_interpolant_and_texture',\n\t// \t\tthis.reset_ramp_interpolant.bind(this)\n\t// \t);\n\t// }\n\t// accepts_visitor(visitor: RampParamVisitor) {\n\t// \treturn visitor.visit_ramp_param(this);\n\t// }\n\toverride isDefault(): boolean {\n\t\tif (this._default_value instanceof RampValue) {\n\t\t\treturn this.value.isEqual(this._default_value);\n\t\t} else {\n\t\t\treturn this.value.isEqualJSON(this._default_value);\n\t\t}\n\t}\n\tprotected override processRawInput() {\n\t\tif (this._raw_input instanceof RampValue) {\n\t\t\tif (!this._value) {\n\t\t\t\tthis._value = this._raw_input;\n\t\t\t} else {\n\t\t\t\tthis._value.copy(this._raw_input);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._value) {\n\t\t\t\tthis._value = RampValue.fromJSON(this._raw_input);\n\t\t\t} else {\n\t\t\t\tthis._value.fromJSON(this._raw_input);\n\t\t\t}\n\t\t}\n\n\t\tthis._resetRampInterpolant();\n\t\tthis._updateRampTexture();\n\t\tthis.options.executeCallback();\n\t\tthis.emitController.emit(ParamEvent.VALUE_UPDATED);\n\t\tthis.setSuccessorsDirty(this);\n\t}\n\n\t// convert_value(v) {\n\t// \tlet is_json = false\n\n\t// \tif (CoreType.isString(v)) {\n\t// \t\tv = JSON.parse(v)\n\t// \t\tis_json = true\n\t// \t}\n\n\t// \tif (!is_json) {\n\t// \t\tif (v.interpolation && v.points) {\n\t// \t\t\tif (CoreType.isArray(v.points)) {\n\t// \t\t\t\tis_json = true\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \tif (is_json) {\n\t// \t\tv = RampValue.from_json(v)\n\t// \t}\n\n\t// \treturn v\n\t// }\n\t// convert_default_value(v) {\n\t// \treturn this.convert_value(v)\n\t// }\n\n\toverride hasExpression() {\n\t\treturn false;\n\t}\n\n\tprivate _resetRampInterpolant() {\n\t\tthis._rampInterpolant = undefined;\n\t\t// this._ramp_texture = undefined;\n\t}\n\trampTexture() {\n\t\treturn this._rampTexture;\n\t}\n\tprivate _updateRampTexture() {\n\t\tthis._updateRampTextureData();\n\t\tthis.rampTexture().needsUpdate = true;\n\t}\n\tprivate _updateRampTextureData() {\n\t\tlet stride = 0;\n\t\tlet position = 0;\n\t\tlet value = 0;\n\t\t// we set the bounds at [-1:2]\n\t\t// so that we can have the ramp go 1 unit below and above the range [0:1]\n\t\t// so -1 becomes R=0, G=0, B=0\n\t\t// so -0.5 becomes R=0.5, G=0, B=0\n\t\t// so 0 becomes R=1, G=0, B=0\n\t\t// so 0.5 becomes R=1, G=0.5, B=0\n\t\t// so 1 becomes R=1, G=1, B=0\n\t\t// so 1.5 becomes R=1, G=1, B=0.5\n\t\t// so 2 becomes R=1, G=1, B=1\n\t\tfor (var i = 0; i < TEXTURE_SIZE; i++) {\n\t\t\tstride = i * STRIDE;\n\t\t\tposition = i / TEXTURE_WIDTH;\n\t\t\tvalue = this.valueAtPosition(position);\n\t\t\tthis._textureData[stride + 0] = value * TEXTURE_BYTES_MULT;\n\t\t\tthis._textureData[stride + 1] = 0;\n\t\t\tthis._textureData[stride + 2] = 0;\n\t\t\t// if (value <= 0) {\n\t\t\t// \t// if I set 256, a value of 1 will become 0\n\t\t\t// \tthis._textureData[stride + 0] = (clamp(value, -1, 0) + 1) * TEXTURE_BYTES_MULT;\n\t\t\t// \tthis._textureData[stride + 1] = 0;\n\t\t\t// \tthis._textureData[stride + 2] = 0;\n\t\t\t// } else {\n\t\t\t// \tif (value <= 1) {\n\t\t\t// \t\tthis._textureData[stride + 0] = TEXTURE_BYTES_MULT;\n\t\t\t// \t\tthis._textureData[stride + 1] = clamp(value, 0, 1) * TEXTURE_BYTES_MULT;\n\t\t\t// \t\tthis._textureData[stride + 2] = 0;\n\t\t\t// \t} else {\n\t\t\t// \t\tthis._textureData[stride + 0] = TEXTURE_BYTES_MULT;\n\t\t\t// \t\tthis._textureData[stride + 1] = TEXTURE_BYTES_MULT;\n\t\t\t// \t\tthis._textureData[stride + 2] = (clamp(value, 1, 2) - 1) * TEXTURE_BYTES_MULT;\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\t}\n\n\tinterpolant() {\n\t\treturn (this._rampInterpolant = this._rampInterpolant || this._createInterpolant());\n\t}\n\tprivate _createInterpolant() {\n\t\treturn this.value.createInterpolant();\n\t}\n\n\tvalueAtPosition(position: number): number {\n\t\treturn (<unknown>this.interpolant().evaluate(position)[0]) as number;\n\t}\n}\n","import {ParamEvent} from './../poly/ParamEvent';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {CoreType} from '../../core/Type';\nimport {TypedStringParam} from './_BaseString';\n\nexport class StringParam extends TypedStringParam<ParamType.STRING> {\n\tstatic override type() {\n\t\treturn ParamType.STRING;\n\t}\n\toverride defaultValueSerialized() {\n\t\treturn this._default_value;\n\t}\n\tprotected override _cloneRawInput(raw_input: ParamInitValuesTypeMap[ParamType.STRING]) {\n\t\treturn `${raw_input}`;\n\t}\n\toverride rawInputSerialized() {\n\t\treturn `${this._raw_input}`;\n\t}\n\toverride valueSerialized() {\n\t\treturn `${this.value}`;\n\t}\n\tprotected override _copyValue(param: StringParam) {\n\t\tthis.set(param.value);\n\t}\n\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.STRING],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.STRING]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.STRING],\n\t\tval2: ParamValuesTypeMap[ParamType.STRING]\n\t) {\n\t\treturn val1 == val2;\n\t}\n\toverride isDefault(): boolean {\n\t\treturn this._raw_input == this._default_value;\n\t}\n\n\toverride convert(rawVal: any): string {\n\t\tif (CoreType.isString(rawVal)) {\n\t\t\treturn rawVal;\n\t\t}\n\t\treturn `${rawVal}`;\n\t}\n\n\toverride rawInput() {\n\t\treturn this._raw_input;\n\t}\n\tprotected _assignValue(value: string): void {\n\t\tthis._value = value;\n\t}\n\tprotected async processRawInputWithoutExpression() {\n\t\tconst wasErrored = this.states.error.active();\n\t\tif (this._raw_input != this._value || this._expression_controller || wasErrored) {\n\t\t\tthis._assignValue(this._raw_input);\n\t\t\tthis.states.error.clear();\n\t\t\tthis.removeDirtyState();\n\t\t\tthis.setSuccessorsDirty(this);\n\t\t\tthis.emitController.emit(ParamEvent.VALUE_UPDATED);\n\t\t\tthis.options.executeCallback();\n\t\t\tif (this._expression_controller) {\n\t\t\t\tthis._expression_controller.setExpression(undefined, false);\n\t\t\t\tthis._expression_controller = undefined;\n\t\t\t\tthis.emitController.emit(ParamEvent.EXPRESSION_UPDATED); // ensure expression is considered removed\n\t\t\t}\n\t\t}\n\t}\n}\n","import {TypedMultipleParam} from './_Multiple';\nimport {Number2, StringOrNumber2} from '../../types/GlobalTypes';\nimport {Vector2} from 'three';\nimport {ParamType} from '../poly/ParamType';\nimport {FloatParam} from './Float';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {CoreType} from '../../core/Type';\n\nconst COMPONENT_NAMES_VECTOR2: Readonly<string[]> = ['x', 'y'];\nconst tmp: Number2 = [0, 0];\n\nfunction vector2EqualsStringNumber2(v: Vector2, array: StringOrNumber2): boolean {\n\treturn v.x == array[0] && v.y == array[1];\n}\nfunction stringNumber2Equals(array1: StringOrNumber2, array2: StringOrNumber2): boolean {\n\treturn array1[0] == array2[0] && array1[1] == array2[1];\n}\n\nexport class Vector2Param extends TypedMultipleParam<ParamType.VECTOR2> {\n\tprotected override _value = new Vector2();\n\tx!: FloatParam;\n\ty!: FloatParam;\n\tstatic override type() {\n\t\treturn ParamType.VECTOR2;\n\t}\n\n\toverride componentNames(): Readonly<string[]> {\n\t\treturn COMPONENT_NAMES_VECTOR2;\n\t}\n\toverride defaultValueSerialized() {\n\t\tif (CoreType.isArray(this._default_value)) {\n\t\t\treturn this._default_value;\n\t\t} else {\n\t\t\treturn this._default_value.toArray() as Number2;\n\t\t}\n\t}\n\toverride _prefilterInvalidRawInput(rawInput: any) {\n\t\tif (rawInput instanceof Vector2) {\n\t\t\trawInput.toArray(tmp);\n\t\t\treturn tmp;\n\t\t}\n\t\treturn super._prefilterInvalidRawInput(rawInput);\n\t}\n\t// get raw_input_serialized() {\n\t// \tif (this._raw_input instanceof Vector2) {\n\t// \t\treturn this._raw_input.toArray() as Number2;\n\t// \t} else {\n\t// \t\tconst new_array: StringOrNumber2 = [this._raw_input[0], this._raw_input[1]];\n\t// \t\treturn new_array;\n\t// \t}\n\t// }\n\toverride valueSerialized() {\n\t\treturn this.value.toArray() as Number2;\n\t}\n\tprivate _copied_value: Number2 = [0, 0];\n\tprotected override _copyValue(param: Vector2Param) {\n\t\tparam.value.toArray(this._copied_value);\n\t\tthis.set(this._copied_value);\n\t}\n\n\tprotected override _cloneRawInput(raw_input: ParamInitValuesTypeMap[ParamType.VECTOR2]) {\n\t\tif (raw_input instanceof Vector2) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\tconst new_array: StringOrNumber2 = [raw_input[0], raw_input[1]];\n\t\t\t// in case array elements are undefined\n\t\t\tif (new_array[0] == null) {\n\t\t\t\tnew_array[0] = new_array[0] || 0;\n\t\t\t}\n\t\t\tif (new_array[1] == null) {\n\t\t\t\tnew_array[1] = new_array[1] || new_array[0];\n\t\t\t}\n\t\t\treturn new_array;\n\t\t}\n\t}\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.VECTOR2],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.VECTOR2]\n\t) {\n\t\tif (raw_input1 instanceof Vector2) {\n\t\t\tif (raw_input2 instanceof Vector2) {\n\t\t\t\treturn raw_input1.equals(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn vector2EqualsStringNumber2(raw_input1, raw_input2);\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof Vector2) {\n\t\t\t\treturn vector2EqualsStringNumber2(raw_input2, raw_input1);\n\t\t\t} else {\n\t\t\t\treturn stringNumber2Equals(raw_input1, raw_input2);\n\t\t\t}\n\t\t}\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.VECTOR2],\n\t\tval2: ParamValuesTypeMap[ParamType.VECTOR2]\n\t) {\n\t\treturn val1.equals(val2);\n\t}\n\toverride initComponents() {\n\t\tsuper.initComponents();\n\t\tthis.x = this.components[0];\n\t\tthis.y = this.components[1];\n\t}\n\n\toverride setValueFromComponents() {\n\t\tthis._value.x = this.x.value;\n\t\tthis._value.y = this.y.value;\n\t}\n\t// convert(input: any) {\n\t// \tif (CoreType.isArray(input)) {\n\t// \t\treturn new Vector2().fromArray(input);\n\t// \t}\n\t// \treturn new Vector2();\n\t// }\n}\n","import {Number3, StringOrNumber3} from '../../types/GlobalTypes';\nimport {TypedMultipleParam} from './_Multiple';\nimport {FloatParam} from './Float';\nimport {Vector3} from 'three';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {CoreType} from '../../core/Type';\n\nconst COMPONENT_NAMES_VECTOR3: Readonly<string[]> = ['x', 'y', 'z'];\nconst tmp: Number3 = [0, 0, 0];\n\nfunction vector3EqualsStringNumber3(v: Vector3, array: StringOrNumber3): boolean {\n\treturn v.x == array[0] && v.y == array[1] && v.z == array[2];\n}\nfunction stringNumber3Equals(array1: StringOrNumber3, array2: StringOrNumber3): boolean {\n\treturn array1[0] == array2[0] && array1[1] == array2[1] && array1[2] == array2[2];\n}\n\nexport class Vector3Param extends TypedMultipleParam<ParamType.VECTOR3> {\n\tprotected override _value = new Vector3();\n\tx!: FloatParam;\n\ty!: FloatParam;\n\tz!: FloatParam;\n\tstatic override type() {\n\t\treturn ParamType.VECTOR3;\n\t}\n\toverride componentNames(): Readonly<string[]> {\n\t\treturn COMPONENT_NAMES_VECTOR3;\n\t}\n\toverride defaultValueSerialized() {\n\t\tif (CoreType.isArray(this._default_value)) {\n\t\t\treturn this._default_value;\n\t\t} else {\n\t\t\treturn this._default_value.toArray() as Number3;\n\t\t}\n\t}\n\toverride _prefilterInvalidRawInput(rawInput: any) {\n\t\tif (rawInput instanceof Vector3) {\n\t\t\trawInput.toArray(tmp);\n\t\t\treturn tmp;\n\t\t}\n\t\treturn super._prefilterInvalidRawInput(rawInput);\n\t}\n\t// get raw_input_serialized() {\n\t// \tif (this._raw_input instanceof Vector3) {\n\t// \t\treturn this._raw_input.toArray() as Number3;\n\t// \t} else {\n\t// \t\tconst new_array: StringOrNumber3 = [this._raw_input[0], this._raw_input[1], this._raw_input[2]];\n\t// \t\treturn new_array;\n\t// \t}\n\t// }\n\toverride valueSerialized() {\n\t\treturn this.value.toArray() as Number3;\n\t}\n\tprivate _copied_value: Number3 = [0, 0, 0];\n\tprotected override _copyValue(param: Vector3Param) {\n\t\tparam.value.toArray(this._copied_value);\n\t\tthis.set(this._copied_value);\n\t}\n\n\tprotected override _cloneRawInput(raw_input: ParamInitValuesTypeMap[ParamType.VECTOR3]) {\n\t\tif (raw_input instanceof Vector3) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\tconst new_array: StringOrNumber3 = [raw_input[0], raw_input[1], raw_input[2]];\n\t\t\t// in case array elements are undefined\n\t\t\tif (new_array[0] == null) {\n\t\t\t\tnew_array[0] = new_array[0] || 0;\n\t\t\t}\n\t\t\tif (new_array[1] == null) {\n\t\t\t\tnew_array[1] = new_array[1] || new_array[0];\n\t\t\t}\n\t\t\tif (new_array[2] == null) {\n\t\t\t\tnew_array[2] = new_array[2] || new_array[1];\n\t\t\t}\n\t\t\treturn new_array;\n\t\t}\n\t}\n\n\tstatic override areRawInputEqual(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.VECTOR3],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.VECTOR3]\n\t) {\n\t\tif (raw_input1 instanceof Vector3) {\n\t\t\tif (raw_input2 instanceof Vector3) {\n\t\t\t\treturn raw_input1.equals(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn vector3EqualsStringNumber3(raw_input1, raw_input2);\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof Vector3) {\n\t\t\t\treturn vector3EqualsStringNumber3(raw_input2, raw_input1);\n\t\t\t} else {\n\t\t\t\treturn stringNumber3Equals(raw_input1, raw_input2);\n\t\t\t}\n\t\t}\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.VECTOR3],\n\t\tval2: ParamValuesTypeMap[ParamType.VECTOR3]\n\t) {\n\t\treturn val1.equals(val2);\n\t}\n\toverride initComponents() {\n\t\tsuper.initComponents();\n\t\tthis.x = this.components[0];\n\t\tthis.y = this.components[1];\n\t\tthis.z = this.components[2];\n\t}\n\n\t// set_raw_input_from_components() {\n\t// \tif (this._raw_input instanceof Vector3) {\n\t// \t\tif (\n\t// \t\t\tCoreType.isNumber(this.x.raw_input) &&\n\t// \t\t\tCoreType.isNumber(this.y.raw_input) &&\n\t// \t\t\tCoreType.isNumber(this.z.raw_input)\n\t// \t\t) {\n\t// \t\t\tthis._raw_input.x = this.x.raw_input;\n\t// \t\t\tthis._raw_input.y = this.y.raw_input;\n\t// \t\t\tthis._raw_input.z = this.z.raw_input;\n\t// \t\t} else {\n\t// \t\t\tthis._raw_input = [this.x.raw_input, this.y.raw_input, this.z.raw_input];\n\t// \t\t}\n\t// \t} else {\n\t// \t\tthis._raw_input[0] = this.x.raw_input;\n\t// \t\tthis._raw_input[1] = this.y.raw_input;\n\t// \t\tthis._raw_input[2] = this.z.raw_input;\n\t// \t}\n\t// }\n\toverride setValueFromComponents() {\n\t\tthis._value.x = this.x.value;\n\t\tthis._value.y = this.y.value;\n\t\tthis._value.z = this.z.value;\n\t}\n\t// convert(input: ParamInitValuesTypeMap[ParamType.VECTOR3]) {\n\t// \tif (CoreType.isArray(input)) {\n\t// \t\treturn new Vector3().fromArray(input);\n\t// \t}\n\t// \treturn new Vector3();\n\t// }\n}\n","import {Number4, StringOrNumber4} from '../../types/GlobalTypes';\nimport {TypedMultipleParam} from './_Multiple';\nimport {Vector4} from 'three';\nimport {ParamType} from '../poly/ParamType';\nimport {FloatParam} from './Float';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {CoreType} from '../../core/Type';\n\nconst COMPONENT_NAMES_VECTOR4: Readonly<string[]> = ['x', 'y', 'z', 'w'];\nconst tmp: Number4 = [0, 0, 0, 0];\n\nfunction vector2EqualsStringNumber4(v: Vector4, array: StringOrNumber4): boolean {\n\treturn v.x == array[0] && v.y == array[1] && v.z == array[2] && v.w == array[3];\n}\nfunction stringNumber4Equals(array1: StringOrNumber4, array2: StringOrNumber4): boolean {\n\treturn array1[0] == array2[0] && array1[1] == array2[1] && array1[2] == array2[2] && array1[3] == array2[3];\n}\n\nexport class Vector4Param extends TypedMultipleParam<ParamType.VECTOR4> {\n\tprotected override _value = new Vector4();\n\tx!: FloatParam;\n\ty!: FloatParam;\n\tz!: FloatParam;\n\tw!: FloatParam;\n\tstatic override type() {\n\t\treturn ParamType.VECTOR4;\n\t}\n\toverride componentNames(): Readonly<string[]> {\n\t\treturn COMPONENT_NAMES_VECTOR4;\n\t}\n\toverride defaultValueSerialized() {\n\t\tif (CoreType.isArray(this._default_value)) {\n\t\t\treturn this._default_value;\n\t\t} else {\n\t\t\treturn this._default_value.toArray() as Number4;\n\t\t}\n\t}\n\toverride _prefilterInvalidRawInput(rawInput: any) {\n\t\tif (rawInput instanceof Vector4) {\n\t\t\trawInput.toArray(tmp);\n\t\t\treturn tmp;\n\t\t}\n\t\treturn super._prefilterInvalidRawInput(rawInput);\n\t}\n\toverride valueSerialized() {\n\t\treturn this.value.toArray() as Number4;\n\t}\n\tprivate _copied_value: Number4 = [0, 0, 0, 0];\n\tprotected override _copyValue(param: Vector4Param) {\n\t\tparam.value.toArray(this._copied_value);\n\t\tthis.set(this._copied_value);\n\t}\n\tprotected override _cloneRawInput(rawInput: ParamInitValuesTypeMap[ParamType.VECTOR4]) {\n\t\tif (rawInput instanceof Vector4) {\n\t\t\treturn rawInput.clone();\n\t\t} else {\n\t\t\tconst newArray: StringOrNumber4 = [rawInput[0], rawInput[1], rawInput[2], rawInput[3]];\n\t\t\t// in case array elements are undefined\n\t\t\tif (newArray[0] == null) {\n\t\t\t\tnewArray[0] = newArray[0] || 0;\n\t\t\t}\n\t\t\tif (newArray[1] == null) {\n\t\t\t\tnewArray[1] = newArray[1] || newArray[0];\n\t\t\t}\n\t\t\tif (newArray[2] == null) {\n\t\t\t\tnewArray[2] = newArray[2] || newArray[1];\n\t\t\t}\n\t\t\tif (newArray[3] == null) {\n\t\t\t\tnewArray[3] = newArray[3] || newArray[2];\n\t\t\t}\n\t\t\treturn newArray;\n\t\t}\n\t}\n\tstatic override areRawInputEqual(\n\t\trawInput1: ParamInitValuesTypeMap[ParamType.VECTOR4],\n\t\trawInput2: ParamInitValuesTypeMap[ParamType.VECTOR4]\n\t) {\n\t\tif (rawInput1 instanceof Vector4) {\n\t\t\tif (rawInput2 instanceof Vector4) {\n\t\t\t\treturn rawInput1.equals(rawInput2);\n\t\t\t} else {\n\t\t\t\treturn vector2EqualsStringNumber4(rawInput1, rawInput2);\n\t\t\t}\n\t\t} else {\n\t\t\tif (rawInput2 instanceof Vector4) {\n\t\t\t\treturn vector2EqualsStringNumber4(rawInput2, rawInput1);\n\t\t\t} else {\n\t\t\t\treturn stringNumber4Equals(rawInput1, rawInput2);\n\t\t\t}\n\t\t}\n\t}\n\tstatic override areValuesEqual(\n\t\tval1: ParamValuesTypeMap[ParamType.VECTOR4],\n\t\tval2: ParamValuesTypeMap[ParamType.VECTOR4]\n\t) {\n\t\treturn val1.equals(val2);\n\t}\n\toverride initComponents() {\n\t\tsuper.initComponents();\n\t\tthis.x = this.components[0];\n\t\tthis.y = this.components[1];\n\t\tthis.z = this.components[2];\n\t\tthis.w = this.components[3];\n\t}\n\n\toverride setValueFromComponents() {\n\t\tthis._value.x = this.x.value;\n\t\tthis._value.y = this.y.value;\n\t\tthis._value.z = this.z.value;\n\t\tthis._value.w = this.w.value;\n\t}\n}\n","import {BaseParamType} from '../_Base';\nimport {ParamEvent} from '../../poly/ParamEvent';\n\nexport class EmitController {\n\t_blockedEmit: boolean = false;\n\t_blockedParentEmit: boolean = false;\n\t_countByEventName: Map<string, number> = new Map();\n\tconstructor(protected param: BaseParamType) {}\n\n\temitAllowed(): boolean {\n\t\tif (this._blockedEmit === true) {\n\t\t\treturn false;\n\t\t}\n\t\t// be careful as this seems to prevent camera from panning as expected\n\t\t// if (this.param.scene().timeController.playing()) {\n\t\t// \treturn false;\n\t\t// }\n\n\t\tif (this.param.scene().loadingController.isLoading()) {\n\t\t\treturn false;\n\t\t}\n\t\t// TODO: should I also prevent nodes from updating\n\t\t// when they are being called in a loop such as from the Copy SOP?\n\t\t//node = this.node()\n\t\t//node? && !node.is_cooking() && this.scene().emit_allowed() # this prevents a camera from updating its param for instance\n\t\t// although maybe I should send a dirty to the store, and then that store queries the param?\n\t\treturn this.param.scene().dispatchController.emitAllowed();\n\t}\n\n\tblockEmit() {\n\t\tthis._blockedEmit = true;\n\t\tif (this.param.isMultiple() && this.param.components) {\n\t\t\tfor (const component of this.param.components) {\n\t\t\t\tcomponent.emitController.blockEmit();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tunblockEmit() {\n\t\tthis._blockedEmit = false;\n\t\tif (this.param.isMultiple() && this.param.components) {\n\t\t\tfor (const component of this.param.components) {\n\t\t\t\tcomponent.emitController.unblockEmit();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tblockParentEmit() {\n\t\tthis._blockedParentEmit = true;\n\t\treturn true;\n\t}\n\tunblockParentEmit() {\n\t\tthis._blockedParentEmit = false;\n\t\treturn true;\n\t}\n\n\tincrementCount(eventName: ParamEvent) {\n\t\tconst count = (this._countByEventName.get(eventName) || 0) + 1;\n\t\tthis._countByEventName.set(eventName, count);\n\t}\n\teventsCount(eventName: ParamEvent): number {\n\t\treturn this._countByEventName.get(eventName) || 0;\n\t}\n\n\temit(event: ParamEvent) {\n\t\tif (this.emitAllowed()) {\n\t\t\tthis.param.emit(event);\n\n\t\t\tconst parentParam = this.param.parentParam();\n\t\t\tif (parentParam != null && this._blockedParentEmit !== true) {\n\t\t\t\tparentParam.emit(event);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseParamType} from '../../_Base';\n\nexport class ParamTimeDependentState {\n\tconstructor(protected param: BaseParamType) {}\n\n\tactive(): boolean {\n\t\tconst frameGraphNodeId = this.param.scene().timeController.graphNode.graphNodeId();\n\n\t\treturn this.param.graphPredecessorIds()?.includes(frameGraphNodeId) || false;\n\t}\n}\n","import {BaseParamType} from '../../_Base';\nimport {ParamEvent} from '../../../poly/ParamEvent';\nimport {Poly} from '../../../Poly';\n\nexport class ParamErrorState {\n\tprivate _message: string | undefined;\n\tconstructor(private param: BaseParamType) {}\n\n\tset(message: string | undefined) {\n\t\tif (this._message != message) {\n\t\t\tif (message) {\n\t\t\t\tPoly.error(`[${this.param.path()}] error: '${message}'`);\n\t\t\t} else {\n\t\t\t\tPoly.warn(`[${this.param.path()}] clear error`);\n\t\t\t}\n\t\t\tthis._message = message;\n\t\t\tthis.param.emitController.emit(ParamEvent.ERROR_UPDATED);\n\t\t}\n\t}\n\tmessage() {\n\t\treturn this._message;\n\t}\n\tclear() {\n\t\tthis.set(undefined);\n\t}\n\tactive(): boolean {\n\t\treturn this._message != null;\n\t}\n}\n","import {BaseParamType} from '../_Base';\n\nimport {ParamTimeDependentState} from './states/TimeDependent';\nimport {ParamErrorState} from './states/Error';\n\nexport class ParamStatesController {\n\ttimeDependent = new ParamTimeDependentState(this.param);\n\terror = new ParamErrorState(this.param);\n\tconstructor(protected param: BaseParamType) {}\n}\n","import {CoreWalker} from '../../core/Walker';\nimport {CoreGraphNode} from '../../core/graph/CoreGraphNode';\nimport {BaseNodeType} from '../nodes/_Base';\nimport {OptionsController} from './utils/OptionsController';\nimport {ExpressionController} from './utils/ExpressionController';\nimport {EmitController} from './utils/EmitController';\nimport {CoreParamSerializer} from './utils/CoreParamSerializer';\nimport {ParamStatesController} from './utils/StatesController';\nimport {TypedMultipleParam} from './_Multiple';\nimport {FloatParam} from './Float';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamEvent} from '../poly/ParamEvent';\nimport {PolyScene} from '../scene/PolyScene';\nimport {ParamInitValuesTypeMap} from '../params/types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from '../params/types/ParamValuesTypeMap';\nimport {\n\tParamValueSerializedTypeMap,\n\tParamValuePreConversionSerializedTypeMap,\n} from '../params/types/ParamValueSerializedTypeMap';\nimport {ParamInitValueSerializedTypeMap} from './types/ParamInitValueSerializedTypeMap';\nimport {MethodDependency} from '../expressions/MethodDependency';\nimport {Poly} from '../Poly';\nimport {arrayCopy} from '../../core/ArrayUtils';\n\ntype ComputeCallback = (value: void) => void;\nconst TYPED_PARAM_DEFAULT_COMPONENT_NAMES: Readonly<string[]> = [];\n\ntype OnDisposeCallback = () => void;\nexport interface ParamOptions<T extends ParamType> {\n\tserializerClass?: typeof CoreParamSerializer<T>;\n}\n\nexport abstract class TypedParam<T extends ParamType> extends CoreGraphNode {\n\tprotected _default_value!: ParamInitValuesTypeMap[T];\n\tprotected _raw_input!: ParamInitValuesTypeMap[T];\n\tprotected _value!: ParamValuesTypeMap[T];\n\tprotected _node: BaseNodeType | undefined;\n\tprotected _parent_param: TypedMultipleParam<any> | undefined;\n\tprotected _components: FloatParam[] | undefined;\n\tprotected _computeResolves: ComputeCallback[] | undefined;\n\n\tprivate _options: OptionsController = new OptionsController(this);\n\tget options(): OptionsController {\n\t\treturn (this._options = this._options || new OptionsController(this));\n\t}\n\tprivate _emitController: EmitController = new EmitController(this);\n\tget emitController(): EmitController {\n\t\treturn (this._emitController = this._emitController || new EmitController(this));\n\t}\n\tprotected _expression_controller: ExpressionController<T> | undefined;\n\tget expressionController(): ExpressionController<T> | undefined {\n\t\treturn this._expression_controller;\n\t}\n\texpressionParsedAsString() {\n\t\treturn false;\n\t}\n\tprotected _serializer: CoreParamSerializer<T> | undefined;\n\tget serializer(): CoreParamSerializer<T> | undefined {\n\t\treturn this._serializer;\n\t}\n\tprivate _states: ParamStatesController | undefined;\n\tget states(): ParamStatesController {\n\t\treturn (this._states = this._states || new ParamStatesController(this));\n\t}\n\t// private _ui_data: UIData | undefined;\n\t// get ui_data(): UIData {\n\t// \treturn (this._ui_data = this._ui_data || new UIData(this.scene, this));\n\t// }\n\n\tconstructor(scene: PolyScene, node: BaseNodeType, options: ParamOptions<T>) {\n\t\tsuper(scene, 'BaseParam');\n\t\tif (options.serializerClass) {\n\t\t\tthis._serializer = new options.serializerClass(this);\n\t\t}\n\t\tthis._node = node;\n\t\tthis._initializeParam();\n\t}\n\toverride dispose() {\n\t\tif (this.expressionController && this.hasExpression()) {\n\t\t\tthis.set(this.rawInputSerialized());\n\t\t}\n\t\tconst _tmpCoreGraphNodes: CoreGraphNode[] = [];\n\n\t\t// if any direct predecessor is a MethodDependency,\n\t\t// it must be disposed here\n\t\tconst predecessors = this.graphPredecessors();\n\t\tif (predecessors) {\n\t\t\tarrayCopy(predecessors, _tmpCoreGraphNodes);\n\t\t\tfor (const predecessor of _tmpCoreGraphNodes) {\n\t\t\t\tif (predecessor instanceof MethodDependency) {\n\t\t\t\t\tpredecessor.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst successors = this.graphSuccessors();\n\t\tif (successors) {\n\t\t\tarrayCopy(successors, _tmpCoreGraphNodes);\n\t\t\tfor (const successor of _tmpCoreGraphNodes) {\n\t\t\t\tif (successor instanceof TypedParam) {\n\t\t\t\t\tconst input = successor.rawInputSerialized();\n\t\t\t\t\tsuccessor.set(successor.defaultValue());\n\t\t\t\t\tsuccessor.set(input);\n\t\t\t\t} else {\n\t\t\t\t\tsuccessor.setDirty();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.scene().missingExpressionReferencesController.deregisterParam(this);\n\t\tthis._expression_controller?.dispose();\n\t\tsuper.dispose();\n\t\tthis._options?.dispose();\n\t\tthis._node = undefined;\n\t\tthis._parent_param = undefined;\n\t\tthis._runOnDisposeCallbacks();\n\t}\n\tprotected _initializeParam() {}\n\tpostOptionsInitialize() {}\n\t// \t// this.addPostDirtyHook(this._remove_node_param_cache.bind(this))\n\t// }\n\t// initialize() {\n\t// \tthis.initComponents();\n\t// \t// this.init_expression()\n\t// \t// this._init_ui_data()\n\t// }\n\t// accepts_visitor<T extends ParamVisitor>(visitor: T): ReturnType<T['visit_param']> {\n\t// \treturn visitor.visit_param(this);\n\t// }\n\n\t//\n\t// init_expression() {}\n\n\t// type\n\tstatic type(): ParamType {\n\t\treturn ParamType.FLOAT; // adding a type here, but just to not have a compile error\n\t}\n\ttype(): T {\n\t\treturn (this.constructor as typeof BaseParamClass).type() as T;\n\t}\n\tisNumeric(): boolean {\n\t\treturn false;\n\t}\n\n\t// name\n\toverride setName(name: string) {\n\t\tsuper.setName(name);\n\t}\n\n\tget value(): ParamValuesTypeMap[T] {\n\t\treturn this._value;\n\t}\n\tabstract defaultValueSerialized(): ParamInitValueSerializedTypeMap[T];\n\tabstract rawInputSerialized(): ParamInitValueSerializedTypeMap[T];\n\tabstract valueSerialized(): ParamValueSerializedTypeMap[T];\n\tcopyValue(param: BaseParamType) {\n\t\tif (param.type() == this.type()) {\n\t\t\tthis._copyValue(param as TypedParam<T>);\n\t\t} else {\n\t\t\tconsole.warn(`cannot copy value from ${param.type()} to ${this.type()}`);\n\t\t}\n\t}\n\tprotected _copyValue(param: TypedParam<T>) {\n\t\tthrow 'abstract method param._copy_value';\n\t}\n\tvaluePreConversionSerialized(): ParamValuePreConversionSerializedTypeMap[T] {\n\t\treturn undefined as never;\n\t}\n\tconvert(rawVal: any): ParamValuesTypeMap[T] | null {\n\t\treturn null;\n\t}\n\tstatic areRawInputEqual(val1: any, val2: any) {\n\t\treturn false;\n\t}\n\tisRawInputEqual(other_raw_input: ParamInitValuesTypeMap[T]) {\n\t\treturn (this.constructor as any).areRawInputEqual(this._raw_input, other_raw_input);\n\t}\n\tisDefaultValueEqual(other_default_value: ParamInitValuesTypeMap[T]) {\n\t\treturn (this.constructor as any).areRawInputEqual(this._default_value, other_default_value);\n\t}\n\tstatic areValuesEqual(val1: any, val2: any) {\n\t\treturn false;\n\t}\n\tisValueEqual(other_val: ParamValuesTypeMap[T]) {\n\t\treturn (this.constructor as any).areValuesEqual(this.value, other_val);\n\t}\n\tprotected _cloneRawInput(raw_input: ParamInitValuesTypeMap[T]): ParamInitValuesTypeMap[T] {\n\t\treturn raw_input;\n\t}\n\tset(raw_input: ParamInitValuesTypeMap[T]): void {\n\t\tthis._raw_input = this._cloneRawInput(this._prefilterInvalidRawInput(raw_input));\n\t\tthis.emitController.emit(ParamEvent.RAW_INPUT_UPDATED);\n\t\tthis.processRawInput();\n\t}\n\tprotected _prefilterInvalidRawInput(raw_input: any): ParamInitValuesTypeMap[T] {\n\t\treturn raw_input as ParamInitValuesTypeMap[T];\n\t}\n\tdefaultValue() {\n\t\treturn this._default_value;\n\t}\n\tisDefault(): boolean {\n\t\treturn this._raw_input == this._default_value;\n\t}\n\trawInput() {\n\t\treturn this._raw_input;\n\t}\n\n\tprotected processRawInput() {}\n\tprivate _isComputing: boolean = false;\n\tisComputing() {\n\t\treturn this._isComputing;\n\t}\n\tasync compute(): Promise<void> {\n\t\tif (this.scene().loadingController.isLoading()) {\n\t\t\t// TODO:\n\t\t\t// test that node path created in material builders\n\t\t\t// do not compute on load,\n\t\t\t// But they should still be able to compute an expression\n\t\t\t// and therefore .compute() is still necessary\n\t\t\tPoly.warn(`param attempt to compute ${this.path()} while scene is loading`);\n\t\t}\n\n\t\tif (this.isDirty()) {\n\t\t\tif (!this._isComputing) {\n\t\t\t\tthis._isComputing = true;\n\t\t\t\tawait this.processComputation();\n\t\t\t\tthis._isComputing = false;\n\n\t\t\t\tif (this._computeResolves) {\n\t\t\t\t\tconst resolves = [...this._computeResolves];\n\t\t\t\t\tthis._computeResolves = undefined;\n\t\t\t\t\tfor (const resolve of resolves) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis._computeResolves = this._computeResolves || [];\n\t\t\t\t\tthis._computeResolves.push(resolve);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tprotected async processComputation(): Promise<void> {}\n\t// set_default_value(default_value: ParamValuesTypeMap[T]) {\n\t// \tthis._default_value = default_value;\n\t// }\n\tsetInitValue(init_value: ParamInitValuesTypeMap[T]) {\n\t\tthis._default_value = this._cloneRawInput(this._prefilterInvalidRawInput(init_value));\n\t\t// this._raw_input = this._cloneRawInput(init_value);\n\n\t\t// if (this.isMultiple()) {\n\t\t// \tthis.initComponents();\n\t\t// }\n\n\t\t// this.set(init_value);\n\t}\n\t// eval_p(): Promise<ParamValuesTypeMap[T]> {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\tresolve();\n\t// \t});\n\t// }\n\n\t// node\n\t_setupNodeDependencies(node: BaseNodeType | null) {\n\t\tif (!node) {\n\t\t\tif (this._node) {\n\t\t\t\tthis._node.params.params_node?.removeGraphInput(this);\n\t\t\t}\n\t\t} else {\n\t\t\t// allow callbacks after the value is set,\n\t\t\t// so that the param does not trigger the node to recompute\n\t\t\t// before all params are added\n\t\t\tthis.options.allowCallback();\n\n\t\t\tif (!this.parentParam()) {\n\t\t\t\tif (this.options.makesNodeDirtyWhenDirty()) {\n\t\t\t\t\tnode.params.params_node?.addGraphInput(this, false);\n\t\t\t\t} else {\n\t\t\t\t\t// if the param does not make the node cook when dirty,\n\t\t\t\t\t// we still want it to run its attached callback when dirty\n\t\t\t\t\tthis.dirtyController.addPostDirtyHook('run callback', async () => {\n\t\t\t\t\t\tawait this.compute();\n\t\t\t\t\t\tawait this.options.executeCallback();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.components) {\n\t\t\tfor (const c of this.components) {\n\t\t\t\tc._setupNodeDependencies(node);\n\t\t\t}\n\t\t}\n\t}\n\tget node() {\n\t\treturn this._node!;\n\t}\n\tparent() {\n\t\treturn this.node;\n\t}\n\n\t// hierarchy\n\tset_parent_param(param: TypedMultipleParam<any>) {\n\t\tparam.addGraphInput(this, false);\n\t\tthis._parent_param = param;\n\t}\n\tparentParam(): TypedMultipleParam<any> | undefined {\n\t\treturn this._parent_param;\n\t}\n\thas_parent_param(): boolean {\n\t\treturn this._parent_param != null;\n\t}\n\tpath(): string {\n\t\treturn this.node?.path() + '/' + this.name();\n\t}\n\tpathRelativeTo(node: BaseNodeType): string {\n\t\tif (!this._node) {\n\t\t\treturn this.name();\n\t\t}\n\t\tconst nodeRelativePath = CoreWalker.relativePath(node, this._node);\n\n\t\tif (nodeRelativePath.length > 0) {\n\t\t\treturn CoreWalker.sanitizePath(`${nodeRelativePath}${CoreWalker.SEPARATOR}${this.name()}`);\n\t\t} else {\n\t\t\treturn this.name();\n\t\t}\n\t}\n\n\t// emit\n\temit(eventName: ParamEvent): void {\n\t\tif (this.emitController.emitAllowed()) {\n\t\t\tthis.emitController.incrementCount(eventName);\n\t\t\tthis.scene().dispatchController.dispatch(this, eventName);\n\t\t}\n\t}\n\n\t// multiple\n\tget components() {\n\t\treturn this._components;\n\t}\n\tcomponentNames(): Readonly<string[]> {\n\t\treturn TYPED_PARAM_DEFAULT_COMPONENT_NAMES;\n\t}\n\tisMultiple(): boolean {\n\t\treturn this.componentNames().length > 0;\n\t}\n\tinitComponents() {}\n\n\thasExpression(): boolean {\n\t\treturn this.expressionController != null && this.expressionController.active(); // use this._expression_controller to avoid creating it\n\t}\n\n\t// serialize\n\ttoJSON() {\n\t\tif (!this._serializer) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._serializer.toJSON();\n\t}\n\n\t// dispose callbacks\n\tprivate _onDisposeCallbacks: Set<OnDisposeCallback> | undefined;\n\tonDispose(callback: OnDisposeCallback) {\n\t\tthis._onDisposeCallbacks = this._onDisposeCallbacks || new Set();\n\t\tthis._onDisposeCallbacks.add(callback);\n\t}\n\tderegisterOnDispose(callback: OnDisposeCallback) {\n\t\tif (this._onDisposeCallbacks) {\n\t\t\tthis._onDisposeCallbacks.delete(callback);\n\t\t}\n\t}\n\tprivate _runOnDisposeCallbacks() {\n\t\tif (this._onDisposeCallbacks) {\n\t\t\tthis._onDisposeCallbacks.forEach((callback) => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\tthis._onDisposeCallbacks.clear();\n\t\t\tthis._onDisposeCallbacks = undefined;\n\t\t}\n\t}\n}\nexport type BaseParamType = TypedParam<ParamType>;\nexport class BaseParamClass extends TypedParam<ParamType> {\n\tdefaultValueSerialized() {\n\t\treturn 'BaseParamClass.defaultValueSerialized overriden';\n\t}\n\trawInputSerialized() {\n\t\treturn 'BaseParamClass.rawInputSerialized overriden';\n\t}\n\tvalueSerialized() {\n\t\treturn 'BaseParamClass.valueSerialized overriden';\n\t}\n}\n","import {ParamEvent} from './../poly/ParamEvent';\nimport {BaseParamType} from './_Base';\nimport {BaseNodeType} from '../nodes/_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {DecomposedPath} from '../../core/DecomposedPath';\nimport {TypedStringParam} from './_BaseString';\n\nexport abstract class TypedPathParam<T extends ParamType.NODE_PATH | ParamType.PARAM_PATH> extends TypedStringParam<T> {\n\tpublic readonly decomposedPath = new DecomposedPath();\n\n\toverride dispose(): void {\n\t\tthis.scene().referencesController.resetReferenceFromParam(this);\n\t\tsuper.dispose();\n\t}\n\n\tabstract notifyPathRebuildRequired(node: BaseNodeType | BaseParamType): void;\n\tabstract notifyTargetParamOwnerParamsUpdated(node: BaseNodeType | BaseParamType): void;\n\tprotected abstract _findTarget(): void;\n\n\tprotected _handleReferences(node: BaseNodeType | BaseParamType | null, path: string) {\n\t\tif (path == '') {\n\t\t\t// no need to handle references if param value is empty\n\t\t\t// as no node could match this path\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scene().referencesController.setNamedNodesFromParam(this);\n\t\tif (node) {\n\t\t\tthis.scene().referencesController.setReferenceFromParam(this, node);\n\t\t\tthis.scene().missingExpressionReferencesController.deregisterParam(this);\n\t\t} else {\n\t\t\tthis.scene().missingExpressionReferencesController.register(this, path);\n\t\t}\n\t}\n\tprotected override async processComputation(): Promise<void> {\n\t\tif (this.expressionController?.active() && !this.expressionController.entitiesDependent()) {\n\t\t\tawait super.processComputation();\n\t\t} else {\n\t\t\tthis._findTarget();\n\t\t}\n\t}\n\tprotected override processRawInputWithoutExpression() {\n\t\tconst wasErrored = this.states.error.active();\n\t\tif (this._value.path() != this._raw_input || this._expression_controller || wasErrored) {\n\t\t\tthis._setValuePathAndFindTarget(this._raw_input, true);\n\t\t\tthis.states.error.clear();\n\t\t\tthis.emitController.emit(ParamEvent.VALUE_UPDATED);\n\t\t\tthis.options.executeCallback();\n\t\t\tif (this._expression_controller) {\n\t\t\t\tthis._expression_controller.setExpression(undefined, false);\n\t\t\t\tthis._expression_controller = undefined;\n\t\t\t\tthis.emitController.emit(ParamEvent.EXPRESSION_UPDATED); // ensure expression is considered removed\n\t\t\t}\n\t\t}\n\t}\n\tprotected _setValuePathAndFindTarget(path: string, setDirty: boolean) {\n\t\tthis._value.setPath(path);\n\t\tthis._findTarget();\n\t\tif (setDirty) {\n\t\t\tthis.setDirty(); // setDirty here creates an infinite loop when using with a copy sop\n\t\t}\n\t\tthis.emitController.emit(ParamEvent.VALUE_UPDATED);\n\t}\n}\n","import {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {stringValueElements} from './../expressions/traversers/ParsedTree';\nimport {ParamEvent} from './../poly/ParamEvent';\nimport {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ExpressionController} from './utils/ExpressionController';\n\nexport abstract class TypedStringParam<\n\tT extends ParamType.STRING | ParamType.NODE_PATH | ParamType.PARAM_PATH\n> extends TypedParam<T> {\n\tprotected abstract _assignValue(value: ParamValuesTypeMap[T] | string): void;\n\n\toverride expressionParsedAsString() {\n\t\treturn true;\n\t}\n\n\tprotected override processRawInput() {\n\t\tif (stringValueElements(this._raw_input).length >= 3) {\n\t\t\tthis._expression_controller = this._expression_controller || new ExpressionController(this);\n\t\t\tif (this._raw_input != this._expression_controller.expression()) {\n\t\t\t\tthis.states.error.clear();\n\t\t\t\tthis._expression_controller.setExpression(this._raw_input, false);\n\t\t\t\tthis.setDirty();\n\t\t\t\tthis.emitController.emit(ParamEvent.EXPRESSION_UPDATED);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.processRawInputWithoutExpression();\n\t\t}\n\t}\n\tprotected abstract processRawInputWithoutExpression(): void;\n\n\tprotected override async processComputation(): Promise<void> {\n\t\tif (this.expressionController?.active() && !this.expressionController.entitiesDependent()) {\n\t\t\tconst expressionResult = await this.expressionController.computeExpression();\n\t\t\tif (this.expressionController.isErrored()) {\n\t\t\t\tthis.states.error.set(\n\t\t\t\t\t`expression error: \"${this.expressionController.expression()}\" (${this.expressionController.errorMessage()})`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst converted = this.convert(expressionResult);\n\t\t\t\t// we need to check if equal nulls explicitely\n\t\t\t\t// as the empty string '' evals to false...\n\t\t\t\tif (converted != null) {\n\t\t\t\t\tthis.states.error.clear();\n\t\t\t\t\tthis._assignValue(converted);\n\t\t\t\t\tthis.emitController.emit(ParamEvent.VALUE_UPDATED);\n\t\t\t\t\tthis.options.executeCallback();\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set(`expression returns an invalid type (${expressionResult})`);\n\t\t\t\t}\n\t\t\t\tthis.removeDirtyState();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {StringOrNumber} from '../../types/GlobalTypes';\nimport {TypedParam} from './_Base';\nimport {FloatParam} from './Float';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamEvent} from '../poly/ParamEvent';\nimport {ParamInitValueSerializedTypeMap} from './types/ParamInitValueSerializedTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {CoreType} from '../../core/Type';\nimport {CoreParamSerializer} from './utils/CoreParamSerializer';\n\nexport abstract class TypedMultipleParam<T extends ParamType> extends TypedParam<T> {\n\tprivate _components_contructor = FloatParam;\n\tprotected override _components!: FloatParam[];\n\tprivate _componentsCount = 0;\n\toverride get components() {\n\t\treturn this._components;\n\t}\n\toverride isNumeric() {\n\t\treturn true;\n\t}\n\toverride isDefault() {\n\t\tfor (const c of this.components) {\n\t\t\tif (!c.isDefault()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\toverride rawInput() {\n\t\treturn this._components.map((c) => c.rawInput()) as ParamInitValueSerializedTypeMap[T];\n\t}\n\trawInputSerialized() {\n\t\treturn this._components.map((c) => c.rawInputSerialized()) as ParamInitValueSerializedTypeMap[T];\n\t}\n\tprotected override _copyValue(param: TypedMultipleParam<T>) {\n\t\tfor (let i = 0; i < this.components.length; i++) {\n\t\t\tconst component = this.components[i];\n\t\t\tconst src_component = param.components[i];\n\t\t\tcomponent.copyValue(src_component);\n\t\t}\n\t}\n\n\toverride initComponents() {\n\t\tif (this._components != null) {\n\t\t\treturn;\n\t\t}\n\t\tlet index = 0;\n\t\tthis._components = new Array(this.componentNames().length);\n\t\tfor (const componentName of this.componentNames()) {\n\t\t\tconst component = new this._components_contructor(this.scene(), this.node, {\n\t\t\t\tserializerClass: this._serializer?.constructor as typeof CoreParamSerializer<any> | undefined,\n\t\t\t}); //, `${this.name}${name}`);\n\t\t\tlet default_val;\n\t\t\tif (CoreType.isArray(this._default_value)) {\n\t\t\t\tdefault_val = this._default_value[index];\n\t\t\t} else {\n\t\t\t\tdefault_val = (this._default_value as any)[componentName];\n\t\t\t}\n\t\t\tcomponent.options.copy(this.options);\n\t\t\tcomponent.setInitValue(default_val);\n\n\t\t\t// component.setScene(this.scene);\n\t\t\tcomponent.setName(`${this.name()}${componentName}`);\n\t\t\tcomponent.set_parent_param(this);\n\n\t\t\t// this.addGraphInput(component, false); // already called in set_parent_param\n\t\t\t// component.initialize();\n\t\t\tthis._components[index] = component;\n\t\t\tindex++;\n\t\t}\n\t\tthis._componentsCount = this._components.length;\n\t\t// this.compute();\n\t}\n\n\tprotected override async processComputation(): Promise<void> {\n\t\tawait this.computeComponents();\n\t\tthis.setValueFromComponents();\n\t}\n\n\tabstract setValueFromComponents(): void;\n\t// set_raw_input_from_components() {}\n\n\toverride hasExpression() {\n\t\tfor (const c of this.components) {\n\t\t\tif (c.expressionController?.active()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// private _promises:Promise<void>[] = [];\n\tprivate async computeComponents() {\n\t\tconst components = this.components;\n\t\t// _promises.length = 0;\n\t\t// in order to avoid having to allocate an array\n\t\t// which could allow us to use Promise.all()\n\t\t// we use a for loop instead,\n\t\t// even if it means that the rare case where more than 1 component has an expression\n\t\t// this would be slower\n\t\tfor (const c of components) {\n\t\t\tif (c.isDirty()) {\n\t\t\t\tawait c.compute();\n\t\t\t\t// _promises.push(c.compute());\n\t\t\t}\n\t\t}\n\t\t// await Promise.all(_promises);\n\t\tthis.removeDirtyState();\n\t}\n\tprotected override _prefilterInvalidRawInput(raw_input: any): ParamInitValuesTypeMap[T] {\n\t\tif (!CoreType.isArray(raw_input)) {\n\t\t\tconst numberOrString = raw_input as number | string;\n\t\t\tconst raw_input_wrapped_in_array: StringOrNumber[] = this.componentNames().map(() => numberOrString);\n\t\t\treturn raw_input_wrapped_in_array as ParamInitValuesTypeMap[T];\n\t\t} else {\n\t\t\treturn raw_input as ParamInitValuesTypeMap[T];\n\t\t}\n\t}\n\n\tprotected override processRawInput() {\n\t\tconst cooker = this.scene().cooker;\n\t\tcooker.block();\n\t\tconst components = this.components;\n\t\tfor (const c of components) {\n\t\t\tc.emitController.blockParentEmit();\n\t\t}\n\n\t\t// if (CoreType.isArray(values)) {\n\t\tconst value = this._raw_input;\n\t\tlet prevValue: number = 0;\n\t\tif (CoreType.isArray(value)) {\n\t\t\tfor (let i = 0; i < this._componentsCount; i++) {\n\t\t\t\tlet componentValue = (value as any)[i];\n\t\t\t\t// use the prev value, in case we give an array that is too short\n\t\t\t\tif (componentValue == null) {\n\t\t\t\t\tcomponentValue = prevValue;\n\t\t\t\t}\n\t\t\t\tcomponents[i].set(componentValue);\n\t\t\t\tprevValue = componentValue;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0; i < this._componentsCount; i++) {\n\t\t\t\tconst componentName = this.componentNames()[i];\n\t\t\t\tlet componentValue = (value as any)[componentName];\n\t\t\t\t// use the prev value, in case we give a vec2 instead of vec3\n\t\t\t\tif (componentValue == null) {\n\t\t\t\t\tcomponentValue = prevValue;\n\t\t\t\t}\n\t\t\t\tcomponents[i].set(componentValue);\n\t\t\t\tprevValue = componentValue;\n\t\t\t}\n\t\t}\n\t\t// } else {\n\t\t// \tconst component_names = this.componentNames()()\n\t\t// \tfor (let i = 0; i < components.length; i++) {\n\t\t// \t\tcomponents[i].set(values[component_names[i]])\n\t\t// \t}\n\t\t// }\n\n\t\tcooker.unblock();\n\n\t\tfor (const component of this.components) {\n\t\t\tcomponent.emitController.unblockParentEmit();\n\t\t}\n\t\t// this.emit(ParamEvent.UPDATED);\n\n\t\tthis.emitController.emit(ParamEvent.VALUE_UPDATED);\n\t}\n}\n\n// class BaseMultipleParam extends TypedMultipleParam<Vector> {}\n","import {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ExpressionController} from './utils/ExpressionController';\nimport {ParamEvent} from '../poly/ParamEvent';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {CoreType} from '../../core/Type';\n\nexport abstract class TypedNumericParam<T extends ParamType> extends TypedParam<T> {\n\toverride isNumeric() {\n\t\treturn true;\n\t}\n\toverride isDefault(): boolean {\n\t\treturn this._raw_input == this._default_value;\n\t}\n\n\tprotected override _prefilterInvalidRawInput(raw_input: any): ParamInitValuesTypeMap[T] {\n\t\tif (CoreType.isArray(raw_input)) {\n\t\t\treturn raw_input[0] as ParamInitValuesTypeMap[T];\n\t\t} else {\n\t\t\treturn raw_input;\n\t\t}\n\t}\n\n\tprotected override processRawInput() {\n\t\tconst converted = this.convert(this._raw_input);\n\t\tif (converted != null) {\n\t\t\tif (this._expression_controller) {\n\t\t\t\tthis._expression_controller.setExpression(undefined, false);\n\t\t\t\tthis.emitController.emit(ParamEvent.EXPRESSION_UPDATED); // ensure expression is considered removed\n\t\t\t}\n\t\t\tconst wasErrored = this.states.error.active();\n\t\t\tthis.states.error.clear();\n\t\t\tif (converted != this._value || wasErrored) {\n\t\t\t\tthis._updateValue(converted);\n\t\t\t\tthis.setSuccessorsDirty(this);\n\t\t\t}\n\t\t} else {\n\t\t\tif (CoreType.isString(this._raw_input)) {\n\t\t\t\tthis.states.error.clear();\n\t\t\t\tthis._expression_controller = this._expression_controller || new ExpressionController(this);\n\t\t\t\tif (this._raw_input != this._expression_controller.expression()) {\n\t\t\t\t\tthis._expression_controller.setExpression(this._raw_input);\n\t\t\t\t\tthis.emitController.emit(ParamEvent.EXPRESSION_UPDATED);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.states.error.set(`param input is invalid (${this.path()})`);\n\t\t\t}\n\t\t}\n\t}\n\tprotected override async processComputation(): Promise<void> {\n\t\tif (this.expressionController?.active() && !this.expressionController.entitiesDependent()) {\n\t\t\tconst expression_result = await this.expressionController.computeExpression();\n\t\t\tif (this.expressionController.isErrored()) {\n\t\t\t\tthis.states.error.set(\n\t\t\t\t\t`expression error: \"${this.expressionController.expression()}\" (${this.expressionController.errorMessage()})`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst converted = this.convert(expression_result);\n\t\t\t\tif (converted != null) {\n\t\t\t\t\tif (this.states.error.active()) {\n\t\t\t\t\t\tthis.states.error.clear();\n\t\t\t\t\t}\n\t\t\t\t\tthis._updateValue(converted);\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set(\n\t\t\t\t\t\t`expression returns an invalid type (${expression_result}) (${this.expressionController.expression()})`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _updateValue(new_value: ParamValuesTypeMap[T]) {\n\t\tthis._value = new_value;\n\t\tconst parentParam = this.parentParam();\n\t\tif (parentParam) {\n\t\t\tparentParam.setValueFromComponents();\n\t\t}\n\t\tthis.options.executeCallback();\n\t\tthis.emitController.emit(ParamEvent.VALUE_UPDATED);\n\t\tthis.removeDirtyState();\n\t}\n}\n","export type LiteralConstructMethod = (args: any[]) => string;\n\nexport class LiteralConstructsController {\n\tstatic if(args: any[]): string {\n\t\tconst condition = args[0];\n\t\tconst valTrue = args[1];\n\t\tconst valFalse = args[2];\n\t\t// return `(await (async function (condition){ console.log('condition:',condition);if( condition ){ return (${valTrue}) } else { return (${valFalse}) } })((${condition})))`;\n\n\t\t// return `(await (async function(){\n\t\t// \tconst condition = (${condition});\n\t\t// \tconsole.log('condition:',condition)\n\t\t// \tif(condition){\n\t\t// \t\treturn (${valTrue});\n\t\t// \t} else {\n\t\t// \t\treturn (${valFalse});\n\t\t// \t}\n\t\t// })())`;\n\n\t\treturn `((${condition}) ? (${valTrue}) : (${valFalse}))`;\n\t}\n}\n","import {BaseParamType} from '../../params/_Base';\nimport jsep from 'jsep';\nimport {CoreType} from '../../../core/Type';\nexport const VARIABLE_PREFIX = '$';\n\nexport abstract class BaseTraverser {\n\tprivate _errorMessage: string | undefined;\n\n\tconstructor(public param: BaseParamType) {}\n\n\tprotected clearError() {\n\t\tthis._errorMessage = undefined;\n\t}\n\tprotected setError(message: string) {\n\t\tthis._errorMessage = this._errorMessage || message;\n\t}\n\tprotected _set_error_from_error_bound = this._set_error_from_error.bind(this);\n\tprivate _set_error_from_error(error: Error | string) {\n\t\tif (CoreType.isString(error)) {\n\t\t\tthis._errorMessage = error;\n\t\t} else {\n\t\t\tthis._errorMessage = error.message;\n\t\t}\n\t}\n\tisErrored(): boolean {\n\t\treturn this._errorMessage != null;\n\t}\n\terrorMessage() {\n\t\treturn this._errorMessage;\n\t}\n\treset() {\n\t\tthis._errorMessage = undefined;\n\t}\n\n\ttraverse_node(node: jsep.Expression): string | undefined {\n\t\tconst method_name = `traverse_${node.type}`;\n\t\tconst method = (this as any)[method_name];\n\t\tif (method) {\n\t\t\treturn (this as any)[method_name](node);\n\t\t} else {\n\t\t\tthis.setError(`expression unknown node type: ${node.type}`);\n\t\t}\n\t}\n\n\tprotected traverse_BinaryExpression(node: jsep.BinaryExpression): string {\n\t\treturn `${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)}`;\n\t}\n\t// protected traverse_LogicalExpression(node: jsep.LogicalExpression): string {\n\t// \t// || or &&\n\t// \treturn `${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)}`;\n\t// }\n\tprotected traverse_MemberExpression(node: jsep.MemberExpression): string {\n\t\treturn `${this.traverse_node(node.object)}.${this.traverse_node(node.property)}`;\n\t}\n\tprotected traverse_ConditionalExpression(node: jsep.ConditionalExpression): string {\n\t\treturn `(${this.traverse_node(node.test)}) ? (${this.traverse_node(node.consequent)}) : (${this.traverse_node(\n\t\t\tnode.alternate\n\t\t)})`;\n\t}\n\n\t// currently only used for string expressions such as\n\t// pt_`@ptnum+1`\n\tprotected traverse_Compound(node: jsep.Compound): string {\n\t\tconst args = node.body;\n\t\tlet traversed_args = [];\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tconst arg_node = args[i];\n\t\t\tif (arg_node.type == 'Identifier') {\n\t\t\t\tif ((arg_node as jsep.Identifier).name[0] == VARIABLE_PREFIX) {\n\t\t\t\t\ttraversed_args.push('`${' + this.traverse_node(arg_node) + '}`');\n\t\t\t\t} else {\n\t\t\t\t\ttraversed_args.push(`'${(arg_node as jsep.Identifier).name}'`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttraversed_args.push('`${' + this.traverse_node(arg_node) + '}`');\n\t\t\t}\n\t\t}\n\t\treturn traversed_args.join(' + ');\n\t}\n\n\tprotected traverse_Literal(node: jsep.Literal): string {\n\t\treturn `${node.raw}`; // 5 or 'string' (raw will include quotes)\n\t}\n\n\tprotected abstract traverse_Identifier(node: jsep.Identifier): string | undefined;\n\tprotected abstract traverse_CallExpression(node: jsep.CallExpression): string | undefined;\n\tprotected abstract traverse_UnaryExpression(node: jsep.UnaryExpression): string;\n}\n","// export const VAR_ARE_ENTITY_CORE_POINT = `areEntitiesCorePoint`;\nexport const VAR_OBJECT = `geometry`;\nexport const VAR_ENTITY = `entity`;\nexport const VAR_ENTITIES = `entities`;\nexport const CLASS_CORE_POINT = `corePointClassFactory(${VAR_OBJECT})`;\nexport const CLASS_THREEJS_POINT = 'ThreejsPoint';\nexport const FUNC_GET_ENTITIES_ATTRIBUTE = 'getEntitiesAttribute';\nexport const FUNC_GET_ENTITY_ATTRIBUTE_VALUE = 'getEntityAttributeValue';\nexport const FUNC_GET_ENTITY_ATTRIBUTE_VALUE_FUNC = 'getEntityAttributeValueFunc';\n","import {VAR_OBJECT, VAR_ENTITIES, CLASS_CORE_POINT, CLASS_THREEJS_POINT, FUNC_GET_ENTITIES_ATTRIBUTE} from './Common';\n\nexport class AttributeRequirementsController {\n\tprivate _attributeNames: Set<string> | undefined;\n\tconstructor() {}\n\n\treset() {\n\t\tif (this._attributeNames) {\n\t\t\tthis._attributeNames.clear();\n\t\t}\n\t}\n\tassignAttributesLines(): string {\n\t\tif (this._attributeNames) {\n\t\t\tconst lines: string[] = [];\n\t\t\tfor (const attribName of this._attributeNames) {\n\t\t\t\tlines.push(AttributeRequirementsController.assignAttributeLine(attribName));\n\t\t\t}\n\t\t\treturn lines.join(';\\n');\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\tassignArraysLines(): string {\n\t\tif (this._attributeNames) {\n\t\t\tconst lines: string[] = [];\n\t\t\tif (this._attributeNames.size > 0) {\n\t\t\t\tconst objectLine = `const ${VAR_OBJECT} = entities[0].object();`;\n\t\t\t\tlines.push(objectLine);\n\t\t\t}\n\t\t\tfor (const attribName of this._attributeNames) {\n\t\t\t\tlines.push(AttributeRequirementsController.assignItemSizeLine(attribName));\n\t\t\t\tlines.push(AttributeRequirementsController.assignArrayLine(attribName));\n\t\t\t}\n\t\t\treturn lines.join(';\\n');\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\tattributePresenceCheckLine(): string {\n\t\tif (this._attributeNames) {\n\t\t\tconst varNames: string[] = [];\n\t\t\tfor (const attribName of this._attributeNames) {\n\t\t\t\tconst varName = AttributeRequirementsController._varAttribute(attribName);\n\t\t\t\tvarNames.push(varName);\n\t\t\t}\n\t\t\tif (varNames.length > 0) {\n\t\t\t\treturn varNames.join(' && ');\n\t\t\t}\n\t\t}\n\t\t// TODO: add test that a Point Sop can take an expression that does not require attributes\n\t\treturn 'true';\n\t}\n\tmissingAttributesLine(): string {\n\t\tif (this._attributeNames) {\n\t\t\tlet lineElements: string[] = ['(()=>{', 'const missingAttributes = [];'];\n\t\t\tfor (const attribName of this._attributeNames) {\n\t\t\t\tconst varName = AttributeRequirementsController._varAttribute(attribName);\n\t\t\t\tlineElements.push(`if( !${varName} ) {\tmissingAttributes.push('${attribName}'); }`);\n\t\t\t}\n\n\t\t\tlineElements.push('return missingAttributes;', '})');\n\t\t\treturn lineElements.join('');\n\t\t}\n\t\treturn '[]';\n\t}\n\n\tadd(attribName: string) {\n\t\tthis._attributeNames = this._attributeNames || new Set<string>();\n\t\tthis._attributeNames.add(attribName);\n\t}\n\n\tstatic assignAttributeLine(attribName: string) {\n\t\tconst varAttribute = this._varAttribute(attribName);\n\t\treturn `const ${varAttribute} = ${FUNC_GET_ENTITIES_ATTRIBUTE}(${VAR_ENTITIES},'${attribName}')`;\n\t}\n\tprivate static assignItemSizeLine(attribName: string) {\n\t\tconst varAttribute = this._varAttribute(attribName);\n\t\tconst varAttributeSize = this._varAttribSize(attribName);\n\t\treturn `const ${varAttributeSize} = ${varAttribute}.itemSize`;\n\t}\n\tprivate static assignArrayLine(attribName: string) {\n\t\tconst varAttribute = this._varAttribute(attribName);\n\t\tconst varArray = this._varArray(attribName);\n\t\tconst isIndexedCondition = `(${VAR_ENTITIES}[0] && ${VAR_ENTITIES}[0] instanceof ${CLASS_THREEJS_POINT} && ${CLASS_CORE_POINT}.isAttribIndexed(${VAR_OBJECT}, '${attribName}'))`;\n\t\tconst indexedArray = `${VAR_ENTITIES}.map(e=>e.indexedAttribValue('${attribName}'))`;\n\t\tconst nonIndexedArray = `${varAttribute}.array`;\n\t\treturn `const ${varArray} = ${isIndexedCondition} ? ${indexedArray} : ${nonIndexedArray};`;\n\t}\n\n\tprivate static _varAttribute(attribName: string) {\n\t\treturn `attrib_${attribName}`;\n\t}\n\tprivate static _varAttribSize(attribName: string) {\n\t\treturn `attribSize_${attribName}`;\n\t}\n\tprivate static _varArray(attribName: string) {\n\t\treturn `array_${attribName}`;\n\t}\n\tvarAttributeSize(attribName: string) {\n\t\treturn AttributeRequirementsController._varAttribSize(attribName);\n\t}\n\tvarArray(attribName: string) {\n\t\treturn AttributeRequirementsController._varArray(attribName);\n\t}\n}\n","/**\n * The following expressions are available to use in most parameters:\n *\n * ## Variables\n *\n * - `$F`: current frame\n * - `$T`: current time\n * - `$OS`: current node name\n * - `$CH`: current param name\n * - `$CEX`: input centroid x component\n * - `$CEY`: input centroid y component\n * - `$CEZ`: input centroid z component\n *\n * Those variables are aliases to the javascript math module:\n *\n * - `$E`\n * - `$LN2`\n * - `$LN10`\n * - `$LOG10E`\n * - `$LOG2E`\n * - `$PI`\n * - `$SQRT1_2`\n * - `$SQRT2`\n *\n * In some parameters which can evaluate per entity (which means per point or per object),\n * it is also possible to use variables to access attributes:\n *\n * - `@ptnum` will evaluate to the current point index\n * - `@vtxnum` will evaluate to the current vertex index\n * - `@primnum` will evaluate to the current primitive index\n * - `@objnum` will evaluate to the current object index\n * - And you can also refer to any existing attribute, **using @ following by the attribute name**.\n *\n * For instance:\n *\n * - `@P.x` evaluates to the **x** component of the position.\n * - `@P.y` evaluates to the **y** component of the position.\n * - `@P.z` evaluates to the **z** component of the position.\n * - `@N.x` evaluates to the **x** component of the normal.\n * - `@N.y` evaluates to the **y** component of the normal.\n * - `@N.z` evaluates to the **z** component of the normal.\n * - `@Cd.x` evaluates to the **x** component of the color.\n * - `@Cd.y` evaluates to the **y** component of the color.\n * - `@Cd.z` evaluates to the **z** component of the color.\n * - `@uv.x` evaluates to the **x** component of the uv.\n * - `@uv.y` evaluates to the **y** component of the uv.\n *\n * Using the attribCreate, point or normal SOPs, you can mix and match them.\n * For instance, if in the point SOP, you set to the x component `@uv.x` and y component `@uv.y`\n * then the points will be transformed to look like in UV space.\n *\n * Another common setup is to use an attribute create to add an attribute `id`, with `@ptnum`.\n * This way, every point will have a unique id.\n * You can then use this id in the following nodes, or even in a material.\n *\n * Instead of having an attribute id that goes from 0 to the number of points in your geometry,\n * you can also create one that goes from 0 to 1, using `@ptnum / (pointsCount(0)-1)`\n *\n *\n * ## Math expressions\n *\n * The following are native javascript functions:\n *\n * - abs\n * - acos\n * - acosh\n * - asin\n * - asinh\n * - atan\n * - atan2\n * - atanh\n * - ceil\n * - cos\n * - cosh\n * - exp\n * - expm1\n * - floor\n * - log\n * - log1p\n * - log2\n * - log10\n * - max\n * - min\n * - pow\n * - random (which aliases to Math.rand())\n * - round\n * - sign\n * - sin\n * - sinh\n * - sqrt\n * - tan\n * - tanh\n *\n * If you are targetting ES6 (available in modern browsers), you can also have:\n *\n * - cbrt\n * - hypot\n * - log10\n * - trunc\n *\n * The following are aliases from the [Polygonjs CoreMath](https://github.com/polygonjs/polygonjs-engine/blob/master/src/core/math/_Module.ts) module:\n *\n * - clamp\n * - degToRad\n * - fit\n * - fit01\n * - fitClamp\n * - fract\n * - mix\n * - radToDeg\n * - rand\n *\n * And the following are alias to the [Polygonjs Easing](https://github.com/polygonjs/polygonjs-engine/blob/master/src/core/math/Easing.ts) module:\n *\n * - `easeI2( number )`, is a shortcut for `ease_i( number, 2 )`\n * - `easeO2( number )`, is a shortcut for `ease_o( number, 2 )`\n * - `easeIO2( number )`, is a shortcut for `ease_io( number, 2 )`\n * - `easeI3( number )`, is a shortcut for `ease_i( number, 3 )`\n * - `easeO3( number )`, is a shortcut for `ease_o( number, 3 )`\n * - `easeIO3( number )`, is a shortcut for `ease_io( number, 3 )`\n * - `easeI4( number )`, is a shortcut for `ease_i( number, 4 )`\n * - `easeO4( number )`, is a shortcut for `ease_o( number, 4 )`\n * - `easeIO4( number )`, is a shortcut for `ease_io( number, 4 )`\n * - `easeSinI( number )`\n * - `easeSinO( number )`\n * - `easeSinIO( number )`\n * - `easeElasticI( number )`\n * - `easeElasticO( number )`\n * - `easeElasticIO( number )`\n *\n *\n * ## String expressions:\n *\n * - precision (alias to the [CoreString](https://github.com/polygonjs/polygonjs-engine/blob/master/src/core/String.ts) module precision method)\n * - [strCharsCount](/docs/expressions/strCharsCount)\n * - [strConcat](/docs/expressions/strConcat)\n * - [strIndex](/docs/expressions/strIndex)\n * - [strSub](/docs/expressions/strSub)\n *\n *  */\n\nimport {Vector4} from 'three';\nimport {BaseParamType} from '../../params/_Base';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {ParsedTree} from './ParsedTree';\nimport {LiteralConstructsController, LiteralConstructMethod} from '../LiteralConstructsController';\nimport {BaseMethod} from '../methods/_Base';\nimport {Attribute, CoreAttribute} from '../../../core/geometry/Attribute';\nimport {BaseTraverser} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport {\n\tVAR_ENTITY,\n\tVAR_ENTITIES,\n\tFUNC_GET_ENTITIES_ATTRIBUTE,\n\tFUNC_GET_ENTITY_ATTRIBUTE_VALUE,\n\tFUNC_GET_ENTITY_ATTRIBUTE_VALUE_FUNC,\n} from '../Common';\nimport {AttributeRequirementsController} from '../AttributeRequirementsController';\nimport {CoreMath} from '../../../core/math/_Module';\nimport {CoreString} from '../../../core/String';\nimport {Poly} from '../../Poly';\nimport {CoreType, isArray, isVector, isColor} from '../../../core/Type';\nimport {PolyDictionary} from '../../../types/GlobalTypes';\nimport {ThreejsPoint} from '../../../core/geometry/modules/three/ThreejsPoint';\nimport {corePointClassFactory} from '../../../core/geometry/CoreObjectFactory';\nimport {CoreEntity} from '../../../core/geometry/CoreEntity';\nimport jsep from 'jsep';\nimport {VARIABLE_PREFIX} from './_Base';\nconst QUOTE = \"'\";\nconst ARGUMENTS_SEPARATOR = ', ';\nconst ATTRIBUTE_PREFIX = '@';\n\n// import {Vector3} from 'three'\ntype LiteralConstructDictionary = PolyDictionary<LiteralConstructMethod>;\ntype AnyDictionary = PolyDictionary<any>;\n\nconst NATIVE_MATH_METHODS = [\n\t'abs',\n\t'acos',\n\t'acosh',\n\t'asin',\n\t'asinh',\n\t'atan',\n\t'atan2',\n\t'atanh',\n\t'ceil',\n\t'cos',\n\t'cosh',\n\t'exp',\n\t'expm1',\n\t'floor',\n\t'log',\n\t'log1p',\n\t'log2',\n\t'log10',\n\t'max',\n\t'min',\n\t'pow',\n\t'round',\n\t'sign',\n\t'sin',\n\t'sinh',\n\t'sqrt',\n\t'tan',\n\t'tanh',\n];\nconst NATIVE_ES6_MATH_METHODS = ['cbrt', 'hypot', 'log10', 'trunc'];\nconst NATIVE_MATH_METHODS_RENAMED: AnyDictionary = {\n\tmath_random: 'random',\n};\nconst CORE_MATH_METHODS = ['fit', 'fit01', 'fract', 'deg2rad', 'rad2deg', 'rand', 'clamp'];\nimport {Easing} from '../../../core/math/Easing';\nconst EASING_METHODS = Object.keys(Easing);\n\nconst CORE_STRING_METHODS = ['precision'];\nconst NATIVE_MATH_CONSTANTS = ['E', 'LN2', 'LN10', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\n\nconst DIRECT_EXPRESSION_FUNCTIONS: AnyDictionary = {};\nNATIVE_MATH_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Math.${name}`;\n});\nNATIVE_ES6_MATH_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Math.${name}`;\n});\nObject.keys(NATIVE_MATH_METHODS_RENAMED).forEach((name) => {\n\tconst remaped = NATIVE_MATH_METHODS_RENAMED[name];\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Math.${remaped}`;\n});\nCORE_MATH_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Core.Math.${name}`;\n});\nEASING_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Core.Math.Easing.${name}`;\n});\nCORE_STRING_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Core.String.${name}`;\n});\n\nconst LITERAL_CONSTRUCT: LiteralConstructDictionary = {\n\tif: LiteralConstructsController.if,\n};\n\nconst GLOBAL_CONSTANTS: PolyDictionary<string> = {};\nNATIVE_MATH_CONSTANTS.forEach((name) => {\n\tGLOBAL_CONSTANTS[name] = `Math.${name}`;\n});\n\nconst PROPERTY_OFFSETS: AnyDictionary = {\n\tx: 0,\n\ty: 1,\n\tz: 2,\n\tw: 3,\n\tr: 0,\n\tg: 1,\n\tb: 2,\n};\n\ntype MethodArgumentFunction = () => string | number;\nconst Core = {\n\tMath: CoreMath,\n\tString: CoreString,\n};\n\nfunction getEntitiesAttributes(entities: CoreEntity[], attribName: string) {\n\tconst firstEntity = entities[0];\n\tif (firstEntity instanceof ThreejsPoint) {\n\t\treturn firstEntity.attribute(attribName);\n\t} else {\n\t\treturn entities.map((e) => e.attribValue(attribName, new Vector4()));\n\t}\n}\ntype PropertyOffset = 0 | 1 | 2 | 3;\ntype VectorProperty = 'x' | 'y' | 'z' | 'w';\ntype ColorProperty = 'r' | 'g' | 'b';\nfunction getCorePointAttribValue(\n\tentity: ThreejsPoint,\n\tattribName: string,\n\tarray: number[],\n\tattributeSize: number,\n\tpropertyOffset: PropertyOffset\n) {\n\treturn array[entity.index() * attributeSize + propertyOffset];\n}\nconst VECTOR_PROPERTY_NAME_BY_OFFSET: Record<PropertyOffset, VectorProperty> = {\n\t0: 'x',\n\t1: 'y',\n\t2: 'z',\n\t3: 'w',\n};\nconst COLOR_PROPERTY_NAME_BY_OFFSET: Record<PropertyOffset, ColorProperty> = {\n\t0: 'r',\n\t1: 'g',\n\t2: 'b',\n\t3: 'r',\n};\nconst _target = new Vector4();\nfunction getCoreEntityAttribValue(\n\tentity: CoreEntity,\n\tattribName: string,\n\tarray: number[],\n\tattributeSize: number,\n\tpropertyOffset: PropertyOffset\n) {\n\tconst value = entity.attribValue(attribName, _target);\n\tif (isArray(value)) {\n\t\treturn value[propertyOffset];\n\t}\n\tif (isVector(value)) {\n\t\treturn (value as Vector4)[VECTOR_PROPERTY_NAME_BY_OFFSET[propertyOffset]];\n\t}\n\tif (isColor(value)) {\n\t\treturn value[COLOR_PROPERTY_NAME_BY_OFFSET[propertyOffset]];\n\t}\n\treturn value;\n}\nfunction getCoreEntityAttribValueFunc(entity: CoreEntity) {\n\tif (entity instanceof ThreejsPoint) {\n\t\treturn getCorePointAttribValue;\n\t}\n\treturn getCoreEntityAttribValue;\n}\n\nconst FUNCTION_ARGS_DICT = {\n\tcorePointClassFactory,\n\tThreejsPoint,\n\tCore,\n\tCoreType,\n\t[FUNC_GET_ENTITIES_ATTRIBUTE]: getEntitiesAttributes,\n\t[FUNC_GET_ENTITY_ATTRIBUTE_VALUE_FUNC]: getCoreEntityAttribValueFunc,\n};\nconst FUNCTION_ARG_NAMES = Object.keys(FUNCTION_ARGS_DICT);\nconst FUNCTION_ARGS = FUNCTION_ARG_NAMES.map((argName) => (FUNCTION_ARGS_DICT as any)[argName]);\n\nexport class FunctionGenerator extends BaseTraverser {\n\tprivate _entitiesDependent: boolean = false;\n\tprivate function: Function | undefined;\n\tprivate _attribute_requirements_controller = new AttributeRequirementsController();\n\tprivate function_main_string: string | undefined;\n\tprivate methods: BaseMethod[] = [];\n\tprivate method_index: number = -1;\n\n\tpublic methodDependencies: MethodDependency[] = [];\n\tpublic immutableDependencies: CoreGraphNode[] = [];\n\t// public jsep_dependencies: JsepDependency[] = []\n\t// public jsep_nodes_by_missing_paths: JsepsByString = {}\n\n\t// private string_generator: ExpressionStringGenerator = new ExpressionStringGenerator()\n\n\tconstructor(public override param: BaseParamType) {\n\t\tsuper(param);\n\t}\n\n\tentitiesDependent() {\n\t\treturn this._entitiesDependent;\n\t}\n\n\tpublic parseTree(parsedTree: ParsedTree) {\n\t\tthis.reset();\n\n\t\tif (!parsedTree.errorMessage()) {\n\t\t\ttry {\n\t\t\t\t// this.function_pre_entities_loop_lines = [];\n\t\t\t\tthis._attribute_requirements_controller = new AttributeRequirementsController();\n\t\t\t\t// this.function_pre_body = ''\n\t\t\t\tconst node = parsedTree.node();\n\t\t\t\tif (node) {\n\t\t\t\t\tconst function_main_string = this.traverse_node(node);\n\t\t\t\t\tif (function_main_string && !this.isErrored()) {\n\t\t\t\t\t\tthis.function_main_string = function_main_string;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('no parsedTree.node');\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(`error in expression for param ${this.param.path()}`);\n\t\t\t\tconsole.warn(e);\n\t\t\t}\n\n\t\t\tif (this.function_main_string) {\n\t\t\t\ttry {\n\t\t\t\t\tconst body = this._functionBody();\n\t\t\t\t\tthis.function = new Function(\n\t\t\t\t\t\t...FUNCTION_ARG_NAMES,\n\t\t\t\t\t\t'param',\n\t\t\t\t\t\t'methods',\n\t\t\t\t\t\t'_set_error_from_error',\n\t\t\t\t\t\t`\n\t\t\t\t\ttry {\n\t\t\t\t\t\t${body}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t_set_error_from_error(e)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}`\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\tthis.setError('cannot generate function');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setError('cannot generate function body');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setError('cannot parse expression');\n\t\t}\n\t}\n\n\toverride reset() {\n\t\tsuper.reset();\n\t\tthis.function_main_string = undefined;\n\t\tthis.methods = [];\n\t\tthis.method_index = -1;\n\t\tthis.function = undefined;\n\t\tthis._entitiesDependent = false;\n\t\tthis.methodDependencies = [];\n\t\tthis.immutableDependencies = [];\n\t}\n\n\tprivate _functionBody() {\n\t\t// const entitiesDependent = this.param.options.isExpressionForEntities()\n\t\tconst entitiesDependent = this._entitiesDependent;\n\t\tif (entitiesDependent) {\n\t\t\treturn `\n\t\t\tconst ${VAR_ENTITIES} = param.expressionController.entities();\n\t\t\t\n\t\t\tif(${VAR_ENTITIES}){\n\t\t\t\treturn new Promise( async (resolve, reject)=>{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst entityCallback = param.expressionController.entityCallback();\n\t\t\t\t\t\t// assign_attributes_lines\n\t\t\t\t\t\t${this._attribute_requirements_controller.assignAttributesLines()}\n\t\t\t\t\t\t// check if attributes are present\n\t\t\t\t\t\tif( ${this._attribute_requirements_controller.attributePresenceCheckLine()} ){\n\t\t\t\t\t\t\t// assign function\n\t\t\t\t\t\t\tconst ${FUNC_GET_ENTITY_ATTRIBUTE_VALUE} = ${FUNC_GET_ENTITY_ATTRIBUTE_VALUE_FUNC}(entities[0]);\n\t\t\t\t\t\t\t// assign_arrays_lines\n\t\t\t\t\t\t\t${this._attribute_requirements_controller.assignArraysLines()}\n\t\t\t\t\t\t\tfor(const ${VAR_ENTITY} of ${VAR_ENTITIES}){\n\t\t\t\t\t\t\t\tresult = ${this.function_main_string};\n\t\t\t\t\t\t\t\tentityCallback(${VAR_ENTITY}, result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst missingAttributes = ${this._attribute_requirements_controller.missingAttributesLine()}().join(', ');\n\t\t\t\t\t\t\tconst error = new Error('attribute ' + missingAttributes + ' not found')\n\t\t\t\t\t\t\t_set_error_from_error(error)\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t}catch(e){\n\t\t\t\t\t\t_set_error_from_error(e)\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn []`;\n\t\t} else {\n\t\t\treturn `\n\t\t\treturn new Promise( async (resolve, reject)=>{\n\t\t\t\ttry {\n\t\t\t\t\tconst value = ${this.function_main_string}\n\t\t\t\t\tresolve(value)\n\t\t\t\t} catch(e) {\n\t\t\t\t\t_set_error_from_error(e)\n\t\t\t\t\treject()\n\t\t\t\t}\n\t\t\t})\n\t\t\t`;\n\t\t}\n\t}\n\n\tevalAllowed(): boolean {\n\t\treturn this.function != null;\n\t}\n\tevalFunction() {\n\t\tif (this.function) {\n\t\t\tthis.clearError();\n\n\t\t\tconst result = this.function(...FUNCTION_ARGS, this.param, this.methods, this._set_error_from_error_bound);\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t//\n\t//\n\t// TRAVERSE METHODS\n\t//\n\t//\n\tprotected traverse_CallExpression(node: jsep.CallExpression): string | undefined {\n\t\tconst methodArguments = node.arguments.map((arg) => {\n\t\t\treturn this.traverse_node(arg);\n\t\t});\n\t\tconst callee = node.callee as jsep.Identifier;\n\t\tconst method_name = callee.name;\n\t\tif (method_name) {\n\t\t\t// literal construct (if...)\n\t\t\tconst literal_contruct = LITERAL_CONSTRUCT[method_name];\n\t\t\tif (literal_contruct) {\n\t\t\t\treturn literal_contruct(methodArguments);\n\t\t\t}\n\n\t\t\t// direct expressions (Math.floor, Math.sin...)\n\t\t\tconst arguments_joined = `${methodArguments.join(ARGUMENTS_SEPARATOR)}`;\n\t\t\tconst direct_function_name = DIRECT_EXPRESSION_FUNCTIONS[method_name];\n\t\t\tif (direct_function_name) {\n\t\t\t\treturn `${direct_function_name}(${arguments_joined})`;\n\t\t\t}\n\n\t\t\t// indirect methods (pointsCount, asset...)\n\t\t\tconst expressionRegister = Poly.expressionsRegister;\n\t\t\tconst indirect_method = expressionRegister.getMethod(method_name);\n\t\t\tif (indirect_method) {\n\t\t\t\tconst pathNode = node.arguments[0];\n\t\t\t\t// const path_argument = this.string_generator.traverse_node(path_node)\n\t\t\t\tconst functionString = `return ${methodArguments[0]}`;\n\t\t\t\tlet pathArgumentFunction: MethodArgumentFunction | undefined;\n\t\t\t\tlet pathArgument: string | number | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tpathArgumentFunction = new Function(functionString) as MethodArgumentFunction;\n\t\t\t\t\tpathArgument = pathArgumentFunction();\n\t\t\t\t} catch {\n\t\t\t\t\t// path_argument_function = new AsyncFunction(function_string)\n\t\t\t\t\t// it looks like if the input contains an await,\n\t\t\t\t\t// it is because it has been generated by another indirect function.\n\t\t\t\t\t// This means that the dependencies have been generated already\n\t\t\t\t\t// so we may not need to do it now\n\t\t\t\t}\n\t\t\t\tthis._createMethodAndDependencies(method_name, pathArgument, pathNode);\n\n\t\t\t\treturn `(await methods[${this.method_index}].processArguments([${arguments_joined}]))`;\n\t\t\t} else {\n\t\t\t\tconst available_methods = expressionRegister.availableMethods().join(', ');\n\t\t\t\tconst message = `method not found (${method_name}), available methods are: ${available_methods}`;\n\t\t\t\tPoly.warn(message);\n\t\t\t}\n\t\t}\n\n\t\tthis.setError(`unknown method: ${method_name}`);\n\t}\n\tprotected override traverse_BinaryExpression(node: jsep.BinaryExpression): string {\n\t\t// if(node.right.type == 'Identifier'){\n\t\t// \tthis.set_error(`cannot have identifier after ${node.operator}`)\n\t\t// \treturn \"\"\n\t\t// }\n\t\treturn `(${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)})`;\n\t}\n\t// protected override traverse_LogicalExpression(node: jsep.LogicalExpression): string {\n\t// \t// || or &&\n\t// \t// if(node.right.type == 'Identifier'){\n\t// \t// \tthis.set_error(`cannot have identifier after ${node.operator}`)\n\t// \t// \treturn \"\"\n\t// \t// }\n\t// \treturn `(${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)})`;\n\t// }\n\t// protected override traverse_MemberExpression(node: jsep.MemberExpression): string {\n\t// \treturn `${this.traverse_node(node.object)}.${this.traverse_node(node.property)}`;\n\t// }\n\tprotected traverse_UnaryExpression(node: jsep.UnaryExpression): string {\n\t\tif (node.operator === ATTRIBUTE_PREFIX) {\n\t\t\tthis._entitiesDependent = true;\n\t\t\tlet argument = node.argument;\n\t\t\tlet attributeName: string | undefined;\n\t\t\tlet property;\n\t\t\tswitch (argument.type) {\n\t\t\t\tcase 'Identifier': {\n\t\t\t\t\tconst argument_identifier = (<unknown>argument) as jsep.Identifier;\n\t\t\t\t\tattributeName = argument_identifier.name;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'MemberExpression': {\n\t\t\t\t\tconst argument_member_expression = (<unknown>argument) as jsep.MemberExpression;\n\t\t\t\t\tconst attrib_node = argument_member_expression.object as jsep.Identifier;\n\t\t\t\t\tconst property_node = argument_member_expression.property as jsep.Identifier;\n\t\t\t\t\tattributeName = attrib_node.name;\n\t\t\t\t\tproperty = property_node.name;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// this.function_pre_body += `\n\t\t\t// param.entity_attrib_value(${QUOTE}${attrib_node.name}${QUOTE}, param.entity_attrib_values.position);\n\t\t\t// `\n\t\t\tif (attributeName) {\n\t\t\t\tattributeName = CoreAttribute.remapName(attributeName);\n\t\t\t\tif (attributeName == Attribute.POINT_INDEX || attributeName == Attribute.OBJECT_INDEX) {\n\t\t\t\t\treturn `((${VAR_ENTITY} != null) ? ${VAR_ENTITY}.index() : 0)`;\n\t\t\t\t} else {\n\t\t\t\t\tconst var_attribute_size = this._attribute_requirements_controller.varAttributeSize(attributeName);\n\t\t\t\t\tconst var_array = this._attribute_requirements_controller.varArray(attributeName);\n\t\t\t\t\tthis._attribute_requirements_controller.add(attributeName);\n\t\t\t\t\tlet propertyOffset = property ? PROPERTY_OFFSETS[property] : 0;\n\t\t\t\t\tif (propertyOffset == null) {\n\t\t\t\t\t\tpropertyOffset = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// if (property) {\n\t\t\t\t\t// \tconst property_offset = PROPERTY_OFFSETS[property];\n\t\t\t\t\t// \treturn `${var_array}[entity.index()*${var_attribute_size}+${property_offset}]`;\n\t\t\t\t\t// } else {\n\t\t\t\t\t// \treturn `${var_array}[entity.index()*${var_attribute_size}]`;\n\t\t\t\t\t// }\n\t\t\t\t\treturn `${FUNC_GET_ENTITY_ATTRIBUTE_VALUE}(${VAR_ENTITY}, '${attributeName}', ${var_array}, ${var_attribute_size}, ${propertyOffset})`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('attribute not found');\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\treturn `${node.operator}${this.traverse_node(node.argument)}`; // -5\n\t\t}\n\t}\n\n\t// protected override traverse_Literal(node: jsep.Literal): string {\n\t// \treturn `${node.raw}`; // 5 or 'string' (raw will include quotes)\n\t// }\n\n\tprotected traverse_Identifier(node: jsep.Identifier): string | undefined {\n\t\tconst identifier_first_char = node.name[0];\n\t\tif (identifier_first_char == VARIABLE_PREFIX) {\n\t\t\tconst identifier_name_without_dollar_sign = node.name.substring(1);\n\n\t\t\t// globals constants: Math.PI or Math.E\n\t\t\tconst direct_constant_name = GLOBAL_CONSTANTS[identifier_name_without_dollar_sign];\n\t\t\tif (direct_constant_name) {\n\t\t\t\treturn direct_constant_name;\n\t\t\t}\n\n\t\t\t// scene or node globals: $F, $T, $OS, $CH, $OS\n\t\t\tconst method_name = `traverse_Identifier_${identifier_name_without_dollar_sign}`;\n\t\t\tconst method = (this as any)[method_name];\n\t\t\tif (method) {\n\t\t\t\treturn (this as any)[method_name]();\n\t\t\t} else {\n\t\t\t\tthis.setError(`identifier unknown: ${node.name}`);\n\t\t\t}\n\t\t} else {\n\t\t\treturn node.name; // @ptnum will call this method and return \"ptnum\"\n\t\t}\n\t}\n\n\t//\n\t//\n\t// Identifier methods (called from Identifier_body)\n\t//\n\t//\n\tprotected traverse_Identifier_F(): string {\n\t\tthis.immutableDependencies.push(this.param.scene().timeController.graphNode);\n\t\treturn `param.scene().timeController.frame()`;\n\t}\n\t// protected traverse_Identifier_FPS(): string {\n\t// \tthis.immutable_dependencies.push(this.param.scene().timeController.graphNode);\n\t// \treturn `param.scene().timeController.fps`;\n\t// }\n\tprotected traverse_Identifier_T(): string {\n\t\tthis.immutableDependencies.push(this.param.scene().timeController.graphNode);\n\t\treturn `param.scene().timeController.time()`;\n\t}\n\tprotected traverse_Identifier_OS(): string {\n\t\tconst nameNode = this.param.node.nameController.graphNode();\n\t\tthis.param.addGraphInput(nameNode);\n\n\t\treturn `param.node.name()`;\n\n\t\t// return `${QUOTE}${this.param.node.name()}${QUOTE}`;\n\t}\n\tprotected traverse_Identifier_CH(): string {\n\t\treturn `${QUOTE}${this.param.name()}${QUOTE}`;\n\t}\n\tprotected traverse_Identifier_CEX(): string {\n\t\treturn this._method_centroid('x');\n\t}\n\tprotected traverse_Identifier_CEY(): string {\n\t\treturn this._method_centroid('y');\n\t}\n\tprotected traverse_Identifier_CEZ(): string {\n\t\treturn this._method_centroid('z');\n\t}\n\t// TODO:\n\t// '$OS': '_eval_identifier_as_node_name',\n\t// '$BBX': '_eval_identifier_as_bounding_box_relative',\n\n\tprivate _method_centroid(component: string): string {\n\t\tconst method_arguments = [0, `${QUOTE}${component}${QUOTE}`];\n\t\tconst arguments_joined = method_arguments.join(ARGUMENTS_SEPARATOR);\n\t\tthis._createMethodAndDependencies('centroid', 0);\n\t\treturn `(await methods[${this.method_index}].processArguments([${arguments_joined}]))`;\n\t}\n\n\t//\n\t//\n\t// Methods dependencies\n\t//\n\t//\n\tprivate _createMethodAndDependencies(\n\t\tmethodName: string,\n\t\tpathArgument: number | string | undefined,\n\t\tpathNode?: jsep.Expression\n\t) {\n\t\tconst expressionRegister = Poly.expressionsRegister;\n\t\tconst methodConstructor = expressionRegister.getMethod(methodName);\n\t\tif (!methodConstructor) {\n\t\t\tconst availableMethods = expressionRegister.availableMethods();\n\t\t\tconst message = `method not found (${methodName}), available methods are: ${availableMethods.join(', ')}`;\n\t\t\tthis.setError(message);\n\t\t\tPoly.warn(message);\n\t\t\treturn;\n\t\t}\n\t\tconst method = new methodConstructor(this.param) as BaseMethod;\n\t\tthis.method_index += 1;\n\t\tthis.methods[this.method_index] = method;\n\n\t\tconst methodDependency = method.findDependency({indexOrPath: pathArgument});\n\t\tif (methodDependency) {\n\t\t\tif (pathNode) {\n\t\t\t\tmethodDependency.set_jsep_node(pathNode);\n\t\t\t}\n\t\t\tthis.methodDependencies.push(methodDependency);\n\t\t} else {\n\t\t\tif (pathNode && CoreType.isString(pathArgument)) {\n\t\t\t\tthis.param.scene().missingExpressionReferencesController.register(this.param, pathArgument, pathNode);\n\t\t\t}\n\t\t}\n\t\t// method_dependencies.resolved_graph_nodes.forEach((graph_node)=>{\n\t\t// \tif(path_node){\n\t\t// \t\tconst jsep_dependency = new JsepDependency(graph_node, path_node)\n\t\t// \t\tthis.jsep_dependencies.push(jsep_dependency)\n\t\t// \t} else {\n\t\t// \t\tthis.immutable_dependencies.push(graph_node)\n\t\t// \t}\n\n\t\t// })\n\n\t\t// if(path_node){\n\t\t// \treference_search_result.missing_paths.forEach((path)=>{\n\t\t// \t\tthis.jsep_nodes_by_missing_paths[path] = this.jsep_nodes_by_missing_paths[path] || []\n\t\t// \t\tthis.jsep_nodes_by_missing_paths[path].push(path_node)\n\t\t// \t})\n\t\t// }\n\t}\n}\n","import {BaseParamType} from '../../params/_Base';\nimport {ParsedTree} from './ParsedTree';\nimport jsep from 'jsep';\n\nconst ARGUMENTS_SEPARATOR = ', ';\n\nimport {BaseTraverser} from './_Base';\n\nexport class ExpressionStringGenerator extends BaseTraverser {\n\tconstructor(public override param: BaseParamType) {\n\t\tsuper(param);\n\t}\n\n\tparseTree(parsedTree: ParsedTree) {\n\t\tconst node = parsedTree.node();\n\t\tif (parsedTree.errorMessage() == null && node) {\n\t\t\ttry {\n\t\t\t\treturn this.traverse_node(node);\n\t\t\t} catch (e) {\n\t\t\t\tthis.setError('could not traverse tree');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setError('cannot parse tree');\n\t\t}\n\t}\n\n\tprotected traverse_CallExpression(node: jsep.CallExpression): string {\n\t\tconst methodArguments = node.arguments.map((arg) => {\n\t\t\treturn this.traverse_node(arg);\n\t\t});\n\t\tconst argumentsJoined = `${methodArguments.join(ARGUMENTS_SEPARATOR)}`;\n\n\t\tconst methodName = (node.callee as jsep.Identifier).name;\n\t\treturn `${methodName}(${argumentsJoined})`;\n\t}\n\tprotected traverse_UnaryExpression(node: jsep.UnaryExpression): string {\n\t\treturn `${node.operator}${this.traverse_node(node.argument)}`; // -5\n\t}\n\n\tprotected traverse_Identifier(node: jsep.Identifier): string {\n\t\treturn `${node.name}`;\n\t}\n}\n","import {BaseParamType} from '../params/_Base';\nimport {FunctionGenerator} from './traversers/FunctionGenerator';\nimport {MethodDependency} from './MethodDependency';\nimport jsep from 'jsep';\n\nexport interface JsepsByString {\n\t[propName: string]: jsep.Expression[];\n}\n\nexport class DependenciesController {\n\tprivate _errorMessage: string | undefined;\n\tprivate _cyclicGraphDetected: boolean = false;\n\tprivate methodDependencies: MethodDependency[] = [];\n\n\tconstructor(public param: BaseParamType) {}\n\n\tprotected setError(message: string) {\n\t\tthis._errorMessage = this._errorMessage || message;\n\t}\n\n\terrorMessage() {\n\t\treturn this._errorMessage;\n\t}\n\n\treset() {\n\t\tthis.param.graphDisconnectPredecessors();\n\n\t\tthis.methodDependencies.forEach((methodDependency) => {\n\t\t\tmethodDependency.reset();\n\t\t});\n\t\tthis.methodDependencies = [];\n\n\t\t// this.jsep_nodes_by_missing_paths = {}\n\t\t// const ref_ids = Object.keys(this.missing_expression_references_by_id)\n\t\t// ref_ids.forEach(ref_id=>{\n\t\t// \tconst ref = this.missing_expression_references_by_id[ref_id]\n\t\t// \tthis.references_controller.unregister(ref)\n\t\t// })\n\t\t// this.missing_expression_references_by_id = {}\n\n\t\t// this.names_listeners.forEach(names_listener=>{names_listener.reset()})\n\t}\n\n\tupdate(functionGenerator: FunctionGenerator) {\n\t\t// const immutable_dependencies = function_generator.immutable_dependencies\n\t\t// const jsep_dependencies = function_generator.jsep_dependencies\n\t\t// const jsep_nodes_by_missing_paths = function_generator.jsep_nodes_by_missing_paths\n\n\t\t// if(jsep_dependencies.length > 0){\n\t\t// \tconsole.log(\"connect_param_to_dependencies\", this.param.path())\n\t\t// }\n\n\t\tthis._cyclicGraphDetected = false;\n\n\t\tthis._connectImmutableDependencies(functionGenerator);\n\t\tthis.methodDependencies = functionGenerator.methodDependencies;\n\t\tthis._handleMethodDependencies();\n\t\t// this.connect_missing_paths(function_generator)\n\n\t\tthis._listenForNameChanges();\n\t}\n\n\tprivate _connectImmutableDependencies(functionGenerator: FunctionGenerator) {\n\t\tconst dependendies = functionGenerator.immutableDependencies;\n\t\tfor (const dependency of dependendies) {\n\t\t\tif (this._cyclicGraphDetected == false) {\n\t\t\t\tif (this.param.addGraphInput(dependency) == false) {\n\t\t\t\t\tthis._cyclicGraphDetected = true;\n\t\t\t\t\tthis.setError('cannot create expression, infinite graph detected');\n\t\t\t\t\tthis.reset();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _handleMethodDependencies() {\n\t\tthis.methodDependencies.forEach((methodDependency) => {\n\t\t\tif (this._cyclicGraphDetected == false) {\n\t\t\t\tthis._handleMethodDependency(methodDependency);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _handleMethodDependency(method_dependency: MethodDependency) {\n\t\tconst node_simple = method_dependency.resolved_graph_node;\n\n\t\tif (node_simple) {\n\t\t\t// this should update the jsep_node, and run the expression to string parser\n\t\t\t// when a name in the referenced nodes is updated\n\t\t\t// const names_listener = new NamesListener(this.param, node_simple, jsep_node)\n\t\t\t// TODO: test that it is no longer active if expression is updated\n\n\t\t\tif (!this.param.addGraphInput(node_simple)) {\n\t\t\t\tthis._cyclicGraphDetected = true;\n\t\t\t\tthis.setError('cannot create expression, infinite graph detected');\n\t\t\t\tthis.reset();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} // else {\n\t\t// const jsep_node = method_dependency.jsep_node\n\t\t//}\n\t}\n\n\tprivate _listenForNameChanges() {\n\t\tthis.methodDependencies.forEach((methodDependency) => {\n\t\t\tmethodDependency.listen_for_name_changes();\n\t\t});\n\t}\n\n\t// private connect_missing_paths(function_generator: FunctionGenerator){\n\n\t// \tconst jsep_nodes_by_missing_paths = function_generator.jsep_nodes_by_missing_paths\n\t// \tconst missing_paths = Object.keys(jsep_nodes_by_missing_paths)\n\n\t// \tmissing_paths.forEach((missing_path)=>{\n\t// \t\tconst fullPath = CoreWalker.make_absolute(this.param.node(), missing_path)\n\t// \t\tconst jsep_nodes = jsep_nodes_by_missing_paths[missing_path]\n\t// \t\tjsep_nodes.forEach(jsep_node=>{\n\t// \t\t\tconst missing_expression_reference = this.references_controller.register(this.param, jsep_node, fullPath)\n\n\t// \t\t\tthis.missing_expression_references_by_id[missing_expression_reference.id] = missing_expression_reference\n\t// \t\t})\n\t// \t})\n\n\t// }\n}\n","import {BaseParamType} from '../params/_Base';\nimport {ParsedTree} from './traversers/ParsedTree';\nimport {FunctionGenerator} from './traversers/FunctionGenerator';\nimport {ExpressionStringGenerator} from './traversers/ExpressionStringGenerator';\nimport {DependenciesController} from './DependenciesController';\nimport {Poly} from '../Poly';\n\nexport class ExpressionManager {\n\tprivate _parseStarted: boolean = false;\n\tprivate _functionGenerator: FunctionGenerator;\n\tprivate _expressionStringGenerator: ExpressionStringGenerator | undefined;\n\tpublic dependenciesController: DependenciesController;\n\tprivate parsedTree: ParsedTree = new ParsedTree(this.param);\n\n\tconstructor(\n\t\tpublic param: BaseParamType // public element_index: number=0\n\t) {\n\t\tthis._functionGenerator = new FunctionGenerator(this.param);\n\t\tthis.dependenciesController = new DependenciesController(this.param);\n\t}\n\tgeneratedFunctionEntitiesDependent() {\n\t\treturn this._functionGenerator.entitiesDependent();\n\t}\n\n\tparseExpression(expression: string) {\n\t\tif (this._parseStarted) {\n\t\t\tthrow new Error(`parse in progress for param ${this.param.path()}`);\n\t\t}\n\t\tthis._parseStarted = true;\n\t\tthis.parsedTree = this.parsedTree || new ParsedTree(this.param);\n\n\t\tthis.reset();\n\t\tif (this.param.expressionParsedAsString()) {\n\t\t\tthis.parsedTree.parseExpressionForStringParam(expression);\n\t\t} else {\n\t\t\tthis.parsedTree.parseExpression(expression);\n\t\t}\n\t\tthis._functionGenerator.parseTree(this.parsedTree);\n\n\t\tif (this._functionGenerator.errorMessage() == null) {\n\t\t\tthis.dependenciesController.update(this._functionGenerator);\n\t\t\tconst errorMessage = this.dependenciesController.errorMessage();\n\t\t\tif (errorMessage) {\n\t\t\t\tthis.param.states.error.set(errorMessage);\n\t\t\t} else {\n\t\t\t\tthis._parseStarted = false;\n\t\t\t}\n\t\t} //else {\n\t\t//this.set_error(this.function_generator.error_message);\n\t\t//}\n\t}\n\tasync computeFunction(): Promise<any> {\n\t\tif (this._computeAllowed()) {\n\t\t\ttry {\n\t\t\t\tconst newValue = await this._functionGenerator.evalFunction();\n\t\t\t\treturn newValue;\n\t\t\t} catch (e) {\n\t\t\t\tPoly.error('error while evaluating expression', e);\n\t\t\t}\n\t\t} else {\n\t\t\tPoly.error('compute not allowed');\n\t\t}\n\t}\n\n\treset() {\n\t\tthis._parseStarted = false;\n\t\tthis.dependenciesController.reset();\n\t\tthis._functionGenerator.reset();\n\t}\n\n\tisErrored(): boolean {\n\t\treturn this._functionGenerator.isErrored();\n\t}\n\terrorMessage() {\n\t\treturn this._functionGenerator.errorMessage();\n\t}\n\n\tprivate _computeAllowed(): boolean {\n\t\treturn this._functionGenerator.evalAllowed();\n\t}\n\n\tupdateFromMethodDependencyNameChange() {\n\t\tthis._expressionStringGenerator = this._expressionStringGenerator || new ExpressionStringGenerator(this.param);\n\n\t\tconst newExpressionString = this._expressionStringGenerator.parseTree(this.parsedTree);\n\n\t\tif (newExpressionString) {\n\t\t\tthis.param.set(newExpressionString);\n\t\t} else {\n\t\t\tconsole.warn('failed to regenerate expression');\n\t\t}\n\t}\n}\n","import {CoreGroup} from './../../../core/geometry/Group';\nimport {BaseParamType} from '../_Base';\nimport {ExpressionManager} from '../../expressions/ExpressionManager';\nimport type {CorePoint} from '../../../core/geometry/entities/point/CorePoint';\nimport type {CoreVertex} from '../../../core/geometry/entities/vertex/CoreVertex';\nimport type {CorePrimitive} from '../../../core/geometry/entities/primitive/CorePrimitive';\nimport {CoreEntity} from '../../../core/geometry/CoreEntity';\nimport {ParamType} from '../../poly/ParamType';\nimport {ParamValuesTypeMap} from '../types/ParamValuesTypeMap';\nimport {BaseCoreObject} from '../../../core/geometry/entities/object/BaseCoreObject';\nimport {MethodDependency} from '../../expressions/MethodDependency';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\nimport {CoreObjectType} from '../../../core/geometry/ObjectContent';\n\n// type ParamTypeElem = ParamType;\ntype EntityCallback<T extends ParamType> = (\n\tentity: CoreEntity,\n\tvalue: ParamValuesTypeMap[T] | any /*TODO: typescript: any is used here mostly to compile*/\n) => void;\ntype PointEntityCallback<T extends ParamType> = (\n\tentity: CorePoint<CoreObjectType>,\n\tvalue: ParamValuesTypeMap[T] | any /*TODO: typescript: any is used here mostly to compile*/\n) => void;\ntype ObjectEntityCallback<T extends ParamType> = (\n\tentity: BaseCoreObject<CoreObjectType>,\n\tvalue: ParamValuesTypeMap[T] | any /*TODO: typescript: any is used here mostly to compile*/\n) => void;\ntype CoreGroupEntityCallback<T extends ParamType> = (\n\tentity: CoreGroup,\n\tvalue: ParamValuesTypeMap[T] | any /*TODO: typescript: any is used here mostly to compile*/\n) => void;\n\nexport class ExpressionController<T extends ParamType> {\n\tprotected _expression: string | undefined;\n\tprotected _entities: CoreEntity[] | undefined;\n\tprotected _entityCallback: EntityCallback<T> | undefined;\n\tprotected _manager: ExpressionManager | undefined;\n\tprotected _methodDependenciesByGraphNodeId: Map<CoreGraphNodeId, MethodDependency> | undefined;\n\t// private _reset_bound = this.reset.bind(this);\n\tconstructor(protected param: BaseParamType) {\n\t\t// this.param.dirtyController.addPostDirtyHook('expression_controller_reset', this._reset_bound);\n\t}\n\t// remove_dirty_hook() {\n\t// \t// this.param.dirtyController.removePostDirtyHook('expression_controller_reset');\n\t// }\n\tdispose() {\n\t\tthis.param.scene().expressionsController.deregisterParam(this.param);\n\t\tthis._resetMethodDependencies();\n\t\tthis._manager = undefined;\n\t}\n\tprivate _resetMethodDependencies() {\n\t\tthis._methodDependenciesByGraphNodeId?.forEach((methodDependency) => {\n\t\t\tmethodDependency.dispose();\n\t\t});\n\t\tthis._methodDependenciesByGraphNodeId?.clear();\n\t}\n\tregisterMethodDependency(methodDependency: MethodDependency) {\n\t\tthis._methodDependenciesByGraphNodeId = this._methodDependenciesByGraphNodeId || new Map();\n\t\tthis._methodDependenciesByGraphNodeId.set(methodDependency.graphNodeId(), methodDependency);\n\t}\n\n\tactive() {\n\t\treturn this._expression != null;\n\t}\n\texpression() {\n\t\treturn this._expression;\n\t}\n\tisErrored() {\n\t\tif (this._manager) {\n\t\t\treturn this._manager.isErrored();\n\t\t}\n\t\treturn false;\n\t}\n\terrorMessage() {\n\t\tif (this._manager) {\n\t\t\treturn this._manager.errorMessage();\n\t\t}\n\t\treturn null;\n\t}\n\tentitiesDependent(): boolean {\n\t\tconst managerEntitiesDependent: boolean = this._manager?.generatedFunctionEntitiesDependent() || false;\n\t\treturn this.param.options.isExpressionForEntities() && managerEntitiesDependent;\n\t}\n\t// private reset() {\n\t// \tthis._manager?.clear_error();\n\t// }\n\n\tsetExpression(expression: string | undefined, setDirty: boolean = true) {\n\t\tif (this.param.disposed()) {\n\t\t\tthis._resetMethodDependencies();\n\t\t\tthis._expression = undefined;\n\t\t\treturn;\n\t\t}\n\t\tthis.param.scene().missingExpressionReferencesController.deregisterParam(this.param);\n\t\tthis.param.scene().expressionsController.deregisterParam(this.param);\n\n\t\tif (this._expression != expression) {\n\t\t\tthis._resetMethodDependencies();\n\t\t\tthis._expression = expression;\n\n\t\t\tif (this._expression) {\n\t\t\t\tthis._manager = this._manager || new ExpressionManager(this.param);\n\t\t\t\tthis._manager.parseExpression(this._expression);\n\t\t\t} else {\n\t\t\t\tthis._manager?.reset();\n\t\t\t}\n\n\t\t\tif (setDirty) {\n\t\t\t\tthis.param.setDirty();\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateFromMethodDependencyNameChange() {\n\t\tif (this._manager && this.active()) {\n\t\t\tthis._manager.updateFromMethodDependencyNameChange();\n\t\t}\n\t}\n\n\tcomputeExpression() {\n\t\tif (this._manager && this.active()) {\n\t\t\treturn this._manager.computeFunction();\n\t\t}\n\t}\n\tasync computeExpressionForEntities(entities: CoreEntity[], callback: EntityCallback<T>) {\n\t\tthis._setEntities(entities, callback);\n\t\tawait this.computeExpression();\n\t\tconst errorMessage = this._manager?.errorMessage();\n\t\tif (errorMessage) {\n\t\t\tthis.param.node.states.error.set(`expression evaluation error: ${errorMessage}`);\n\t\t}\n\n\t\tthis._resetEntities();\n\t}\n\tcomputeExpressionForPoints(entities: CorePoint<CoreObjectType>[], callback: PointEntityCallback<T>) {\n\t\treturn this.computeExpressionForEntities(entities, callback as EntityCallback<T>);\n\t}\n\tcomputeExpressionForVertices(entities: CoreVertex<CoreObjectType>[], callback: PointEntityCallback<T>) {\n\t\treturn this.computeExpressionForEntities(entities, callback as EntityCallback<T>);\n\t}\n\tcomputeExpressionForPrimitives(entities: CorePrimitive<CoreObjectType>[], callback: PointEntityCallback<T>) {\n\t\treturn this.computeExpressionForEntities(entities, callback as EntityCallback<T>);\n\t}\n\tcomputeExpressionForObjects<OT extends CoreObjectType>(\n\t\tentities: BaseCoreObject<OT>[],\n\t\tcallback: ObjectEntityCallback<T>\n\t) {\n\t\treturn this.computeExpressionForEntities(entities, callback as EntityCallback<T>);\n\t}\n\tcomputeExpressionForCoreGroup(entity: CoreGroup, callback: CoreGroupEntityCallback<T>) {\n\t\treturn this.computeExpressionForEntities([entity], callback as EntityCallback<T>);\n\t}\n\tentities() {\n\t\treturn this._entities;\n\t}\n\tentityCallback() {\n\t\treturn this._entityCallback;\n\t}\n\tprivate _setEntities(entities: CoreEntity[], callback: EntityCallback<T>) {\n\t\tthis._entities = entities;\n\t\tthis._entityCallback = callback;\n\t}\n\tprivate _resetEntities() {\n\t\tthis._entities = undefined;\n\t\tthis._entityCallback = undefined;\n\t}\n}\n","import {BaseParamType} from '../_Base';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {ParamType} from '../../poly/ParamType';\nimport {ParamEvent} from '../../poly/ParamEvent';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {ColorConversion} from '../../../core/Color';\nimport {CoreType, isFunction} from '../../../core/Type';\nimport {arrayDifference, arrayCompact, arrayUniq} from '../../../core/ArrayUtils';\nimport {objectCloneDeep, objectIsEqual} from '../../../core/ObjectUtils';\nimport {PolyScene} from '../../scene/PolyScene';\nimport {Boolean2, Number2, PolyDictionary} from '../../../types/GlobalTypes';\n\nconst CALLBACK_OPTION = 'callback';\nconst CALLBACK_STRING_OPTION = 'callbackString';\n// const COLOR_OPTION = 'color';\nconst COMPUTE_ON_DIRTY = 'computeOnDirty';\nconst COOK_OPTION = 'cook';\nconst FILE_BROWSE_OPTION = 'fileBrowse';\nconst FILE_BROWSE_EXTENSIONS = 'extensions';\n// const EXPRESSION_ONLY_OPTION = 'expression_only';\nconst EXPRESSION = 'expression';\nconst FOR_ENTITIES = 'forEntities';\nconst LABEL = 'label';\nconst HIDE_LABEL = 'hideLabel';\nconst LEVEL = 'level';\nconst MENU = 'menu';\nconst MENU_STRING = 'menuString';\nconst ENTRIES = 'entries';\n// const TYPE = 'type';\n// const RADIO = 'radio';\nconst MULTILINE_OPTION = 'multiline';\nconst LANGUAGE_OPTION = 'language';\nconst NODE_SELECTION = 'nodeSelection';\nconst NODE_SELECTION_CONTEXT = 'context';\nconst NODE_SELECTION_TYPES = 'types';\nconst OBJECT_MASK = 'objectMask';\nconst OBJECT_MASK_INPUT_INDEX = 'inputIndex';\n// const PARAM_SELECTION = 'paramSelection';\nconst DEPENDENT_ON_FOUND_NODE = 'dependentOnFoundNode';\nconst DEPENDENT_ON_FOUND_PARAM = 'dependentOnFoundParam';\nconst RANGE_OPTION = 'range';\nconst RANGE_LOCKED_OPTION = 'rangeLocked';\nconst STEP_OPTION = 'step';\nconst SPARE_OPTION = 'spare';\nconst TEXTURE_OPTION = 'texture';\nconst ENV_OPTION = 'env';\nconst HIDDEN_OPTION = 'hidden';\n// const SHOW_LABEL_OPTION = 'show_label';\nconst FIELD_OPTION = 'field';\nconst VISIBLE_IF_OPTION = 'visibleIf';\nconst COLOR_CONVERSION = 'conversion';\n\nconst SEPARATOR_BEFORE_OPTION = 'separatorBefore';\nconst SEPARATOR_AFTER_OPTION = 'separatorAfter';\nconst JOIN_TO_PREVIOUS_PARAM = 'joinToPreviousParam';\nconst AS_QUATERNION = 'asQuaternion';\n\nexport const PARAM_OPTION_NAMES = {\n\tCALLBACK_OPTION,\n};\n\nconst EDITABLE = 'editable';\n\nexport interface GenericParamOptionsMenuEntry<T> {\n\tname: string;\n\tvalue: T;\n}\nexport type StringParamOptionsMenuEntry = GenericParamOptionsMenuEntry<string>;\nexport type NumericParamOptionsMenuEntry = GenericParamOptionsMenuEntry<number>;\n\nexport interface MenuNumericParamOptions {\n\tmenu?: {\n\t\tentries: NumericParamOptionsMenuEntry[];\n\t};\n}\nexport interface MenuStringParamOptions {\n\tmenuString?: {\n\t\tentries: StringParamOptionsMenuEntry[];\n\t};\n}\nexport enum StringParamLanguage {\n\t// JAVASCRIPT = 'javascript',\n\tCSS = 'css',\n\tGLSL = 'glsl',\n\tHTML = 'html',\n\tTYPESCRIPT = 'typescript',\n\tJSON = 'json',\n\t// GLSL = 'glsl',\n}\n\nexport enum FileType {\n\tAUDIO = 'audio',\n\tTEXTURE_IMAGE = 'texture_image',\n\tTEXTURE_VIDEO = 'texture_video',\n\tGEOMETRY = 'geometry',\n\tFONT = 'font',\n\tSVG = 'svg',\n\tJSON = 'json',\n}\n\nexport type VisibleIfParamOptions = PolyDictionary<number | boolean | string>;\nexport interface BaseParamOptions {\n\t// cook\n\tcook?: boolean;\n\t// spare\n\tspare?: boolean;\n\t// visible\n\thidden?: boolean;\n\t// show_label?: boolean;\n\tfield?: boolean;\n\tvisibleIf?: VisibleIfParamOptions | VisibleIfParamOptions[];\n\t// separator\n\tseparatorBefore?: boolean;\n\tseparatorAfter?: boolean;\n\tjoinToPreviousParam?: boolean;\n\t// editable\n\teditable?: boolean;\n}\n\ninterface ExpressionParamOptions {\n\texpression?: {\n\t\tforEntities?: boolean;\n\t};\n}\n\ninterface NumberParamOptions extends BaseParamOptions {\n\trange?: Number2;\n\trangeLocked?: Boolean2;\n\tstep?: number;\n}\n\ninterface FileParamOptions {\n\tfileBrowse?: {\n\t\textensions: string[];\n\t};\n}\ninterface ComputeOnDirtyParamOptions {\n\tcomputeOnDirty?: boolean;\n}\ninterface CallbackParamOptions {\n\tcallback?: (node: BaseNodeType, param: BaseParamType) => any;\n\tcallbackString?: string;\n}\ninterface LabelParamOptions {\n\tlabel?: string;\n}\ninterface LabelVisibilityParamOptions {\n\thideLabel?: boolean;\n}\ninterface ColorConversionOptions {\n\tconversion?: ColorConversion;\n}\n\n// actual param options\nexport interface BooleanParamOptions\n\textends BaseParamOptions,\n\t\tComputeOnDirtyParamOptions,\n\t\tMenuNumericParamOptions,\n\t\tExpressionParamOptions,\n\t\tCallbackParamOptions,\n\t\tLabelParamOptions {}\nexport interface ButtonParamOptions extends BaseParamOptions, CallbackParamOptions, LabelParamOptions {}\nexport interface ColorParamOptions\n\textends BaseParamOptions,\n\t\tLabelParamOptions,\n\t\tColorConversionOptions,\n\t\tExpressionParamOptions,\n\t\tCallbackParamOptions,\n\t\tComputeOnDirtyParamOptions {}\nexport interface FloatParamOptions\n\textends NumberParamOptions,\n\t\tMenuNumericParamOptions,\n\t\tComputeOnDirtyParamOptions,\n\t\tExpressionParamOptions,\n\t\tCallbackParamOptions {}\nexport interface FolderParamOptions extends BaseParamOptions {\n\tlevel?: number;\n}\ninterface ObjectMask {\n\tinputIndex?: number;\n\tfromInputOnly?: boolean;\n}\ntype ObjectMaskOptions = ObjectMask | boolean;\nexport interface IntegerParamOptions\n\textends NumberParamOptions,\n\t\tMenuNumericParamOptions,\n\t\tComputeOnDirtyParamOptions,\n\t\tExpressionParamOptions,\n\t\tCallbackParamOptions {}\nexport interface NodePathParamOptions\n\textends BaseParamOptions,\n\t\tFileParamOptions,\n\t\tComputeOnDirtyParamOptions,\n\t\tCallbackParamOptions {\n\tnodeSelection?: {\n\t\tcontext?: NodeContext;\n\t\ttypes?: Readonly<string[]>;\n\t};\n\tdependentOnFoundNode?: boolean;\n}\nexport interface ParamPathParamOptions\n\textends BaseParamOptions,\n\t\tFileParamOptions,\n\t\tComputeOnDirtyParamOptions,\n\t\tCallbackParamOptions {\n\tdependentOnFoundParam?: boolean;\n\tparamSelection?: ParamType | boolean;\n}\nexport interface RampParamOptions extends BaseParamOptions, LabelVisibilityParamOptions {}\nexport interface SeparatorParamOptions extends BaseParamOptions {}\nexport interface StringParamOptions\n\textends BaseParamOptions,\n\t\tMenuStringParamOptions,\n\t\tFileParamOptions,\n\t\tCallbackParamOptions,\n\t\tExpressionParamOptions,\n\t\tLabelVisibilityParamOptions {\n\tmultiline?: boolean;\n\tlanguage?: StringParamLanguage;\n\tobjectMask?: ObjectMaskOptions;\n}\ninterface VectorParamOptions\n\textends BaseParamOptions,\n\t\tLabelParamOptions,\n\t\tExpressionParamOptions,\n\t\tCallbackParamOptions,\n\t\tComputeOnDirtyParamOptions {}\nexport interface Vector2ParamOptions extends VectorParamOptions {}\nexport interface Vector3ParamOptions extends VectorParamOptions {}\n\ninterface QuaternionOptions {\n\tasQuaternion?: boolean;\n}\nexport interface Vector4ParamOptions extends VectorParamOptions, QuaternionOptions {}\n\nexport interface ParamOptions\n\textends NumberParamOptions,\n\t\tColorConversionOptions,\n\t\tComputeOnDirtyParamOptions,\n\t\tFolderParamOptions,\n\t\tExpressionParamOptions,\n\t\tButtonParamOptions,\n\t\tFileParamOptions,\n\t\tMenuNumericParamOptions,\n\t\tStringParamOptions,\n\t\tNodePathParamOptions,\n\t\tParamPathParamOptions,\n\t\tLabelVisibilityParamOptions,\n\t\tQuaternionOptions {\n\ttexture?: {\n\t\tenv?: boolean;\n\t};\n}\n\n// type OptionChangeCallback = () => void;\n\n// we don't want to check if EDITABLE has been overriden,\n// as it is overriden dynamically for the gl nodes\n// and that override should therefore not be saved with the scene\nconst NON_OVERRIDABLE_OPTIONS: Array<keyof ParamOptions> = [EDITABLE];\n\nexport class OptionsController {\n\tprivate _programaticVisibleState: boolean = true;\n\tprivate _options!: ParamOptions;\n\tprivate _default_options!: ParamOptions;\n\tconstructor(private _param: BaseParamType) {}\n\tdispose() {\n\t\ttry {\n\t\t\t// there is a bug where the _options is just a string\n\t\t\t// for builder params. And accessing generates an error\n\t\t\tthis._options[CALLBACK_OPTION] = undefined;\n\t\t\tthis._options[CALLBACK_STRING_OPTION] = undefined;\n\t\t} catch (err) {}\n\t\tthis._visibility_graph_node?.dispose();\n\t}\n\n\tset(options: ParamOptions) {\n\t\tif (CoreType.isString(options)) {\n\t\t\tconsole.warn('options input invalid', options, typeof options);\n\t\t}\n\t\tthis._default_options = options;\n\t\tthis._options = objectCloneDeep(this._default_options);\n\t\tthis.postSetOptions();\n\t}\n\tcopy(options_controller: OptionsController) {\n\t\tthis._default_options = objectCloneDeep(options_controller.default());\n\t\tthis._options = objectCloneDeep(options_controller.current());\n\t\tthis.postSetOptions();\n\t}\n\tsetOption<K extends keyof ParamOptions>(optionName: K, value: ParamOptions[K]) {\n\t\tif (!this._validateOption(optionName, value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._options[optionName] = value;\n\t\tif (this._param.components) {\n\t\t\tfor (const component of this._param.components) {\n\t\t\t\tcomponent.options.setOption(optionName, value);\n\t\t\t}\n\t\t}\n\t\t// this._runOptionCallback(optionName);\n\t}\n\n\tprivate _validateOption<K extends keyof ParamOptions>(optionName: K, value: ParamOptions[K]) {\n\t\tif (optionName == CALLBACK_OPTION) {\n\t\t\treturn isFunction(value);\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate postSetOptions() {\n\t\tthis._handleComputeOnDirty();\n\t}\n\tparam() {\n\t\treturn this._param;\n\t}\n\tnode(): BaseNodeType {\n\t\treturn this._param.node;\n\t}\n\tdefault() {\n\t\treturn this._default_options;\n\t}\n\tcurrent() {\n\t\treturn this._options;\n\t}\n\n\t// utils\n\thasOptionsOverridden(): boolean {\n\t\treturn !objectIsEqual(this._options, this._default_options);\n\t}\n\toverriddenOptions(): ParamOptions {\n\t\tconst overriden: ParamOptions = {};\n\t\tconst optionNames = Object.keys(this._options) as Array<keyof ParamOptions>;\n\t\tconst optionNamesToCheck: Array<keyof ParamOptions> = [];\n\t\tarrayDifference(optionNames, NON_OVERRIDABLE_OPTIONS, optionNamesToCheck);\n\t\tfor (const optionName of optionNamesToCheck) {\n\t\t\tif (!objectIsEqual(this._options[optionName], this._default_options[optionName])) {\n\t\t\t\tconst cloned_option = objectCloneDeep(this._options[optionName]);\n\t\t\t\tObject.assign(overriden, {[optionName]: cloned_option});\n\t\t\t}\n\t\t}\n\t\treturn overriden;\n\t}\n\toverriddenOptionNames(): Array<keyof ParamOptions> {\n\t\treturn Object.keys(this.overriddenOptions()) as Array<keyof ParamOptions>;\n\t}\n\n\t// compute on dirty\n\tcomputeOnDirty(): boolean {\n\t\treturn this._options[COMPUTE_ON_DIRTY] || false;\n\t}\n\tprivate _computeOnDirtyCallbackAdded: boolean | undefined;\n\tprivate _handleComputeOnDirty() {\n\t\tif (this.computeOnDirty()) {\n\t\t\tif (!this._computeOnDirtyCallbackAdded) {\n\t\t\t\tthis.param().addPostDirtyHook('computeOnDirty', this._computeParam.bind(this));\n\t\t\t\tthis._computeOnDirtyCallbackAdded = true;\n\t\t\t}\n\t\t}\n\t}\n\tprivate async _computeParam() {\n\t\tawait this.param().compute();\n\t}\n\n\t// callback\n\thasCallback() {\n\t\treturn this._options[CALLBACK_OPTION] != null || this._options[CALLBACK_STRING_OPTION] != null;\n\t}\n\n\tprivate _callbackAllowed = false;\n\tallowCallback() {\n\t\tthis._callbackAllowed = true;\n\t}\n\n\tasync executeCallback() {\n\t\tif (!this._callbackAllowed) {\n\t\t\treturn;\n\t\t}\n\t\tconst node = this.node();\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst scene = node.scene();\n\t\tif (!scene) {\n\t\t\treturn;\n\t\t}\n\t\tconst callback = this.getCallback(node, scene);\n\t\tif (!callback) {\n\t\t\treturn;\n\t\t}\n\t\t// we only allow execution when scene is loaded\n\t\t// to avoid errors such as an operator_path param\n\t\t// executing its callback before the node it points to is created\n\t\tif (!scene.loadingController.loaded()) {\n\t\t\treturn;\n\t\t}\n\t\t// not running the callback when a node is cooking prevents some event nodes from behaving as expected.\n\t\t// It may also prevent files such as the sop/file to reload correctly if its reload callback was called while it loads a file\n\t\t// if (!this.node.cookController.is_cooking) {\n\t\tconst parentParam = this.param().parentParam();\n\t\tif (parentParam) {\n\t\t\t// if the param is a component of a MultipleParam,\n\t\t\t// we let the parent handle the callback.\n\t\t\t// The main reason is for material builder uniforms.\n\t\t\t// If the component executes the callback, the uniform that is expecting a vector\n\t\t\t// will be receiving a float. The reason is that the callback is created by the ParamConfig, and it is then passed down to the component unchanged.\n\t\t\t// I could maybe find a way so that the param config creates callback for the multiple param\n\t\t\t// and also for the components. But they would have to be assigned correctly by the multiple param\n\t\t\tparentParam.options.executeCallback();\n\t\t} else {\n\t\t\tawait callback(node, this.param());\n\t\t}\n\t}\n\tprivate getCallback(node: BaseNodeType, scene: PolyScene) {\n\t\tif (this.hasCallback()) {\n\t\t\treturn (this._options[CALLBACK_OPTION] =\n\t\t\t\tthis._options[CALLBACK_OPTION] || this.createCallbackFromString(node, scene));\n\t\t}\n\t}\n\tprivate createCallbackFromString(node: BaseNodeType, scene: PolyScene) {\n\t\tconst callbackString = this._options[CALLBACK_STRING_OPTION];\n\t\tif (callbackString) {\n\t\t\tconst callbackFunction = new Function('node', 'scene', 'window', 'location', callbackString);\n\t\t\treturn () => {\n\t\t\t\tcallbackFunction(node, scene, null, null);\n\t\t\t};\n\t\t}\n\t}\n\n\t// color\n\tcolorConversion() {\n\t\treturn this._options[COLOR_CONVERSION] || ColorConversion.NONE;\n\t}\n\n\t// cook\n\tmakesNodeDirtyWhenDirty() {\n\t\t// false as the dirty state will go through the parent param\n\t\tif (this.param().parentParam() != null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst cookOptions = this._options[COOK_OPTION];\n\t\tif (cookOptions != null) {\n\t\t\treturn cookOptions;\n\t\t}\n\t\treturn true;\n\t}\n\n\t// desktop\n\tfileBrowseOption() {\n\t\treturn this._options[FILE_BROWSE_OPTION];\n\t}\n\tfileBrowseAllowed(): boolean {\n\t\treturn this.fileBrowseOption() != null;\n\t}\n\tfileBrowseExtensions(): string[] | null {\n\t\tconst option = this.fileBrowseOption();\n\t\tif (option) {\n\t\t\treturn option[FILE_BROWSE_EXTENSIONS];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// separator\n\tseparatorBefore() {\n\t\treturn this._options[SEPARATOR_BEFORE_OPTION];\n\t}\n\tseparatorAfter() {\n\t\treturn this._options[SEPARATOR_AFTER_OPTION];\n\t}\n\tjoinToPreviousParam() {\n\t\treturn this._options[JOIN_TO_PREVIOUS_PARAM];\n\t}\n\t// editable\n\tsetEditableState(state: boolean) {\n\t\tconst currentState = this._options[EDITABLE];\n\t\tconst param = this.param();\n\t\tif (currentState != state) {\n\t\t\tthis._options[EDITABLE] = state;\n\t\t\tparam.emit(ParamEvent.EDITABLE_UPDATED);\n\t\t}\n\t\tif (param.components) {\n\t\t\tfor (const component of param.components) {\n\t\t\t\tcomponent.options.setEditableState(state);\n\t\t\t}\n\t\t}\n\t}\n\teditable(): boolean {\n\t\tconst state = this._options[EDITABLE];\n\t\tif (state != null) {\n\t\t\treturn state;\n\t\t}\n\t\treturn true;\n\t}\n\n\t// expression\n\t// get displays_expression_only() {\n\t// \treturn this._options[EXPRESSION_ONLY_OPTION] === true;\n\t// }\n\tisExpressionForEntities(): boolean {\n\t\tconst expr_option = this._options[EXPRESSION];\n\t\tif (expr_option) {\n\t\t\treturn expr_option[FOR_ENTITIES] || false;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// folder\n\tlevel() {\n\t\treturn this._options[LEVEL] || 0;\n\t}\n\n\t// menu\n\thasMenu() {\n\t\treturn this.menuOptions() != null || this.menuStringOptions() != null;\n\t}\n\n\tprivate menuOptions() {\n\t\treturn this._options[MENU];\n\t}\n\tprivate menuStringOptions() {\n\t\treturn this._options[MENU_STRING];\n\t}\n\tmenuEntries(): Array<NumericParamOptionsMenuEntry | StringParamOptionsMenuEntry> {\n\t\tconst options = this.menuOptions() || this.menuStringOptions();\n\t\tif (options) {\n\t\t\treturn options[ENTRIES];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tensureValueInMenuEntries(value: number): number {\n\t\tconst options = this.menuOptions();\n\t\tif (!options) {\n\t\t\treturn value;\n\t\t}\n\t\tconst entries = options[ENTRIES];\n\t\tif (entries.length == 0) {\n\t\t\treturn value;\n\t\t}\n\t\tfor (const entry of entries) {\n\t\t\tif (value == entry.value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\treturn entries[0].value;\n\t}\n\n\t// multiline\n\tisMultiline(): boolean {\n\t\treturn this._options[MULTILINE_OPTION] === true;\n\t}\n\tlanguage(): StringParamLanguage | undefined {\n\t\treturn this._options[LANGUAGE_OPTION];\n\t}\n\tisCode(): boolean {\n\t\treturn this.language() != null;\n\t}\n\n\t// node selection\n\tnodeSelectionOptions() {\n\t\treturn this._options[NODE_SELECTION];\n\t}\n\tnodeSelectionContext() {\n\t\tconst options = this.nodeSelectionOptions();\n\t\tif (options) {\n\t\t\treturn options[NODE_SELECTION_CONTEXT];\n\t\t}\n\t}\n\tnodeSelectionTypes() {\n\t\tconst options = this.nodeSelectionOptions();\n\t\tif (options) {\n\t\t\treturn options[NODE_SELECTION_TYPES];\n\t\t}\n\t}\n\tdisplayObjectMaskSelection() {\n\t\tconst value = this._options[OBJECT_MASK];\n\t\treturn value != null && value != false;\n\t}\n\tobjectMaskInputIndex(): number {\n\t\tconst value = this._options[OBJECT_MASK];\n\t\tconst input = value != null ? (value as ObjectMask)[OBJECT_MASK_INPUT_INDEX] : 0;\n\t\treturn input || 0;\n\t}\n\tobjectMaskFromInputOnly() {\n\t\tconst value = this._options[OBJECT_MASK];\n\t\tconst fromInputOnly = (value as ObjectMask).fromInputOnly;\n\t\treturn fromInputOnly != false;\n\t}\n\n\tdependentOnFoundNode() {\n\t\tif (DEPENDENT_ON_FOUND_NODE in this._options) {\n\t\t\treturn this._options[DEPENDENT_ON_FOUND_NODE];\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\tdependentOnFoundParam() {\n\t\tif (DEPENDENT_ON_FOUND_PARAM in this._options) {\n\t\t\treturn this._options[DEPENDENT_ON_FOUND_PARAM];\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// param selection\n\tisSelectingParam() {\n\t\treturn this.param().type() == ParamType.PARAM_PATH;\n\t\t// return this.paramSelectionOptions() != null;\n\t}\n\t// paramSelectionOptions() {\n\t// \treturn this._options[PARAM_SELECTION];\n\t// }\n\t// paramSelectionType() {\n\t// \tconst options = this.paramSelectionOptions();\n\t// \tif (options) {\n\t// \t\tconst type_or_boolean = options;\n\t// \t\tif (!CoreType.isBoolean(type_or_boolean)) {\n\t// \t\t\treturn type_or_boolean;\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t// range\n\trange(): Number2 {\n\t\t// cannot force range easily, as values are not necessarily from 0 to N\n\t\t// if(this.self.has_menu() && this.self.menu_entries()){\n\t\t// \treturn [0, this.self.menu_entries().length-1 ]\n\t\t// } else {\n\t\treturn this._options[RANGE_OPTION] || [0, 1];\n\t\t// }\n\t}\n\tstep(): number | undefined {\n\t\treturn this._options[STEP_OPTION];\n\t}\n\tasQuaternion() {\n\t\treturn this._options[AS_QUATERNION] == true;\n\t}\n\n\trangeLocked(): Boolean2 {\n\t\t// if(this.self.has_menu() && this.self.menu_entries()){\n\t\t// \treturn [true, true]\n\t\t// } else {\n\t\treturn this._options[RANGE_LOCKED_OPTION] || [false, false];\n\t\t// }\n\t}\n\n\tensureInRange(value: number): number {\n\t\tconst range = this.range();\n\n\t\tif (value >= range[0] && value <= range[1]) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tif (value < range[0]) {\n\t\t\t\treturn this.rangeLocked()[0] === true ? range[0] : value;\n\t\t\t} else {\n\t\t\t\treturn this.rangeLocked()[1] === true ? range[1] : value;\n\t\t\t}\n\t\t}\n\t}\n\n\t// spare\n\tisSpare(): boolean {\n\t\treturn this._options[SPARE_OPTION] || false;\n\t}\n\n\t// texture\n\ttextureOptions() {\n\t\treturn this._options[TEXTURE_OPTION];\n\t}\n\ttextureAsEnv(): boolean {\n\t\tconst texture_options = this.textureOptions();\n\t\tif (texture_options != null) {\n\t\t\treturn texture_options[ENV_OPTION] === true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// visible\n\tisHidden(): boolean {\n\t\treturn this._options[HIDDEN_OPTION] === true || this._programaticVisibleState === false;\n\t}\n\tisVisible(): boolean {\n\t\treturn !this.isHidden();\n\t}\n\tsetVisibleState(state: boolean) {\n\t\tthis._options[HIDDEN_OPTION] = !state;\n\t\tthis.param().emit(ParamEvent.VISIBLE_UPDATED);\n\t}\n\t// label\n\tlabel() {\n\t\treturn this._options[LABEL];\n\t}\n\tisLabelHidden(): boolean {\n\t\tconst type = this.param().type();\n\t\tswitch (type) {\n\t\t\tcase ParamType.BUTTON: {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase ParamType.BOOLEAN: {\n\t\t\t\treturn this.isFieldHidden();\n\t\t\t}\n\t\t\tcase ParamType.RAMP: {\n\t\t\t\treturn this._options[HIDE_LABEL] || false;\n\t\t\t}\n\t\t\tcase ParamType.STRING: {\n\t\t\t\treturn (this.isCode() && this._options[HIDE_LABEL]) || false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tisFieldHidden(): boolean {\n\t\treturn this._options[FIELD_OPTION] === false;\n\t}\n\n\t// programatic visibility\n\tuiDataDependsOnOtherParams(): boolean {\n\t\treturn VISIBLE_IF_OPTION in this._options;\n\t}\n\tvisibilityPredecessors() {\n\t\tconst visibilityOptions = this._options[VISIBLE_IF_OPTION];\n\t\tif (!visibilityOptions) {\n\t\t\treturn [];\n\t\t}\n\t\tlet predecessorNames: string[] = [];\n\t\tif (CoreType.isArray(visibilityOptions)) {\n\t\t\tarrayUniq(visibilityOptions.map((options) => Object.keys(options)).flat(), predecessorNames);\n\t\t} else {\n\t\t\tpredecessorNames = Object.keys(visibilityOptions);\n\t\t}\n\t\tconst node = this.param().node;\n\t\tconst params: BaseParamType[] = [];\n\t\tarrayCompact(\n\t\t\tpredecessorNames.map((name) => {\n\t\t\t\tconst param = node.params.get(name);\n\t\t\t\tif (param) {\n\t\t\t\t\treturn param;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`param ${name} not found as visibility condition for ${this.param().name()} in node ${this.param().node.type()}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tparams\n\t\t);\n\n\t\treturn params;\n\t}\n\n\tprivate _updateVisibilityAndRemoveDirtyBound = this.updateVisibilityAndRemoveDirty.bind(this);\n\tprivate _visibility_graph_node: CoreGraphNode | undefined;\n\tprivate _ui_data_dependency_set: boolean = false;\n\tsetUiDataDependency() {\n\t\t// currently this is only called on request on a per-param and therefore per-node basis, not on scene load for the whole scene\n\t\tif (this._ui_data_dependency_set) {\n\t\t\treturn;\n\t\t}\n\t\tthis._ui_data_dependency_set = true;\n\t\tconst predecessors = this.visibilityPredecessors();\n\t\tif (predecessors.length > 0) {\n\t\t\tthis._visibility_graph_node = new CoreGraphNode(this.param().scene(), 'param_visibility');\n\t\t\tfor (const predecessor of predecessors) {\n\t\t\t\tthis._visibility_graph_node.addGraphInput(predecessor);\n\t\t\t}\n\t\t\tthis._visibility_graph_node.addPostDirtyHook(\n\t\t\t\t'_update_visibility_and_remove_dirty',\n\t\t\t\tthis._updateVisibilityAndRemoveDirtyBound\n\t\t\t);\n\t\t}\n\t}\n\tprivate updateVisibilityAndRemoveDirty() {\n\t\tthis.updateVisibility();\n\t\tthis.param().removeDirtyState();\n\t}\n\n\tasync updateVisibility() {\n\t\tconst options = this._options[VISIBLE_IF_OPTION];\n\t\tif (options) {\n\t\t\tconst node = this.param().node;\n\t\t\tconst params = this.visibilityPredecessors();\n\t\t\tconst promises = params.map((p) => {\n\t\t\t\tif (p.isDirty()) {\n\t\t\t\t\treturn p.compute();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._programaticVisibleState = false;\n\t\t\tawait Promise.all(promises);\n\t\t\tif (CoreType.isArray(options)) {\n\t\t\t\tfor (const optionsSet of options) {\n\t\t\t\t\tconst optionSetParamNames = Object.keys(optionsSet);\n\t\t\t\t\tconst optionSetParams: BaseParamType[] = [];\n\t\t\t\t\tarrayCompact(\n\t\t\t\t\t\toptionSetParamNames.map((paramName) => node.params.get(paramName)),\n\t\t\t\t\t\toptionSetParams\n\t\t\t\t\t);\n\t\t\t\t\tconst satisfiedValues = optionSetParams.filter((param) => param.value == optionsSet[param.name()]);\n\n\t\t\t\t\tif (satisfiedValues.length == optionSetParams.length) {\n\t\t\t\t\t\tthis._programaticVisibleState = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst satisfiedValues = params.filter((param) => param.value == options[param.name()]);\n\t\t\t\tthis._programaticVisibleState = satisfiedValues.length == params.length;\n\t\t\t}\n\t\t\tthis.param().emit(ParamEvent.VISIBLE_UPDATED);\n\t\t}\n\t}\n\n\t/*\n\t *\n\t *\n\t *\n\t */\n\t// private _callbacksByOptionName: Map<keyof ParamOptions, OptionChangeCallback> | undefined;\n\t// onOptionChange<K extends keyof ParamOptions>(optionName: K, callback: OptionChangeCallback) {\n\t// \tthis._callbacksByOptionName = this._callbacksByOptionName || new Map();\n\t// \tthis._callbacksByOptionName.set(optionName, callback);\n\t// }\n\t// private _runOptionCallback(optionName: keyof ParamOptions) {\n\t// \tif (!this._callbacksByOptionName) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst callback = this._callbacksByOptionName.get(optionName);\n\t// \tif (!callback) {\n\t// \t\treturn;\n\t// \t}\n\t// \tcallback();\n\t// }\n}\n","export class TypeAssert {\n\tstatic unreachable(_: never): never {\n\t\tthrow new Error(\"Didn't expect to get here\");\n\t}\n}\n","export enum InputCloneMode {\n\tALWAYS = 'always',\n\tNEVER = 'never',\n\tFROM_NODE = 'from_node',\n}\n","// nodes\nimport {BaseAnimNodeType} from '../nodes/anim/_Base';\nimport {BaseAudioNodeType} from '../nodes/audio/_Base';\nimport {BaseCopNodeType} from '../nodes/cop/_Base';\nimport {BaseEventNodeType} from '../nodes/event/_Base';\nimport {BaseGlNodeType} from '../nodes/gl/_Base';\nimport {BaseJsNodeType} from '../nodes/js/_Base';\nimport {BaseManagerNodeType} from '../nodes/manager/_Base';\nimport {BaseMatNodeType} from '../nodes/mat/_Base';\nimport {BaseObjNodeType} from '../nodes/obj/_Base';\nimport {BasePostProcessNodeType} from '../nodes/post/_Base';\nimport {BaseRopNodeType} from '../nodes/rop/_Base';\nimport {BaseSopNodeType} from '../nodes/sop/_Base';\n// registers\n// import {GeoNodeChildrenMap} from './registers/nodes/Sop';\n// import {GlNodeChildrenMap} from './registers/nodes/Gl';\n// import {EventNodeChildrenMap} from './registers/nodes/Event';\n// import {CopNodeChildrenMap} from './registers/nodes/Cop';\n// import {AnimNodeChildrenMap} from './registers/nodes/Anim';\n// import {MatNodeChildrenMap} from './registers/nodes/Mat';\n// import {ObjNodeChildrenMap} from './registers/nodes/Obj';\n// import {PostNodeChildrenMap} from './registers/nodes/Post';\n// import {RopNodeChildrenMap} from './registers/nodes/Rop';\n// import {AudioNodeChildrenMap} from './registers/nodes/Audio';\nimport {TypedNode} from '../nodes/_Base';\n// import { JsNodeChildrenMap } from './registers/nodes/Js';\n\nexport enum NodeContext {\n\tANIM = 'anim',\n\tAUDIO = 'audio',\n\t// CAD = 'cad',\n\tCOP = 'cop',\n\t// CSG = 'csg',\n\tEVENT = 'event',\n\tGL = 'gl',\n\tJS = 'js',\n\tMANAGER = 'manager',\n\tMAT = 'mat',\n\tOBJ = 'obj',\n\tPOST = 'post',\n\tROP = 'rop',\n\tSOP = 'sop',\n}\n\nexport type NodeContextUnion =\n\t| NodeContext.ANIM\n\t| NodeContext.AUDIO\n\t// | NodeContext.CAD\n\t| NodeContext.COP\n\t// | NodeContext.CSG\n\t| NodeContext.EVENT\n\t| NodeContext.GL\n\t| NodeContext.JS\n\t| NodeContext.MANAGER\n\t| NodeContext.MAT\n\t| NodeContext.OBJ\n\t| NodeContext.POST\n\t| NodeContext.ROP\n\t| NodeContext.SOP;\n\nexport enum NetworkNodeType {\n\tACTOR = 'actorsNetwork',\n\tANIM = 'animationsNetwork',\n\tAUDIO = 'audioNetwork',\n\t// CAD = 'cadNetwork',\n\tCOP = 'copNetwork',\n\tCSG = 'csgNetwork',\n\tEVENT = 'eventsNetwork',\n\tMAT = 'materialsNetwork',\n\tPOST = 'postProcessNetwork',\n\tROP = 'renderersNetwork',\n\tSOLVER = 'solver',\n\tSUBNET = 'subnet',\n\tDECOMPOSE = 'decompose',\n}\nexport enum NetworkChildNodeType {\n\tINPUT = 'subnetInput',\n\tOUTPUT = 'subnetOutput',\n}\nexport enum CameraNodeType {\n\tCUBE = 'cubeCamera',\n\tMAPBOX = 'mapboxCamera',\n\tORTHOGRAPHIC = 'orthographicCamera',\n\tPERSPECTIVE = 'perspectiveCamera',\n}\nexport enum CameraSopNodeType {\n\tCONTROLS = 'cameraControls',\n\tCSS_RENDERER = 'cameraCSSRenderer',\n\tFPS = 'cameraFPS',\n\tFRAME_MODE = 'cameraFrameMode',\n\tPOST_PROCESS = 'cameraPostProcess',\n\tRENDER_SCENE = 'cameraRenderScene',\n\tRENDERER = 'cameraRenderer',\n\tVIEWER_CODE = 'cameraViewerCode',\n\tVIEW_OFFSET = 'cameraViewOffset',\n\tWEBXR_AR = 'cameraWebXRAR',\n\tWEBXR_VR = 'cameraWebXRVR',\n\tWEBXR_AR_MARKER_TRACKING = 'cameraWebXRARMarkerTracking',\n}\nexport const CAMERA_TYPES = [CameraNodeType.MAPBOX, CameraNodeType.ORTHOGRAPHIC, CameraNodeType.PERSPECTIVE];\n\nexport enum CameraControlsNodeType {\n\t// DEVICE_ORIENTATION = 'cameraDeviceOrientationControls',\n\tMAP = 'cameraMapControls',\n\tORBIT = 'cameraOrbitControls',\n\tPAN_ZOOM = 'cameraPanZoomControls',\n\tFIRST_PERSON = 'firstPersonControls',\n\tPLAYER = 'playerControls',\n\tMOBILE_JOYSTICK = 'mobileJoystickControls',\n}\n// export const CAMERA_CONTROLS_NODE_TYPES: Readonly<string[]> = [\n// \t// CameraControlsNodeType.DEVICE_ORIENTATION,\n// \tCameraControlsNodeType.MAP,\n// \tCameraControlsNodeType.ORBIT,\n// \tCameraControlsNodeType.FIRST_PERSON,\n// \tCameraControlsNodeType.MOBILE_JOYSTICK,\n// ];\nexport enum AudioNodeAnalyserType {\n\tFFT = 'FFT',\n\tMETER = 'meter',\n\tWAVEFORM = 'waveform',\n}\nexport const AUDIO_ANALYSER_NODES: Readonly<string[]> = [\n\tAudioNodeAnalyserType.FFT,\n\tAudioNodeAnalyserType.METER,\n\tAudioNodeAnalyserType.WAVEFORM,\n];\n\nexport type NodeTypeMapGeneric = {[key in NodeContext]: TypedNode<key, any>};\nexport interface BaseNodeByContextMap extends NodeTypeMapGeneric {\n\t[NodeContext.ANIM]: BaseAnimNodeType;\n\t[NodeContext.AUDIO]: BaseAudioNodeType;\n\t[NodeContext.COP]: BaseCopNodeType;\n\t[NodeContext.EVENT]: BaseEventNodeType;\n\t[NodeContext.GL]: BaseGlNodeType;\n\t[NodeContext.JS]: BaseJsNodeType;\n\t[NodeContext.MANAGER]: BaseManagerNodeType;\n\t[NodeContext.MAT]: BaseMatNodeType;\n\t[NodeContext.OBJ]: BaseObjNodeType;\n\t[NodeContext.POST]: BasePostProcessNodeType;\n\t[NodeContext.SOP]: BaseSopNodeType;\n\t[NodeContext.ROP]: BaseRopNodeType;\n}\n\n// export interface ChildrenNodeMapByContextMap {\n// \t[NodeContext.ANIM]: AnimNodeChildrenMap;\n// \t[NodeContext.AUDIO]: AudioNodeChildrenMap;\n// \t[NodeContext.COP]: CopNodeChildrenMap;\n// \t[NodeContext.EVENT]: EventNodeChildrenMap;\n// \t[NodeContext.GL]: GlNodeChildrenMap;\n// \t[NodeContext.JS]: JsNodeChildrenMap;\n// \t[NodeContext.MANAGER]: {};\n// \t[NodeContext.MAT]: MatNodeChildrenMap;\n// \t[NodeContext.OBJ]: ObjNodeChildrenMap;\n// \t[NodeContext.POST]: PostNodeChildrenMap;\n// \t[NodeContext.SOP]: GeoNodeChildrenMap;\n// \t[NodeContext.ROP]: RopNodeChildrenMap;\n// }\n\nexport interface NodeContextAndType {\n\tcontext: NodeContext;\n\ttype: string;\n}\n","// events\nexport enum NodeEvent {\n\tCREATED = 'node_created',\n\tDELETED = 'node_deleted',\n\tNAME_UPDATED = 'node_name_update',\n\tOVERRIDE_CLONABLE_STATE_UPDATE = 'node_override_clonable_state_update',\n\tNAMED_OUTPUTS_UPDATED = 'node_named_outputs_updated',\n\tNAMED_INPUTS_UPDATED = 'node_named_inputs_updated',\n\tINPUTS_UPDATED = 'node_inputs_updated',\n\tPARAMS_UPDATED = 'node_params_updated',\n\tUI_DATA_POSITION_UPDATED = 'node_ui_data_position_updated',\n\tUI_DATA_COMMENT_UPDATED = 'node_ui_data_comment_updated',\n\tERROR_UPDATED = 'node_error_updated',\n\tFLAG_BYPASS_UPDATED = 'bypass_flag_updated',\n\tFLAG_DISPLAY_UPDATED = 'display_flag_updated',\n\tFLAG_OPTIMIZE_UPDATED = 'optimize_flag_updated',\n\tSELECTION_UPDATED = 'selection_updated',\n\tPOLY_NODE_LOCK_STATE_UPDATED = 'lock_state_updated',\n}\n","export enum ParamEvent {\n\tVISIBLE_UPDATED = 'param_visible_updated',\n\tEDITABLE_UPDATED = 'param_editable_updated',\n\t// UPDATED = 'param_updated',\n\tRAW_INPUT_UPDATED = 'raw_input_updated',\n\tVALUE_UPDATED = 'param_value_updated',\n\tEXPRESSION_UPDATED = 'param_expression_update',\n\tERROR_UPDATED = 'param_error_updated',\n\tDELETED = 'param_deleted',\n\tASSET_RELOAD_REQUEST = 'param_asset_reload_request',\n}\n","export enum ParamType {\n\tBOOLEAN = 'boolean',\n\tBUTTON = 'button',\n\tCOLOR = 'color',\n\tFLOAT = 'float',\n\tFOLDER = 'folder',\n\tINTEGER = 'integer',\n\tPARAM_PATH = 'param_path',\n\tNODE_PATH = 'node_path',\n\tRAMP = 'ramp',\n\tSTRING = 'string',\n\tVECTOR2 = 'vector2',\n\tVECTOR3 = 'vector3',\n\tVECTOR4 = 'vector4',\n}\n// export type ParamTypeKey = ParamType\n// export type ParamTypeKeysArray = Array<ParamTypeKey>\n// const ParamTypeKeysArray: ParamTypeKeysArray = [ParamType.BOOLEAN]\n","import {BaseSopNodeType} from '../nodes/sop/_Base';\nimport {PolyScene} from '../scene/PolyScene';\nimport {CoreObjectType, ObjectContent} from '../../core/geometry/ObjectContent';\nimport {Object3D} from 'three';\nimport {Poly} from '../Poly';\nimport {updateObjectChildrenCountRef} from '../../core/reactivity/ObjectHierarchyReactivity';\nimport {ON_OBJECT_BEFORE_DELETE} from '../../core/geometry/Event';\nimport {deregisterGeneratorsForObject} from '../nodes/js/code/assemblers/actor/ActorEvaluatorGenerator';\n\nenum HandlerName {\n\tADD = 'onObjectAddHookHandlerNodeIds',\n\tREMOVE = 'onObjectRemoveHookHandlerNodeIds',\n}\n// enum CompletedHandlerName {\n// \tADD = 'onObjectAddHookHandlerNodeIds_Completed',\n// \tREMOVE = 'onObjectRemoveHookHandlerNodeIds_Completed',\n// }\n// function _completedHandlerName(handlerName: HandlerName) {\n// \tswitch (handlerName) {\n// \t\tcase HandlerName.ADD:\n// \t\t\treturn CompletedHandlerName.ADD;\n// \t\tcase HandlerName.REMOVE:\n// \t\t\treturn CompletedHandlerName.REMOVE;\n// \t}\n// }\ninterface HookHandler {\n\tgraphNodeId(): number;\n\tupdateObjectOnAdd(object: ObjectContent<CoreObjectType>, parent: ObjectContent<CoreObjectType>): void;\n\tupdateObjectOnRemove(object: ObjectContent<CoreObjectType>, parent: ObjectContent<CoreObjectType>): void;\n}\nfunction assignHookHandler(object: ObjectContent<CoreObjectType>, node: HookHandler, handlerName: HandlerName) {\n\tlet ids = hookHandlers(object, handlerName);\n\tif (!ids) {\n\t\tids = [];\n\t\tobject.userData[handlerName] = ids;\n\t}\n\tconst id = node.graphNodeId();\n\tif (!ids.includes(id)) {\n\t\tids.push(id);\n\t}\n}\n// function removeHookHandler(object: ObjectContent<CoreObjectType>, node: HookHandler, handlerName: HandlerName) {\n// \tlet ids = hookHandlers(object, handlerName);\n// \tif (ids) {\n// \t\tconst index = ids.indexOf(node.graphNodeId());\n// \t\tids.splice(index, 1);\n// \t}\n// }\n// function assignCompletedHookHandler(\n// \tobject: ObjectContent<CoreObjectType>,\n// \tnode: HookHandler,\n// \thandlerName: HandlerName\n// ) {\n// \tconst completedHandlerName = _completedHandlerName(handlerName);\n// \tlet ids = completedHookHandlers(object, completedHandlerName);\n// \tif (!ids) {\n// \t\tids = [];\n// \t\tobject.userData[completedHandlerName] = ids;\n// \t}\n// \tconst id = node.graphNodeId();\n// \tif (!ids.includes(id)) {\n// \t\tids.push(id);\n// \t}\n// }\n\nfunction hookHandlers(object: ObjectContent<CoreObjectType>, handlerName: HandlerName) {\n\treturn object.userData[handlerName] as number[] | undefined;\n}\n// function completedHookHandlers(object: ObjectContent<CoreObjectType>, handlerName: CompletedHandlerName) {\n// \treturn object.userData[handlerName] as number[] | undefined;\n// }\nfunction runHooks(scene: PolyScene, parent: ObjectContent<CoreObjectType>, handlerName: HandlerName) {\n\tconst children = parent.children;\n\tfor (let child of children) {\n\t\tchild.traverse((grandChild) => {\n\t\t\trunHookOnObject(grandChild, scene, handlerName);\n\t\t});\n\t}\n}\nfunction runHookOnObject(object: ObjectContent<CoreObjectType>, scene: PolyScene, handlerName: HandlerName) {\n\tif (object.parent) {\n\t\tconst ids = hookHandlers(object, handlerName);\n\t\tif (!ids) {\n\t\t\treturn;\n\t\t}\n\t\t// const completedHandlersIds = completedHookHandlers(object, _completedHandlerName(handlerName));\n\t\t// if (completedHandlersIds) {\n\t\t// \tfor (const id of completedHandlersIds) {\n\t\t// \t\tconst index = ids.indexOf(id);\n\t\t// \t\tif (index >= 0) {\n\t\t// \t\t\tids.splice(index, 1);\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t\tfor (const id of ids) {\n\t\t\tconst node = scene.graph.nodeFromId(id) as BaseSopNodeType | undefined;\n\t\t\tif (node && !node.disposed()) {\n\t\t\t\t// when traversing the scene to run the hooks\n\t\t\t\t// we must be very careful to note update the hierarchy\n\t\t\t\t// with .add and .remove, as this will make .traverse unpredictable.\n\t\t\t\t// Instead, children must be replaced directly with:\n\t\t\t\t//\n\t\t\t\t// const index = parent.children.indexOf(oldObject);\n\t\t\t\t// parent.children[index] = newObject;\n\t\t\t\t// newObject.parent = parent;\n\n\t\t\t\t// we need to remove the handler before processing the object,\n\t\t\t\t// to avoid cases where it might be processed multiple times.\n\t\t\t\t// This can happen on scene load, and also when multiple objects are added via the same node,\n\t\t\t\t// and only one is new. This will still trigger the hook on the already-added objects\n\t\t\t\t// UPDATE: this impacts the particles, which are not generated correctly\n\t\t\t\t// removeHookHandler(object, node, handlerName);\n\t\t\t\tswitch (handlerName) {\n\t\t\t\t\tcase HandlerName.ADD: {\n\t\t\t\t\t\tnode.updateObjectOnAdd(object, object.parent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase HandlerName.REMOVE: {\n\t\t\t\t\t\tnode.updateObjectOnRemove(object, object.parent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// assignCompletedHookHandler(object, node, handlerName);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function replaceChild(parent: Object3D, oldObject: Object3D, newObject: Object3D) {\n\t// new object replaces old Object directly,\n\t// and not using .remove and .add,\n\t// as this would make traversing the scenes from the hooks handler\n\t// unpredictable.\n\tconst index = parent.children.indexOf(oldObject);\n\tif (index < 0) {\n\t\tconsole.warn('could not find object to replace');\n\t\treturn;\n\t}\n\tparent.children[index] = newObject;\n\tnewObject.parent = parent;\n\t// parent.remove(object);\n\t// parent.add(CSSObject);\n}\nexport function removeFromParent(scene: PolyScene, object: ObjectContent<CoreObjectType>) {\n\tconst parent = object.parent;\n\tif (!parent) {\n\t\treturn;\n\t}\n\tobject.dispatchEvent(ON_OBJECT_BEFORE_DELETE);\n\tderegisterGeneratorsForObject(object);\n\tPoly.onObjectsAddRemoveHooks.runOnRemoveHookOnObject(scene, object);\n\tparent.remove(object);\n\tupdateObjectChildrenCountRef(parent);\n}\nexport function addToParent(\n\tscene: PolyScene,\n\tparent: ObjectContent<CoreObjectType>,\n\tchild: ObjectContent<CoreObjectType>\n) {\n\tparent.add(child);\n\tupdateObjectChildrenCountRef(parent);\n\tPoly.onObjectsAddRemoveHooks.runOnAddHookOnObject(scene, child);\n}\n// export function replaceChildWithCallbackObject(\n// \tparent: Object3D,\n// \toldObject: Object3D,\n// \tnewObjectCallback: () => Object3D\n// ) {\n// \tconst index = parent.children.indexOf(oldObject);\n// \tconst newObject = newObjectCallback();\n// \tparent.children[index] = newObject;\n// \tnewObject.parent = parent;\n// }\nexport function copyBasicObjectProperties(srcObject: Object3D, destObject: Object3D) {\n\tdestObject.name = srcObject.name;\n\tdestObject.matrixAutoUpdate = srcObject.matrixAutoUpdate;\n\tdestObject.frustumCulled = srcObject.frustumCulled;\n\tdestObject.layers = srcObject.layers;\n\tdestObject.position.copy(srcObject.position);\n\tdestObject.quaternion.copy(srcObject.quaternion);\n\tdestObject.scale.copy(srcObject.scale);\n\tdestObject.matrix.copy(srcObject.matrix);\n}\n\nexport class PolyOnObjectsAddRemoveHooksController {\n\tassignOnAddHookHandler(object: ObjectContent<CoreObjectType>, node: HookHandler) {\n\t\tassignHookHandler(object, node, HandlerName.ADD);\n\t}\n\tassignOnRemoveHookHandler(object: ObjectContent<CoreObjectType>, node: HookHandler) {\n\t\tassignHookHandler(object, node, HandlerName.REMOVE);\n\t}\n\n\trunOnAddHooks(scene: PolyScene, parent: ObjectContent<CoreObjectType>) {\n\t\trunHooks(scene, parent, HandlerName.ADD);\n\t}\n\trunOnRemoveHooks(scene: PolyScene, parent: ObjectContent<CoreObjectType>) {\n\t\trunHooks(scene, parent, HandlerName.REMOVE);\n\t}\n\trunOnAddHookOnObject(scene: PolyScene, object: ObjectContent<CoreObjectType>) {\n\t\trunHookOnObject(object, scene, HandlerName.ADD);\n\t}\n\trunOnRemoveHookOnObject(scene: PolyScene, object: ObjectContent<CoreObjectType>) {\n\t\trunHookOnObject(object, scene, HandlerName.REMOVE);\n\t}\n}\n","// import {BaseNodeType} from '../../../nodes/_Base';\n\nexport enum AssemblerName {\n\tGL_CLOTH = 'GL_CLOTH',\n\tGL_LINE = 'GL_LINE',\n\tGL_MESH_BASIC = 'GL_MESH_BASIC',\n\tGL_MESH_DEPTH = 'GL_MESH_DEPTH',\n\tGL_MESH_DISTANCE = 'GL_MESH_DISTANCE',\n\tGL_MESH_LAMBERT = 'GL_MESH_LAMBERT',\n\tGL_MESH_PHONG = 'GL_MESH_PHONG',\n\tGL_MESH_PHYSICAL = 'GL_MESH_PHYSICAL',\n\tGL_MESH_STANDARD = 'GL_MESH_STANDARD',\n\tGL_MESH_TOON = 'GL_MESH_TOON',\n\tGL_PARTICLES = 'GL_PARTICLES',\n\tGL_POINTS = 'GL_POINTS',\n\tGL_POST = 'GL_POST',\n\tGL_RAYMARCHING = 'GL_RAYMARCHING',\n\tGL_TEXTURE = 'GL_TEXTURE',\n\tGL_TEXTURE_2D_ARRAY = 'GL_TEXTURE_2D_ARRAY',\n\tGL_VOLUME = 'GL_VOLUME',\n\t//\n\tJS_ACTOR = 'JS_ACTOR',\n\tJS_ENTITY_BUILDER = 'JS_ENTITY_BUILDER',\n\tJS_INSTANCE_BUILDER = 'JS_INSTANCE_BUILDER',\n\tJS_OBJECT_BUILDER = 'JS_OBJECT_BUILDER',\n\tJS_POINT_BUILDER = 'JS_POINT_BUILDER',\n\tJS_SDF = 'JS_SDF',\n\tJS_SOFT_BODY = 'JS_SOFT_BODY',\n}\n\nexport interface ControllerAssemblerPair {\n\tcontroller: any;\n\tassembler: any;\n}\ntype TraverseCallback = (pair: ControllerAssemblerPair, name: AssemblerName) => void;\nexport class BaseAssemblersRegister {\n\tprotected _controllerAssemblerByName: Map<AssemblerName, ControllerAssemblerPair> = new Map();\n\n\tregister(name: AssemblerName, controller: any, assembler: any) {\n\t\tthis._controllerAssemblerByName.set(name, {\n\t\t\tcontroller: controller,\n\t\t\tassembler: assembler,\n\t\t});\n\t}\n\n\tunregister(name: AssemblerName) {\n\t\tthis._controllerAssemblerByName.delete(name);\n\t}\n\n\ttraverse(callback: TraverseCallback) {\n\t\tthis._controllerAssemblerByName.forEach(callback);\n\t}\n}\n","export enum ModuleName {\n\tCAD = 'CAD',\n\tCSG = 'CSG',\n\tGSAP = 'GSAP',\n\tPBR = 'PBR',\n\tPOLY_ANIM = 'POLY_ANIM',\n\tPOLY_GL = 'POLY_GL',\n\tPOLY_JS = 'POLY_JS',\n\tPOLY_OBJ = 'POLY_OBJ',\n\tPOLY_SOP = 'POLY_SOP',\n\tQUAD = 'QUAD',\n\tSDF = 'SDF',\n\tTET = 'TET',\n}\n","import {PolyNodeDefinition} from '../../../utils/poly/PolyNodeDefinition';\nimport {PolyNodeParamsConfig} from '../../../utils/poly/PolyNodeParamsConfig';\nimport {PolyNodeController} from '../../../utils/poly/PolyNodeController';\nimport {BaseSubnetAnimNode} from '../../Subnet';\nimport {NodeContext} from '../../../../poly/NodeContext';\nimport {PolyEngine} from '../../../../Poly';\nimport {ModuleName} from '../../../../poly/registers/modules/Common';\n\nfunction createPolyAnimNode(\n\tnodeType: string,\n\tdefinition: PolyNodeDefinition,\n\tpolyNodeControllerClass: typeof PolyNodeController\n): typeof BaseSubnetAnimNode {\n\tconst ParamsConfig = PolyNodeParamsConfig.ParamsConfig(definition);\n\tclass BasePolyAnimNode extends BaseSubnetAnimNode<typeof ParamsConfig> {\n\t\toverride paramsConfig = ParamsConfig;\n\t\tstatic override type() {\n\t\t\treturn nodeType;\n\t\t}\n\t\toverride requiredModules(): ModuleName[] {\n\t\t\treturn [ModuleName.POLY_ANIM];\n\t\t}\n\n\t\tpublic override readonly polyNodeController: PolyNodeController = new polyNodeControllerClass(this, definition);\n\t}\n\treturn BasePolyAnimNode as typeof BaseSubnetAnimNode;\n}\n\nexport function onPolyAnimModuleRegister(poly: PolyEngine) {\n\tPolyNodeController.registerCreatePolyNodeFunctionForContext(NodeContext.ANIM, createPolyAnimNode);\n}\n","import {onPolyAnimModuleRegister} from '../../../../nodes/anim/utils/poly/createPolyAnimNode';\nimport {ModuleName} from '../Common';\nimport {BaseModule} from '../_BaseModule';\n\nconst POLY_ANIMModule: BaseModule<ModuleName.POLY_ANIM> = {\n\tmoduleName: ModuleName.POLY_ANIM,\n\tonRegister: onPolyAnimModuleRegister,\n};\nexport {POLY_ANIMModule};\n","export enum EventInputType {\n\tDRAG = 'drag',\n\tKEYBOARD = 'keyboard',\n\tMOUSE = 'mouse',\n\tPOINTER = 'pointer',\n\tTOUCH = 'touch',\n\tWINDOW = 'window',\n}\n","export enum JsType {\n\tANIMATION_MIXER = 'animationMixer',\n\tANIMATION_MIXER_UPDATE = 'animationMixerUpdate',\n\tATTRIBUTE = 'attribute',\n\tCODE = 'code',\n\tCURSOR = 'cursor',\n\tFOR_LOOP = 'forLoop',\n\tGEOLOCATION_CURRENT_POSITION = 'geolocationCurrentPosition',\n\tGET_INSTANCE_ATTRIBUTE = 'getInstanceAttribute',\n\tGET_INSTANCE_PROPERTY = 'getInstanceProperty',\n\tGET_OBJECT_ATTRIBUTE = 'getObjectAttribute',\n\tGET_OBJECT_PROPERTY = 'getObjectProperty',\n\tGET_OBJECT_USER_DATA = 'getObjectUserData',\n\tGET_NODE = 'getNode',\n\tGET_PARAM = 'getParam',\n\tGET_POINT_ATTRIBUTE = 'getPointAttribute',\n\tGET_POINT_PROPERTY = 'getPointProperty',\n\tGET_PRIMITIVE_ATTRIBUTE = 'getPrimitiveAttribute',\n\tGLOBALS = 'globals',\n\tGLOBALS_AMBIENT_LIGHT = 'globalsAmbientLight',\n\tGLOBALS_AREA_LIGHT = 'globalsAreaLight',\n\tGLOBALS_DIRECTIONAL_LIGHT = 'globalsDirectionalLight',\n\tGLOBALS_HEMISPHERE_LIGHT = 'globalsHemisphereLight',\n\tGLOBALS_POINT_LIGHT = 'globalsPointLight',\n\tGLOBALS_SPOT_LIGHT = 'globalsSpotLight',\n\tIMPORT_ATTRIBUTE = 'importAttribute',\n\tKEYFRAMES = 'keyframes',\n\tON_CHILD_ATTRIBUTE_UPDATE = 'onChildAttributeUpdate',\n\tON_KEY = 'onKey',\n\tON_KEYDOWN = 'onKeydown',\n\tON_KEYPRESS = 'onKeypress',\n\tON_KEYUP = 'onKeyup',\n\tON_MAPBOX_CAMERA_MOVE = 'onMapboxCameraMove',\n\tON_MAPBOX_CAMERA_MOVE_START = 'onMapboxCameraMoveStart',\n\tON_MAPBOX_CAMERA_MOVE_END = 'onMapboxCameraMoveEnd',\n\tON_OBJECT_ATTRIBUTE_UPDATE = 'onObjectAttributeUpdate',\n\tON_OBJECT_BEFORE_DELETE = 'onObjectBeforeDelete',\n\tON_OBJECT_CLICK = 'onObjectClick',\n\tON_OBJECT_CLICK_GPU = 'onObjectClickGPU',\n\tON_OBJECT_CONTEXT_MENU = 'onObjectContextMenu',\n\tON_OBJECT_CONTEXT_MENU_GPU = 'onObjectContextMenuGPU',\n\tON_OBJECT_DISPATCH_EVENT = 'onObjectDispatchEvent',\n\tON_OBJECT_HOVER = 'onObjectHover',\n\tON_OBJECT_HOVER_GPU = 'onObjectHoverGPU',\n\tON_OBJECT_LONG_PRESS = 'onObjectLongPress',\n\tON_OBJECT_LONG_PRESS_GPU = 'onObjectLongPressGPU',\n\tON_OBJECT_MOUSE_CLICK = 'onObjectMouseClick',\n\tON_OBJECT_POINTERDOWN = 'onObjectPointerdown',\n\tON_OBJECT_POINTERDOWN_GPU = 'onObjectPointerdownGPU',\n\tON_OBJECT_POINTERUP = 'onObjectPointerup',\n\tON_OBJECT_POINTERUP_GPU = 'onObjectPointerupGPU',\n\tON_OBJECT_SWIPE = 'onObjectSwipe',\n\tON_OBJECT_SWIPE_GPU = 'onObjectSwipeGPU',\n\tON_OBJECT_SWIPEDOWN = 'onObjectSwipedown',\n\tON_OBJECT_SWIPELEFT = 'onObjectSwipeleft',\n\tON_OBJECT_SWIPERIGHT = 'onObjectSwiperight',\n\tON_OBJECT_SWIPEUP = 'onObjectSwipeup',\n\tON_POINTERDOWN = 'onPointerdown',\n\tON_POINTERUP = 'onPointerup',\n\tON_SCENE_PAUSE = 'onScenePause',\n\tON_SCENE_PLAY = 'onScenePlay',\n\tON_SCENE_RESET = 'onSceneReset',\n\tON_SCROLL = 'onScroll',\n\tON_MANUAL_TRIGGER = 'onManualTrigger',\n\tON_TICK = 'onTick',\n\tON_PERFORMANCE_CHANGE = 'onPerformanceChange',\n\tON_VIDEO_EVENT = 'onVideoEvent',\n\tON_VIEWER_CONTROLS_EVENT = 'onViewerControlsEvent',\n\tON_WEBXR_CONTROLLER_EVENT = 'onWebXRControllerEvent',\n\tOUTPUT = 'output',\n\tOUTPUT_AMBIENT_LIGHT = 'outputAmbientLight',\n\tOUTPUT_AREA_LIGHT = 'outputAreaLight',\n\tOUTPUT_DIRECTIONAL_LIGHT = 'outputDirectionalLight',\n\tOUTPUT_HEMISPHERE_LIGHT = 'outputHemisphereLight',\n\tOUTPUT_POINT_LIGHT = 'outputPointLight',\n\tOUTPUT_SPOT_LIGHT = 'outputSpotLight',\n\tPARAM = 'param',\n\tRAY_FROM_CURSOR = 'rayFromCursor',\n\tRAY_FROM_CAMERA = 'rayFromCamera',\n\t// SDF\n\tSDF_2D_BOX = 'SDF2DBox',\n\tSDF_2D_CIRCLE = 'SDF2DCircle',\n\tSDF_2D_CROSS = 'SDF2DCross',\n\tSDF_2D_HEART = 'SDF2DHeart',\n\tSDF_2D_ROUNDED_X = 'SDF2DRoundedX',\n\tSDF_BOX = 'SDFBox',\n\tSDF_ELONGATE = 'SDFElongate',\n\tSDF_ONION = 'SDFOnion',\n\tSDF_PLANE = 'SDFPlane',\n\tSDF_REVOLUTION = 'SDFRevolution',\n\tSDF_SPHERE = 'SDFSphere',\n\tSDF_TORUS = 'SDFTorus',\n\tSDF_TRANSFORM = 'SDFTransform',\n\tSDF_TUBE = 'SDFTube',\n\t// set\n\tSET_INSTANCE_ATTRIBUTE = 'setInstanceAttribute',\n\tSET_INSTANCE_LOOK_AT = 'setInstanceLookAt',\n\tSET_INSTANCE_POSITION = 'setInstancePosition',\n\tSET_INSTANCE_QUATERNION = 'setInstanceQuaternion',\n\tSET_INSTANCE_SCALE = 'setInstanceScale',\n\tSET_OBJECT_ATTRIBUTE = 'setObjectAttribute',\n\tSET_OBJECT_LOOK_AT = 'setObjectLookAt',\n\tSET_OBJECT_POSITION = 'setObjectPosition',\n\tSET_OBJECT_QUATERNION = 'setObjectQuaternion',\n\tSET_OBJECT_ROTATION = 'setObjectRotation',\n\tSET_OBJECT_SCALE = 'setObjectScale',\n\tSET_PARAM = 'setParam',\n\tSET_PHYSICS_RBD_POSITION = 'setPhysicsRBDPosition',\n\tSET_PLAYER_INPUT = 'setPlayerInput',\n\tSET_POINT_ATTRIBUTE = 'setPointAttribute',\n\tSET_POINT_POSITION = 'setPointPosition',\n\tSET_SOFT_BODY_CONSTRAINT_POSITION = 'setSoftBodyConstraintPosition',\n\tSET_SOFT_BODY_POSITION = 'setSoftBodyPosition',\n\tSET_SOFT_BODY_VELOCITY = 'setSoftBodyVelocity',\n\tSET_WFC_SOFT_CONSTRAINT = 'setWFCSoftConstraint',\n\t// TEXTURE_SDF = 'textureSDF',\n\tWFC_BUILD = 'WFCBuild',\n}\n","export const MAPBOX_TOKEN_MISSING_ERROR_MESSAGE = `Set your mapbox token with \"poly.thirdParty.mapbox().setToken('<YOUR TOKEN>')\" in the PolyConfig.ts file, then reload the page`;\n\ntype GetTokenFunc = () => Promise<string | undefined>;\n\nexport class PolyThirdPartyMapboxController {\n\tprivate _token: string | undefined;\n\tprivate _getTokenFunc: GetTokenFunc | undefined;\n\tsetToken(token: string) {\n\t\tthis._token = token;\n\t}\n\tsetGetTokenFunction(tokenFunc: GetTokenFunc) {\n\t\tthis._getTokenFunc = tokenFunc;\n\t}\n\tasync token() {\n\t\tif (this._token) {\n\t\t\treturn this._token;\n\t\t}\n\t\tif (this._getTokenFunc) {\n\t\t\treturn await this._getTokenFunc();\n\t\t}\n\t}\n}\n","export enum PolyEventName {\n\tPOLY_PROGRESS = 'POLYProgress',\n\t// scene\n\tSCENE_CREATED = 'POLYSceneCreated',\n\tSCENE_READY = 'POLYSceneReady',\n\tSCENE_PLAY = 'POLYScenePlay',\n\tSCENE_PAUSE = 'POLYScenePause',\n\t// viewer\n\tVIEWER_MOUNTED = 'POLYViewerMounted',\n\tVIEWER_READY = 'POLYViewerReady',\n}\n","import {EvaluatorMethodName} from '../../../nodes/js/code/assemblers/actor/ActorEvaluator';\nimport {PolyScene} from '../../PolyScene';\nimport {ActorsManager, ActorBuilderNode} from '../ActorsManager';\n\nexport class ActorManualTriggersController {\n\tprivate _scene: PolyScene;\n\tconstructor(protected actorsManager: ActorsManager) {\n\t\tthis._scene = actorsManager.scene;\n\t}\n\n\trunTriggerFromFunctionNode(node: ActorBuilderNode, methodName: string) {\n\t\tthis._scene.threejsScene().traverse((object) => {\n\t\t\tconst nodeIds = this.actorsManager.objectActorNodeIds(object);\n\t\t\tif (nodeIds && nodeIds.includes(node.graphNodeId())) {\n\t\t\t\tthis.actorsManager.triggerEventNode(node, object, methodName as EvaluatorMethodName);\n\t\t\t}\n\t\t});\n\t}\n}\n","import {PolyScene} from '../../PolyScene';\nimport {ActorsManager} from '../ActorsManager';\nimport {ActorEvaluatorGenerator} from '../../../nodes/js/code/assemblers/actor/ActorEvaluatorGenerator';\nimport {EvaluatorKeyboardMethod} from '../../../nodes/js/code/assemblers/actor/ActorEvaluator';\nimport {MapUtils} from '../../../../core/MapUtils';\n\nexport class ActorKeyboardEventsController {\n\tprotected _scene: PolyScene;\n\tprivate _triggeredEvaluatorGeneratorsByMethodName: Map<EvaluatorKeyboardMethod, Set<ActorEvaluatorGenerator>> =\n\t\tnew Map();\n\tconstructor(protected actorsManager: ActorsManager) {\n\t\tthis._scene = actorsManager.scene;\n\t}\n\n\taddTriggeredEvaluators(evaluatorGenerators: Set<ActorEvaluatorGenerator>, methodName: EvaluatorKeyboardMethod) {\n\t\tevaluatorGenerators.forEach((evaluatorGenerator) => {\n\t\t\tMapUtils.addToSetAtEntry(this._triggeredEvaluatorGeneratorsByMethodName, methodName, evaluatorGenerator);\n\t\t});\n\t}\n\trunTriggers() {\n\t\tthis._triggeredEvaluatorGeneratorsByMethodName.forEach((evaluatorGenerators, methodName) => {\n\t\t\tevaluatorGenerators.forEach((evaluatorGenerator) => {\n\t\t\t\tevaluatorGenerator.traverseEvaluator((evaluator) => {\n\t\t\t\t\tif (evaluator[methodName]) {\n\t\t\t\t\t\tevaluator[methodName]!();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tthis._triggeredEvaluatorGeneratorsByMethodName.clear();\n\t}\n}\n","import {Object3D} from 'three';\n\ntype Callback = (object: Object3D) => void;\n// this is a safer traversal, which does not break when children are removed within the callback\nexport function hierarchyTraverse(object: Object3D, callback: Callback) {\n\tcallback(object);\n\tconst childrenCount = object.children.length;\n\tfor (let i = 0; i < childrenCount; i++) {\n\t\tconst child = object.children[i];\n\t\tif (child) {\n\t\t\thierarchyTraverse(child, callback);\n\t\t}\n\t}\n}\n","import type {Ref} from '@vue/reactivity';\nimport {Object3D} from 'three';\nimport {ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseRayObjectIntersectionsController} from './_BaseRayObjectIntersectionsController';\nimport {ObjectOptions, GPUOptions, CPUOptions, PriorityOptions} from './Common';\n\ninterface HoveredOptions {\n\thoveredStateRef: Ref<boolean>;\n\tonHoveredStateChange: () => void;\n}\nexport interface ObjectToHoverOptions extends ObjectOptions {\n\thover: HoveredOptions;\n}\nexport interface ObjectToHoverOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\thover: ConvertToStrings<HoveredOptions>;\n}\n\nexport class RayObjectIntersectionsHoverController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToHoverOptions[]> = new Map();\n\tprotected _intersectedStateByObject: Map<Object3D, boolean> = new Map();\n\n\tprocess() {\n\t\tthis._setIntersectedState(this._objects, this._intersectedStateByObject);\n\n\t\tconst objects = this._objects;\n\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\tconst currentHoveredState = properties.hover.hoveredStateRef.value;\n\t\t\t\t\tconst newHoveredState = this._intersectedStateByObject.get(object) || false;\n\t\t\t\t\tif (newHoveredState != currentHoveredState) {\n\t\t\t\t\t\tproperties.hover.hoveredStateRef.value = newHoveredState;\n\t\t\t\t\t\tproperties.hover.onHoveredStateChange();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseRayObjectIntersectionsController} from './_BaseRayObjectIntersectionsController';\nimport {\n\tObjectOptions,\n\tGPUOptions,\n\tCPUOptions,\n\tPriorityOptions,\n\tButtonAndModifierOptions,\n\tButtonAndModifierOptionsAsString,\n\tfilterObjectsWithMatchButtonConfig,\n\tButtonConfig,\n\tbuttonConfigFromEvent,\n\tpropertyMatchesButtonConfig,\n} from './Common';\nimport {MouseButton} from '../../../../../core/MouseButton';\n\ninterface PointerdownOptions {\n\tcallback: () => void;\n}\nexport interface ObjectToObjectPointerdownOptions extends ObjectOptions {\n\tpointerdown: PointerdownOptions;\n\tconfig: ButtonAndModifierOptions;\n}\nexport interface ObjectToObjectPointerdownOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\tpointerdown: ConvertToStrings<PointerdownOptions>;\n\tconfig: ButtonAndModifierOptionsAsString;\n}\n\nconst _buttonConfig: ButtonConfig = {button: MouseButton.LEFT, ctrl: false, shift: false, alt: false};\n\nexport class RayObjectIntersectionsPointerdownController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToObjectPointerdownOptions[]> = new Map();\n\tprotected _intersectedStateByObject: Map<Object3D, boolean> = new Map();\n\tprivate _objectsMatchingEventConfig: Object3D[] = [];\n\n\tonPointerdown(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tfilterObjectsWithMatchButtonConfig(\n\t\t\tevent,\n\t\t\tthis._objects,\n\t\t\tthis._propertiesListByObject,\n\t\t\tthis._objectsMatchingEventConfig\n\t\t);\n\t\tif (this._objectsMatchingEventConfig.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateByObject);\n\t\tbuttonConfigFromEvent(event, _buttonConfig);\n\n\t\tconst objects = this._objects;\n\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tconst isIntersecting = this._intersectedStateByObject.get(object);\n\t\t\t\tif (isIntersecting == true) {\n\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\tif (propertyMatchesButtonConfig(properties.config, _buttonConfig)) {\n\t\t\t\t\t\t\tproperties.pointerdown.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// protected override _setEvent() {\n\t// \tconsole.log('_setEvent', this._objects.length);\n\t// \tif (this._objects.length > 0) {\n\t// \t\tdocument.addEventListener('pointerdown', this._processBound);\n\t// \t} else {\n\t// \t\tdocument.removeEventListener('pointerdown', this._processBound);\n\t// \t}\n\t// }\n}\n","import {Object3D} from 'three';\nimport {ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseRayObjectIntersectionsController} from './_BaseRayObjectIntersectionsController';\nimport {\n\tObjectOptions,\n\tGPUOptions,\n\tCPUOptions,\n\tPriorityOptions,\n\tButtonAndModifierOptions,\n\tButtonAndModifierOptionsAsString,\n\tfilterObjectsWithMatchButtonConfig,\n\tButtonConfig,\n\tbuttonConfigFromEvent,\n\tpropertyMatchesButtonConfig,\n} from './Common';\nimport {MouseButton} from '../../../../../core/MouseButton';\n\ninterface PointerupOptions {\n\tcallback: () => void;\n}\nexport interface ObjectToObjectPointerupOptions extends ObjectOptions {\n\tpointerup: PointerupOptions;\n\tconfig: ButtonAndModifierOptions;\n}\nexport interface ObjectToObjectPointerupOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\tpointerup: ConvertToStrings<PointerupOptions>;\n\tconfig: ButtonAndModifierOptionsAsString;\n}\n\nconst _buttonConfig: ButtonConfig = {button: MouseButton.LEFT, ctrl: false, shift: false, alt: false};\n\nexport class RayObjectIntersectionsPointerupController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToObjectPointerupOptions[]> = new Map();\n\tprotected _intersectedStateByObject: Map<Object3D, boolean> = new Map();\n\tprivate _objectsMatchingEventConfig: Object3D[] = [];\n\n\t// private _processBound = this._process.bind(this);\n\tonPointerup(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tfilterObjectsWithMatchButtonConfig(\n\t\t\tevent,\n\t\t\tthis._objects,\n\t\t\tthis._propertiesListByObject,\n\t\t\tthis._objectsMatchingEventConfig\n\t\t);\n\t\tif (this._objectsMatchingEventConfig.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateByObject);\n\t\tbuttonConfigFromEvent(event, _buttonConfig);\n\n\t\tconst objects = this._objects;\n\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tconst isIntersecting = this._intersectedStateByObject.get(object);\n\t\t\t\tif (isIntersecting == true) {\n\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\tif (propertyMatchesButtonConfig(properties.config, _buttonConfig)) {\n\t\t\t\t\t\t\tproperties.pointerup.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {Constructor, ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseRayObjectIntersectionsController} from './_BaseRayObjectIntersectionsController';\nimport {\n\tObjectOptions,\n\tGPUOptions,\n\tCPUOptions,\n\tPriorityOptions,\n\tButtonsAndModifierOptions,\n\t// ButtonAndModifierIndexOptions,\n\tButtonsAndModifierOptionsAsString,\n\tfilterObjectsWithMatchButtonsConfig,\n\tpropertyMatchesButtonsConfig,\n\tButtonsConfig,\n\tbuttonsConfigFromEvent,\n\t// modifierIndexToModifierOptions,\n} from './Common';\nimport {ParamConfig} from '../../../../nodes/utils/params/ParamsConfig';\nimport {MouseButtons} from '../../../../../core/MouseButton';\nimport {CursorMoveMonitor} from '../../../../../core/CursorMoveMonitor';\n\ninterface ClickOptions {\n\tmaxCursorMoveDistance: number;\n\tmaxDuration: number;\n\tcallback: () => void;\n}\n\nexport interface ObjectToMouseClickOptions extends ObjectOptions {\n\tclick: ClickOptions;\n\tconfig: ButtonsAndModifierOptions;\n}\n// export interface ObjectToClickIndexOptions extends ObjectOptions {\n// \tclick: ClickOptions;\n// \tconfig: ButtonAndModifierIndexOptions;\n// }\nexport interface ObjectToClickOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\tclick: ConvertToStrings<ClickOptions>;\n\tconfig: ButtonsAndModifierOptionsAsString;\n}\nconst _buttonsConfig: ButtonsConfig = {buttons: MouseButtons.LEFT, ctrl: false, shift: false, alt: false};\n\nfunction hasPropertiesWithCursorMoveLessThan(options: ObjectToMouseClickOptions[], distance: number) {\n\tfor (const option of options) {\n\t\tif (distance < option.click.maxCursorMoveDistance) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function ClickParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param max cursor move distance */\n\t\tmaxCursorMoveDistance = ParamConfig.FLOAT(0.05, {\n\t\t\trange: [0, 1],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t\t/** @param max duration */\n\t\tmaxDuration = ParamConfig.INTEGER(200, {\n\t\t\trange: [0, 1000],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t};\n}\n\nexport class RayObjectIntersectionsMouseClickController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToMouseClickOptions[]> = new Map();\n\tprotected _intersectedStateOnMousedownByObject: Map<Object3D, boolean> = new Map();\n\tprotected _intersectedStateOnMouseupByObject: Map<Object3D, boolean> = new Map();\n\tprivate _objectsMatchingEventConfig: Object3D[] = [];\n\tprivate _objectsIntersectedOnMousedown: Object3D[] = [];\n\tprivate _cursorMoveMonitor = new CursorMoveMonitor();\n\tprivate _mousedownEvent: Readonly<PointerEvent | MouseEvent | TouchEvent> | undefined;\n\tprivate _mousedownReceivedAt: number = 0;\n\n\tprivate _bound = {\n\t\tmouseup: this._onMouseup.bind(this),\n\t};\n\tonMousedown(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tthis._mousedownEvent = event;\n\t\tthis._mousedownReceivedAt = performance.now();\n\t\tif (this._objects.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tfilterObjectsWithMatchButtonsConfig(\n\t\t\tevent,\n\t\t\tthis._objects,\n\t\t\tthis._propertiesListByObject,\n\t\t\tthis._objectsMatchingEventConfig\n\t\t);\n\t\tif (this._objectsMatchingEventConfig.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tdocument.addEventListener('mouseup', this._bound.mouseup);\n\t\t// we also need touchend, as pointerup appears to not be triggered if the cursor has moved a little bit\n\t\tdocument.addEventListener('touchend', this._bound.mouseup);\n\t\tthis._cursorMoveMonitor.addPointermoveEventListener(\n\t\t\tthis._scene.eventsDispatcher.pointerEventsController.cursor()\n\t\t);\n\t\tthis._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnMousedownByObject);\n\t}\n\n\tprivate _onMouseup() {\n\t\tdocument.removeEventListener('mouseup', this._bound.mouseup);\n\t\tdocument.removeEventListener('touchend', this._bound.mouseup);\n\t\tthis._cursorMoveMonitor.removeEventListener();\n\t\tconst event = this._mousedownEvent;\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tthis._mousedownEvent = undefined;\n\t\tconst duration = performance.now() - this._mousedownReceivedAt;\n\n\t\tconst movedCursorDistance = this._cursorMoveMonitor.movedCursorDistance();\n\n\t\tconst objects = this._objectsMatchingEventConfig;\n\t\tthis._objectsIntersectedOnMousedown.length = 0;\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList && hasPropertiesWithCursorMoveLessThan(propertiesList, movedCursorDistance)) {\n\t\t\t\tconst isIntersectingOnMousedown = this._intersectedStateOnMousedownByObject.get(object);\n\t\t\t\tif (isIntersectingOnMousedown) {\n\t\t\t\t\tthis._objectsIntersectedOnMousedown.push(object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// I've considered using only the objects intersected in pointerdown for the pointerup detection,\n\t\t// but that prevents missed objects from occluding others if they are in front.\n\t\t// We therefore need to run the detection on all objects\n\t\t// instead, we can still optimise by not detecting anything if that list is empty\n\t\tif (this._objectsIntersectedOnMousedown.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setIntersectedState(objects, this._intersectedStateOnMouseupByObject);\n\t\tbuttonsConfigFromEvent(event, _buttonsConfig);\n\n\t\tconst objectsIntersectedOnMousedown = this._objectsIntersectedOnMousedown;\n\t\tfor (const object of objectsIntersectedOnMousedown) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tconst isIntersectingOnMouseup = this._intersectedStateOnMouseupByObject.get(object);\n\t\t\t\tif (isIntersectingOnMouseup == true) {\n\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmovedCursorDistance < properties.click.maxCursorMoveDistance &&\n\t\t\t\t\t\t\tduration < properties.click.maxDuration &&\n\t\t\t\t\t\t\tpropertyMatchesButtonsConfig(properties.config, _buttonsConfig)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tproperties.click.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {\n\tBaseRayObjectIntersectionsController,\n} from './_BaseRayObjectIntersectionsController';\nimport {\n\tObjectOptions,\n\tGPUOptions,\n\tCPUOptions,\n\tPriorityOptions,\n} from './Common';\n\ninterface ContextmenuOptions {\n\tcallback: () => void;\n}\nexport interface ObjectToContextmenuOptions extends ObjectOptions {\n\tcontextmenu: ContextmenuOptions;\n}\nexport interface ObjectToContextmenuOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\tcontextmenu: ConvertToStrings<ContextmenuOptions>;\n}\n\nexport class RayObjectIntersectionsContextmenuController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToContextmenuOptions[]> = new Map();\n\tprotected _intersectedStateByObject: Map<Object3D, boolean> = new Map();\n\n\tonContextmenu(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tthis._setIntersectedState(this._objects, this._intersectedStateByObject);\n\n\t\tconst objects = this._objects;\n\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tconst isIntersecting = this._intersectedStateByObject.get(object);\n\t\t\t\tif (isIntersecting == true) {\n\t\t\t\t\tfor(const properties of propertiesList){\n\t\t\t\t\t\tproperties.contextmenu.callback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {PolyScene} from '../../../PolyScene';\nimport {ActorsManager} from '../../ActorsManager';\nimport {Object3D} from 'three';\nimport {ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT} from '../../../../../core/actor/ActorCompilationController';\nimport {pushOnArrayAtEntry} from '../../../../../core/MapUtils';\nimport {EmptyOptions} from './Common';\n\nexport class BaseUserInputController {\n\tprotected _scene: PolyScene;\n\tprotected _objects: Object3D[] = [];\n\tprotected _propertiesListByObject: Map<Object3D, EmptyOptions[]> = new Map();\n\tconstructor(protected actorsManager: ActorsManager) {\n\t\tthis._scene = actorsManager.scene;\n\t}\n\n\taddPropertiesForObject(object: Object3D, properties: EmptyOptions) {\n\t\tif (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n\t\t\treturn;\n\t\t}\n\t\tpushOnArrayAtEntry(this._propertiesListByObject, object, properties);\n\n\t\tconst index = this._objects.indexOf(object);\n\t\tif (index < 0) {\n\t\t\tthis._objects.push(object);\n\t\t}\n\t}\n\tremovePropertiesForObject(object: Object3D, properties: EmptyOptions) {\n\t\tif (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst propertiesForObject = this._propertiesListByObject.get(object);\n\t\tif (propertiesForObject) {\n\t\t\tconst propertyIndex = propertiesForObject.indexOf(properties);\n\t\t\tpropertiesForObject.splice(propertyIndex, 1);\n\n\t\t\tif (propertiesForObject.length == 0) {\n\t\t\t\tconst objectIndex = this._objects.indexOf(object);\n\t\t\t\tif (objectIndex >= 0) {\n\t\t\t\t\tthis._objects.splice(objectIndex, 1);\n\t\t\t\t\tthis._propertiesListByObject.delete(object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseUserInputController} from './_BaseUserInputController';\n\ninterface PointerdownOptions {\n\tcallback: () => void;\n}\nexport interface ObjectToPointerdownOptions {\n\tpointerdown: PointerdownOptions;\n}\nexport interface ObjectToPointerdownOptionsAsString {\n\tpointerdown: ConvertToStrings<PointerdownOptions>;\n}\n\nexport class PointerdownController extends BaseUserInputController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToPointerdownOptions[]> = new Map();\n\tprotected _intersectedStateByObject: Map<Object3D, boolean> = new Map();\n\n\tonPointerdown(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tconst objects = this._objects;\n\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\tproperties.pointerdown.callback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseUserInputController} from './_BaseUserInputController';\n\ninterface PointerupOptions {\n\tcallback: () => void;\n}\nexport interface ObjectToPointerupOptions {\n\tpointerup: PointerupOptions;\n}\nexport interface ObjectToPointerupOptionsAsString {\n\tpointerup: ConvertToStrings<PointerupOptions>;\n}\n\nexport class PointerupController extends BaseUserInputController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToPointerupOptions[]> = new Map();\n\tprotected _intersectedStateByObject: Map<Object3D, boolean> = new Map();\n\n\tonPointerup(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tconst objects = this._objects;\n\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\tproperties.pointerup.callback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {PolyScene} from '../PolyScene';\nimport {ActorManualTriggersController} from './actors/ManualTriggersController';\nimport {ActorKeyboardEventsController} from './actors/ActorsKeyboardEventsController';\nimport {JsType} from '../../poly/registers/nodes/types/Js';\nimport {EvaluatorMethodName, EVALUATOR_METHOD_NAMES} from '../../nodes/js/code/assemblers/actor/ActorEvaluator';\nimport {ActorEvaluatorGenerator} from '../../nodes/js/code/assemblers/actor/ActorEvaluatorGenerator';\n// import {ActorPointerEventsController} from './actors/ActorsPointerEventsController';\nimport {AssemblerControllerNode} from '../../nodes/js/code/Controller';\nimport {JsAssemblerActor} from '../../nodes/js/code/assemblers/actor/ActorAssembler';\nimport {ActorCompilationController} from '../../../core/actor/ActorCompilationController';\nimport {ObjectContent, CoreObjectType} from '../../../core/geometry/ObjectContent';\nimport {hierarchyTraverse} from '../../../core/geometry/util/HierarchyTraverse';\nimport {Poly} from '../../Poly';\nimport {RayObjectIntersectionsHoverController} from './actors/rayObjectIntersection/RayObjectIntersectionsHoverController';\nimport {RayObjectIntersectionsPointerdownController} from './actors/rayObjectIntersection/RayObjectIntersectionsPointerdownController';\nimport {RayObjectIntersectionsPointerupController} from './actors/rayObjectIntersection/RayObjectIntersectionsPointerupController';\nimport {RayObjectIntersectionsClickController} from './actors/rayObjectIntersection/RayObjectIntersectionsClickController';\nimport {RayObjectIntersectionsMouseClickController} from './actors/rayObjectIntersection/RayObjectIntersectionsMouseClickController';\nimport {RayObjectIntersectionsContextmenuController} from './actors/rayObjectIntersection/RayObjectIntersectionsContextmenuController';\nimport {RayObjectIntersectionsLongPressController} from './actors/rayObjectIntersection/RayObjectIntersectionsLongPressController';\nimport {RayObjectIntersectionsSwipeController} from './actors/rayObjectIntersection/RayObjectIntersectionsSwipeController';\nimport {PointerdownController} from './actors/rayObjectIntersection/PointerdownController';\nimport {PointerupController} from './actors/rayObjectIntersection/PointerupController';\n\nconst ACTOR_BUILDER_NODE_IDS_KEY = 'actorBuilderNodeIds';\n\nenum EventHandlerType {\n\tinstant = 'instant',\n\tonTick = 'onTick',\n}\nconst EVENT_MAP_LOGIC: Record<EvaluatorMethodName, EventHandlerType> = {\n\t[JsType.ON_KEY]: EventHandlerType.onTick,\n\t[JsType.ON_KEYDOWN]: EventHandlerType.onTick,\n\t[JsType.ON_KEYPRESS]: EventHandlerType.onTick,\n\t[JsType.ON_KEYUP]: EventHandlerType.onTick,\n\t// [JsType.ON_MANUAL_TRIGGER]: EventHandlerType.instant,\n\t[JsType.ON_MAPBOX_CAMERA_MOVE]: EventHandlerType.onTick,\n\t[JsType.ON_MAPBOX_CAMERA_MOVE_START]: EventHandlerType.onTick,\n\t[JsType.ON_MAPBOX_CAMERA_MOVE_END]: EventHandlerType.onTick,\n\t[JsType.ON_OBJECT_ATTRIBUTE_UPDATE]: EventHandlerType.onTick,\n\t// ['onClick']: EventHandlerType.onTick,\n\t['onContextMenu']: EventHandlerType.onTick,\n\t[JsType.ON_OBJECT_DISPATCH_EVENT]: EventHandlerType.instant, // TODO\n\t['onPointermove']: EventHandlerType.onTick,\n\t// [JsType.ON_OBJECT_POINTERDOWN]: EventHandlerType.onTick,\n\t// [JsType.ON_OBJECT_POINTERUP]: EventHandlerType.onTick,\n\t[JsType.ON_PERFORMANCE_CHANGE]: EventHandlerType.instant,\n\t[JsType.ON_POINTERDOWN]: EventHandlerType.onTick,\n\t[JsType.ON_POINTERUP]: EventHandlerType.onTick,\n\t[JsType.ON_SCENE_PAUSE]: EventHandlerType.instant,\n\t[JsType.ON_SCENE_PLAY]: EventHandlerType.instant,\n\t[JsType.ON_SCENE_RESET]: EventHandlerType.instant,\n\t[JsType.ON_TICK]: EventHandlerType.onTick,\n\t[JsType.ON_VIDEO_EVENT]: EventHandlerType.onTick,\n\t[JsType.ON_WEBXR_CONTROLLER_EVENT]: EventHandlerType.onTick, // TODO\n};\nconst ON_TICK_METHOD_NAMES: Set<EvaluatorMethodName> = new Set(\n\tEVALUATOR_METHOD_NAMES.filter((methodName) => EVENT_MAP_LOGIC[methodName] == EventHandlerType.onTick)\n);\nconst INSTANT_METHOD_NAMES: Set<EvaluatorMethodName> = new Set(\n\tEVALUATOR_METHOD_NAMES.filter((methodName) => EVENT_MAP_LOGIC[methodName] == EventHandlerType.instant)\n);\nif (0 + 0) {\n\tconsole.log({ON_TICK_METHOD_NAMES, INSTANT_METHOD_NAMES});\n}\n\nexport abstract class ActorBuilderNode extends AssemblerControllerNode<JsAssemblerActor> {\n\tpublic abstract readonly compilationController: ActorCompilationController;\n}\n\nexport class ActorsManager {\n\tprivate _keyboardEventsController: ActorKeyboardEventsController | undefined;\n\tprivate _manualTriggerController: ActorManualTriggersController | undefined;\n\tconstructor(public readonly scene: PolyScene) {}\n\n\tregisterEvaluatorGenerator(evaluatorGenerator: ActorEvaluatorGenerator) {\n\t\tthis.scene.eventsDispatcher.registerEvaluatorGenerator(evaluatorGenerator);\n\t}\n\tunregisterEvaluatorGenerator(evaluatorGenerator: ActorEvaluatorGenerator) {\n\t\tthis.scene.eventsDispatcher.unregisterEvaluatorGenerator(evaluatorGenerator);\n\t}\n\n\tassignActorBuilder(object: ObjectContent<CoreObjectType>, node: ActorBuilderNode) {\n\t\tlet ids = this.objectActorNodeIds(object);\n\t\tif (!ids) {\n\t\t\tids = [];\n\t\t\tobject.userData[ACTOR_BUILDER_NODE_IDS_KEY] = ids;\n\t\t}\n\t\tconst id = node.graphNodeId();\n\t\tif (!ids.includes(id)) {\n\t\t\tids.push(id);\n\t\t}\n\t\tPoly.onObjectsAddRemoveHooks.assignOnRemoveHookHandler(object, node);\n\t}\n\tobjectActorNodeIds(object: ObjectContent<CoreObjectType>) {\n\t\treturn object.userData[ACTOR_BUILDER_NODE_IDS_KEY] as number[] | undefined;\n\t}\n\t/*\n\t *\n\t * EVENTS\n\t *\n\t */\n\tget keyboardEventsController() {\n\t\treturn (this._keyboardEventsController =\n\t\t\tthis._keyboardEventsController || new ActorKeyboardEventsController(this));\n\t}\n\tget manualTriggerController() {\n\t\treturn (this._manualTriggerController =\n\t\t\tthis._manualTriggerController || new ActorManualTriggersController(this));\n\t}\n\tpublic readonly rayObjectIntersectionClick = new RayObjectIntersectionsClickController(this);\n\tpublic readonly rayObjectIntersectionMouseClick = new RayObjectIntersectionsMouseClickController(this);\n\tpublic readonly rayObjectIntersectionContextmenu = new RayObjectIntersectionsContextmenuController(this);\n\tpublic readonly rayObjectIntersectionHover = new RayObjectIntersectionsHoverController(this);\n\tpublic readonly rayObjectIntersectionLongPress = new RayObjectIntersectionsLongPressController(this);\n\tpublic readonly rayObjectIntersectionPointerdown = new RayObjectIntersectionsPointerdownController(this);\n\tpublic readonly rayObjectIntersectionPointerup = new RayObjectIntersectionsPointerupController(this);\n\tpublic readonly rayObjectIntersectionSwipe = new RayObjectIntersectionsSwipeController(this);\n\tpublic readonly pointerdown = new PointerdownController(this);\n\tpublic readonly pointerup = new PointerupController(this);\n\n\t/*\n\t *\n\t * PUBLIC METHODS\n\t *\n\t */\n\ttick() {\n\t\tthis.rayObjectIntersectionHover.process();\n\t\tthis._keyboardEventsController?.runTriggers();\n\t\thierarchyTraverse(this.scene.threejsScene(), (object) => {\n\t\t\tthis.triggerEventNodes(object, 'onPointermove');\n\t\t\tthis._onEventTickBound(object);\n\t\t});\n\t}\n\trunOnEventSceneReset() {\n\t\tthis._onEventSceneResetTraverse();\n\t}\n\trunOnEventScenePlay() {\n\t\tthis._onEventScenePlayTraverse();\n\t}\n\trunOnEventScenePause() {\n\t\tthis._onEventScenePauseTraverse();\n\t}\n\trunOnEventPerformanceChange() {\n\t\tthis._onEventPerformanceChangeTraverse();\n\t}\n\n\t/*\n\t *\n\t * PRIVATE METHODS\n\t *\n\t */\n\n\t// tick\n\tprivate _onEventTickBound = this._onEventTick.bind(this);\n\tprivate _onEventTick(object: Object3D) {\n\t\tthis.triggerEventNodes(object, JsType.ON_TICK);\n\t}\n\n\t// reset\n\tprivate _onEventSceneResetBound = this._onEventSceneReset.bind(this);\n\tprivate _onEventSceneReset(object: Object3D) {\n\t\tthis.triggerEventNodes(object, JsType.ON_SCENE_RESET);\n\t}\n\tprivate _onEventSceneResetTraverse() {\n\t\thierarchyTraverse(this.scene.threejsScene(), this._onEventSceneResetBound);\n\t}\n\t// play\n\tprivate _onEventScenePlayBound = this._onEventScenePlay.bind(this);\n\tprivate _onEventScenePlay(object: Object3D) {\n\t\tthis.triggerEventNodes(object, JsType.ON_SCENE_PLAY);\n\t}\n\tprivate _onEventScenePlayTraverse() {\n\t\thierarchyTraverse(this.scene.threejsScene(), this._onEventScenePlayBound);\n\t}\n\t// pause\n\tprivate _onEventScenePauseBound = this._onEventScenePause.bind(this);\n\tprivate _onEventScenePause(object: Object3D) {\n\t\tthis.triggerEventNodes(object, JsType.ON_SCENE_PAUSE);\n\t}\n\tprivate _onEventScenePauseTraverse() {\n\t\thierarchyTraverse(this.scene.threejsScene(), this._onEventScenePauseBound);\n\t}\n\t// performanceChange\n\tprivate _onEventPerformanceChangeBound = this._onEventPerformanceChange.bind(this);\n\tprivate _onEventPerformanceChange(object: Object3D) {\n\t\tthis.triggerEventNodes(object, JsType.ON_PERFORMANCE_CHANGE);\n\t}\n\tprivate _onEventPerformanceChangeTraverse() {\n\t\thierarchyTraverse(this.scene.threejsScene(), this._onEventPerformanceChangeBound);\n\t}\n\t//\n\ttriggerEventNodes(object: Object3D, methodName: EvaluatorMethodName) {\n\t\tconst nodeIds = this.objectActorNodeIds(object);\n\t\tif (!nodeIds) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const nodeId of nodeIds) {\n\t\t\t// we need to test that the object has a parent,\n\t\t\t// as it could have multiple actor attached,\n\t\t\t// and if the first one from nodeIds triggers the object removal\n\t\t\t// from the hierarchy, going through the following actor nodes\n\t\t\t// will regenerate an evaluator for an object that is not in the hierarchy anymore\n\t\t\tif (object.parent == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst node = this.scene.graph.nodeFromId(nodeId) as ActorBuilderNode | undefined;\n\n\t\t\tif (node) {\n\t\t\t\tthis.triggerEventNode(node, object, methodName);\n\t\t\t}\n\t\t}\n\t}\n\ttriggerEventNode(node: ActorBuilderNode, object: Object3D, methodName: EvaluatorMethodName) {\n\t\tconst evaluatorGenerator = node.compilationController.evaluatorGenerator();\n\t\tthis._triggerEvaluatorGenerator(evaluatorGenerator, object, methodName);\n\t}\n\tprivate _triggerEvaluatorGenerator(\n\t\tevaluatorGenerator: ActorEvaluatorGenerator,\n\t\tobject: Object3D,\n\t\tmethodName: EvaluatorMethodName\n\t) {\n\t\t// we can't yet create evaluators only when the method requested here exists,\n\t\t// as this fails for onObjectClick methods, which are called from the relevant event controller\n\t\t// if (onlyIfMethodExists == true && !evaluatorGenerator.hasExpectedEvaluatorMethodName(methodName)) {\n\t\t// \treturn;\n\t\t// }\n\t\tconst evaluator = evaluatorGenerator.findOrCreateEvaluator(object);\n\n\t\tif ((evaluator as any)[methodName]) {\n\t\t\t(evaluator as any)[methodName]!();\n\t\t}\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {Camera, Object3D} from 'three';\nimport {Poly} from '../../Poly';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {CreateViewerOptions} from '../../viewers/_Base';\n\ntype OnCameraObjectsUpdated = () => void;\ninterface MainCameraOptions {\n\tcameraMaskOverride?: string;\n\tfindAnyCamera?: boolean;\n\tprintCameraNotFoundError?: boolean;\n}\nconst _cameras: Array<Camera> = [];\n\nexport class SceneCamerasController {\n\tprivate _coreGraphNode: CoreGraphNode;\n\tconstructor(private scene: PolyScene) {\n\t\tthis._coreGraphNode = new CoreGraphNode(this.scene, 'SceneCamerasController');\n\t}\n\tcoreGraphNode() {\n\t\treturn this._coreGraphNode;\n\t}\n\tdispose() {\n\t\tthis._coreGraphNode.dispose();\n\t}\n\tprivate _cameraObjectsRecentlyUpdated: Array<Camera> = [];\n\tupdateFromChangeInObject(object: Object3D) {\n\t\tthis._cameraObjects(object, this._cameraObjectsRecentlyUpdated);\n\t\tif (this._cameraObjectsRecentlyUpdated.length > 0) {\n\t\t\tthis._coreGraphNode.setDirty();\n\t\t}\n\t\tfor (const callback of this._onCameraObjectsUpdatedCallbacks) {\n\t\t\tcallback();\n\t\t}\n\t}\n\tcameraObjects(target: Array<Camera>) {\n\t\tthis._cameraObjects(this.scene.threejsScene(), target);\n\t\treturn target;\n\t}\n\n\tprivate _cameraObjects(parent: Object3D, cameraObjects: Array<Camera>) {\n\t\tcameraObjects.splice(0, cameraObjects.length);\n\t\tparent.traverse((object) => {\n\t\t\tif (Poly.camerasRegister.objectRegistered(object)) {\n\t\t\t\tcameraObjects.push(object as Camera);\n\t\t\t}\n\t\t});\n\t}\n\tcameraObjectsRecentlyUpdated() {\n\t\treturn this._cameraObjectsRecentlyUpdated;\n\t}\n\n\t// _mainCameraObjectPath: string | null = null;\n\n\tsetMainCamera(camera: Camera) {\n\t\t// this._mainCameraObjectPath = camera_node_path;\n\t\tthis.scene.root().mainCameraController.setCamera(camera);\n\t}\n\tsetMainCameraPath(path: string) {\n\t\tthis.scene.root().mainCameraController.setCameraPath(path);\n\t}\n\tmainCameraPath() {\n\t\treturn this.scene.root().mainCameraController.rawCameraPath();\n\t}\n\t// async mainCameraObjectPath() {\n\t// \treturn this._mainCameraObjectPath;\n\t// }\n\tprivate _errorMessageDisplayed: boolean = false;\n\tasync mainCamera(options?: MainCameraOptions): Promise<Camera | null> {\n\t\tif (this.scene.disposed()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet printCameraNotFoundError = true;\n\t\tif (options?.printCameraNotFoundError != null) {\n\t\t\tprintCameraNotFoundError = options.printCameraNotFoundError;\n\t\t}\n\t\tconst cameraMaskOverride = options?.cameraMaskOverride;\n\t\tif (cameraMaskOverride != null) {\n\t\t\tthis.scene.root().mainCameraController.setCameraPath(cameraMaskOverride);\n\t\t}\n\n\t\tconst _printWarningMessage = (warningMessage: string) => {\n\t\t\tif (this._errorMessageDisplayed == true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (printCameraNotFoundError) {\n\t\t\t\tconsole.error(warningMessage);\n\t\t\t\tthis._errorMessageDisplayed = true;\n\t\t\t}\n\t\t};\n\n\t\tconst camera = await this.scene.root().mainCameraController.camera();\n\t\tif (camera) {\n\t\t\treturn camera;\n\t\t}\n\t\tlet findAnyCamera = true;\n\t\tif (options?.findAnyCamera != null) {\n\t\t\tfindAnyCamera = options.findAnyCamera;\n\t\t}\n\t\tconst cameraPath = await this.scene.root().mainCameraController.cameraPath();\n\t\tconst warningMessage = `No camera found at path '${cameraPath}'. Make sure to set the root parameter 'mainCameraPath' to match a camera (from the top menu Windows->Root Node Params)`;\n\t\tif (findAnyCamera) {\n\t\t\tconst firstAnyCamera = this._findAnyCameraObject();\n\t\t\tif (firstAnyCamera) {\n\t\t\t\t_printWarningMessage(warningMessage);\n\n\t\t\t\treturn firstAnyCamera;\n\t\t\t}\n\t\t}\n\n\t\t_printWarningMessage(warningMessage);\n\n\t\treturn null;\n\t}\n\n\tprivate _findAnyCameraObject(): Camera | null {\n\t\tthis.cameraObjects(_cameras);\n\t\treturn _cameras[0];\n\t}\n\n\tasync createMainViewer(options?: CreateViewerOptions) {\n\t\tconst camera = await this.mainCamera({\n\t\t\tcameraMaskOverride: options?.cameraMaskOverride,\n\t\t});\n\t\tif (!camera) {\n\t\t\treturn;\n\t\t}\n\t\treturn Poly.camerasRegister.createViewer({\n\t\t\t...options,\n\t\t\tcamera,\n\t\t\tscene: this.scene,\n\t\t});\n\t}\n\n\tprivate _onCameraObjectsUpdatedCallbacks: OnCameraObjectsUpdated[] = [];\n\tonCameraObjectsUpdated(callback: OnCameraObjectsUpdated) {\n\t\tconst index = this._onCameraObjectsUpdatedCallbacks.indexOf(callback);\n\t\tif (index >= 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onCameraObjectsUpdatedCallbacks.push(callback);\n\t}\n\tremoveOnCameraObjectsUpdated(callback: OnCameraObjectsUpdated) {\n\t\tconst index = this._onCameraObjectsUpdatedCallbacks.indexOf(callback);\n\t\tif (index >= 0) {\n\t\t\tthis._onCameraObjectsUpdatedCallbacks.splice(index, 1);\n\t\t}\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n\nexport class Cooker {\n\tconstructor(private _scene: PolyScene) {}\n\n\tprivate _queue: Map<CoreGraphNodeId, CoreGraphNode | undefined> = new Map();\n\tprivate _nodeIdsInFlushingQueue: Set<CoreGraphNodeId> = new Set();\n\tprivate _blockLevel: number = 0;\n\t// private _processesCount: number = 0;\n\n\tblock() {\n\t\tthis._blockLevel += 1;\n\t}\n\tunblock() {\n\t\tthis._blockLevel -= 1;\n\t\tif (this._blockLevel > 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._blockLevel < 0) {\n\t\t\tthis._blockLevel = 0;\n\t\t}\n\n\t\tthis._processQueue();\n\t}\n\n\tblocked() {\n\t\treturn this._blockLevel > 0 || this._scene.loadingController.isLoading();\n\t}\n\n\tenqueue(node: CoreGraphNode, originalTriggerGraphNode?: CoreGraphNode) {\n\t\tif (!node.dirtyController.hasPostDirtyHooks()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._queue.has(node.graphNodeId()) || this._nodeIdsInFlushingQueue.has(node.graphNodeId())) {\n\t\t\treturn;\n\t\t}\n\t\tthis._queue.set(node.graphNodeId(), originalTriggerGraphNode);\n\t}\n\n\tprivate _processQueue() {\n\t\tif (this.blocked()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._queue.size == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// this.block();\n\n\t\tconst originalTriggerGraphNodes: Array<CoreGraphNode | undefined> = [];\n\t\tconst nodeIds: CoreGraphNodeId[] = [];\n\t\tthis._queue.forEach((originalTriggerGraphNode, nodeId) => {\n\t\t\toriginalTriggerGraphNodes.push(originalTriggerGraphNode);\n\t\t\tnodeIds.push(nodeId);\n\t\t\tthis._nodeIdsInFlushingQueue.add(nodeId);\n\t\t});\n\n\t\tthis._queue.clear();\n\t\tlet i = 0;\n\t\tfor (const originalTriggerGraphNode of originalTriggerGraphNodes) {\n\t\t\tconst nodeId = nodeIds[i];\n\t\t\tthis._processItem(originalTriggerGraphNode, nodeId);\n\t\t\tthis._nodeIdsInFlushingQueue.delete(nodeId);\n\t\t\ti++;\n\t\t}\n\n\t\t// this.unblock();\n\t}\n\tprivate _processItem(originalTriggerGraphNode: CoreGraphNode | undefined, nodeId: CoreGraphNodeId) {\n\t\tconst node = this._scene.graph.nodeFromId(nodeId);\n\t\tif (node) {\n\t\t\tnode.dirtyController.runPostDirtyHooks(originalTriggerGraphNode);\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../../nodes/_Base';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\n\ntype SceneCookControllerCallback = (value: void) => void;\n\nexport class SceneCookController {\n\tprivate _cookingNodesById: Map<CoreGraphNodeId, BaseNodeType> = new Map();\n\tprivate _nodeIdsHavingCookedAtLeastOnce: Set<number> = new Set();\n\tprivate _nodeIdsCookingMoreThanOnce: Set<number> = new Set();\n\tprivate _resolves: SceneCookControllerCallback[] = [];\n\tconstructor() {}\n\n\taddNode(node: BaseNodeType) {\n\t\tconst id = node.graphNodeId();\n\t\tthis._cookingNodesById.set(id, node);\n\n\t\tif (!this._nodeIdsHavingCookedAtLeastOnce.has(id)) {\n\t\t\tthis._nodeIdsCookingMoreThanOnce.add(id);\n\t\t}\n\t\tthis._nodeIdsHavingCookedAtLeastOnce.add(id);\n\t}\n\tremoveNode(node: BaseNodeType) {\n\t\tconst id = node.graphNodeId();\n\t\tthis._cookingNodesById.delete(id);\n\t\tthis._nodeIdsCookingMoreThanOnce.delete(id);\n\n\t\tif (this._cookingNodesById.size == 0) {\n\t\t\tthis.flush();\n\t\t}\n\t}\n\tcookingNodes(target: BaseNodeType[] = []) {\n\t\ttarget.length = 0;\n\t\tthis._cookingNodesById.forEach((node, id) => {\n\t\t\ttarget.push(node);\n\t\t});\n\t\treturn target;\n\t}\n\n\tallNodesHaveCookedAtLeastOnce() {\n\t\treturn this._nodeIdsCookingMoreThanOnce.size == 0;\n\t}\n\n\tprivate flush() {\n\t\tlet callback: SceneCookControllerCallback | undefined;\n\t\twhile ((callback = this._resolves.pop())) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tasync waitForCooksCompleted(): Promise<void> {\n\t\tif (this._cookingNodesById.size == 0) {\n\t\t\treturn;\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis._resolves.push(resolve);\n\t\t\t});\n\t\t}\n\t}\n}\n","import {PolyScene} from '../../engine/scene/PolyScene';\nimport {CoreGraphNode} from './CoreGraphNode';\nimport {isArray} from '../Type';\nimport {addToSetAtEntry} from '../MapUtils';\n\nexport type CoreGraphNodeId = number;\ninterface NodesData {\n\tidsSet: Set<number>;\n\tidsArray: number[];\n\tnodes: CoreGraphNode[];\n}\n\ntype TraverseCallback = (id: CoreGraphNodeId) => CoreGraphNodeId[] | undefined;\n// const _graphNodes: CoreGraphNode[] = [];\nconst _idStack: number[] = [];\nconst _idsSet: Set<number> = new Set();\nexport class CoreGraph {\n\tprivate _nextId: CoreGraphNodeId = 0;\n\tprivate _scene: PolyScene | undefined;\n\tprivate _successors: Map<CoreGraphNodeId, NodesData> = new Map();\n\tprivate _predecessors: Map<CoreGraphNodeId, NodesData> = new Map();\n\tprivate _nodesById: Map<number, CoreGraphNode> = new Map();\n\tprivate _forbiddenTriggerNodeIds: Map<CoreGraphNodeId, Set<CoreGraphNodeId>> = new Map();\n\tprivate _selfDirtyForbidden: Set<CoreGraphNodeId> = new Set();\n\tprivate _nodesCount = 0;\n\n\tprivate _debugging = false;\n\tprivate _addedNodesDuringDebugging: Map<CoreGraphNodeId, CoreGraphNode> = new Map();\n\tstartDebugging() {\n\t\tthis._debugging = true;\n\t}\n\tstopDebugging() {\n\t\tthis._debugging = false;\n\t}\n\tprintDebug() {\n\t\tthis._addedNodesDuringDebugging.forEach((node, nodeId) => {\n\t\t\tconsole.log(nodeId, node, node.graphPredecessors(), node.graphSuccessors());\n\t\t});\n\t}\n\t// print() {\n\t// \tthis._nodesById.forEach((node, nodeId) => {\n\t// \t\tconsole.log(nodeId, node, node.graphPredecessors(), node.graphSuccessors());\n\t// \t});\n\t// }\n\n\tsetScene(scene: PolyScene) {\n\t\tthis._scene = scene;\n\t}\n\tscene() {\n\t\treturn this._scene;\n\t}\n\n\tnextId(): CoreGraphNodeId {\n\t\tthis._nextId += 1;\n\t\treturn this._nextId;\n\t}\n\n\tnodesFromIds(ids: number[], target: CoreGraphNode[]): void {\n\t\ttarget.length = 0;\n\t\tfor (const id of ids) {\n\t\t\tconst node = this.nodeFromId(id);\n\t\t\tif (node) {\n\t\t\t\ttarget.push(node);\n\t\t\t}\n\t\t}\n\t}\n\tnodeFromId(id: number): CoreGraphNode | undefined {\n\t\treturn this._nodesById.get(id);\n\t}\n\thasNode(node: CoreGraphNode): boolean {\n\t\treturn this._nodesById.get(node.graphNodeId()) != null;\n\t}\n\taddNode(node: CoreGraphNode) {\n\t\tthis._nodesById.set(node.graphNodeId(), node);\n\t\tthis._nodesCount += 1;\n\t\tif (this._debugging) {\n\t\t\tthis._addedNodesDuringDebugging.set(node.graphNodeId(), node);\n\t\t}\n\t}\n\tremoveNode(node: CoreGraphNode) {\n\t\tthis.disconnectPredecessors(node);\n\t\tthis.disconnectSuccessors(node);\n\t\tconst nodeId = node.graphNodeId();\n\t\tthis._nodesById.delete(nodeId);\n\t\tthis._successors.delete(nodeId);\n\t\tthis._predecessors.delete(nodeId);\n\t\tthis._nodesCount -= 1;\n\n\t\tthis._forbiddenTriggerNodeIds.delete(nodeId);\n\t\tthis._forbiddenTriggerNodeIds.forEach((set, nodeId) => {\n\t\t\tif (set.has(nodeId)) {\n\t\t\t\tset.delete(nodeId);\n\t\t\t}\n\t\t});\n\t\tthis._selfDirtyForbidden.delete(nodeId);\n\n\t\tif (this._debugging) {\n\t\t\tthis._addedNodesDuringDebugging.delete(nodeId);\n\t\t}\n\t}\n\tnodesCount() {\n\t\treturn this._nodesCount;\n\t}\n\tconnect(src: CoreGraphNode, dest: CoreGraphNode, checkCycle = true): boolean {\n\t\tconst srcId = src.graphNodeId();\n\t\tconst destId = dest.graphNodeId();\n\n\t\tif (!(this.hasNode(src) && this.hasNode(dest))) {\n\t\t\tconsole.warn(`attempt to connect non existing node ${srcId} or ${destId}`);\n\t\t\treturn false;\n\t\t}\n\n\t\t// if checkCycle is passed as false, that means we never check.\n\t\t// this can be useful when we know that the connection will not create a cycle,\n\t\t// such as when connecting params or inputs to a node\n\t\tif (checkCycle) {\n\t\t\tconst sceneLoading = this._scene ? this._scene.loadingController.isLoading() : true;\n\t\t\tcheckCycle = !sceneLoading;\n\t\t}\n\t\tconst graphWouldHaveCycle = checkCycle ? src.hasPredecessor(dest) : false;\n\t\t// if (checkCycle) {\n\t\t// \tgraphWouldHaveCycle = this._hasPredecessor(srcId, destId);\n\t\t// }\n\n\t\tif (graphWouldHaveCycle) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis._createConnection(srcId, destId);\n\t\t\tsrc.clearCachesWithPredecessorsAndSuccessors();\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tdisconnect(src: CoreGraphNode, dest: CoreGraphNode) {\n\t\tthis._removeConnection(src.graphNodeId(), dest.graphNodeId());\n\n\t\tsrc.clearCachesWithPredecessorsAndSuccessors();\n\t\tdest.clearCachesWithPredecessorsAndSuccessors();\n\t}\n\tdisconnectPredecessors(node: CoreGraphNode) {\n\t\tconst predecessors = this.predecessors(node);\n\t\tif (!predecessors) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const predecessor of predecessors) {\n\t\t\tthis.disconnect(predecessor, node);\n\t\t}\n\t}\n\tdisconnectSuccessors(node: CoreGraphNode) {\n\t\tconst successors = this.successors(node);\n\t\tif (!successors) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const successor of successors) {\n\t\t\tthis.disconnect(node, successor);\n\t\t}\n\t}\n\n\tpredecessorIds(id: CoreGraphNodeId): CoreGraphNodeId[] | undefined {\n\t\treturn this._predecessors.get(id)?.idsArray;\n\t}\n\tpredecessors(node: CoreGraphNode): CoreGraphNode[] | undefined {\n\t\treturn this._predecessors.get(node.graphNodeId())?.nodes;\n\t}\n\tsuccessorIds(id: CoreGraphNodeId): CoreGraphNodeId[] | undefined {\n\t\treturn this._successors.get(id)?.idsArray;\n\t}\n\tsuccessors(node: CoreGraphNode): CoreGraphNode[] | undefined {\n\t\treturn this._successors.get(node.graphNodeId())?.nodes;\n\t}\n\tprivate _boundPredecessorIds: TraverseCallback = this.predecessorIds.bind(this);\n\tprivate _boundSuccessorIds: TraverseCallback = this.successorIds.bind(this);\n\t// private _allNodeIds(node: CoreGraphNode, method: TraverseCallback, target: CoreGraphNodeId[]): void {\n\t// \ttarget.length = 0;\n\t// \t_idsSet.clear();\n\t// \t_idStack.length = 1;\n\t// \t_idStack[0] = node.graphNodeId();\n\t// \tconst forbiddenIds = this._forbiddenTriggerNodeIds.get(node.graphNodeId())\n\n\t// \twhile (_idStack.length > 0) {\n\t// \t\tconst currentId = _idStack.pop()!;\n\t// \t\tconst ids = method(currentId);\n\t// \t\tif (ids) {\n\t// \t\t\tfor (const id of ids) {\n\t// \t\t\t\tif (!_idsSet.has(id)) {\n\t// \t\t\t\t\t_idsSet.add(id);\n\t// \t\t\t\t\ttarget.push(id);\n\t// \t\t\t\t\t_idStack.push(id);\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\tallPredecessorIds(node: CoreGraphNode, target: CoreGraphNodeId[]): void {\n\t\t// this._allNodeIds(node, this._boundPredecessorIds, target);\n\t\ttarget.length = 0;\n\t\t_idsSet.clear();\n\t\t_idStack.length = 1;\n\t\t_idStack[0] = node.graphNodeId();\n\n\t\twhile (_idStack.length > 0) {\n\t\t\tconst currentId = _idStack.pop()!;\n\t\t\tconst ids = this._boundPredecessorIds(currentId);\n\t\t\tif (ids) {\n\t\t\t\tfor (const id of ids) {\n\t\t\t\t\tif (!_idsSet.has(id)) {\n\t\t\t\t\t\t_idsSet.add(id);\n\t\t\t\t\t\ttarget.push(id);\n\t\t\t\t\t\t_idStack.push(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tallSuccessorIds(node: CoreGraphNode, target: CoreGraphNodeId[]): void {\n\t\t// this._allNodeIds(node, this._boundSuccessorIds, target);\n\t\ttarget.length = 0;\n\t\t_idsSet.clear();\n\t\t_idStack.length = 1;\n\t\t_idStack[0] = node.graphNodeId();\n\t\tconst forbiddenIds = this._forbiddenTriggerNodeIds.get(node.graphNodeId());\n\n\t\twhile (_idStack.length > 0) {\n\t\t\tconst currentId = _idStack.pop()!;\n\t\t\tconst ids = this._boundSuccessorIds(currentId);\n\t\t\tif (ids) {\n\t\t\t\tfor (const id of ids) {\n\t\t\t\t\tif (!_idsSet.has(id)) {\n\t\t\t\t\t\t_idsSet.add(id);\n\t\t\t\t\t\tif (forbiddenIds == null || !forbiddenIds.has(id)) {\n\t\t\t\t\t\t\ttarget.push(id);\n\t\t\t\t\t\t\t_idStack.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// private _allNodes(node: CoreGraphNode, method: TraverseCallback, target: CoreGraphNode[]): void {\n\t// \ttarget.length = 0;\n\t// \t_idsSet.clear();\n\t// \t_idStack.length = 1;\n\t// \t_idStack[0] = node.graphNodeId();\n\n\t// \twhile (_idStack.length > 0) {\n\t// \t\tconst currentId = _idStack.pop()!;\n\t// \t\tconst ids = method(currentId);\n\t// \t\tif (ids) {\n\t// \t\t\tfor (const id of ids) {\n\t// \t\t\t\tif (!_idsSet.has(id)) {\n\t// \t\t\t\t\t_idsSet.add(id);\n\t// \t\t\t\t\tconst otherNode = this._nodesById.get(id);\n\t// \t\t\t\t\tif (otherNode) {\n\t// \t\t\t\t\t\ttarget.push(otherNode);\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\t_idStack.push(id);\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\tallPredecessors(node: CoreGraphNode, target: CoreGraphNode[]): void {\n\t\t// this._allNodes(node, this._boundPredecessorIds, target);\n\t\ttarget.length = 0;\n\t\t_idsSet.clear();\n\t\t_idStack.length = 1;\n\t\t_idStack[0] = node.graphNodeId();\n\n\t\twhile (_idStack.length > 0) {\n\t\t\tconst currentId = _idStack.pop()!;\n\t\t\tconst ids = this._boundPredecessorIds(currentId);\n\t\t\tif (ids) {\n\t\t\t\tfor (const id of ids) {\n\t\t\t\t\tif (!_idsSet.has(id)) {\n\t\t\t\t\t\t_idsSet.add(id);\n\t\t\t\t\t\tconst otherNode = this._nodesById.get(id);\n\t\t\t\t\t\tif (otherNode) {\n\t\t\t\t\t\t\ttarget.push(otherNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_idStack.push(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tallSuccessors(node: CoreGraphNode, target: CoreGraphNode[]): void {\n\t\t// this._allNodes(node, this._boundSuccessorIds, target);\n\t\ttarget.length = 0;\n\t\t_idsSet.clear();\n\t\t_idStack.length = 1;\n\t\t_idStack[0] = node.graphNodeId();\n\t\tconst forbiddenIds = this._forbiddenTriggerNodeIds.get(node.graphNodeId());\n\n\t\twhile (_idStack.length > 0) {\n\t\t\tconst currentId = _idStack.pop()!;\n\t\t\tconst ids = this._boundSuccessorIds(currentId);\n\t\t\tif (ids) {\n\t\t\t\tfor (const id of ids) {\n\t\t\t\t\tif (!_idsSet.has(id)) {\n\t\t\t\t\t\t_idsSet.add(id);\n\t\t\t\t\t\tif (forbiddenIds == null || !forbiddenIds.has(id)) {\n\t\t\t\t\t\t\tconst otherNode = this._nodesById.get(id);\n\t\t\t\t\t\t\tif (otherNode) {\n\t\t\t\t\t\t\t\ttarget.push(otherNode);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_idStack.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _createConnection(srcId: CoreGraphNodeId, destId: CoreGraphNodeId) {\n\t\tlet successorsData = this._successors.get(srcId);\n\t\tlet predecessorsData = this._predecessors.get(destId);\n\n\t\t// add data if not present\n\t\tif (!successorsData) {\n\t\t\tsuccessorsData = {idsSet: new Set(), idsArray: [], nodes: []};\n\t\t\tthis._successors.set(srcId, successorsData);\n\t\t}\n\t\tif (!predecessorsData) {\n\t\t\tpredecessorsData = {idsSet: new Set(), idsArray: [], nodes: []};\n\t\t\tthis._predecessors.set(destId, predecessorsData);\n\t\t}\n\n\t\t// successor\n\t\tif (!successorsData.idsSet.has(destId)) {\n\t\t\tsuccessorsData.idsSet.add(destId);\n\t\t\tsuccessorsData.idsArray.push(destId);\n\t\t\tconst destNode = this._nodesById.get(destId);\n\t\t\tif (destNode) {\n\t\t\t\tsuccessorsData.nodes.push(destNode);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`creating connection with node not in graph ${destId}`);\n\t\t\t}\n\t\t}\n\n\t\t// predecessor\n\t\tif (!predecessorsData.idsSet.has(srcId)) {\n\t\t\tpredecessorsData.idsSet.add(srcId);\n\t\t\tpredecessorsData.idsArray.push(srcId);\n\t\t\tconst srcNode = this._nodesById.get(srcId);\n\t\t\tif (srcNode) {\n\t\t\t\tpredecessorsData.nodes.push(srcNode);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`creating connection with node not in graph ${srcId}`);\n\t\t\t}\n\t\t}\n\t}\n\tprivate _removeConnection(srcId: CoreGraphNodeId, destId: CoreGraphNodeId) {\n\t\t// remove successors\n\t\tconst successorsData = this._successors.get(srcId);\n\t\tif (successorsData && successorsData.idsSet.has(destId)) {\n\t\t\tsuccessorsData.idsSet.delete(destId);\n\t\t\tconst idIndex = successorsData.idsArray.indexOf(destId);\n\t\t\tif (idIndex >= 0) {\n\t\t\t\tsuccessorsData.idsArray.splice(idIndex, 1);\n\t\t\t\tsuccessorsData.nodes.splice(idIndex, 1);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`could not find id ${destId} in successorsData.idsArray`, successorsData.idsArray);\n\t\t\t}\n\t\t}\n\t\t// remove predecessors\n\t\tconst predecessorsData = this._predecessors.get(destId);\n\t\tif (predecessorsData && predecessorsData.idsSet.has(srcId)) {\n\t\t\tpredecessorsData.idsSet.delete(srcId);\n\t\t\tconst idIndex = predecessorsData.idsArray.indexOf(srcId);\n\t\t\tif (idIndex >= 0) {\n\t\t\t\tpredecessorsData.idsArray.splice(idIndex, 1);\n\t\t\t\tpredecessorsData.nodes.splice(idIndex, 1);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`could not find id ${srcId} in predecessorsData.idsArray`, predecessorsData.idsArray);\n\t\t\t}\n\t\t}\n\t}\n\tsetForbiddenTriggerNodes(src: CoreGraphNode, dest: CoreGraphNode | CoreGraphNode[]) {\n\t\t// if (this._forbiddenTriggerNodeIds) {\n\t\tthis._forbiddenTriggerNodeIds.get(src.graphNodeId())?.clear();\n\t\t// } else {\n\t\t// this._forbiddenTriggerNodeIds = new Set();\n\t\t// }\n\t\tif (isArray(dest)) {\n\t\t\tfor (const destNode of dest) {\n\t\t\t\taddToSetAtEntry(this._forbiddenTriggerNodeIds, src.graphNodeId(), destNode.graphNodeId());\n\t\t\t\t// this._forbiddenTriggerNodeIds.add(node.graphNodeId());\n\t\t\t\t// node.clearCachesWithPredecessorsAndSuccessors();\n\t\t\t}\n\t\t} else {\n\t\t\taddToSetAtEntry(this._forbiddenTriggerNodeIds, src.graphNodeId(), dest.graphNodeId());\n\t\t\t// this._forbiddenTriggerNodeIds.add(nodes.graphNodeId());\n\t\t}\n\t}\n\tclearForbiddenTriggerNodes(src: CoreGraphNode) {\n\t\tthis._forbiddenTriggerNodeIds.delete(src.graphNodeId());\n\t}\n\tsetSelfDirtyForbidden(node: CoreGraphNode, state: boolean) {\n\t\tif (state) {\n\t\t\tthis._selfDirtyForbidden.add(node.graphNodeId());\n\t\t} else {\n\t\t\tthis._selfDirtyForbidden.delete(node.graphNodeId());\n\t\t}\n\t}\n\tselfDirtyForbidden(node: CoreGraphNode): boolean {\n\t\treturn this._selfDirtyForbidden.has(node.graphNodeId());\n\t}\n}\n","import {BaseNodeType} from '../../engine/nodes/_Base';\n\nexport interface PerformancePrintObject {\n\tfullPath: string;\n\tcooks_count: number;\n\ttotal_time: number;\n\ttotal_cook_time: number;\n\tcook_time_per_iteration: number;\n\t// cook_time_total_with_inputs: number;\n\t// cook_time_total_with_inputs_per_iteration: number;\n\tinputs_time_per_iteration: number;\n\tparams_time_per_iteration: number;\n}\n\nimport {NodePerformanceData} from '../../engine/nodes/utils/cook/PerformanceController';\nexport class PerformanceNode {\n\t_cooks_count: number = 0;\n\t_total_cook_time: number = 0;\n\t_total_inputs_time: number = 0;\n\t_total_params_time: number = 0;\n\tconstructor(private _node: BaseNodeType) {}\n\n\tupdate_cook_data(performance_data: NodePerformanceData): void {\n\t\tthis._cooks_count += 1;\n\t\tthis._total_cook_time += performance_data.cookTime;\n\t\tthis._total_inputs_time += performance_data.inputsTime;\n\t\tthis._total_params_time += performance_data.paramsTime;\n\t}\n\ttotal_time(): number {\n\t\treturn this._total_cook_time + this._total_inputs_time + this._total_params_time;\n\t}\n\ttotal_cook_time(): number {\n\t\treturn this._total_cook_time;\n\t}\n\tcook_time_per_iteration(): number {\n\t\tif (this._cooks_count > 0) {\n\t\t\treturn this._total_cook_time / this._cooks_count;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\ttotal_inputs_time(): number {\n\t\treturn this._total_inputs_time;\n\t}\n\tinputs_time_per_iteration(): number {\n\t\tif (this._cooks_count > 0) {\n\t\t\treturn this._total_inputs_time / this._cooks_count;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\ttotal_params_time2(): number {\n\t\treturn this._total_params_time;\n\t}\n\tparams_time_per_iteration2(): number {\n\t\tif (this._cooks_count > 0) {\n\t\t\treturn this._total_params_time / this._cooks_count;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tcooks_count(): number {\n\t\treturn this._cooks_count;\n\t}\n\n\tprint_object(): PerformancePrintObject {\n\t\treturn {\n\t\t\tfullPath: this._node.path(),\n\t\t\tcooks_count: this.cooks_count(),\n\t\t\ttotal_time: this.total_time(),\n\t\t\ttotal_cook_time: this.total_cook_time(),\n\t\t\tcook_time_per_iteration: this.cook_time_per_iteration(),\n\t\t\t// cook_time_total_with_inputs: this.cook_time_total_with_inputs,\n\t\t\t// cook_time_total_with_inputs_per_iteration: this.cook_time_total_with_inputs_per_iteration,\n\t\t\tinputs_time_per_iteration: this.inputs_time_per_iteration(),\n\t\t\tparams_time_per_iteration: this.params_time_per_iteration2(),\n\t\t};\n\t}\n}\n","import {PerformanceNode} from './PerformanceNode';\nimport {NodePerformanceData} from '../../engine/nodes/utils/cook/PerformanceController';\nimport {BaseNodeType} from '../../engine/nodes/_Base';\nimport {arraySortBy, arrayUniq} from '../ArrayUtils';\nimport {objectClone} from '../ObjectUtils';\nimport {PolyDictionary} from '../../types/GlobalTypes';\nimport {Poly} from '../../engine/Poly';\n\nexport class CorePerformance {\n\tprivate _started: boolean = false;\n\t_start_time: number | null = 0;\n\t_previous_timestamp: number = 0;\n\t_nodes_cook_data: PolyDictionary<PerformanceNode> = {};\n\t_durations_by_name: PolyDictionary<number> = {};\n\t_durations_count_by_name: PolyDictionary<number> = {};\n\n\tprofile(name: string, method: (args?: any) => any) {\n\t\tconst performance = Poly.performance.performanceManager();\n\t\tconst start_time = performance.now();\n\t\tmethod();\n\t\tconst total_time = performance.now() - start_time;\n\t\tconsole.log(`${name}: ${total_time}`);\n\t}\n\n\tstart() {\n\t\tif (!this._started) {\n\t\t\tthis.reset();\n\t\t\tthis._started = true;\n\t\t\tconst performance = Poly.performance.performanceManager();\n\t\t\tthis._start_time = performance.now();\n\t\t\tthis._nodes_cook_data = {};\n\t\t\tthis._previous_timestamp = this._start_time;\n\t\t}\n\t}\n\tstop() {\n\t\tthis.reset();\n\t}\n\treset() {\n\t\tthis._started = false;\n\t\tthis._start_time = null;\n\t\tthis._durations_by_name = {};\n\t\tthis._durations_count_by_name = {};\n\t\tthis._nodes_cook_data = {};\n\t}\n\n\tstarted(): boolean {\n\t\treturn this._started;\n\t}\n\n\trecordNodeCookData(node: BaseNodeType, performance_data: NodePerformanceData) {\n\t\tconst id = node.graphNodeId();\n\t\tif (this._nodes_cook_data[id] == null) {\n\t\t\tthis._nodes_cook_data[id] = new PerformanceNode(node);\n\t\t}\n\t\tthis._nodes_cook_data[id].update_cook_data(performance_data);\n\t}\n\n\trecord(name: string) {\n\t\tif (!this.started()) {\n\t\t\tthis.start();\n\t\t}\n\n\t\tconst current_timestamp = performance.now();\n\n\t\tif (this._durations_by_name[name] == null) {\n\t\t\tthis._durations_by_name[name] = 0;\n\t\t}\n\t\tthis._durations_by_name[name] += current_timestamp - this._previous_timestamp;\n\t\tif (this._durations_count_by_name[name] == null) {\n\t\t\tthis._durations_count_by_name[name] = 0;\n\t\t}\n\t\tthis._durations_count_by_name[name] += 1;\n\n\t\treturn (this._previous_timestamp = current_timestamp);\n\t}\n\n\tprint() {\n\t\tthis.print_node_cook_data();\n\t\tthis.print_recordings();\n\t}\n\n\tprint_node_cook_data() {\n\t\tlet performance_nodes = Object.values(this._nodes_cook_data);\n\t\tperformance_nodes = arraySortBy(performance_nodes, (performance_node) => performance_node.total_cook_time());\n\n\t\tconst print_objects = performance_nodes.map((performance_node) => performance_node.print_object());\n\n\t\tconsole.log('--------------- NODES COOK TIME -----------');\n\n\t\tconst table_entries = [];\n\t\tconst sorted_print_objects = arraySortBy(print_objects, (print_object) => -print_object.total_cook_time);\n\t\tfor (const print_object of sorted_print_objects) {\n\t\t\ttable_entries.push(print_object);\n\t\t}\n\n\t\tconsole.table(table_entries);\n\n\t\treturn print_objects;\n\t}\n\n\tprint_recordings() {\n\t\tconst durations_by_name = objectClone(this._durations_by_name);\n\t\tconst durations_count_by_name = objectClone(this._durations_count_by_name);\n\n\t\tconst durations = [];\n\t\tconst names_by_duration: PolyDictionary<string[]> = {};\n\n\t\tfor (const name of Object.keys(durations_by_name)) {\n\t\t\tconst duration = durations_by_name[name];\n\n\t\t\tdurations.push(duration);\n\t\t\tif (names_by_duration[duration] == null) {\n\t\t\t\tnames_by_duration[duration] = [];\n\t\t\t}\n\t\t\tnames_by_duration[duration].push(name);\n\t\t}\n\n\t\tdurations.sort((a, b) => a - b);\n\t\tconst sortedDurations: number[] = [];\n\t\tarrayUniq(durations, sortedDurations);\n\n\t\tconsole.log('--------------- PERF RECORDINGS -----------');\n\t\tconst table_entries = [];\n\t\tfor (const duration of sortedDurations) {\n\t\t\tconst names = names_by_duration[duration];\n\t\t\tfor (const name of names) {\n\t\t\t\tconst count = durations_count_by_name[name];\n\t\t\t\tconst duration_per_iteration = duration / count;\n\n\t\t\t\tconst entry = {duration, name, count, duration_per_iteration};\n\t\t\t\ttable_entries.push(entry);\n\t\t\t}\n\t\t}\n\n\t\tconsole.table(table_entries);\n\t\treturn table_entries;\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {SceneEvent} from '../../poly/SceneEvent';\nimport {NodeEvent} from '../../poly/NodeEvent';\nimport {ParamEvent} from '../../poly/ParamEvent';\nimport {ActorEvaluator} from '../../nodes/js/code/assemblers/actor/ActorEvaluator';\nimport {DebugLine} from '../../functions/_Debug';\n\nexport interface DebugLinesContainer {\n\tnodePath: string;\n\tdebugLines: DebugLine[];\n}\nexport interface EventsListener {\n\tprocessEvents: (emitter: CoreGraphNode, event: SceneEvent | NodeEvent | ParamEvent, data?: any) => void;\n\tprocessActorEvaluator(evaluator: ActorEvaluator): ActorEvaluator;\n\tactorEvaluatorDebug(options: DebugLinesContainer): void;\n}\ntype OnAddListenerCallback = () => void;\n\nexport class DispatchController {\n\tprivate _onAddListenerCallbacks: OnAddListenerCallback[] | undefined;\n\tconstructor(private scene: PolyScene) {}\n\n\tprivate _eventsListener: EventsListener | undefined;\n\n\tsetListener(eventsListener: EventsListener) {\n\t\t// let's have a single listener for now\n\t\t// which is a constraint I've added when adding on_add_listener\n\t\tif (!this._eventsListener) {\n\t\t\tthis._eventsListener = eventsListener;\n\t\t\tthis._runOnAddListenerCallbacks();\n\t\t} else {\n\t\t\tconsole.warn('scene already has a listener');\n\t\t}\n\t}\n\tonAddListener(callback: OnAddListenerCallback) {\n\t\tif (this._eventsListener) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tthis._onAddListenerCallbacks = this._onAddListenerCallbacks || [];\n\t\t\tthis._onAddListenerCallbacks.push(callback);\n\t\t}\n\t}\n\tprivate _runOnAddListenerCallbacks() {\n\t\tif (this._onAddListenerCallbacks) {\n\t\t\tlet callback: OnAddListenerCallback | undefined;\n\t\t\twhile ((callback = this._onAddListenerCallbacks.pop())) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\tthis._onAddListenerCallbacks = undefined;\n\t\t}\n\t}\n\n\tdispatch(emitter: CoreGraphNode, event: SceneEvent | NodeEvent | ParamEvent, data?: any) {\n\t\tthis._eventsListener?.processEvents(emitter, event, data);\n\t}\n\temitAllowed(): boolean {\n\t\treturn (\n\t\t\tthis._eventsListener != null &&\n\t\t\tthis.scene.loadingController.loaded() &&\n\t\t\tthis.scene.loadingController.autoUpdating()\n\t\t);\n\t}\n\tprocessActorEvaluator(evaluator: ActorEvaluator) {\n\t\treturn this._eventsListener?.processActorEvaluator(evaluator);\n\t}\n\tactorEvaluatorDebug(options: DebugLinesContainer) {\n\t\treturn this._eventsListener?.actorEvaluatorDebug(options);\n\t}\n}\n","import {BaseParamType} from '../../params/_Base';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\n\nexport class SceneExpressionsController {\n\tprivate _paramsById: Map<CoreGraphNodeId, BaseParamType> = new Map();\n\tconstructor() {}\n\n\tregisterParam(param: BaseParamType) {\n\t\tthis._paramsById.set(param.graphNodeId(), param);\n\t}\n\tderegisterParam(param: BaseParamType) {\n\t\tthis._paramsById.delete(param.graphNodeId());\n\t}\n\n\t//\n\t//\n\t//\n\t//\n\tregenerateReferringExpressions(node: BaseNodeType) {\n\t\tnode.nameController.graphNode().setSuccessorsDirty(node);\n\t}\n}\n","import {PolyScene} from '../PolyScene';\n\n// TODO: considerer removing this module\n// since now the on create hooks should all be in the editor\nexport class SceneLifeCycleController {\n\tconstructor(private scene: PolyScene) {}\n\n\tprivate _lifecycleOnAfterCreatedAllowed: boolean = true;\n\n\tonAfterCreatedCallbackAllowed(): boolean {\n\t\treturn this.scene.loadingController.loaded() && this._lifecycleOnAfterCreatedAllowed;\n\t}\n\n\tonAfterCreatedPrevent(callback: () => void) {\n\t\tthis._lifecycleOnAfterCreatedAllowed = false;\n\t\tcallback();\n\t\tthis._lifecycleOnAfterCreatedAllowed = true;\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {SCENE_EVENT_CREATED_EVENT_CONTEXT, SCENE_EVENT_READY_EVENT_CONTEXT} from './events/SceneEventsController';\n\nexport class LoadingController {\n\tconstructor(private scene: PolyScene) {}\n\n\tprivate _loadingState: boolean = true;\n\tprivate _autoUpdating: boolean = false;\n\n\tmarkAsLoading() {\n\t\tthis._setLoadingState(true);\n\t}\n\tmarkAsLoaded() {\n\t\tthis.scene.missingExpressionReferencesController.resolveMissingReferences();\n\t\tthis._setLoadingState(false);\n\t\tthis._triggerLoadedEvent();\n\t}\n\tdispatchReadyEvent() {\n\t\tif (globalThis.Event) {\n\t\t\tthis.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_READY_EVENT_CONTEXT);\n\t\t}\n\t}\n\tprivate _triggerLoadedEvent() {\n\t\t// we only dispatch events in the browser. If this is run from nodejs, we do not.\n\t\tif (globalThis.Event) {\n\t\t\tthis.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_CREATED_EVENT_CONTEXT);\n\t\t}\n\t}\n\n\tprivate _setLoadingState(state: boolean) {\n\t\tthis._loadingState = state;\n\t\tthis.setAutoUpdate(!this._loadingState);\n\t\tthis.scene.cooker.unblock();\n\t}\n\tisLoading() {\n\t\treturn this._loadingState;\n\t}\n\tloaded() {\n\t\treturn !this._loadingState;\n\t}\n\tautoUpdating() {\n\t\treturn this._autoUpdating;\n\t}\n\tsetAutoUpdate(newState: boolean) {\n\t\tif (this._autoUpdating !== newState) {\n\t\t\tthis._autoUpdating = newState;\n\t\t\tif (this._autoUpdating) {\n\t\t\t\t// if this.env_is_development()\n\t\t\t\t// \tthis.performance().start()\n\n\t\t\t\tconst root = this.scene.root();\n\t\t\t\tif (root) {\n\t\t\t\t\troot.processQueue();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseParamType} from '../../../params/_Base';\nimport {CoreWalker} from '../../../../core/Walker';\n\nexport class MissingReference {\n\tconstructor(private param: BaseParamType, public readonly path: string) {}\n\n\tabsolutePath() {\n\t\tif (!this.param.node) {\n\t\t\treturn;\n\t\t}\n\t\treturn CoreWalker.makeAbsolutePath(this.param.node, this.path);\n\t}\n\tmatchesPath(path: string): boolean {\n\t\treturn this.absolutePath() == path;\n\t}\n\n\tresolveMissingDependencies() {\n\t\tconst input = this.param.rawInputSerialized();\n\t\tthis.param.set(this.param.defaultValue());\n\t\tthis.param.set(input);\n\t}\n}\n","import {BaseNodeType} from '../../../nodes/_Base';\nimport {BaseParamType} from '../../../params/_Base';\nimport {MissingReference} from './MissingReference';\nimport {addToSetAtEntry, mapValuesToArray} from '../../../../core/MapUtils';\nimport {PolyScene} from '../../PolyScene';\nimport {CoreWalker} from '../../../../core/Walker';\nimport {CoreGraphNodeId} from '../../../../core/graph/CoreGraph';\nimport {setToArray} from '../../../../core/SetUtils';\nimport jsep from 'jsep';\n\nconst _resolvedReferences: MissingReference[] = [];\nconst _missingReferences: MissingReference[] = [];\nconst _missingReferencesSet: Set<MissingReference>[] = [];\nexport class MissingReferencesController {\n\tprivate references: Map<CoreGraphNodeId, Set<MissingReference>> = new Map();\n\tprivate _toIgnore: WeakMap<jsep.Expression, boolean> = new WeakMap();\n\n\tconstructor(private scene: PolyScene) {}\n\n\tregister(param: BaseParamType, path: string, jsepNode?: jsep.Expression): MissingReference | undefined {\n\t\tif (jsepNode && this._toIgnore.get(jsepNode) == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst missingReference = new MissingReference(param, path);\n\t\taddToSetAtEntry(this.references, param.graphNodeId(), missingReference);\n\n\t\treturn missingReference;\n\t}\n\tderegisterParam(param: BaseParamType) {\n\t\tthis.references.delete(param.graphNodeId());\n\t}\n\n\tregisterToIgnore(jsepNode: jsep.Expression) {\n\t\tthis._toIgnore.set(jsepNode, true);\n\t}\n\n\t//\n\t//\n\t// MISSING REFERENCES\n\t//\n\t//\n\tresolveMissingReferences() {\n\t\t_resolvedReferences.length = 0;\n\t\tthis.references.forEach((references) => {\n\t\t\treferences.forEach((reference) => {\n\t\t\t\tif (this._isReferenceResolvable(reference)) {\n\t\t\t\t\t_resolvedReferences.push(reference);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (const reference of _resolvedReferences) {\n\t\t\treference.resolveMissingDependencies();\n\t\t}\n\t}\n\tprivate _isReferenceResolvable(reference: MissingReference) {\n\t\tconst absolutePath = reference.absolutePath();\n\t\tif (absolutePath) {\n\t\t\tconst node = this.scene.node(absolutePath);\n\t\t\t// try and find a node first\n\t\t\tif (node) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t// if no node, try and find a param, via a parent first\n\t\t\t\tconst paths = CoreWalker.splitParentChild(absolutePath);\n\t\t\t\tif (paths.child) {\n\t\t\t\t\tconst parentNode = this.scene.node(paths.parent);\n\t\t\t\t\tif (parentNode) {\n\t\t\t\t\t\tconst param = parentNode.params.get(paths.child);\n\t\t\t\t\t\tif (param) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// call this from node.create and node.rename\n\tcheckForMissingNodeReferences(node: BaseNodeType) {\n\t\tif (!node.scene().loadingController.loaded()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._checkForMissingReferencesForNode(node);\n\t\tfor (const param of node.params.all) {\n\t\t\tthis._checkForMissingReferencesForParam(param);\n\t\t}\n\t}\n\t// call this from spare params update\n\tcheckForMissingParamReferences(param: BaseParamType) {\n\t\tif (!param.scene().loadingController.loaded()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._checkForMissingReferencesForParam(param);\n\t}\n\tprivate _checkForMissingReferencesForNode(node: BaseNodeType) {\n\t\tconst id = node.graphNodeId();\n\n\t\tmapValuesToArray(this.references, _missingReferencesSet);\n\t\tfor (const missingReferenceSet of _missingReferencesSet) {\n\t\t\tlet matchFound = false;\n\t\t\tsetToArray(missingReferenceSet, _missingReferences);\n\t\t\tfor (const ref of _missingReferences) {\n\t\t\t\tif (ref.matchesPath(node.path())) {\n\t\t\t\t\tmatchFound = true;\n\t\t\t\t\tref.resolveMissingDependencies();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (matchFound) {\n\t\t\t\tthis.references.delete(id);\n\t\t\t}\n\t\t}\n\t}\n\tprivate _checkForMissingReferencesForParam(param: BaseParamType) {\n\t\tconst id = param.graphNodeId();\n\n\t\tmapValuesToArray(this.references, _missingReferencesSet);\n\t\tfor (const missingReferenceSet of _missingReferencesSet) {\n\t\t\tlet matchFound = false;\n\t\t\tsetToArray(missingReferenceSet, _missingReferences);\n\t\t\tfor (const ref of _missingReferences) {\n\t\t\t\tif (ref.matchesPath(param.path())) {\n\t\t\t\t\tmatchFound = true;\n\t\t\t\t\tref.resolveMissingDependencies();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (matchFound) {\n\t\t\t\tthis.references.delete(id);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {BaseParamType} from '../../params/_Base';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\nimport {Ref, ref} from '@vue/reactivity';\n\ntype GraphNode = BaseNodeType | BaseParamType;\nexport class GraphNodesController {\n\tprivate _graphNodeIdByPath: Map<string, Ref<CoreGraphNodeId | null>> = new Map();\n\tprivate _pathByGraphNodeId: Map<CoreGraphNodeId, string> = new Map();\n\tconstructor(protected scene: PolyScene) {}\n\n\tnotifyNodePathChanged(node: BaseNodeType) {\n\t\tthis._notifyGraphNodePathChanged(node);\n\t\tconst params = node.params.all;\n\t\tfor (const param of params) {\n\t\t\tthis.notifyParamPathChanged(param);\n\t\t}\n\n\t\tnode.childrenController?.traverseChildren((child) => {\n\t\t\tthis._notifyGraphNodePathChanged(child);\n\t\t});\n\t}\n\tnotifyParamPathChanged(param: BaseParamType) {\n\t\tthis._notifyGraphNodePathChanged(param);\n\t}\n\tprivate _notifyGraphNodePathChanged(node: GraphNode) {\n\t\tconst id = node.graphNodeId();\n\t\tconst newPath = node.path();\n\t\t// set id of previous path to null\n\t\tconst previousPath = this._pathByGraphNodeId.get(id);\n\t\tif (previousPath != null) {\n\t\t\tconst _ref = this._graphNodeIdByPath.get(previousPath);\n\t\t\tif (_ref) {\n\t\t\t\t_ref.value = null;\n\t\t\t}\n\t\t}\n\t\tif (node.disposed()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// set new path\n\t\tconst _ref = this._findOrCreateRef(newPath);\n\t\t_ref.value = id;\n\t\tthis._pathByGraphNodeId.set(id, newPath);\n\t}\n\tpathRef(path: string) {\n\t\treturn this._findOrCreateRef(path);\n\t}\n\tprivate _findOrCreateRef(path: string) {\n\t\tlet _ref = this._graphNodeIdByPath.get(path);\n\t\tif (!_ref) {\n\t\t\t_ref = ref(null);\n\t\t\tthis._graphNodeIdByPath.set(path, _ref);\n\t\t}\n\t\treturn _ref;\n\t}\n}\n","import {PolyDictionary} from '../../../types/GlobalTypes';\nimport {PolyScene} from '../PolyScene';\nimport {RootManagerNode, ROOT_NODE_NAME} from '../../nodes/manager/Root';\nimport {stringMatchMask} from '../../../core/String';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {NodeChildrenMapByContext} from '../../poly/registers/nodes/All';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\nimport {NodeCreateOptions} from '../../nodes/utils/hierarchy/ChildrenController';\n\ntype NodeByNodeId = Map<CoreGraphNodeId, BaseNodeType>;\ntype NodeMapByType<NC extends NodeContext> = Map<keyof NodeChildrenMapByContext[NC], NodeByNodeId>;\nexport class NodesController {\n\tconstructor(private scene: PolyScene) {}\n\n\t_root!: RootManagerNode;\n\t_nodeContextSignatures: PolyDictionary<boolean> = {};\n\t_instanciatedNodesByContextAndType: Map<NodeContext, NodeMapByType<NodeContext>> = new Map();\n\n\tcreateRoot(options?: NodeCreateOptions) {\n\t\tthis._root = new RootManagerNode(this.scene, ROOT_NODE_NAME, options);\n\t\tthis._root.initializeBaseAndNode();\n\t\tthis._root.params.init();\n\t}\n\n\troot() {\n\t\treturn this._root;\n\t}\n\tprivate _traverseNode(parent: BaseNodeType, callback: (node: BaseNodeType) => void) {\n\t\tconst nodes = parent.children();\n\t\tif (!nodes || nodes.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const node of nodes) {\n\t\t\tif (node.childrenController) {\n\t\t\t\tthis._traverseNode(node, callback);\n\t\t\t}\n\n\t\t\tcallback(node);\n\t\t}\n\t}\n\ttraverseNodes(callback: (node: BaseNodeType) => void) {\n\t\tthis._traverseNode(this._root, callback);\n\t}\n\n\t// objectsFromMask(mask: string): Object3D[] {\n\t// \tconst masks = mask.split(' ');\n\t// \tconst child_nodes = this.root.children() as BaseObjNodeType[];\n\t// \tconst objects: Object3D[] = [];\n\t// \tfor (let child_node of child_nodes) {\n\t// \t\tif (CoreString.matchesOneMask(child_node.name, masks)) {\n\t// \t\t\tif (child_node.object) {\n\t// \t\t\t\tobjects.push(child_node.object);\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \treturn objects;\n\t// }\n\tclear() {\n\t\tconst children = this.root().children();\n\t\tfor (const child of children) {\n\t\t\tthis.root().childrenController?.removeNode(child);\n\t\t}\n\t\t// return children.forEach(child=> {\n\t\t// \treturn this.root().removeNode(child);\n\t\t// });\n\t}\n\n\tnode(path: string) {\n\t\tif (path === '/') {\n\t\t\treturn this.root();\n\t\t} else {\n\t\t\treturn this.root().node(path);\n\t\t}\n\t}\n\tallNodes() {\n\t\tlet nodes: BaseNodeType[] = [this.root()];\n\t\tlet current_parents: BaseNodeType[] = [this.root()];\n\t\tlet cmptr = 0;\n\t\twhile (current_parents.length > 0 && cmptr < 10) {\n\t\t\tconst children = current_parents\n\t\t\t\t.map((current_parent) => {\n\t\t\t\t\tif (current_parent.childrenAllowed()) {\n\t\t\t\t\t\treturn current_parent.children();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.flat();\n\t\t\tnodes = nodes.concat(children);\n\t\t\tcurrent_parents = children;\n\t\t\tcmptr += 1;\n\t\t}\n\t\treturn nodes.flat();\n\t}\n\tnodesFromMask(mask: string) {\n\t\tconst nodes = this.allNodes();\n\t\tconst matching_nodes: BaseNodeType[] = [];\n\t\tfor (const node of nodes) {\n\t\t\tconst path = node.path();\n\t\t\tif (stringMatchMask(path, mask)) {\n\t\t\t\tmatching_nodes.push(node);\n\t\t\t}\n\t\t}\n\t\treturn matching_nodes;\n\t}\n\n\tresetNodeContextSignatures() {\n\t\tthis._nodeContextSignatures = {};\n\t}\n\tregisterNodeContextSignature(node: BaseNodeType) {\n\t\tif (node.childrenAllowed() && node.childrenController) {\n\t\t\tthis._nodeContextSignatures[node.childrenController.nodeContextSignature()] = true;\n\t\t}\n\t}\n\tnodeContextSignatures() {\n\t\treturn Object.keys(this._nodeContextSignatures)\n\t\t\t.sort()\n\t\t\t.map((s) => s.toLowerCase());\n\t}\n\n\taddToInstanciatedNode<NC extends NodeContext>(node: BaseNodeType) {\n\t\tconst context = node.context() as NC;\n\t\tconst nodeType = node.type() as keyof NodeChildrenMapByContext[NC];\n\n\t\tlet mapForContext: NodeMapByType<NC> | undefined = this._instanciatedNodesByContextAndType.get(context);\n\t\tif (!mapForContext) {\n\t\t\tmapForContext = new Map() as NodeMapByType<NC>;\n\t\t\tthis._instanciatedNodesByContextAndType.set(context, mapForContext as any);\n\t\t}\n\t\tlet mapForType = mapForContext.get(nodeType);\n\t\tif (!mapForType) {\n\t\t\tmapForType = new Map() as NodeByNodeId;\n\t\t\tmapForContext.set(nodeType, mapForType);\n\t\t}\n\t\tmapForType.set(node.graphNodeId(), node);\n\n\t\t// this._instanciated_nodes_by_context_and_type[context] =\n\t\t// \tthis._instanciated_nodes_by_context_and_type[context] || {};\n\t\t// this._instanciated_nodes_by_context_and_type[context][node_type] =\n\t\t// \tthis._instanciated_nodes_by_context_and_type[context][node_type] || {};\n\t\t// this._instanciated_nodes_by_context_and_type[context][node_type][node.graphNodeId()] = node;\n\t}\n\n\tremoveFromInstanciatedNode<NC extends NodeContext>(node: BaseNodeType) {\n\t\tconst context = node.context() as NC;\n\t\tconst nodeType = node.type() as keyof NodeChildrenMapByContext[NC];\n\t\tconst mapForContext: NodeMapByType<NC> | undefined = this._instanciatedNodesByContextAndType.get(context);\n\t\tif (!mapForContext) {\n\t\t\treturn;\n\t\t}\n\t\tconst mapForType = mapForContext.get(nodeType);\n\t\tif (!mapForType) {\n\t\t\treturn;\n\t\t}\n\t\tmapForType.delete(node.graphNodeId());\n\t\t// delete this._instanciated_nodes_by_context_and_type[context][node_type][node.graphNodeId()];\n\t}\n\tnodesByType(type: string): BaseNodeType[] {\n\t\tconst list: BaseNodeType[] = [];\n\n\t\tthis._traverseNode(this.scene.root(), (node) => {\n\t\t\tif (node.type() == type) {\n\t\t\t\tlist.push(node);\n\t\t\t}\n\t\t});\n\n\t\treturn list;\n\t}\n\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.ANIM]>(\n\t\tcontext: NodeContext.ANIM,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.ANIM][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.AUDIO]>(\n\t\tcontext: NodeContext.AUDIO,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.AUDIO][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.COP]>(\n\t\tcontext: NodeContext.COP,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.COP][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.EVENT]>(\n\t\tcontext: NodeContext.EVENT,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.EVENT][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.GL]>(\n\t\tcontext: NodeContext.GL,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.GL][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.JS]>(\n\t\tcontext: NodeContext.JS,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.JS][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.MAT]>(\n\t\tcontext: NodeContext.MAT,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.MAT][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.OBJ]>(\n\t\tcontext: NodeContext.OBJ,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.OBJ][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.POST]>(\n\t\tcontext: NodeContext.POST,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.POST][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.ROP]>(\n\t\tcontext: NodeContext.ROP,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.ROP][T][];\n\tnodesByContextAndType<T extends keyof NodeChildrenMapByContext[NodeContext.SOP]>(\n\t\tcontext: NodeContext.SOP,\n\t\tnode_type: T\n\t): NodeChildrenMapByContext[NodeContext.SOP][T][];\n\tnodesByContextAndType<NC extends NodeContext>(context: NC, nodeType: string) {\n\t\tconst nodes: BaseNodeType[] = [];\n\t\tconst mapForContext: NodeMapByType<NC> | undefined = this._instanciatedNodesByContextAndType.get(context);\n\t\tif (mapForContext) {\n\t\t\tconst mapForType = mapForContext.get(nodeType as any);\n\t\t\tif (mapForType) {\n\t\t\t\tmapForType.forEach((node) => {\n\t\t\t\t\tnodes.push(node);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn nodes;\n\t}\n\n\thasNodesByContextAndType<NC extends NodeContext>(context: NC, nodeType: string) {\n\t\tconst mapForContext: NodeMapByType<NC> | undefined = this._instanciatedNodesByContextAndType.get(context);\n\t\tif (!mapForContext) {\n\t\t\treturn false;\n\t\t}\n\t\tconst mapForType = mapForContext.get(nodeType as any);\n\t\tif (!mapForType) {\n\t\t\treturn false;\n\t\t}\n\t\treturn mapForType.size != 0;\n\t}\n}\n","import {BaseInputEventNodeType} from '../../../nodes/event/_BaseInput';\nimport {SceneEventsDispatcher} from './EventsDispatcher';\nimport {BaseNodeType} from '../../../nodes/_Base';\nimport {Intersection} from 'three';\nimport {BaseViewerType} from '../../../viewers/_Base';\n// import type {BaseUserInputJsNodeType} from '../../../nodes/js/_BaseUserInput';\nimport {EventData, EventType} from '../../../../core/event/EventData';\nimport {PointerEventType} from '../../../../core/event/PointerEventType';\n// import {MapUtils} from '../../../../core/MapUtils';\nimport {CoreEventEmitter} from '../../../../core/event/CoreEventEmitter';\nimport {MapUtils} from '../../../../core/MapUtils';\nimport {ActorEvaluatorGenerator} from '../../../nodes/js/code/assemblers/actor/ActorEvaluatorGenerator';\n\ninterface EventContextValue {\n\tnode?: BaseNodeType; // for node_cook\n\tintersect?: Intersection; // for raycast\n}\n\nexport interface EventContext<E extends Event> {\n\tviewer?: Readonly<BaseViewerType>;\n\tevent?: Readonly<E>;\n\temitter?: CoreEventEmitter;\n\t// camera?: Readonly<Camera>;\n\tvalue?: EventContextValue;\n}\nexport abstract class BaseSceneEventsController<\n\tE extends Event,\n\tT extends BaseInputEventNodeType\n\t// JsNodeType extends BaseUserInputJsNodeType\n> {\n\tprivate _activeEventDatas: EventData[] = [];\n\tprivate _activeEventDataTypes: Set<string> = new Set();\n\tprotected _eventNodes: Set<T> = new Set();\n\tprotected _requireCanvasEventListeners: boolean = false;\n\tprotected _actorEvaluators: Set<ActorEvaluatorGenerator> = new Set();\n\t// protected _actorEventNames: Set<string> = new Set();\n\tprotected _actorEvaluatorsByEventNames: Map<string, Map<CoreEventEmitter, Set<ActorEvaluatorGenerator>>> =\n\t\tnew Map();\n\tconstructor(protected dispatcher: SceneEventsDispatcher) {}\n\n\tregisterEventNode(node: T) {\n\t\tthis._eventNodes.add(node);\n\t\tthis.updateViewerEventListeners();\n\t}\n\tunregisterEventNode(node: T) {\n\t\tthis._eventNodes.delete(node);\n\t\tthis.updateViewerEventListeners();\n\t}\n\tregisterEvaluatorGenerator(evaluator: ActorEvaluatorGenerator) {\n\t\tthis._actorEvaluators.add(evaluator);\n\t\tthis._updateActorEvaluatorCache();\n\t\tthis.updateViewerEventListeners();\n\t}\n\tunregisterEvaluatorGenerator(evaluator: ActorEvaluatorGenerator) {\n\t\tthis._actorEvaluators.delete(evaluator);\n\t\tthis._updateActorEvaluatorCache();\n\t\tthis.updateViewerEventListeners();\n\t}\n\n\tprivate _updateActorEvaluatorCache() {\n\t\t// this._actorEventNames.clear();\n\t\tthis._actorEvaluatorsByEventNames.clear();\n\t\tthis._actorEvaluators.forEach((evaluator) => {\n\t\t\tconst eventDatas = evaluator.eventDatas;\n\t\t\tif (eventDatas) {\n\t\t\t\teventDatas.forEach((eventData) => {\n\t\t\t\t\tconst eventName = eventData.type;\n\t\t\t\t\tconst emitter = eventData.emitter;\n\t\t\t\t\tlet mapForEventName = this._actorEvaluatorsByEventNames.get(eventName);\n\t\t\t\t\tif (!mapForEventName) {\n\t\t\t\t\t\tmapForEventName = new Map();\n\t\t\t\t\t\tthis._actorEvaluatorsByEventNames.set(eventName, mapForEventName);\n\t\t\t\t\t}\n\t\t\t\t\tMapUtils.addToSetAtEntry(mapForEventName, emitter, evaluator);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// const nodeEventNames = node.userInputEventNames();\n\t\t\t// const emitter = node.eventEmitter();\n\t\t\t// for (let eventName of nodeEventNames) {\n\t\t\t// \t// this._actorEventNames.add(eventName);\n\n\t\t\t// \tlet mapForEventName = this._actorNodesByEventNames.get(eventName);\n\t\t\t// \tif (!mapForEventName) {\n\t\t\t// \t\tmapForEventName = new Map();\n\t\t\t// \t\tthis._actorNodesByEventNames.set(eventName, mapForEventName);\n\t\t\t// \t}\n\t\t\t// \tMapUtils.addToSetAtEntry(mapForEventName, emitter, node);\n\t\t\t// }\n\t\t});\n\t}\n\n\tabstract type(): string;\n\tabstract acceptedEventTypes(): Set<string>;\n\t// abstract accepts_event(event: Event): boolean;\n\n\tprocessEvent(eventContext: EventContext<E>) {\n\t\tif (this._activeEventDatas.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst eventType = eventContext.event?.type;\n\t\tif (eventType) {\n\t\t\t// The check here if the eventType is active\n\t\t\t// is not necessary for canvas events (pointer, mouse, keyboard)\n\t\t\t// but currently necessary for scene events (such as tick)\n\t\t\tif (!this._activeEventDataTypes.has(eventType)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._eventNodes.forEach((node) => {\n\t\t\tnode.processEvent(eventContext);\n\t\t});\n\t}\n\n\tupdateViewerEventListeners() {\n\t\tthis._updateActiveEventTypes();\n\n\t\tif (this._requireCanvasEventListeners) {\n\t\t\tthis.dispatcher.scene.viewersRegister.traverseViewers((viewer) => {\n\t\t\t\tviewer.eventsController().updateEvents(this);\n\t\t\t});\n\t\t}\n\t}\n\n\tactiveEventDatas() {\n\t\treturn this._activeEventDatas;\n\t}\n\n\tprivate _updateActiveEventTypes() {\n\t\tconst _storeEventData = (eventData: EventData) => {\n\t\t\tthis._activeEventDatas.push(eventData);\n\t\t\tthis._activeEventDataTypes.add(eventData.type);\n\t\t};\n\n\t\tconst _reset = () => {\n\t\t\tthis._activeEventDatas.splice(0, this._activeEventDatas.length);\n\t\t\tthis._activeEventDataTypes.clear();\n\t\t};\n\n\t\tconst _actorEventDatas = () => {\n\t\t\tlet eventTypeByEmitter: Map<CoreEventEmitter, Set<EventType>> = new Map();\n\n\t\t\tthis._actorEvaluatorsByEventNames.forEach((mapForEventName, eventName) => {\n\t\t\t\tmapForEventName.forEach((nodes, emitter) => {\n\t\t\t\t\tnodes.forEach((node) => {\n\t\t\t\t\t\tMapUtils.addToSetAtEntry(eventTypeByEmitter, emitter, eventName);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tconst eventDatas: EventData[] = [];\n\t\t\teventTypeByEmitter.forEach((eventNames, emitter) => {\n\t\t\t\tfor (const eventName of eventNames) {\n\t\t\t\t\tconst eventData: EventData = {\n\t\t\t\t\t\ttype: eventName,\n\t\t\t\t\t\temitter,\n\t\t\t\t\t};\n\t\t\t\t\teventDatas.push(eventData);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn eventDatas;\n\t\t};\n\n\t\tconst _updateActorNodesEventData = () => {\n\t\t\tconst actorEventDatas = _actorEventDatas();\n\t\t\tif (actorEventDatas) {\n\t\t\t\tfor (const data of actorEventDatas) {\n\t\t\t\t\t_storeEventData(data);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst _updateEventNodesEventData = () => {\n\t\t\tconst activeNodeEventTypesState: Set<EventData> = new Set();\n\t\t\tthis._eventNodes.forEach((node) => {\n\t\t\t\tif (node.parent()) {\n\t\t\t\t\tconst nodeActiveEventDatas = node.activeEventDatas();\n\t\t\t\t\tfor (const data of nodeActiveEventDatas) {\n\t\t\t\t\t\tactiveNodeEventTypesState.add(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tactiveNodeEventTypesState.forEach((state, data) => {\n\t\t\t\t_storeEventData(data);\n\t\t\t});\n\t\t};\n\n\t\t_reset();\n\n\t\t// we always need the pointermove and touchmove\n\t\t// in order to always update the cursor\n\t\t_storeEventData({\n\t\t\ttype: PointerEventType.pointermove,\n\t\t\temitter: CoreEventEmitter.DOCUMENT,\n\t\t});\n\t\t_storeEventData({\n\t\t\ttype: PointerEventType.touchmove,\n\t\t\temitter: CoreEventEmitter.DOCUMENT,\n\t\t});\n\n\t\t_updateActorNodesEventData();\n\t\t_updateEventNodesEventData();\n\t}\n}\n\nexport type BaseSceneEventsControllerType = BaseSceneEventsController<\n\tEvent,\n\tBaseInputEventNodeType\n\t// BaseUserInputJsNodeType\n>;\nexport class BaseSceneEventsControllerClass extends BaseSceneEventsController<\n\tEvent,\n\tBaseInputEventNodeType\n\t// BaseUserInputJsNodeType\n> {\n\ttype() {\n\t\treturn '';\n\t}\n\tacceptedEventTypes(): Set<string> {\n\t\treturn new Set<string>();\n\t}\n}\n","import {BaseSceneEventsController} from './_BaseEventsController';\nimport {PointerEventNode} from '../../../nodes/event/Pointer';\nimport {ACCEPTED_DRAG_EVENT_TYPES} from '../../../../core/event/DragEventType';\n// import {BaseUserInputActorNodeType} from '../../../nodes/actor/_BaseUserInput';\n\nexport class DragEventsController extends BaseSceneEventsController<MouseEvent, PointerEventNode> {\n\tprotected override _requireCanvasEventListeners: boolean = true;\n\ttype() {\n\t\treturn 'drag';\n\t}\n\tacceptedEventTypes() {\n\t\treturn new Set([...ACCEPTED_DRAG_EVENT_TYPES]);\n\t}\n}\n","import {BaseSceneEventsController, EventContext} from './_BaseEventsController';\nimport {KeyboardEventNode} from '../../../nodes/event/Keyboard';\n// import type {KeyboardEventActorNode} from '../actors/ActorsKeyboardEventsController';\nimport {ACCEPTED_KEYBOARD_EVENT_TYPES, KeyboardEventType} from '../../../../core/event/KeyboardEventType';\nimport {SceneEventsDispatcher} from './EventsDispatcher';\nimport {TimeController} from '../TimeController';\n// import {TimeController} from '../TimeController';\nimport {ActorKeyboardEventsController} from '../actors/ActorsKeyboardEventsController';\nimport {EvaluatorKeyboardMethod} from '../../../nodes/js/code/assemblers/actor/ActorEvaluator';\nimport {JsType} from '../../../poly/registers/nodes/types/Js';\n\nconst methodNameByEventType: Record<KeyboardEventType, EvaluatorKeyboardMethod[]> = {\n\t[KeyboardEventType.keydown]: [JsType.ON_KEY, JsType.ON_KEYDOWN],\n\t[KeyboardEventType.keypress]: [JsType.ON_KEYPRESS],\n\t[KeyboardEventType.keyup]: [JsType.ON_KEY, JsType.ON_KEYUP],\n};\n\nexport class KeyboardEventsController extends BaseSceneEventsController<\n\tKeyboardEvent,\n\tKeyboardEventNode\n\t// KeyboardEventActorNode\n> {\n\tprivate timeController: TimeController;\n\tprivate keyboardEventsController: ActorKeyboardEventsController;\n\tconstructor(dispatcher: SceneEventsDispatcher) {\n\t\tsuper(dispatcher);\n\t\tthis.timeController = this.dispatcher.scene.timeController;\n\t\tthis.keyboardEventsController = this.dispatcher.scene.actorsManager.keyboardEventsController;\n\t}\n\n\tprotected override _requireCanvasEventListeners: boolean = true;\n\ttype() {\n\t\treturn 'keyboard';\n\t}\n\tacceptedEventTypes() {\n\t\treturn new Set(ACCEPTED_KEYBOARD_EVENT_TYPES.map((n) => `${n}`));\n\t}\n\n\tprivate _currentEvents: KeyboardEvent[] = [];\n\tprivate _lastProcessedFrame = -1;\n\tcurrentEvents() {\n\t\treturn this._currentEvents;\n\t}\n\toverride processEvent(eventContext: EventContext<KeyboardEvent>) {\n\t\tsuper.processEvent(eventContext);\n\n\t\t// const eventEmitter = eventContext.emitter;\n\t\t// if (!eventEmitter) {\n\t\t// \treturn;\n\t\t// }\n\n\t\tconst {event} = eventContext;\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tconst eventType = event.type as KeyboardEventType;\n\n\t\tconst mapForEvent = this._actorEvaluatorsByEventNames.get(eventType);\n\t\tif (!mapForEvent) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.timeController.playing()) {\n\t\t\tconst frame = this.timeController.frame();\n\t\t\tif (frame != this._lastProcessedFrame) {\n\t\t\t\tthis._lastProcessedFrame = frame;\n\t\t\t\tthis._currentEvents.length = 0;\n\t\t\t}\n\t\t\tthis._currentEvents.push(event);\n\t\t\t// this.keyboardEventsController.setTriggeredNodes(nodesToTrigger);\n\t\t} else {\n\t\t\tthis._currentEvents[0] = event;\n\t\t}\n\n\t\tconst eventEmitter = eventContext.emitter;\n\t\tif (!eventEmitter) {\n\t\t\treturn;\n\t\t}\n\t\tconst evaluatorGenerators = mapForEvent.get(eventEmitter);\n\t\tif (!evaluatorGenerators) {\n\t\t\treturn;\n\t\t}\n\t\tconst methodNames = methodNameByEventType[eventType];\n\t\tif (!methodNames) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const methodName of methodNames) {\n\t\t\tthis.keyboardEventsController.addTriggeredEvaluators(evaluatorGenerators, methodName);\n\t\t}\n\t\t// evaluatorGenerators.forEach((evaluatorGenerator) => {\n\t\t// \tthis.keyboardEventsController.setTriggeredNodes(nodesToTrigger);\n\t\t// \t// evaluatorGenerator.traverseEvaluator((evaluator) => {\n\t\t// \t// \tif (evaluator[methodName]) {\n\t\t// \t// \t\tevaluator[methodName]!();\n\t\t// \t// \t}\n\t\t// \t// });\n\t\t// });\n\n\t\t// const eventType = event.type;\n\t\t// // const mapForEvent = this._actorNodesByEventNames.get(eventType);\n\t\t// // if (!mapForEvent) {\n\t\t// // \treturn;\n\t\t// // }\n\t\t// // const nodesToTrigger = mapForEvent.get(eventEmitter);\n\t\t// // if (!nodesToTrigger) {\n\t\t// // \treturn;\n\t\t// // }\n\t}\n}\n","import {BaseSceneEventsController} from './_BaseEventsController';\nimport {MouseEventNode} from '../../../nodes/event/Mouse';\nimport {ACCEPTED_MOUSE_EVENT_TYPES} from '../../../../core/event/MouseEventType';\n// import {BaseUserInputActorNodeType} from '../../../nodes/actor/_BaseUserInput';\n\nexport class MouseEventsController extends BaseSceneEventsController<\n\tMouseEvent,\n\tMouseEventNode\n\t// BaseUserInputActorNodeType\n> {\n\tprotected override _requireCanvasEventListeners: boolean = true;\n\ttype() {\n\t\treturn 'mouse';\n\t}\n\tacceptedEventTypes() {\n\t\treturn new Set([...ACCEPTED_MOUSE_EVENT_TYPES]);\n\t}\n\t// accepts_event(event: MouseEvent) {\n\t// \treturn ACCEPTED_MOUSE_EVENT_TYPES.includes(event.type as MouseEventType);\n\t// }\n}\n","import {BaseSceneEventsController, EventContext} from './_BaseEventsController';\nimport {PointerEventNode} from '../../../nodes/event/Pointer';\nimport {Raycaster, Vector2} from 'three';\nimport {MouseEventType} from '../../../../core/event/MouseEventType';\nimport {ACCEPTED_POINTER_EVENT_TYPES, PointerEventType} from '../../../../core/event/PointerEventType';\nimport {TouchEventType} from '../../../../core/event/TouchEventType';\nimport {ref} from '../../../../core/reactivity/CoreReactivity';\nimport {CursorHelper} from '../../../nodes/event/utils/CursorHelper';\nimport {createRaycaster} from '../../../../core/RaycastHelper';\nimport {SceneEventsDispatcher} from './EventsDispatcher';\nimport {isTouchDevice} from '../../../../core/UserAgent';\nexport interface RaycasterUpdateOptions {\n\tpointsThreshold: number;\n\tlineThreshold: number;\n}\n\n// const methodNameByEventType: Record<PointerEventType, EvaluatorPointerMethod> = {\n// \t// [PointerEventType.click]: 'onClick',\n// \t[PointerEventType.contextmenu]: 'onContextMenu',\n// \t[PointerEventType.pointerdown]: JsType.ON_POINTERDOWN,\n// \t[PointerEventType.pointermove]: 'onPointermove',\n// \t[PointerEventType.pointerup]: JsType.ON_POINTERUP,\n// \t[PointerEventType.touchstart]: JsType.ON_POINTERDOWN,\n// \t[PointerEventType.touchmove]: 'onPointermove',\n// \t[PointerEventType.touchend]: JsType.ON_POINTERUP,\n// };\n\nexport class PointerEventsController extends BaseSceneEventsController<MouseEvent | TouchEvent, PointerEventNode> {\n\tconstructor(dispatcher: SceneEventsDispatcher) {\n\t\tsuper(dispatcher);\n\t}\n\tprotected override _requireCanvasEventListeners: boolean = true;\n\tprivate _cursorHelper: CursorHelper = new CursorHelper();\n\t// init to a large value so we don't get a fake intersect\n\t// if there was no interaction\n\tprotected _cursor0 = ref<Vector2>(new Vector2(-1000, -1000));\n\t// protected _camera: Camera | undefined;\n\tprivate _raycaster0 = ref<Raycaster>(createRaycaster());\n\ttype() {\n\t\treturn 'pointer';\n\t}\n\tacceptedEventTypes() {\n\t\treturn new Set([...ACCEPTED_POINTER_EVENT_TYPES]);\n\t}\n\n\tsetRaycaster(raycaster: Raycaster) {\n\t\t// giving a raycaster here is useful to still benefit from mouse events, even if no viewer has been created\n\t\tthis._raycaster0.value = raycaster;\n\t}\n\n\toverride processEvent(eventContext: EventContext<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tthis._cursorHelper.setCursorForCPU(eventContext, this._cursor0.value);\n\t\tsuper.processEvent(eventContext);\n\n\t\tconst {viewer, event} = eventContext;\n\t\tif (!(event && viewer)) {\n\t\t\tconsole.log('either event or viewer missing');\n\t\t\treturn;\n\t\t}\n\n\t\t// const camera = viewer.camera();\n\t\t// this._cursorHelper.setCursorForCPU(eventContext, this._cursor);\n\t\t// if (camera) {\n\t\tviewer.raycastersController.setCursor0(this._cursor0.value);\n\t\t// even though the update is in the render loop\n\t\t// it may be more up to date to do it here as well\n\t\tviewer.raycastersController.updateRaycasters();\n\t\t// this._raycaster = viewer.raycastersController.raycaster0();\n\t\t// }\n\n\t\tconst eventType = event.type as PointerEventType | TouchEventType | MouseEventType;\n\t\tif (eventType == PointerEventType.pointermove) {\n\t\t\t// pointermove is not processed here,\n\t\t\t// since callbacks such as onObjectHover\n\t\t\t// should be triggered even if the pointer is not moving\n\t\t\t// (for instance if instead  the object is moving).\n\t\t\t// It is therefore triggered via the ActorsManager\n\t\t\treturn;\n\t\t}\n\n\t\tconst mapForEvent = this._actorEvaluatorsByEventNames.get(eventType);\n\t\tif (!mapForEvent) {\n\t\t\t// console.log('no map for eventType', eventType);\n\t\t\treturn;\n\t\t}\n\t\tconst eventEmitter = eventContext.emitter;\n\t\tif (!eventEmitter) {\n\t\t\t// console.log('no emitter for context', eventContext);\n\t\t\treturn;\n\t\t}\n\t\tconst evaluatorGenerators = mapForEvent.get(eventEmitter);\n\t\tif (!evaluatorGenerators) {\n\t\t\t// console.log('no generators for emitter', eventEmitter);\n\t\t\treturn;\n\t\t}\n\t\t// const methodName = methodNameByEventType[eventType];\n\n\t\tif (eventContext.event) {\n\t\t\tconst actorsManager = this.dispatcher.scene.actorsManager;\n\t\t\tswitch (eventType) {\n\t\t\t\tcase MouseEventType.mousedown: {\n\t\t\t\t\tactorsManager.rayObjectIntersectionMouseClick.onMousedown(eventContext.event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase PointerEventType.pointerdown: {\n\t\t\t\t\tactorsManager.rayObjectIntersectionClick.onPointerdown(eventContext.event);\n\t\t\t\t\tactorsManager.rayObjectIntersectionLongPress.onPointerdown(eventContext.event);\n\t\t\t\t\tactorsManager.rayObjectIntersectionPointerdown.onPointerdown(eventContext.event);\n\t\t\t\t\tactorsManager.pointerdown.onPointerdown(eventContext.event);\n\t\t\t\t\tactorsManager.rayObjectIntersectionSwipe.onPointerdown(eventContext.event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase PointerEventType.pointerup: {\n\t\t\t\t\tif (!isTouchDevice()) {\n\t\t\t\t\t\tactorsManager.rayObjectIntersectionPointerup.onPointerup(eventContext.event);\n\t\t\t\t\t\tactorsManager.pointerup.onPointerup(eventContext.event);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcase PointerEventType.contextmenu: {\n\t\t\t\t\tactorsManager.rayObjectIntersectionContextmenu.onContextmenu(eventContext.event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase TouchEventType.touchend: {\n\t\t\t\t\t// we also need to trigger onPointerup after touchend,\n\t\t\t\t\t// as pointerup appears to not be triggered once the cursor has moved\n\t\t\t\t\tif (isTouchDevice()) {\n\t\t\t\t\t\tactorsManager.rayObjectIntersectionPointerup.onPointerup(eventContext.event);\n\t\t\t\t\t\tactorsManager.pointerup.onPointerup(eventContext.event);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// for (let methodName of methodNames) {\n\t\t// this.pointerEventsController.addTriggeredEvaluators(evaluatorGenerators, methodName);\n\t\t// }\n\t\t// console.log('evaluatorGenerators', evaluatorGenerators);\n\t\t//\n\t\t// evaluatorGenerators.forEach((evaluatorGenerator) => {\n\t\t// \tevaluatorGenerator.traverseEvaluator((evaluator) => {\n\t\t// \t\tconsole.log({evaluator}, evaluator.onObjectClick);\n\t\t// \t\tif (evaluator[methodName]) {\n\t\t// \t\t\tevaluator[methodName]!();\n\t\t// \t\t} else {\n\t\t// \t\t\tconsole.log('method not found on object for event type', eventType);\n\t\t// \t\t}\n\t\t// \t});\n\t\t// });\n\t\t// this.dispatcher.scene.actorsManager.pointerEventsController.setTriggeredNodes(nodesToTrigger);\n\t}\n\n\traycaster() {\n\t\treturn this._raycaster0;\n\t}\n\tcursor() {\n\t\treturn this._cursor0;\n\t}\n\t// camera() {\n\t// \treturn this._camera;\n\t// }\n\n\tupdateRaycast(options: RaycasterUpdateOptions) {\n\t\t// if (!this._raycaster0) {\n\t\t// \treturn;\n\t\t// }\n\t\tconst pointsParam = this._raycaster0.value.params.Points;\n\t\tif (pointsParam) {\n\t\t\tpointsParam.threshold = options.pointsThreshold;\n\t\t}\n\t\tconst lineParam = this._raycaster0.value.params.Line;\n\t\tif (lineParam) {\n\t\t\tlineParam.threshold = options.lineThreshold;\n\t\t}\n\t}\n}\n","import {BaseSceneEventsController} from './_BaseEventsController';\nimport {PointerEventNode} from '../../../nodes/event/Pointer';\n// import {BaseUserInputActorNodeType} from '../../../nodes/actor/_BaseUserInput';\n\n// https://developer.mozilla.org/en-US/docs/Web/Events\nenum WindowEventType {\n\tresize = 'resize',\n}\nexport const ACCEPTED_WINDOW_EVENT_TYPES: WindowEventType[] = [WindowEventType.resize];\n\nexport class WindowEventsController extends BaseSceneEventsController<\n\tEvent,\n\tPointerEventNode\n\t// BaseUserInputActorNodeType\n> {\n\tprotected override _requireCanvasEventListeners: boolean = true;\n\ttype() {\n\t\treturn 'window';\n\t}\n\tacceptedEventTypes() {\n\t\treturn new Set(ACCEPTED_WINDOW_EVENT_TYPES.map((n) => `${n}`));\n\t}\n}\n","import {BaseSceneEventsController} from './_BaseEventsController';\nimport {PointerEventNode} from '../../../nodes/event/Pointer';\nimport {ACCEPTED_TOUCH_EVENT_TYPES} from '../../../../core/event/TouchEventType';\n// import {BaseUserInputActorNodeType} from '../../../nodes/actor/_BaseUserInput';\n\nexport class TouchEventsController extends BaseSceneEventsController<\n\tMouseEvent,\n\tPointerEventNode\n\t// BaseUserInputActorNodeType\n> {\n\tprotected override _requireCanvasEventListeners: boolean = true;\n\ttype() {\n\t\treturn 'touch';\n\t}\n\tacceptedEventTypes() {\n\t\treturn new Set([...ACCEPTED_TOUCH_EVENT_TYPES]);\n\t}\n}\n","import {NODE_CONNECTION_TRIGGERED_EVENT, TypedNodeConnection} from '../../../nodes/utils/io/NodeConnection';\nimport {NodeContext} from '../../../poly/NodeContext';\n\nexport class SceneConnectionTriggerDispatcher {\n\t// private _dispatchedConnections: Set<TypedNodeConnection<any>> = new Set();\n\tconstructor() {}\n\n\tdispatchTrigger<NC extends NodeContext>(connection: TypedNodeConnection<NC>) {\n\t\tconnection._eventDispatcher()?.dispatchEvent(NODE_CONNECTION_TRIGGERED_EVENT);\n\t\t// this._dispatchedConnections.add(connection);\n\t}\n}\n","import {Constructor} from '../../../../types/GlobalTypes';\nimport {PolyScene} from '../../PolyScene';\nimport {BaseEventNodeType} from '../../../nodes/event/_Base';\nimport {BaseInputEventNodeType} from '../../../nodes/event/_BaseInput';\nimport {BaseSceneEventsController, BaseSceneEventsControllerClass} from './_BaseEventsController';\nimport {SceneEventsController} from './SceneEventsController';\nimport {DragEventsController} from './DragEventsController';\nimport {KeyboardEventsController} from './KeyboardEventsController';\nimport {MouseEventsController} from './MouseEventsController';\nimport {PointerEventsController} from './PointerEventsController';\nimport {WindowEventsController} from './WindowEventsController';\nimport {TouchEventsController} from './TouchEventsController';\n\nimport {SceneConnectionTriggerDispatcher} from './ConnectionTriggerDispatcher';\nimport {EventInputType} from '../../../poly/registers/nodes/types/Event';\n// import {BaseUserInputJsNodeType} from '../../../nodes/js/_BaseUserInput';\n// import {JsType} from '../../../poly/registers/nodes/types/Js';\nimport {Raycaster} from 'three';\nimport {ActorEvaluatorGenerator} from '../../../nodes/js/code/assemblers/actor/ActorEvaluatorGenerator';\nimport {JsType} from '../../../poly/registers/nodes/types/Js';\n\nexport class SceneEventsDispatcher {\n\tprivate _controllers: BaseSceneEventsController<Event, BaseInputEventNodeType>[] = [];\n\tpublic readonly sceneEventsController = new SceneEventsController();\n\tprivate _keyboardEventsController?: KeyboardEventsController;\n\tprivate _mouseEventsController?: MouseEventsController;\n\tprivate _dragEventsController?: DragEventsController;\n\tprivate _windowEventsController?: WindowEventsController;\n\tprivate _touchEventsController?: TouchEventsController;\n\tpublic readonly pointerEventsController: PointerEventsController = this._createController(PointerEventsController);\n\tconstructor(public scene: PolyScene) {}\n\n\tregisterEvaluatorGenerator(evaluatorGenerator: ActorEvaluatorGenerator) {\n\t\tconst controllers = this._findOrCreateControllerForEvaluator(evaluatorGenerator);\n\t\tif (controllers) {\n\t\t\tcontrollers.forEach((c) => c.registerEvaluatorGenerator(evaluatorGenerator));\n\t\t}\n\t}\n\tunregisterEvaluatorGenerator(evaluatorGenerator: ActorEvaluatorGenerator) {\n\t\tconst controllers = this._findOrCreateControllerForEvaluator(evaluatorGenerator);\n\t\tif (controllers) {\n\t\t\tcontrollers.forEach((c) => c.unregisterEvaluatorGenerator(evaluatorGenerator));\n\t\t}\n\t}\n\t// updateControllersFromJsNodes() {\n\t// \tconst eventDatas = this.scene.actorsManager.eventDatas();\n\t// \teventDatas.forEach((type) => {\n\t// \t\tthis._findOrCreateControllerForEventInputType(type);\n\t// \t});\n\t// }\n\n\tregisterEventNode(node: BaseInputEventNodeType) {\n\t\tconst controller = this._findOrCreateControllerForEventNode(node);\n\t\tif (controller) {\n\t\t\tcontroller.registerEventNode(node);\n\t\t}\n\t}\n\tunregisterEventNode(node: BaseInputEventNodeType) {\n\t\tconst controller = this._findOrCreateControllerForEventNode(node);\n\t\tif (controller) {\n\t\t\tcontroller.unregisterEventNode(node);\n\t\t}\n\t}\n\tupdateViewerEventListeners(node: BaseInputEventNodeType) {\n\t\tconst controller = this._findOrCreateControllerForEventNode(node);\n\t\tif (controller) {\n\t\t\tcontroller.updateViewerEventListeners();\n\t\t}\n\t}\n\ttraverseControllers(callback: (controller: BaseSceneEventsController<Event, BaseInputEventNodeType>) => void) {\n\t\tfor (const controller of this._controllers) {\n\t\t\tcallback(controller);\n\t\t}\n\t}\n\n\tsetRaycaster(raycaster: Raycaster) {\n\t\t// giving a raycaster here is useful to still benefit from mouse events, even if not viewer has been created\n\t\tthis.pointerEventsController.setRaycaster(raycaster);\n\t}\n\n\t// processEvent(event_content: EventContext<Event>) {\n\t// \tif (!event_content.event) {\n\t// \t\treturn;\n\t// \t}\n\t// \tfor (let controller of this._controllers) {\n\t// \t\tif (controller.accepts_event(event_content.event)) {\n\t// \t\t\tcontroller.processEvent(event_content);\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tprivate _findOrCreateControllerForEventNode<T extends BaseEventNodeType>(\n\t\tnode: T\n\t): BaseSceneEventsController<Event, BaseInputEventNodeType> | undefined {\n\t\treturn this._findOrCreateControllerForEventInputType(node.type() as EventInputType);\n\t}\n\n\tprivate _findOrCreateControllerForEvaluator(\n\t\tevaluator: ActorEvaluatorGenerator\n\t): Set<BaseSceneEventsController<Event, BaseInputEventNodeType>> | undefined {\n\t\tconst eventDatas = evaluator.eventDatas;\n\t\tif (!eventDatas) {\n\t\t\treturn;\n\t\t}\n\t\tconst controllers: Set<BaseSceneEventsController<Event, BaseInputEventNodeType>> = new Set();\n\t\teventDatas.forEach((eventData) => {\n\t\t\tconst controller = this._findOrCreateControllerForJsType(eventData.jsType);\n\t\t\tif (controller) {\n\t\t\t\tcontrollers.add(controller);\n\t\t\t}\n\t\t});\n\n\t\treturn controllers;\n\t}\n\tprivate _findOrCreateControllerForEventInputType(\n\t\ttype: EventInputType\n\t): BaseSceneEventsController<Event, BaseInputEventNodeType> | undefined {\n\t\tswitch (type) {\n\t\t\tcase EventInputType.KEYBOARD:\n\t\t\t\treturn this.keyboardEventsController;\n\t\t\tcase EventInputType.MOUSE:\n\t\t\t\treturn this.mouseEventsController;\n\t\t\tcase EventInputType.DRAG:\n\t\t\t\treturn this.dragEventsController;\n\t\t\tcase EventInputType.POINTER:\n\t\t\t\treturn this.pointerEventsController;\n\t\t\tcase EventInputType.TOUCH:\n\t\t\t\treturn this.touchEventsController;\n\t\t\tcase EventInputType.WINDOW:\n\t\t\t\treturn this.windowEventsController;\n\t\t}\n\t}\n\tprivate _findOrCreateControllerForJsType(\n\t\tjsType: JsType\n\t): BaseSceneEventsController<Event, BaseInputEventNodeType> | undefined {\n\t\tswitch (jsType) {\n\t\t\tcase JsType.CURSOR:\n\t\t\tcase JsType.ON_OBJECT_CLICK:\n\t\t\tcase JsType.ON_OBJECT_CONTEXT_MENU:\n\t\t\tcase JsType.ON_OBJECT_HOVER:\n\t\t\tcase JsType.ON_OBJECT_LONG_PRESS:\n\t\t\tcase JsType.ON_OBJECT_MOUSE_CLICK:\n\t\t\tcase JsType.ON_OBJECT_POINTERDOWN:\n\t\t\tcase JsType.ON_OBJECT_POINTERUP:\n\t\t\tcase JsType.ON_POINTERDOWN:\n\t\t\tcase JsType.ON_POINTERUP:\n\t\t\tcase JsType.RAY_FROM_CURSOR:\n\t\t\t\treturn this.pointerEventsController;\n\t\t\tcase JsType.ON_KEY:\n\t\t\tcase JsType.ON_KEYDOWN:\n\t\t\tcase JsType.ON_KEYPRESS:\n\t\t\tcase JsType.ON_KEYUP:\n\t\t\t\treturn this.keyboardEventsController;\n\t\t}\n\t\tconsole.warn(`no event controller defined for jsType`, jsType);\n\t}\n\n\tget keyboardEventsController() {\n\t\treturn (this._keyboardEventsController =\n\t\t\tthis._keyboardEventsController || this._createController(KeyboardEventsController));\n\t}\n\tget mouseEventsController() {\n\t\treturn (this._mouseEventsController =\n\t\t\tthis._mouseEventsController || this._createController(MouseEventsController));\n\t}\n\tget dragEventsController() {\n\t\treturn (this._dragEventsController =\n\t\t\tthis._dragEventsController || this._createController(DragEventsController));\n\t}\n\t// get pointerEventsController(): PointerEventsController {\n\t// \treturn (this._pointerEventsController =\n\t// \t\tthis._pointerEventsController || this._createController(PointerEventsController));\n\t// }\n\tget windowEventsController() {\n\t\treturn (this._windowEventsController =\n\t\t\tthis._windowEventsController || this._createController(WindowEventsController));\n\t}\n\tget touchEventsController() {\n\t\treturn (this._touchEventsController =\n\t\t\tthis._touchEventsController || this._createController(TouchEventsController));\n\t}\n\tprivate _createController<T extends BaseSceneEventsControllerClass>(eventConstructor: Constructor<T>): T {\n\t\tconst controller = new eventConstructor(this);\n\t\tif (!this._controllers.includes(controller)) {\n\t\t\tthis._controllers.push(controller);\n\t\t}\n\t\treturn controller;\n\t}\n\n\tprivate _connectionTriggerDispatcher: SceneConnectionTriggerDispatcher | undefined;\n\tget connectionTriggerDispatcher() {\n\t\treturn (this._connectionTriggerDispatcher =\n\t\t\tthis._connectionTriggerDispatcher || new SceneConnectionTriggerDispatcher());\n\t}\n}\n","import {ref} from '../../../core/reactivity/CoreReactivity';\nimport {PolyScene} from '../PolyScene';\n\n// enum ThresholdState {\n// \tABOVE = 1,\n// \tUNDER = -1,\n// }\n// interface ThresholdContainer {\n// \tthreshold: number;\n// \tstate: ThresholdState;\n// }\n\nexport class ScenePerformanceMonitor {\n\tprivate _performanceRef = ref(1);\n\t// private _thresholdContainers: ThresholdContainer[] = [];\n\tconstructor(protected scene: PolyScene) {}\n\t// reset() {\n\t// \tthis._thresholdContainers.length = 0;\n\t// }\n\t// addThreshold(threshold: number) {\n\t// \t// check first that a similar threshold exists\n\t// \tfor (let container of this._thresholdContainers) {\n\t// \t\tif (container.threshold == threshold) {\n\t// \t\t\t// no need to add it\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t}\n\n\t// \t// add if none similar found\n\t// \tthis._thresholdContainers.push({\n\t// \t\tthreshold,\n\t// \t\tstate: ThresholdState.ABOVE,\n\t// \t});\n\t// }\n\tref() {\n\t\treturn this._performanceRef;\n\t}\n\tonPerformanceChange(perf: number) {\n\t\tthis._performanceRef.value = perf;\n\n\t\t// let updateRequired = false;\n\t\t// for (let container of this._thresholdContainers) {\n\t\t// \tif (perf < container.threshold && container.state == ThresholdState.ABOVE) {\n\t\t// \t\tcontainer.state = ThresholdState.UNDER;\n\t\t// \t\tupdateRequired = true;\n\t\t// \t\tbreak;\n\t\t// \t}\n\t\t// \tif (perf > container.threshold && container.state == ThresholdState.UNDER) {\n\t\t// \t\tcontainer.state = ThresholdState.ABOVE;\n\t\t// \t\tupdateRequired = true;\n\t\t// \t\tbreak;\n\t\t// \t}\n\t\t// }\n\n\t\t// if (!updateRequired) {\n\t\t// \treturn;\n\t\t// }\n\t\t// this.scene.actorsManager.runOnEventPerformanceChange();\n\t}\n\t// performance() {\n\t// \treturn this._performance;\n\t// }\n}\n","import {PolyScene} from '../PolyScene';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {TypedPathParam} from '../../params/_BasePath';\nimport {MapUtils} from '../../../core/MapUtils';\nimport {ParamType} from '../../poly/ParamType';\nimport {BaseParamType} from '../../params/_Base';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\n// import {OperatorPathParam} from '../../params/OperatorPath';\nimport {arrayShallowClone} from '../../../core/ArrayUtils';\nimport {NodePathParam} from '../../params/NodePath';\n\ntype BasePathParam = TypedPathParam<any>;\nconst _pathParams: BasePathParam[] = [];\n// class BasePathParam extends Typ\nconst _nodes: BaseNodeType[] = [];\n\nexport class ReferencesController {\n\tprivate _referenced_nodes_by_src_param_id: Map<CoreGraphNodeId, BaseNodeType | BaseParamType> = new Map();\n\tprivate _referencing_params_by_referenced_node_id: Map<CoreGraphNodeId, BasePathParam[]> = new Map();\n\tprivate _referencing_params_by_all_named_node_ids: Map<CoreGraphNodeId, BasePathParam[]> = new Map();\n\tconstructor(protected scene: PolyScene) {}\n\n\tsetReferenceFromParam(src_param: BasePathParam, referencedGraphNode: BaseNodeType | BaseParamType) {\n\t\tthis._referenced_nodes_by_src_param_id.set(src_param.graphNodeId(), referencedGraphNode);\n\t\tMapUtils.pushOnArrayAtEntry(\n\t\t\tthis._referencing_params_by_referenced_node_id,\n\t\t\treferencedGraphNode.graphNodeId(),\n\t\t\tsrc_param\n\t\t);\n\t}\n\tsetNamedNodesFromParam(src_param: BasePathParam) {\n\t\tsrc_param.decomposedPath.namedNodes(_nodes);\n\n\t\tfor (const namedNode of _nodes) {\n\t\t\tMapUtils.pushOnArrayAtEntry(\n\t\t\t\tthis._referencing_params_by_all_named_node_ids,\n\t\t\t\tnamedNode.graphNodeId(),\n\t\t\t\tsrc_param\n\t\t\t);\n\t\t}\n\t}\n\tresetReferenceFromParam(src_param: BasePathParam) {\n\t\tconst referenced_node = this._referenced_nodes_by_src_param_id.get(src_param.graphNodeId());\n\t\tif (referenced_node) {\n\t\t\tMapUtils.popFromArrayAtEntry(\n\t\t\t\tthis._referencing_params_by_referenced_node_id,\n\t\t\t\treferenced_node.graphNodeId(),\n\t\t\t\tsrc_param\n\t\t\t);\n\t\t\tsrc_param.decomposedPath.namedNodes(_nodes);\n\t\t\tfor (const namedNode of _nodes) {\n\t\t\t\tMapUtils.popFromArrayAtEntry(\n\t\t\t\t\tthis._referencing_params_by_all_named_node_ids,\n\t\t\t\t\tnamedNode.graphNodeId(),\n\t\t\t\t\tsrc_param\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._referenced_nodes_by_src_param_id.delete(src_param.graphNodeId());\n\t\t}\n\t}\n\n\treferencing_params(node: BaseNodeType) {\n\t\treturn this._referencing_params_by_referenced_node_id.get(node.graphNodeId());\n\t}\n\treferencingNodes(node: BaseNodeType, target: BaseNodeType[]) {\n\t\tconst params = this._referencing_params_by_referenced_node_id.get(node.graphNodeId());\n\t\ttarget.length = 0;\n\t\tif (params) {\n\t\t\tconst node_by_node_id: Map<CoreGraphNodeId, BaseNodeType> = new Map();\n\t\t\tfor (const param of params) {\n\t\t\t\tconst node = param.node;\n\t\t\t\tnode_by_node_id.set(node.graphNodeId(), node);\n\t\t\t}\n\t\t\tnode_by_node_id.forEach((node) => {\n\t\t\t\ttarget.push(node);\n\t\t\t});\n\t\t}\n\t\treturn target;\n\t}\n\tnodesReferencedBy(node: BaseNodeType, target: BaseNodeType[]) {\n\t\tconst path_param_types: Readonly<Set<ParamType>> = new Set([ParamType.NODE_PATH]);\n\t\t_pathParams.length = 0;\n\t\tfor (const param of node.params.all) {\n\t\t\tif (path_param_types.has(param.type())) {\n\t\t\t\t_pathParams.push(param as BasePathParam);\n\t\t\t}\n\t\t}\n\t\tconst nodes_by_id: Map<CoreGraphNodeId, BaseNodeType> = new Map();\n\t\tconst params: BaseParamType[] = [];\n\t\tfor (const pathParam of _pathParams) {\n\t\t\tthis._check_param(pathParam, nodes_by_id, params);\n\t\t}\n\t\tfor (const param of params) {\n\t\t\tnodes_by_id.set(param.node.graphNodeId(), param.node);\n\t\t}\n\t\ttarget.length = 0;\n\t\tnodes_by_id.forEach((node) => {\n\t\t\ttarget.push(node);\n\t\t});\n\t\treturn target;\n\t}\n\tprivate _check_param(\n\t\tparam: BasePathParam,\n\t\tnodes_by_id: Map<CoreGraphNodeId, BaseNodeType>,\n\t\tparams: BaseParamType[]\n\t) {\n\t\tif (param instanceof NodePathParam) {\n\t\t\tconst found_node = param.value.node();\n\t\t\t// const found_param = param.found_param();\n\t\t\tif (found_node) {\n\t\t\t\tnodes_by_id.set(found_node.graphNodeId(), found_node);\n\t\t\t}\n\t\t\t// if (found_param) {\n\t\t\t// \tparams.push(found_param);\n\t\t\t// }\n\t\t\treturn;\n\t\t}\n\t}\n\n\t//\n\t//\n\t// TRACK NAME CHANGES\n\t//\n\t//\n\tnotifyNameUpdated(node: BaseNodeType) {\n\t\tconst referencingParams = this._referencing_params_by_all_named_node_ids.get(node.graphNodeId());\n\t\tif (referencingParams) {\n\t\t\t// make sure to do a cloned copy, since the list will change as the params are notified to rebuild\n\t\t\tconst referencingParamsCloned = arrayShallowClone(referencingParams);\n\t\t\tfor (const referencingParam of referencingParamsCloned) {\n\t\t\t\treferencingParam.notifyPathRebuildRequired(node);\n\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t//\n\t// TRACK NODE DELETIONS/ADDITIONS\n\t//\n\t//\n\n\t//\n\t//\n\t// TRACK PARAM DELETIONS/ADDITIONS\n\t//\n\t//\n\tnotifyParamsUpdated(node: BaseNodeType) {\n\t\tconst referencingParams = this._referencing_params_by_all_named_node_ids.get(node.graphNodeId());\n\n\t\tif (referencingParams) {\n\t\t\t// make sure to do a cloned copy, since the list will change as the params are notified to rebuild\n\t\t\tconst referencingParamsCloned = arrayShallowClone(referencingParams);\n\t\t\tfor (const referencingParam of referencingParamsCloned) {\n\t\t\t\tif (referencingParam.options.isSelectingParam()) {\n\t\t\t\t\treferencingParam.notifyTargetParamOwnerParamsUpdated(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {Vector2} from 'three';\nimport {IUniformN, IUniformTexture, IUniformV2} from '../../nodes/utils/code/gl/Uniforms';\nimport {GlParamConfig} from '../../nodes/gl/code/utils/GLParamConfig';\nimport {ParamType} from '../../poly/ParamType';\nimport {PolyDictionary} from '../../../types/GlobalTypes';\nimport {IUniforms} from '../../../core/geometry/Material';\n\nexport enum UniformName {\n\tTIME = 'time',\n\tRESOLUTION = 'resolution',\n\tSPOTLIGHTS_RAYMARCHING = 'spotLightsRayMarching',\n\tDIRECTIONALLIGHTS_RAYMARCHING = 'directionalLightsRayMarching',\n\t// HEMISPHERELIGHTS_RAYMARCHING = 'hemisphereLightsRayMarching',\n\tPOINTLIGHTS_RAYMARCHING = 'pointLightsRayMarching',\n\t// AREALIGHTS_RAYMARCHING = 'areaLightsRayMarching',\n}\n\nexport interface IUniformsWithTime extends IUniforms {\n\ttime: IUniformN;\n}\nexport interface IUniformsWithResolution extends IUniforms {\n\tresolution: IUniformV2;\n}\n// interface IUniformsWithResolutionOnly {\n// \tresolution: IUniformV2;\n// }\ninterface AddUniformOptions {\n\tparamConfigs: readonly GlParamConfig<ParamType>[];\n\tadditionalTextureUniforms: PolyDictionary<IUniformTexture>;\n\ttimeDependent: boolean;\n\tresolutionDependent: boolean;\n\traymarchingLightsWorldCoordsDependent: boolean;\n}\ninterface GlobalUniforms {\n\t// time: IUniformN;\n\tresolution: IUniformV2;\n}\n\nconst GLOBAL_UNIFORMS: GlobalUniforms = {\n\t// [UniformName.TIME]: {value: 0},\n\t[UniformName.RESOLUTION]: {value: new Vector2(1000, 1000)},\n};\nexport class UniformsController {\n\tconstructor(private scene: PolyScene) {}\n\n\t// private _resolution: Vector2 = new Vector2(1, 1);\n\t// private _resolutionDependentUniformsMap: Map<string, IUniformsWithResolutionOnly> = new Map();\n\t// private _resolutionDependentUniforms: IUniformsWithResolutionOnly[] = [];\n\n\t// add uniforms from assemblers\n\taddUniforms(uniforms: IUniforms, options: AddUniformOptions) {\n\t\tconst {\n\t\t\tparamConfigs,\n\t\t\tadditionalTextureUniforms,\n\t\t\ttimeDependent,\n\t\t\tresolutionDependent,\n\t\t\traymarchingLightsWorldCoordsDependent,\n\t\t} = options;\n\t\tfor (const paramConfig of paramConfigs) {\n\t\t\tuniforms[paramConfig.uniformName()] = paramConfig.uniform();\n\t\t}\n\t\tconst additionalUniformNames = Object.keys(additionalTextureUniforms);\n\t\tfor (const uniformName of additionalUniformNames) {\n\t\t\tconst uniformValue = additionalTextureUniforms[uniformName];\n\t\t\tuniforms[uniformName] = uniformValue;\n\t\t}\n\t\tif (timeDependent) {\n\t\t\tthis.addTimeUniform(uniforms);\n\t\t} else {\n\t\t\tthis.removeTimeUniform(uniforms);\n\t\t}\n\t\tif (resolutionDependent) {\n\t\t\tthis.addResolutionUniforms(uniforms);\n\t\t} else {\n\t\t\tthis.removeResolutionUniform(uniforms);\n\t\t}\n\t\tif (raymarchingLightsWorldCoordsDependent) {\n\t\t\tthis.addRaymarchingUniforms(uniforms);\n\t\t} else {\n\t\t\tthis.removeRaymarchingUniform(uniforms);\n\t\t}\n\t}\n\taddTimeUniform(uniforms: IUniforms) {\n\t\tuniforms[UniformName.TIME] = this.scene.timeController.timeUniform();\n\t}\n\tremoveTimeUniform(uniforms: IUniforms) {\n\t\tdelete uniforms[UniformName.TIME];\n\t}\n\ttimeUniformValue() {\n\t\treturn this.scene.timeController.timeUniform().value;\n\t}\n\n\t// public updateTime() {\n\t// \tGLOBAL_UNIFORMS[UniformName.TIME].value = this.scene.time();\n\t// }\n\n\t// resolution\n\taddResolutionUniforms(uniforms: IUniforms) {\n\t\tuniforms[UniformName.RESOLUTION] = GLOBAL_UNIFORMS[UniformName.RESOLUTION];\n\t}\n\tremoveResolutionUniform(uniforms: IUniforms) {\n\t\tdelete uniforms[UniformName.RESOLUTION];\n\t}\n\tupdateResolution(resolution: Vector2, pixelRatio: number) {\n\t\tGLOBAL_UNIFORMS[UniformName.RESOLUTION].value.copy(resolution).multiplyScalar(pixelRatio);\n\t\t// for (let uniforms of this._resolutionDependentUniforms) {\n\t\t// \tthis.updateResolutionDependentUniforms(uniforms);\n\t\t// }\n\t}\n\n\t// raymarching\n\taddRaymarchingUniforms(uniforms: IUniforms) {\n\t\tthis.scene.sceneTraverser.addLightsRayMarchingUniform(uniforms);\n\t}\n\tremoveRaymarchingUniform(uniforms: IUniforms) {\n\t\tthis.scene.sceneTraverser.removeLightsRayMarchingUniform(uniforms);\n\t}\n\n\t// updateResolutionDependentUniforms(uniforms: IUniformsWithResolutionOnly) {\n\t// \tconst resolutionUniform = uniforms[UniformName.RESOLUTION];\n\t// \tresolutionUniform.value.x = this._resolution.x; // * window.devicePixelRatio;\n\t// \tresolutionUniform.value.y = this._resolution.y; // * window.devicePixelRatio;\n\t// }\n}\n","import {BaseViewerType} from '../../viewers/_Base';\nimport {PolyScene} from '../../scene/PolyScene';\nimport {Camera} from 'three';\nimport {Poly} from '../../Poly';\nimport {ViewerCallbackOptions} from '../../poly/registers/cameras/PolyCamerasRegister';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n\ninterface GetViewerOptions {\n\tcamera: Camera;\n\tcanvas?: HTMLCanvasElement;\n}\nexport class ViewersRegister {\n\tprivate _viewersById: Map<string, BaseViewerType> = new Map();\n\tprivate _firstViewer: BaseViewerType | undefined;\n\tprivate _lastRenderedViewer: BaseViewerType | undefined;\n\tconstructor(protected _scene: PolyScene) {}\n\n\tregisterViewer(viewer: BaseViewerType) {\n\t\tthis._viewersById.set(viewer.id(), viewer);\n\t\tthis._updateCache();\n\t}\n\tunregisterViewer(viewer: BaseViewerType) {\n\t\tthis._viewersById.delete(viewer.id());\n\t\tthis._updateCache();\n\t}\n\n\ttraverseViewers(callback: (viewer: BaseViewerType) => void) {\n\t\tthis._viewersById.forEach(callback);\n\t}\n\n\tviewer(options: GetViewerOptions) {\n\t\tconst createViewerOptions: ViewerCallbackOptions<Camera> = {\n\t\t\tcamera: options.camera,\n\t\t\tcanvas: options.canvas,\n\t\t\tscene: this._scene,\n\t\t};\n\t\treturn Poly.camerasRegister.createViewer(createViewerOptions);\n\t}\n\n\tfirstViewer() {\n\t\treturn this._firstViewer;\n\t}\n\tmarkViewerAsRendered(viewer: BaseViewerType) {\n\t\tthis._lastRenderedViewer = viewer;\n\t}\n\tlastRenderedViewer() {\n\t\treturn this._lastRenderedViewer;\n\t}\n\tprivate _updateCache() {\n\t\tthis._firstViewer = undefined;\n\t\tthis._viewersById.forEach((viewer) => {\n\t\t\tthis._firstViewer = this._firstViewer || viewer;\n\t\t});\n\t}\n\t/**\n\t * resize graphNode\n\t */\n\tprivate _graphNode: CoreGraphNode | undefined;\n\tgraphNode() {\n\t\treturn (this._graphNode = this._graphNode || this._createGraphNode());\n\t}\n\tprivate _createGraphNode() {\n\t\tconst coreGraphNode = new CoreGraphNode(this._scene, 'SceneViewersRegister');\n\t\treturn coreGraphNode;\n\t}\n\t// private _viewerWithResizeRequired: Set<string> = new Set();\n\tmarkViewerAsSizeUpdated(viewer: BaseViewerType) {\n\t\tif (!this._viewersById.has(viewer.id())) {\n\t\t\treturn;\n\t\t}\n\t\t// if (this._viewerWithResizeRequired.has(viewer.id())) {\n\t\t// \treturn;\n\t\t// }\n\t\t// this._viewerWithResizeRequired.add(viewer.id());\n\t\tthis._graphNode?.setDirty();\n\t}\n\t// markViewerAsResizeCompleted(viewer: BaseViewerType) {\n\t// \tif (!this._viewersById.has(viewer.id())) {\n\t// \t\treturn;\n\t// \t}\n\t// \tthis._viewerWithResizeRequired.delete(viewer.id());\n\t// }\n\t// isViewerResizeRequired(viewer: BaseViewerType) {\n\t// \treturn this._viewerWithResizeRequired.has(viewer.id());\n\t// }\n\t// updateViewersSize() {\n\t// \tthis._viewerWithResizeRequired.forEach((viewerId) => {\n\t// \t\tconst viewer = this._viewersById.get(viewerId);\n\t// \t\tif (viewer) {\n\t// \t\t\tviewer.updateSize();\n\t// \t\t}\n\t// \t});\n\t// }\n}\n","import {Poly} from '../../Poly';\n\n// import {PolyScene} from '../PolyScene';\n\nexport class SceneWebGLController {\n\tconstructor() {}\n\n\t_requireWebGL2: boolean = false;\n\n\trequireWebGL2() {\n\t\treturn this._requireWebGL2;\n\t}\n\tsetRequireWebGL2() {\n\t\tif (!this._requireWebGL2) {\n\t\t\tthis._requireWebGL2 = true;\n\t\t\tPoly.renderersController.setRequireWebGL2();\n\t\t}\n\t}\n}\n","import {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {PolyScene} from '../PolyScene';\n\nexport class WindowController {\n\tprivate _graphNode: CoreGraphNode | undefined;\n\tconstructor(private _scene: PolyScene) {}\n\tgraphNode() {\n\t\treturn (this._graphNode = this._graphNode || this._createGraphNode());\n\t}\n\tprivate _createGraphNode() {\n\t\tconst coreGraphNode = new CoreGraphNode(this._scene, 'SceneWindowController');\n\n\t\twindow.addEventListener('resize', this._onWindowResizeBound);\n\n\t\treturn coreGraphNode;\n\t}\n\tprivate _onWindowResizeBound = this._onWindowResize.bind(this);\n\tprivate _onWindowResize() {\n\t\t// TODO: consider throttle\n\t\tthis.graphNode().setSuccessorsDirty();\n\t}\n\n\tdispose() {\n\t\twindow.removeEventListener('resize', this._onWindowResizeBound);\n\t}\n}\n","import {StringParam} from '../../params/String';\nimport {CoreGraphNodeId} from '../../../core/graph/CoreGraph';\n\nexport class SceneAssetsController {\n\t//\n\t//\n\t// REGISTER PARAMS\n\t//\n\t//\n\tprivate _params_by_id: Map<CoreGraphNodeId, StringParam> = new Map();\n\tregister_param(param: StringParam) {\n\t\tthis._params_by_id.set(param.graphNodeId(), param);\n\t}\n\n\tderegister_param(param: StringParam) {\n\t\tthis._params_by_id.delete(param.graphNodeId());\n\t}\n\n\ttraverse_params(callback: (param: StringParam) => void) {\n\t\tthis._params_by_id.forEach((param, id) => {\n\t\t\tcallback(param);\n\t\t});\n\t}\n\n\t//\n\t//\n\t// ASSETS ROOT\n\t//\n\t//\n\tprivate _assetsRoot: string | null = null;\n\troot() {\n\t\treturn this._assetsRoot;\n\t}\n\tsetRoot(url: string | null) {\n\t\tif (url == '') {\n\t\t\turl = null;\n\t\t}\n\t\tthis._assetsRoot = url;\n\t}\n}\n","import {Vector3, IUniform, Light, SpotLight, DirectionalLight, HemisphereLight, PointLight} from 'three';\nimport {LightUserDataRaymarching} from './../../../../core/lights/Common';\nexport interface WorldPosUniformElement {\n\tworldPos: Vector3;\n}\nexport interface DirectionUniformElement {\n\tdirection: Vector3;\n}\nexport interface PenumbraUniformElement {\n\tpenumbra: number;\n}\nexport interface ShadowUniformElement {\n\tshadowBiasAngle: number;\n\tshadowBiasDistance: number;\n}\n\ninterface UniformWithWorldPosArray extends Array<WorldPosUniformElement> {\n\tneedsUpdate?: boolean;\n}\nexport interface UniformsWithWorldPos extends IUniform {\n\tvalue: UniformWithWorldPosArray;\n}\n\ninterface UniformWithDirectionArray extends Array<DirectionUniformElement> {\n\tneedsUpdate?: boolean;\n}\nexport interface UniformsWithDirection extends IUniform {\n\tvalue: UniformWithDirectionArray;\n}\ninterface UniformWithPenumbraArray extends Array<PenumbraUniformElement> {\n\tneedsUpdate?: boolean;\n}\ninterface UniformWithShadowBiasArray extends Array<ShadowUniformElement> {\n\tneedsUpdate?: boolean;\n}\nexport interface UniformsWithPenumbra extends IUniform {\n\tvalue: UniformWithPenumbraArray;\n}\nexport interface UniformsWithShadowBias extends IUniform {\n\tvalue: UniformWithShadowBiasArray;\n}\n\nexport enum LightType {\n\tSPOT = 0,\n\tDIRECTIONAL = 1,\n\tHEMISPHERE = 2,\n\tPOINT = 3,\n}\nexport function getLightType(object: Light): LightType | undefined {\n\tif ((object as SpotLight).isSpotLight) {\n\t\treturn LightType.SPOT;\n\t}\n\tif ((object as DirectionalLight).isDirectionalLight) {\n\t\treturn LightType.DIRECTIONAL;\n\t}\n\tif ((object as HemisphereLight).isHemisphereLight) {\n\t\treturn LightType.HEMISPHERE;\n\t}\n\tif ((object as PointLight as any).isPointLight) {\n\t\treturn LightType.POINT;\n\t}\n}\n// update functions\n// const worldPos = new Vector3();\n// const direction = new Vector3();\n// const tmpV = new Vector3();\n// export function updateWorldPos(\n// \tobject: Object3D,\n// \tuniforms: UniformsWithWorldPos,\n// \tindex: number,\n// \tdefaultUniformCreate: () => WorldPosUniformElement\n// ) {\n// \tobject.updateMatrixWorld(true);\n// \tobject.updateMatrix();\n// \tobject.getWorldPosition(worldPos);\n// \tuniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n// \tif(!uniforms.value[index].worldPos.equals(direction)){\n// \t\tuniforms.value[index].worldPos.copy(worldPos);\n// \t\tuniforms.value.needsUpdate = true;\n// \t}\n// }\n// export function updateDirectionFromTarget(\n// \tobject: Object3D,\n// \tuniforms: UniformsWithDirection,\n// \tindex: number,\n// \tdefaultUniformCreate: () => DirectionUniformElement\n// ) {\n// \t(object as DirectionalLight).target.updateMatrixWorld(true);\n// \t(object as DirectionalLight).target.updateMatrix();\n// \tdirection.setFromMatrixPosition(object.matrixWorld);\n// \ttmpV.setFromMatrixPosition((object as DirectionalLight).target.matrixWorld);\n// \tdirection.sub(tmpV);\n\n// \tuniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n// \tif(!uniforms.value[index].direction.equals(direction)){\n// \t\tuniforms.value[index].direction.copy(direction);\n// \t\tuniforms.value.needsUpdate = true;\n// \t}\n// }\n// export function updateDirectionFromMatrix(\n// \tobject: Object3D,\n// \tuniforms: UniformsWithDirection,\n// \tindex: number,\n// \tdefaultUniformCreate: () => DirectionUniformElement\n// ) {\n// \tdirection.setFromMatrixPosition(object.matrixWorld);\n\n// \tuniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n// \tif(!uniforms.value[index].direction.equals(direction)){\n// \t\tuniforms.value[index].direction.copy(direction);\n// \t\tuniforms.value.needsUpdate = true;\n// \t}\n// }\n\nexport function updateUserDataPenumbra(\n\tobject: SpotLight | PointLight | DirectionalLight,\n\tuniforms: UniformsWithPenumbra,\n\tindex: number,\n\tdefaultUniformCreate: () => PenumbraUniformElement\n) {\n\tuniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n\tconst uniformName = LightUserDataRaymarching.PENUMBRA;\n\tif (uniforms.value[index].penumbra != object.userData[uniformName]) {\n\t\tuniforms.value[index].penumbra = object.userData[uniformName];\n\t\tuniforms.value.needsUpdate = true;\n\t}\n}\nexport function updateUserDataShadowBias(\n\tobject: SpotLight | PointLight | DirectionalLight,\n\tuniforms: UniformsWithShadowBias,\n\tindex: number,\n\tdefaultUniformCreate: () => ShadowUniformElement\n) {\n\tuniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n\tif (uniforms.value[index].shadowBiasAngle != object.userData[LightUserDataRaymarching.SHADOW_BIAS_ANGLE]) {\n\t\tuniforms.value[index].shadowBiasAngle = object.userData[LightUserDataRaymarching.SHADOW_BIAS_ANGLE];\n\t\tuniforms.value.needsUpdate = true;\n\t}\n\tif (uniforms.value[index].shadowBiasDistance != object.userData[LightUserDataRaymarching.SHADOW_BIAS_DISTANCE]) {\n\t\tuniforms.value[index].shadowBiasDistance = object.userData[LightUserDataRaymarching.SHADOW_BIAS_DISTANCE];\n\t\tuniforms.value.needsUpdate = true;\n\t}\n}\n\nexport type AvailableLight = SpotLight | DirectionalLight | HemisphereLight | PointLight;\nexport type UniformsUpdateFunction<L extends AvailableLight> = (object: L, uniforms: IUniform) => void;\n","import {IUniform, SpotLight} from 'three';\nimport {\n\tPenumbraUniformElement,\n\tShadowUniformElement,\n\tUniformsUpdateFunction,\n\tupdateUserDataPenumbra,\n\tupdateUserDataShadowBias,\n} from './_Base';\n\nexport interface SpotLightRayMarchingUniformElement extends PenumbraUniformElement, ShadowUniformElement {}\ninterface SpotLightRayMarchingUniforms extends Array<SpotLightRayMarchingUniformElement> {\n\tneedsUpdate?: boolean;\n}\nexport interface SpotLightRayMarchingUniform extends IUniform {\n\tvalue: SpotLightRayMarchingUniforms;\n}\nexport function _createSpotLightUniform(): SpotLightRayMarchingUniformElement {\n\treturn {\n\t\tpenumbra: 0,\n\t\tshadowBiasAngle: 0,\n\t\tshadowBiasDistance: 0,\n\t};\n}\n\n// export function updateSpotLightPenumbra(\n// \tobject: SpotLight,\n// \tuniforms: UniformsWithPenumbra,\n// \tindex: number,\n// \tdefaultUniformCreate: () => PenumbraUniformElement\n// ) {\n// \tupdateUserDataPenumbra(object as SpotLight, uniforms, pointLightIndex, _createPointLightUniform);\n// \t// uniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n// \t// if(uniforms.value[index].penumbra != object.penumbra){\n// \t// \tuniforms.value[index].penumbra = object.penumbra;\n// \t// \tuniforms.value.needsUpdate = true;\n// \t// \tconsole.log(uniforms.value);\n// \t// }\n// }\n\nlet spotLightIndex = 0;\nexport const _updateUniformsWithSpotLight: UniformsUpdateFunction<SpotLight> = (\n\tobject: SpotLight,\n\tspotLightsRayMarching: SpotLightRayMarchingUniform\n) => {\n\t// updateSpotLightPenumbra(object, spotLightsRayMarching, spotLightIndex, _createSpotLightUniform);\n\tupdateUserDataPenumbra(object as SpotLight, spotLightsRayMarching, spotLightIndex, _createSpotLightUniform);\n\tupdateUserDataShadowBias(object as SpotLight, spotLightsRayMarching, spotLightIndex, _createSpotLightUniform);\n\tspotLightIndex++;\n};\nexport function _resetSpotLightIndex() {\n\tspotLightIndex = 0;\n}\n","import {IUniform, DirectionalLight} from 'three';\nimport {\n\tPenumbraUniformElement,\n\tupdateUserDataPenumbra,\n\tUniformsUpdateFunction,\n\tShadowUniformElement,\n\tupdateUserDataShadowBias,\n} from './_Base';\n\nexport interface DirectionalLightRayMarchingUniformElement extends PenumbraUniformElement, ShadowUniformElement {}\ninterface DirectionalLightRayMarchingUniforms extends Array<DirectionalLightRayMarchingUniformElement> {\n\tneedsUpdate?: boolean;\n}\nexport interface DirectionalLightRayMarchingUniform extends IUniform {\n\tvalue: DirectionalLightRayMarchingUniforms;\n}\nexport function _createDirectionalLightUniform(): DirectionalLightRayMarchingUniformElement {\n\treturn {\n\t\tpenumbra: 0,\n\t\tshadowBiasAngle: 0,\n\t\tshadowBiasDistance: 0,\n\t};\n}\n\nlet directionalLightIndex = 0;\nexport const _updateUniformsWithDirectionalLight: UniformsUpdateFunction<DirectionalLight> = (\n\tobject: DirectionalLight,\n\tdirectionalLightsRayMarching: DirectionalLightRayMarchingUniform\n) => {\n\tupdateUserDataPenumbra(\n\t\tobject as DirectionalLight,\n\t\tdirectionalLightsRayMarching,\n\t\tdirectionalLightIndex,\n\t\t_createDirectionalLightUniform\n\t);\n\tupdateUserDataShadowBias(\n\t\tobject as DirectionalLight,\n\t\tdirectionalLightsRayMarching,\n\t\tdirectionalLightIndex,\n\t\t_createDirectionalLightUniform\n\t);\n\tdirectionalLightIndex++;\n};\nexport function _resetDirectionalLightIndex() {\n\tdirectionalLightIndex = 0;\n}\n","import {IUniform, PointLight} from 'three';\nimport {\n\tPenumbraUniformElement,\n\tupdateUserDataPenumbra,\n\tUniformsUpdateFunction,\n\tShadowUniformElement,\n\tupdateUserDataShadowBias,\n} from './_Base';\n\nexport interface PointLightRayMarchingUniformElement extends PenumbraUniformElement, ShadowUniformElement {}\ninterface PointLightRayMarchingUniforms extends Array<PointLightRayMarchingUniformElement> {\n\tneedsUpdate?: boolean;\n}\nexport interface PointLightRayMarchingUniform extends IUniform {\n\tvalue: PointLightRayMarchingUniforms;\n}\nexport function _createPointLightUniform(): PointLightRayMarchingUniformElement {\n\treturn {\n\t\tpenumbra: 0,\n\t\tshadowBiasAngle: 0,\n\t\tshadowBiasDistance: 0,\n\t};\n}\n\nlet pointLightIndex = 0;\n\nexport const _updateUniformsWithPointLight: UniformsUpdateFunction<PointLight> = (\n\tobject: PointLight,\n\tpointLightsRayMarching: PointLightRayMarchingUniform\n) => {\n\tupdateUserDataPenumbra(object as PointLight, pointLightsRayMarching, pointLightIndex, _createPointLightUniform);\n\tupdateUserDataShadowBias(object as PointLight, pointLightsRayMarching, pointLightIndex, _createPointLightUniform);\n\tpointLightIndex++;\n};\nexport function _resetPointLightIndex() {\n\tpointLightIndex = 0;\n}\n","import {UniformName} from './UniformsController';\nimport {PolyScene} from '../PolyScene';\nimport {IUniforms} from '../../../core/geometry/Material';\nimport {\n\tScene,\n\tObject3D,\n\tLight,\n\tIUniform,\n\t// RectAreaLight,\n} from 'three';\nimport {LightType, getLightType, AvailableLight, UniformsUpdateFunction} from './raymarching/_Base';\nimport {\n\t_resetSpotLightIndex,\n\t_updateUniformsWithSpotLight,\n\tSpotLightRayMarchingUniform,\n\t_createSpotLightUniform,\n} from './raymarching/SpotLight';\nimport {\n\t_resetDirectionalLightIndex,\n\t_updateUniformsWithDirectionalLight,\n\tDirectionalLightRayMarchingUniform,\n\t_createDirectionalLightUniform,\n} from './raymarching/DirectionalLight';\n// import {\n// \t_resetHemisphereLightIndex,\n// \t_updateUniformsWithHemisphereLight,\n// \tHemisphereLightRayMarchingUniform,\n// \t_createHemisphereLightUniform,\n// } from './raymarching/HemisphereLight';\nimport {\n\t_resetPointLightIndex,\n\t_updateUniformsWithPointLight,\n\tPointLightRayMarchingUniform,\n\t_createPointLightUniform,\n} from './raymarching/PointLight';\n\nfunction _updateUniformsFunctionForLight<L extends AvailableLight>(\n\tobject: L\n): UniformsUpdateFunction<AvailableLight> | undefined {\n\tconst lightType = getLightType(object as Light);\n\tswitch (lightType) {\n\t\tcase LightType.SPOT: {\n\t\t\treturn _updateUniformsWithSpotLight as UniformsUpdateFunction<AvailableLight>;\n\t\t}\n\t\tcase LightType.DIRECTIONAL: {\n\t\t\treturn _updateUniformsWithDirectionalLight as UniformsUpdateFunction<AvailableLight>;\n\t\t}\n\t\t// case LightType.HEMISPHERE: {\n\t\t// \treturn _updateUniformsWithHemisphereLight as UniformsUpdateFunction<AvailableLight>;\n\t\t// }\n\t\tcase LightType.POINT: {\n\t\t\treturn _updateUniformsWithPointLight as UniformsUpdateFunction<AvailableLight>;\n\t\t}\n\t}\n}\nexport class SceneTraverserController {\n\tprivate _spotLightsRayMarching: SpotLightRayMarchingUniform = {\n\t\tvalue: [],\n\t};\n\tprivate _directionalLightsRayMarching: DirectionalLightRayMarchingUniform = {\n\t\tvalue: [],\n\t};\n\t// private _hemisphereLightsRayMarching: HemisphereLightRayMarchingUniform = {\n\t// \tvalue: [],\n\t// };\n\tprivate _pointLightsRayMarching: PointLightRayMarchingUniform = {\n\t\tvalue: [],\n\t};\n\t// private _areaLightsRayMarching: AreaLightRayMarchingUniform = {\n\t// \tvalue: [],\n\t// \t// properties: {\n\t// \t// \tworldPos: {},\n\t// \t// },\n\t// };\n\tprivate _updateUniformsFunctionByLight: WeakMap<AvailableLight, UniformsUpdateFunction<AvailableLight>> =\n\t\tnew WeakMap();\n\tprivate _uniformsByLight: WeakMap<Light, IUniform> = new WeakMap();\n\tconstructor(protected scene: PolyScene) {}\n\n\ttraverseScene(scene?: Scene) {\n\t\t_resetSpotLightIndex();\n\t\t_resetDirectionalLightIndex();\n\t\t// _resetHemisphereLightIndex();\n\t\t_resetPointLightIndex();\n\t\tscene = scene || this.scene.threejsScene();\n\t\tscene.traverse(this._onObjectTraverseBound);\n\t}\n\tprivate _onObjectTraverseBound = this._onObjectTraverse.bind(this);\n\tprivate _onObjectTraverse(object: Object3D) {\n\t\tlet updateFunction = this._updateUniformsFunctionByLight.get(object as AvailableLight);\n\n\t\tif (!updateFunction) {\n\t\t\tif ((object as Light).isLight) {\n\t\t\t\tupdateFunction = _updateUniformsFunctionForLight(object as AvailableLight);\n\t\t\t\tif (updateFunction) {\n\t\t\t\t\tthis._updateUniformsFunctionByLight.set(object as AvailableLight, updateFunction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!updateFunction) {\n\t\t\treturn updateFunction;\n\t\t}\n\t\tlet uniforms = this._uniformsByLight.get(object as Light);\n\t\tif (!uniforms) {\n\t\t\tuniforms = this._updateUniformsForLight(object as Light);\n\t\t\tif (uniforms) {\n\t\t\t\tthis._uniformsByLight.set(object as Light, uniforms);\n\t\t\t}\n\t\t}\n\t\tif (!uniforms) {\n\t\t\treturn;\n\t\t}\n\t\tupdateFunction(object as AvailableLight, uniforms);\n\t}\n\tprivate _updateUniformsForLight<L extends Light>(object: L) {\n\t\tconst lightType = getLightType(object as Light);\n\t\tswitch (lightType) {\n\t\t\tcase LightType.SPOT: {\n\t\t\t\treturn this._spotLightsRayMarching;\n\t\t\t}\n\t\t\tcase LightType.DIRECTIONAL: {\n\t\t\t\treturn this._directionalLightsRayMarching;\n\t\t\t}\n\t\t\t// case LightType.HEMISPHERE: {\n\t\t\t// \treturn this._hemisphereLightsRayMarching;\n\t\t\t// }\n\t\t\tcase LightType.POINT: {\n\t\t\t\treturn this._pointLightsRayMarching;\n\t\t\t}\n\t\t}\n\t}\n\n\taddLightsRayMarchingUniform(uniforms: IUniforms) {\n\t\tuniforms[UniformName.SPOTLIGHTS_RAYMARCHING] = this._spotLightsRayMarching;\n\t\tuniforms[UniformName.DIRECTIONALLIGHTS_RAYMARCHING] = this._directionalLightsRayMarching;\n\t\t// uniforms[UniformName.HEMISPHERELIGHTS_RAYMARCHING] = this._hemisphereLightsRayMarching;\n\t\tuniforms[UniformName.POINTLIGHTS_RAYMARCHING] = this._pointLightsRayMarching;\n\t\t// uniforms[UniformName.AREALIGHTS_RAYMARCHING] = this._areaLightsRayMarching;\n\t}\n\tremoveLightsRayMarchingUniform(uniforms: IUniforms) {\n\t\tdelete uniforms[UniformName.SPOTLIGHTS_RAYMARCHING];\n\t\tdelete uniforms[UniformName.DIRECTIONALLIGHTS_RAYMARCHING];\n\t\t// delete uniforms[UniformName.HEMISPHERELIGHTS_RAYMARCHING];\n\t\tdelete uniforms[UniformName.POINTLIGHTS_RAYMARCHING];\n\t\t// uniforms[UniformName.AREALIGHTS_RAYMARCHING] = this._areaLightsRayMarching;\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {Poly} from '../../Poly';\nimport {AbstractRenderer} from '../../viewers/Common';\nimport {WebGLRenderer} from 'three';\nimport type {PathTracingRendererContainer} from '../../nodes/rop/utils/pathTracing/PathTracingRendererContainer';\nimport {arrayCopy} from '../../../core/ArrayUtils';\n\ntype SceneRenderersRegisterCallback = (value: AbstractRenderer) => void;\n\nexport interface RegisterRendererOptions {\n\tassignId: boolean;\n}\nconst _renderers: AbstractRenderer[] = [];\nexport class SceneRenderersRegister {\n\tprivate _renderersById: Map<number, AbstractRenderer> = new Map();\n\tprivate _registerTimeByRenderer: Map<AbstractRenderer, number> = new Map();\n\tprivate _lastRegisteredRenderer: AbstractRenderer | undefined;\n\tprivate _resolves: SceneRenderersRegisterCallback[] = [];\n\n\tconstructor(protected scene: PolyScene) {}\n\n\tregisterRenderer(renderer: AbstractRenderer, options?: RegisterRendererOptions) {\n\t\tlet assignId = true;\n\t\tif (options?.assignId == false) {\n\t\t\tassignId = false;\n\t\t}\n\t\tif (assignId) {\n\t\t\tPoly.renderersController.assignIdToRenderer(renderer);\n\t\t}\n\n\t\tconst id = Poly.renderersController.rendererId(renderer);\n\t\tif (id == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._renderersById.set(id, renderer);\n\t\tthis._registerTimeByRenderer.set(renderer, performance.now());\n\t\t// Poly.renderersController._registerRenderer(renderer, this.scene);\n\t\tthis._updateCache();\n\n\t\tif (this._renderersById.size == 1) {\n\t\t\tthis._flushCallbacksWithRenderer(renderer);\n\t\t}\n\t}\n\tdispose() {\n\t\tthis.renderers(_renderers);\n\t\tfor (const renderer of _renderers) {\n\t\t\tthis.deregisterRenderer(renderer);\n\t\t}\n\t}\n\tderegisterRenderer(renderer: AbstractRenderer) {\n\t\tconst id = Poly.renderersController.rendererId(renderer);\n\t\tif (id == null) {\n\t\t\treturn;\n\t\t}\n\t\tthis._renderersById.delete(id);\n\n\t\trenderer.dispose();\n\t\tthis._updateCache();\n\t\t// Poly.renderersController._deregisterRenderer(renderer);\n\t}\n\tlastRegisteredRenderer() {\n\t\treturn this._lastRegisteredRenderer;\n\t}\n\n\trenderers(target: AbstractRenderer[]) {\n\t\t// const renderers: AbstractRenderer[] = [];\n\t\tthis._renderersById.forEach((renderer) => {\n\t\t\ttarget.push(renderer);\n\t\t});\n\t\treturn target;\n\t}\n\n\tprivate _updateCache() {\n\t\tthis._lastRegisteredRenderer = undefined;\n\t\tthis._registerTimeByRenderer.forEach((registerTime, renderer) => {\n\t\t\tif (this._lastRegisteredRenderer == undefined) {\n\t\t\t\tthis._lastRegisteredRenderer = renderer;\n\t\t\t} else {\n\t\t\t\tconst lastRegisterTime = this._registerTimeByRenderer.get(this._lastRegisteredRenderer);\n\t\t\t\tif (lastRegisterTime != null) {\n\t\t\t\t\tif (registerTime > lastRegisterTime) {\n\t\t\t\t\t\tthis._lastRegisteredRenderer = renderer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _flushCallbacksWithRenderer(renderer: AbstractRenderer) {\n\t\tconst callbacks: SceneRenderersRegisterCallback[] = [];\n\t\tarrayCopy(this._resolves, callbacks);\n\t\tthis._resolves.length = 0;\n\t\tfor (const c of callbacks) {\n\t\t\tc(renderer);\n\t\t}\n\t}\n\n\tasync waitForAbstractRenderer(): Promise<AbstractRenderer> {\n\t\tif (this._lastRegisteredRenderer) {\n\t\t\treturn this._lastRegisteredRenderer;\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis._resolves.push(resolve);\n\t\t\t});\n\t\t}\n\t}\n\tasync waitForRenderer(): Promise<WebGLRenderer | undefined> {\n\t\tlet renderer = await this.waitForAbstractRenderer();\n\t\tif (renderer instanceof WebGLRenderer) {\n\t\t\treturn renderer;\n\t\t}\n\t\trenderer = (renderer as PathTracingRendererContainer).webGLRenderer;\n\t\tif (renderer && renderer instanceof WebGLRenderer) {\n\t\t\treturn renderer;\n\t\t}\n\t\tif (renderer) {\n\t\t\tif (!(renderer instanceof WebGLRenderer)) {\n\t\t\t\tconsole.log('unexpected renderer:', {renderer});\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Camera, WebGLRenderer} from 'three';\nimport {CoreWebXRARControllerOptions} from '../../../core/webXR/webXRAR/CommonAR';\nimport {CoreWebXRVRControllerOptions} from '../../../core/webXR/webXRVR/CommonVR';\nimport type {CoreWebXRARController} from '../../../core/webXR/webXRAR/CoreWebXRARController';\nimport type {CoreWebXRVRController} from '../../../core/webXR/webXRVR/CoreWebXRVRController';\nimport type {BaseCoreWebXRController} from '../../../core/webXR/_BaseCoreWebXRController';\nimport type {PolyScene} from '../PolyScene';\n\ntype ARControllerCreateFunction = (\n\trenderer: WebGLRenderer,\n\tcamera: Camera,\n\tcanvas: HTMLCanvasElement,\n\toptions: CoreWebXRARControllerOptions\n) => CoreWebXRARController;\ntype VRControllerCreateFunction = (\n\trenderer: WebGLRenderer,\n\tcamera: Camera,\n\tcanvas: HTMLCanvasElement,\n\toptions: CoreWebXRVRControllerOptions\n) => CoreWebXRVRController;\nexport class SceneWebXRController {\n\tconstructor(protected scene: PolyScene) {}\n\n\t/**\n\t *\n\t * WebXR\n\t *\n\t */\n\tprivate _activeXRController: BaseCoreWebXRController | null = null;\n\tprivate _setActiveXRController(controller: BaseCoreWebXRController | null): void {\n\t\tthis._activeXRController = controller;\n\t}\n\tactiveXRController(): BaseCoreWebXRController | null {\n\t\treturn this._activeXRController;\n\t}\n\n\t/**\n\t *\n\t * WebXR AR\n\t *\n\t */\n\tprivate _ARControllerCreateFunction: ARControllerCreateFunction | undefined;\n\tprivate _activeARController: CoreWebXRARController | null = null;\n\tsetARControllerCreationFunction(func: ARControllerCreateFunction) {\n\t\tthis._ARControllerCreateFunction = func;\n\t}\n\tARControllerCreateFunction() {\n\t\treturn this._ARControllerCreateFunction;\n\t}\n\tsetActiveARController(ARController: CoreWebXRARController | null) {\n\t\tthis._activeARController = ARController;\n\t\tthis._setActiveXRController(ARController);\n\t}\n\tactiveARController() {\n\t\treturn this._activeARController;\n\t}\n\n\t/**\n\t *\n\t * WebXR VR\n\t *\n\t */\n\tprivate _VRControllerCreateFunction: VRControllerCreateFunction | undefined;\n\tprivate _activeVRController: CoreWebXRVRController | null = null;\n\tsetVRControllerCreationFunction(func: VRControllerCreateFunction) {\n\t\tthis._VRControllerCreateFunction = func;\n\t}\n\tVRControllerCreateFunction() {\n\t\treturn this._VRControllerCreateFunction;\n\t}\n\tsetActiveVRController(VRController: CoreWebXRVRController | null) {\n\t\tthis._activeVRController = VRController;\n\t\tthis._setActiveXRController(VRController);\n\t}\n\tactiveVRController() {\n\t\treturn this._activeVRController;\n\t}\n}\n","import {ActorsManager} from './utils/ActorsManager';\nimport {SceneCamerasController} from './utils/SceneCamerasController';\nimport {Cooker} from './utils/Cooker';\nimport {SceneCookController} from './utils/CookController';\nimport {CoreGraph} from '../../core/graph/CoreGraph';\nimport {CorePerformance} from '../../core/performance/CorePerformance';\nimport {DispatchController} from './utils/DispatchController';\nimport {SceneExpressionsController} from './utils/SceneExpressionsController';\nimport {SceneLifeCycleController} from './utils/LifeCycleController';\nimport {LoadingController} from './utils/LoadingController';\nimport {MissingReferencesController} from './utils/missingReferences/MissingReferencesController';\nimport {GraphNodesController} from './utils/GraphNodesController';\nimport {NodesController} from './utils/NodesController';\n// import {PolySceneSerializer} from './utils/Serializer';\nimport {SceneEventsDispatcher} from './utils/events/EventsDispatcher';\nimport {ObjectsController} from './utils/ObjectsController';\nimport {ScenePerformanceMonitor} from './utils/ScenePerformanceMonitor';\nimport {ReferencesController} from './utils/ReferencesController';\nimport {\n\tonTimeTickHook,\n\tTimeController,\n\tTimeControllerUpdateTimeOptions,\n\tTIME_CONTROLLER_UPDATE_TIME_OPTIONS_DEFAULT,\n} from './utils/TimeController';\nimport {UniformsController} from './utils/UniformsController';\nimport {ViewersRegister} from './utils/ViewersRegister';\nimport {SceneWebGLController} from './utils/WebGLController';\nimport {WindowController} from './utils/WindowController';\nimport {SceneAssetsController} from './utils/AssetsController';\nimport {SceneTraverserController} from './utils/SceneTraverser';\nimport {BaseNodeType} from '../nodes/_Base';\nimport {ObjNodeChildrenMap} from '../poly/registers/nodes/Obj';\nimport {Constructor, valueof} from '../../types/GlobalTypes';\nimport {Raycaster, Scene, WebGLRenderer} from 'three';\nimport {CoreString} from '../../core/String';\nimport {SceneRenderersRegister, RegisterRendererOptions} from './utils/SceneRenderersRegister';\nimport {Poly} from '../Poly';\nimport {NodeCreateOptions} from '../nodes/utils/hierarchy/ChildrenController';\nimport {SceneWebXRController} from './utils/WebXREventsController';\nimport {CoreObjectType, ObjectContent} from '../../core/geometry/ObjectContent';\nimport {CoreParamSerializer, BaseParamSerializer} from '../params/utils/CoreParamSerializer';\nimport type {ParamType} from '../poly/ParamType';\n\ninterface PolySceneCreateOptions {\n\troot: NodeCreateOptions;\n\tparamsSerializerClass?: typeof CoreParamSerializer<ParamType>;\n}\n\ntype SceneBatchUpdateCallback = () => void | Promise<void>;\ninterface UpdateState {\n\tscene: Scene;\n}\n\n/**\n *\n *\n * PolyScene contains all nodes within a scene.\n *\n */\nexport class PolyScene {\n\t/**\n\t * Returns the THREE.Scene.\n\t *\n\t * @remarks\n\t *\n\t * Read more about how to use a THREE.Scene on [THREE's documentation](https://threejs.org/docs/?q=scene#api/en/scenes/Scene)\n\t *\n\t */\n\tthreejsScene(): Scene {\n\t\treturn this.root().object;\n\t}\n\tprivate _uuid!: string;\n\tsetUuid(uuid: string) {\n\t\treturn (this._uuid = uuid);\n\t}\n\tget uuid() {\n\t\treturn this._uuid;\n\t}\n\tprivate _name: string | undefined;\n\tsetName(newName: string) {\n\t\treturn (this._name = PolyScene.sanitizeName(newName));\n\t}\n\tstatic sanitizeName(newName: string) {\n\t\tnewName = CoreString.sanitizeName(newName);\n\t\t// force lower case for now, as the editor export uses this\n\t\t// and it may be safer to use lowercase to make it work across OSes\n\t\tnewName = newName.toLowerCase();\n\t\treturn newName;\n\t}\n\tname() {\n\t\treturn this._name;\n\t}\n\n\tprotected _camerasController: SceneCamerasController | undefined;\n\tget camerasController() {\n\t\treturn (this._camerasController = this._camerasController || new SceneCamerasController(this));\n\t}\n\t/**\n\t * Returns the camera object that has been set as main\n\t *\n\t */\n\tmainCamera() {\n\t\treturn this.camerasController.mainCamera();\n\t}\n\n\tprivate _cooker = new Cooker(this);\n\tget cooker() {\n\t\treturn this._cooker;\n\t}\n\n\t// private _cube_cameras_controller: CubeCamerasController;\n\t// get cube_cameras_controller() {\n\t// \treturn (this._cube_cameras_controller = this._cube_cameras_controller || new CubeCamerasController(this));\n\t// }\n\tprivate _actorsManager: ActorsManager | undefined;\n\tget actorsManager() {\n\t\treturn (this._actorsManager = this._actorsManager || new ActorsManager(this));\n\t}\n\n\tprivate _assetsController: SceneAssetsController | undefined;\n\tget assets() {\n\t\treturn (this._assetsController = this._assetsController || new SceneAssetsController());\n\t}\n\n\tpublic readonly cookController = new SceneCookController();\n\t/**\n\t * Returns a promise to wait for all nodes to have cooked when loading a scene.\n\t *\n\t */\n\tasync waitForCooksCompleted(): Promise<void> {\n\t\treturn await this.cookController.waitForCooksCompleted();\n\t}\n\n\tprivate _dispatchController: DispatchController | undefined;\n\tget dispatchController() {\n\t\treturn (this._dispatchController = this._dispatchController || new DispatchController(this));\n\t}\n\tprivate _eventsDispatcher: SceneEventsDispatcher | undefined;\n\tget eventsDispatcher() {\n\t\treturn (this._eventsDispatcher = this._eventsDispatcher || new SceneEventsDispatcher(this));\n\t}\n\tprivate _webXRController: SceneWebXRController | undefined;\n\tget webXR() {\n\t\treturn (this._webXRController = this._webXRController || new SceneWebXRController(this));\n\t}\n\t/**\n\t * When using Polygonjs viewers, a raycaster is created to use mouse events and detect if there are any object under the cursor.\n\t * But if no viewer is created, such as when [importing a scene in react three fiber](/docs/integrations/react_three_fiber),\n\t * It is then useful to give a raycaster.\n\t *\n\t */\n\tsetRaycaster(raycaster: Raycaster) {\n\t\tthis.eventsDispatcher.setRaycaster(raycaster);\n\t}\n\n\tprivate _graph = new CoreGraph();\n\tget graph() {\n\t\treturn this._graph;\n\t}\n\n\tpublic readonly lifecycleController: SceneLifeCycleController = new SceneLifeCycleController(this);\n\tpublic readonly loadingController: LoadingController = new LoadingController(this);\n\tpublic readonly missingExpressionReferencesController: MissingReferencesController =\n\t\tnew MissingReferencesController(this);\n\tpublic readonly expressionsController: SceneExpressionsController = new SceneExpressionsController();\n\tpublic readonly nodesController = new NodesController(this);\n\tpublic readonly graphNodesController = new GraphNodesController(this);\n\tpublic readonly renderersRegister = new SceneRenderersRegister(this);\n\t/**\n\t * Creates a new node.\n\t *\n\t * nodeClass can be either a string or a node class. Both examples below work:\n\t *\n\t * - polyScene.createNode('box'): returns a BoxSopNode\n\t * - polyScene.createNode(boxSopNode): returns a BoxSopNode\n\t *\n\t */\n\tcreateNode<S extends keyof ObjNodeChildrenMap>(nodeClass: S, options?: NodeCreateOptions): ObjNodeChildrenMap[S];\n\tcreateNode<K extends valueof<ObjNodeChildrenMap>>(nodeClass: Constructor<K>, options?: NodeCreateOptions): K;\n\tcreateNode<K extends valueof<ObjNodeChildrenMap>>(nodeClass: Constructor<K>, options?: NodeCreateOptions): K {\n\t\treturn this.root().createNode(nodeClass, options) as K;\n\t}\n\t/**\n\t * returns all nodes with a given type\n\t *\n\t * - polyScene.nodesByType('box'): returns all BoxSopNodes\n\t */\n\tnodesByType(type: string): BaseNodeType[] {\n\t\treturn this.nodesController.nodesByType(type);\n\t}\n\tprotected _objectsController = new ObjectsController(this);\n\tget objectsController() {\n\t\treturn this._objectsController;\n\t}\n\t/**\n\t * returns a THREE.Object3D whose name matches the mask\n\t *\n\t */\n\tfindObjectByMask<T extends CoreObjectType>(mask: string): ObjectContent<T> | undefined {\n\t\treturn this._objectsController.findObjectByMask(mask);\n\t}\n\t/**\n\t * returns a list THREE.Object3Ds whose names matche the mask\n\t *\n\t */\n\tobjectsByMask<T extends CoreObjectType>(mask: string, parent?: ObjectContent<T>): ObjectContent<T>[] {\n\t\treturn this._objectsController.objectsByMask(mask, parent);\n\t}\n\n\tprotected _referencesController = new ReferencesController(this);\n\tget referencesController() {\n\t\treturn this._referencesController;\n\t}\n\n\tprotected _performance: CorePerformance | undefined;\n\tget performance() {\n\t\treturn (this._performance = this._performance || new CorePerformance());\n\t}\n\tpublic readonly perfMonitor = new ScenePerformanceMonitor(this);\n\n\tprotected _viewersRegister: ViewersRegister | undefined;\n\tget viewersRegister() {\n\t\treturn (this._viewersRegister = this._viewersRegister || new ViewersRegister(this));\n\t}\n\tpublic readonly sceneTraverser = new SceneTraverserController(this);\n\t/**\n\t * updates Polygonjs scene internals. This is called automatically when using Polygonjs viewers,\n\t * but you would need to call it yourself in the render loop when adding your scene to threejs or react-three-fiber.\n\t * See [https://polygonjs.com/docs/integrations](https://polygonjs.com/docs/integrations)\n\t *\n\t */\n\tupdate(delta: number, state?: UpdateState) {\n\t\t// setDelta is necessary here, as this function is most likely called from an integration with threejs, using a custom render loop\n\t\tthis.timeController.setDelta(delta);\n\t\tthis.timeController.incrementTimeIfPlaying(TIME_CONTROLLER_UPDATE_TIME_OPTIONS_DEFAULT);\n\t\tthis.sceneTraverser.traverseScene(state?.scene);\n\t}\n\n\t//\n\t//\n\t// time\n\t//\n\t//\n\treadonly timeController = new TimeController(this);\n\t/**\n\t * sets the current frame\n\t *\n\t */\n\tsetFrame(frame: number) {\n\t\tthis.timeController.setFrame(frame);\n\t}\n\tsetFrameToStart() {\n\t\tthis.timeController.setFrameToStart();\n\t}\n\n\t/**\n\t * returns the current frame\n\t *\n\t */\n\tframe(): number {\n\t\treturn this.timeController.frame();\n\t}\n\t/**\n\t * returns the current time\n\t *\n\t */\n\ttime(): number {\n\t\treturn this.timeController.time();\n\t}\n\tmaxFrame() {\n\t\treturn this.timeController.maxFrame();\n\t}\n\t/**\n\t * starts playing the scene\n\t *\n\t */\n\tplay() {\n\t\tthis.timeController.play();\n\t}\n\t/**\n\t * pauses the scene\n\t *\n\t */\n\tpause() {\n\t\tthis.timeController.pause();\n\t}\n\t/**\n\t * increments the time\n\t *\n\t */\n\tincrementTime(options?: TimeControllerUpdateTimeOptions) {\n\t\tthis.timeController.incrementTime(options);\n\t}\n\t/**\n\t * increments the time if the scene is playing()\n\t *\n\t */\n\tincrementTimeIfPlaying(options?: TimeControllerUpdateTimeOptions) {\n\t\tthis.timeController.incrementTimeIfPlaying(options);\n\t}\n\t/**\n\t * registers a renderer\n\t *\n\t */\n\tregisterRenderer(renderer: WebGLRenderer, options?: RegisterRendererOptions) {\n\t\treturn this.renderersRegister.registerRenderer(renderer, options);\n\t}\n\n\t//\n\t//\n\t// uniforms\n\t//\n\t//\n\tprivate _uniformsController: UniformsController | undefined;\n\tget uniformsController() {\n\t\treturn (this._uniformsController = this._uniformsController || new UniformsController(this));\n\t}\n\n\t//\n\t//\n\t// webgl\n\t//\n\t//\n\tprivate _webglController: SceneWebGLController | undefined;\n\tget webglController() {\n\t\treturn (this._webglController = this._webglController || new SceneWebGLController());\n\t}\n\n\t//\n\t//\n\t// window\n\t//\n\t//\n\tprivate _windowController: WindowController | undefined;\n\tget windowController() {\n\t\treturn (this._windowController = this._windowController || new WindowController(this));\n\t}\n\n\t//\n\t//\n\t// constructor\n\t//\n\t//\n\tconstructor(options?: PolySceneCreateOptions) {\n\t\tthis._graph.setScene(this);\n\t\tthis._paramSerializerClass = options?.paramsSerializerClass;\n\t\tthis.nodesController.createRoot(options?.root);\n\t\tPoly.scenesRegister.registerScene(this);\n\t}\n\n\tprivate _disposed = false;\n\tdispose() {\n\t\tif (this._disposed == true) {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposed = true;\n\t\tthis.batchUpdates(() => {\n\t\t\tthis.nodesController.traverseNodes((node) => {\n\t\t\t\tnode.parent()?.removeNode(node);\n\t\t\t});\n\t\t});\n\t\tif (this._windowController) {\n\t\t\tthis._windowController.dispose();\n\t\t\tthis._windowController = undefined;\n\t\t}\n\t\tthis.timeController.dispose();\n\t\tthis.renderersRegister.dispose();\n\t\tthis.camerasController.dispose();\n\t\tthis.root().dispose();\n\t\tPoly.scenesRegister.deregisterScene(this);\n\t}\n\tdisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tprivate _paramSerializerClass?: BaseParamSerializer;\n\tparamSerializerClass() {\n\t\treturn this._paramSerializerClass;\n\t}\n\n\t//\n\t//\n\t// cooker\n\t//\n\t//\n\t/**\n\t * batchUpdates can be useful to set multiple parameter values without triggering a recook for each update.\n\t *\n\t */\n\tasync batchUpdates(callback: SceneBatchUpdateCallback) {\n\t\tthis._cooker.block();\n\n\t\tawait callback();\n\n\t\tthis._cooker.unblock();\n\t}\n\n\t//\n\t//\n\t// nodes\n\t//\n\t//\n\t/**\n\t * returns a node based on its path\n\t *\n\t * - polyScene.node('/geo1')\n\t *\n\t */\n\tnode(path: string) {\n\t\treturn this.nodesController.node(path);\n\t}\n\t/**\n\t * returns the root node\n\t *\n\t */\n\troot() {\n\t\treturn this.nodesController.root();\n\t}\n\t/**\n\t * traverse all nodes and runs a callback for each\n\t *\n\t */\n\ttraverseNodes(callback: (node: BaseNodeType) => void) {\n\t\tthis.nodesController.traverseNodes(callback);\n\t}\n\n\t//\n\t//\n\t// CALLBACKS\n\t//\n\t//\n\t/**\n\t * registers a BeforeTick callback. BeforeTick callbacks are run before updating the frame (and therefore before any time dependent node has changed)\n\t *\n\t */\n\tregisterOnBeforeTick(callbackName: string, callback: onTimeTickHook): void {\n\t\tthis.timeController.registerOnBeforeTick(callbackName, callback);\n\t}\n\t/**\n\t * unregisters BeforeTick callback\n\t *\n\t */\n\tunRegisterOnBeforeTick(callbackName: string): void {\n\t\tthis.timeController.unRegisterOnBeforeTick(callbackName);\n\t}\n\t/**\n\t * Returns the list registered BeforeTick callback names\n\t *\n\t */\n\tregisteredBeforeTickCallbacks(): Map<string, onTimeTickHook> {\n\t\treturn this.timeController.registeredBeforeTickCallbacks();\n\t}\n\t/**\n\t * return true if a callback is registered with that name\n\t *\n\t */\n\thasBeforeTickCallback(callbackName: string): boolean {\n\t\treturn this.timeController.hasBeforeTickCallback(callbackName);\n\t}\n\t/**\n\t * registers AfterTick callback. AfterTick callbacks are run after updating the frame (and therefore after any time dependent node has changed)\n\t *\n\t */\n\tregisterOnAfterTick(callbackName: string, callback: onTimeTickHook): void {\n\t\tthis.timeController.registerOnAfterTick(callbackName, callback);\n\t}\n\t/**\n\t * unregisters AfterTick callback\n\t *\n\t */\n\tunRegisterOnAfterTick(callbackName: string): void {\n\t\tthis.timeController.unRegisterOnAfterTick(callbackName);\n\t}\n\t/**\n\t * Returns the list registered AfterTick callback names\n\t *\n\t */\n\tregisteredAfterTickCallbacks(): Map<string, onTimeTickHook> {\n\t\treturn this.timeController.registeredAfterTickCallbacks();\n\t}\n\t/**\n\t * return true if a callback is registered with that name\n\t *\n\t */\n\thasAfterTickCallback(callbackName: string): boolean {\n\t\treturn this.timeController.hasAfterTickCallback(callbackName);\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {Object3D} from 'three';\nimport {CorePath, objectsByMask, CorePathObjCallback} from '../../../core/geometry/CorePath';\nimport {CoreObjectType, ObjectContent} from '../../../core/geometry/ObjectContent';\n\nexport const ROOT_NAME = '/';\n\nexport class ObjectsController {\n\tconstructor(private scene: PolyScene) {}\n\n\tfindObjectByMask<T extends CoreObjectType>(mask: string): ObjectContent<T> | undefined {\n\t\treturn CorePath.findObjectByMask(mask, this.scene.threejsScene());\n\t}\n\n\tobjectsByMask<T extends CoreObjectType>(mask: string, parent?: ObjectContent<T>): ObjectContent<T>[] {\n\t\treturn objectsByMask(mask, parent || this.scene.threejsScene(), false);\n\t}\n\n\ttraverseObjectsWithMask<T extends CoreObjectType>(\n\t\tmask: string,\n\t\tcallback: CorePathObjCallback<T>,\n\t\tobject: Object3D | undefined,\n\t\tinvertMask: boolean = false\n\t) {\n\t\tCorePath.traverseObjectsWithMaskInObject(mask, object || this.scene.threejsScene(), callback, invertMask);\n\t}\n}\n","export enum SceneEvent {\n\tMAX_FRAME_UPDATED = 'scene_maxFrameUpdated',\n\tREALTIME_STATUS_UPDATED = 'scene_realtime_status_updated',\n\tFRAME_UPDATED = 'scene_frame_updated',\n\tPLAY_STATE_UPDATED = 'scene_play_state_updated',\n}\n","import {PolyScene} from '../PolyScene';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {SceneEvent} from '../../poly/SceneEvent';\nimport {Clock} from 'three';\nimport {SCENE_EVENT_PLAY_EVENT_CONTEXT, SCENE_EVENT_PAUSE_EVENT_CONTEXT} from './events/SceneEventsController';\nimport {ref} from '../../../core/reactivity/CoreReactivity';\nimport {Poly} from '../../Poly';\n\n// ensure that FPS remains a float\n// to have divisions and multiplications also give a float\nconst FPS = 60.0;\nexport const DESIRED_FPS = 60.0;\nconst MAX_DELTA = 0.1;\nexport type onTimeTickHook = (delta: number) => void;\nexport type onPlayingStateChangeCallback = () => void;\n// const performance = Poly.performance.performanceManager();\n\nexport interface TimeControllerUpdateTimeOptions {\n\tupdateClockDelta?: boolean;\n}\nexport const TIME_CONTROLLER_UPDATE_TIME_OPTIONS_DEFAULT: TimeControllerUpdateTimeOptions = {\n\tupdateClockDelta: false,\n};\n\ntype onTimeTickCallbacksMap = Map<string, onTimeTickHook>;\nexport class TimeController {\n\tstatic START_FRAME: Readonly<number> = 0;\n\tprivate _frame: number = 0;\n\tprivate _timeUniform = ref<number>(0);\n\tprivate _timeDeltaUniform = ref<number>(0);\n\tprivate _graphNode: CoreGraphNode;\n\tprivate _realtimeState = true;\n\tprivate _maxFrame = 600;\n\tprivate _maxFrameLocked = false;\n\tprivate _playing: boolean = false;\n\tprivate _clock = new Clock();\n\t// private _delta: number = 0;\n\n\t// private _PLAY_EVENT_CONTEXT: EventContext<SceneEvent> | undefined;\n\t// private _PAUSE_EVENT_CONTEXT: EventContext<SceneEvent> | undefined;\n\t// private _TICK_EVENT_CONTEXT: EventContext<SceneEvent> | undefined;\n\t// get PLAY_EVENT_CONTEXT() {\n\t// \treturn (this._PLAY_EVENT_CONTEXT = this._PLAY_EVENT_CONTEXT || {event: new SceneEvent(SceneEventType.PLAY)});\n\t// }\n\t// get PAUSE_EVENT_CONTEXT() {\n\t// \treturn (this._PAUSE_EVENT_CONTEXT = this._PAUSE_EVENT_CONTEXT || {event: new SceneEvent(SceneEventType.PAUSE)});\n\t// }\n\t// get TICK_EVENT_CONTEXT() {\n\t// \treturn (this._TICK_EVENT_CONTEXT = this._TICK_EVENT_CONTEXT || {event: new SceneEvent(SceneEventType.TICK)});\n\t// }\n\n\tconstructor(private scene: PolyScene) {\n\t\tthis._graphNode = new CoreGraphNode(scene, 'timeController');\n\t}\n\tget graphNode() {\n\t\treturn this._graphNode;\n\t}\n\n\tdispose() {\n\t\tthis._graphNode.dispose();\n\t}\n\n\tupdateClockDelta() {\n\t\tconst delta = this._clock.getDelta();\n\t\tconst clampedDelta = delta > MAX_DELTA ? MAX_DELTA : delta;\n\t\treturn this.setDelta(clampedDelta);\n\t}\n\tdelta() {\n\t\treturn this._timeDeltaUniform.value;\n\t}\n\tsetDelta(delta: number) {\n\t\treturn (this._timeDeltaUniform.value = delta);\n\t}\n\n\tframe(): number {\n\t\treturn this._frame;\n\t}\n\ttimeUniform() {\n\t\treturn this._timeUniform;\n\t}\n\ttimeDeltaUniform() {\n\t\treturn this._timeDeltaUniform;\n\t}\n\ttime(): number {\n\t\treturn this._timeUniform.value;\n\t}\n\t// timeDelta() {\n\t// \treturn this._timeDeltaUniform.value;\n\t// }\n\tmaxFrame() {\n\t\treturn this._maxFrame;\n\t}\n\tmaxFrameLocked() {\n\t\treturn this._maxFrameLocked;\n\t}\n\trealtimeState() {\n\t\treturn this._realtimeState;\n\t}\n\tsetMaxFrame(maxFrame: number) {\n\t\tthis._maxFrame = Math.floor(maxFrame);\n\t\tthis.scene.dispatchController.dispatch(this._graphNode, SceneEvent.MAX_FRAME_UPDATED);\n\t}\n\tsetMaxFrameLocked(state: boolean) {\n\t\tthis._maxFrameLocked = state;\n\t\tthis.scene.dispatchController.dispatch(this._graphNode, SceneEvent.MAX_FRAME_UPDATED);\n\t}\n\tsetRealtimeState(state: boolean) {\n\t\tthis._realtimeState = state;\n\t\tthis.scene.dispatchController.dispatch(this._graphNode, SceneEvent.REALTIME_STATUS_UPDATED);\n\t}\n\n\tsetTime(time: number, updateFrame = true) {\n\t\tif (time == this._timeUniform.value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._timeUniform.value = time;\n\n\t\t// we block updates here, so that dependent nodes only cook once\n\t\tthis.scene.cooker.block();\n\t\tconst delta = this.delta();\n\t\tfor (const callback of this._onBeforeTickCallbacks) {\n\t\t\tcallback(delta);\n\t\t}\n\t\tif (this._playing == true && time > 0) {\n\t\t\tthis.scene.actorsManager.tick();\n\t\t}\n\n\t\tif (updateFrame) {\n\t\t\tconst newFrame = Math.floor(this._timeUniform.value * FPS);\n\t\t\tconst boundedFrame = this._ensureFrameWithinBounds(newFrame);\n\t\t\tif (newFrame != boundedFrame) {\n\t\t\t\tthis.setFrame(boundedFrame, true);\n\t\t\t} else {\n\t\t\t\tthis._frame = newFrame;\n\t\t\t}\n\t\t}\n\n\t\t// update time dependents\n\t\tthis.scene.dispatchController.dispatch(this._graphNode, SceneEvent.FRAME_UPDATED);\n\t\t// this.scene.uniformsController.updateTime();\n\n\t\tthis.graphNode.setSuccessorsDirty();\n\t\tthis.scene.cooker.unblock();\n\n\t\t// dispatch events after nodes have cooked\n\t\t// this.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_TICK_EVENT_CONTEXT);\n\n\t\tfor (const callback of this._onAfterTickCallbacks) {\n\t\t\tcallback(delta);\n\t\t}\n\t}\n\n\tsetFrame(frame: number, updateTime = true) {\n\t\tif (frame == this._frame) {\n\t\t\treturn;\n\t\t}\n\t\tframe = this._ensureFrameWithinBounds(frame);\n\t\tif (frame == this._frame) {\n\t\t\treturn;\n\t\t}\n\t\tthis._frame = frame;\n\t\tif (this._frame == TimeController.START_FRAME) {\n\t\t\tthis.scene.actorsManager.runOnEventSceneReset();\n\t\t}\n\n\t\tif (updateTime) {\n\t\t\tthis.setTime(this._frame / FPS, false);\n\t\t}\n\t}\n\tsetFrameToStart() {\n\t\tthis.setFrame(TimeController.START_FRAME, true);\n\t}\n\tincrementTimeIfPlaying(options?: TimeControllerUpdateTimeOptions) {\n\t\tif (this._playing) {\n\t\t\tif (!this.scene.root().areChildrenCooking()) {\n\t\t\t\tthis.incrementTime(options);\n\t\t\t}\n\t\t}\n\t}\n\tincrementTime(options?: TimeControllerUpdateTimeOptions) {\n\t\tif (!(options?.updateClockDelta == false)) {\n\t\t\tthis.updateClockDelta();\n\t\t}\n\n\t\tif (this._realtimeState) {\n\t\t\t// const performance_now = performance.now();\n\t\t\tconst newTime = this._timeUniform.value + this.delta();\n\t\t\t// this._prev_performance_now = performance_now;\n\t\t\tthis.setTime(newTime, false);\n\t\t\tthis.setFrame(this._frame + 1, false);\n\t\t} else {\n\t\t\tthis.setFrame(this.frame() + 1);\n\t\t}\n\t}\n\n\tprivate _ensureFrameWithinBounds(frame: number): number {\n\t\tif (this._playing) {\n\t\t\tif (this._maxFrameLocked && frame > this._maxFrame) {\n\t\t\t\treturn TimeController.START_FRAME;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._maxFrameLocked && frame > this._maxFrame) {\n\t\t\t\treturn this._maxFrame;\n\t\t\t}\n\t\t\tif (frame < TimeController.START_FRAME) {\n\t\t\t\treturn TimeController.START_FRAME;\n\t\t\t}\n\t\t}\n\t\treturn frame;\n\t}\n\tplaying() {\n\t\treturn this._playing === true;\n\t}\n\tpause() {\n\t\tif (this._playing == false) {\n\t\t\treturn;\n\t\t}\n\t\tthis._playing = false;\n\t\t// TODO: try and unify the dispatch controller and events dispatcher\n\t\tthis.scene.dispatchController.dispatch(this._graphNode, SceneEvent.PLAY_STATE_UPDATED);\n\t\tthis.scene.actorsManager.runOnEventScenePause();\n\t\tthis.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_PAUSE_EVENT_CONTEXT);\n\t\tfor (const callback of this._onPlayingStateChangeCallbacks) {\n\t\t\tcallback();\n\t\t}\n\t}\n\tplay() {\n\t\tif (!this._playAllowedWithoutAllNodesCooked) {\n\t\t\tif (!this.scene.cookController.allNodesHaveCookedAtLeastOnce()) {\n\t\t\t\tPoly.warn('play not allowed, some nodes have not completed cooking');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (this._playing == true) {\n\t\t\treturn;\n\t\t}\n\t\tthis._playing = true;\n\t\tthis.scene.actorsManager.runOnEventScenePlay();\n\t\tthis.scene.dispatchController.dispatch(this._graphNode, SceneEvent.PLAY_STATE_UPDATED);\n\t\tthis.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_PLAY_EVENT_CONTEXT);\n\t\tfor (const callback of this._onPlayingStateChangeCallbacks) {\n\t\t\tcallback();\n\t\t}\n\t}\n\ttogglePlayPause() {\n\t\tif (this.playing()) {\n\t\t\tthis.pause();\n\t\t} else {\n\t\t\tthis.play();\n\t\t}\n\t}\n\tprivate _playAllowedWithoutAllNodesCooked = true;\n\tforbidPlayUntilAllNodesCooked() {\n\t\tthis._playAllowedWithoutAllNodesCooked = false;\n\t}\n\n\t//\n\t//\n\t// CALLBACKS\n\t//\n\t//\n\tprivate _onBeforeTickCallbacksMap: onTimeTickCallbacksMap | undefined;\n\tprivate _onAfterTickCallbacksMap: onTimeTickCallbacksMap | undefined;\n\tprivate _onPlayingStateChangeCallbacksMap: Set<onPlayingStateChangeCallback> | undefined;\n\tprivate _onBeforeTickCallbacks: Array<onTimeTickHook> = [];\n\tprivate _onAfterTickCallbacks: Array<onTimeTickHook> = [];\n\tprivate _onPlayingStateChangeCallbacks: Array<onPlayingStateChangeCallback> = [];\n\n\tregisterOnBeforeTick(callbackName: string, callback: onTimeTickHook) {\n\t\tthis._registerCallback(callbackName, callback, this.registeredBeforeTickCallbacks());\n\t}\n\tunRegisterOnBeforeTick(callbackName: string) {\n\t\tthis._unregisterCallback(callbackName, this._onBeforeTickCallbacksMap);\n\t}\n\tregisteredBeforeTickCallbacks() {\n\t\treturn (this._onBeforeTickCallbacksMap = this._onBeforeTickCallbacksMap || new Map());\n\t}\n\thasBeforeTickCallback(callbackName: string): boolean {\n\t\treturn this._onBeforeTickCallbacksMap?.has(callbackName) || false;\n\t}\n\tregisterOnAfterTick(callbackName: string, callback: onTimeTickHook) {\n\t\tthis._registerCallback(callbackName, callback, this.registeredAfterTickCallbacks());\n\t}\n\tunRegisterOnAfterTick(callbackName: string) {\n\t\tthis._unregisterCallback(callbackName, this._onAfterTickCallbacksMap);\n\t}\n\tregisteredAfterTickCallbacks() {\n\t\treturn (this._onAfterTickCallbacksMap = this._onAfterTickCallbacksMap || (new Map() as onTimeTickCallbacksMap));\n\t}\n\thasAfterTickCallback(callbackName: string): boolean {\n\t\treturn this._onAfterTickCallbacksMap?.has(callbackName) || false;\n\t}\n\tonPlayingStateChange(callback: onPlayingStateChangeCallback) {\n\t\tthis._onPlayingStateChangeCallbacksMap = this._onPlayingStateChangeCallbacksMap || new Set();\n\t\tthis._onPlayingStateChangeCallbacksMap.add(callback);\n\t\tthis._updateOnPlayingStateChangeCallbacks();\n\t}\n\tremoveOnPlayingStateChange(callback: onPlayingStateChangeCallback) {\n\t\tif (this._onPlayingStateChangeCallbacksMap) {\n\t\t\tthis._onPlayingStateChangeCallbacksMap.delete(callback);\n\t\t\tthis._updateOnPlayingStateChangeCallbacks();\n\t\t}\n\t}\n\tprivate _updateOnPlayingStateChangeCallbacks() {\n\t\tthis._onPlayingStateChangeCallbacks = [];\n\t\tif (this._onPlayingStateChangeCallbacksMap) {\n\t\t\tthis._onPlayingStateChangeCallbacksMap.forEach((callback) => {\n\t\t\t\tthis._onPlayingStateChangeCallbacks.push(callback);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _registerCallback<C extends onTimeTickHook>(\n\t\tcallbackName: string,\n\t\tcallback: C,\n\t\tmap: onTimeTickCallbacksMap\n\t) {\n\t\tif (map.has(callbackName)) {\n\t\t\tconsole.warn(`callback ${callbackName} already registered`);\n\t\t\treturn;\n\t\t}\n\t\tmap.set(callbackName, callback);\n\t\tthis._updateCallbacks();\n\t}\n\tprivate _unregisterCallback(callbackName: string, map?: onTimeTickCallbacksMap) {\n\t\tif (!map) {\n\t\t\treturn;\n\t\t}\n\t\tmap.delete(callbackName);\n\t\tthis._updateCallbacks();\n\t}\n\tprivate _updateCallbacks() {\n\t\tthis._onBeforeTickCallbacks.length = 0;\n\t\tthis._onBeforeTickCallbacksMap?.forEach((callback) => {\n\t\t\tthis._onBeforeTickCallbacks.push(callback);\n\t\t});\n\t\tthis._onAfterTickCallbacks.length = 0;\n\t\tthis._onAfterTickCallbacksMap?.forEach((callback) => {\n\t\t\tthis._onAfterTickCallbacks.push(callback);\n\t\t});\n\t}\n}\n","import type {Ref} from '@vue/reactivity';\nimport {Intersection, Material, Object3D} from 'three';\nimport {ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {MouseButton, MouseButtons} from '../../../../../core/MouseButton';\nimport {TypeAssert} from '../../../../poly/Assert';\n\nexport interface PriorityOptions {\n\tblockObjectsBehind: boolean;\n\tskipIfObjectsInFront: boolean;\n}\nexport interface CPUOptions {\n\ttraverseChildren: boolean;\n\tpointsThreshold: number;\n\tlineThreshold: number;\n\tintersectionRef: Ref<Intersection | null>;\n}\nexport interface GPUOptions {\n\t// if a worldPosMaterial is given, we use it and only need a single render call.\n\t// if not, we render need 2 renders, 1 to write to the depth buffer and another to read it (in addition to readRenderTargetPixels)\n\tworldPosMaterial: Material | null;\n\tdistanceRef: Ref<number>;\n}\nexport interface ObjectOptions {\n\tpriority: PriorityOptions;\n\tcpu?: CPUOptions;\n\tgpu?: GPUOptions;\n}\nexport interface EmptyOptions {}\n\nexport function hasCPUOptions(optionsList: ObjectOptions[]): boolean {\n\tfor (const options of optionsList) {\n\t\tif (options.cpu != null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nexport function hasGPUOptions(optionsList: ObjectOptions[]): boolean {\n\tfor (const options of optionsList) {\n\t\tif (options.gpu != null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nexport function GPUOptionsDepthBufferRequired(optionsList: ObjectOptions[]): boolean {\n\tfor (const options of optionsList) {\n\t\tif (options.gpu != null && options.gpu.worldPosMaterial == null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction _cpuOptionsEqual(options1: CPUOptions, options2: CPUOptions): boolean {\n\treturn (\n\t\toptions1.traverseChildren == options2.traverseChildren &&\n\t\toptions1.pointsThreshold == options2.pointsThreshold &&\n\t\toptions1.lineThreshold == options2.lineThreshold\n\t);\n}\n\nexport function CPUOptionsEqual(optionsList: ObjectOptions[]): boolean {\n\tlet firstCPUOptions: CPUOptions | undefined;\n\tfor (const options of optionsList) {\n\t\tif (options.cpu != null) {\n\t\t\tif (firstCPUOptions == null) {\n\t\t\t\tfirstCPUOptions = options.cpu;\n\t\t\t} else {\n\t\t\t\tif (!_cpuOptionsEqual(firstCPUOptions, options.cpu)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function CPUOptionsMax(optionsList: ObjectOptions[], target: CPUOptions): CPUOptions {\n\ttarget.traverseChildren = false;\n\ttarget.pointsThreshold = -1;\n\ttarget.lineThreshold = -1;\n\tfor (const options of optionsList) {\n\t\tif (options.cpu != null) {\n\t\t\tif (target.traverseChildren == false && options.cpu.traverseChildren == true) {\n\t\t\t\ttarget.traverseChildren = options.cpu.traverseChildren;\n\t\t\t}\n\t\t\tif (target.pointsThreshold < options.cpu.pointsThreshold) {\n\t\t\t\ttarget.pointsThreshold = options.cpu.pointsThreshold;\n\t\t\t}\n\t\t\tif (target.lineThreshold < options.cpu.lineThreshold) {\n\t\t\t\ttarget.lineThreshold = options.cpu.lineThreshold;\n\t\t\t}\n\t\t}\n\t}\n\treturn target;\n}\n\nexport enum Status {\n\tREQUIRED = 0, //'required',\n\tOPTIONAL = 1, //'optional',\n\tFORBIDDEN = 2, //'forbidden',\n}\nexport const STATUS_OPTIONS: Status[] = [Status.REQUIRED, Status.OPTIONAL, Status.FORBIDDEN];\nexport const STATUS_OPTION_LABEL: string[] = ['required', 'optional', 'forbidden'];\nexport const DEFAULT_STATUS_OPTION = STATUS_OPTIONS.indexOf(Status.OPTIONAL);\nexport const STATUS_MENU_OPTIONS = {\n\tmenu: {\n\t\tentries: STATUS_OPTIONS.map((value) => ({\n\t\t\tvalue,\n\t\t\tname: STATUS_OPTION_LABEL[value],\n\t\t})),\n\t},\n};\nexport interface ButtonOptions {\n\tleft: boolean;\n\tmiddle: boolean;\n\tright: boolean;\n}\nexport interface ButtonsOptions {\n\tleft: Status;\n\tmiddle: Status;\n\tright: Status;\n}\nexport interface ModifierOptions {\n\tctrl: Status;\n\tshift: Status;\n\talt: Status;\n}\n// export interface ModifierIndexOptions {\n// \tctrl: number;\n// \tshift: number;\n// \talt: number;\n// }\n// export function modifierIndexToModifierOptions(options: ModifierIndexOptions): ModifierOptions {\n// \treturn {\n// \t\tctrl: POINTER_EVENT_MODIFIER_OPTIONS[options.ctrl],\n// \t\tshift: POINTER_EVENT_MODIFIER_OPTIONS[options.shift],\n// \t\talt: POINTER_EVENT_MODIFIER_OPTIONS[options.alt],\n// \t};\n// }\nexport interface ButtonAndModifierOptions {\n\tbutton: ButtonOptions;\n\tmodifier: ModifierOptions;\n}\nexport interface ButtonsAndModifierOptions {\n\tbutton: ButtonsOptions;\n\tmodifier: ModifierOptions;\n}\n// export interface ButtonAndModifierIndexOptions {\n// \tbutton: ButtonOptions;\n// \tmodifier: ModifierIndexOptions;\n// }\nexport interface ButtonAndModifierOptionsAsString {\n\tbutton: ConvertToStrings<ButtonOptions>;\n\tmodifier: ConvertToStrings<ModifierOptions>;\n}\nexport interface ButtonsAndModifierOptionsAsString {\n\tbutton: ConvertToStrings<ButtonsOptions>;\n\tmodifier: ConvertToStrings<ModifierOptions>;\n}\n\ninterface PropertyWithButtonConfig {\n\tconfig: ButtonAndModifierOptions;\n}\ninterface PropertyWithButtonsConfig {\n\tconfig: ButtonsAndModifierOptions;\n}\nexport interface ButtonConfig {\n\tbutton: MouseButton;\n\tctrl: boolean;\n\tshift: boolean;\n\talt: boolean;\n}\nexport interface ButtonsConfig {\n\tbuttons: MouseButtons;\n\tctrl: boolean;\n\tshift: boolean;\n\talt: boolean;\n}\nfunction statusMatch(modifierProperty: Status, value: boolean): boolean {\n\tswitch (modifierProperty) {\n\t\tcase Status.REQUIRED: {\n\t\t\treturn value == true;\n\t\t}\n\t\tcase Status.OPTIONAL: {\n\t\t\treturn true;\n\t\t}\n\t\tcase Status.FORBIDDEN: {\n\t\t\treturn value == false;\n\t\t}\n\t}\n\tTypeAssert.unreachable(modifierProperty);\n}\nexport function propertyMatchesButtonConfig(propertyConfig: ButtonAndModifierOptions, buttonConfig: ButtonConfig) {\n\tswitch (buttonConfig.button) {\n\t\tcase MouseButton.LEFT: {\n\t\t\tif (propertyConfig.button.left == false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButton.MIDDLE: {\n\t\t\tif (propertyConfig.button.middle == false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButton.RIGHT: {\n\t\t\tif (propertyConfig.button.right == false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (\n\t\tstatusMatch(propertyConfig.modifier.ctrl, buttonConfig.ctrl) &&\n\t\tstatusMatch(propertyConfig.modifier.shift, buttonConfig.shift) &&\n\t\tstatusMatch(propertyConfig.modifier.alt, buttonConfig.alt)\n\t);\n}\nexport function propertyMatchesButtonsConfig(propertyConfig: ButtonsAndModifierOptions, buttonsConfig: ButtonsConfig) {\n\tswitch (buttonsConfig.buttons) {\n\t\tcase MouseButtons.LEFT: {\n\t\t\tif (\n\t\t\t\tpropertyConfig.button.left == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.middle == Status.REQUIRED ||\n\t\t\t\tpropertyConfig.button.right == Status.REQUIRED\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButtons.MIDDLE: {\n\t\t\tif (\n\t\t\t\tpropertyConfig.button.left == Status.REQUIRED ||\n\t\t\t\tpropertyConfig.button.middle == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.right == Status.REQUIRED\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButtons.RIGHT: {\n\t\t\tif (\n\t\t\t\tpropertyConfig.button.left == Status.REQUIRED ||\n\t\t\t\tpropertyConfig.button.middle == Status.REQUIRED ||\n\t\t\t\tpropertyConfig.button.right == Status.FORBIDDEN\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButtons.LEFT_RIGHT: {\n\t\t\tif (\n\t\t\t\tpropertyConfig.button.left == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.middle == Status.REQUIRED ||\n\t\t\t\tpropertyConfig.button.right == Status.FORBIDDEN\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButtons.LEFT_MIDDLE: {\n\t\t\tif (\n\t\t\t\tpropertyConfig.button.left == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.middle == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.right == Status.REQUIRED\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButtons.MIDDLE_RIGHT: {\n\t\t\tif (\n\t\t\t\tpropertyConfig.button.left == Status.REQUIRED ||\n\t\t\t\tpropertyConfig.button.middle == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.right == Status.FORBIDDEN\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase MouseButtons.LEFT_MIDDLE_RIGHT: {\n\t\t\tif (\n\t\t\t\tpropertyConfig.button.left == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.middle == Status.FORBIDDEN ||\n\t\t\t\tpropertyConfig.button.right == Status.FORBIDDEN\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (\n\t\tstatusMatch(propertyConfig.modifier.ctrl, buttonsConfig.ctrl) &&\n\t\tstatusMatch(propertyConfig.modifier.shift, buttonsConfig.shift) &&\n\t\tstatusMatch(propertyConfig.modifier.alt, buttonsConfig.alt)\n\t);\n}\nfunction propertiesMatchesButtonConfig(\n\tpropertiesList: PropertyWithButtonConfig[],\n\tbuttonConfig: ButtonConfig\n): boolean {\n\tfor (const properties of propertiesList) {\n\t\tif (propertyMatchesButtonConfig(properties.config, buttonConfig)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction propertiesMatchesButtonsConfig(\n\tpropertiesList: PropertyWithButtonsConfig[],\n\tbuttonConfig: ButtonsConfig\n): boolean {\n\tfor (const properties of propertiesList) {\n\t\tif (propertyMatchesButtonsConfig(properties.config, buttonConfig)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function buttonConfigFromEvent(event: Readonly<PointerEvent | MouseEvent | TouchEvent>, target: ButtonConfig) {\n\ttarget.button = (event as PointerEvent).button || MouseButton.LEFT;\n\ttarget.ctrl = event.ctrlKey;\n\ttarget.shift = event.shiftKey;\n\ttarget.alt = event.altKey;\n}\nexport function buttonsConfigFromEvent(event: Readonly<PointerEvent | MouseEvent | TouchEvent>, target: ButtonsConfig) {\n\ttarget.buttons = (event as MouseEvent).buttons || MouseButtons.LEFT;\n\ttarget.ctrl = event.ctrlKey;\n\ttarget.shift = event.shiftKey;\n\ttarget.alt = event.altKey;\n}\nconst _buttonConfig: ButtonConfig = {button: MouseButton.LEFT, ctrl: false, shift: false, alt: false};\nconst _buttonsConfig: ButtonsConfig = {buttons: MouseButtons.LEFT, ctrl: false, shift: false, alt: false};\nexport function filterObjectsWithMatchButtonConfig(\n\tevent: Readonly<PointerEvent | MouseEvent | TouchEvent>,\n\tobjects: Object3D[],\n\tpropertiesListByObject: Map<Object3D, PropertyWithButtonConfig[]>,\n\ttarget: Object3D[]\n) {\n\ttarget.length = 0;\n\tbuttonConfigFromEvent(event, _buttonConfig);\n\tfor (const object of objects) {\n\t\tconst propertiesList = propertiesListByObject.get(object);\n\t\tif (propertiesList) {\n\t\t\tif (propertiesMatchesButtonConfig(propertiesList, _buttonConfig)) {\n\t\t\t\ttarget.push(object);\n\t\t\t}\n\t\t}\n\t}\n}\nexport function filterObjectsWithMatchButtonsConfig(\n\tevent: Readonly<PointerEvent | MouseEvent | TouchEvent>,\n\tobjects: Object3D[],\n\tpropertiesListByObject: Map<Object3D, PropertyWithButtonsConfig[]>,\n\ttarget: Object3D[]\n) {\n\ttarget.length = 0;\n\tbuttonsConfigFromEvent(event, _buttonsConfig);\n\tfor (const object of objects) {\n\t\tconst propertiesList = propertiesListByObject.get(object);\n\t\tif (propertiesList) {\n\t\t\tif (propertiesMatchesButtonsConfig(propertiesList, _buttonsConfig)) {\n\t\t\t\ttarget.push(object);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {Constructor, ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseRayObjectIntersectionsController} from './_BaseRayObjectIntersectionsController';\nimport {\n\tObjectOptions,\n\tGPUOptions,\n\tCPUOptions,\n\tPriorityOptions,\n\tButtonAndModifierOptions,\n\t// ButtonAndModifierIndexOptions,\n\tButtonAndModifierOptionsAsString,\n\tfilterObjectsWithMatchButtonConfig,\n\tpropertyMatchesButtonConfig,\n\tButtonConfig,\n\tbuttonConfigFromEvent,\n\t// modifierIndexToModifierOptions,\n} from './Common';\nimport {ParamConfig} from '../../../../nodes/utils/params/ParamsConfig';\nimport {MouseButton} from '../../../../../core/MouseButton';\nimport {CursorMoveMonitor} from '../../../../../core/CursorMoveMonitor';\n\ninterface ClickOptions {\n\tmaxCursorMoveDistance: number;\n\tmaxDuration: number;\n\tcallback: () => void;\n}\n\nexport interface ObjectToClickOptions extends ObjectOptions {\n\tclick: ClickOptions;\n\tconfig: ButtonAndModifierOptions;\n}\n// export interface ObjectToClickIndexOptions extends ObjectOptions {\n// \tclick: ClickOptions;\n// \tconfig: ButtonAndModifierIndexOptions;\n// }\nexport interface ObjectToClickOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\tclick: ConvertToStrings<ClickOptions>;\n\tconfig: ButtonAndModifierOptionsAsString;\n}\nconst _buttonConfig: ButtonConfig = {button: MouseButton.LEFT, ctrl: false, shift: false, alt: false};\n\nfunction hasPropertiesWithCursorMoveLessThan(options: ObjectToClickOptions[], distance: number) {\n\tfor (const option of options) {\n\t\tif (distance < option.click.maxCursorMoveDistance) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function ClickParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param max cursor move distance */\n\t\tmaxCursorMoveDistance = ParamConfig.FLOAT(0.05, {\n\t\t\trange: [0, 1],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t\t/** @param max duration */\n\t\tmaxDuration = ParamConfig.INTEGER(200, {\n\t\t\trange: [0, 1000],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t};\n}\n\nexport class RayObjectIntersectionsClickController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToClickOptions[]> = new Map();\n\tprotected _intersectedStateOnPointerdownByObject: Map<Object3D, boolean> = new Map();\n\tprotected _intersectedStateOnPointerupByObject: Map<Object3D, boolean> = new Map();\n\tprivate _objectsMatchingEventConfig: Object3D[] = [];\n\tprivate _objectsIntersectedOnPointerdown: Object3D[] = [];\n\tprivate _cursorMoveMonitor = new CursorMoveMonitor();\n\tprivate _pointerdownEvent: Readonly<PointerEvent | MouseEvent | TouchEvent> | undefined;\n\tprivate _pointerdownReceivedAt: number = 0;\n\n\tprivate _bound = {\n\t\tpointerup: this._onPointerup.bind(this),\n\t};\n\tonPointerdown(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tthis._pointerdownEvent = event;\n\t\tthis._pointerdownReceivedAt = performance.now();\n\t\tif (this._objects.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tfilterObjectsWithMatchButtonConfig(\n\t\t\tevent,\n\t\t\tthis._objects,\n\t\t\tthis._propertiesListByObject,\n\t\t\tthis._objectsMatchingEventConfig\n\t\t);\n\t\tif (this._objectsMatchingEventConfig.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tdocument.addEventListener('pointerup', this._bound.pointerup);\n\t\t// we also need touchend, as pointerup appears to not be triggered if the cursor has moved a little bit\n\t\tdocument.addEventListener('touchend', this._bound.pointerup);\n\t\tthis._cursorMoveMonitor.addPointermoveEventListener(\n\t\t\tthis._scene.eventsDispatcher.pointerEventsController.cursor()\n\t\t);\n\t\tthis._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnPointerdownByObject);\n\t}\n\n\tprivate _onPointerup() {\n\t\tdocument.removeEventListener('pointerup', this._bound.pointerup);\n\t\tdocument.removeEventListener('touchend', this._bound.pointerup);\n\t\tthis._cursorMoveMonitor.removeEventListener();\n\t\tconst event = this._pointerdownEvent;\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pointerdownEvent = undefined;\n\t\tconst duration = performance.now() - this._pointerdownReceivedAt;\n\n\t\tconst movedCursorDistance = this._cursorMoveMonitor.movedCursorDistance();\n\n\t\tconst objects = this._objectsMatchingEventConfig;\n\t\tthis._objectsIntersectedOnPointerdown.length = 0;\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList && hasPropertiesWithCursorMoveLessThan(propertiesList, movedCursorDistance)) {\n\t\t\t\tconst isIntersectingOnPointerdown = this._intersectedStateOnPointerdownByObject.get(object);\n\t\t\t\tif (isIntersectingOnPointerdown) {\n\t\t\t\t\tthis._objectsIntersectedOnPointerdown.push(object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// I've considered using only the objects intersected in pointerdown for the pointerup detection,\n\t\t// but that prevents missed objects from occluding others if they are in front.\n\t\t// We therefore need to run the detection on all objects\n\t\t// instead, we can still optimise by not detecting anything if that list is empty\n\t\tif (this._objectsIntersectedOnPointerdown.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setIntersectedState(objects, this._intersectedStateOnPointerupByObject);\n\t\tbuttonConfigFromEvent(event, _buttonConfig);\n\n\t\tconst objectsIntersectedOnPointerdown = this._objectsIntersectedOnPointerdown;\n\t\tfor (const object of objectsIntersectedOnPointerdown) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tconst isIntersectingOnPointerup = this._intersectedStateOnPointerupByObject.get(object);\n\t\t\t\tif (isIntersectingOnPointerup == true) {\n\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmovedCursorDistance < properties.click.maxCursorMoveDistance &&\n\t\t\t\t\t\t\tduration < properties.click.maxDuration &&\n\t\t\t\t\t\t\tpropertyMatchesButtonConfig(properties.config, _buttonConfig)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tproperties.click.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Object3D} from 'three';\nimport {Constructor, ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {BaseRayObjectIntersectionsController} from './_BaseRayObjectIntersectionsController';\nimport {\n\tObjectOptions,\n\tGPUOptions,\n\tCPUOptions,\n\tPriorityOptions,\n\tButtonAndModifierOptions,\n\tButtonAndModifierOptionsAsString,\n\tfilterObjectsWithMatchButtonConfig,\n\tButtonConfig,\n\tbuttonConfigFromEvent,\n\tpropertyMatchesButtonConfig,\n} from './Common';\nimport {pushOnArrayAtEntry} from '../../../../../core/MapUtils';\nimport {ParamConfig} from '../../../../nodes/utils/params/ParamsConfig';\nimport {MouseButton} from '../../../../../core/MouseButton';\nimport {CursorMoveMonitor} from '../../../../../core/CursorMoveMonitor';\n\ninterface LongPressOptions {\n\tduration: number;\n\tmaxCursorMoveDistance: number;\n\tcallback: () => void;\n}\nexport interface ObjectToLongPressOptions extends ObjectOptions {\n\tlongPress: LongPressOptions;\n\tconfig: ButtonAndModifierOptions;\n}\nexport interface ObjectToLongPressOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\tlongPress: ConvertToStrings<LongPressOptions>;\n\tconfig: ButtonAndModifierOptionsAsString;\n}\nconst _buttonConfig: ButtonConfig = {button: MouseButton.LEFT, ctrl: false, shift: false, alt: false};\nexport const DEFAULT_LONG_PRESS_DURATION = 500;\n\nfunction hasPropertiesWithCursorMoveLessThan(options: ObjectToLongPressOptions[], distance: number) {\n\tfor (const option of options) {\n\t\tif (distance < option.longPress.maxCursorMoveDistance) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nexport const DEFAULT_MAX_CURSOR_MOVE_DISTANCE = 0.05;\n\nexport function LongPressParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param press duration (in milliseconds) */\n\t\tduration = ParamConfig.INTEGER(DEFAULT_LONG_PRESS_DURATION, {\n\t\t\trange: [0, 1000],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t\t/** @param max cursor move distance */\n\t\tmaxCursorMoveDistance = ParamConfig.FLOAT(DEFAULT_MAX_CURSOR_MOVE_DISTANCE, {\n\t\t\trange: [0, 1],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t};\n}\n\nexport class RayObjectIntersectionsLongPressController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToLongPressOptions[]> = new Map();\n\tprotected _intersectedStateOnPointerdownByObject: Map<Object3D, boolean> = new Map();\n\tprotected _intersectedStateOnTimeoutByObject: Map<Object3D, boolean> = new Map();\n\tprivate _objectsMatchingEventConfig: Object3D[] = [];\n\tprotected _objectsByLongPressDuration: Map<number, Object3D[]> = new Map();\n\tprivate _timerByDuration: Map<number, number> = new Map();\n\tprivate _cursorMoveMonitor = new CursorMoveMonitor();\n\n\tprivate _bound = {\n\t\tpointerup: this._onPointerup.bind(this),\n\t\t// pointermove: this._onPointermove.bind(this),\n\t};\n\tonPointerdown(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tif (this._objects.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tfilterObjectsWithMatchButtonConfig(\n\t\t\tevent,\n\t\t\tthis._objects,\n\t\t\tthis._propertiesListByObject,\n\t\t\tthis._objectsMatchingEventConfig\n\t\t);\n\t\tif (this._objectsMatchingEventConfig.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocument.addEventListener('pointerup', this._bound.pointerup);\n\t\t// we also need touchend, as pointerup appears to not be triggered if the cursor has moved a little bit\n\t\tdocument.addEventListener('touchend', this._bound.pointerup);\n\t\tthis._cursorMoveMonitor.addPointermoveEventListener(\n\t\t\tthis._scene.eventsDispatcher.pointerEventsController.cursor()\n\t\t);\n\n\t\tthis._objectsByLongPressDuration.clear();\n\t\tthis._timerByDuration.clear();\n\t\tthis._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnPointerdownByObject);\n\n\t\tconst _groupIntersectedObjectsByDuration = () => {\n\t\t\tconst objects = this._objects;\n\n\t\t\tfor (const object of objects) {\n\t\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\t\tif (propertiesList) {\n\t\t\t\t\tconst isIntersecting = this._intersectedStateOnPointerdownByObject.get(object);\n\t\t\t\t\tif (isIntersecting == true) {\n\t\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\t\tpushOnArrayAtEntry(this._objectsByLongPressDuration, properties.longPress.duration, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t_groupIntersectedObjectsByDuration();\n\t\tbuttonConfigFromEvent(event, _buttonConfig);\n\n\t\tthis._objectsByLongPressDuration.forEach((objects, duration) => {\n\t\t\tconst wrappedTriggeredMethod = () => {\n\t\t\t\tconst movedCursorDistance = this._cursorMoveMonitor.movedCursorDistance();\n\t\t\t\tthis._timerByDuration.delete(duration);\n\t\t\t\tthis._setIntersectedState(this._objects, this._intersectedStateOnTimeoutByObject);\n\n\t\t\t\tfor (const object of objects) {\n\t\t\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\t\t\tif (propertiesList && hasPropertiesWithCursorMoveLessThan(propertiesList, movedCursorDistance)) {\n\t\t\t\t\t\tconst isIntersecting = this._intersectedStateOnTimeoutByObject.get(object);\n\t\t\t\t\t\tif (isIntersecting) {\n\t\t\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tmovedCursorDistance < properties.longPress.maxCursorMoveDistance &&\n\t\t\t\t\t\t\t\t\tpropertyMatchesButtonConfig(properties.config, _buttonConfig)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tproperties.longPress.callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst timer = setTimeout(wrappedTriggeredMethod, duration) as any as number;\n\n\t\t\tthis._timerByDuration.set(duration, timer);\n\t\t});\n\t}\n\n\tprivate _onPointerup() {\n\t\tdocument.removeEventListener('pointerup', this._bound.pointerup);\n\t\tdocument.removeEventListener('touchend', this._bound.pointerup);\n\t\tthis._cursorMoveMonitor.removeEventListener();\n\t\tthis._timerByDuration.forEach((timer, duration) => {\n\t\t\tclearTimeout(timer);\n\t\t});\n\t\tthis._timerByDuration.clear();\n\t}\n}\n","import {Object3D, Vector2} from 'three';\nimport {Constructor, ConvertToStrings} from '../../../../../types/GlobalTypes';\nimport {radToDeg} from '../../../../../core/math/_Module';\nimport {BaseRayObjectIntersectionsController} from './_BaseRayObjectIntersectionsController';\nimport {\n\tObjectOptions,\n\tGPUOptions,\n\tCPUOptions,\n\tPriorityOptions,\n\tfilterObjectsWithMatchButtonConfig,\n\tButtonAndModifierOptions,\n\tButtonAndModifierOptionsAsString,\n\tButtonConfig,\n\tbuttonConfigFromEvent,\n\tpropertyMatchesButtonConfig,\n} from './Common';\nimport {ParamConfig} from '../../../../nodes/utils/params/ParamsConfig';\nimport {MouseButton} from '../../../../../core/MouseButton';\n\ninterface SwipeOptions {\n\tangle: number;\n\tangleMargin: number;\n\tminDistance: number;\n\tcallback: () => void;\n}\nexport interface ObjectToSwipeOptions extends ObjectOptions {\n\tswipe: SwipeOptions;\n\tconfig: ButtonAndModifierOptions;\n}\nexport interface ObjectToSwipeOptionsAsString {\n\tpriority: ConvertToStrings<PriorityOptions>;\n\tcpu?: ConvertToStrings<CPUOptions>;\n\tgpu?: ConvertToStrings<GPUOptions>;\n\tswipe: ConvertToStrings<SwipeOptions>;\n\tconfig: ButtonAndModifierOptionsAsString;\n}\n\nconst _tmp = new Vector2();\nconst _buttonConfig: ButtonConfig = {button: MouseButton.LEFT, ctrl: false, shift: false, alt: false};\nfunction degAngle(radians: number) {\n\tif (radians > Math.PI) {\n\t\tradians -= Math.PI * 2;\n\t}\n\treturn radToDeg(radians);\n}\nexport const ANGLE_DEGREES = {\n\tLEFT: degAngle(_tmp.set(-1, 0).angle()),\n\tRIGHT: degAngle(_tmp.set(1, 0).angle()),\n\tUP: degAngle(_tmp.set(0, 1).angle()),\n\tDOWN: degAngle(_tmp.set(0, -1).angle()),\n};\nconst DEFAULT_MIN_CURSOR_MOVE_DISTANCE = 0.05;\n\nexport function SwipeParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t/** @param angle */\n\t\tangle = ParamConfig.FLOAT(0, {\n\t\t\trange: [-180, 180],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t\t/** @param angle margin */\n\t\tangleMargin = ParamConfig.FLOAT(45, {\n\t\t\trange: [0, 180],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t\t/** @param min distance */\n\t\tminDistance = ParamConfig.FLOAT(DEFAULT_MIN_CURSOR_MOVE_DISTANCE, {\n\t\t\trange: [0, 1],\n\t\t\trangeLocked: [true, false],\n\t\t});\n\t};\n}\n\nfunction optionsContainsAngle(options: SwipeOptions, angle: number) {\n\treturn angle >= options.angle - options.angleMargin && angle <= options.angle + options.angleMargin;\n}\nconst _cursorDelta = new Vector2();\nexport class RayObjectIntersectionsSwipeController extends BaseRayObjectIntersectionsController {\n\tprotected override _propertiesListByObject: Map<Object3D, ObjectToSwipeOptions[]> = new Map();\n\tprotected _intersectedStateOnPointerdownByObject: Map<Object3D, boolean> = new Map();\n\tprotected _intersectedStateOnPointerupByObject: Map<Object3D, boolean> = new Map();\n\tprivate _objectsMatchingEventConfig: Object3D[] = [];\n\tprivate _objectsIntersectedOnPointerdown: Object3D[] = [];\n\tprivate _cursorOnPointerdown = new Vector2();\n\tprivate _cursorOnPointerup = new Vector2();\n\tprivate _pointerdownEvent: Readonly<PointerEvent | MouseEvent | TouchEvent> | undefined;\n\n\tprivate _bound = {\n\t\tpointerup: this._onPointerup.bind(this),\n\t};\n\tonPointerdown(event: Readonly<PointerEvent | MouseEvent | TouchEvent>) {\n\t\tthis._pointerdownEvent = event;\n\t\tif (this._objects.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tfilterObjectsWithMatchButtonConfig(\n\t\t\tevent,\n\t\t\tthis._objects,\n\t\t\tthis._propertiesListByObject,\n\t\t\tthis._objectsMatchingEventConfig\n\t\t);\n\t\tif (this._objectsMatchingEventConfig.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocument.addEventListener('pointerup', this._bound.pointerup);\n\t\t// we also need touchend, as pointerup appears to not be triggered once the cursor has moved\n\t\tdocument.addEventListener('touchend', this._bound.pointerup);\n\t\tthis._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnPointerdownByObject);\n\t\tthis._getCursor(this._cursorOnPointerdown);\n\t}\n\tprivate _onPointerup(_event: Event) {\n\t\tdocument.removeEventListener('pointerup', this._bound.pointerup);\n\t\tdocument.removeEventListener('touchend', this._bound.pointerup);\n\t\tconst event = this._pointerdownEvent;\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pointerdownEvent = undefined;\n\n\t\tconst objects = this._objects;\n\t\tthis._objectsIntersectedOnPointerdown.length = 0;\n\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tconst isIntersectingOnPointerdown = this._intersectedStateOnPointerdownByObject.get(object);\n\t\t\t\tif (isIntersectingOnPointerdown) {\n\t\t\t\t\tthis._objectsIntersectedOnPointerdown.push(object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// I've considered using only the objects intersected in pointerdown for the pointerup detection,\n\t\t// but that prevents missed objects from occluding others if they are in front.\n\t\t// We therefore need to run the detection on all objects\n\t\t// instead, we can still optimise by not detecting anything if that list is empty\n\t\tif (this._objectsIntersectedOnPointerdown.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// check swipe angle\n\t\tthis._getCursor(this._cursorOnPointerup);\n\t\t_cursorDelta.copy(this._cursorOnPointerup).sub(this._cursorOnPointerdown);\n\t\tlet radians = _cursorDelta.angle();\n\t\tconst degrees = degAngle(radians);\n\t\tconst distance = _cursorDelta.manhattanLength();\n\n\t\t//\n\t\tthis._setIntersectedState(objects, this._intersectedStateOnPointerupByObject);\n\t\tbuttonConfigFromEvent(event, _buttonConfig);\n\t\tconst objectsIntersectedOnPointerdown = this._objectsIntersectedOnPointerdown;\n\t\tfor (const object of objectsIntersectedOnPointerdown) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tconst isIntersectingOnPointerup = this._intersectedStateOnPointerupByObject.get(object);\n\t\t\t\tif (isIntersectingOnPointerup == true) {\n\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdistance > properties.swipe.minDistance &&\n\t\t\t\t\t\t\toptionsContainsAngle(properties.swipe, degrees) &&\n\t\t\t\t\t\t\tpropertyMatchesButtonConfig(properties.config, _buttonConfig)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tproperties.swipe.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _getCursor(target: Vector2) {\n\t\tconst pointerEventsController = this._scene.eventsDispatcher.pointerEventsController;\n\t\tconst cursor = pointerEventsController.cursor().value;\n\t\ttarget.copy(cursor);\n\t}\n}\n","import {ref} from '@vue/reactivity';\nimport {PolyScene} from '../../../PolyScene';\nimport {ActorsManager} from '../../ActorsManager';\nimport {Object3D, Intersection, Vector2, Vector3, Vector4, PerspectiveCamera, OrthographicCamera} from 'three';\nimport type {RaycasterUpdateOptions} from '../../events/PointerEventsController';\nimport {ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT} from '../../../../../core/actor/ActorCompilationController';\nimport {RenderPixelController, coreCursorToUv} from '../../../../../core/render/renderPixel/RenderPixelController';\nimport {coreGetDefaultCamera} from '../../../../../core/render/renderPixel/CoreGetDefautCamera';\nimport {pushOnArrayAtEntry} from '../../../../../core/MapUtils';\nimport {\n\tCPUOptions,\n\tObjectOptions,\n\thasCPUOptions,\n\thasGPUOptions,\n\tCPUOptionsEqual,\n\tCPUOptionsMax,\n\tGPUOptionsDepthBufferRequired,\n} from './Common';\n\nconst RAYCAST_UPDATE_OPTIONS: RaycasterUpdateOptions = {\n\tpointsThreshold: 0.1,\n\tlineThreshold: 0.1,\n};\nconst TMP_CPU_OPTIONS: CPUOptions = {\n\ttraverseChildren: false,\n\tpointsThreshold: 0.1,\n\tlineThreshold: 0.1,\n\tintersectionRef: ref(null),\n};\n\nfunction intersectsSort(a: CPUOrGPUIntersection, b: CPUOrGPUIntersection) {\n\treturn a.distance - b.distance;\n}\nconst pixelRenderUv = new Vector2();\nconst pixelRenderTarget = new Vector4();\nconst raycasterDirNormalised = new Vector3();\nconst gpuCameraRayAtNearPlane = new Vector3();\nconst gpuCameraRayAtFarPlane = new Vector3();\nconst gpuHitPos = new Vector3();\n\ninterface GPUIntersection {\n\tdistance: number;\n}\ntype CPUOrGPUIntersection = Intersection | GPUIntersection;\n\nexport class BaseRayObjectIntersectionsController {\n\tprotected _scene: PolyScene;\n\tprotected _objects: Object3D[] = [];\n\tprotected _propertiesListByObject: Map<Object3D, ObjectOptions[]> = new Map();\n\tprivate _intersectsByObject: WeakMap<Object3D, Intersection[]> = new WeakMap();\n\tprivate _closestIntersects: Map<Object3D, CPUOrGPUIntersection | undefined> = new Map();\n\tprivate _objectByClosestIntersect: Map<CPUOrGPUIntersection, Object3D> = new Map();\n\tprivate _closestIntersectsSorted: CPUOrGPUIntersection[] = [];\n\tprivate _renderPixelController: RenderPixelController = new RenderPixelController();\n\tconstructor(protected actorsManager: ActorsManager) {\n\t\tthis._scene = actorsManager.scene;\n\t}\n\tprotected _setIntersectedState(objects: Object3D[], intersectedStateByObject: WeakMap<Object3D, boolean>) {\n\t\t// prepare\n\t\tif (objects.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._closestIntersects.clear();\n\t\tthis._objectByClosestIntersect.clear();\n\n\t\t//\n\t\tconst pointerEventsController = this._scene.eventsDispatcher.pointerEventsController;\n\t\tconst raycaster = pointerEventsController.raycaster().value;\n\n\t\tpointerEventsController.updateRaycast(RAYCAST_UPDATE_OPTIONS);\n\n\t\t// prepare gpu options\n\t\tconst gpuObjectsPresent = this._gpuObjectsPresent();\n\t\tconst camera =\n\t\t\tgpuObjectsPresent == true\n\t\t\t\t? (coreGetDefaultCamera(this._scene) as PerspectiveCamera | OrthographicCamera)\n\t\t\t\t: null;\n\t\tif (gpuObjectsPresent == true && camera) {\n\t\t\tconst cursor = pointerEventsController.cursor().value;\n\t\t\tcoreCursorToUv(cursor, pixelRenderUv);\n\n\t\t\tif (this._gpuDepthBufferReadRequired()) {\n\t\t\t\traycasterDirNormalised.copy(raycaster.ray.direction).normalize();\n\t\t\t\tgpuCameraRayAtNearPlane.set(cursor.x, cursor.y, -1).unproject(camera);\n\t\t\t\tgpuCameraRayAtFarPlane.set(cursor.x, cursor.y, 1).unproject(camera);\n\t\t\t}\n\t\t}\n\n\t\t// get intersects\n\t\tfor (const object of objects) {\n\t\t\tintersectedStateByObject.set(object, false /*we reset to false here*/);\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tconst intersects = this._intersectsByObject.get(object);\n\t\t\tif (propertiesList && intersects) {\n\t\t\t\tintersects.length = 0;\n\t\t\t\tif (hasCPUOptions(propertiesList)) {\n\t\t\t\t\tconst cpuOptions = CPUOptionsEqual(propertiesList)\n\t\t\t\t\t\t? propertiesList[0].cpu!\n\t\t\t\t\t\t: CPUOptionsMax(propertiesList, TMP_CPU_OPTIONS);\n\t\t\t\t\tRAYCAST_UPDATE_OPTIONS.pointsThreshold = cpuOptions.pointsThreshold;\n\t\t\t\t\tRAYCAST_UPDATE_OPTIONS.lineThreshold = cpuOptions.lineThreshold;\n\t\t\t\t\traycaster.intersectObject(object, cpuOptions.traverseChildren, intersects);\n\t\t\t\t\tconst closestIntersect = intersects[0];\n\t\t\t\t\tthis._closestIntersects.set(object, closestIntersect);\n\t\t\t\t\tif (closestIntersect) {\n\t\t\t\t\t\tthis._objectByClosestIntersect.set(closestIntersect, object);\n\t\t\t\t\t\t// console.log({object: object.name, distance: closestIntersect.distance});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasGPUOptions(propertiesList)) {\n\t\t\t\t\tconst gpuOptions = propertiesList[0].gpu;\n\t\t\t\t\tif (gpuOptions && camera) {\n\t\t\t\t\t\tconst worldPosMaterial = gpuOptions.worldPosMaterial;\n\t\t\t\t\t\tif (worldPosMaterial != null) {\n\t\t\t\t\t\t\tthis._renderPixelController.renderColor(\n\t\t\t\t\t\t\t\tthis._scene,\n\t\t\t\t\t\t\t\tobject,\n\t\t\t\t\t\t\t\tgpuOptions.worldPosMaterial,\n\t\t\t\t\t\t\t\tcamera,\n\t\t\t\t\t\t\t\tnull, //necessary to have alpha=0 when no object is hit\n\t\t\t\t\t\t\t\tpixelRenderUv,\n\t\t\t\t\t\t\t\tpixelRenderTarget\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._renderPixelController.renderDepth(\n\t\t\t\t\t\t\t\tthis._scene,\n\t\t\t\t\t\t\t\tobject,\n\t\t\t\t\t\t\t\t// gpuOptions.worldPosMaterial,\n\t\t\t\t\t\t\t\tcamera,\n\t\t\t\t\t\t\t\tnull, //necessary to have alpha=0 when no object is hit\n\t\t\t\t\t\t\t\tpixelRenderUv,\n\t\t\t\t\t\t\t\tpixelRenderTarget\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pixelRenderTarget.w > 0 /* pixelRenderTarget.w >= gpuOptions.alphaTest*/) {\n\t\t\t\t\t\t\tif (worldPosMaterial) {\n\t\t\t\t\t\t\t\tgpuHitPos.set(pixelRenderTarget.x, pixelRenderTarget.y, pixelRenderTarget.z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgpuHitPos\n\t\t\t\t\t\t\t\t\t.copy(gpuCameraRayAtNearPlane)\n\t\t\t\t\t\t\t\t\t.lerp(gpuCameraRayAtFarPlane, pixelRenderTarget.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst distance = gpuHitPos.distanceTo(raycaster.ray.origin);\n\t\t\t\t\t\t\tconst gpuIntersect: GPUIntersection = {distance};\n\n\t\t\t\t\t\t\tthis._closestIntersects.set(object, gpuIntersect);\n\t\t\t\t\t\t\tif (gpuIntersect) {\n\t\t\t\t\t\t\t\tthis._objectByClosestIntersect.set(gpuIntersect, object);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._closestIntersects.set(object, undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// sort closest intersects\n\t\tthis._closestIntersectsSorted.length = 0;\n\t\tfor (const object of objects) {\n\t\t\tconst closestIntersect = this._closestIntersects.get(object);\n\t\t\tif (closestIntersect) {\n\t\t\t\tthis._closestIntersectsSorted.push(closestIntersect);\n\t\t\t}\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList) {\n\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\tconst cpuOptions = properties.cpu;\n\t\t\t\t\tif (cpuOptions) {\n\t\t\t\t\t\tcpuOptions.intersectionRef.value = (closestIntersect as Intersection) || null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst gpuOptions = properties.gpu;\n\t\t\t\t\t\tif (gpuOptions) {\n\t\t\t\t\t\t\tgpuOptions.distanceRef.value = closestIntersect ? closestIntersect.distance : -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._closestIntersectsSorted.sort(intersectsSort);\n\n\t\t// process objects in order\n\t\tlet blockingObjectProcessed = false;\n\t\tfor (const intersect of this._closestIntersectsSorted) {\n\t\t\tconst object = this._objectByClosestIntersect.get(intersect);\n\t\t\tif (object) {\n\t\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\t\tif (propertiesList) {\n\t\t\t\t\tlet blockObjectsBehind = false;\n\t\t\t\t\tfor (const properties of propertiesList) {\n\t\t\t\t\t\tif (blockingObjectProcessed == false || properties.priority.skipIfObjectsInFront == true) {\n\t\t\t\t\t\t\tintersectedStateByObject.set(object, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (properties.priority.blockObjectsBehind == true) {\n\t\t\t\t\t\t\tblockObjectsBehind = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tblockingObjectProcessed = blockObjectsBehind;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// reset\n\t\tthis._objectByClosestIntersect.clear();\n\t}\n\t// protected _postProcess() {\n\t// \tthis._objectByClosestIntersect.clear();\n\t// }\n\tprivate _gpuObjectsPresent(): boolean {\n\t\tconst objects = this._objects;\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList && hasGPUOptions(propertiesList)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tprivate _gpuDepthBufferReadRequired(): boolean {\n\t\tconst objects = this._objects;\n\t\tfor (const object of objects) {\n\t\t\tconst propertiesList = this._propertiesListByObject.get(object);\n\t\t\tif (propertiesList && GPUOptionsDepthBufferRequired(propertiesList)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\taddPropertiesForObject(object: Object3D, properties: ObjectOptions) {\n\t\tif (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n\t\t\treturn;\n\t\t}\n\t\tpushOnArrayAtEntry(this._propertiesListByObject, object, properties);\n\n\t\tconst index = this._objects.indexOf(object);\n\t\tif (index < 0) {\n\t\t\tthis._objects.push(object);\n\t\t\tthis._intersectsByObject.set(object, []);\n\t\t}\n\t}\n\tremovePropertiesForObject(object: Object3D, properties: ObjectOptions) {\n\t\tif (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst propertiesForObject = this._propertiesListByObject.get(object);\n\t\tif (propertiesForObject) {\n\t\t\tconst propertyIndex = propertiesForObject.indexOf(properties);\n\t\t\tpropertiesForObject.splice(propertyIndex, 1);\n\n\t\t\tif (propertiesForObject.length == 0) {\n\t\t\t\tconst objectIndex = this._objects.indexOf(object);\n\t\t\t\tif (objectIndex >= 0) {\n\t\t\t\t\tthis._objects.splice(objectIndex, 1);\n\t\t\t\t\tthis._intersectsByObject.delete(object);\n\t\t\t\t\tthis._propertiesListByObject.delete(object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {MapUtils} from '../../../../core/MapUtils';\nimport {BaseEventNodeType} from '../../../nodes/event/_Base';\nimport {PolyEventName} from '../../../poly/utils/PolyEventName';\nimport {EventContext} from './_BaseEventsController';\n\n// export enum PolySceneEventType {\n// \tLOADED = 'sceneLoaded',\n// \tPLAY = 'play',\n// \tPAUSE = 'pause',\n// \t// TICK = 'tick',\n// }\n\nexport class PolySceneEvent extends Event {\n\tconstructor(type: PolyEventName) {\n\t\tsuper(type);\n\t}\n\toverride get type(): PolyEventName {\n\t\treturn super.type as PolyEventName;\n\t}\n}\nexport const SCENE_EVENT_CREATED_EVENT_CONTEXT: EventContext<PolySceneEvent> = {\n\tevent: new PolySceneEvent(PolyEventName.SCENE_CREATED),\n};\nexport const SCENE_EVENT_READY_EVENT_CONTEXT: EventContext<PolySceneEvent> = {\n\tevent: new PolySceneEvent(PolyEventName.SCENE_READY),\n};\nexport const SCENE_EVENT_PLAY_EVENT_CONTEXT: EventContext<PolySceneEvent> = {\n\tevent: new PolySceneEvent(PolyEventName.SCENE_PLAY),\n};\nexport const SCENE_EVENT_PAUSE_EVENT_CONTEXT: EventContext<PolySceneEvent> = {\n\tevent: new PolySceneEvent(PolyEventName.SCENE_PAUSE),\n};\n// export const SCENE_EVENT_TICK_EVENT_CONTEXT: EventContext<SceneEvent> = {event: new SceneEvent(SceneEventType.TICK)};\n\nexport class SceneEventsController {\n\tdispatch<T extends PolyEventName>(eventContext: EventContext<PolySceneEvent>) {\n\t\tconst event = eventContext.event;\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tconst set = this._observersByEventType.get(event.type);\n\t\tif (!set) {\n\t\t\treturn;\n\t\t}\n\t\tset.forEach((node) => {\n\t\t\tnode.processEvent(eventContext);\n\t\t});\n\t}\n\n\tprivate _observersByEventType: Map<PolyEventName, Set<BaseEventNodeType>> = new Map();\n\tremoveObserverFromAllEventTypes(eventNode: BaseEventNodeType) {\n\t\tthis._observersByEventType.forEach((nodes, eventType) => {\n\t\t\tnodes.delete(eventNode);\n\t\t});\n\t}\n\taddObserver(eventNode: BaseEventNodeType, eventType: PolyEventName) {\n\t\tMapUtils.addToSetAtEntry(this._observersByEventType, eventType, eventNode);\n\t}\n}\n","// src/index.ts\nimport { ReactiveEffect, isReactive, isRef, isShallow } from \"@vue/reactivity\";\nimport { NOOP, hasChanged, isArray, isFunction as isFunction2, isObject } from \"@vue/shared\";\n\n// src/errorHandling.ts\nimport { isFunction, isPromise } from \"@vue/shared\";\nfunction callWithErrorHandling(fn, type, args) {\n  let res;\n  try {\n    res = args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, type);\n  }\n  return res;\n}\nfunction callWithAsyncErrorHandling(fn, type, args) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, type, args);\n    if (res && isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, type);\n      });\n    }\n    return res;\n  }\n  const values = [];\n  for (let i = 0; i < fn.length; i++)\n    values.push(callWithAsyncErrorHandling(fn[i], type, args));\n  return values;\n}\nfunction handleError(err, type) {\n  console.error(new Error(`[@vue-reactivity/watch]: ${type}`));\n  console.error(err);\n}\nfunction warn(message) {\n  console.warn(createError(message));\n}\nfunction createError(message) {\n  return new Error(`[reactivue]: ${message}`);\n}\n\n// src/index.ts\nvar INITIAL_WATCHER_VALUE = {};\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watch(source, cb, options) {\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, { immediate, deep, flush } = {}) {\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow(source);\n  } else if (isReactive(source)) {\n    getter = () => source;\n    deep = true;\n  } else if (isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some(isReactive);\n    getter = () => source.map((s) => {\n      if (isRef(s))\n        return s.value;\n      else if (isReactive(s))\n        return traverse(s);\n      else if (isFunction2(s))\n        return callWithErrorHandling(s, \"watch getter\");\n      else\n        return warn(\"invalid source\");\n    });\n  } else if (isFunction2(source)) {\n    if (cb) {\n      getter = () => callWithErrorHandling(source, \"watch getter\");\n    } else {\n      getter = () => {\n        if (cleanup)\n          cleanup();\n        return callWithAsyncErrorHandling(source, \"watch callback\", [onCleanup]);\n      };\n    }\n  } else {\n    getter = NOOP;\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    getter = () => traverse(baseGetter());\n  }\n  let cleanup;\n  let onCleanup = (fn) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, \"watch cleanup\");\n    };\n  };\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\n  const job = () => {\n    if (!effect.active)\n      return;\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => hasChanged(v, oldValue[i])) : hasChanged(newValue, oldValue))) {\n        if (cleanup)\n          cleanup();\n        callWithAsyncErrorHandling(cb, \"watch value\", [\n          newValue,\n          oldValue === INITIAL_WATCHER_VALUE ? void 0 : oldValue,\n          onCleanup\n        ]);\n        oldValue = newValue;\n      }\n    } else {\n      effect.run();\n    }\n  };\n  job.allowRecurse = !!cb;\n  let scheduler;\n  if (flush === \"sync\") {\n    scheduler = job;\n  } else {\n    scheduler = () => {\n      job();\n    };\n  }\n  const effect = new ReactiveEffect(getter, scheduler);\n  if (cb) {\n    if (immediate)\n      job();\n    else\n      oldValue = effect.run();\n  } else {\n    effect.run();\n  }\n  return () => effect.stop();\n}\nfunction traverse(value, seen = /* @__PURE__ */ new Set()) {\n  if (!isObject(value) || seen.has(value))\n    return value;\n  seen.add(value);\n  if (isArray(value)) {\n    for (let i = 0; i < value.length; i++)\n      traverse(value[i], seen);\n  } else if (value instanceof Map) {\n    value.forEach((_, key) => {\n      traverse(value.get(key), seen);\n    });\n  } else if (value instanceof Set) {\n    value.forEach((v) => {\n      traverse(v, seen);\n    });\n  } else {\n    for (const key of Object.keys(value))\n      traverse(value[key], seen);\n  }\n  return value;\n}\nexport {\n  watch,\n  watchEffect\n};\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * @param  {Array<BufferGeometry>} geometries\n * @param  {Boolean} useGroups\n * @return {BufferGeometry}\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {BufferAttribute}\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet gpuType = - 1;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( gpuType === - 1 ) gpuType = attribute.gpuType;\n\t\tif ( gpuType !== attribute.gpuType ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tarray.set( attributes[ i ].array, offset );\n\n\t\toffset += attributes[ i ].array.length;\n\n\t}\n\n\tconst result = new BufferAttribute( array, itemSize, normalized );\n\tif ( gpuType !== undefined ) {\n\n\t\tresult.gpuType = gpuType;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferAttribute}\n * @return {BufferAttribute}\n */\nexport function deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {Array<InterleavedBufferAttribute>}\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// returns a new, non-interleaved version of the provided attribute\nexport function deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n// deinterleaves all attributes on the geometry\nexport function deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @return {number}\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} tolerance\n * @return {BufferGeometry}\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new BufferAttribute(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\tif ( morphAttr ) {\n\n\t\t\ttmpMorphAttributes[ name ] = new BufferAttribute(\n\t\t\t\tnew morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize ),\n\t\t\t\tmorphAttr.itemSize,\n\t\t\t\tmorphAttr.normalized\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst halfTolerance = tolerance * 0.5;\n\tconst exponent = Math.log10( 1 / tolerance );\n\tconst hashMultiplier = Math.pow( 10, exponent );\n\tconst hashAdditive = halfTolerance * hashMultiplier;\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * hashMultiplier + hashAdditive ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newarray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewarray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new BufferAttribute(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new BufferAttribute(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} drawMode\n * @return {BufferGeometry}\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n * Helpful for Raytracing or Decals.\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n * @return {Object} An Object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry\n * @param {number} [creaseAngle]\n * @return {BufferGeometry}\n */\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vectors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\t// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n\t// and returns the original geometry\n\tconst resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nfunction mergeBufferGeometries( geometries, useGroups = false ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries().' ); // @deprecated, r151\n\treturn mergeGeometries( geometries, useGroups );\n\n}\n\nfunction mergeBufferAttributes( attributes ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferAttributes() has been renamed to mergeAttributes().' ); // @deprecated, r151\n\treturn mergeAttributes( attributes );\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeBufferGeometries,\n\tmergeAttributes,\n\tmergeBufferAttributes,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","const _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n\tnormalize,\n\tdenormalize,\n\tMathUtils\n};\n"],"names":[],"sourceRoot":""}