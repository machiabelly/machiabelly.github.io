"use strict";
import { PlayerCollisionController } from "./collisions/PlayerCollisionsController";
import { EventDispatcher } from "three";
export class BaseCollisionHandler extends EventDispatcher {
  setCheckCollisions(collisionObject) {
    if (collisionObject) {
      let objectWithGeo;
      collisionObject.traverse((child) => {
        if (!objectWithGeo) {
          const mesh = child;
          if (mesh.geometry) {
            objectWithGeo = mesh;
          }
        }
      });
      if (objectWithGeo) {
        this._playerCollisionController = new PlayerCollisionController(objectWithGeo);
      } else {
        console.error("no geo found in", collisionObject);
      }
    } else {
      this._playerCollisionController = void 0;
    }
  }
  setCollisionCapsule(capsule) {
    var _a;
    (_a = this._playerCollisionController) == null ? void 0 : _a.setCapsule(capsule);
  }
  setJumpParams(params) {
  }
  setGravity(gravity) {
  }
  setPlayerMass(mass) {
  }
}
