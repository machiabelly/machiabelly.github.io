declare const Q: 15;
declare const q: 2;
declare const J: 14;
declare const Y: 1;
declare const R: 0;
declare const G: 13;
declare const p: 1;
declare const _: 0;
declare const s: 0;
declare const c: 162;
declare const f: 160;
declare const h: 163;
declare const U: 161;
declare const l: 1;
declare const o: 0;
declare const W: 6;
declare const N: 7;
declare const j: 11;
declare const z: 4;
declare const P: 2;
declare const C: 3;
declare const F: 1;
declare const M: 5;
declare const X: 10;
declare const H: 8;
declare const K: 9;
declare const E: 0;
declare const tt: 32;
declare const Z: 128;
declare const et: 16;
declare const $: 64;
declare const O: 16;
declare const T: 17;
declare const V: 18;
declare const w: 7;
declare const k: 12;
declare const B: 9;
declare const D: 8;
declare const u: 3;
declare const y: 1;
declare const b: 4;
declare const S: 14;
declare const v: 13;
declare const L: 10;
declare const A: 11;
declare const d: 5;
declare const m: 6;
declare const x: 2;
declare const I: 15;
declare const g: 0;
declare const a: 0;
declare const r: 2;
declare const e: 1;
declare const t: 0;
declare const i: 3;
declare const n: 2;
declare class Si {
    vkFormat: number;
    typeSize: number;
    pixelWidth: number;
    pixelHeight: number;
    pixelDepth: number;
    layerCount: number;
    faceCount: number;
    supercompressionScheme: number;
    levels: any[];
    dataFormatDescriptor: {
        vendorId: number;
        descriptorType: number;
        descriptorBlockSize: number;
        versionNumber: number;
        colorModel: number;
        colorPrimaries: number;
        transferFunction: number;
        flags: number;
        texelBlockDimension: number[];
        bytesPlane: number[];
        samples: never[];
    }[];
    keyValue: {};
    globalData: any;
}
declare const Ut: 8;
declare const qt: 69;
declare const Rt: 65;
declare const Yt: 68;
declare const jt: 64;
declare const Xt: 63;
declare const Ht: 59;
declare const Kt: 62;
declare const Nt: 58;
declare const vi: 1000340001;
declare const ki: 1000340000;
declare const Bi: 1000066011;
declare const Xn: 180;
declare const Kn: 179;
declare const mi: 1000066008;
declare const zn: 174;
declare const Cn: 173;
declare const wi: 1000066009;
declare const Wn: 176;
declare const Mn: 175;
declare const Di: 1000066010;
declare const Hn: 178;
declare const Nn: 177;
declare const Li: 1000066012;
declare const Rn: 182;
declare const jn: 181;
declare const Ai: 1000066013;
declare const qn: 184;
declare const Yn: 183;
declare const _i: 1000066000;
declare const wn: 158;
declare const mn: 157;
declare const pi: 1000066001;
declare const Bn: 160;
declare const Dn: 159;
declare const gi: 1000066002;
declare const An: 162;
declare const Ln: 161;
declare const yi: 1000066003;
declare const vn: 164;
declare const kn: 163;
declare const xi: 1000066004;
declare const In: 166;
declare const Sn: 165;
declare const ui: 1000066005;
declare const Tn: 168;
declare const On: 167;
declare const bi: 1000066006;
declare const En: 170;
declare const Vn: 169;
declare const di: 1000066007;
declare const Pn: 172;
declare const Fn: 171;
declare const Me: 122;
declare const $n: 1000156011;
declare const si: 1000156021;
declare const at: 3;
declare const ft: 7;
declare const ot: 5;
declare const Mt: 49;
declare const Ct: 45;
declare const Wt: 50;
declare const zt: 48;
declare const Pt: 44;
declare const St: 35;
declare const kt: 31;
declare const It: 36;
declare const vt: 34;
declare const At: 30;
declare const Qe: 134;
declare const Je: 133;
declare const Ge: 132;
declare const qe: 131;
declare const $e: 136;
declare const Ze: 135;
declare const en: 138;
declare const tn: 137;
declare const sn: 140;
declare const nn: 139;
declare const rn: 142;
declare const an: 141;
declare const ln: 144;
declare const on: 143;
declare const Un: 146;
declare const fn: 145;
declare const Ne: 124;
declare const je: 128;
declare const Re: 129;
declare const Ke: 126;
declare const Ye: 130;
declare const We: 123;
declare const dn: 156;
declare const bn: 155;
declare const un: 154;
declare const xn: 153;
declare const pn: 150;
declare const _n: 149;
declare const yn: 152;
declare const gn: 151;
declare const hn: 148;
declare const cn: 147;
declare const Zn: 1000156010;
declare const ii: 1000156020;
declare const fi: 1000054004;
declare const ai: 1000054000;
declare const Ui: 1000054005;
declare const ri: 1000054001;
declare const ci: 1000054006;
declare const oi: 1000054002;
declare const hi: 1000054007;
declare const li: 1000054003;
declare const Qn: 1000156009;
declare const Jn: 1000156008;
declare const Gn: 1000156007;
declare const ni: 1000156019;
declare const ei: 1000156018;
declare const ti: 1000156017;
declare const pe: 97;
declare const _e: 96;
declare const ce: 92;
declare const he: 95;
declare const Ue: 91;
declare const fe: 90;
declare const le: 89;
declare const re: 85;
declare const oe: 88;
declare const ae: 84;
declare const se: 83;
declare const ie: 82;
declare const ee: 78;
declare const ne: 81;
declare const te: 77;
declare const $t: 76;
declare const Zt: 75;
declare const Jt: 71;
declare const Qt: 74;
declare const Gt: 70;
declare const Ae: 109;
declare const Le: 108;
declare const Be: 107;
declare const De: 106;
declare const we: 105;
declare const me: 104;
declare const de: 103;
declare const be: 102;
declare const ue: 101;
declare const xe: 100;
declare const ye: 99;
declare const ge: 98;
declare const st: 2;
declare const it: 1;
declare const lt: 6;
declare const rt: 4;
declare const ze: 121;
declare const Ce: 120;
declare const Pe: 119;
declare const Fe: 118;
declare const Ee: 117;
declare const Ve: 116;
declare const Te: 115;
declare const Oe: 114;
declare const Ie: 113;
declare const Se: 112;
declare const ve: 111;
declare const ke: 110;
declare const Et: 42;
declare const Tt: 38;
declare const Ft: 43;
declare const Vt: 41;
declare const Ot: 37;
declare const Bt: 28;
declare const wt: 24;
declare const Lt: 29;
declare const Dt: 27;
declare const mt: 23;
declare const bt: 21;
declare const xt: 17;
declare const dt: 22;
declare const ut: 20;
declare const yt: 16;
declare const pt: 14;
declare const ht: 10;
declare const gt: 15;
declare const _t: 13;
declare const ct: 9;
declare const Xe: 127;
declare const nt: 0;
declare const He: 125;
declare function Pi(t: any): Si;
declare function Mi(t: any, e?: {}): Uint8Array;
export { Q as KHR_DF_CHANNEL_RGBSDA_ALPHA, q as KHR_DF_CHANNEL_RGBSDA_BLUE, J as KHR_DF_CHANNEL_RGBSDA_DEPTH, Y as KHR_DF_CHANNEL_RGBSDA_GREEN, R as KHR_DF_CHANNEL_RGBSDA_RED, G as KHR_DF_CHANNEL_RGBSDA_STENCIL, p as KHR_DF_FLAG_ALPHA_PREMULTIPLIED, _ as KHR_DF_FLAG_ALPHA_STRAIGHT, s as KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT, c as KHR_DF_MODEL_ASTC, f as KHR_DF_MODEL_ETC1, h as KHR_DF_MODEL_ETC1S, U as KHR_DF_MODEL_ETC2, l as KHR_DF_MODEL_RGBSDA, o as KHR_DF_MODEL_UNSPECIFIED, W as KHR_DF_PRIMARIES_ACES, N as KHR_DF_PRIMARIES_ACESCC, j as KHR_DF_PRIMARIES_ADOBERGB, z as KHR_DF_PRIMARIES_BT2020, P as KHR_DF_PRIMARIES_BT601_EBU, C as KHR_DF_PRIMARIES_BT601_SMPTE, F as KHR_DF_PRIMARIES_BT709, M as KHR_DF_PRIMARIES_CIEXYZ, X as KHR_DF_PRIMARIES_DISPLAYP3, H as KHR_DF_PRIMARIES_NTSC1953, K as KHR_DF_PRIMARIES_PAL525, E as KHR_DF_PRIMARIES_UNSPECIFIED, tt as KHR_DF_SAMPLE_DATATYPE_EXPONENT, Z as KHR_DF_SAMPLE_DATATYPE_FLOAT, et as KHR_DF_SAMPLE_DATATYPE_LINEAR, $ as KHR_DF_SAMPLE_DATATYPE_SIGNED, O as KHR_DF_TRANSFER_ACESCC, T as KHR_DF_TRANSFER_ACESCCT, V as KHR_DF_TRANSFER_ADOBERGB, w as KHR_DF_TRANSFER_BT1886, k as KHR_DF_TRANSFER_DCIP3, B as KHR_DF_TRANSFER_HLG_EOTF, D as KHR_DF_TRANSFER_HLG_OETF, u as KHR_DF_TRANSFER_ITU, y as KHR_DF_TRANSFER_LINEAR, b as KHR_DF_TRANSFER_NTSC, S as KHR_DF_TRANSFER_PAL625_EOTF, v as KHR_DF_TRANSFER_PAL_OETF, L as KHR_DF_TRANSFER_PQ_EOTF, A as KHR_DF_TRANSFER_PQ_OETF, d as KHR_DF_TRANSFER_SLOG, m as KHR_DF_TRANSFER_SLOG2, x as KHR_DF_TRANSFER_SRGB, I as KHR_DF_TRANSFER_ST240, g as KHR_DF_TRANSFER_UNSPECIFIED, a as KHR_DF_VENDORID_KHRONOS, r as KHR_DF_VERSION, e as KHR_SUPERCOMPRESSION_BASISLZ, t as KHR_SUPERCOMPRESSION_NONE, i as KHR_SUPERCOMPRESSION_ZLIB, n as KHR_SUPERCOMPRESSION_ZSTD, Si as KTX2Container, Ut as VK_FORMAT_A1R5G5B5_UNORM_PACK16, qt as VK_FORMAT_A2B10G10R10_SINT_PACK32, Rt as VK_FORMAT_A2B10G10R10_SNORM_PACK32, Yt as VK_FORMAT_A2B10G10R10_UINT_PACK32, jt as VK_FORMAT_A2B10G10R10_UNORM_PACK32, Xt as VK_FORMAT_A2R10G10B10_SINT_PACK32, Ht as VK_FORMAT_A2R10G10B10_SNORM_PACK32, Kt as VK_FORMAT_A2R10G10B10_UINT_PACK32, Nt as VK_FORMAT_A2R10G10B10_UNORM_PACK32, vi as VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT, ki as VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT, Bi as VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT, Xn as VK_FORMAT_ASTC_10x10_SRGB_BLOCK, Kn as VK_FORMAT_ASTC_10x10_UNORM_BLOCK, mi as VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT, zn as VK_FORMAT_ASTC_10x5_SRGB_BLOCK, Cn as VK_FORMAT_ASTC_10x5_UNORM_BLOCK, wi as VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT, Wn as VK_FORMAT_ASTC_10x6_SRGB_BLOCK, Mn as VK_FORMAT_ASTC_10x6_UNORM_BLOCK, Di as VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT, Hn as VK_FORMAT_ASTC_10x8_SRGB_BLOCK, Nn as VK_FORMAT_ASTC_10x8_UNORM_BLOCK, Li as VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT, Rn as VK_FORMAT_ASTC_12x10_SRGB_BLOCK, jn as VK_FORMAT_ASTC_12x10_UNORM_BLOCK, Ai as VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT, qn as VK_FORMAT_ASTC_12x12_SRGB_BLOCK, Yn as VK_FORMAT_ASTC_12x12_UNORM_BLOCK, _i as VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT, wn as VK_FORMAT_ASTC_4x4_SRGB_BLOCK, mn as VK_FORMAT_ASTC_4x4_UNORM_BLOCK, pi as VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT, Bn as VK_FORMAT_ASTC_5x4_SRGB_BLOCK, Dn as VK_FORMAT_ASTC_5x4_UNORM_BLOCK, gi as VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT, An as VK_FORMAT_ASTC_5x5_SRGB_BLOCK, Ln as VK_FORMAT_ASTC_5x5_UNORM_BLOCK, yi as VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT, vn as VK_FORMAT_ASTC_6x5_SRGB_BLOCK, kn as VK_FORMAT_ASTC_6x5_UNORM_BLOCK, xi as VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT, In as VK_FORMAT_ASTC_6x6_SRGB_BLOCK, Sn as VK_FORMAT_ASTC_6x6_UNORM_BLOCK, ui as VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT, Tn as VK_FORMAT_ASTC_8x5_SRGB_BLOCK, On as VK_FORMAT_ASTC_8x5_UNORM_BLOCK, bi as VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT, En as VK_FORMAT_ASTC_8x6_SRGB_BLOCK, Vn as VK_FORMAT_ASTC_8x6_UNORM_BLOCK, di as VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT, Pn as VK_FORMAT_ASTC_8x8_SRGB_BLOCK, Fn as VK_FORMAT_ASTC_8x8_UNORM_BLOCK, Me as VK_FORMAT_B10G11R11_UFLOAT_PACK32, $n as VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16, si as VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16, at as VK_FORMAT_B4G4R4A4_UNORM_PACK16, ft as VK_FORMAT_B5G5R5A1_UNORM_PACK16, ot as VK_FORMAT_B5G6R5_UNORM_PACK16, Mt as VK_FORMAT_B8G8R8A8_SINT, Ct as VK_FORMAT_B8G8R8A8_SNORM, Wt as VK_FORMAT_B8G8R8A8_SRGB, zt as VK_FORMAT_B8G8R8A8_UINT, Pt as VK_FORMAT_B8G8R8A8_UNORM, St as VK_FORMAT_B8G8R8_SINT, kt as VK_FORMAT_B8G8R8_SNORM, It as VK_FORMAT_B8G8R8_SRGB, vt as VK_FORMAT_B8G8R8_UINT, At as VK_FORMAT_B8G8R8_UNORM, Qe as VK_FORMAT_BC1_RGBA_SRGB_BLOCK, Je as VK_FORMAT_BC1_RGBA_UNORM_BLOCK, Ge as VK_FORMAT_BC1_RGB_SRGB_BLOCK, qe as VK_FORMAT_BC1_RGB_UNORM_BLOCK, $e as VK_FORMAT_BC2_SRGB_BLOCK, Ze as VK_FORMAT_BC2_UNORM_BLOCK, en as VK_FORMAT_BC3_SRGB_BLOCK, tn as VK_FORMAT_BC3_UNORM_BLOCK, sn as VK_FORMAT_BC4_SNORM_BLOCK, nn as VK_FORMAT_BC4_UNORM_BLOCK, rn as VK_FORMAT_BC5_SNORM_BLOCK, an as VK_FORMAT_BC5_UNORM_BLOCK, ln as VK_FORMAT_BC6H_SFLOAT_BLOCK, on as VK_FORMAT_BC6H_UFLOAT_BLOCK, Un as VK_FORMAT_BC7_SRGB_BLOCK, fn as VK_FORMAT_BC7_UNORM_BLOCK, Ne as VK_FORMAT_D16_UNORM, je as VK_FORMAT_D16_UNORM_S8_UINT, Re as VK_FORMAT_D24_UNORM_S8_UINT, Ke as VK_FORMAT_D32_SFLOAT, Ye as VK_FORMAT_D32_SFLOAT_S8_UINT, We as VK_FORMAT_E5B9G9R9_UFLOAT_PACK32, dn as VK_FORMAT_EAC_R11G11_SNORM_BLOCK, bn as VK_FORMAT_EAC_R11G11_UNORM_BLOCK, un as VK_FORMAT_EAC_R11_SNORM_BLOCK, xn as VK_FORMAT_EAC_R11_UNORM_BLOCK, pn as VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK, _n as VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK, yn as VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK, gn as VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK, hn as VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK, cn as VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK, Zn as VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16, ii as VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16, fi as VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG, ai as VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG, Ui as VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG, ri as VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG, ci as VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG, oi as VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG, hi as VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG, li as VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG, Qn as VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16, Jn as VK_FORMAT_R10X6G10X6_UNORM_2PACK16, Gn as VK_FORMAT_R10X6_UNORM_PACK16, ni as VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16, ei as VK_FORMAT_R12X4G12X4_UNORM_2PACK16, ti as VK_FORMAT_R12X4_UNORM_PACK16, pe as VK_FORMAT_R16G16B16A16_SFLOAT, _e as VK_FORMAT_R16G16B16A16_SINT, ce as VK_FORMAT_R16G16B16A16_SNORM, he as VK_FORMAT_R16G16B16A16_UINT, Ue as VK_FORMAT_R16G16B16A16_UNORM, fe as VK_FORMAT_R16G16B16_SFLOAT, le as VK_FORMAT_R16G16B16_SINT, re as VK_FORMAT_R16G16B16_SNORM, oe as VK_FORMAT_R16G16B16_UINT, ae as VK_FORMAT_R16G16B16_UNORM, se as VK_FORMAT_R16G16_SFLOAT, ie as VK_FORMAT_R16G16_SINT, ee as VK_FORMAT_R16G16_SNORM, ne as VK_FORMAT_R16G16_UINT, te as VK_FORMAT_R16G16_UNORM, $t as VK_FORMAT_R16_SFLOAT, Zt as VK_FORMAT_R16_SINT, Jt as VK_FORMAT_R16_SNORM, Qt as VK_FORMAT_R16_UINT, Gt as VK_FORMAT_R16_UNORM, Ae as VK_FORMAT_R32G32B32A32_SFLOAT, Le as VK_FORMAT_R32G32B32A32_SINT, Be as VK_FORMAT_R32G32B32A32_UINT, De as VK_FORMAT_R32G32B32_SFLOAT, we as VK_FORMAT_R32G32B32_SINT, me as VK_FORMAT_R32G32B32_UINT, de as VK_FORMAT_R32G32_SFLOAT, be as VK_FORMAT_R32G32_SINT, ue as VK_FORMAT_R32G32_UINT, xe as VK_FORMAT_R32_SFLOAT, ye as VK_FORMAT_R32_SINT, ge as VK_FORMAT_R32_UINT, st as VK_FORMAT_R4G4B4A4_UNORM_PACK16, it as VK_FORMAT_R4G4_UNORM_PACK8, lt as VK_FORMAT_R5G5B5A1_UNORM_PACK16, rt as VK_FORMAT_R5G6B5_UNORM_PACK16, ze as VK_FORMAT_R64G64B64A64_SFLOAT, Ce as VK_FORMAT_R64G64B64A64_SINT, Pe as VK_FORMAT_R64G64B64A64_UINT, Fe as VK_FORMAT_R64G64B64_SFLOAT, Ee as VK_FORMAT_R64G64B64_SINT, Ve as VK_FORMAT_R64G64B64_UINT, Te as VK_FORMAT_R64G64_SFLOAT, Oe as VK_FORMAT_R64G64_SINT, Ie as VK_FORMAT_R64G64_UINT, Se as VK_FORMAT_R64_SFLOAT, ve as VK_FORMAT_R64_SINT, ke as VK_FORMAT_R64_UINT, Et as VK_FORMAT_R8G8B8A8_SINT, Tt as VK_FORMAT_R8G8B8A8_SNORM, Ft as VK_FORMAT_R8G8B8A8_SRGB, Vt as VK_FORMAT_R8G8B8A8_UINT, Ot as VK_FORMAT_R8G8B8A8_UNORM, Bt as VK_FORMAT_R8G8B8_SINT, wt as VK_FORMAT_R8G8B8_SNORM, Lt as VK_FORMAT_R8G8B8_SRGB, Dt as VK_FORMAT_R8G8B8_UINT, mt as VK_FORMAT_R8G8B8_UNORM, bt as VK_FORMAT_R8G8_SINT, xt as VK_FORMAT_R8G8_SNORM, dt as VK_FORMAT_R8G8_SRGB, ut as VK_FORMAT_R8G8_UINT, yt as VK_FORMAT_R8G8_UNORM, pt as VK_FORMAT_R8_SINT, ht as VK_FORMAT_R8_SNORM, gt as VK_FORMAT_R8_SRGB, _t as VK_FORMAT_R8_UINT, ct as VK_FORMAT_R8_UNORM, Xe as VK_FORMAT_S8_UINT, nt as VK_FORMAT_UNDEFINED, He as VK_FORMAT_X8_D24_UNORM_PACK32, Pi as read, Mi as write };
