import { Camera, Vector2 } from 'three';
export declare const CORE_CAMERA_DEFAULT: {
    near: number;
    far: number;
};
export interface UpdateProjectionOptions {
    resolution?: Vector2;
}
export declare enum CameraAttribute {
    NODE_ID = "_Camera_nodeGeneratorId__",
    CONTROLS_NODE_ID = "_Camera_controlsNodeId",
    CSS_RENDERER_NODE_ID = "_Camera_CSSRendererNodeId",
    FRAME_MODE = "_Camera_frameMode",
    FRAME_MODE_EXPECTED_ASPECT_RATIO = "_Camera_frameModeExpectedAspectRatio",
    MAX_FPS = "maxFPS",
    MAX_FPS_DYNAMIC_CHANGE = "_Camera_maxFPSDynamicChange",
    VIEW_OFFSET_MIN = "_Camera_viewOffsetMin",
    VIEW_OFFSET_MAX = "_Camera_viewOffsetMax",
    POST_PROCESS_NODE_ID = "_Camera_postProcessNodeId",
    RENDER_SCENE_NODE_ID = "_Camera_renderSceneNodeId",
    RENDERER_NODE_ID = "_Camera_rendererNodeId",
    VIEWER_ID = "_Camera_viewerId",
    VIEWER_HTML = "_Camera_viewerHTML",
    WEBXR_AR = "_Camera_WebXR_AR",
    WEBXR_VR = "_Camera_WebXR_VR",
    WEBXR_AR_FEATURES_OPTIONAL = "_Camera_WebXR_AR_Features_Optional",
    WEBXR_AR_FEATURES_REQUIRED = "_Camera_WebXR_AR_Features_Required",
    WEBXR_AR_OVERRIDE_REFERENCE_SPACE_TYPE = "_Camera_WebXR_AR_overrideReferenceSpaceType",
    WEBXR_AR_REFERENCE_SPACE_TYPE = "_Camera_WebXR_AR_referenceSpaceType",
    WEBXR_VR_FEATURES_OPTIONAL = "_Camera_WebXR_VR_Features_Optional",
    WEBXR_VR_FEATURES_REQUIRED = "_Camera_WebXR_VR_Features_Required",
    WEBXR_VR_OVERRIDE_REFERENCE_SPACE_TYPE = "_Camera_WebXR_VR_overrideReferenceSpaceType",
    WEBXR_VR_REFERENCE_SPACE_TYPE = "_Camera_WebXR_VR_referenceSpaceType",
    WEBXR_AR_MARKER_TRACKING = "_Camera_WebXR_AR_markerTracking",
    WEBXR_AR_MARKER_TRACKING_SOURCE_MODE = "_Camera_WebXR_AR_markerTracking_sourceMode",
    WEBXR_AR_MARKER_TRACKING_SOURCE_URL = "_Camera_WebXR_AR_markerTracking_sourceUrl",
    WEBXR_AR_MARKER_TRACKING_BAR_CODE_TYPE = "_Camera_WebXR_AR_markerTracking_barCodeType",
    WEBXR_AR_MARKER_TRACKING_BAR_CODE_VALUE = "_Camera_WebXR_AR_markerTracking_barCodeValue",
    WEBXR_AR_MARKER_TRACKING_TRANSFORM_MODE = "_Camera_WebXR_AR_markerTracking_transformMode",
    WEBXR_AR_MARKER_TRACKING_SMOOTH = "_Camera_WebXR_AR_markerTracking_smooth",
    WEBXR_AR_MARKER_TRACKING_SMOOTH_COUNT = "_Camera_WebXR_AR_markerTracking_smoothCount"
}
export declare const CAMERA_ATTRIBUTES: CameraAttribute[];
export declare enum PerspectiveCameraAttribute {
    FOV = "_PerspectiveCamera_fov"
}
export declare const PERSPECTIVE_CAMERA_ATTRIBUTES: PerspectiveCameraAttribute[];
export declare enum OrthographicCameraAttribute {
    SIZE = "_OrthographicCamera_size"
}
export declare const ORTHOGRAPHIC_CAMERA_ATTRIBUTES: OrthographicCameraAttribute[];
export declare function serializeCamera<C extends Camera>(camera: C, attributeNames: string[]): string;
