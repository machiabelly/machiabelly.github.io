"use strict";
export const VIDEO_EXTENSIONS = ["mp4", "ogv", "ogg", "webm"];
export var ImageExtension = /* @__PURE__ */ ((ImageExtension2) => {
  ImageExtension2["GIF"] = "gif";
  ImageExtension2["JPG"] = "jpg";
  ImageExtension2["JPEG"] = "jpeg";
  ImageExtension2["PNG"] = "png";
  ImageExtension2["EXR"] = "exr";
  ImageExtension2["KTX2"] = "ktx2";
  ImageExtension2["HDR"] = "hdr";
  ImageExtension2["WEBP"] = "webp";
  return ImageExtension2;
})(ImageExtension || {});
export const IMAGE_EXTENSIONS = [
  "gif" /* GIF */,
  "jpeg" /* JPEG */,
  "jpg" /* JPG */,
  "png" /* PNG */,
  "exr" /* EXR */,
  "ktx2" /* KTX2 */,
  "hdr" /* HDR */,
  "webp" /* WEBP */
];
export var GeometryExtension = /* @__PURE__ */ ((GeometryExtension2) => {
  GeometryExtension2["TDS"] = "3DS";
  GeometryExtension2["DRC"] = "drc";
  GeometryExtension2["FBX"] = "fbx";
  GeometryExtension2["GEOJSON"] = "geojson";
  GeometryExtension2["GLTF"] = "gltf";
  GeometryExtension2["GLB"] = "glb";
  GeometryExtension2["IFC"] = "ifc";
  GeometryExtension2["JSON"] = "json";
  GeometryExtension2["MPD"] = "mpd";
  GeometryExtension2["OBJ"] = "obj";
  GeometryExtension2["PDB"] = "pdb";
  GeometryExtension2["PLY"] = "ply";
  GeometryExtension2["STEP"] = "step";
  GeometryExtension2["STL"] = "stl";
  GeometryExtension2["SVG"] = "svg";
  GeometryExtension2["USDZ"] = "usdz";
  GeometryExtension2["VOX"] = "vox";
  return GeometryExtension2;
})(GeometryExtension || {});
export const GEOMETRY_EXTENSIONS = [
  "drc" /* DRC */,
  "fbx" /* FBX */,
  "geojson" /* GEOJSON */,
  "gltf" /* GLTF */,
  "glb" /* GLB */,
  "ifc" /* IFC */,
  "json" /* JSON */,
  "mpd" /* MPD */,
  "obj" /* OBJ */,
  "pdb" /* PDB */,
  "ply" /* PLY */,
  "step" /* STEP */,
  "stl" /* STL */,
  "svg" /* SVG */,
  "usdz" /* USDZ */,
  "vox" /* VOX */
];
export var SDFExtension = /* @__PURE__ */ ((SDFExtension2) => {
  SDFExtension2["BIN"] = "bin";
  return SDFExtension2;
})(SDFExtension || {});
export const SDF_EXTENSIONS = ["bin" /* BIN */];
export var AudioExtension = /* @__PURE__ */ ((AudioExtension2) => {
  AudioExtension2["MP3"] = "mp3";
  AudioExtension2["WAV"] = "wav";
  AudioExtension2["OGG"] = "ogg";
  return AudioExtension2;
})(AudioExtension || {});
export const AUDIO_EXTENSIONS = ["mp3" /* MP3 */, "wav" /* WAV */, "ogg" /* OGG */];
export var FontExtension = /* @__PURE__ */ ((FontExtension2) => {
  FontExtension2["TTF"] = "ttf";
  FontExtension2["JSON"] = "json";
  return FontExtension2;
})(FontExtension || {});
export const FONT_EXTENSIONS = ["ttf" /* TTF */, "json" /* JSON */];
function urlExt(url) {
  const url_without_query_params = url.split("?")[0];
  const url_elements = url_without_query_params.split(".");
  if (url_elements.length == 1) {
    return;
  }
  const ext = url_elements[url_elements.length - 1];
  return ext;
}
export function isExtVideo(ext) {
  return VIDEO_EXTENSIONS.includes(ext);
}
export function isExtStaticImage(ext) {
  return IMAGE_EXTENSIONS.includes(ext);
}
export function isExtGif(ext) {
  return ext == "gif" /* GIF */;
}
export function isExtGeometry(ext) {
  return GEOMETRY_EXTENSIONS.includes(ext);
}
export function isExtSDF(ext) {
  return SDF_EXTENSIONS.includes(ext);
}
export function isExtAudio(ext) {
  return AUDIO_EXTENSIONS.includes(ext);
}
export function isUrlVideo(url) {
  const ext = urlExt(url);
  return ext != null ? isExtVideo(ext.toLowerCase()) : false;
}
export function isUrlStaticImage(url) {
  const ext = urlExt(url);
  return ext != null ? isExtStaticImage(ext.toLowerCase()) : false;
}
export function isUrlGif(url) {
  const ext = urlExt(url);
  return ext != null ? isExtGif(ext.toLowerCase()) : false;
}
export function isUrlGeometry(url) {
  const ext = urlExt(url);
  return ext != null ? isExtGeometry(ext.toLowerCase()) : false;
}
export function isUrlAudio(url) {
  const ext = urlExt(url);
  return ext != null ? isExtAudio(ext.toLowerCase()) : false;
}
