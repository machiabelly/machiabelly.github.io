import { Euler, Vector2, Vector3, Vector4, Quaternion, Color } from 'three';
export declare function isArray(value: any): value is any[];
export declare function isBoolean(value: any): value is boolean;
export declare function isNumber(value: any): value is number;
export declare function isNumberValid(value: any): value is number;
export declare function isVector(value: any): value is Vector2 | Vector3 | Vector4;
export declare function isColor(value: any): value is Color;
export declare function isEuler(value: any): value is Euler;
export declare function isQuaternion(value: any): value is Quaternion;
export declare function isString(value: any): value is string;
export declare function isObject(value: any): value is object;
export declare function isFunction(value: any): value is Function;
export declare function isPromise<T extends any>(value: any): value is Promise<T>;
export declare function isBooleanTrue(value: boolean): boolean;
export declare function ensureString(value: string): string;
export declare class CoreType {
    static isNumber: typeof isNumber;
    static isNumberValid: typeof isNumberValid;
    static isVector: typeof isVector;
    static isColor: typeof isColor;
    static isEuler: typeof isEuler;
    static isQuaternion: typeof isQuaternion;
    static isString: typeof isString;
    static isBoolean: typeof isBoolean;
    static isNaN: typeof isNaN;
    static isArray: typeof isArray;
    static isObject: typeof isObject;
    static isFunction: typeof isFunction;
}
