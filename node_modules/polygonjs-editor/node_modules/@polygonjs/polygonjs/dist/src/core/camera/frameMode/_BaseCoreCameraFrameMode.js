"use strict";
import { CoreType } from "../../Type";
import { CameraAttribute } from "../CoreCamera";
import { CameraFrameMode, CAMERA_FRAME_MODES } from "../CoreCameraFrameMode";
import { coreObjectClassFactory } from "../../geometry/CoreObjectFactory";
export class BaseCoreCameraFrameMode {
  static frameMode(camera) {
    return this._getFrameMode(camera) || CameraFrameMode.DEFAULT;
  }
  static expectedAspectRatio(camera) {
    return coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.FRAME_MODE_EXPECTED_ASPECT_RATIO);
  }
  static _getFrameMode(camera) {
    const frameModeAttribVal = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.FRAME_MODE);
    if (!frameModeAttribVal) {
      return;
    }
    if (!CoreType.isNumber(frameModeAttribVal)) {
      return;
    }
    return CAMERA_FRAME_MODES[frameModeAttribVal];
  }
}
