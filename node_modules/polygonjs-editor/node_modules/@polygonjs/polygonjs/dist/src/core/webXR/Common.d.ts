/// <reference types="webxr" />
export declare enum BaseXRSessionEventName {
    CONNECTED = "connected",
    DISCONNECTED = "disconnected",
    SELECT = "select",
    SELECT_START = "selectstart",
    SELECT_END = "selectend"
}
export declare const BASE_XR_SESSION_EVENT_NAMES: BaseXRSessionEventName[];
export declare const BASE_XR_EVENT_INDICES: Map<BaseXRSessionEventName, number>;
export declare const WEBXR_REFERENCE_SPACE_TYPES: XRReferenceSpaceType[];
export declare const DEFAULT_WEBXR_REFERENCE_SPACE_TYPE: XRReferenceSpaceType;
export type WebXRRenderFunction = () => void;
export type WebXRControllerMountFunction = () => void;
export type WebXRControllerUnmountFunction = () => void;
export declare enum WebXRFeatureStatus {
    NOT_USED = "not used",
    OPTIONAL = "optional",
    REQUIRED = "required"
}
export declare const WEBXR_FEATURE_STATUSES: WebXRFeatureStatus[];
export declare const WEBXR_FEATURE_STATUS_OPTIONAL_INDEX: number;
export declare const WEBXR_FEATURE_PARAM_OPTIONS: {
    menu: {
        entries: {
            name: WebXRFeatureStatus;
            value: number;
        }[];
    };
};
export interface CoreWebXRControllerOptions {
    overrideReferenceSpaceType: boolean;
    referenceSpaceType?: XRReferenceSpaceType;
}
