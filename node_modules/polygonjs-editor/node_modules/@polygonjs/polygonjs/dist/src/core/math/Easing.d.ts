type EasingFunction = (num: number) => number;
export interface EasingDictionary {
    easeI2: EasingFunction;
    easeO2: EasingFunction;
    easeIO2: EasingFunction;
    easeI3: EasingFunction;
    easeO3: EasingFunction;
    easeIO3: EasingFunction;
    easeI4: EasingFunction;
    easeO4: EasingFunction;
    easeIO4: EasingFunction;
    easeSinI: EasingFunction;
    easeSinO: EasingFunction;
    easeSinIO: EasingFunction;
    easeElasticI: EasingFunction;
    easeElasticO: EasingFunction;
    easeElasticIO: EasingFunction;
}
export declare const EASING_NAMES: Array<keyof EasingDictionary>;
export declare const easeI2: (t: number) => number;
export declare const easeO2: (t: number) => number;
export declare const easeIO2: (t: number) => number;
export declare const easeI3: (t: number) => number;
export declare const easeO3: (t: number) => number;
export declare const easeIO3: (t: number) => number;
export declare const easeI4: (t: number) => number;
export declare const easeO4: (t: number) => number;
export declare const easeIO4: (t: number) => number;
export declare function easeSinI(t: number): number;
export declare function easeSinO(t: number): number;
export declare function easeSinIO(t: number): number;
export declare function easeElasticI(t: number): number;
export declare function easeElasticO(t: number): number;
export declare function easeElasticIO(t: number): number;
export declare const Easing: EasingDictionary;
export {};
