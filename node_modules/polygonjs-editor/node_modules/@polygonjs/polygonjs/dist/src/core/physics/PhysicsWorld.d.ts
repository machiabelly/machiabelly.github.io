import { PhysicsLib } from './CorePhysics';
import { World, RigidBody } from '@dimforge/rapier3d-compat';
import { Object3D, Vector3 } from 'three';
import { CoreGraphNodeId } from '../graph/CoreGraph';
import { BaseNodeType } from '../../engine/nodes/_Base';
import { PolyScene } from '../../engine/scene/PolyScene';
export declare const PHYSICS_GRAVITY_DEFAULT: Vector3;
export declare function createOrFindPhysicsWorld(node: BaseNodeType, worldObject: Object3D, gravity: Vector3): Promise<{
    world: World;
    PhysicsLib: PhysicsLib;
}>;
export declare function physicsWorldNodeIdFromObject(worldObject: Object3D): number | undefined;
export declare function physicsWorldFromObject(worldObject: Object3D): World | undefined;
export declare function physicsWorldFromNodeId(nodeId: CoreGraphNodeId): World | undefined;
export declare function initCorePhysicsWorld(PhysicsLib: PhysicsLib, worldObject: Object3D, scene: PolyScene): void;
export declare function object3DFromRBD(rbd: RigidBody): Object3D<import("three").Object3DEventMap> | undefined;
export declare function physicsCreateRBDFromWorldObject(worldObject: Object3D, object: Object3D): Set<string> | undefined;
export declare function physicsCreateRBDFromWorld(world: World, object: Object3D): Set<string> | undefined;
export declare function getRBDFromId(rbdId: string): RigidBody | undefined;
export declare function stepWorld(worldObject: Object3D): void;
export declare function setWorldGravity(worldObject: Object3D, gravity: Vector3, lerp: number): void;
