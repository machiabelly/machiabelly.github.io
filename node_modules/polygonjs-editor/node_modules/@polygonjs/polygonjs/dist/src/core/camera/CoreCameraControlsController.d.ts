import { CameraControls } from './../../engine/nodes/event/_BaseCameraControls';
import { BaseViewerType } from './../../engine/viewers/_Base';
import { Camera, Vector3 } from 'three';
import { PolyScene } from '../../engine/scene/PolyScene';
interface CreateControlsConfigOptions {
    scene: PolyScene;
    camera: Camera;
}
type GetTargetFunction = (target: Vector3) => void;
type SetTargetFunction = (target: Vector3) => void;
export interface ApplicableControlsNode {
    type(): string;
    applyControls: (camera: Camera, viewer: BaseViewerType) => Promise<CameraControls>;
    target?: GetTargetFunction;
    setTarget?: SetTargetFunction;
}
export declare class CoreCameraControlsController {
    static controlsNode(options: CreateControlsConfigOptions): ApplicableControlsNode | undefined;
}
export {};
