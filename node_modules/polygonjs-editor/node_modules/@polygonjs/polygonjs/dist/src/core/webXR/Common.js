"use strict";
export var BaseXRSessionEventName = /* @__PURE__ */ ((BaseXRSessionEventName2) => {
  BaseXRSessionEventName2["CONNECTED"] = "connected";
  BaseXRSessionEventName2["DISCONNECTED"] = "disconnected";
  BaseXRSessionEventName2["SELECT"] = "select";
  BaseXRSessionEventName2["SELECT_START"] = "selectstart";
  BaseXRSessionEventName2["SELECT_END"] = "selectend";
  return BaseXRSessionEventName2;
})(BaseXRSessionEventName || {});
export const BASE_XR_SESSION_EVENT_NAMES = [
  "connected" /* CONNECTED */,
  "disconnected" /* DISCONNECTED */,
  "select" /* SELECT */,
  "selectstart" /* SELECT_START */,
  "selectend" /* SELECT_END */
];
function _buildEventIndices() {
  const map = /* @__PURE__ */ new Map();
  let i = 0;
  for (const eventName of BASE_XR_SESSION_EVENT_NAMES) {
    map.set(eventName, i);
    i++;
  }
  return map;
}
export const BASE_XR_EVENT_INDICES = _buildEventIndices();
export const WEBXR_REFERENCE_SPACE_TYPES = [
  "viewer",
  "local",
  "local-floor",
  "bounded-floor",
  "unbounded"
];
export const DEFAULT_WEBXR_REFERENCE_SPACE_TYPE = "local-floor";
export var WebXRFeatureStatus = /* @__PURE__ */ ((WebXRFeatureStatus2) => {
  WebXRFeatureStatus2["NOT_USED"] = "not used";
  WebXRFeatureStatus2["OPTIONAL"] = "optional";
  WebXRFeatureStatus2["REQUIRED"] = "required";
  return WebXRFeatureStatus2;
})(WebXRFeatureStatus || {});
export const WEBXR_FEATURE_STATUSES = [
  "not used" /* NOT_USED */,
  "optional" /* OPTIONAL */,
  "required" /* REQUIRED */
];
export const WEBXR_FEATURE_STATUS_OPTIONAL_INDEX = WEBXR_FEATURE_STATUSES.indexOf("optional" /* OPTIONAL */);
export const WEBXR_FEATURE_PARAM_OPTIONS = {
  menu: {
    entries: WEBXR_FEATURE_STATUSES.map((name, value) => ({ name, value }))
  }
};
