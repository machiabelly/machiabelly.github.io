import type { Ref } from '@vue/reactivity';
import type { AttribValue } from '../../types/GlobalTypes';
import type { CoreObjectType, ObjectContent } from '../geometry/ObjectContent';
import { JsIConnectionPointTypeToDataTypeMap, ParamConvertibleJsType } from '../../engine/nodes/utils/io/connections/Js';
export interface AttribRefs<T extends ParamConvertibleJsType> {
    current: Ref<JsIConnectionPointTypeToDataTypeMap[T]>;
    previous: Ref<JsIConnectionPointTypeToDataTypeMap[T]>;
}
export type ObjectXD = ObjectContent<CoreObjectType>;
export declare const refByObjectUuidByAttribName: WeakMap<ObjectXD, Map<string, AttribRefs<ParamConvertibleJsType>>>;
export declare function _getObjectAttributeRef_(object3D: ObjectXD, attribName: string): AttribRefs<ParamConvertibleJsType> | undefined;
export declare function _dummyReadAttributeRefVal(value: AttribValue): void;
