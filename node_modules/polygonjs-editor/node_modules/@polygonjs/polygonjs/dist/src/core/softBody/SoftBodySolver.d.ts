import { Object3D, Vector3 } from 'three';
export declare function softBodySolverStepSimulation(softBodyObject: Object3D, stepsCount: number, edgeCompliance: number, volumeCompliance: number, preciseCollisions: boolean): void;
export declare function setSoftBodySolverGravity(softBodyObject: Object3D, gravity: Vector3, lerp: number): void;
export declare function softBodySetPosition(softBodyObject: Object3D, position: Vector3, lerp: number): void;
export declare function softBodyMultiplyVelocity(softBodyObject: Object3D, mult: number): void;
export declare function softBodyConstraintCreate(softBodyObject: Object3D, index: number): import("./SoftBodyConstraint").SoftBodyConstraint | undefined;
export declare function softBodyConstraintSetPosition(softBodyObject: Object3D, constraintId: number, pos: Vector3, lerp: number, delta: number): void;
export declare function softBodyConstraintDelete(softBodyObject: Object3D, constraintId: number): void;
