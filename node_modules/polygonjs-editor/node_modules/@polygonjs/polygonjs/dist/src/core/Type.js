"use strict";
import { Euler, Vector2, Vector3, Vector4, Quaternion, Color } from "three";
export function isArray(value) {
  return Array.isArray(value);
}
export function isBoolean(value) {
  return value === true || value === false;
}
export function isNumber(value) {
  return typeof value == "number";
}
export function isNumberValid(value) {
  return isNumber(value) && !isNaN(value);
}
export function isVector(value) {
  return value instanceof Vector2 || value instanceof Vector3 || value instanceof Vector4;
}
export function isColor(value) {
  return value instanceof Color;
}
export function isEuler(value) {
  return value instanceof Euler;
}
export function isQuaternion(value) {
  return value instanceof Quaternion;
}
export function isString(value) {
  return typeof value == "string";
}
export function isObject(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
export function isFunction(value) {
  var type = typeof value;
  return value != null && type == "function";
}
export function isPromise(value) {
  return value instanceof Promise;
}
export function isBooleanTrue(value) {
  return value;
}
export function ensureString(value) {
  return value;
}
export class CoreType {
}
CoreType.isNumber = isNumber;
CoreType.isNumberValid = isNumberValid;
CoreType.isVector = isVector;
CoreType.isColor = isColor;
CoreType.isEuler = isEuler;
CoreType.isQuaternion = isQuaternion;
CoreType.isString = isString;
CoreType.isBoolean = isBoolean;
CoreType.isNaN = isNaN;
CoreType.isArray = isArray;
CoreType.isObject = isObject;
CoreType.isFunction = isFunction;
