"use strict";
import { Mesh } from "three";
import { markedAsInstance } from "../../GeometryUtils";
import { InstanceAttrib } from "../../Instancer";
import { Attribute } from "../../Attribute";
import { ThreejsPoint } from "./ThreejsPoint";
const dummyMesh = new Mesh();
export function positionAttributeNameFromBufferGeometry(geometry) {
  return markedAsInstance(geometry) ? InstanceAttrib.POSITION : Attribute.POSITION;
}
export function pointsCountFromBufferGeometry(geometry) {
  const attribName = positionAttributeNameFromBufferGeometry(geometry);
  if (!attribName) {
    return 0;
  }
  const positionAttribute = geometry.getAttribute(attribName);
  if (!positionAttribute) {
    return 0;
  }
  return positionAttribute.count;
}
export function pointsFromBufferGeometry(geometry) {
  dummyMesh.geometry = geometry;
  const pointsCount = pointsCountFromBufferGeometry(geometry);
  const points = new Array(pointsCount);
  for (let i = 0; i < pointsCount; i++) {
    points[i] = new ThreejsPoint(dummyMesh, i);
  }
  return points;
}
