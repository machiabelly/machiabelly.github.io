/**
 * sends a trigger on scroll
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsType } from '../../poly/registers/nodes/types/Js';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { ModuleName } from '../../poly/registers/modules/Common';
export declare enum OnScrollInputName {
    attribName = "attribName"
}
export declare enum OnScrollOutputName {
    progress = "progress"
}
declare class OnScrollJsParamsConfig extends NodeParamsConfig {
    element: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    useViewport: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    scroller: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    displayMarkers: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class OnScrollJsNode extends TypedJsNode<OnScrollJsParamsConfig> {
    readonly paramsConfig: OnScrollJsParamsConfig;
    static type(): JsType;
    requiredModules(): ModuleName[];
    isTriggering(): boolean;
    initializeNode(): void;
    setLines(linesController: JsLinesCollectionController): void;
    setTriggeringLines(linesController: JsLinesCollectionController, triggeredMethods: string): void;
    private _addCreateScrollListenerLines;
    private _addProgressRef;
}
export {};
