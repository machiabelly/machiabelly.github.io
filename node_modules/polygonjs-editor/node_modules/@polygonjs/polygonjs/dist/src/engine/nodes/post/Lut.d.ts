/**
 * applies a LUT
 *
 *
 */
import { TypedPostNode, TypedPostNodeContext } from './_Base';
import { EffectPass } from 'postprocessing';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class LutPostParamsConfig extends NodeParamsConfig {
    /** @param texture */
    texture: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.NODE_PATH>;
    /** @param effect opacity */
    opacity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param render mode */
    blendFunction: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class LutPostNode extends TypedPostNode<EffectPass, LutPostParamsConfig> {
    paramsConfig: LutPostParamsConfig;
    static type(): string;
    createPass(context: TypedPostNodeContext): EffectPass[];
    updatePass(pass: EffectPass): Promise<void>;
    private _fetchTexture;
}
export {};
