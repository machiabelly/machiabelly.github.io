/**
 * Prepares a geometry for cloth simulation.
 *
 *
 */
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { SopType } from '../../poly/registers/nodes/types/Sop';
import { TypedSopNode } from './_Base';
declare class ClothPrepareSopParamsConfig extends NodeParamsConfig {
    fuseDist: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    viscosity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    spring: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class ClothPrepareSopNode extends TypedSopNode<ClothPrepareSopParamsConfig> {
    readonly paramsConfig: ClothPrepareSopParamsConfig;
    static type(): SopType.CLOTH_PREPARE;
    protected initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): Promise<void>;
    private _applyFuse;
    private _addIdAttribute;
    private _addViscosityAttribute;
    private _addSpringAttribute;
    private _addFloatAttribute;
    private _addAdjacencyAttributes;
}
export {};
