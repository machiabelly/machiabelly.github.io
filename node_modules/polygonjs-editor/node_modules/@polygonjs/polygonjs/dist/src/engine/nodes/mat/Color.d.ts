/**
 * Updates the color properties of the input material
 *

 *
 */
import { Material } from 'three';
import { UpdateMatNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { ColoredMaterial, ColorsController } from './utils/ColorsController';
interface ColorControllers {
    colors: ColorsController;
}
declare const ColorMatParamsConfig_base: {
    new (...args: any[]): {
        color: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
        useVertexColors: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        transparent: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        opacity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        alphaTest: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    };
} & typeof NodeParamsConfig;
declare class ColorMatParamsConfig extends ColorMatParamsConfig_base {
}
export declare class ColorMatNode extends UpdateMatNode<ColoredMaterial, ColorMatParamsConfig> {
    paramsConfig: ColorMatParamsConfig;
    static type(): string;
    readonly controllers: ColorControllers;
    cook(inputMaterials: Material[]): Promise<void>;
}
export {};
