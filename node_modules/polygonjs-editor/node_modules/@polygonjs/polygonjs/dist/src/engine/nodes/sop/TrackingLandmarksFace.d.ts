/**
 * Creates a default face mesh to be used with SOP/mediapipeFacemesh
 *
 */
import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare const TrackingLandmarksFaceSopParamsConfig_base: {
    new (...args: any[]): {
        selfieMode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        maxNumFaces: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        refineLandmarks: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        minDetectionConfidence: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        minTrackingConfidence: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    };
} & typeof NodeParamsConfig;
declare class TrackingLandmarksFaceSopParamsConfig extends TrackingLandmarksFaceSopParamsConfig_base {
}
export declare class TrackingLandmarksFaceSopNode extends TypedSopNode<TrackingLandmarksFaceSopParamsConfig> {
    paramsConfig: TrackingLandmarksFaceSopParamsConfig;
    static type(): string;
    private _uv;
    cook(): void;
}
export {};
