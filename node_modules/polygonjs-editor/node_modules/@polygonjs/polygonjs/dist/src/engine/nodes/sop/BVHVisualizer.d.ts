/**
 * Creates a BVH from geometries.
 *
 * @remarks
 * Visualize a BVH, created with the node sop/BVH
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class BVHVisualizerSopParamsConfig extends NodeParamsConfig {
    /** @param depth */
    depth: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param opacity */
    opacity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param depth */
    displayEdges: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param depth */
    displayParents: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class BVHVisualizerSopNode extends TypedSopNode<BVHVisualizerSopParamsConfig> {
    paramsConfig: BVHVisualizerSopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    private _operation;
    cook(input_contents: CoreGroup[]): void;
}
export {};
