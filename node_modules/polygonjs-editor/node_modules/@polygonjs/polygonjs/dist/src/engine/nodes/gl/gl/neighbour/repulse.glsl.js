export default "\nvec3 __FUNCTION__NAME__(\n	sampler2D texturePosition,\n	vec2 particleUv,\n	vec3 currentPosition,\n	// repulse\n	float amount,\n	float minDist,\n	float maxDist\n	){\n\n	vec3 otherPosition, otherVelocity, dir;\n	float distSquared, dist;\n	vec3 repulseForce = vec3( 0.0, 0.0, 0.0 );\n	int repulsorsCount = 0;\n\n	float range = abs(maxDist - minDist);\n\n	const float width = resolution.x;\n	const float height = resolution.y;\n	for ( float y = 0.0; y < height; y++ ) {\n		for ( float x = 0.0; x < width; x++ ) {\n\n			// ignore if this is self\n			if(x == particleUv.x && y == particleUv.y) continue;\n\n			vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;\n			otherPosition = texture2D( texturePosition, ref ).__COMPONENT__;\n\n			dir = otherPosition - currentPosition;\n			dist = length( dir );\n\n			// if the distance is too small, ignore this point\n			if (dist < 0.0001) continue;\n\n			if(dist < maxDist){\n				float ratio = (dist - minDist) / range;\n				ratio = max(ratio, 0.0);\n				repulseForce += -amount * (1.0 - ratio) * dir;\n				repulsorsCount++;\n			}\n		}\n	}\n\n	vec3 force = vec3( 0.0, 0.0, 0.0);\n	if(repulsorsCount > 0){\n		force += repulseForce / float(repulsorsCount);\n	}\n	return force;\n\n}";
