/**
 * Creates a CSG triangle.
 *
 *
 */
import { CSGSopNode } from './_BaseCSG';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CSGTriangleSopParamsConfig extends NodeParamsConfig {
    /** @param type */
    type: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param angles */
    angles: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
}
export declare class CSGTriangleSopNode extends CSGSopNode<CSGTriangleSopParamsConfig> {
    paramsConfig: CSGTriangleSopParamsConfig;
    static type(): SopType;
    private _angles;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
