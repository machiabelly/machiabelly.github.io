/**
 * Creates hexagons on a plane.
 *
 * @remarks
 * This is very similar to the plane SOP, but with hexagonal patterns, which can be more visually pleasing.
 */
import { CoreGroup } from './../../../core/geometry/Group';
import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class HexagonsSopParamsConfig extends NodeParamsConfig {
    /** @param plane size */
    size: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
    /** @param hexagons size */
    hexagonRadius: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param axis perpendicular to the plane */
    direction: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param do not create polygons, only points */
    pointsOnly: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class HexagonsSopNode extends TypedSopNode<HexagonsSopParamsConfig> {
    paramsConfig: HexagonsSopParamsConfig;
    static type(): string;
    initializeNode(): void;
    private _operation;
    cook(input_contents: CoreGroup[]): void;
}
export {};
