import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TypedEventNode } from './_Base';
import ScrollTrigger from 'gsap/ScrollTrigger';
import { ModuleName } from '../../poly/registers/modules/Common';
declare class ScrollTriggerParamsConfig extends NodeParamsConfig {
    /** @param active */
    active: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param selector of the element the scroll events are detected for */
    element: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param use viewport as scroller */
    useViewport: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param override the scroller */
    scroller: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param add markers for debugging */
    markers: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param define if progress should be updated */
    tprogress: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param progress */
    progress: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param define if the scroll is inside the element */
    tinsideElement: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param 1 if the scroll is inside the element */
    insideElement: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param sends a trigger when we leaving or entering the element */
    onToggle: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param sends a trigger when entering the element */
    onEnter: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param sends a trigger when leaving the element */
    onLeave: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param sends a trigger when entering again the element */
    onEnterBack: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param sends a trigger when leaving again the element */
    onLeaveBack: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class ScrollTriggerEventNode extends TypedEventNode<ScrollTriggerParamsConfig> {
    paramsConfig: ScrollTriggerParamsConfig;
    gsap: typeof globalThis.gsap | undefined;
    ScrollTrigger: typeof ScrollTrigger;
    static type(): string;
    requiredModules(): ModuleName[];
    dispose(): void;
    initializeNode(): void;
    private _scrollTrigger;
    private _onCreateTrigger;
    private _updateScrollTrigger;
    private _onDisposeTrigger;
    private _disposeScrollTrigger;
    private _querySelector;
    static PARAM_CALLBACK_updateScrollTrigger(node: ScrollTriggerEventNode): void;
}
export {};
