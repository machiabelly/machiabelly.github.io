/**
 * extends the HTML of the viewer created by the input camera
 *
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { HierarchyParamConfigAll } from '../utils/params/ParamsConfig';
import { CameraSopNodeType } from '../../poly/NodeContext';
declare const CameraViewerCodeSopParamsConfig_base: {
    new (...args: any[]): {
        viewerId: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
        html: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    };
} & typeof HierarchyParamConfigAll;
declare class CameraViewerCodeSopParamsConfig extends CameraViewerCodeSopParamsConfig_base {
}
export declare class CameraViewerCodeSopNode extends TypedSopNode<CameraViewerCodeSopParamsConfig> {
    readonly paramsConfig: CameraViewerCodeSopParamsConfig;
    static type(): CameraSopNodeType;
    protected initializeNode(): void;
    private _operation;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
