/**
 * Update the object scale
 *
 *
 */
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsConnectionPoint, JsConnectionPointType } from '../utils/io/connections/Js';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { BaseTriggerAndObjectJsNode } from './_BaseTriggerAndObject';
import { JsType } from '../../poly/registers/nodes/types/Js';
declare class SetInstanceScaleJsParamsConfig extends NodeParamsConfig {
    /** @param point index */
    ptnum: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param target scale */
    scale: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param target scale */
    mult: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param lerp factor */
    lerp: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class SetInstanceScaleJsNode extends BaseTriggerAndObjectJsNode<SetInstanceScaleJsParamsConfig> {
    readonly paramsConfig: SetInstanceScaleJsParamsConfig;
    static type(): JsType;
    protected _additionalOutputs(): JsConnectionPoint<JsConnectionPointType>[];
    setLines(linesController: JsLinesCollectionController): void;
    setTriggerableLines(linesController: JsLinesCollectionController): void;
}
export {};
