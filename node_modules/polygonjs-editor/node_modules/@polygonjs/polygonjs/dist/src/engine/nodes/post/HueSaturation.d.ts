/**
 * Adds a brightness/contrast
 *
 *
 */
import { TypedPostNode, TypedPostNodeContext } from './_Base';
import { EffectPass } from 'postprocessing';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class HueSaturationPostParamsConfig extends NodeParamsConfig {
    /** @param hue */
    hue: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param saturation */
    saturation: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param effect opacity */
    opacity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param render mode */
    blendFunction: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class HueSaturationPostNode extends TypedPostNode<EffectPass, HueSaturationPostParamsConfig> {
    paramsConfig: HueSaturationPostParamsConfig;
    static type(): string;
    createPass(context: TypedPostNodeContext): EffectPass;
    updatePass(pass: EffectPass): void;
}
export {};
