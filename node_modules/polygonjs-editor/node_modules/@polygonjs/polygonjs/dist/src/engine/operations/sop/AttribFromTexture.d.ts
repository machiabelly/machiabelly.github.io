import { BaseSopOperation } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { TypedNodePathParamValue } from '../../../core/Walker';
import { InputCloneMode } from '../../../engine/poly/InputCloneMode';
import { DefaultOperationParams } from '../../../core/operations/_Base';
interface AttribFromTextureSopParams extends DefaultOperationParams {
    texture: TypedNodePathParamValue;
    uvAttrib: string;
    attrib: string;
    attribSize: number;
    add: number;
    mult: number;
}
export declare class AttribFromTextureSopOperation extends BaseSopOperation {
    static readonly DEFAULT_PARAMS: AttribFromTextureSopParams;
    static readonly INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;
    static type(): Readonly<'attribFromTexture'>;
    cook(inputCoreGroups: CoreGroup[], params: AttribFromTextureSopParams): Promise<CoreGroup>;
    private _setPositionFromDataTexture;
}
export {};
