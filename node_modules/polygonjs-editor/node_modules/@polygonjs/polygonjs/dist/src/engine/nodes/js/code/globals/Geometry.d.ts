import { GlobalsJsBaseController } from './_Base';
import { GlobalsJsNode } from '../../Globals';
import { AttributeJsNode } from '../../Attribute';
import { JsConnectionPointType } from '../../../utils/io/connections/Js';
import { BaseJsNodeType } from '../../_Base';
import { JsLinesCollectionController } from '../utils/JsLinesCollectionController';
import { GlobalsJsBaseControllerType } from './Common';
export declare class GlobalsJsGeometryHandler extends GlobalsJsBaseController {
    type(): GlobalsJsBaseControllerType;
    handleGlobalsNode(globals_node: GlobalsJsNode, output_name: string, linesController: JsLinesCollectionController): void;
    handleGlobalVar(globals_node: BaseJsNodeType, output_name: string, jsType: JsConnectionPointType, linesController: JsLinesCollectionController): void;
    static variable_config_default(variable_name: string): string | undefined;
    variable_config_default(variable_name: string): string | undefined;
    readAttribute(node: BaseJsNodeType, jsType: JsConnectionPointType, attribName: string, linesController: JsLinesCollectionController): string | undefined;
    static readAttribute(node: BaseJsNodeType, jsType: JsConnectionPointType, attribName: string, linesController: JsLinesCollectionController): string | undefined;
    handle_attribute_node(node: AttributeJsNode, jsType: JsConnectionPointType, attribName: string, linesController: JsLinesCollectionController): string | undefined;
}
