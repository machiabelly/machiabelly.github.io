/**
 * Creates a CSG ellipsoid.
 *
 *
 */
import { CSGSopNode } from './_BaseCSG';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CSGEllipsoidSopParamsConfig extends NodeParamsConfig {
    /** @param center */
    center: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param radius */
    radius: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param segments */
    segments: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class CSGEllipsoidSopNode extends CSGSopNode<CSGEllipsoidSopParamsConfig> {
    paramsConfig: CSGEllipsoidSopParamsConfig;
    static type(): SopType;
    private _center;
    private _radius;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
