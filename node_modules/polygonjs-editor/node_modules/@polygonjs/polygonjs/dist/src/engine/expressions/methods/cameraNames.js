"use strict";
import { Poly } from "../../Poly";
import { BaseMethod } from "./_Base";
export class CameraNamesExpression extends BaseMethod {
  static requiredArguments() {
    return [["string", "path to node"]];
  }
  findDependency(args) {
    return this.createDependencyFromIndexOrPath(args);
  }
  async processArguments(args) {
    if (args.length == 1) {
      const index_or_path = args[0];
      const container = await this.getReferencedNodeContainer(index_or_path);
      if (container) {
        const coreContent = container.coreContent();
        if (coreContent) {
          const objects = coreContent.threejsObjects().filter((object) => Poly.camerasRegister.objectRegistered(object));
          const list = new Array(objects.length);
          let i = 0;
          for (const object of objects) {
            list[i] = object.name;
            i++;
          }
          return list;
        }
      }
    }
    return [];
  }
}
