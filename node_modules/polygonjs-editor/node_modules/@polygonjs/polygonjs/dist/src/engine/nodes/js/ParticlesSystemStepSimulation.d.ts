/**
 * Steps through a particles simulation
 *
 *
 */
import { TypedJsNode } from './_Base';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { PolyNodeParamsConfig } from '../utils/poly/PolyNodeParamsConfig';
import { StringParam } from '../../params/String';
declare class ParticlesSystemStepSimulationJsParamsConfig extends PolyNodeParamsConfig {
    texturesCount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    textureName0: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName1: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName2: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName3: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName4: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName5: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName6: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName7: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName8: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    textureName9: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class ParticlesSystemStepSimulationJsNode extends TypedJsNode<ParticlesSystemStepSimulationJsParamsConfig> {
    readonly paramsConfig: ParticlesSystemStepSimulationJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    protected _textureNameParams(): StringParam[];
    setTextureName(index: number, textureName: string): void;
    private _expectedInputTypes;
    private _expectedInputName;
    private _expectedOutputTypes;
    private _expectedOutputName;
    setLines(linesController: JsLinesCollectionController): void;
    setTriggerableLines(linesController: JsLinesCollectionController): void;
    private _refToString;
    private _addRefs;
}
export {};
