/**
 * computes velocity from forces
 *
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class ComputeVelocityJsParamsConfig extends NodeParamsConfig {
    /** @param forces */
    forces: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param velocity */
    velocity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param dt */
    delta: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param drag */
    drag: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class ComputeVelocityJsNode extends TypedJsNode<ComputeVelocityJsParamsConfig> {
    paramsConfig: ComputeVelocityJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(linesController: JsLinesCollectionController): void;
}
export {};
