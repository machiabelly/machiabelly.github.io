/**
 * a subnet input is the input of a... subnet!
 *
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { NetworkChildNodeType } from '../../poly/NodeContext';
import { SubnetJsNode } from './Subnet';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class SubnetInputJsParamsConfig extends NodeParamsConfig {
}
export declare class SubnetInputJsNode extends TypedJsNode<SubnetInputJsParamsConfig> {
    paramsConfig: SubnetInputJsParamsConfig;
    static type(): NetworkChildNodeType;
    initializeNode(): void;
    parent(): SubnetJsNode | null;
    private _expectedOutputNames;
    expectedOutputTypes(): import("../../index_all").JsConnectionPointType[];
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
