/**
 * smoothes an attribute between neighbouring points
 *
 *
 *
 */
import { TypedGlNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
import { GlConnectionPointType } from '../utils/io/connections/Gl';
import { GlType } from '../../poly/registers/nodes/types/Gl';
declare class AdjacentUvAttribSmoothGlParamsConfig extends NodeParamsConfig {
    textureSize: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
    attribName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    attribValue: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    deltaThreshold: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    smoothAmount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class AdjacentUvAttribSmoothGlNode extends TypedGlNode<AdjacentUvAttribSmoothGlParamsConfig> {
    paramsConfig: AdjacentUvAttribSmoothGlParamsConfig;
    static type(): GlType;
    initializeNode(): void;
    glType(): GlConnectionPointType;
    attributeName(): string;
    setLines(linesController: ShadersCollectionController): void;
    private _templateFunctionDefinition;
}
export {};
