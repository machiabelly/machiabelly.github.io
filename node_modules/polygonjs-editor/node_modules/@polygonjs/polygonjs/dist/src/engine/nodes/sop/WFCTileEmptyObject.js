"use strict";
import { TypedSopNode } from "./_Base";
import { NodeParamsConfig } from "../utils/params/ParamsConfig";
import { SopType } from "../../poly/registers/nodes/types/Sop";
import { InputCloneMode } from "../../poly/InputCloneMode";
import { createDefaultEmptyTileObject, addEmptyTileObjectAttributes } from "../../../core/wfc/WFCDebugTileObjects";
class WFCTileEmptyObjectSopParamsConfig extends NodeParamsConfig {
}
const ParamsConfig = new WFCTileEmptyObjectSopParamsConfig();
export class WFCTileEmptyObjectSopNode extends TypedSopNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
  }
  static type() {
    return SopType.WFC_TILE_EMPTY_OBJECT;
  }
  initializeNode() {
    this.io.inputs.setCount(0, 1);
    this.io.inputs.initInputsClonedState(InputCloneMode.FROM_NODE);
  }
  async cook(inputCoreGroups) {
    const coreGroup0 = inputCoreGroups[0];
    const inputObject = coreGroup0 ? coreGroup0.threejsObjects()[0] : null;
    const tileObject = inputObject != null ? inputObject : createDefaultEmptyTileObject();
    addEmptyTileObjectAttributes(tileObject);
    this.setObjects([tileObject]);
  }
}
