/**
 * Creates tangents
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { TangentMode } from '../../operations/sop/Tangent';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class TangentSopParamsConfig extends NodeParamsConfig {
    /** @param select which objects this applies the actor behavior to */
    group: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param mode */
    mode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param closed */
    closed: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param tangent attribute name */
    tangentName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class TangentSopNode extends TypedSopNode<TangentSopParamsConfig> {
    readonly paramsConfig: TangentSopParamsConfig;
    static type(): SopType;
    protected initializeNode(): void;
    private _operation;
    cook(inputCoreGroups: CoreGroup[]): void;
    setMode(mode: TangentMode): void;
}
export {};
