import { NamedFunction1 } from './_Base';
export declare class easeI2 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeO2 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeIO2 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeI3 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeO3 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeIO3 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeI4 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeO4 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeIO4 extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeSinI extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeSinO extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeSinIO extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeElasticI extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeElasticO extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
export declare class easeElasticIO extends NamedFunction1<[number]> {
    static type(): string;
    func: (num: number) => number;
}
