import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class AttribRemapSopParamsConfig extends NodeParamsConfig {
    /** @param name of the attribute to remap */
    name: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param ramp used to remap */
    ramp: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.RAMP>;
    /** @param toggle if you want to create a new attribute */
    changeName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param new attribute name */
    newName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class AttribRemapSopNode extends TypedSopNode<AttribRemapSopParamsConfig> {
    paramsConfig: AttribRemapSopParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
    private _remapAttribute;
    private _get_remaped_values;
    private _getNormalizedFloat;
    private _getNormalizedVector2;
    private _getNormalizedVector3;
    private _getNormalizedVector4;
}
export {};
