import { TypedNode } from '../_Base';
import { NodeContext } from '../../poly/NodeContext';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { FlagsControllerB } from '../utils/FlagsController';
import { AudioBuilder } from '../../../core/audio/AudioBuilder';
/**
 *
 *
 * TypedAnimNode is the base class for all nodes that process animations. This inherits from [TypedNode](/docs/api/TypedNode).
 *
 */
export declare class TypedAudioNode<K extends NodeParamsConfig> extends TypedNode<NodeContext.AUDIO, K> {
    readonly flags: FlagsControllerB;
    static context(): NodeContext;
    initializeBaseNode(): void;
    protected setAudioBuilder(audioBuilder: AudioBuilder): void;
}
export type BaseAudioNodeType = TypedAudioNode<NodeParamsConfig>;
export declare class BaseAudioNodeClass extends TypedAudioNode<NodeParamsConfig> {
}
