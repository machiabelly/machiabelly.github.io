"use strict";
import { ObjectNamedFunction3 } from "./_Base";
import { getOrCreateObjectAttributeRef } from "../../core/reactivity/ObjectAttributeReactivityCreateRef";
import { _matchArrayLengthWithType } from "./_ArrayUtils";
import { getObjectChildrenCountRef } from "../../core/reactivity/ObjectHierarchyReactivity";
import { dummyReadRefVal } from "./_Param";
export class getChildrenAttributesRef extends ObjectNamedFunction3 {
  static type() {
    return "getChildrenAttributesRef";
  }
  func(object3D, attribName, type, values) {
    dummyReadRefVal(getObjectChildrenCountRef(object3D).value);
    _matchArrayLengthWithType(object3D.children, values, type);
    let i = 0;
    const children = object3D.children;
    for (let child of children) {
      const _refs = getOrCreateObjectAttributeRef(child, attribName, type);
      values[i] = _refs.current;
      i++;
    }
    return values;
  }
}
