import { BaseNodeGlMathFunctionArg2GlNode } from './_BaseMathFunction';
import { GlConnectionPointType } from '../utils/io/connections/Gl';
interface MathArg2Options {
    in?: [string, string];
    out?: string;
    default_in_type?: GlConnectionPointType;
    allowed_in_types?: GlConnectionPointType[];
    out_type?: GlConnectionPointType;
    method?: string;
    functions?: string[];
}
export declare function MathFunctionArg2Factory(type: string, options?: MathArg2Options): typeof BaseNodeGlMathFunctionArg2GlNode;
declare const DistanceGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class DistanceGlNode extends DistanceGlNode_base {
}
declare const DotGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class DotGlNode extends DotGlNode_base {
}
declare const MaxGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class MaxGlNode extends MaxGlNode_base {
}
declare const MinGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class MinGlNode extends MinGlNode_base {
}
declare const ModGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class ModGlNode extends ModGlNode_base {
    paramDefaultValue(name: string): number;
    _expected_input_types(): GlConnectionPointType[];
}
declare const PowGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class PowGlNode extends PowGlNode_base {
}
declare const ReflectGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class ReflectGlNode extends ReflectGlNode_base {
}
declare const StepGlNode_base: typeof BaseNodeGlMathFunctionArg2GlNode;
export declare class StepGlNode extends StepGlNode_base {
}
export {};
