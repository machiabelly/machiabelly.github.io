/**
 * Creates a hemisphere light.
 *
 *
 */
import { HemisphereLight } from 'three';
import { TypedLightObjNode } from './_BaseLight';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { LightType } from '../../poly/registers/nodes/types/Light';
declare const HemisphereLightObjParamsConfig_base: {
    new (...args: any[]): {
        skyColor: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
        groundColor: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
        intensity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        position: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
        name: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    };
} & typeof NodeParamsConfig;
declare class HemisphereLightObjParamsConfig extends HemisphereLightObjParamsConfig_base {
}
export declare class HemisphereLightObjNode extends TypedLightObjNode<HemisphereLight, HemisphereLightObjParamsConfig> {
    paramsConfig: HemisphereLightObjParamsConfig;
    static type(): LightType;
    private __operation__;
    private _operation;
    createLight(): HemisphereLight;
    protected updateLightParams(): void;
}
export {};
