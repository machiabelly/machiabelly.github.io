/**
 * compares if a number is within a range.
 *
 * @remarks
 *
 * Using this node is similar to using 2 [gl/compare](/docs/nodes/gl/compare) and a [gl/and](/docs/nodes/gl/and).
 *
 *
 *
 */
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TypedGlNode } from './_Base';
declare class InRangeGlParamsConfig extends NodeParamsConfig {
}
export declare class InRangeGlNode extends TypedGlNode<InRangeGlParamsConfig> {
    paramsConfig: InRangeGlParamsConfig;
    static type(): string;
    static OUTPUT: string;
    static INPUT: string;
    static INPUT_MIN: string;
    static INPUT_MAX: string;
    initializeNode(): void;
    private _expected_input_types;
    setLines(shadersCollectionController: ShadersCollectionController): void;
}
export {};
