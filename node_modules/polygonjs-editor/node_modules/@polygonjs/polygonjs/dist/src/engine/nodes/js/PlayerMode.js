"use strict";
import { TypedJsNode } from "./_Base";
import { NodeParamsConfig } from "../utils/params/ParamsConfig";
import { JsConnectionPointType, JsConnectionPoint } from "../utils/io/connections/Js";
import { Poly } from "../../Poly";
class PlayerModeJsParamsConfig extends NodeParamsConfig {
}
const ParamsConfig = new PlayerModeJsParamsConfig();
const _PlayerModeJsNode = class extends TypedJsNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
  }
  static type() {
    return "playerMode";
  }
  initializeNode() {
    this.io.outputs.setNamedOutputConnectionPoints([
      new JsConnectionPoint(_PlayerModeJsNode.OUTPUT_NAME, JsConnectionPointType.BOOLEAN)
    ]);
  }
  setLines(linesController) {
    const func = Poly.namedFunctionsRegister.getFunction("playerMode", this, linesController);
    const varName = this.jsVarName(_PlayerModeJsNode.OUTPUT_NAME);
    linesController.addBodyOrComputed(this, [
      {
        dataType: JsConnectionPointType.BOOLEAN,
        varName,
        value: func.asString()
      }
    ]);
  }
};
export let PlayerModeJsNode = _PlayerModeJsNode;
PlayerModeJsNode.OUTPUT_NAME = "mode";
