import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TypedInputEventNode } from './_BaseInput';
import { EventContext } from '../../scene/utils/events/_BaseEventsController';
import { EventInputType } from '../../poly/registers/nodes/types/Event';
declare class TouchEventParamsConfig extends NodeParamsConfig {
    /** @param toggle on to allow any event to be listened to */
    active: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param set which element triggers the event */
    element: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param toggle on to listen to touchstart events */
    touchstart: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param toggle on to listen to touchmove events */
    touchmove: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param toggle on to listen to touchend events */
    touchend: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class TouchEventNode extends TypedInputEventNode<TouchEventParamsConfig> {
    paramsConfig: TouchEventParamsConfig;
    static type(): EventInputType;
    protected acceptedEventTypes(): Set<import("../../../core/event/TouchEventType").TouchEventType>;
    initializeNode(): void;
    processEvent(eventContext: EventContext<TouchEvent>): void;
}
export {};
