/**
 * Creates a constant
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { JsConnectionPointType } from '../utils/io/connections/Js';
declare class ConstantJsParamsConfig extends NodeParamsConfig {
    type: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    boolean: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    color: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
    float: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    int: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    string: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    vector2: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
    vector3: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    vector4: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR4>;
}
export declare class ConstantJsNode extends TypedJsNode<ConstantJsParamsConfig> {
    paramsConfig: ConstantJsParamsConfig;
    static type(): string;
    static readonly OUTPUT_NAME = "val";
    initializeNode(): void;
    setLines(linesController: JsLinesCollectionController): void;
    private _currentConnectionType;
    currentParam(): import("../../index_all").BooleanParam | import("../../index_all").ColorParam | import("../../index_all").FloatParam | import("../../index_all").IntegerParam | import("../../index_all").StringParam | import("../../index_all").Vector2Param | import("../../index_all").Vector3Param | import("../../index_all").Vector4Param;
    currentValue(): string | undefined;
    setJsType(type: JsConnectionPointType): void;
}
export {};
