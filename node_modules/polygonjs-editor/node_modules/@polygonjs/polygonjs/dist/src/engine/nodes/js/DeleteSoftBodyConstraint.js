"use strict";
import { BaseTriggerAndObjectJsNode } from "./_BaseTriggerAndObject";
import { Poly } from "../../Poly";
import { NodeParamsConfig, ParamConfig } from "../utils/params/ParamsConfig";
import { inputObject3D } from "./_BaseObject3D";
class DeleteSoftBodyConstraintJsParamsConfig extends NodeParamsConfig {
  constructor() {
    super(...arguments);
    this.id = ParamConfig.INTEGER(0, {
      range: [-1, 100],
      rangeLocked: [true, false]
    });
  }
}
const ParamsConfig = new DeleteSoftBodyConstraintJsParamsConfig();
export class DeleteSoftBodyConstraintJsNode extends BaseTriggerAndObjectJsNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
  }
  static type() {
    return "deleteSoftBodyConstraint";
  }
  setTriggerableLines(shadersCollectionController) {
    const object3D = inputObject3D(this, shadersCollectionController);
    const id = this.variableForInputParam(shadersCollectionController, this.p.id);
    const func = Poly.namedFunctionsRegister.getFunction(
      "softBodyConstraintDelete",
      this,
      shadersCollectionController
    );
    const bodyLine = func.asString(object3D, id);
    shadersCollectionController.addTriggerableLines(this, [bodyLine]);
  }
}
