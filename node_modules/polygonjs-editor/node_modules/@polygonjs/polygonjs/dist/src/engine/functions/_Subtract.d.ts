import { Vector2, Vector3, Vector4 } from 'three';
import { NamedFunction, NamedFunction2 } from './_Base';
export declare class subtractNumber extends NamedFunction<Array<number>, Array<string>> {
    static type(): string;
    func(...args: Array<number>): number;
}
type AvailableItem = Vector2 | Vector3 | Vector4;
export declare class subtractVector<V extends AvailableItem> extends NamedFunction<Array<V>, Array<string>> {
    static type(): string;
    func(...args: Array<V>): V;
}
export declare class subtractVectorNumber<V extends AvailableItem> extends NamedFunction2<[V, number]> {
    static type(): string;
    func(vector: V, number: number): V;
}
export {};
