import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TypedSopNode } from './_Base';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class MapboxTransformSopParamsConfig extends NodeParamsConfig {
    /** @param sets if this node should transform objects or geometries */
    applyOn: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param camera longitude */
    longitude: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param camera latitude */
    latitude: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class MapboxTransformSopNode extends TypedSopNode<MapboxTransformSopParamsConfig> {
    paramsConfig: MapboxTransformSopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    private _transformer;
    cook(inputContents: CoreGroup[]): void;
    private _applyTransform;
    private _updateGeometries;
    private _updateObjects;
}
export {};
