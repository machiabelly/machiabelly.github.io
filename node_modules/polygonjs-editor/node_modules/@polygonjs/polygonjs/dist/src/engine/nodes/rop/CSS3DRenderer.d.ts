import { TypedRopNode } from './_Base';
import { CSS3DRenderer } from '../../../core/render/CSSRenderers/CSS3DRenderer';
import { RopType } from '../../poly/registers/nodes/types/Rop';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class CSS3DRendererRopParamsConfig extends NodeParamsConfig {
    /** @param css rules to be added in the html document */
    css: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class CSS3DRendererRopNode extends TypedRopNode<CSS3DRendererRopParamsConfig> {
    paramsConfig: CSS3DRendererRopParamsConfig;
    static type(): Readonly<RopType.CSS3D>;
    private _renderersByCanvasId;
    createRenderer(canvas: HTMLCanvasElement): CSS3DRenderer;
    mountRenderer(canvas: HTMLCanvasElement): void;
    unmountRenderer(canvas: HTMLCanvasElement): void;
    renderer(canvas: HTMLCanvasElement): CSS3DRenderer;
    cook(): void;
    private _updateRenderer;
    private _updateCSS;
    private __CSSElement;
    private _CSSElement;
    private _findElement;
    private _createElement;
    private _CSSElementId;
}
export {};
