import { Object3D, Color, Quaternion, Vector2, Vector3, Vector4 } from 'three';
import { BaseNamedFunction, ObjectNamedFunction3, ObjectNamedFunction4 } from './_Base';
export declare function _setPointAttributeVector3Name(namedFunction: BaseNamedFunction, attribName: string): (object3D: Object3D, ptnum: number, newValue: Vector3, lerp: number) => void;
export declare function _setPointAttributeVector3MultName(namedFunction: BaseNamedFunction, attribName: string): (object3D: Object3D, ptnum: number, newValue: Vector3, mult: number, lerp: number) => void;
export declare function _setPointAttributeQuaternionName(namedFunction: BaseNamedFunction, attribName: string): (object3D: Object3D, ptnum: number, newValue: Quaternion, lerp: number) => void;
export declare function _setPointAttributeNumberForNamedFunction(namedFunction: BaseNamedFunction): (object3D: Object3D, attribName: string, ptnum: number, newValue: number, lerp: number) => void;
export declare function _setPointAttributeColorForNamedFunction(namedFunction: BaseNamedFunction): (object3D: Object3D, attribName: string, ptnum: number, newValue: Color, lerp: number) => void;
export declare function _setPointAttributeVector2ForNamedFunction(namedFunction: BaseNamedFunction): (object3D: Object3D, attribName: string, ptnum: number, newValue: Vector2, lerp: number) => void;
export declare function _setPointAttributeVector3ForNamedFunction(namedFunction: BaseNamedFunction): (object3D: Object3D, attribName: string, ptnum: number, newValue: Vector3, lerp: number) => void;
export declare function _setPointAttributeVector4ForNamedFunction(namedFunction: BaseNamedFunction): (object3D: Object3D, attribName: string, ptnum: number, newValue: Vector4, lerp: number) => void;
export declare class setPointPosition extends ObjectNamedFunction3<[number, Vector3, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, ptnum: number, newValue: Vector3, lerp: number) => void;
}
export declare class setPointAttributeNumber extends ObjectNamedFunction4<[string, number, number, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, attribName: string, ptnum: number, newValue: number, lerp: number) => void;
}
export declare class setPointAttributeColor extends ObjectNamedFunction4<[string, number, Color, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, attribName: string, ptnum: number, newValue: Color, lerp: number) => void;
}
export declare class setPointAttributeVector2 extends ObjectNamedFunction4<[string, number, Vector2, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, attribName: string, ptnum: number, newValue: Vector2, lerp: number) => void;
}
export declare class setPointAttributeVector3 extends ObjectNamedFunction4<[string, number, Vector3, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, attribName: string, ptnum: number, newValue: Vector3, lerp: number) => void;
}
export declare class setPointAttributeVector4 extends ObjectNamedFunction4<[string, number, Vector4, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, attribName: string, ptnum: number, newValue: Vector4, lerp: number) => void;
}
