/**
 * multiply a vector by a matrix
 *
 *
 *
 */
import { TypedGlNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { GlConnectionPointType } from '../utils/io/connections/Gl';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
declare class MultVectorMatrixGlParamsConfig extends NodeParamsConfig {
}
export declare class MultVectorMatrixGlNode extends TypedGlNode<MultVectorMatrixGlParamsConfig> {
    paramsConfig: MultVectorMatrixGlParamsConfig;
    static type(): Readonly<'multVectorMatrix'>;
    initializeNode(): void;
    protected _expectedInputTypes(): GlConnectionPointType[];
    protected _expectedOutputTypes(): GlConnectionPointType[];
    _glInputName(index: number): string;
    _glOutputName(index: number): string;
    setLines(linesController: ShadersCollectionController): void;
}
export {};
