"use strict";
import { TypedJsNode } from "./_Base";
import { NodeParamsConfig } from "../utils/params/ParamsConfig";
import { JsConnectionPoint, JsConnectionPointType } from "../utils/io/connections/Js";
import { Poly } from "../../Poly";
const OUTPUT_NAME = "isTouchDevice";
class IsTouchDeviceJsParamsConfig extends NodeParamsConfig {
}
const ParamsConfig = new IsTouchDeviceJsParamsConfig();
export class IsTouchDeviceJsNode extends TypedJsNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
  }
  static type() {
    return "isTouchDevice";
  }
  initializeNode() {
    super.initializeNode();
    this.io.outputs.setNamedOutputConnectionPoints([
      new JsConnectionPoint(OUTPUT_NAME, JsConnectionPointType.BOOLEAN)
    ]);
  }
  setLines(linesController) {
    const varName = this.jsVarName(OUTPUT_NAME);
    const func = Poly.namedFunctionsRegister.getFunction("isTouchDevice", this, linesController);
    linesController.addBodyOrComputed(this, [
      { dataType: JsConnectionPointType.BOOLEAN, varName, value: func.asString() }
    ]);
    return;
  }
}
