/**
 * Updates points with JS nodes
 *
 *
 */
import { SopType } from '../../poly/registers/nodes/types/Sop';
import { PointBuilderPersistedConfig } from '../js/code/assemblers/pointBuilder/PointBuilderPersistedConfig';
import { AssemblerName } from '../../poly/registers/assemblers/_BaseRegister';
import { BasePointBuilderSopNode, BasePointBuilderSopParamsConfig } from './_BasePointBuilder';
import { PointBuilderEvaluator } from '../js/code/assemblers/pointBuilder/PointBuilderEvaluator';
import { PointContainer } from '../js/code/assemblers/pointBuilder/PointBuilderAssemblerCommon';
import { CoreObjectType, ObjectContent } from '../../../core/geometry/ObjectContent';
declare class PointBuilderSopParamsConfig extends BasePointBuilderSopParamsConfig {
    /** @param updateNormals */
    updateNormals: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class PointBuilderSopNode extends BasePointBuilderSopNode<PointBuilderSopParamsConfig> {
    paramsConfig: PointBuilderSopParamsConfig;
    static type(): SopType;
    readonly persisted_config: PointBuilderPersistedConfig;
    usedAssembler(): Readonly<AssemblerName.JS_POINT_BUILDER>;
    protected _pointContainer: PointContainer;
    protected _processObject<T extends CoreObjectType>(object: ObjectContent<T>, objnum: number, evaluator: PointBuilderEvaluator): void;
}
export {};
