/**
 * A subnet to create EVENT nodes
 *
 */
import { ParamLessBaseNetworkMatNode } from './_BaseManager';
import { NodeContext, NetworkNodeType } from '../../poly/NodeContext';
import { EventNodeChildrenMap } from '../../poly/registers/nodes/Event';
import { BaseEventNodeType } from '../event/_Base';
import { Constructor, valueof } from '../../../types/GlobalTypes';
import { NodeCreateOptions } from '../utils/hierarchy/ChildrenController';
export declare class EventsNetworkMatNode extends ParamLessBaseNetworkMatNode {
    static type(): NetworkNodeType;
    protected _childrenControllerContext: NodeContext;
    createNode<S extends keyof EventNodeChildrenMap>(node_class: S, options?: NodeCreateOptions): EventNodeChildrenMap[S];
    createNode<K extends valueof<EventNodeChildrenMap>>(node_class: Constructor<K>, options?: NodeCreateOptions): K;
    children(): BaseEventNodeType[];
    nodesByType<K extends keyof EventNodeChildrenMap>(type: K): EventNodeChildrenMap[K][];
}
