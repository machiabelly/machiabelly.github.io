/**
 * allows the viewer created by this camera to track markers
 *
 *
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { HierarchyParamConfigAll } from '../utils/params/ParamsConfig';
import { CameraSopNodeType } from '../../poly/NodeContext';
import { MarkerTrackingSourceMode, MarkerTrackingTransformMode } from '../../../core/webXR/markerTracking/Common';
declare const CameraWebXRARMarkerTrackingSopParamsConfig_base: {
    new (...args: any[]): {
        sourceMode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        sourceUrl: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
        transformMode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        smooth: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        smoothCount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        barCodeType: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
        barCodeValue: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    };
} & typeof HierarchyParamConfigAll;
declare class CameraWebXRARMarkerTrackingSopParamsConfig extends CameraWebXRARMarkerTrackingSopParamsConfig_base {
}
export declare class CameraWebXRARMarkerTrackingSopNode extends TypedSopNode<CameraWebXRARMarkerTrackingSopParamsConfig> {
    readonly paramsConfig: CameraWebXRARMarkerTrackingSopParamsConfig;
    static type(): CameraSopNodeType;
    protected initializeNode(): void;
    private _operation;
    cook(inputCoreGroups: CoreGroup[]): void;
    setSourceMode(sourceMode: MarkerTrackingSourceMode): void;
    sourceMode(): MarkerTrackingSourceMode;
    setTransformMode(sourceMode: MarkerTrackingTransformMode): void;
    transformMode(): MarkerTrackingTransformMode;
}
export {};
