import { Object3D, Texture, Vector3, Vector4 } from 'three';
import { NamedFunction2, ObjectNamedFunction1, ObjectNamedFunction2 } from './_Base';
export declare class trackHand extends ObjectNamedFunction1<[Texture]> {
    static type(): string;
    func(object3D: Object3D, texture: Texture): void;
}
export declare class trackHandGetNormalizedLandmarks extends ObjectNamedFunction2<[number, Vector4[]]> {
    static type(): string;
    func(object3D: Object3D, handIndex: number, target: Vector4[]): Vector4[];
}
export declare class trackHandGetWorldLandmarks extends ObjectNamedFunction2<[number, Vector4[]]> {
    static type(): string;
    func(object3D: Object3D, handIndex: number, target: Vector4[]): Vector4[];
}
export declare class getTrackedHandThumbDirection extends NamedFunction2<[Vector4[], Vector3]> {
    static type(): string;
    func(values: Vector4[], target: Vector3): Vector3;
}
export declare class getTrackedHandIndexDirection extends NamedFunction2<[Vector4[], Vector3]> {
    static type(): string;
    func(values: Vector4[], target: Vector3): Vector3;
}
export declare class getTrackedHandMiddleDirection extends NamedFunction2<[Vector4[], Vector3]> {
    static type(): string;
    func(values: Vector4[], target: Vector3): Vector3;
}
export declare class getTrackedHandRingDirection extends NamedFunction2<[Vector4[], Vector3]> {
    static type(): string;
    func(values: Vector4[], target: Vector3): Vector3;
}
export declare class getTrackedHandPinkyDirection extends NamedFunction2<[Vector4[], Vector3]> {
    static type(): string;
    func(values: Vector4[], target: Vector3): Vector3;
}
