import { TypedPostNode, TypedPostNodeContext } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { EffectPass } from 'postprocessing';
import { PostType } from '../../poly/registers/nodes/types/Post';
declare class TexturePostParamsConfig extends NodeParamsConfig {
    /** @param texture */
    texture: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.NODE_PATH>;
    /** @param opacity */
    opacity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param render mode */
    blendFunction: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class TexturePostNode extends TypedPostNode<EffectPass, TexturePostParamsConfig> {
    paramsConfig: TexturePostParamsConfig;
    static type(): PostType;
    private _rendererSize;
    createPass(context: TypedPostNodeContext): EffectPass;
    updatePass(pass: EffectPass): Promise<void>;
}
export {};
