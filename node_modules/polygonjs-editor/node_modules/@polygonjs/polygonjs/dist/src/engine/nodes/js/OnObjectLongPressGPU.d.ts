/**
 * sends a trigger when an object is LongPressed
 *
 *
 */
import { JsType } from '../../poly/registers/nodes/types/Js';
import { EvaluatorEventData } from './code/assemblers/actor/ActorEvaluator';
import { GPUOnObjectPointerEventJsParamsConfig, ExtendableOnObjectPointerEventJsNode } from './_BaseOnObjectPointerEvent';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare const OnObjectLongPressGPUJsParamsConfig_base: {
    new (...args: any[]): {
        buttonLeft: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        buttonMiddle: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        buttonRight: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        ctrl: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        shift: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        alt: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    };
} & {
    new (...args: any[]): {
        duration: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        maxCursorMoveDistance: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    };
} & typeof GPUOnObjectPointerEventJsParamsConfig;
export declare class OnObjectLongPressGPUJsParamsConfig extends OnObjectLongPressGPUJsParamsConfig_base {
}
export declare class OnObjectLongPressGPUJsNode extends ExtendableOnObjectPointerEventJsNode<OnObjectLongPressGPUJsParamsConfig> {
    readonly paramsConfig: OnObjectLongPressGPUJsParamsConfig;
    static type(): JsType;
    isTriggering(): boolean;
    eventData(): EvaluatorEventData[] | undefined;
    initializeNode(): void;
    setLines(linesController: JsLinesCollectionController): void;
    setTriggeringLines(linesController: JsLinesCollectionController, triggeredMethods: string): void;
    private _addDistanceRef;
}
export {};
