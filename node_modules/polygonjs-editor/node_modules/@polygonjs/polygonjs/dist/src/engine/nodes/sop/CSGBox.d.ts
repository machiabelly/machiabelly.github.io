/**
 * Creates a cube.
 *
 *
 */
import { CSGSopNode } from './_BaseCSG';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CSGBoxSopParamsConfig extends NodeParamsConfig {
    /** @param size */
    size: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>; /** @param sizes */
    sizes: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param center */
    center: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param bevel */
    rounded: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param bevel radius */
    roundedRadius: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param bevel segments */
    roundedSegments: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class CSGBoxSopNode extends CSGSopNode<CSGBoxSopParamsConfig> {
    paramsConfig: CSGBoxSopParamsConfig;
    static type(): SopType;
    private _center;
    private _sizes;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
