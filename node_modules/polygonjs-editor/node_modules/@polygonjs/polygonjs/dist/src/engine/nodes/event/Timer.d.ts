/**
 * Timer to trigger events at certain intervals
 *
 *
 *
 */
import { TypedEventNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class TimerEventParamsConfig extends NodeParamsConfig {
    /** @param period between each interval */
    period: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param number of times the timer should repeat. Set to -1 to never stop */
    count: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class TimerEventNode extends TypedEventNode<TimerEventParamsConfig> {
    paramsConfig: TimerEventParamsConfig;
    static type(): string;
    initializeNode(): void;
    private _timer_active;
    private _current_count;
    private _start_timer;
    protected _stop_timer(): void;
    private _run_timer;
}
export {};
