/**
 * Creates an ambient light.
 *
 * @remarks
 * This is very similar to the [object level AmbientLight](https://polygonjs.com/docs/nodes/obj/AmbientLight), but can be more useful if you want to instanciate it or process it using other SOP nodes.
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare const AmbientLightSopParamsConfig_base: {
    new (...args: any[]): {
        color: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
        intensity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        name: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    };
} & typeof NodeParamsConfig;
declare class AmbientLightSopParamsConfig extends AmbientLightSopParamsConfig_base {
}
export declare class AmbientLightSopNode extends TypedSopNode<AmbientLightSopParamsConfig> {
    paramsConfig: AmbientLightSopParamsConfig;
    static type(): string;
    initializeNode(): void;
    private _operation;
    cook(input_contents: CoreGroup[]): void;
}
export {};
