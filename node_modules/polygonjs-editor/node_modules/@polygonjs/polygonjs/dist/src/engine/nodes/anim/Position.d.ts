/**
 * Sets how the position of an animation
 *
 *
 */
import { TypedAnimNode } from './_Base';
import { TimelineBuilder } from '../../../core/animation/TimelineBuilder';
import { AnimationPositionMode, AnimationPositionRelativeTo } from '../../../core/animation/Position';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class PositionAnimParamsConfig extends NodeParamsConfig {
    /** @param sets the mode of the position. It can either be relative or absolute */
    mode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param if sets to relative, sets if it is relative to the start or end */
    relativeTo: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param offset */
    offset: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class PositionAnimNode extends TypedAnimNode<PositionAnimParamsConfig> {
    paramsConfig: PositionAnimParamsConfig;
    static type(): string;
    initializeNode(): void;
    setMode(mode: AnimationPositionMode): void;
    setRelativeTo(relativeTo: AnimationPositionRelativeTo): void;
    cook(input_contents: TimelineBuilder[]): void;
}
export {};
