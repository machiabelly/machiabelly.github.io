import { WebGLRenderer, WebGLRenderTarget } from 'three';
import { Effect, BlendFunction, EffectComposer } from 'postprocessing';
export { BlendFunction };
import { IUniforms } from '../../../../core/geometry/Material';
interface BuilderEffectOptions {
    fragmentShader: string;
    useOutputBuffer: boolean;
}
export declare class BuilderEffect extends Effect {
    private _composerInput1;
    private options;
    constructor(_composerInput1: EffectComposer, options: BuilderEffectOptions);
    updateFragmentShader(fragmentShader: string): void;
    updateUniforms(uniforms: IUniforms): void;
    update(renderer: WebGLRenderer, inputBuffer: WebGLRenderTarget, deltaTime: number): void;
    setSize(width: number, height: number): void;
}
