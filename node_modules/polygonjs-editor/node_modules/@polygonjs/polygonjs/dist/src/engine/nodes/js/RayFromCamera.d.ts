/**
 * gets the ray from a camera
 *
 * @remarks
 *
 * the parameter x and y should be in the [-1,1] range
 *
 * x = 0, y = 0  : canvas center
 * x = -1, y = -1: bottom left corner
 * x = -1, y = 1 : top left corner
 * x = 1, y = -1 : bottom right corner
 * x = 1, y = 1  : top right corner
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsType } from '../../poly/registers/nodes/types/Js';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class RayFromCameraJsParamsConfig extends NodeParamsConfig {
    /** @param x position in screen space  */
    x: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param y position in screen space */
    y: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class RayFromCameraJsNode extends TypedJsNode<RayFromCameraJsParamsConfig> {
    paramsConfig: RayFromCameraJsParamsConfig;
    static type(): JsType;
    initializeNode(): void;
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
