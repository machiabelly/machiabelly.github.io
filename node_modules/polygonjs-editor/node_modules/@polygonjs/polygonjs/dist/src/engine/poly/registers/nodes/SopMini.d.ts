import { ActorSopNode } from '../../../nodes/sop/Actor';
import { AttribCreateSopNode } from '../../../nodes/sop/AttribCreate';
import { BoxSopNode } from '../../../nodes/sop/Box';
import { CodeSopNode } from '../../../nodes/sop/Code';
import { CopySopNode } from '../../../nodes/sop/Copy';
import { MaterialSopNode } from '../../../nodes/sop/Material';
import { PlaneSopNode } from '../../../nodes/sop/Plane';
import { SphereSopNode } from '../../../nodes/sop/Sphere';
import { EventsNetworkSopNode } from '../../../nodes/sop/EventsNetwork';
export interface GeoNodeChildrenMap {
    actor: ActorSopNode;
    attribCreate: AttribCreateSopNode;
    box: BoxSopNode;
    code: CodeSopNode;
    copy: CopySopNode;
    material: MaterialSopNode;
    plane: PlaneSopNode;
    sphere: SphereSopNode;
    eventsNetwork: EventsNetworkSopNode;
}
import { PolyEngine } from '../../../Poly';
export declare class SopRegister {
    static run(poly: PolyEngine): void;
}
