/**
 * Sequences output nodes one after the other.
 *
 * @remarks
 * This can be useful to ensure a specific order of events.
 *
 *
 */
import { TypedEventNode } from './_Base';
import { EventContext } from '../../scene/utils/events/_BaseEventsController';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class PassEventParamsConfig extends NodeParamsConfig {
    /** @param number of possible outputs */
    outputsCount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class SequenceEventNode extends TypedEventNode<PassEventParamsConfig> {
    paramsConfig: PassEventParamsConfig;
    static type(): string;
    initializeNode(): void;
    private _expected_output_types;
    protected _output_name(index: number): string;
    processEvent(event_context: EventContext<Event>): void;
}
export {};
