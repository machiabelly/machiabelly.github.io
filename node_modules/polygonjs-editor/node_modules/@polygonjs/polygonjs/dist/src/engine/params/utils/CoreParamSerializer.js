"use strict";
export class CoreParamSerializer {
  constructor(param) {
    this.param = param;
  }
  toJSON() {
    const data = {
      name: this.param.name(),
      type: this.param.type(),
      raw_input: this.rawInput(),
      value: this.value(),
      value_pre_conversion: this.value_pre_conversion(),
      expression: this.expression(),
      graph_node_id: this.param.graphNodeId(),
      // is_dirty: this.param.isDirty(),
      error_message: this.error_message(),
      is_visible: this.is_visible(),
      editable: this.editable(),
      // folder_name: this.param.uiData.folder_name,
      components: void 0
    };
    if (this.param.isMultiple() && this.param.components) {
      data["components"] = this.param.components.map((component) => component.graphNodeId());
    }
    return data;
  }
  rawInput() {
    return this.param.rawInputSerialized();
  }
  value() {
    return this.param.valueSerialized();
  }
  value_pre_conversion() {
    return this.param.valuePreConversionSerialized();
  }
  expression() {
    var _a;
    return this.param.hasExpression() ? (_a = this.param.expressionController) == null ? void 0 : _a.expression() : void 0;
  }
  error_message() {
    return this.param.states.error.message();
  }
  is_visible() {
    return this.param.options.isVisible();
  }
  editable() {
    return this.param.options.editable();
  }
}
