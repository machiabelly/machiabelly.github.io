/**
 * intersection of 2 SDFs
 *
 * @remarks
 *
 * based on [https://iquilezles.org/articles/distfunctions/](https://iquilezles.org/articles/distfunctions/)
 */
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { TypedJsNode } from './_Base';
declare class SDFIntersectJsParamsConfig extends NodeParamsConfig {
    sdf0: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    sdf1: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    smooth: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    smoothFactor: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class SDFIntersectJsNode extends TypedJsNode<SDFIntersectJsParamsConfig> {
    paramsConfig: SDFIntersectJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
