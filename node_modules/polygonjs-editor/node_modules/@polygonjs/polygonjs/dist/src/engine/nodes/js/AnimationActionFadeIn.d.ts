/**
 * fades in an AnimationAction
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class AnimationActionFadeInJsParamsConfig extends NodeParamsConfig {
    /** @param fadeIn duration */
    duration: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param fade out other actions */
    fadeOutOtherActions: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param additional warping (gradually changes of the time scales) will be applied */
    warp: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param starts cross fade when the from action ends */
    startOnFromActionEnd: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class AnimationActionFadeInJsNode extends TypedJsNode<AnimationActionFadeInJsParamsConfig> {
    readonly paramsConfig: AnimationActionFadeInJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setTriggerableLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
