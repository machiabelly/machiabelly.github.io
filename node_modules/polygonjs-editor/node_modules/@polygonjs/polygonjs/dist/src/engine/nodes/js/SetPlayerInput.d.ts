/**
 * returns left/right/forward/backward values to be used by updatePlayer
 *
 *
 */
import { JsType } from '../../poly/registers/nodes/types/Js';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class SetPlayerInputParamsConfig extends NodeParamsConfig {
    /** @param stopEventsPropagation: even though this node can intercept keydown and keyup events, you may encounter situations where pressing spare or arrow keys would trigger a page scroll. This node currently does not handle those situation, and it is recommended to manually intercept those and call event.stopImmediatePropagation() and event.stopPropagation() on keypress events */
    stopEventsPropagation: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class SetPlayerInputJsNode extends TypedJsNode<SetPlayerInputParamsConfig> {
    paramsConfig: SetPlayerInputParamsConfig;
    static type(): JsType;
    initializeNode(): void;
    setTriggerableLines(shadersCollectionController: JsLinesCollectionController): void;
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
