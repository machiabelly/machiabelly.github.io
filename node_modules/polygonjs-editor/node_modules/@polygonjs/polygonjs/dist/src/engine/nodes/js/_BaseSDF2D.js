"use strict";
import { TypedJsNode } from "./_Base";
import { NodeParamsConfig, ParamConfig } from "../utils/params/ParamsConfig";
class BaseSDF2DJsParamsConfig extends NodeParamsConfig {
  constructor() {
    super(...arguments);
    this.position = ParamConfig.VECTOR2([0, 0]);
  }
}
export class BaseSDF2DJsNode extends TypedJsNode {
  // protected position(shadersCollectionController: ShadersCollectionController) {
  // 	const inputPosition = this.io.inputs.named_input(this.p.position.name());
  // 	const position = inputPosition
  // 		? this.variableForInputParam(shadersCollectionController, this.p.position)
  // 		: this._defaultPosition(shadersCollectionController);
  // 	return position;
  // }
  // private _defaultPosition(shadersCollectionController: ShadersCollectionController): string {
  // 	const sanitizedNodePath = CoreString.sanitizeName(this.path());
  // 	const varName = `${sanitizedNodePath}_${this.p.position.name()}`;
  // 	shadersCollectionController.addVariable(this, varName, new Vector3());
  // 	return `${varName}.copy(${VARS.position})`;
  // }
  // protected _addSDF2DMethods(shadersCollectionController: ShadersCollectionController) {
  // 	shadersCollectionController.addDefinitions(this, [new FunctionGLDefinition(this, SDFMethodsCommon)]);
  // 	shadersCollectionController.addDefinitions(this, [new FunctionGLDefinition(this, SDFMethods2D)]);
  // }
}
