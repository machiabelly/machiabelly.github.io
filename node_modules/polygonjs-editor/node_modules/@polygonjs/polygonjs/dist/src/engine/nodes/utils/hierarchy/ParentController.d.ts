import { BaseNodeType } from '../../_Base';
import { BaseNodeByContextMap, NodeContext } from '../../../poly/NodeContext';
export declare class HierarchyParentController {
    protected node: BaseNodeType;
    private _parent;
    private _on_set_parent_hooks;
    constructor(node: BaseNodeType);
    parent(): BaseNodeType | null;
    setParent(parent: BaseNodeType | null): void;
    firstAncestorWithContext<N extends NodeContext>(context: N): BaseNodeByContextMap[N] | null;
    findParent(callback: (parent: BaseNodeType) => boolean): BaseNodeType | null;
    path(relativeToParent?: BaseNodeType): string;
    onSetParent(): void;
    findNode(path: string | null): BaseNodeType | null;
}
