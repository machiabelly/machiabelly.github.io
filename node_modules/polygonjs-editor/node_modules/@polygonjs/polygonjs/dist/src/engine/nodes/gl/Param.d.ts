/**
 * Allows to create a uniform which can be modified from the material params panel
 *
 *
 */
import { GlType } from './../../poly/registers/nodes/types/Gl';
import { TypedGlNode } from './_Base';
import { GlConnectionPointType } from '../utils/io/connections/Gl';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { ParamType } from '../../poly/ParamType';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
declare class ParamGlParamsConfig extends NodeParamsConfig {
    name: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.STRING>;
    type: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.INTEGER>;
    asColor: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.BOOLEAN>;
}
export declare class ParamGlNode extends TypedGlNode<ParamGlParamsConfig> {
    paramsConfig: ParamGlParamsConfig;
    static type(): Readonly<GlType.PARAM>;
    initializeNode(): void;
    setLines(shadersCollectionController: ShadersCollectionController): void;
    paramsGenerating(): boolean;
    setParamConfigs(): void;
    uniformName(): string;
    setGlType(type: GlConnectionPointType): void;
    glType(): GlConnectionPointType;
}
export {};
