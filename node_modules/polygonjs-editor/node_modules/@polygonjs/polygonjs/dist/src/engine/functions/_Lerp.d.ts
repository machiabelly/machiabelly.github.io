import { Color, Vector2, Vector3, Vector4, Quaternion } from 'three';
import { NamedFunction3, NamedFunction4 } from './_Base';
export declare class lerpNumber extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(v1: number, v2: number, lerp: number): number;
}
export declare class lerpColor extends NamedFunction4<[Color, Color, number, Color]> {
    static type(): string;
    func(v1: Color, v2: Color, lerp: number, target: Color): Color;
}
export declare class lerpQuaternion extends NamedFunction4<[Quaternion, Quaternion, number, Quaternion]> {
    static type(): string;
    func(v1: Quaternion, v2: Quaternion, lerp: number, target: Quaternion): Quaternion;
}
export declare class lerpVector2 extends NamedFunction4<[Vector2, Vector2, number, Vector2]> {
    static type(): string;
    func(v1: Vector2, v2: Vector2, lerp: number, target: Vector2): Vector2;
}
export declare class lerpVector3 extends NamedFunction4<[Vector3, Vector3, number, Vector3]> {
    static type(): string;
    func(v1: Vector3, v2: Vector3, lerp: number, target: Vector3): Vector3;
}
export declare class lerpVector4 extends NamedFunction4<[Vector4, Vector4, number, Vector4]> {
    static type(): string;
    func(v1: Vector4, v2: Vector4, lerp: number, target: Vector4): Vector4;
}
