"use strict";
import { Vector2, ShaderMaterial } from "three";
import GodraysCompositorShader from "../gl/compositor.frag.glsl";
import GodraysCompositorVertexShader from "../gl/compositor.vert.glsl";
export class GodraysCompositorMaterial extends ShaderMaterial {
  constructor({ godrays, edgeStrength, edgeRadius, color, camera }) {
    const uniforms = {
      godrays: { value: godrays },
      sceneDiffuse: { value: null },
      sceneDepth: { value: null },
      edgeStrength: { value: edgeStrength },
      edgeRadius: { value: edgeRadius },
      near: { value: 0.1 },
      far: { value: 1e3 },
      color: { value: color },
      resolution: { value: new Vector2(1, 1) }
    };
    super({
      name: "GodraysCompositorMaterial",
      uniforms,
      depthWrite: false,
      depthTest: false,
      fragmentShader: GodraysCompositorShader,
      vertexShader: GodraysCompositorVertexShader
    });
    this.updateUniforms(edgeStrength, edgeRadius, color, camera.near, camera.far);
  }
  updateUniforms(edgeStrength, edgeRadius, color, near, far) {
    this.uniforms.edgeStrength.value = edgeStrength;
    this.uniforms.edgeRadius.value = edgeRadius;
    this.uniforms.color.value = color;
    this.uniforms.near.value = near;
    this.uniforms.far.value = far;
  }
  setSize(width, height) {
    this.uniforms.resolution.value.set(width, height);
  }
}
