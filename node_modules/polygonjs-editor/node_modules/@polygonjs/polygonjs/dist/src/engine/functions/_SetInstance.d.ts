import { Object3D, Vector3, Quaternion } from 'three';
import { ObjectNamedFunction3, ObjectNamedFunction4 } from './_Base';
export declare class setPointInstanceLookAt extends ObjectNamedFunction4<[number, Vector3, Vector3, number]> {
    static type(): string;
    func(object3D: Object3D, ptnum: number, targetPosition: Vector3, up: Vector3, lerp: number): void;
}
export declare class setPointInstancePosition extends ObjectNamedFunction3<[number, Vector3, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, ptnum: number, newValue: Vector3, lerp: number) => void;
}
export declare class setPointInstanceQuaternion extends ObjectNamedFunction3<[number, Quaternion, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, ptnum: number, newValue: Quaternion, lerp: number) => void;
}
export declare class setPointInstanceScale extends ObjectNamedFunction4<[number, Vector3, number, number]> {
    static type(): string;
    func: (object3D: Object3D<import("three").Object3DEventMap>, ptnum: number, newValue: Vector3, mult: number, lerp: number) => void;
}
