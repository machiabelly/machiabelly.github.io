import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsConnectionPoint, JsConnectionPointType } from '../utils/io/connections/Js';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
export declare abstract class BaseTriggerAndObjectJsNode<K extends NodeParamsConfig> extends TypedJsNode<K> {
    initializeNode(): void;
    setLines(linesController: JsLinesCollectionController): void;
    protected _additionalInputs(): JsConnectionPoint<JsConnectionPointType>[];
    protected _additionalOutputs(): JsConnectionPoint<JsConnectionPointType>[];
}
declare class BaseTriggerAndObjectJsParamsConfig extends NodeParamsConfig {
}
export declare abstract class ParamlessBaseTriggerAndObjectJsNode extends BaseTriggerAndObjectJsNode<BaseTriggerAndObjectJsParamsConfig> {
    readonly paramsConfig: BaseTriggerAndObjectJsParamsConfig;
}
export {};
