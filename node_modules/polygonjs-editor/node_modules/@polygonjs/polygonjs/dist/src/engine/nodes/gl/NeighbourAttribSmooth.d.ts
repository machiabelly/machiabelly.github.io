/**
 * smoothes an attribute between neighbouring points
 *
 *
 *
 */
import { TypedGlNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
declare class NeighbourAttribSmoothGlParamsConfig extends NodeParamsConfig {
    positionAttribName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    position: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    attribName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    attribValue: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    maxDist: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    deltaThreshold: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    smoothAmount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class NeighbourAttribSmoothGlNode extends TypedGlNode<NeighbourAttribSmoothGlParamsConfig> {
    paramsConfig: NeighbourAttribSmoothGlParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(shadersCollectionController: ShadersCollectionController): void;
    private _templateFunctionDefinition;
}
export {};
