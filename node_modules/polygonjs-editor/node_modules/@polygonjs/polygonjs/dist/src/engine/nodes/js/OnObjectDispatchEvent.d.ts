/**
 * sends a trigger when the listened object dispatches an event
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsType } from '../../poly/registers/nodes/types/Js';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class OnObjectDispatchEventJsParamsConfig extends NodeParamsConfig {
    /** @param event names (space separated) */
    eventNames: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class OnObjectDispatchEventJsNode extends TypedJsNode<OnObjectDispatchEventJsParamsConfig> {
    readonly paramsConfig: OnObjectDispatchEventJsParamsConfig;
    static type(): JsType.ON_OBJECT_DISPATCH_EVENT;
    isTriggering(): boolean;
    initializeNode(): void;
    setTriggeringLines(shadersCollectionController: JsLinesCollectionController, triggeredMethods: string): void;
}
export {};
