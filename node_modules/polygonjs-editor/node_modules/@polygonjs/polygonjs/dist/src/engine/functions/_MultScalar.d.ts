import { Color, Vector2, Vector3, Vector4 } from 'three';
import { NamedFunction3 } from './_Base';
export declare class multScalarColor extends NamedFunction3<[Color, number, Color]> {
    static type(): string;
    func(src: Color, scalar: number, target: Color): Color;
}
export declare class multScalarVector2 extends NamedFunction3<[Vector2, number, Vector2]> {
    static type(): string;
    func(src: Vector2, scalar: number, target: Vector2): Vector2;
}
export declare class multScalarVector3 extends NamedFunction3<[Vector3, number, Vector3]> {
    static type(): string;
    func(src: Vector3, scalar: number, target: Vector3): Vector3;
}
export declare class multScalarVector4 extends NamedFunction3<[Vector4, number, Vector4]> {
    static type(): string;
    func(src: Vector4, scalar: number, target: Vector4): Vector4;
}
export declare class multScalarVectorArray<V extends Color | Vector2 | Vector3 | Vector4> extends NamedFunction3<[
    Array<V>,
    number,
    Array<V>
]> {
    static type(): string;
    func(src: V[], scalar: number, target: V[]): V[];
}
export declare class multScalarArrayVectorArray<V extends Color | Vector2 | Vector3 | Vector4> extends NamedFunction3<[
    Array<V>,
    number[],
    Array<V>
]> {
    static type(): string;
    func(src: V[], scalar: number[], target: V[]): V[];
}
