"use strict";
import { NamedFunction1 } from "./_Base";
import { Easing } from "../../core/math/Easing";
export class easeI2 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeI2;
  }
  static type() {
    return "easeI2";
  }
}
export class easeO2 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeO2;
  }
  static type() {
    return "easeO2";
  }
}
export class easeIO2 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeIO2;
  }
  static type() {
    return "easeIO2";
  }
}
export class easeI3 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeI3;
  }
  static type() {
    return "easeI3";
  }
}
export class easeO3 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeO3;
  }
  static type() {
    return "easeO3";
  }
}
export class easeIO3 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeIO3;
  }
  static type() {
    return "easeIO3";
  }
}
export class easeI4 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeI4;
  }
  static type() {
    return "easeI4";
  }
}
export class easeO4 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeO4;
  }
  static type() {
    return "easeO4";
  }
}
export class easeIO4 extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeIO4;
  }
  static type() {
    return "easeIO4";
  }
}
export class easeSinI extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeSinI;
  }
  static type() {
    return "easeSinI";
  }
}
export class easeSinO extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeSinO;
  }
  static type() {
    return "easeSinO";
  }
}
export class easeSinIO extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeSinIO;
  }
  static type() {
    return "easeSinIO";
  }
}
export class easeElasticI extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeElasticI;
  }
  static type() {
    return "easeElasticI";
  }
}
export class easeElasticO extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeElasticO;
  }
  static type() {
    return "easeElasticO";
  }
}
export class easeElasticIO extends NamedFunction1 {
  constructor() {
    super(...arguments);
    this.func = Easing.easeElasticIO;
  }
  static type() {
    return "easeElasticIO";
  }
}
