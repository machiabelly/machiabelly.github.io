import { GodraysPassParams } from './GodRaysPassParams';
import { GodraysPassProps } from './GodRaysPassProps';
import { WebGLRenderer, WebGLRenderTarget, Texture, DepthPackingStrategies } from 'three';
import { Pass, Resizable } from 'postprocessing';
export declare class GodraysIllumPass extends Pass implements Resizable {
    private params;
    private material;
    private shadowMapSet;
    private props;
    private lastParams;
    private lightWorldPos;
    constructor(props: GodraysPassProps, params: GodraysPassParams);
    setSize(width: number, height: number): void;
    render(renderer: WebGLRenderer, _inputBuffer: WebGLRenderTarget, outputBuffer: WebGLRenderTarget, _deltaTime?: number | undefined, _stencilTest?: boolean | undefined): void;
    setDepthTexture(depthTexture: Texture, depthPacking?: DepthPackingStrategies | undefined): void;
    private _updateLightPosition;
    updateUniforms({ light, camera }: GodraysPassProps, params: GodraysPassParams): void;
}
