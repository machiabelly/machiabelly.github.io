"use strict";
import { TypedNode } from "../_Base";
import { NodeContext } from "../../poly/NodeContext";
import { FlagsController } from "../utils/FlagsController";
export class TypedRopNode extends TypedNode {
  constructor() {
    super(...arguments);
    this.flags = new FlagsController(this);
  }
  static context() {
    return NodeContext.ROP;
  }
  initializeBaseNode() {
    this.dirtyController.addPostDirtyHook("cook_immediately", () => {
      this.cookController.cookMainWithoutInputs();
    });
  }
  cook() {
    this.cookController.endCook();
  }
}
export class BaseRopNodeClass extends TypedRopNode {
}
