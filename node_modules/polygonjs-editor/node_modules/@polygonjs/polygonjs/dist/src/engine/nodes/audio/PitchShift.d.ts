/**
 *  PitchShift does near-realtime pitch shifting to the incoming signal.
 * The effect is achieved by speeding up or slowing down the delayTime
 * of a DelayNode using a sawtooth wave.
 * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).
 * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).
 *
 * See description on [Tone.js](https://tonejs.github.io/)
 */
import { TypedAudioNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { AudioBuilder } from '../../../core/audio/AudioBuilder';
declare class PitchShiftAudioParamsConfig extends NodeParamsConfig {
    /** @param The interval to transpose the incoming signal by */
    pitch: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class PitchShiftAudioNode extends TypedAudioNode<PitchShiftAudioParamsConfig> {
    paramsConfig: PitchShiftAudioParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputContents: AudioBuilder[]): void;
    private __effect__;
    private _effect;
    private _createEffect;
    static PARAM_CALLBACK_updateEffect(node: PitchShiftAudioNode): void;
    private _updateEffect;
}
export {};
