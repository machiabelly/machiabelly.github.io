import { TypedPostNode, TypedPostNodeContext } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { GodraysPass } from './utils/GodRaysVolumetric/GodRaysPass';
declare class GodRaysVolumetricPostParamsConfig extends NodeParamsConfig {
    /** @param light type */
    lightType: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param light to emit godrays from. Note that while the mask can resolve multiple objects, only the first light will be used */
    lightMask: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param color */
    color: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
    /** @param density */
    density: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param maxDensity */
    maxDensity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param distanceAttenuation */
    distanceAttenuation: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param edgeStrength */
    edgeStrength: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param edgeRadius */
    edgeRadius: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class GodRaysVolumetricPostNode extends TypedPostNode<GodraysPass, GodRaysVolumetricPostParamsConfig> {
    paramsConfig: GodRaysVolumetricPostParamsConfig;
    static type(): string;
    private _rendererSize;
    createPass(context: TypedPostNodeContext): GodraysPass;
    updatePass(pass: GodraysPass): void;
    private _tmpLightSource;
}
export {};
