/**
 * Creates attributes used to adjust face tracking resolution
 *
 */
import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
declare const TrackingLandmarksFaceAttributesSopParamsConfig_base: {
    new (...args: any[]): {
        selfieMode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        maxNumFaces: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        refineLandmarks: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        minDetectionConfidence: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        minTrackingConfidence: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    };
} & typeof NodeParamsConfig;
declare class TrackingLandmarksFaceAttributesSopParamsConfig extends TrackingLandmarksFaceAttributesSopParamsConfig_base {
}
export declare class TrackingLandmarksFaceAttributesSopNode extends TypedSopNode<TrackingLandmarksFaceAttributesSopParamsConfig> {
    paramsConfig: TrackingLandmarksFaceAttributesSopParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
