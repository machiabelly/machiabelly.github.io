/**
 * Extrudes quads.
 *
 *
 */
import { QuadSopNode } from './_BaseQuad';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
import { QuadPrimitivePointPositions, QuadPrimitivePointIndices } from '../../../core/geometry/modules/quad/utils/QuadUtils';
export declare const _indices: QuadPrimitivePointIndices;
export declare const _positions: QuadPrimitivePointPositions;
export declare const _insetPositions: QuadPrimitivePointPositions;
declare class QuadExtrudeSopParamsConfig extends NodeParamsConfig {
    /** @param amount */
    amount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param inset */
    inset: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param output side */
    sides: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class QuadExtrudeSopNode extends QuadSopNode<QuadExtrudeSopParamsConfig> {
    paramsConfig: QuadExtrudeSopParamsConfig;
    static type(): SopType;
    protected initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
    private _extrudeObject;
}
export {};
