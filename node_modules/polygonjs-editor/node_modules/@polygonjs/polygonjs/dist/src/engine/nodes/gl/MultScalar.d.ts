/**
 * convenient node to multiply a vector by a scalar
 *
 *
 *
 */
import { BaseNodeGlMathFunctionArg2GlNode } from './_BaseMathFunction';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
import { GlConnectionPointType } from '../utils/io/connections/Gl';
declare enum MultScalarGlNodeInputName {
    VALUE = "value",
    MULT = "mult"
}
export declare class MultScalarGlNode extends BaseNodeGlMathFunctionArg2GlNode {
    static type(): string;
    protected _expected_input_types(): GlConnectionPointType[];
    protected _gl_input_name(index: number): MultScalarGlNodeInputName;
    paramDefaultValue(name: string): number;
    setLines(shaders_collection_controller: ShadersCollectionController): void;
}
export {};
