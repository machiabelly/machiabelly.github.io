import { ObjectNamedFunction3 } from './_Base';
import { Object3D } from 'three';
import { JsDataType } from '../nodes/utils/io/connections/Js';
export interface ActorEvaluatorDebugOptions {
    object3D: Object3D;
    nodePath: string;
    message: string;
    value: JsDataType;
}
export interface DebugLine {
    objectName: string;
    value: JsDataType;
    displayableValue: string;
}
export declare function tableContent(debugLines: DebugLine[]): {
    objectName: string;
    value: string | number | boolean | import("../nodes/_Base").BaseNodeType | import("three").Material | import("three").Matrix4 | import("../params/_Base").BaseParamType | import("three").Box3 | import("three").Euler | import("three").Quaternion | import("three").Texture | import("three").Texture[] | import("three").Sphere | import("../nodes/utils/io/connections/Js").PrimitiveArrayElement[] | import("../nodes/utils/io/connections/Js").VectorArrayElement[] | import("three").AnimationMixer | import("three").AnimationAction | import("three").CatmullRomCurve3 | import("three").Intersection<Object3D<import("three").Object3DEventMap>> | import("three").Intersection<Object3D<import("three").Object3DEventMap>>[] | Object3D<import("three").Object3DEventMap> | Object3D<import("three").Object3DEventMap>[] | import("three").Ray | null;
}[];
export interface DebugOptions {
    displayValue: boolean;
    displayFrame: boolean;
    displayTime: boolean;
    displayNodePath: boolean;
    message: string;
    bundleByObject: boolean;
}
export declare class debug<T extends JsDataType> extends ObjectNamedFunction3<[string, T, DebugOptions]> {
    static type(): string;
    func(object3D: Object3D, nodePath: string, input: T, debugOptions: DebugOptions): T;
}
