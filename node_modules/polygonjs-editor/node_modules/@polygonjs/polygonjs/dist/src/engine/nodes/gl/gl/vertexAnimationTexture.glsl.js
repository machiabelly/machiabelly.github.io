export default "struct VATDataInfoBasic {\n	float frame;\n	float framesCount;\n	vec2 paddedRatio;\n	vec2 uv;\n};\n\nstruct BoundingBox {\n	float min;\n	float max;\n};\nstruct VATDataInfoInterpolated {\n	float speed;\n	BoundingBox Pbound;\n	vec3 Poffset;\n	VATDataInfoBasic infoBasic;\n};\nstruct VATDataResult {\n	vec3 P;\n	vec3 N;\n};\n\nvec3 FitInBoundingBox(vec3 pos, BoundingBox box){\n	float delta = box.max - box.min;\n	pos *= delta;\n	pos += box.min;\n	return pos;\n}\n\nvec2 VATDataUv(VATDataInfoBasic info){\n	// mod(<value>, 1.0) is required for iphone,\n	// as texture will not wrap otherwise, even with wrapS and wrapT = THREE.RepeatWrapping\n	float x = mod((info.paddedRatio.x * info.uv.x), 1.0);\n	float y0 = 1.0 - info.paddedRatio.y * (1.0 - info.uv.y);\n	float y1 = 1.0 - info.paddedRatio.y * (info.frame / info.framesCount);\n	float y = mod((y0+y1), 1.0);\n	return vec2(x, y);\n}\n\nvec3 VATDataP(vec2 uv, sampler2D mapP, sampler2D mapP2){\n	vec3 P = texture2D(mapP, uv).xyz;\n	vec3 P2 = texture2D(mapP2, uv).xyz * 0.01;\n	return P + P2;\n}\nvec3 VATDataN(vec2 uv, sampler2D mapN){\n	vec3 N = (texture2D(mapN, uv).xyz * 2.0) - 1.0;\n	return normalize(N);\n}\n\n\nVATDataResult VATData(VATDataInfoBasic info, sampler2D mapP, sampler2D mapP2, sampler2D mapN){\n	vec2 uvTmp = VATDataUv(info);\n	vec3 P = VATDataP(uvTmp, mapP, mapP2);\n	vec3 N = VATDataN(uvTmp, mapN);\n	return VATDataResult(P,N);\n}\nVATDataResult VATDataInterpolated(VATDataInfoInterpolated info, sampler2D mapP, sampler2D mapP2, sampler2D mapN){\n	float frameWithSpeed = info.speed * float(info.infoBasic.frame);\n	float previousFrame = floor(frameWithSpeed);\n	float nextFrame = ceil(frameWithSpeed);\n\n	VATDataInfoBasic infoPreviousFrame = VATDataInfoBasic(\n		previousFrame,\n		info.infoBasic.framesCount,\n		info.infoBasic.paddedRatio,\n		info.infoBasic.uv\n	);\n	VATDataInfoBasic infoNextFrame = VATDataInfoBasic(\n		nextFrame,\n		info.infoBasic.framesCount,\n		info.infoBasic.paddedRatio,\n		info.infoBasic.uv\n	);\n	VATDataResult resultPreviousFrame = VATData(infoPreviousFrame, mapP, mapP2, mapN);\n	VATDataResult resultNextFrame = VATData(infoNextFrame, mapP, mapP2, mapN);\n\n	float blend = 1.0 - ( nextFrame - frameWithSpeed );\n\n	vec3 P = mix(resultPreviousFrame.P, resultNextFrame.P, blend);\n	P = FitInBoundingBox(P, info.Pbound) + info.Poffset;\n\n	vec3 N = mix(resultPreviousFrame.N, resultNextFrame.N, blend);\n\n	return VATDataResult(P,N);\n}";
