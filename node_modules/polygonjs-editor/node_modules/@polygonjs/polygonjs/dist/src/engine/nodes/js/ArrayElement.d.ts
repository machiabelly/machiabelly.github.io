/**
 * outputs a single element from an array
 *
 *
 *
 */
import { JsConnectionPointType, JsConnectionPointTypeArray } from '../utils/io/connections/Js';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { BaseArrayElementJsNode } from './_BaseArrayToElement';
declare class ArrayElementJsParamsConfig extends NodeParamsConfig {
    index: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class ArrayElementJsNode extends BaseArrayElementJsNode<ArrayElementJsParamsConfig> {
    readonly paramsConfig: ArrayElementJsParamsConfig;
    static type(): string;
    protected _expectedInputTypes(): [JsConnectionPointTypeArray, JsConnectionPointType];
    protected _expectedInputName(index: number): string;
    protected _setLinesAsPrimitive(linesController: JsLinesCollectionController): void;
    protected _setLinesAsVector(linesController: JsLinesCollectionController): void;
}
export {};
