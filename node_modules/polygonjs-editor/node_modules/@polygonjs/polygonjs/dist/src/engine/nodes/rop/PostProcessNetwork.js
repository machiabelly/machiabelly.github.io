"use strict";
import { BaseNetworkRopNode } from "./_BaseManager";
import { NetworkNodeType, NodeContext } from "../../poly/NodeContext";
import { DisplayNodeController } from "../utils/DisplayNodeController";
import { EffectComposerController, PostProcessNetworkParamsConfig } from "../post/utils/EffectComposerController";
export class PostProcessNetworkRopNode extends BaseNetworkRopNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = new PostProcessNetworkParamsConfig();
    this.effectsComposerController = new EffectComposerController(this);
    this.displayNodeController = new DisplayNodeController(
      this,
      this.effectsComposerController.displayNodeControllerCallbacks()
    );
    this._childrenControllerContext = NodeContext.POST;
  }
  static type() {
    return NetworkNodeType.POST;
  }
  createNode(node_class, options) {
    return super.createNode(node_class, options);
  }
  children() {
    return super.children();
  }
  nodesByType(type) {
    return super.nodesByType(type);
  }
}
