/**
 * Sets if the animation should repeat
 *
 *
 */
import { TypedAnimNode } from './_Base';
import { TimelineBuilder } from '../../../core/animation/TimelineBuilder';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class RepeatAnimParamsConfig extends NodeParamsConfig {
    /** @param sets if it should repeat indefinitely */
    unlimited: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param number of times the animation should repeat */
    count: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param delay */
    delay: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param sets if the animation should go back and forth at each repeat */
    yoyo: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class RepeatAnimNode extends TypedAnimNode<RepeatAnimParamsConfig> {
    paramsConfig: RepeatAnimParamsConfig;
    static type(): string;
    initializeNode(): void;
    private _repeat_params;
    cook(input_contents: TimelineBuilder[]): void;
}
export {};
