import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TypedSopNode } from './_Base';
import type { TetGeometry } from '../../../core/geometry/modules/tet/TetGeometry';
import { TetObject } from '../../../core/geometry/modules/tet/TetObject';
import { ModuleName } from '../../poly/registers/modules/Common';
export declare class TetSopNode<K extends NodeParamsConfig> extends TypedSopNode<K> {
    dataType(): string;
    requiredModules(): ModuleName[];
    setTetGeometry(geometry: TetGeometry): void;
    setTetGeometries(geometries: TetGeometry[]): void;
    setTetObjects(tetObjects: TetObject[]): void;
    setTetObject(tetObject: TetObject): void;
    protected _setContainerTetObjects(objects: TetObject[]): void;
}
export type BaseTetSopNodeType = TetSopNode<NodeParamsConfig>;
export declare class BaseTetSopNodeClass extends TetSopNode<NodeParamsConfig> {
}
