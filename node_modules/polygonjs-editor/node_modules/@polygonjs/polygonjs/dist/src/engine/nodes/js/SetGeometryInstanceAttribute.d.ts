/**
 * Update the geometry instance attribute
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
export declare const SetGeometryInstanceAttributeInputName: {
    values: string;
    lerp: string;
    attributeNeedsUpdate: string;
};
declare class SetGeometryInstanceAttributeJsParamsConfig extends NodeParamsConfig {
    /** @param attribute name */
    attribName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class SetGeometryInstanceAttributeJsNode extends TypedJsNode<SetGeometryInstanceAttributeJsParamsConfig> {
    readonly paramsConfig: SetGeometryInstanceAttributeJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    private _expectedInputTypes;
    paramDefaultValue(name: string): number | boolean;
    setLines(linesController: JsLinesCollectionController): void;
    protected _expectedInputName(index: number): string;
    setTriggerableLines(shadersCollectionController: JsLinesCollectionController): void;
    private _functionName;
}
export {};
