"use strict";
import { TypedEventNode } from "./_Base";
import { EventConnectionPoint, EventConnectionPointType } from "../utils/io/connections/Event";
var NullEventInput = /* @__PURE__ */ ((NullEventInput2) => {
  NullEventInput2["TRIGGER"] = "trigger";
  return NullEventInput2;
})(NullEventInput || {});
var NullEventOutput = /* @__PURE__ */ ((NullEventOutput2) => {
  NullEventOutput2["OUT"] = "out";
  return NullEventOutput2;
})(NullEventOutput || {});
import { NodeParamsConfig } from "../utils/params/ParamsConfig";
class NullEventParamsConfig extends NodeParamsConfig {
}
const ParamsConfig = new NullEventParamsConfig();
export class NullEventNode extends TypedEventNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
  }
  static type() {
    return "null";
  }
  initializeNode() {
    this.io.inputs.setNamedInputConnectionPoints([
      new EventConnectionPoint(
        "trigger" /* TRIGGER */,
        EventConnectionPointType.BASE,
        this.processEventTrigger.bind(this)
      )
    ]);
    this.io.outputs.setNamedOutputConnectionPoints([
      new EventConnectionPoint("out" /* OUT */, EventConnectionPointType.BASE)
    ]);
  }
  processEvent(event_context) {
  }
  processEventTrigger(event_context) {
    this.dispatchEventToOutput("out" /* OUT */, event_context);
  }
}
