{"version":3,"file":"src_engine_examples_examples_sop_CameraWebXRAR_controllerRay2_ts.bc7cd8ce043bd0559ca0.js","mappings":"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","sources":["webpack:///../src/engine/examples/examples/sop/CameraWebXRAR.controllerRay2.ts"],"sourcesContent":["import type {GeoObjNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/obj/Geo';\nimport type {RootManagerNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/manager/Root';\nimport type {ExampleData, DataCallbackOptions} from '../../Common';\nimport type {ReturnedNodeDataDict} from '../../ExampleUtils';\nimport type {CameraControlsSopNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/sop/CameraControls';\nimport {ParamType} from '../../../../../@polygonjs/polygonjs/src/engine/poly/ParamType';\nimport type {ActorSopNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/sop/Actor';\nimport type {MaterialsNetworkSopNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/sop/MaterialsNetwork';\nimport type {CopNetworkMatNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/mat/CopNetwork';\n\nexport function createData(options: DataCallbackOptions): ExampleData {\n\tconst {scene} = options;\n\tconst root = scene.root();\n\tconst scene_root_nodes: ReturnedNodeDataDict = {};\n\tfunction create_geo1(parentNode: RootManagerNode) {\n\t\tvar geo1 = parentNode.createNode('geo');\n\t\tgeo1.setName('geo1');\n\t\tconst geo1_nodes: ReturnedNodeDataDict = {};\n\t\tfunction create_MAT(geo1: GeoObjNode) {\n\t\t\tvar MAT = geo1.createNode('materialsNetwork');\n\t\t\tMAT.setName('MAT');\n\t\t\tconst MAT_nodes: ReturnedNodeDataDict = {};\n\t\t\tfunction create_COP(MAT: MaterialsNetworkSopNode) {\n\t\t\t\tvar COP = MAT.createNode('copNetwork');\n\t\t\t\tCOP.setName('COP');\n\t\t\t\tconst COP_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tfunction create_envMap1(COP: CopNetworkMatNode) {\n\t\t\t\t\tvar envMap1 = COP.createNode('envMap');\n\t\t\t\t\tenvMap1.setName('envMap1');\n\t\t\t\t\tconst envMap1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\t\tenvMap1.uiData.setPosition(-150, 150);\n\t\t\t\t\tenvMap1.params.postCreateSpareParams();\n\t\t\t\t\tenvMap1.params.runOnSceneLoadHooks();\n\t\t\t\t\treturn {node: envMap1, children: envMap1_nodes};\n\t\t\t\t}\n\t\t\t\tfunction create_imageEXR1(COP: CopNetworkMatNode) {\n\t\t\t\t\tvar imageEXR1 = COP.createNode('imageEXR');\n\t\t\t\t\timageEXR1.setName('imageEXR1');\n\t\t\t\t\tconst imageEXR1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\t\timageEXR1.uiData.setPosition(-150, 0);\n\t\t\t\t\timageEXR1.p.url.set(\n\t\t\t\t\t\t'https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/textures/resources/polyhaven.com/envmaps/photo_studio_loft_hall_1k.exr'\n\t\t\t\t\t);\n\t\t\t\t\timageEXR1.params.postCreateSpareParams();\n\t\t\t\t\timageEXR1.params.runOnSceneLoadHooks();\n\t\t\t\t\treturn {node: imageEXR1, children: imageEXR1_nodes};\n\t\t\t\t}\n\t\t\t\tCOP_nodes['envMap1'] = create_envMap1(COP);\n\t\t\t\tCOP_nodes['imageEXR1'] = create_imageEXR1(COP);\n\t\t\t\tCOP_nodes['envMap1'].node.setInput(0, COP_nodes['imageEXR1'].node);\n\t\t\t\tif (COP.childrenController) {\n\t\t\t\t\tCOP.childrenController.selection.set([]);\n\t\t\t\t}\n\t\t\t\tCOP.uiData.setPosition(0, 250);\n\t\t\t\tCOP.params.postCreateSpareParams();\n\t\t\t\tCOP.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: COP, children: COP_nodes};\n\t\t\t}\n\t\t\tfunction create_meshStandard1(MAT: MaterialsNetworkSopNode) {\n\t\t\t\tvar meshStandard1 = MAT.createNode('meshStandard');\n\t\t\t\tmeshStandard1.setName('meshStandard1');\n\t\t\t\tconst meshStandard1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tmeshStandard1.uiData.setPosition(0, -50);\n\t\t\t\tmeshStandard1.p.useEnvMap.set(true);\n\t\t\t\tmeshStandard1.p.envMap.set('../COP/envMap1');\n\t\t\t\tmeshStandard1.p.metalness.set(1);\n\t\t\t\tmeshStandard1.p.roughness.set(0.26);\n\t\t\t\tmeshStandard1.params.postCreateSpareParams();\n\t\t\t\tmeshStandard1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: meshStandard1, children: meshStandard1_nodes};\n\t\t\t}\n\t\t\tMAT_nodes['COP'] = create_COP(MAT);\n\t\t\tMAT_nodes['meshStandard1'] = create_meshStandard1(MAT);\n\t\t\tif (MAT.childrenController) {\n\t\t\t\tMAT.childrenController.selection.set([MAT_nodes['meshStandard1'].node]);\n\t\t\t}\n\t\t\tMAT.uiData.setPosition(-400, 400);\n\t\t\tMAT.params.postCreateSpareParams();\n\t\t\tMAT.params.runOnSceneLoadHooks();\n\t\t\treturn {node: MAT, children: MAT_nodes};\n\t\t}\n\t\tfunction create_actor1(geo1: GeoObjNode) {\n\t\t\tvar actor1 = geo1.createNode('actor');\n\t\t\tactor1.setName('actor1');\n\t\t\tconst actor1_nodes: ReturnedNodeDataDict = {};\n\t\t\tfunction create_constant1(actor1: ActorSopNode) {\n\t\t\t\tvar constant1 = actor1.createNode('constant');\n\t\t\t\tconstant1.setName('constant1');\n\t\t\t\tconst constant1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tconstant1.uiData.setPosition(150, 100);\n\t\t\t\tconstant1.p.type.set(1);\n\t\t\t\tconstant1.p.color.set([0.3254901960784314, 0.03529411764705882, 0.8627450980392157]);\n\t\t\t\tconstant1.params.postCreateSpareParams();\n\t\t\t\tconstant1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: constant1, children: constant1_nodes};\n\t\t\t}\n\t\t\tfunction create_constant2(actor1: ActorSopNode) {\n\t\t\t\tvar constant2 = actor1.createNode('constant');\n\t\t\t\tconstant2.setName('constant2');\n\t\t\t\tconst constant2_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tconstant2.uiData.setPosition(150, 250);\n\t\t\t\tconstant2.p.type.set(1);\n\t\t\t\tconstant2.p.color.set([0.4588235294117647, 0.4588235294117647, 0.4588235294117647]);\n\t\t\t\tconstant2.params.postCreateSpareParams();\n\t\t\t\tconstant2.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: constant2, children: constant2_nodes};\n\t\t\t}\n\t\t\tfunction create_getWebXRControllerProperty1(actor1: ActorSopNode) {\n\t\t\t\tvar getWebXRControllerProperty1 = actor1.createNode('getWebXRControllerProperty');\n\t\t\t\tgetWebXRControllerProperty1.setName('getWebXRControllerProperty1');\n\t\t\t\tconst getWebXRControllerProperty1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tgetWebXRControllerProperty1.uiData.setComment(\n\t\t\t\t\t'This node gives us properties of the webXR controller. It can be used both for VR and AR.\\n\\nIn this case, we use it to get the ray from the controller. We can then use it to see if it intersects objects and react based on this.'\n\t\t\t\t);\n\t\t\t\tgetWebXRControllerProperty1.uiData.setPosition(-300, -200);\n\t\t\t\tgetWebXRControllerProperty1.params.postCreateSpareParams();\n\t\t\t\tgetWebXRControllerProperty1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: getWebXRControllerProperty1, children: getWebXRControllerProperty1_nodes};\n\t\t\t}\n\t\t\tfunction create_onTick1(actor1: ActorSopNode) {\n\t\t\t\tvar onTick1 = actor1.createNode('onTick');\n\t\t\t\tonTick1.setName('onTick1');\n\t\t\t\tconst onTick1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tonTick1.uiData.setPosition(350, -300);\n\t\t\t\tonTick1.params.postCreateSpareParams();\n\t\t\t\tonTick1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: onTick1, children: onTick1_nodes};\n\t\t\t}\n\t\t\tfunction create_rayFromCursor1(actor1: ActorSopNode) {\n\t\t\t\tvar rayFromCursor1 = actor1.createNode('rayFromCursor');\n\t\t\t\trayFromCursor1.setName('rayFromCursor1');\n\t\t\t\tconst rayFromCursor1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\trayFromCursor1.uiData.setComment(\n\t\t\t\t\t'When testing your app on desktop, the [getWebXRControllerProperty1](../getWebXRControllerProperty1) will not do anything. You would then need to replace it with this node to get the ray under the cursor.'\n\t\t\t\t);\n\t\t\t\trayFromCursor1.uiData.setPosition(-300, 150);\n\t\t\t\trayFromCursor1.params.postCreateSpareParams();\n\t\t\t\trayFromCursor1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: rayFromCursor1, children: rayFromCursor1_nodes};\n\t\t\t}\n\t\t\tfunction create_rayIntersectsObject1(actor1: ActorSopNode) {\n\t\t\t\tvar rayIntersectsObject1 = actor1.createNode('rayIntersectsObject');\n\t\t\t\trayIntersectsObject1.setName('rayIntersectsObject1');\n\t\t\t\tconst rayIntersectsObject1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\trayIntersectsObject1.uiData.setComment(\n\t\t\t\t\t'This tells us if the ray from the controller intersects with the current object. Its output is a boolean value that is used in the `twowaySwitch` nodes.'\n\t\t\t\t);\n\t\t\t\trayIntersectsObject1.uiData.setPosition(100, -200);\n\t\t\t\trayIntersectsObject1.params.postCreateSpareParams();\n\t\t\t\trayIntersectsObject1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: rayIntersectsObject1, children: rayIntersectsObject1_nodes};\n\t\t\t}\n\t\t\tfunction create_setMaterialColor1(actor1: ActorSopNode) {\n\t\t\t\tvar setMaterialColor1 = actor1.createNode('setMaterialColor');\n\t\t\t\tsetMaterialColor1.setName('setMaterialColor1');\n\t\t\t\tconst setMaterialColor1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tsetMaterialColor1.uiData.setComment(\n\t\t\t\t\t'This changes the color of the material based on its input, the [twoWaySwitch1](../twoWaySwitch1), which will give it a different color depending if the ray from the controller intersects with the current object or not.\\n\\nYou can see the `lerp` value is also given via another [twoWaySwitch](../twoWaySwitch2). The lerp value will then be close to 1 when the ray intersects, and lower and it does not. This means that the color will change rapidly when we intersect, and more slowly when we do not.'\n\t\t\t\t);\n\t\t\t\tsetMaterialColor1.uiData.setPosition(750, -150);\n\t\t\t\tsetMaterialColor1.p.lerp.set(0.19);\n\t\t\t\tsetMaterialColor1.params.postCreateSpareParams();\n\t\t\t\tsetMaterialColor1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: setMaterialColor1, children: setMaterialColor1_nodes};\n\t\t\t}\n\t\t\tfunction create_setObjectScale1(actor1: ActorSopNode) {\n\t\t\t\tvar setObjectScale1 = actor1.createNode('setObjectScale');\n\t\t\t\tsetObjectScale1.setName('setObjectScale1');\n\t\t\t\tconst setObjectScale1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tsetObjectScale1.uiData.setComment(\n\t\t\t\t\t'On top of changing the color, we also change the scale of the object, with a similar logic. When the controller ray intersects with the object, the scale will change to a small value, and back to 1 when it not intersection is found.'\n\t\t\t\t);\n\t\t\t\tsetObjectScale1.uiData.setPosition(750, 300);\n\t\t\t\tsetObjectScale1.params.postCreateSpareParams();\n\t\t\t\tsetObjectScale1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: setObjectScale1, children: setObjectScale1_nodes};\n\t\t\t}\n\t\t\tfunction create_twoWaySwitch1(actor1: ActorSopNode) {\n\t\t\t\tvar twoWaySwitch1 = actor1.createNode('twoWaySwitch');\n\t\t\t\ttwoWaySwitch1.setName('twoWaySwitch1');\n\t\t\t\tconst twoWaySwitch1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\ttwoWaySwitch1.uiData.setPosition(400, 0);\n\t\t\t\ttwoWaySwitch1.addParam(ParamType.BOOLEAN, 'condition', false, {spare: true, editable: false});\n\t\t\t\ttwoWaySwitch1.addParam(ParamType.COLOR, 'ifTrue', [0, 0, 0], {spare: true, editable: false});\n\t\t\t\ttwoWaySwitch1.addParam(ParamType.COLOR, 'ifFalse', [0, 0, 0], {spare: true, editable: false});\n\t\t\t\ttwoWaySwitch1.params.postCreateSpareParams();\n\t\t\t\ttwoWaySwitch1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: twoWaySwitch1, children: twoWaySwitch1_nodes};\n\t\t\t}\n\t\t\tfunction create_twoWaySwitch2(actor1: ActorSopNode) {\n\t\t\t\tvar twoWaySwitch2 = actor1.createNode('twoWaySwitch');\n\t\t\t\ttwoWaySwitch2.setName('twoWaySwitch2');\n\t\t\t\tconst twoWaySwitch2_nodes: ReturnedNodeDataDict = {};\n\t\t\t\ttwoWaySwitch2.uiData.setPosition(450, 200);\n\t\t\t\ttwoWaySwitch2.addParam(ParamType.BOOLEAN, 'condition', false, {spare: true, editable: false});\n\t\t\t\ttwoWaySwitch2.addParam(ParamType.FLOAT, 'ifTrue', 0, {spare: true, editable: true});\n\t\t\t\ttwoWaySwitch2.params.get('ifTrue')!.set(0.98);\n\t\t\t\ttwoWaySwitch2.addParam(ParamType.FLOAT, 'ifFalse', 0, {spare: true, editable: true});\n\t\t\t\ttwoWaySwitch2.params.get('ifFalse')!.set(0.06);\n\t\t\t\ttwoWaySwitch2.params.postCreateSpareParams();\n\t\t\t\ttwoWaySwitch2.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: twoWaySwitch2, children: twoWaySwitch2_nodes};\n\t\t\t}\n\t\t\tfunction create_twoWaySwitch3(actor1: ActorSopNode) {\n\t\t\t\tvar twoWaySwitch3 = actor1.createNode('twoWaySwitch');\n\t\t\t\ttwoWaySwitch3.setName('twoWaySwitch3');\n\t\t\t\tconst twoWaySwitch3_nodes: ReturnedNodeDataDict = {};\n\t\t\t\ttwoWaySwitch3.uiData.setPosition(400, 450);\n\t\t\t\ttwoWaySwitch3.addParam(ParamType.BOOLEAN, 'condition', false, {spare: true, editable: false});\n\t\t\t\ttwoWaySwitch3.addParam(ParamType.FLOAT, 'ifTrue', 0, {spare: true, editable: true});\n\t\t\t\ttwoWaySwitch3.params.get('ifTrue')!.set(0.17);\n\t\t\t\ttwoWaySwitch3.addParam(ParamType.FLOAT, 'ifFalse', 0, {spare: true, editable: true});\n\t\t\t\ttwoWaySwitch3.params.get('ifFalse')!.set(1);\n\t\t\t\ttwoWaySwitch3.params.postCreateSpareParams();\n\t\t\t\ttwoWaySwitch3.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: twoWaySwitch3, children: twoWaySwitch3_nodes};\n\t\t\t}\n\t\t\tactor1_nodes['constant1'] = create_constant1(actor1);\n\t\t\tactor1_nodes['constant2'] = create_constant2(actor1);\n\t\t\tactor1_nodes['getWebXRControllerProperty1'] = create_getWebXRControllerProperty1(actor1);\n\t\t\tactor1_nodes['onTick1'] = create_onTick1(actor1);\n\t\t\tactor1_nodes['rayFromCursor1'] = create_rayFromCursor1(actor1);\n\t\t\tactor1_nodes['rayIntersectsObject1'] = create_rayIntersectsObject1(actor1);\n\t\t\tactor1_nodes['setMaterialColor1'] = create_setMaterialColor1(actor1);\n\t\t\tactor1_nodes['setObjectScale1'] = create_setObjectScale1(actor1);\n\t\t\tactor1_nodes['twoWaySwitch1'] = create_twoWaySwitch1(actor1);\n\t\t\tactor1_nodes['twoWaySwitch2'] = create_twoWaySwitch2(actor1);\n\t\t\tactor1_nodes['twoWaySwitch3'] = create_twoWaySwitch3(actor1);\n\t\t\tactor1_nodes['rayIntersectsObject1'].node.setInput(\n\t\t\t\t'Ray',\n\t\t\t\tactor1_nodes['getWebXRControllerProperty1'].node,\n\t\t\t\t'Ray'\n\t\t\t);\n\t\t\tactor1_nodes['setMaterialColor1'].node.setInput('trigger', actor1_nodes['onTick1'].node, 'trigger');\n\t\t\tactor1_nodes['setMaterialColor1'].node.setInput('color', actor1_nodes['twoWaySwitch1'].node, 'val');\n\t\t\tactor1_nodes['setMaterialColor1'].node.setInput('lerp', actor1_nodes['twoWaySwitch2'].node, 'val');\n\t\t\tactor1_nodes['setObjectScale1'].node.setInput('trigger', actor1_nodes['onTick1'].node, 'trigger');\n\t\t\tactor1_nodes['setObjectScale1'].node.setInput('mult', actor1_nodes['twoWaySwitch3'].node, 'val');\n\t\t\tactor1_nodes['setObjectScale1'].node.setInput('lerp', actor1_nodes['twoWaySwitch2'].node, 'val');\n\t\t\tactor1_nodes['twoWaySwitch1'].node.setInput(\n\t\t\t\t'condition',\n\t\t\t\tactor1_nodes['rayIntersectsObject1'].node,\n\t\t\t\t'intersects'\n\t\t\t);\n\t\t\tactor1_nodes['twoWaySwitch1'].node.setInput('ifTrue', actor1_nodes['constant1'].node, 'val');\n\t\t\tactor1_nodes['twoWaySwitch1'].node.setInput('ifFalse', actor1_nodes['constant2'].node, 'val');\n\t\t\tactor1_nodes['twoWaySwitch2'].node.setInput(\n\t\t\t\t'condition',\n\t\t\t\tactor1_nodes['rayIntersectsObject1'].node,\n\t\t\t\t'intersects'\n\t\t\t);\n\t\t\tactor1_nodes['twoWaySwitch3'].node.setInput(\n\t\t\t\t'condition',\n\t\t\t\tactor1_nodes['rayIntersectsObject1'].node,\n\t\t\t\t'intersects'\n\t\t\t);\n\t\t\tif (actor1.childrenController) {\n\t\t\t\tactor1.childrenController.selection.set([]);\n\t\t\t}\n\t\t\tactor1.uiData.setComment(\n\t\t\t\t'Inside this node, we add behaviors to each object. [Dive into it](./getWebXRControllerProperty1) to see how it is setup.'\n\t\t\t);\n\t\t\tactor1.uiData.setPosition(-100, 1200);\n\t\t\tactor1.flags.display.set(true);\n\t\t\tactor1.params.postCreateSpareParams();\n\t\t\tactor1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: actor1, children: actor1_nodes};\n\t\t}\n\t\tfunction create_copy1(geo1: GeoObjNode) {\n\t\t\tvar copy1 = geo1.createNode('copy');\n\t\t\tcopy1.setName('copy1');\n\t\t\tconst copy1_nodes: ReturnedNodeDataDict = {};\n\t\t\tcopy1.uiData.setComment(\n\t\t\t\t'the `copy` node copies the 1st input (the `roundedBox`) on each point of the 2nd input (the plane). By adjusting the plane resolution, we can adjust how many boxes this will create. '\n\t\t\t);\n\t\t\tcopy1.uiData.setPosition(-100, 100);\n\t\t\tcopy1.params.postCreateSpareParams();\n\t\t\tcopy1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: copy1, children: copy1_nodes};\n\t\t}\n\t\tfunction create_material1(geo1: GeoObjNode) {\n\t\t\tvar material1 = geo1.createNode('material');\n\t\t\tmaterial1.setName('material1');\n\t\t\tconst material1_nodes: ReturnedNodeDataDict = {};\n\t\t\tmaterial1.uiData.setComment(\n\t\t\t\t'This assigns a shiny material to each box.\\n\\nNote that `cloneMat` is set to `true`, as we need each box to have a unique material so that we can change their colors individually. '\n\t\t\t);\n\t\t\tmaterial1.uiData.setPosition(-100, 400);\n\t\t\tmaterial1.p.material.set('../MAT/meshStandard1');\n\t\t\tmaterial1.p.cloneMat.set(true);\n\t\t\tmaterial1.params.postCreateSpareParams();\n\t\t\tmaterial1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: material1, children: material1_nodes};\n\t\t}\n\t\tfunction create_plane1(geo1: GeoObjNode) {\n\t\t\tvar plane1 = geo1.createNode('plane');\n\t\t\tplane1.setName('plane1');\n\t\t\tconst plane1_nodes: ReturnedNodeDataDict = {};\n\t\t\tplane1.uiData.setPosition(0, -150);\n\t\t\tplane1.p.size.set([1.8, 1.4]);\n\t\t\tplane1.p.stepSize.set(0.2);\n\t\t\tplane1.p.direction.set([0, 0, 1]);\n\t\t\tplane1.params.postCreateSpareParams();\n\t\t\tplane1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: plane1, children: plane1_nodes};\n\t\t}\n\t\tfunction create_roundedBox1(geo1: GeoObjNode) {\n\t\t\tvar roundedBox1 = geo1.createNode('roundedBox');\n\t\t\troundedBox1.setName('roundedBox1');\n\t\t\tconst roundedBox1_nodes: ReturnedNodeDataDict = {};\n\t\t\troundedBox1.uiData.setPosition(-200, -150);\n\t\t\troundedBox1.p.size.set(0.2);\n\t\t\troundedBox1.p.bevel.set(0.03);\n\t\t\troundedBox1.params.postCreateSpareParams();\n\t\t\troundedBox1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: roundedBox1, children: roundedBox1_nodes};\n\t\t}\n\t\tfunction create_transform2(geo1: GeoObjNode) {\n\t\t\tvar transform2 = geo1.createNode('transform');\n\t\t\ttransform2.setName('transform2');\n\t\t\tconst transform2_nodes: ReturnedNodeDataDict = {};\n\t\t\ttransform2.uiData.setComment(\n\t\t\t\t'This moves the boxes down the `-Z` axis, as this is the direction the camera faces when starting an AR session.\\n\\nNote that following parameters:\\n- `applyOn` set to `object`, so we modify the object matrix, and not the geometry points\\n- `objectMode` set to `multiply matrix` so we do not override any pre-existing matrix values, such as the one set by the `copy` node.'\n\t\t\t);\n\t\t\ttransform2.uiData.setPosition(-100, 700);\n\t\t\ttransform2.p.applyOn.set(1);\n\t\t\ttransform2.p.objectMode.set(1);\n\t\t\ttransform2.p.t.set([0, 0, -2.5]);\n\t\t\ttransform2.params.postCreateSpareParams();\n\t\t\ttransform2.params.runOnSceneLoadHooks();\n\t\t\treturn {node: transform2, children: transform2_nodes};\n\t\t}\n\t\tgeo1_nodes['MAT'] = create_MAT(geo1);\n\t\tgeo1_nodes['actor1'] = create_actor1(geo1);\n\t\tgeo1_nodes['copy1'] = create_copy1(geo1);\n\t\tgeo1_nodes['material1'] = create_material1(geo1);\n\t\tgeo1_nodes['plane1'] = create_plane1(geo1);\n\t\tgeo1_nodes['roundedBox1'] = create_roundedBox1(geo1);\n\t\tgeo1_nodes['transform2'] = create_transform2(geo1);\n\t\tgeo1_nodes['actor1'].node.setInput(0, geo1_nodes['transform2'].node);\n\t\tgeo1_nodes['copy1'].node.setInput(0, geo1_nodes['roundedBox1'].node);\n\t\tgeo1_nodes['copy1'].node.setInput(1, geo1_nodes['plane1'].node);\n\t\tgeo1_nodes['material1'].node.setInput(0, geo1_nodes['copy1'].node);\n\t\tgeo1_nodes['transform2'].node.setInput(0, geo1_nodes['material1'].node);\n\t\tif (geo1.childrenController) {\n\t\t\tgeo1.childrenController.selection.set([]);\n\t\t}\n\t\tgeo1.uiData.setPosition(-50, -150);\n\t\tgeo1.flags.display.set(true);\n\t\tgeo1.params.postCreateSpareParams();\n\t\tgeo1.params.runOnSceneLoadHooks();\n\t\treturn {node: geo1, children: geo1_nodes};\n\t}\n\tfunction create_grid(parentNode: RootManagerNode) {\n\t\tvar grid = parentNode.createNode('geo');\n\t\tgrid.setName('grid');\n\t\tconst grid_nodes: ReturnedNodeDataDict = {};\n\t\tfunction create_planeHelper1(grid: GeoObjNode) {\n\t\t\tvar planeHelper1 = grid.createNode('planeHelper');\n\t\t\tplaneHelper1.setName('planeHelper1');\n\t\t\tconst planeHelper1_nodes: ReturnedNodeDataDict = {};\n\t\t\tplaneHelper1.uiData.setPosition(0, 0);\n\t\t\tplaneHelper1.flags.display.set(true);\n\t\t\tplaneHelper1.params.postCreateSpareParams();\n\t\t\tplaneHelper1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: planeHelper1, children: planeHelper1_nodes};\n\t\t}\n\t\tgrid_nodes['planeHelper1'] = create_planeHelper1(grid);\n\t\tif (grid.childrenController) {\n\t\t\tgrid.childrenController.selection.set([]);\n\t\t}\n\t\tgrid.uiData.setPosition(-50, -250);\n\t\tgrid.flags.display.set(false);\n\t\tgrid.params.postCreateSpareParams();\n\t\tgrid.params.runOnSceneLoadHooks();\n\t\treturn {node: grid, children: grid_nodes};\n\t}\n\tfunction create_cameras(parentNode: RootManagerNode) {\n\t\tvar cameras = parentNode.createNode('geo');\n\t\tcameras.setName('cameras');\n\t\tconst cameras_nodes: ReturnedNodeDataDict = {};\n\t\tfunction create_cameraControls1(cameras: GeoObjNode) {\n\t\t\tvar cameraControls1 = cameras.createNode('cameraControls');\n\t\t\tcameraControls1.setName('cameraControls1');\n\t\t\tconst cameraControls1_nodes: ReturnedNodeDataDict = {};\n\t\t\tfunction create_cameraOrbitControls1(cameraControls1: CameraControlsSopNode) {\n\t\t\t\tvar cameraOrbitControls1 = cameraControls1.createNode('cameraOrbitControls');\n\t\t\t\tcameraOrbitControls1.setName('cameraOrbitControls1');\n\t\t\t\tconst cameraOrbitControls1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tcameraOrbitControls1.uiData.setPosition(0, 0);\n\t\t\t\tcameraOrbitControls1.p.target.set([-0.03424406872017879, 0.2757555812056797, -0.10575574355459814]);\n\t\t\t\tcameraOrbitControls1.params.postCreateSpareParams();\n\t\t\t\tcameraOrbitControls1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: cameraOrbitControls1, children: cameraOrbitControls1_nodes};\n\t\t\t}\n\t\t\tcameraControls1_nodes['cameraOrbitControls1'] = create_cameraOrbitControls1(cameraControls1);\n\t\t\tif (cameraControls1.childrenController) {\n\t\t\t\tcameraControls1.childrenController.selection.set([cameraControls1_nodes['cameraOrbitControls1'].node]);\n\t\t\t}\n\t\t\tcameraControls1.uiData.setPosition(-350, 250);\n\t\t\tcameraControls1.p.node.set('cameraOrbitControls1');\n\t\t\tcameraControls1.params.postCreateSpareParams();\n\t\t\tcameraControls1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: cameraControls1, children: cameraControls1_nodes};\n\t\t}\n\t\tfunction create_cameraWebXRAR1(cameras: GeoObjNode) {\n\t\t\tvar cameraWebXRAR1 = cameras.createNode('cameraWebXRAR');\n\t\t\tcameraWebXRAR1.setName('cameraWebXRAR1');\n\t\t\tconst cameraWebXRAR1_nodes: ReturnedNodeDataDict = {};\n\t\t\tcameraWebXRAR1.uiData.setPosition(50, 250);\n\t\t\tcameraWebXRAR1.params.postCreateSpareParams();\n\t\t\tcameraWebXRAR1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: cameraWebXRAR1, children: cameraWebXRAR1_nodes};\n\t\t}\n\t\tfunction create_merge1(cameras: GeoObjNode) {\n\t\t\tvar merge1 = cameras.createNode('merge');\n\t\t\tmerge1.setName('merge1');\n\t\t\tconst merge1_nodes: ReturnedNodeDataDict = {};\n\t\t\tmerge1.uiData.setPosition(-150, 450);\n\t\t\tmerge1.flags.display.set(true);\n\t\t\tmerge1.params.postCreateSpareParams();\n\t\t\tmerge1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: merge1, children: merge1_nodes};\n\t\t}\n\t\tfunction create_perspectiveCamera_AR(cameras: GeoObjNode) {\n\t\t\tvar perspectiveCamera_AR = cameras.createNode('perspectiveCamera');\n\t\t\tperspectiveCamera_AR.setName('perspectiveCamera_AR');\n\t\t\tconst perspectiveCamera_AR_nodes: ReturnedNodeDataDict = {};\n\t\t\tperspectiveCamera_AR.uiData.setPosition(50, 100);\n\t\t\tperspectiveCamera_AR.params.postCreateSpareParams();\n\t\t\tperspectiveCamera_AR.params.runOnSceneLoadHooks();\n\t\t\treturn {node: perspectiveCamera_AR, children: perspectiveCamera_AR_nodes};\n\t\t}\n\t\tfunction create_perspectiveCamera_DEBUG(cameras: GeoObjNode) {\n\t\t\tvar perspectiveCamera_DEBUG = cameras.createNode('perspectiveCamera');\n\t\t\tperspectiveCamera_DEBUG.setName('perspectiveCamera_DEBUG');\n\t\t\tconst perspectiveCamera_DEBUG_nodes: ReturnedNodeDataDict = {};\n\t\t\tperspectiveCamera_DEBUG.uiData.setPosition(-350, 100);\n\t\t\tperspectiveCamera_DEBUG.p.position.set([0, 1.9000000000000001, 3]);\n\t\t\tperspectiveCamera_DEBUG.params.postCreateSpareParams();\n\t\t\tperspectiveCamera_DEBUG.params.runOnSceneLoadHooks();\n\t\t\treturn {node: perspectiveCamera_DEBUG, children: perspectiveCamera_DEBUG_nodes};\n\t\t}\n\t\tcameras_nodes['cameraControls1'] = create_cameraControls1(cameras);\n\t\tcameras_nodes['cameraWebXRAR1'] = create_cameraWebXRAR1(cameras);\n\t\tcameras_nodes['merge1'] = create_merge1(cameras);\n\t\tcameras_nodes['perspectiveCamera_AR'] = create_perspectiveCamera_AR(cameras);\n\t\tcameras_nodes['perspectiveCamera_DEBUG'] = create_perspectiveCamera_DEBUG(cameras);\n\t\tcameras_nodes['cameraControls1'].node.setInput(0, cameras_nodes['perspectiveCamera_DEBUG'].node);\n\t\tcameras_nodes['cameraWebXRAR1'].node.setInput(0, cameras_nodes['perspectiveCamera_AR'].node);\n\t\tcameras_nodes['merge1'].node.setInput(0, cameras_nodes['cameraControls1'].node);\n\t\tcameras_nodes['merge1'].node.setInput(1, cameras_nodes['cameraWebXRAR1'].node);\n\t\tif (cameras.childrenController) {\n\t\t\tcameras.childrenController.selection.set([]);\n\t\t}\n\t\tcameras.uiData.setPosition(-50, 50);\n\t\tcameras.flags.display.set(true);\n\t\tcameras.params.postCreateSpareParams();\n\t\tcameras.params.runOnSceneLoadHooks();\n\t\treturn {node: cameras, children: cameras_nodes};\n\t}\n\tfunction create_lights(parentNode: RootManagerNode) {\n\t\tvar lights = parentNode.createNode('geo');\n\t\tlights.setName('lights');\n\t\tconst lights_nodes: ReturnedNodeDataDict = {};\n\t\tfunction create_hemisphereLight1(lights: GeoObjNode) {\n\t\t\tvar hemisphereLight1 = lights.createNode('hemisphereLight');\n\t\t\themisphereLight1.setName('hemisphereLight1');\n\t\t\tconst hemisphereLight1_nodes: ReturnedNodeDataDict = {};\n\t\t\themisphereLight1.uiData.setPosition(0, -100);\n\t\t\themisphereLight1.flags.display.set(true);\n\t\t\themisphereLight1.params.postCreateSpareParams();\n\t\t\themisphereLight1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: hemisphereLight1, children: hemisphereLight1_nodes};\n\t\t}\n\t\tlights_nodes['hemisphereLight1'] = create_hemisphereLight1(lights);\n\t\tif (lights.childrenController) {\n\t\t\tlights.childrenController.selection.set([]);\n\t\t}\n\t\tlights.uiData.setPosition(-50, -50);\n\t\tlights.flags.display.set(true);\n\t\tlights.params.postCreateSpareParams();\n\t\tlights.params.runOnSceneLoadHooks();\n\t\treturn {node: lights, children: lights_nodes};\n\t}\n\tscene_root_nodes['geo1'] = create_geo1(root);\n\tscene_root_nodes['grid'] = create_grid(root);\n\tscene_root_nodes['cameras'] = create_cameras(root);\n\tscene_root_nodes['lights'] = create_lights(root);\n\treturn {\n\t\tscene,\n\t\tcameraPath: '/cameras/cameras:sopGroup/perspectiveCamera_AR',\n\t\tfocusedNodes: Object.values(scene_root_nodes['geo1'].children).map((n) => n.node),\n\t\tautoLayout: false,\n\t};\n}\n// export const sopCameraWebXRAR_controllerRay2 = [\n// \t// new Example({name: `${ExamplePrefix.BY_NODE}/sop/cameraWebXRAR/controllerRay2`, createData}),\n// \tnew Example({\n// \t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.AR}/controllerRay2`,\n// \t\tcreateData,\n// \t\tcategories: [ExampleCategory.AR],\n// \t\trelatedNodes: [CameraWebXRARSopNode],\n// \t}),\n// ];\n"],"names":["geo1","MAT","COP","actor1","grid","cameras","cameraControls1","lights"],"sourceRoot":""}