(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_engine_examples_examples_mat_MeshStandardBuilder_texture_distortion_ts"],{

/***/ 80863:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createData": function() { return /* binding */ createData; }
/* harmony export */ });
/* harmony import */ var _polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51254);
/* harmony import */ var _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52070);
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21410);




function createData(options) {
  const { scene } = options;
  const root = scene.root();
  function create_geo1(parentNode) {
    var geo1 = parentNode.createNode("geo");
    geo1.setName("geo1");
    function create_MAT(geo12) {
      var MAT2 = geo12.createNode("materialsNetwork");
      MAT2.setName("MAT");
      function create_COP(MAT3) {
        var COP2 = MAT3.createNode("copNetwork");
        COP2.setName("COP");
        function create_image1(COP3) {
          var image12 = COP3.createNode("image");
          image12.setName("image1");
          image12.uiData.setPosition(-200, 50);
          image12.p.url.set(
            "https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/textures/resources/unsplash.com/charlesdeluvio-pOUA8Xay514-unsplash.jpg"
          );
          image12.p.tcolorSpace.set(true);
          image12.p.colorSpace.set(three__WEBPACK_IMPORTED_MODULE_0__.SRGBColorSpace);
          image12.p.tminFilter.set(true);
          image12.p.tmagFilter.set(true);
          image12.p.tanisotropy.set(true);
          image12.p.useRendererMaxAnisotropy.set(true);
          image12.params.postCreateSpareParams();
          image12.params.runOnSceneLoadHooks();
          return image12;
        }
        var image1 = create_image1(COP2);
        COP2.uiData.setPosition(300, 250);
        COP2.params.postCreateSpareParams();
        COP2.params.runOnSceneLoadHooks();
        return { COP: COP2, image1 };
      }
      function create_meshStandardBuilder1(MAT3) {
        var meshStandardBuilder12 = MAT3.createNode("meshStandardBuilder");
        meshStandardBuilder12.setName("meshStandardBuilder1");
        function create_add1(meshStandardBuilder13) {
          var add12 = meshStandardBuilder13.createNode("add");
          add12.setName("add1");
          add12.uiData.setPosition(-800, -50);
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "add0", [0, 0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "add1", [0, 0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "add2", [0, 0, 0], { spare: true, editable: true });
          add12.params.postCreateSpareParams();
          add12.params.runOnSceneLoadHooks();
          return add12;
        }
        function create_constant1(meshStandardBuilder13) {
          var constant12 = meshStandardBuilder13.createNode("constant");
          constant12.setName("constant1");
          constant12.uiData.setPosition(-200, -350);
          constant12.p.type.set(4);
          constant12.p.color.set([0.25882352941176473, 0.6431372549019608, 0.7411764705882353]);
          constant12.p.asColor.set(true);
          constant12.params.postCreateSpareParams();
          constant12.params.runOnSceneLoadHooks();
          return constant12;
        }
        function create_constant2(meshStandardBuilder13) {
          var constant22 = meshStandardBuilder13.createNode("constant");
          constant22.setName("constant2");
          constant22.uiData.setPosition(-200, -200);
          constant22.p.type.set(4);
          constant22.p.color.set([0.09411764705882353, 0.3686274509803922, 0.5058823529411764]);
          constant22.p.asColor.set(true);
          constant22.params.postCreateSpareParams();
          constant22.params.runOnSceneLoadHooks();
          return constant22;
        }
        function create_floatToVec2_1(meshStandardBuilder13) {
          var floatToVec2_12 = meshStandardBuilder13.createNode("floatToVec2");
          floatToVec2_12.setName("floatToVec2_1");
          floatToVec2_12.uiData.setPosition(-500, -50);
          floatToVec2_12.params.postCreateSpareParams();
          floatToVec2_12.params.runOnSceneLoadHooks();
          return floatToVec2_12;
        }
        function create_floatToVec3_1(meshStandardBuilder13) {
          var floatToVec3_12 = meshStandardBuilder13.createNode("floatToVec3");
          floatToVec3_12.setName("floatToVec3_1");
          floatToVec3_12.uiData.setPosition(-1150, 250);
          floatToVec3_12.params.postCreateSpareParams();
          floatToVec3_12.params.runOnSceneLoadHooks();
          return floatToVec3_12;
        }
        function create_globals1(meshStandardBuilder13) {
          var globals12 = meshStandardBuilder13.createNode("globals");
          globals12.setName("globals1");
          globals12.uiData.setPosition(-1450, -50);
          globals12.params.postCreateSpareParams();
          globals12.params.runOnSceneLoadHooks();
          return globals12;
        }
        function create_grid1(meshStandardBuilder13) {
          var grid12 = meshStandardBuilder13.createNode("grid");
          grid12.setName("grid1");
          grid12.uiData.setPosition(-100, -50);
          grid12.p.lineWidth.set(0.05);
          grid12.p.freqMult.set(2.7);
          grid12.params.postCreateSpareParams();
          grid12.params.runOnSceneLoadHooks();
          return grid12;
        }
        function create_mix1(meshStandardBuilder13) {
          var mix12 = meshStandardBuilder13.createNode("mix");
          mix12.setName("mix1");
          mix12.uiData.setPosition(50, -200);
          mix12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "value0", [0, 0, 0], { spare: true, editable: false });
          mix12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "value1", [0, 0, 0], { spare: true, editable: false });
          mix12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "blend", 0.5, { spare: true, editable: false });
          mix12.params.postCreateSpareParams();
          mix12.params.runOnSceneLoadHooks();
          return mix12;
        }
        function create_multAdd1(meshStandardBuilder13) {
          var multAdd12 = meshStandardBuilder13.createNode("multAdd");
          multAdd12.setName("multAdd1");
          multAdd12.uiData.setPosition(-1300, 250);
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "value", 0, { spare: true, editable: false });
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "preAdd", 0, { spare: true, editable: true });
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: true });
          multAdd12.params.get("mult").set(0.18);
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "postAdd", 0, { spare: true, editable: true });
          multAdd12.params.postCreateSpareParams();
          multAdd12.params.runOnSceneLoadHooks();
          return multAdd12;
        }
        function create_noise1(meshStandardBuilder13) {
          var noise12 = meshStandardBuilder13.createNode("noise");
          noise12.setName("noise1");
          noise12.uiData.setPosition(-1e3, 150);
          noise12.p.type.set(1);
          noise12.p.octaves.set(6);
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "amp", [1, 1, 1], { spare: true, editable: true });
          noise12.params.get("amp").set([0.30000000000000004, 0.30000000000000004, 0.30000000000000004]);
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "position", [0, 0, 0], { spare: true, editable: false });
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "freq", [1, 1, 1], { spare: true, editable: true });
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "offset", [0, 0, 0], { spare: true, editable: false });
          noise12.params.postCreateSpareParams();
          noise12.params.runOnSceneLoadHooks();
          return noise12;
        }
        function create_output1(meshStandardBuilder13) {
          var output12 = meshStandardBuilder13.createNode("output");
          output12.setName("output1");
          output12.uiData.setPosition(250, -50);
          output12.params.postCreateSpareParams();
          output12.params.runOnSceneLoadHooks();
          return output12;
        }
        function create_vec3ToFloat1(meshStandardBuilder13) {
          var vec3ToFloat12 = meshStandardBuilder13.createNode("vec3ToFloat");
          vec3ToFloat12.setName("vec3ToFloat1");
          vec3ToFloat12.uiData.setPosition(-600, -50);
          vec3ToFloat12.params.postCreateSpareParams();
          vec3ToFloat12.params.runOnSceneLoadHooks();
          return vec3ToFloat12;
        }
        var add1 = create_add1(meshStandardBuilder12);
        var constant1 = create_constant1(meshStandardBuilder12);
        var constant2 = create_constant2(meshStandardBuilder12);
        var floatToVec2_1 = create_floatToVec2_1(meshStandardBuilder12);
        var floatToVec3_1 = create_floatToVec3_1(meshStandardBuilder12);
        var globals1 = create_globals1(meshStandardBuilder12);
        var grid1 = create_grid1(meshStandardBuilder12);
        var mix1 = create_mix1(meshStandardBuilder12);
        var multAdd1 = create_multAdd1(meshStandardBuilder12);
        var noise1 = create_noise1(meshStandardBuilder12);
        var output1 = create_output1(meshStandardBuilder12);
        var vec3ToFloat1 = create_vec3ToFloat1(meshStandardBuilder12);
        add1.setInput("add0", globals1, "position");
        add1.setInput("add1", noise1, "noise");
        floatToVec2_1.setInput("x", vec3ToFloat1, "x");
        floatToVec2_1.setInput("y", vec3ToFloat1, "z");
        floatToVec3_1.setInput("y", multAdd1, "val");
        grid1.setInput("uv", floatToVec2_1, "vec2");
        mix1.setInput("value0", constant1, "val");
        mix1.setInput("value1", constant2, "val");
        mix1.setInput("blend", grid1, "grid");
        multAdd1.setInput("value", globals1, "time");
        noise1.setInput("position", globals1, "position");
        noise1.setInput("offset", floatToVec3_1, "vec3");
        output1.setInput("color", mix1, "mix");
        vec3ToFloat1.setInput("vec", add1, "sum");
        meshStandardBuilder12.uiData.setPosition(0, 50);
        meshStandardBuilder12.params.postCreateSpareParams();
        meshStandardBuilder12.params.runOnSceneLoadHooks();
        return meshStandardBuilder12;
      }
      function create_meshStandardBuilder2(MAT3) {
        var meshStandardBuilder22 = MAT3.createNode("meshStandardBuilder");
        meshStandardBuilder22.setName("meshStandardBuilder2");
        function create_add1(meshStandardBuilder23) {
          var add12 = meshStandardBuilder23.createNode("add");
          add12.setName("add1");
          add12.uiData.setPosition(-550, -50);
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR2 */ ._.VECTOR2, "add0", [0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR2 */ ._.VECTOR2, "add1", [0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR2 */ ._.VECTOR2, "add2", [0, 0], { spare: true, editable: true });
          add12.params.postCreateSpareParams();
          add12.params.runOnSceneLoadHooks();
          return add12;
        }
        function create_floatToVec2_2(meshStandardBuilder23) {
          var floatToVec2_22 = meshStandardBuilder23.createNode("floatToVec2");
          floatToVec2_22.setName("floatToVec2_2");
          floatToVec2_22.uiData.setPosition(-950, -350);
          floatToVec2_22.params.postCreateSpareParams();
          floatToVec2_22.params.runOnSceneLoadHooks();
          return floatToVec2_22;
        }
        function create_floatToVec3_1(meshStandardBuilder23) {
          var floatToVec3_12 = meshStandardBuilder23.createNode("floatToVec3");
          floatToVec3_12.setName("floatToVec3_1");
          floatToVec3_12.uiData.setPosition(-1150, 250);
          floatToVec3_12.params.postCreateSpareParams();
          floatToVec3_12.params.runOnSceneLoadHooks();
          return floatToVec3_12;
        }
        function create_globals1(meshStandardBuilder23) {
          var globals12 = meshStandardBuilder23.createNode("globals");
          globals12.setName("globals1");
          globals12.uiData.setPosition(-1450, -50);
          globals12.params.postCreateSpareParams();
          globals12.params.runOnSceneLoadHooks();
          return globals12;
        }
        function create_globals2(meshStandardBuilder23) {
          var globals22 = meshStandardBuilder23.createNode("globals");
          globals22.setName("globals2");
          globals22.uiData.setPosition(-1450, -350);
          globals22.params.postCreateSpareParams();
          globals22.params.runOnSceneLoadHooks();
          return globals22;
        }
        function create_multAdd1(meshStandardBuilder23) {
          var multAdd12 = meshStandardBuilder23.createNode("multAdd");
          multAdd12.setName("multAdd1");
          multAdd12.uiData.setPosition(-1300, 250);
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "value", 0, { spare: true, editable: false });
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "preAdd", 0, { spare: true, editable: true });
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: true });
          multAdd12.params.get("mult").set(0.18);
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.FLOAT */ ._.FLOAT, "postAdd", 0, { spare: true, editable: true });
          multAdd12.params.postCreateSpareParams();
          multAdd12.params.runOnSceneLoadHooks();
          return multAdd12;
        }
        function create_multAdd2(meshStandardBuilder23) {
          var multAdd22 = meshStandardBuilder23.createNode("multAdd");
          multAdd22.setName("multAdd2");
          multAdd22.uiData.setPosition(-850, -350);
          multAdd22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR2 */ ._.VECTOR2, "value", [0, 0], { spare: true, editable: false });
          multAdd22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR2 */ ._.VECTOR2, "preAdd", [0, 0], { spare: true, editable: true });
          multAdd22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR2 */ ._.VECTOR2, "mult", [1, 1], { spare: true, editable: true });
          multAdd22.params.get("mult").set([1, -0.5]);
          multAdd22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR2 */ ._.VECTOR2, "postAdd", [0, 0], { spare: true, editable: true });
          multAdd22.params.get("postAdd").set([0.43, -0.1]);
          multAdd22.params.postCreateSpareParams();
          multAdd22.params.runOnSceneLoadHooks();
          return multAdd22;
        }
        function create_noise1(meshStandardBuilder23) {
          var noise12 = meshStandardBuilder23.createNode("noise");
          noise12.setName("noise1");
          noise12.uiData.setPosition(-1e3, 100);
          noise12.p.octaves.set(6);
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "amp", [1, 1, 1], { spare: true, editable: true });
          noise12.params.get("amp").set([0.12000000000000005, 0.12000000000000005, 0.12000000000000005]);
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "position", [0, 0, 0], { spare: true, editable: false });
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "freq", [1, 1, 1], { spare: true, editable: true });
          noise12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.VECTOR3 */ ._.VECTOR3, "offset", [0, 0, 0], { spare: true, editable: false });
          noise12.params.postCreateSpareParams();
          noise12.params.runOnSceneLoadHooks();
          return noise12;
        }
        function create_output1(meshStandardBuilder23) {
          var output12 = meshStandardBuilder23.createNode("output");
          output12.setName("output1");
          output12.uiData.setPosition(250, -50);
          output12.params.postCreateSpareParams();
          output12.params.runOnSceneLoadHooks();
          return output12;
        }
        function create_texture1(meshStandardBuilder23) {
          var texture12 = meshStandardBuilder23.createNode("texture");
          texture12.setName("texture1");
          texture12.uiData.setPosition(-350, 0);
          texture12.params.postCreateSpareParams();
          texture12.params.runOnSceneLoadHooks();
          return texture12;
        }
        function create_vec3ToFloat1(meshStandardBuilder23) {
          var vec3ToFloat12 = meshStandardBuilder23.createNode("vec3ToFloat");
          vec3ToFloat12.setName("vec3ToFloat1");
          vec3ToFloat12.uiData.setPosition(-1150, -350);
          vec3ToFloat12.params.postCreateSpareParams();
          vec3ToFloat12.params.runOnSceneLoadHooks();
          return vec3ToFloat12;
        }
        function create_vec3ToVec2_1(meshStandardBuilder23) {
          var vec3ToVec2_12 = meshStandardBuilder23.createNode("vec3ToVec2");
          vec3ToVec2_12.setName("vec3ToVec2_1");
          vec3ToVec2_12.uiData.setPosition(-850, 50);
          vec3ToVec2_12.params.postCreateSpareParams();
          vec3ToVec2_12.params.runOnSceneLoadHooks();
          return vec3ToVec2_12;
        }
        function create_vec4ToVec3_1(meshStandardBuilder23) {
          var vec4ToVec3_12 = meshStandardBuilder23.createNode("vec4ToVec3");
          vec4ToVec3_12.setName("vec4ToVec3_1");
          vec4ToVec3_12.uiData.setPosition(-200, 0);
          vec4ToVec3_12.params.postCreateSpareParams();
          vec4ToVec3_12.params.runOnSceneLoadHooks();
          return vec4ToVec3_12;
        }
        var add1 = create_add1(meshStandardBuilder22);
        var floatToVec2_2 = create_floatToVec2_2(meshStandardBuilder22);
        var floatToVec3_1 = create_floatToVec3_1(meshStandardBuilder22);
        var globals1 = create_globals1(meshStandardBuilder22);
        var globals2 = create_globals2(meshStandardBuilder22);
        var multAdd1 = create_multAdd1(meshStandardBuilder22);
        var multAdd2 = create_multAdd2(meshStandardBuilder22);
        var noise1 = create_noise1(meshStandardBuilder22);
        var output1 = create_output1(meshStandardBuilder22);
        var texture1 = create_texture1(meshStandardBuilder22);
        var vec3ToFloat1 = create_vec3ToFloat1(meshStandardBuilder22);
        var vec3ToVec2_1 = create_vec3ToVec2_1(meshStandardBuilder22);
        var vec4ToVec3_1 = create_vec4ToVec3_1(meshStandardBuilder22);
        add1.setInput("add0", multAdd2, "val");
        add1.setInput("add1", vec3ToVec2_1, "vec2");
        floatToVec2_2.setInput("x", vec3ToFloat1, "z");
        floatToVec2_2.setInput("y", vec3ToFloat1, "x");
        floatToVec3_1.setInput("x", multAdd1, "val");
        multAdd1.setInput("value", globals1, "time");
        multAdd2.setInput("value", floatToVec2_2, "vec2");
        noise1.setInput("position", globals1, "position");
        noise1.setInput("offset", floatToVec3_1, "vec3");
        output1.setInput("color", vec4ToVec3_1, "vec3");
        texture1.setInput("uv", add1, "sum");
        vec3ToFloat1.setInput("vec", globals2, "position");
        vec3ToVec2_1.setInput("vec3", noise1, "noise");
        vec4ToVec3_1.setInput("vec4", texture1, "rgba");
        meshStandardBuilder22.uiData.setPosition(0, 250);
        meshStandardBuilder22.p.useMap.set(true);
        meshStandardBuilder22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_1__/* .ParamType.NODE_PATH */ ._.NODE_PATH, "texture1", "", {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true,
          nodeSelection: { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_2__/* .NodeContext.COP */ .sy.COP }
        });
        meshStandardBuilder22.params.get("texture1").set("../COP/image1");
        meshStandardBuilder22.params.get("texture1").options.setOption("nodeSelection", { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_2__/* .NodeContext.COP */ .sy.COP });
        meshStandardBuilder22.params.get("texture1").options.setOption("editable", void 0);
        meshStandardBuilder22.params.postCreateSpareParams();
        meshStandardBuilder22.params.runOnSceneLoadHooks();
        return meshStandardBuilder22;
      }
      var COP = create_COP(MAT2);
      var meshStandardBuilder1 = create_meshStandardBuilder1(MAT2);
      var meshStandardBuilder2 = create_meshStandardBuilder2(MAT2);
      MAT2.uiData.setPosition(-450, 200);
      MAT2.params.postCreateSpareParams();
      MAT2.params.runOnSceneLoadHooks();
      return { MAT: MAT2, COP, meshStandardBuilder1, meshStandardBuilder2 };
    }
    function create_fileGLTF1(geo12) {
      var fileGLTF12 = geo12.createNode("fileGLTF");
      fileGLTF12.setName("fileGLTF1");
      fileGLTF12.uiData.setPosition(-200, -50);
      fileGLTF12.p.url.set("https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/models/car.glb");
      fileGLTF12.params.postCreateSpareParams();
      fileGLTF12.params.runOnSceneLoadHooks();
      return fileGLTF12;
    }
    function create_material1(geo12) {
      var material12 = geo12.createNode("material");
      material12.setName("material1");
      material12.uiData.setPosition(-250, 300);
      material12.p.group.set("*");
      material12.p.material.set("../MAT/meshStandardBuilder1");
      material12.params.postCreateSpareParams();
      material12.params.runOnSceneLoadHooks();
      return material12;
    }
    function create_material2(geo12) {
      var material22 = geo12.createNode("material");
      material22.setName("material2");
      material22.uiData.setPosition(0, 300);
      material22.p.group.set("*");
      material22.p.material.set("../MAT/meshStandardBuilder2");
      material22.params.postCreateSpareParams();
      material22.params.runOnSceneLoadHooks();
      return material22;
    }
    function create_merge1(geo12) {
      var merge12 = geo12.createNode("merge");
      merge12.setName("merge1");
      merge12.uiData.setPosition(-100, 450);
      merge12.flags.display.set(true);
      merge12.params.postCreateSpareParams();
      merge12.params.runOnSceneLoadHooks();
      return merge12;
    }
    function create_transform1(geo12) {
      var transform12 = geo12.createNode("transform");
      transform12.setName("transform1");
      transform12.uiData.setPosition(0, 100);
      transform12.p.applyOn.set(1);
      transform12.p.t.set([0, 0, 1]);
      transform12.params.postCreateSpareParams();
      transform12.params.runOnSceneLoadHooks();
      return transform12;
    }
    function create_transform2(geo12) {
      var transform22 = geo12.createNode("transform");
      transform22.setName("transform2");
      transform22.uiData.setPosition(-250, 100);
      transform22.p.applyOn.set(1);
      transform22.p.t.set([0, 0, -1]);
      transform22.params.postCreateSpareParams();
      transform22.params.runOnSceneLoadHooks();
      return transform22;
    }
    var MAT = create_MAT(geo1);
    var fileGLTF1 = create_fileGLTF1(geo1);
    var material1 = create_material1(geo1);
    var material2 = create_material2(geo1);
    var merge1 = create_merge1(geo1);
    var transform1 = create_transform1(geo1);
    var transform2 = create_transform2(geo1);
    material1.setInput(0, transform2);
    material2.setInput(0, transform1);
    merge1.setInput(0, material1);
    merge1.setInput(1, material2);
    transform1.setInput(0, fileGLTF1);
    transform2.setInput(0, fileGLTF1);
    geo1.uiData.setPosition(-50, -150);
    geo1.flags.display.set(true);
    geo1.params.postCreateSpareParams();
    geo1.params.runOnSceneLoadHooks();
    return { geo1, MAT };
  }
  function create_grid(parentNode) {
    var grid = parentNode.createNode("geo");
    grid.setName("grid");
    function create_planeHelper1(grid2) {
      var planeHelper12 = grid2.createNode("planeHelper");
      planeHelper12.setName("planeHelper1");
      planeHelper12.uiData.setPosition(0, 0);
      planeHelper12.flags.display.set(true);
      planeHelper12.params.postCreateSpareParams();
      planeHelper12.params.runOnSceneLoadHooks();
      return planeHelper12;
    }
    var planeHelper1 = create_planeHelper1(grid);
    grid.uiData.setPosition(-50, -250);
    grid.flags.display.set(true);
    grid.params.postCreateSpareParams();
    grid.params.runOnSceneLoadHooks();
    return { grid, planeHelper1 };
  }
  function create_perspectiveCamera1(parentNode) {
    var perspectiveCamera12 = parentNode.createNode("perspectiveCamera");
    perspectiveCamera12.setName("perspectiveCamera1");
    function create_events1(perspectiveCamera13) {
      var events12 = perspectiveCamera13.createNode("eventsNetwork");
      events12.setName("events1");
      function create_cameraOrbitControls1(events13) {
        var cameraOrbitControls12 = events13.createNode("cameraOrbitControls");
        cameraOrbitControls12.setName("cameraOrbitControls1");
        cameraOrbitControls12.uiData.setPosition(150, 50);
        cameraOrbitControls12.p.target.set([-0.26443078459590236, -0.11992703127932317, 0.012515632855706432]);
        cameraOrbitControls12.params.postCreateSpareParams();
        cameraOrbitControls12.params.runOnSceneLoadHooks();
        return cameraOrbitControls12;
      }
      var cameraOrbitControls1 = create_cameraOrbitControls1(events12);
      events12.uiData.setPosition(-200, 50);
      events12.params.postCreateSpareParams();
      events12.params.runOnSceneLoadHooks();
      return { events1: events12, cameraOrbitControls1 };
    }
    var events1 = create_events1(perspectiveCamera12);
    perspectiveCamera12.uiData.setPosition(-200, 100);
    perspectiveCamera12.flags.display.set(true);
    perspectiveCamera12.p.t.set([-3.239139172233073, 2.2874266834094734, 2.4120531975543447]);
    perspectiveCamera12.p.r.set([-45.0725537218878, -41.18381102332839, -33.43066224580108]);
    perspectiveCamera12.p.controls.set("./events1/cameraOrbitControls1");
    perspectiveCamera12.params.postCreateSpareParams();
    perspectiveCamera12.params.runOnSceneLoadHooks();
    return { perspectiveCamera1: perspectiveCamera12, events1 };
  }
  function create_hemisphereLight1(parentNode) {
    var hemisphereLight1 = parentNode.createNode("hemisphereLight");
    hemisphereLight1.setName("hemisphereLight1");
    hemisphereLight1.uiData.setPosition(150, 100);
    hemisphereLight1.flags.display.set(true);
    hemisphereLight1.params.postCreateSpareParams();
    hemisphereLight1.params.runOnSceneLoadHooks();
    return hemisphereLight1;
  }
  create_geo1(root);
  create_grid(root);
  var { perspectiveCamera1 } = create_perspectiveCamera1(root);
  create_hemisphereLight1(root);
  scene.setFrame(0);
  scene.play();
  return {
    scene,
    cameraPath: perspectiveCamera1.path(),
    focusedNodes: [],
    autoLayout: false
  };
}


/***/ })

}])
//# sourceMappingURL=src_engine_examples_examples_mat_MeshStandardBuilder_texture_distortion_ts.0eb70d14b54ec2bc6b17.js.map