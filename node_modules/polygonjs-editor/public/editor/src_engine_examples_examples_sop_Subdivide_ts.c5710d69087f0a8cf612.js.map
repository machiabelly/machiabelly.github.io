{"version":3,"file":"src_engine_examples_examples_sop_Subdivide_ts.c5710d69087f0a8cf612.js","mappings":";;;;;;;;;AAYO,SAAS,yCAAyC,MAAuB;AAE/E,QAAM,qBAAqB,KAAK,WAAW,mBAAmB;AAC9D,qBAAmB,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAEpC,QAAM,UAAU,mBAAmB,WAAW,eAAe;AAC7D,QAAM,iBAAiB,QAAQ,WAAW,qBAAqB;AAC/D,qBAAmB,EAAE,SAAS,QAAQ,cAAc;AAEpD,SAAO,EAAC,mBAAkB;AAC3B;;;;;;;;;;;;;;ACrBuD;AAEhD,SAAS,WAAW,SAA2C;AACrE,QAAM,EAAC,MAAK,IAAI;AAChB,QAAM,OAAO,MAAM,KAAK;AACxB,QAAM,MAAM,KAAK,WAAW,KAAK;AACjC,QAAM,MAAM,IAAI,WAAW,KAAK;AAGhC,QAAM,YAAY,IAAI,WAAW,WAAW;AAC5C,YAAU,SAAS,GAAG,GAAG;AACzB,YAAU,MAAM,QAAQ,IAAI,IAAI;AAGhC,OAAK,WAAW,iBAAiB;AAEjC,QAAM,EAAC,mBAAkB,IAAI,gGAAwC,CAAC,IAAI;AAE1E,SAAO;AAAA,IACN;AAAA,IACA,YAAY,mBAAmB,KAAK;AAAA,IACpC,cAAc,CAAC,SAAS;AAAA,IACxB,YAAY;AAAA,EACb;AACD","sources":["webpack:///../src/engine/examples/ExampleUtils.ts","webpack:///../src/engine/examples/examples/sop/Subdivide.ts"],"sourcesContent":["import type {BaseNodeType} from './../../../@polygonjs/polygonjs/src/engine/nodes/_Base';\nimport type {RootManagerNode} from './../../../@polygonjs/polygonjs/src/engine/nodes/manager/Root';\n// import {PolyScene} from './../../../@polygonjs/polygonjs/src/engine/scene/PolyScene';\n// export function initDefaultScene(scene: PolyScene) {\n// \tconst root = scene.root();\n\n// \t// create a box and a sphere\n// \tconst geo = root.createNode('geo');\n\n// \treturn {scene, root, geo};\n// }\n\nexport function addPerspectiveCameraOBJWithOrbitControls(root: RootManagerNode) {\n\t// create a camera\n\tconst perspectiveCamera1 = root.createNode('perspectiveCamera');\n\tperspectiveCamera1.p.t.set([5, 5, 5]);\n\t// add orbitControls\n\tconst events1 = perspectiveCamera1.createNode('eventsNetwork');\n\tconst orbitsControls = events1.createNode('cameraOrbitControls');\n\tperspectiveCamera1.p.controls.setNode(orbitsControls);\n\n\treturn {perspectiveCamera1};\n}\n\ninterface ReturnedNodeData {\n\tnode: BaseNodeType;\n\tchildren: Record<string, ReturnedNodeData>;\n}\nexport type ReturnedNodeDataDict = Record<string, ReturnedNodeData>;\n","import type {ExampleData, DataCallbackOptions} from '../../Common';\nimport {addPerspectiveCameraOBJWithOrbitControls} from '../../ExampleUtils';\n\nexport function createData(options: DataCallbackOptions): ExampleData {\n\tconst {scene} = options;\n\tconst root = scene.root();\n\tconst geo = root.createNode('geo');\n\tconst box = geo.createNode('box');\n\n\t// add a subdivide node\n\tconst subdivide = geo.createNode('subdivide');\n\tsubdivide.setInput(0, box);\n\tsubdivide.flags.display.set(true);\n\n\t// add a light\n\troot.createNode('hemisphereLight');\n\n\tconst {perspectiveCamera1} = addPerspectiveCameraOBJWithOrbitControls(root);\n\n\treturn {\n\t\tscene,\n\t\tcameraPath: perspectiveCamera1.path(),\n\t\tfocusedNodes: [subdivide],\n\t\tautoLayout: true,\n\t};\n}\n// export const sopSubdivide = [\n// \tnew Example({\n// \t\tname: `${ExamplePrefix.BY_NODE}/sop/subdivide`,\n// \t\tcreateData,\n// \t\trelatedNodes: [SubdivideSopNode],\n// \t}),\n// ];\n"],"names":[],"sourceRoot":""}