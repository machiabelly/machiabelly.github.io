{"version":3,"file":"src_editor_components_widgets_monaco_MonacoEditorWrapper_vue.cd76b8e748508d202250.js","mappings":"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","sources":["webpack:///../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?56ff","webpack:///../src/editor/components/widgets/monaco/MonacoEditorEnvironment.ts","webpack:///../src/editor/components/widgets/monaco/MonacoHotKeys.ts","webpack:///../src/editor/components/widgets/monaco/languages/GLSL.ts","webpack:///../src/editor/components/widgets/monaco/languages/MonacoEditorCommon.ts","webpack:///../src/editor/components/widgets/monaco/languages/TypescriptController.ts","webpack:///../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue","webpack:///../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?7d85","webpack:///../src/editor/components/widgets/monaco/languages/CSS.ts","webpack:///../src/editor/components/widgets/monaco/languages/HTML.ts","webpack:///../src/editor/components/widgets/monaco/languages/JSON.ts","webpack:///../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?dc09","webpack:///../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?0133","webpack:///../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?0e20","webpack:///../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?ec3f"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".monaco-editor-container{min-height:1000px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue\"],\"names\":[],\"mappings\":\"AAEA,yBACC,iBAAA\",\"sourcesContent\":[\"\\n\\n.monaco-editor-container\\n\\tmin-height: 1000px\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as monaco from 'monaco-editor';\n\nexport type GlobalMonacoEditor = monaco.editor.IStandaloneCodeEditor;\ndeclare global {\n\tinterface Window {\n\t\ttestSuiteMonacoEditor: GlobalMonacoEditor | undefined;\n\t}\n}\n\nexport class MonacoEditorEnvironment {\n\tstatic setup() {\n\t\t// async function _load_monaco_editor_js() {\n\t\t// \t// from https://github.com/microsoft/monaco-editor-samples/blob/master/browser-script-editor/index.html\n\t\t// \t(window as any).require = {paths: {vs: MONACO_EDITOR_BASE_URL}};\n\n\t\t// \tfor (let script of SCRIPTS) {\n\t\t// \t\tconst url = `${MONACO_EDITOR_BASE_URL}/${script}`;\n\t\t// \t\tconst script_element = document.createElement('script');\n\t\t// \t\tscript_element.src = url;\n\t\t// \t\tdocument.body.appendChild(script_element);\n\t\t// \t\t// await import(`${MONACO_EDITOR_BASE_URL}/${script}`);\n\t\t// \t}\n\t\t// }\n\t\tconst monaco_setup_element = document.getElementById('monaco-setup');\n\t\tconst json_url = monaco_setup_element?.dataset['json'] || '/editor/json.worker.js';\n\t\tconst css_url = monaco_setup_element?.dataset['css'] || '/editor/css.worker.js';\n\t\tconst html_url = monaco_setup_element?.dataset['html'] || '/editor/html.worker.js';\n\t\tconst typescript_url = monaco_setup_element?.dataset['typescript'] || '/editor/ts.worker.js';\n\t\tconst urls: Dictionary<string> = {\n\t\t\tjson: json_url,\n\t\t\tcss: css_url,\n\t\t\thtml: html_url,\n\t\t\ttypescript: typescript_url,\n\t\t\tjavascript: typescript_url,\n\t\t};\n\t\tconst default_url = monaco_setup_element?.dataset['editor'] || '/editor/editor.worker.js';\n\t\t(self as any).MonacoEnvironment = {\n\t\t\tgetWorkerUrl: function (moduleId: any, label: string) {\n\t\t\t\tconst url = urls[label] || default_url;\n\t\t\t\treturn url;\n\t\t\t},\n\t\t};\n\t}\n}\n","import * as monaco from 'monaco-editor';\n\nexport type GlobalMonacoEditor = monaco.editor.IStandaloneCodeEditor;\ndeclare global {\n\tinterface Window {\n\t\ttestSuiteMonacoEditor: GlobalMonacoEditor | undefined;\n\t}\n}\n\ninterface AddHotkeysOptions {\n\tmonacoEditor: monaco.editor.IStandaloneCodeEditor;\n\treadonly: boolean;\n\tcallbacks: {\n\t\ttogglePanelToFullScreen: () => void;\n\t\tsaveParam?: () => void;\n\t\tsaveParamAndScene?: () => void;\n\t};\n}\n\nexport function monacoEditorAddHotkeys(options: AddHotkeysOptions) {\n\tconst {monacoEditor, readonly, callbacks} = options;\n\n\tmonacoEditor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyB, callbacks.togglePanelToFullScreen);\n\n\tif (!readonly) {\n\t\tif (callbacks.saveParam) {\n\t\t\tmonacoEditor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, callbacks.saveParam);\n\t\t}\n\t\tif (callbacks.saveParamAndScene) {\n\t\t\tmonacoEditor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, callbacks.saveParamAndScene);\n\t\t}\n\t}\n}\n","// https://github.com/microsoft/monaco-editor/issues/2992\nimport type {languages} from 'monaco-editor';\n\nconst conf: languages.LanguageConfiguration = {\n\tcomments: {\n\t\tlineComment: '//',\n\t\tblockComment: ['/*', '*/'],\n\t},\n\tbrackets: [\n\t\t['{', '}'],\n\t\t['[', ']'],\n\t\t['(', ')'],\n\t],\n\tautoClosingPairs: [\n\t\t{open: '[', close: ']'},\n\t\t{open: '{', close: '}'},\n\t\t{open: '(', close: ')'},\n\t\t{open: \"'\", close: \"'\", notIn: ['string', 'comment']},\n\t\t{open: '\"', close: '\"', notIn: ['string']},\n\t],\n\tsurroundingPairs: [\n\t\t{open: '{', close: '}'},\n\t\t{open: '[', close: ']'},\n\t\t{open: '(', close: ')'},\n\t\t{open: '\"', close: '\"'},\n\t\t{open: \"'\", close: \"'\"},\n\t],\n};\n\nconst keywords = [\n\t'const',\n\t'uniform',\n\t'break',\n\t'continue',\n\t'do',\n\t'for',\n\t'while',\n\t'if',\n\t'else',\n\t'switch',\n\t'case',\n\t'in',\n\t'out',\n\t'inout',\n\t'true',\n\t'false',\n\t'invariant',\n\t'discard',\n\t'return',\n\t'sampler2D',\n\t'samplerCube',\n\t'sampler3D',\n\t'struct',\n\t'radians',\n\t'degrees',\n\t'sin',\n\t'cos',\n\t'tan',\n\t'asin',\n\t'acos',\n\t'atan',\n\t'pow',\n\t'sinh',\n\t'cosh',\n\t'tanh',\n\t'asinh',\n\t'acosh',\n\t'atanh',\n\t'exp',\n\t'log',\n\t'exp2',\n\t'log2',\n\t'sqrt',\n\t'inversesqrt',\n\t'abs',\n\t'sign',\n\t'floor',\n\t'ceil',\n\t'round',\n\t'roundEven',\n\t'trunc',\n\t'fract',\n\t'mod',\n\t'modf',\n\t'min',\n\t'max',\n\t'clamp',\n\t'mix',\n\t'step',\n\t'smoothstep',\n\t'length',\n\t'distance',\n\t'dot',\n\t'cross ',\n\t'determinant',\n\t'inverse',\n\t'normalize',\n\t'faceforward',\n\t'reflect',\n\t'refract',\n\t'matrixCompMult',\n\t'outerProduct',\n\t'transpose',\n\t'lessThan ',\n\t'lessThanEqual',\n\t'greaterThan',\n\t'greaterThanEqual',\n\t'equal',\n\t'notEqual',\n\t'any',\n\t'all',\n\t'not',\n\t'packUnorm2x16',\n\t'unpackUnorm2x16',\n\t'packSnorm2x16',\n\t'unpackSnorm2x16',\n\t'packHalf2x16',\n\t'unpackHalf2x16',\n\t'dFdx',\n\t'dFdy',\n\t'fwidth',\n\t'textureSize',\n\t'texture',\n\t'textureProj',\n\t'textureLod',\n\t'textureGrad',\n\t'texelFetch',\n\t'texelFetchOffset',\n\t'textureProjLod',\n\t'textureLodOffset',\n\t'textureGradOffset',\n\t'textureProjLodOffset',\n\t'textureProjGrad',\n\t'intBitsToFloat',\n\t'uintBitsToFloat',\n\t'floatBitsToInt',\n\t'floatBitsToUint',\n\t'isnan',\n\t'isinf',\n\t'vec2',\n\t'vec3',\n\t'vec4',\n\t'ivec2',\n\t'ivec3',\n\t'ivec4',\n\t'uvec2',\n\t'uvec3',\n\t'uvec4',\n\t'bvec2',\n\t'bvec3',\n\t'bvec4',\n\t'mat2',\n\t'mat3',\n\t'mat2x2',\n\t'mat2x3',\n\t'mat2x4',\n\t'mat3x2',\n\t'mat3x3',\n\t'mat3x4',\n\t'mat4x2',\n\t'mat4x3',\n\t'mat4x4',\n\t'mat4',\n\t'float',\n\t'int',\n\t'uint',\n\t'void',\n\t'bool',\n];\n\nexport const language = <languages.IMonarchLanguage>{\n\ttokenPostfix: '.glsl',\n\t// Set defaultToken to invalid to see what you do not tokenize yet\n\tdefaultToken: 'invalid',\n\tkeywords,\n\toperators: [\n\t\t'=',\n\t\t'>',\n\t\t'<',\n\t\t'!',\n\t\t'~',\n\t\t'?',\n\t\t':',\n\t\t'==',\n\t\t'<=',\n\t\t'>=',\n\t\t'!=',\n\t\t'&&',\n\t\t'||',\n\t\t'++',\n\t\t'--',\n\t\t'+',\n\t\t'-',\n\t\t'*',\n\t\t'/',\n\t\t'&',\n\t\t'|',\n\t\t'^',\n\t\t'%',\n\t\t'<<',\n\t\t'>>',\n\t\t'>>>',\n\t\t'+=',\n\t\t'-=',\n\t\t'*=',\n\t\t'/=',\n\t\t'&=',\n\t\t'|=',\n\t\t'^=',\n\t\t'%=',\n\t\t'<<=',\n\t\t'>>=',\n\t\t'>>>=',\n\t],\n\tsymbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n\tescapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\tintegersuffix: /([uU](ll|LL|l|L)|(ll|LL|l|L)?[uU]?)/,\n\tfloatsuffix: /[fFlL]?/,\n\tencoding: /u|u8|U|L/,\n\n\ttokenizer: {\n\t\troot: [\n\t\t\t// identifiers and keywords\n\t\t\t[\n\t\t\t\t/[a-zA-Z_]\\w*/,\n\t\t\t\t{\n\t\t\t\t\tcases: {\n\t\t\t\t\t\t'@keywords': {token: 'keyword.$0'},\n\t\t\t\t\t\t'@default': 'identifier',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\n\t\t\t// Preprocessor directive (#define)\n\t\t\t[/^\\s*#\\s*\\w+/, 'keyword.directive'],\n\n\t\t\t// whitespace\n\t\t\t{include: '@whitespace'},\n\n\t\t\t// delimiters and operators\n\t\t\t[/[{}()\\[\\]]/, '@brackets'],\n\t\t\t[\n\t\t\t\t/@symbols/,\n\t\t\t\t{\n\t\t\t\t\tcases: {\n\t\t\t\t\t\t'@operators': 'operator',\n\t\t\t\t\t\t'@default': '',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\n\t\t\t// numbers\n\t\t\t[/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n\t\t\t[/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n\t\t\t[/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n\t\t\t[/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n\t\t\t[/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n\t\t\t[/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n\t\t\t[/\\d(@integersuffix)/, 'number'],\n\n\t\t\t// delimiter: after number because of .\\d floats\n\t\t\t[/[;,.]/, 'delimiter'],\n\t\t],\n\n\t\tcomment: [\n\t\t\t[/[^\\/*]+/, 'comment'],\n\t\t\t[/\\/\\*/, 'comment', '@push'],\n\t\t\t['\\\\*/', 'comment', '@pop'],\n\t\t\t[/[\\/*]/, 'comment'],\n\t\t],\n\n\t\t// Does it have strings?\n\t\tstring: [\n\t\t\t[/[^\\\\\"]+/, 'string'],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[\n\t\t\t\t/\"/,\n\t\t\t\t{\n\t\t\t\t\ttoken: 'string.quote',\n\t\t\t\t\tbracket: '@close',\n\t\t\t\t\tnext: '@pop',\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\n\t\twhitespace: [\n\t\t\t[/[ \\t\\r\\n]+/, 'white'],\n\t\t\t[/\\/\\*/, 'comment', '@comment'],\n\t\t\t[/\\/\\/.*$/, 'comment'],\n\t\t],\n\t},\n};\n\nimport {StringParamLanguage} from '../../../../../../@polygonjs/polygonjs/src/engine/params/utils/OptionsController';\nimport * as monaco from 'monaco-editor';\nimport {MonacoCommonOptions, monacoEditorCreateModel} from './MonacoEditorCommon';\n\ninterface SetupForGLSLOptions {\n\treadOnly: boolean;\n\tuniqueId: string;\n}\n\nexport function monacoEditorSetupForGLSL(rawInput: string, element: HTMLElement, options: SetupForGLSLOptions) {\n\tmonaco.languages.register({\n\t\tid: 'glsl',\n\t\t// extensions?: string[];\n\t\t// filenames?: string[];\n\t\t// filenamePatterns?: string[];\n\t\t// firstLine?: string;\n\t\t// aliases?: string[];\n\t\t// mimetypes?: string[];\n\t\t// configuration?: Uri;\n\t});\n\tmonaco.languages.setLanguageConfiguration('glsl', conf);\n\tmonaco.languages.setMonarchTokensProvider('glsl', language);\n\t// \tmonaco.languages.registerDocumentFormattingEditProvider()\n\t// monaco.languages.registerDocumentRangeFormattingEditProvider()\n\t// monaco.languages.registerOnTypeFormattingEditProvider()\n\n\tconst editor = monaco.editor.create(element, {\n\t\tmodel: monacoEditorCreateModel(rawInput, StringParamLanguage.GLSL, options.uniqueId),\n\t\tvalue: rawInput,\n\t\tlanguage: StringParamLanguage.GLSL,\n\t\treadOnly: options.readOnly,\n\t\t...MonacoCommonOptions,\n\t});\n\treturn editor;\n}\n","import {StringParamLanguage} from '../../../../../../@polygonjs/polygonjs/src/engine/params/utils/OptionsController';\nimport {isString} from '../../../../../../@polygonjs/polygonjs/src/core/Type';\nimport * as monaco from 'monaco-editor';\nexport const MonacoCommonOptions: monaco.editor.IStandaloneEditorConstructionOptions = {\n\trenderWhitespace: 'boundary',\n\ttheme: 'vs-dark', // 'hc-black', // vs-dark // not sure why only the minimap gets the theme\n\tinsertSpaces: false,\n\ttabSize: 4,\n\tautomaticLayout: true, // auto resize (https://stackoverflow.com/questions/47017753/monaco-editor-dynamically-resizable)\n};\n\nexport function updateMonacoEditorModel(content: string, model: monaco.editor.ITextModel | null) {\n\tif (model) {\n\t\tif (isString(content)) {\n\t\t\tmodel.setValue(content);\n\t\t}\n\t} else {\n\t\tconsole.warn('no model to update');\n\t}\n}\nexport function monacoEditorCreateModel(rawInput: string, language: StringParamLanguage, editorId: string) {\n\tconst uri = monaco.Uri.parse(`file:///${language}-${editorId}.tsx`);\n\tlet model = monaco.editor.getModel(uri);\n\tif (!model) {\n\t\tmodel = monaco.editor.createModel(rawInput, language, uri);\n\t} else {\n\t\tmodel.setValue(rawInput);\n\t}\n\treturn model;\n}\n","/**\n *\n * HOW TO BUILD the .d.ts file for types in monaco editor:\n *\n * 0. terminate the `yarn start` webpack dev server in the vscode terminal (or wherever it was started from), as it may crash in step 2\n *\n * 1. cd to editor folder: `cd /home/gui/work/web/polygonjs/dev/polygonjs-editor-rails/app/javascript/polygonjs-editor`\n *\n * 2. move @polygonjs to the compilation folder: `yarn move_engine_to_compilation_folder`\n *\n * 3. cd to the compilation folder: `cd /home/gui/work/web/polygonjs/build/polygonjs`\n *\n * 4. run step1: `yarn bundle_types_step1`\n *\n * 5. copy errors displayed in shell to `config/dts_bundle/errors_detected.ts`\n *\n * 6. run step2: `yarn bundle_types_step2`\n *\n * 7. keep copy of current bundled_types: `cp ~/work/web/polygonjs/dev/polygonjs-editor-rails/public/editor/codenodes/bundledTypes.d.ts.edited.txt ~/work/web/polygonjs/dev/polygonjs-editor-rails/public/editor/codenodes/bundledTypes.d.ts.edited.txt.bak`\n *\n * 8. copy output file to rails editor: `cp public/bundled_types.d.ts ~/work/web/polygonjs/dev/polygonjs-editor-rails/public/editor/codenodes/bundledTypes.d.ts.edited.txt`\n *\n * 9. bring @polygonjs back, by running: `cd /home/gui/work/web/polygonjs/dev/polygonjs-editor-rails/app/javascript/polygonjs-editor && yarn move_engine_back_from_failed_build`\n *\n * 10. restart webpack dev server `yarn start`\n *\n * 11. display in console the errors when parsing that file, by setting the variable DEBUG_EXTRA_LIB below to true.\n *\n * 12. fix the remaining errors manually. it may be useful to copy elements from the .bak file (mostly what replaces the imports at the top of the file). Some \"// @ts-ignore\" or conversion to any will be necessary. There will also be remaining errors, such as:\n * - All declarations of 'target' must have identical modifier\n * - Subsequent property declarations must have the same type.  Property 'target'\n * - Type 'EventListener' is not generic\n * Those are safe to ignore, and if they are the only ones left, go to next step.\n *\n * 13. opening a code node should not have typescript errors, or words underlined in red anymore.\n *\n * 14. copy the rails file to the editor repo: `cp ~/work/web/polygonjs/dev/polygonjs-editor-rails/public/editor/codenodes/bundledTypes.d.ts.edited.txt ~/work/web/polygonjs/dev/polygonjs-editor-rails/app/javascript/polygonjs-editor/public/editor/codenodes/bundledTypes.d.ts.edited.txt`\n */\n\nimport {BaseNodeType} from '../../../../../../@polygonjs/polygonjs/src/engine/nodes/_Base';\nimport * as monaco from 'monaco-editor';\nimport {FilesRegister} from '../../../../self_contained/FilesRegister';\nimport {CoreString} from '../../../../../../@polygonjs/polygonjs/src/core/String';\nimport {StringParam} from '../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {ParamSetCommand} from '../../../../history/commands/ParamSet';\nimport {MultipleCommand} from '../../../../history/commands/Multiple';\nimport {MonacoCommonOptions, updateMonacoEditorModel, monacoEditorCreateModel} from './MonacoEditorCommon';\nimport {StringParamLanguage} from '../../../../../../@polygonjs/polygonjs/src/engine/params/utils/OptionsController';\n\nconst DEBUG_EXTRA_LIB = false;\ninterface SetupForTsOptions {\n\treadOnly?: boolean;\n\tuniqueId: string;\n}\nexport class MonacoTypescriptController {\n\tprivate static _libsAdded: boolean = false;\n\tprivate static model: monaco.editor.ITextModel | null = null;\n\tconstructor() {}\n\n\tstatic updateModel(content: string) {\n\t\tupdateMonacoEditorModel(content, this.model);\n\t}\n\n\tstatic async saveParam(param: StringParam, multiCmd: MultipleCommand) {\n\t\tconst javascriptParam = param.node.params.get('codeJavascript') as StringParam;\n\t\tif (javascriptParam && this.model) {\n\t\t\tconst transpiled = (await MonacoTypescriptController.transpile(this.model)) || '';\n\t\t\t// if (transpiled) {\n\t\t\tconst cmd = new ParamSetCommand(javascriptParam, transpiled);\n\t\t\tmultiCmd.pushCommand(cmd);\n\t\t\t// await Editor.instance().pushCommand(cmd);\n\t\t\t// } else {\n\t\t\t// \tparam.node.states.error.set('code transpilation failed');\n\t\t\t// \tconsole.log('set error', param.node.path());\n\t\t\t// }\n\t\t}\n\t}\n\n\tstatic async addLibs() {\n\t\tif (this._libsAdded) {\n\t\t\treturn;\n\t\t}\n\t\tthis._libsAdded = true;\n\n\t\t// monaco.languages.typescript.typescriptDefaults.setInlayHintsOptions({\n\t\t// \tincludeInlayParameterNameHints: 'all',\n\t\t// \tincludeInlayParameterNameHintsWhenArgumentMatchesName: true,\n\t\t// \tincludeInlayFunctionParameterTypeHints: true,\n\t\t// \tincludeInlayVariableTypeHints: true,\n\t\t// \tincludeInlayPropertyDeclarationTypeHints: true,\n\t\t// \tincludeInlayFunctionLikeReturnTypeHints: true,\n\t\t// \tincludeInlayEnumMemberValueHints: true,\n\t\t// });\n\n\t\t// const url = `/editor/monaco-editor/bundled_types.d.ts?${Date.now()}`;\n\t\t// const url = `/bundled_types.d.ts?${Date.now()}`;\n\t\t// const response = await fetch(url);\n\t\t// const content = await response.text();\n\t}\n\n\tstatic async setupForTypescriptWithoutNode(\n\t\trawInput: string,\n\t\telement: HTMLElement,\n\t\toptions: SetupForTsOptions,\n\t\tparam?: StringParam\n\t) {\n\t\tMonacoTypescriptController.setCompilerOptions();\n\n\t\tif (DEBUG_EXTRA_LIB) {\n\t\t\tdebugExtraLib();\n\t\t\treturn;\n\t\t}\n\n\t\tawait MonacoTypescriptController.addLibs();\n\t\tif (param) {\n\t\t\tawait MonacoTypescriptController.addTypesForNode(param.node);\n\t\t}\n\t\tthis.model = monacoEditorCreateModel(rawInput, StringParamLanguage.TYPESCRIPT, options.uniqueId);\n\t\t// const uri = monaco.Uri.parse('file:///main2.tsx');\n\t\t// this.model = monaco.editor.getModel(uri);\n\t\t// if (!this.model) {\n\t\t// \tthis.model = monaco.editor.createModel(rawInput, 'typescript', uri);\n\t\t// } else {\n\t\t// \tthis.model.setValue(rawInput);\n\t\t// }\n\n\t\tconst editor = monaco.editor.create(element, {\n\t\t\tmodel: this.model,\n\t\t\tvalue: rawInput,\n\t\t\treadOnly: options.readOnly,\n\t\t\t// language: param.options.language(),\n\t\t\t...MonacoCommonOptions,\n\t\t});\n\n\t\t// const model = this.model;\n\t\t// let validationTimeout: number | undefined;\n\t\t// editor.onDidChangeModelContent((event) => {\n\t\t// \tclearTimeout(validationTimeout);\n\t\t// \tvalidationTimeout = setTimeout(() => {\n\t\t// \t\tmonaco.languages.typescript.getTypeScriptWorker().then((worker) => {\n\t\t// \t\t\tworker(model.uri).then((client) => {\n\t\t// \t\t\t\tclient.getSuggestionDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t// \t\t\t\t\tconsole.log('getSuggestionDiagnostics:', diagnostics);\n\t\t// \t\t\t\t});\n\t\t// \t\t\t\tclient.getCompilerOptionsDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t// \t\t\t\t\tconsole.log('getCompilerOptionsDiagnostics:', diagnostics);\n\t\t// \t\t\t\t});\n\t\t// \t\t\t\tclient.getSyntacticDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t// \t\t\t\t\tconsole.log('Syntax errors:', diagnostics);\n\t\t// \t\t\t\t});\n\n\t\t// \t\t\t\tclient.getSemanticDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t// \t\t\t\t\tconsole.log('Semantic errors:', diagnostics);\n\t\t// \t\t\t\t});\n\t\t// \t\t\t});\n\t\t// \t\t});\n\t\t// \t}, 500) as any; // Wait for 500ms after user stops typing to trigger validation\n\t\t// });\n\n\t\treturn editor;\n\t}\n\n\tstatic async setupForTypescript(\n\t\tparam: StringParam,\n\t\trawInput: string,\n\t\telement: HTMLElement,\n\t\toptions: SetupForTsOptions\n\t) {\n\t\treturn this.setupForTypescriptWithoutNode(rawInput, element, options, param);\n\t}\n\n\tstatic async addTypesForNode(node: BaseNodeType) {\n\t\tawait FilesRegister.init();\n\t\tlet content = await FilesRegister.polygonjsBundledTypes();\n\n\t\tcontent = this._injectNodeSpareParamsTypes(content, node);\n\n\t\t//\n\t\t//\n\t\t// WARNING:\n\t\t//\n\t\t// In order to get the types to work, the bundle currently require some manual editing\n\t\t//\n\n\t\t// content = `\n\t\t// declare class Object3D {\n\t\t// \tpublic position = {x:0,y:0,z:0}\n\t\t// }\n\t\t// declare class CoreGroup {\n\t\t// \tobjects():Object3D[]{\n\t\t// \t\treturn []\n\t\t// \t}\n\t\t// }\n\t\t// declare class BaseCodeSopProcessor {\n\t\t// \tinitializeProcessor(){\n\n\t\t// \t}\n\t\t// \tcook(inputCoreGroups: CoreGroup[]){\n\n\t\t// \t}\n\t\t// \tsetCoreGroup(coreGroup: CoreGroup){\n\n\t\t// \t}\n\t\t// }\n\t\t// `;\n\t\t// console.log('---------------');\n\t\t// console.log(content);\n\t\t// console.log('---------------');\n\t\t// console.log(monaco.languages.typescript.typescriptDefaults.getExtraLibs());\n\t\tconst uri = 'ts:filename/facts2.d.ts';\n\t\tmonaco.languages.typescript.typescriptDefaults.addExtraLib(content, uri);\n\t\t// monaco.languages.typescript.typescriptDefaults.setEagerModelSync(false);\n\t\t// https://github.com/Microsoft/monaco-editor/issues/754\n\t\t// const externalDTSFilename = 'external.d.ts';\n\t\t// monaco.languages.typescript.typescriptDefaults.addExtraLib(content, `inmemory://model/${externalDTSFilename}`);\n\t\t// https://stackoverflow.com/questions/43058191/how-to-use-addextralib-in-monaco-with-an-external-type-definition/66948535#66948535\n\t\t// monaco.languages.typescript.typescriptDefaults.addExtraLib(content);\n\t}\n\n\tprivate static _injectNodeSpareParamsTypes(content: string, node: BaseNodeType) {\n\t\tconst spareParams = node.params.spare.filter((p) => p.parentParam() == null);\n\t\tconst linesToAdd = spareParams.map((p) => `${p.name()}: ParamTemplate<ParamType.${p.type().toUpperCase()}>;`);\n\t\t// const b = `declare class CodeActorParamsConfig extends NodeParamsConfig {`\n\t\t// const e = `declare class CodeEventParamsConfig extends NodeParamsConfig {`\n\t\tconst lineStart = `declare class Code${CoreString.titleize(\n\t\t\tnode.context()\n\t\t)}ParamsConfig extends NodeParamsConfig {`;\n\t\tconst replacement = `${lineStart}\\n${linesToAdd.join('\\n')}`;\n\t\tcontent = content.replace(lineStart, replacement);\n\t\treturn content;\n\t}\n\n\tprivate static _compilerOptionsSet = false;\n\tstatic setCompilerOptions() {\n\t\tif (this._compilerOptionsSet) {\n\t\t\treturn;\n\t\t}\n\t\tthis._compilerOptionsSet = true;\n\t\tmonaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n\t\t\tnoSemanticValidation: false,\n\t\t\tnoSyntaxValidation: false,\n\t\t\t// noSuggestionDiagnostics\n\t\t});\n\n\t\tmonaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n\t\t\ttarget: monaco.languages.typescript.ScriptTarget.ES2020,\n\t\t\t// allowNonTsExtensions: true,\n\t\t\tmoduleResolution: monaco.languages.typescript.ModuleResolutionKind.NodeJs,\n\t\t\t// module: monaco.languages.typescript.ModuleKind.CommonJS,\n\t\t\t// noEmit: true,\n\t\t\ttypeRoots: ['node_modules/@types'],\n\t\t\t//\n\t\t\t// allowNonTsExtensions: true,\n\t\t\t// strictNullChecks: true,\n\t\t});\n\t}\n\n\tstatic async transpile(model: monaco.editor.ITextModel): Promise<string | void> {\n\t\tconst worker = await monaco.languages.typescript.getTypeScriptWorker();\n\t\tconst client = await worker(model.uri);\n\n\t\t// const diagnostics = await client.getSyntacticDiagnostics(model.uri.toString());\n\t\t// console.log('Syntax errors:', diagnostics);\n\t\t// if (diagnostics.length > 0) {\n\t\t// \treturn;\n\t\t// }\n\n\t\tconst result = await client.getEmitOutput(model.uri.toString());\n\t\treturn result.outputFiles[0].text;\n\t}\n}\n\n//\n//\n//\n//\n//\nlet _started = false;\nasync function debugExtraLib() {\n\tif (_started) {\n\t\treturn;\n\t}\n\t_started = true;\n\tconst extraLibs: Record<string, string> = {\n\t\t'polygonjs_bundled_types.d.ts': await FilesRegister.polygonjsBundledTypes(),\n\t};\n\n\t// for (const [fileName, content] of Object.entries(extraLibs)) {\n\t// \tmonaco.languages.typescript.typescriptDefaults.addExtraLib(content, fileName);\n\t// \tconsole.log('ADD', content);\n\t// }\n\n\t// const editorModel = monaco.editor.createModel(\n\t// \t\"const message: string = 'Hello, world!';\\nconsole.log(message);\",\n\t// \t'typescript'\n\t// );\n\n\t// let validationTimeout: number | undefined;\n\n\t// editorModel.onDidChangeContent(() => {\n\t// \tclearTimeout(validationTimeout);\n\t// \tvalidationTimeout = setTimeout(() => {\n\t// \t\tvalidateCode(editorModel);\n\t// \t}, 500) as any;\n\t// });\n\n\t// Create a model for each extra library and trigger validation when it changes\n\tconst testContent = `\n\texport class CodeJsProcessor extends BaseCodeJsProcessor {}\n\t`;\n\tfor (const libName of Object.keys(extraLibs)) {\n\t\tconst content = true ? extraLibs[libName] : testContent;\n\t\t// console.log({content});\n\t\tconst libModel = monaco.editor.createModel(content, 'typescript', monaco.Uri.file(libName));\n\t\t// libModel.onDidChangeContent(() => {\n\t\t// \tclearTimeout(validationTimeout);\n\t\tsetTimeout(() => {\n\t\t\tvalidateCode(libModel);\n\t\t}, 500) as any;\n\t\t// });\n\t}\n\n\tfunction validateCode(model: monaco.editor.ITextModel) {\n\t\t// console.log('validateCode', model);\n\n\t\tmonaco.languages.typescript.getTypeScriptWorker().then((worker) => {\n\t\t\tworker(model.uri).then((client) => {\n\t\t\t\t// const models = monaco.editor.getModels();\n\t\t\t\t// console.log(models);\n\t\t\t\t// models.forEach((_model) => {\n\t\t\t\t// \tconsole.log({model});\n\t\t\t\t// });\n\t\t\t\t// const compilerOptions = monaco.languages.typescript.typescriptDefaults.getCompilerOptions();\n\n\t\t\t\t// // Log the compiler options to the console\n\t\t\t\t// console.log({compilerOptions});\n\n\t\t\t\t// const jsExtraLibs = monaco.languages.typescript.javascriptDefaults.getExtraLibs();\n\t\t\t\t// const tsExtraLibs = monaco.languages.typescript.typescriptDefaults.getExtraLibs();\n\t\t\t\t// console.log({jsExtraLibs, tsExtraLibs});\n\n\t\t\t\tclient.getSuggestionDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t\t\t\tconsole.log('getSuggestionDiagnostics:', diagnostics);\n\t\t\t\t});\n\t\t\t\tclient.getCompilerOptionsDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t\t\t\tconsole.log('getCompilerOptionsDiagnostics:', diagnostics);\n\t\t\t\t});\n\t\t\t\tclient.getSyntacticDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t\t\t\tconsole.log('Syntax errors:', diagnostics);\n\t\t\t\t});\n\n\t\t\t\tclient.getSemanticDiagnostics(model.uri.toString()).then((diagnostics) => {\n\t\t\t\t\tconsole.log('Semantic errors:', diagnostics);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n","import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"MonacoEditorWrapper\" }\nconst _hoisted_2 = {\n  class: \"monaco-editor-container\",\n  ref: \"editorElement\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      class: \"monaco-editor-events-catcher\",\n      onKeypress: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"])),\n      onKeyup: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"])),\n      onKeydown: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"]))\n    }, [\n      _createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)\n    ], 32 /* HYDRATE_EVENTS */)\n  ]))\n}","export * from \"-!../../../../../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./MonacoEditorWrapper.vue?vue&type=template&id=1a1c70e8&ts=true\"","import {StringParamLanguage} from '../../../../../../@polygonjs/polygonjs/src/engine/params/utils/OptionsController';\nimport * as monaco from 'monaco-editor';\nimport {MonacoCommonOptions, monacoEditorCreateModel} from './MonacoEditorCommon';\ninterface SetupForCSSOptions {\n\tuniqueId: string;\n}\nexport async function monacoEditorSetupForCSS(rawInput: string, element: HTMLElement, options: SetupForCSSOptions) {\n\tconst editor = monaco.editor.create(element, {\n\t\tmodel: monacoEditorCreateModel(rawInput, StringParamLanguage.CSS, options.uniqueId),\n\t\tvalue: rawInput,\n\t\tlanguage: StringParamLanguage.CSS,\n\t\t...MonacoCommonOptions,\n\t});\n\treturn editor;\n}\n","import {StringParamLanguage} from '../../../../../../@polygonjs/polygonjs/src/engine/params/utils/OptionsController';\nimport * as monaco from 'monaco-editor';\nimport {MonacoCommonOptions, monacoEditorCreateModel} from './MonacoEditorCommon';\ninterface SetupForHTMLOptions {\n\tuniqueId: string;\n}\nexport async function monacoEditorSetupForHTML(rawInput: string, element: HTMLElement, options: SetupForHTMLOptions) {\n\tconst editor = monaco.editor.create(element, {\n\t\tmodel: monacoEditorCreateModel(rawInput, StringParamLanguage.HTML, options.uniqueId),\n\t\tvalue: rawInput,\n\t\tlanguage: StringParamLanguage.HTML,\n\t\t...MonacoCommonOptions,\n\t});\n\treturn editor;\n}\n","import {StringParamLanguage} from '../../../../../../@polygonjs/polygonjs/src/engine/params/utils/OptionsController';\nimport * as monaco from 'monaco-editor';\nimport {MonacoCommonOptions, monacoEditorCreateModel} from './MonacoEditorCommon';\ninterface SetupForJSONOptions {\n\tuniqueId: string;\n}\nexport async function monacoEditorSetupForJSON(rawInput: string, element: HTMLElement,options:SetupForJSONOptions) {\n\tconst editor = monaco.editor.create(element, {\n\t\tmodel: monacoEditorCreateModel(rawInput, StringParamLanguage.JSON,options.uniqueId),\n\t\tvalue: rawInput,\n\t\tlanguage: StringParamLanguage.JSON,\n\t\t...MonacoCommonOptions,\n\t});\n\treturn editor;\n}\n","export { default } from \"-!../../../../../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./MonacoEditorWrapper.vue?vue&type=script&lang=ts\"; export * from \"-!../../../../../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./MonacoEditorWrapper.vue?vue&type=script&lang=ts\"","export * from \"-!../../../../../node_modules/vue-style-loader/index.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-7.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./MonacoEditorWrapper.vue?vue&type=style&index=0&id=1a1c70e8&lang=sass\"","import { render } from \"./MonacoEditorWrapper.vue?vue&type=template&id=1a1c70e8&ts=true\"\nimport script from \"./MonacoEditorWrapper.vue?vue&type=script&lang=ts\"\nexport * from \"./MonacoEditorWrapper.vue?vue&type=script&lang=ts\"\n\nimport \"./MonacoEditorWrapper.vue?vue&type=style&index=0&id=1a1c70e8&lang=sass\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-7.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./MonacoEditorWrapper.vue?vue&type=style&index=0&id=1a1c70e8&lang=sass\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"40a8e275\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-7.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./MonacoEditorWrapper.vue?vue&type=style&index=0&id=1a1c70e8&lang=sass\", function() {\n     var newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-7.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./MonacoEditorWrapper.vue?vue&type=style&index=0&id=1a1c70e8&lang=sass\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"names":[],"sourceRoot":""}