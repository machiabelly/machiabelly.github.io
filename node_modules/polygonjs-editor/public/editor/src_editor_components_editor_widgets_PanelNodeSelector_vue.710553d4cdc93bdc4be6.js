(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_editor_components_editor_widgets_PanelNodeSelector_vue"],{

/***/ 20252:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ PanelNodeSelector; }
});

// EXTERNAL MODULE: ../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js
var runtime_core_esm_bundler = __webpack_require__(88917);
// EXTERNAL MODULE: ../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js + 1 modules
var runtime_dom_esm_bundler = __webpack_require__(90996);
;// CONCATENATED MODULE: ../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!../src/editor/components/editor/widgets/PanelNodeSelector.vue?vue&type=template&id=9bd99dde&ts=true

const _hoisted_1 = { class: "NodeSelector absolute inset-0" };
const _hoisted_2 = { class: "mt-4 mx-3" };
const _hoisted_3 = {
  key: 0,
  class: "NodeTreeContainer h-96 min-h-96 overflow-y-auto overflow-x-hidden mb-4"
};
const _hoisted_4 = { class: "cell shrink text-right" };
const _hoisted_5 = { class: "flex items-center flex-row-reverse" };
const _hoisted_6 = ["for"];
const _hoisted_7 = ["id", "name", "checked"];
const _hoisted_8 = {
  id: "node-selector-buttons-container",
  class: "mt-5 mr-3 sm:mt-4 sm:flex sm:flex-row-reverse"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_NodeTree = (0,runtime_core_esm_bundler/* resolveComponent */.up)("NodeTree");
  const _component_Modal = (0,runtime_core_esm_bundler/* resolveComponent */.up)("Modal");
  return (0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)("div", _hoisted_1, [
    (0,runtime_core_esm_bundler/* createVNode */.Wm)(_component_Modal, {
      displayed: true,
      title: "Choose a node:",
      size: { x: 400, y: 600 },
      ref: "modal",
      onClose: _ctx.close
    }, {
      default: (0,runtime_core_esm_bundler/* withCtx */.w5)(() => [
        (0,runtime_core_esm_bundler/* createElementVNode */._)("div", _hoisted_2, [
          _ctx.paramComputed ? ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)("div", _hoisted_3, [
            (0,runtime_core_esm_bundler/* createVNode */.Wm)(_component_NodeTree, {
              class: "node-tree-container",
              graph_node_id: _ctx.root_id,
              node_context: _ctx.node_context,
              selected_graph_node_id: _ctx.selected_graph_node_id,
              init_expanded: true,
              expandedIds: _ctx.expandedIds,
              onSelect: _ctx.on_select
            }, null, 8, ["graph_node_id", "node_context", "selected_graph_node_id", "expandedIds", "onSelect"])
          ])) : (0,runtime_core_esm_bundler/* createCommentVNode */.kq)("v-if", true),
          (0,runtime_core_esm_bundler/* createElementVNode */._)("div", _hoisted_4, [
            (0,runtime_core_esm_bundler/* createElementVNode */._)("div", _hoisted_5, [
              (0,runtime_core_esm_bundler/* createElementVNode */._)("label", {
                for: _ctx.makeRelativeCheckboxId,
                class: "ml-2 block text-sm text-text cursor-pointer disable-select"
              }, " Make Path Relative ", 8, _hoisted_6),
              (0,runtime_core_esm_bundler/* withDirectives */.wy)((0,runtime_core_esm_bundler/* createElementVNode */._)("input", {
                type: "checkbox",
                class: "h-4 w-4 border-slate-800 rounded cursor-pointer focus:outline-none bg-black text-emerald-600",
                id: _ctx.makeRelativeCheckboxId,
                name: _ctx.makeRelativeCheckboxId,
                "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.make_path_relative = $event),
                checked: _ctx.make_path_relative
              }, null, 8, _hoisted_7), [
                [runtime_dom_esm_bundler.vModelCheckbox, _ctx.make_path_relative]
              ])
            ])
          ])
        ]),
        (0,runtime_core_esm_bundler/* createElementVNode */._)("div", _hoisted_8, [
          (0,runtime_core_esm_bundler/* createElementVNode */._)("button", {
            id: "node-selector-submit-button",
            type: "button",
            class: "w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-16 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 sm:ml-3 sm:w-auto sm:text-sm cursor-pointer",
            onClick: _cache[1] || (_cache[1] = //@ts-ignore
            (...args) => _ctx.accept_selected && _ctx.accept_selected(...args))
          }, " Select Node "),
          (0,runtime_core_esm_bundler/* createElementVNode */._)("button", {
            id: "node-selector-cancel-button",
            type: "button",
            class: "mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-bg-medium hover:bg-bg-dark text-base font-medium text-text hover:text-text-light sm:mt-0 sm:w-auto sm:text-sm cursor-pointer",
            onClick: _cache[2] || (_cache[2] = //@ts-ignore
            (...args) => _ctx.close && _ctx.close(...args))
          }, " Cancel ")
        ])
      ]),
      _: 1
      /* STABLE */
    }, 8, ["onClose"])
  ]);
}

;// CONCATENATED MODULE: ../src/editor/components/editor/widgets/PanelNodeSelector.vue?vue&type=template&id=9bd99dde&ts=true

// EXTERNAL MODULE: ../src/editor/components/widgets/dialogs/Modal.vue + 5 modules
var Modal = __webpack_require__(31445);
// EXTERNAL MODULE: ../src/editor/components/widgets/NodeTree.vue + 5 modules
var NodeTree = __webpack_require__(77081);
// EXTERNAL MODULE: ../src/editor/store/controllers/StoreController.ts + 44 modules
var StoreController = __webpack_require__(72555);
// EXTERNAL MODULE: ../src/editor/history/commands/ParamSet.ts
var ParamSet = __webpack_require__(42362);
// EXTERNAL MODULE: ../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js + 1 modules
var reactivity_esm_bundler = __webpack_require__(61334);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/core/Walker.ts
var Walker = __webpack_require__(742);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/engine/params/NodePath.ts
var NodePath = __webpack_require__(48324);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/engine/params/ParamPath.ts
var ParamPath = __webpack_require__(68037);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/core/Type.ts
var Type = __webpack_require__(19037);
// EXTERNAL MODULE: ../src/editor/Editor.ts + 11 modules
var Editor = __webpack_require__(90192);
;// CONCATENATED MODULE: ../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!../src/editor/components/editor/widgets/PanelNodeSelector.vue?vue&type=script&lang=ts
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};










/* harmony default export */ var PanelNodeSelectorvue_type_script_lang_ts = ((0,runtime_core_esm_bundler/* defineComponent */.aZ)({
  name: "panel-node-selector",
  components: { Modal: Modal/* default */.Z, NodeTree: NodeTree/* default */.Z },
  props: {
    urlParamPath: {
      type: String,
      required: true
    }
  },
  setup(props) {
    const selected_graph_node_id = (0,reactivity_esm_bundler/* ref */.iH)(null);
    const expandedIds = (0,reactivity_esm_bundler/* ref */.iH)([]);
    const root_id = StoreController/* StoreController.engine.scene.root */.F.engine.scene.root().graphNodeId();
    const make_path_relative = (0,reactivity_esm_bundler/* ref */.iH)(true);
    const paramComputed = (0,reactivity_esm_bundler/* ref */.iH)(false);
    const seed = (0,reactivity_esm_bundler/* ref */.iH)(0);
    const makeRelativeCheckboxId = (0,runtime_core_esm_bundler/* computed */.Fl)(() => `nodeselect-makeRelativecheckboxid-${seed.value}`);
    const controller = StoreController/* StoreController.editor.panelNodeSelector */.F.editor.panelNodeSelector;
    const param = controller.paramFromUrl(props.urlParamPath);
    (0,runtime_core_esm_bundler/* onMounted */.bv)(() => {
      if (!param) {
        controller.close();
      }
    });
    const paramId = (0,reactivity_esm_bundler/* ref */.iH)(param == null ? void 0 : param.graphNodeId());
    const node_context = (0,runtime_core_esm_bundler/* computed */.Fl)(() => {
      if (paramId.value) {
        if (param) {
          return param.options.nodeSelectionContext();
        }
      }
    });
    const displayed = (0,runtime_core_esm_bundler/* computed */.Fl)(() => {
      return paramId.value != null;
    });
    const accept_button_class_object = (0,runtime_core_esm_bundler/* computed */.Fl)(() => {
      return { disabled: selected_graph_node_id.value == null };
    });
    (0,runtime_core_esm_bundler/* watch */.YP)(displayed, () => {
      if ((0,Type/* isBooleanTrue */.bI)(displayed.value)) {
        seed.value++;
      }
      selected_graph_node_id.value = null;
    });
    (0,runtime_core_esm_bundler/* watch */.YP)(paramId, _start);
    (0,runtime_core_esm_bundler/* onMounted */.bv)(_start);
    function _start() {
      paramComputed.value = false;
      _update_expanded_ids();
    }
    (0,runtime_core_esm_bundler/* watch */.YP)(make_path_relative, () => {
    });
    function _resetExpandedIds() {
      expandedIds.value.splice(0, expandedIds.value.length);
      paramComputed.value = true;
    }
    function _update_expanded_ids() {
      return __async(this, null, function* () {
        if (!paramId.value) {
          _resetExpandedIds();
          return;
        }
        const param2 = StoreController/* StoreController.engine.param */.F.engine.param(paramId.value);
        if (!param2) {
          _resetExpandedIds();
          return;
        }
        const resolvedGraphNode = yield _resolvedGraphNode(param2);
        if (!resolvedGraphNode) {
          _resetExpandedIds();
          setExpandedIdsFromGraphNode(param2);
          return;
        }
        setExpandedIdsFromGraphNode(resolvedGraphNode);
      });
    }
    function setExpandedIdsFromGraphNode(node) {
      let current = node;
      while (current) {
        expandedIds.value.push(current.graphNodeId());
        current = current.parent();
      }
      paramComputed.value = true;
    }
    function _resolvedGraphNode(param2) {
      return __async(this, null, function* () {
        if (param2.isDirty()) {
          yield param2.compute();
        }
        if (param2 instanceof NodePath/* NodePathParam */.$) {
          return param2.value.node();
        }
        if (param2 instanceof ParamPath/* ParamPathParam */.y) {
          return param2.value.param();
        }
      });
    }
    function on_select(graph_node_id) {
      selected_graph_node_id.value = graph_node_id;
    }
    function accept_selected() {
      return __async(this, null, function* () {
        if (selected_graph_node_id.value) {
          const selected_node = StoreController/* StoreController.engine.node */.F.engine.node(selected_graph_node_id.value);
          if (paramId.value) {
            if (selected_node && param) {
              const newValue = make_path_relative.value ? Walker/* CoreWalker.relativePath */.s$.relativePath(param.node, selected_node) : selected_node.path();
              const cmd = new ParamSet/* ParamSetCommand */.O(param, newValue);
              yield Editor/* Editor.instance */.M.instance().pushCommand(cmd);
            }
          }
          close();
        }
      });
    }
    function close() {
      StoreController/* StoreController.editor.panelNodeSelector.close */.F.editor.panelNodeSelector.close();
    }
    return {
      paramComputed,
      make_path_relative,
      makeRelativeCheckboxId,
      root_id,
      node_context,
      selected_graph_node_id,
      expandedIds,
      // param_id,
      displayed,
      accept_button_class_object,
      // functions
      on_select,
      accept_selected,
      close
    };
  }
}));

;// CONCATENATED MODULE: ../src/editor/components/editor/widgets/PanelNodeSelector.vue?vue&type=script&lang=ts
 
// EXTERNAL MODULE: ../node_modules/vue-loader/dist/exportHelper.js
var exportHelper = __webpack_require__(6959);
;// CONCATENATED MODULE: ../src/editor/components/editor/widgets/PanelNodeSelector.vue




;
const __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(PanelNodeSelectorvue_type_script_lang_ts, [['render',render]])

/* harmony default export */ var PanelNodeSelector = (__exports__);

/***/ })

}])
//# sourceMappingURL=src_editor_components_editor_widgets_PanelNodeSelector_vue.710553d4cdc93bdc4be6.js.map