(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_editor_components_panels_params_components_extras_instruments_piano_Piano_vue"],{

/***/ 71506:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "e": function() { return /* binding */ AudioController; }
/* harmony export */ });
/* unused harmony export AudioControllerClass */
/* harmony import */ var tone_build_esm_core_Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90391);

var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

class AudioControllerClass {
  constructor() {
    this._started = false;
  }
  static instance() {
    return this._instance = this._instance || new AudioControllerClass();
  }
  start() {
    return __async(this, null, function* () {
      if (this._started) {
        return;
      }
      yield (0,tone_build_esm_core_Global__WEBPACK_IMPORTED_MODULE_0__/* .start */ .BL)();
      return;
    });
  }
}
const AudioController = AudioControllerClass.instance();


/***/ }),

/***/ 83315:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "o": function() { return /* binding */ NotesBuilder; }
/* harmony export */ });

class NotesBuilder {
  static list(startOctave, endOctave) {
    let noteIndex = 0;
    const noteHolders = [];
    for (let octave = startOctave; octave <= endOctave; octave++) {
      while (noteIndex < this.ALL_NOTES.length) {
        const currentNote = this.ALL_NOTES[noteIndex];
        const newNote = currentNote + octave;
        noteHolders.push({ note: newNote, octave });
        if (currentNote !== "B" && currentNote !== "E") {
          const blackNote = currentNote + "#" + octave;
          noteHolders.push({ note: blackNote, octave });
        }
        if (octave === endOctave && currentNote === "B")
          break;
        noteIndex++;
      }
      noteIndex = 0;
    }
    return noteHolders;
  }
}
NotesBuilder.ALL_NOTES = ["C", "D", "E", "F", "G", "A", "B"];


/***/ }),

/***/ 8837:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ Piano; }
});

// EXTERNAL MODULE: ../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js
var runtime_core_esm_bundler = __webpack_require__(88917);
// EXTERNAL MODULE: ../node_modules/@vue/runtime-core/node_modules/@vue/shared/dist/shared.esm-bundler.js
var shared_esm_bundler = __webpack_require__(13053);
// EXTERNAL MODULE: ../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js + 1 modules
var runtime_dom_esm_bundler = __webpack_require__(90996);
;// CONCATENATED MODULE: ../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!../src/editor/components/panels/params/components/extras/instruments/piano/Piano.vue?vue&type=template&id=437a4806&ts=true

const _hoisted_1 = { class: "piano-keyboard unselectable" };
const _hoisted_2 = {
  key: 0,
  class: "error-container"
};
const _hoisted_3 = ["onMousedown", "onMouseup", "onMouseover", "onMouseleave"];
const _hoisted_4 = ["onMousedown", "onMouseup", "onMouseover", "onMouseleave"];
const _hoisted_5 = { class: "key-group unselectable" };
const _hoisted_6 = {
  key: 0,
  class: "key-input"
};
const _hoisted_7 = { class: "key-group unselectable" };
const _hoisted_8 = {
  key: 0,
  class: "key-input"
};
const _hoisted_9 = {
  key: 1,
  class: "key-text"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)("div", _hoisted_1, [
    _ctx.isErrored ? ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)("div", _hoisted_2, [
      (0,runtime_core_esm_bundler/* createElementVNode */._)(
        "p",
        null,
        (0,shared_esm_bundler/* toDisplayString */.zw)(_ctx.errorMessage),
        1
        /* TEXT */
      )
    ])) : (0,runtime_core_esm_bundler/* createCommentVNode */.kq)("v-if", true),
    ((0,runtime_core_esm_bundler/* openBlock */.wg)(true), (0,runtime_core_esm_bundler/* createElementBlock */.iD)(
      runtime_core_esm_bundler/* Fragment */.HY,
      null,
      (0,runtime_core_esm_bundler/* renderList */.Ko)(_ctx.notes, (noteObject) => {
        return (0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)("div", {
          class: (0,shared_esm_bundler/* normalizeClass */.C_)(["white-note", [noteObject.pressed ? "white-note-pressed" : ""]]),
          key: noteObject.note,
          style: (0,shared_esm_bundler/* normalizeStyle */.j5)({ width: _ctx.whiteNoteWidthSize + "%", background: _ctx.whiteNoteBackground(noteObject.pressed) }),
          onMousedown: ($event) => _ctx.playNoteMouse(noteObject),
          onMouseup: ($event) => _ctx.removePressedKeyMouse(noteObject),
          onMouseover: ($event) => _ctx.playNoteHover(noteObject),
          onMouseleave: ($event) => _ctx.removePressedKey(noteObject)
        }, [
          noteObject.blackNote ? ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)("div", {
            key: 0,
            class: (0,shared_esm_bundler/* normalizeClass */.C_)(["black-note black-note", [noteObject.blackNote.pressed ? "black-note-pressed" : ""]]),
            style: (0,shared_esm_bundler/* normalizeStyle */.j5)({ background: _ctx.blackNoteBackground(noteObject.blackNote.pressed) }),
            onMousedown: (0,runtime_dom_esm_bundler.withModifiers)(($event) => _ctx.playNoteMouse(noteObject.blackNote), ["stop"]),
            onMouseup: (0,runtime_dom_esm_bundler.withModifiers)(($event) => _ctx.removePressedKeyMouse(noteObject.blackNote), ["stop"]),
            onMouseover: (0,runtime_dom_esm_bundler.withModifiers)(($event) => _ctx.playNoteHover(noteObject.blackNote), ["stop"]),
            onMouseleave: (0,runtime_dom_esm_bundler.withModifiers)(($event) => _ctx.removePressedKey(noteObject.blackNote), ["stop"])
          }, [
            (0,runtime_core_esm_bundler/* createElementVNode */._)("div", _hoisted_5, [
              _ctx.showKeys ? ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)(
                "div",
                _hoisted_6,
                (0,shared_esm_bundler/* toDisplayString */.zw)(noteObject.blackNote.key),
                1
                /* TEXT */
              )) : (0,runtime_core_esm_bundler/* createCommentVNode */.kq)("v-if", true),
              _ctx.showNotes ? ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)(
                "div",
                {
                  key: 1,
                  class: (0,shared_esm_bundler/* normalizeClass */.C_)(["key-text", "key-text-on-black-note", _ctx.indianNotes ? "" : "key-text-vertical"])
                },
                (0,shared_esm_bundler/* toDisplayString */.zw)(noteObject.blackNote.label),
                3
                /* TEXT, CLASS */
              )) : (0,runtime_core_esm_bundler/* createCommentVNode */.kq)("v-if", true)
            ])
          ], 46, _hoisted_4)) : (0,runtime_core_esm_bundler/* createCommentVNode */.kq)("v-if", true),
          (0,runtime_core_esm_bundler/* createElementVNode */._)("div", _hoisted_7, [
            _ctx.showKeys ? ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)(
              "div",
              _hoisted_8,
              (0,shared_esm_bundler/* toDisplayString */.zw)(noteObject.key),
              1
              /* TEXT */
            )) : (0,runtime_core_esm_bundler/* createCommentVNode */.kq)("v-if", true),
            _ctx.showNotes ? ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)(
              "div",
              _hoisted_9,
              (0,shared_esm_bundler/* toDisplayString */.zw)(noteObject.label),
              1
              /* TEXT */
            )) : (0,runtime_core_esm_bundler/* createCommentVNode */.kq)("v-if", true)
          ])
        ], 46, _hoisted_3);
      }),
      128
      /* KEYED_FRAGMENT */
    ))
  ]);
}

;// CONCATENATED MODULE: ../src/editor/components/panels/params/components/extras/instruments/piano/Piano.vue?vue&type=template&id=437a4806&ts=true

// EXTERNAL MODULE: ../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js + 1 modules
var reactivity_esm_bundler = __webpack_require__(61334);
// EXTERNAL MODULE: ../src/editor/store/controllers/StoreController.ts + 44 modules
var StoreController = __webpack_require__(72555);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/core/audio/NotesBuilder.ts
var NotesBuilder = __webpack_require__(83315);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/core/audio/AudioController.ts
var AudioController = __webpack_require__(71506);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/core/graph/CoreGraphNode.ts + 1 modules
var CoreGraphNode = __webpack_require__(45516);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/core/Type.ts
var Type = __webpack_require__(19037);
;// CONCATENATED MODULE: ../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!../src/editor/components/panels/params/components/extras/instruments/piano/Piano.vue?vue&type=script&lang=ts
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};






const ALL_KEYS = [
  "`",
  `1`,
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "0",
  "-",
  "=",
  "q",
  "w",
  "e",
  "r",
  "t",
  "y",
  "u",
  "i",
  "o",
  "p",
  "[",
  "]",
  "\\",
  "a",
  "s",
  "d",
  "f",
  "g",
  "h",
  "j",
  "k",
  "l",
  ";",
  "z",
  "x",
  "c",
  "v",
  "b",
  "n",
  "m",
  ",",
  "."
];
/* harmony default export */ var Pianovue_type_script_lang_ts = ((0,runtime_core_esm_bundler/* defineComponent */.aZ)({
  name: "piano",
  // components: {},
  props: {
    nodeId: {
      type: Number,
      default: null
    },
    allKeys: {
      type: Array,
      default: () => ALL_KEYS
    },
    whiteNoteColor: {
      type: String,
      default: "#1eb7eb"
    },
    blackNoteColor: {
      type: String,
      default: "#f9bb2d"
    },
    // showKeys: {
    // 	type: Boolean,
    // 	default: true,
    // },
    // showNotes: {
    // 	type: Boolean,
    // 	default: true,
    // },
    // startOctave: {
    // 	type: Number,
    // 	default: 2,
    // },
    // endOctave: {
    // 	type: Number,
    // 	default: 4,
    // },
    // sustain: {
    // 	type: Boolean,
    // 	default: false,
    // },
    indianNotes: {
      type: Boolean,
      default: false
    },
    noteConfig: {
      type: Object,
      default: function() {
        const config = {
          scale: "C",
          middleOctave: 4,
          lang: "hi"
        };
        return config;
      }
    }
  },
  setup(props) {
    let instrument = null;
    const notesIndexesByKey = (0,reactivity_esm_bundler/* ref */.iH)({});
    const notes = (0,reactivity_esm_bundler/* ref */.iH)([]);
    const whiteNoteWidthSize = (0,reactivity_esm_bundler/* ref */.iH)(0);
    const isMousePressed = (0,reactivity_esm_bundler/* ref */.iH)(false);
    const errorMessage = (0,reactivity_esm_bundler/* ref */.iH)(null);
    const isErrored = (0,runtime_core_esm_bundler/* computed */.Fl)(() => {
      return errorMessage.value != null;
    });
    const scale = (0,runtime_core_esm_bundler/* computed */.Fl)(() => props.noteConfig.scale);
    const lang = (0,runtime_core_esm_bundler/* computed */.Fl)(() => props.noteConfig.lang);
    const middleOctave = (0,runtime_core_esm_bundler/* computed */.Fl)(() => props.noteConfig.middleOctave);
    const showKeys = (0,reactivity_esm_bundler/* ref */.iH)(false);
    const showNotes = (0,reactivity_esm_bundler/* ref */.iH)(false);
    const startOctave = (0,reactivity_esm_bundler/* ref */.iH)(2);
    const endOctave = (0,reactivity_esm_bundler/* ref */.iH)(4);
    const node = StoreController/* StoreController.engine.node */.F.engine.node(props.nodeId);
    if (!node) {
      console.warn("piano: no node found");
    }
    const coreGraphNode = new CoreGraphNode/* CoreGraphNode */.Y(node.scene(), "piano");
    coreGraphNode.dirtyController.addPostDirtyHook("onPlayInstrumentDirty", _fetchInstrument);
    coreGraphNode.addGraphInput(node);
    (0,runtime_core_esm_bundler/* onMounted */.bv)(() => __async(this, null, function* () {
      _addEvents();
      _fetchInstrument();
    }));
    (0,runtime_core_esm_bundler/* onUnmounted */.Ah)(() => {
      _removeEvents();
      _removeCoreGraphNode();
    });
    const allKeys = (0,runtime_core_esm_bundler/* computed */.Fl)(() => {
      props.allKeys;
    });
    const indianNotes = (0,runtime_core_esm_bundler/* computed */.Fl)(() => {
      props.indianNotes;
    });
    (0,runtime_core_esm_bundler/* watch */.YP)(startOctave, regenerate);
    (0,runtime_core_esm_bundler/* watch */.YP)(endOctave, regenerate);
    (0,runtime_core_esm_bundler/* watch */.YP)(allKeys, regenerate, { deep: true });
    (0,runtime_core_esm_bundler/* watch */.YP)(indianNotes, regenerate);
    (0,runtime_core_esm_bundler/* watch */.YP)(scale, regenerate);
    (0,runtime_core_esm_bundler/* watch */.YP)(lang, regenerate);
    (0,runtime_core_esm_bundler/* watch */.YP)(middleOctave, regenerate);
    function _fetchInstrument() {
      return __async(this, null, function* () {
        errorMessage.value = null;
        showKeys.value = (0,Type/* isBooleanTrue */.bI)(node.pv.showKeys);
        showNotes.value = (0,Type/* isBooleanTrue */.bI)(node.pv.showNotes);
        startOctave.value = node.pv.startOctave;
        endOctave.value = node.pv.endOctave;
        const audioBuilder = (yield node.compute()).coreContent();
        if (!audioBuilder) {
          errorMessage.value = "no audio builder found";
          console.warn("no audio builder found");
          return;
        }
        const audioBuilderInstrument = audioBuilder.instrument();
        if (!audioBuilderInstrument) {
          errorMessage.value = "no instrument found";
          console.warn("no instrument found");
          return;
        }
        instrument = audioBuilderInstrument;
        regenerate();
        yield AudioController/* AudioController.start */.e.start();
      });
    }
    function _removeCoreGraphNode() {
      coreGraphNode == null ? void 0 : coreGraphNode.dispose();
    }
    function _removeEvents() {
      window.removeEventListener("keyup", _onKeyUp);
      window.removeEventListener("mouseup", _onMouseUp);
    }
    function _addEvents() {
      window.addEventListener("keyup", _onKeyUp);
      window.addEventListener("mouseup", _onMouseUp);
    }
    function _onKeyUp(e) {
      const key = e.key;
      const index = notesIndexesByKey.value[key];
      if (index != void 0) {
        const noteObject = notes.value[index].key === key ? notes.value[index] : notes.value[index].blackNote;
        if (noteObject) {
          removePressedKey(noteObject);
        }
      }
    }
    function _onMouseUp(e) {
      isMousePressed.value = false;
    }
    function playNote(noteObject) {
      if (!noteObject) {
        return;
      }
      if (!instrument) {
        console.warn("no instrument");
        return;
      }
      if (!noteObject.pressed) {
        try {
          instrument.triggerAttackRelease(noteObject.note, node.pv.duration);
        } catch (e) {
          console.error("failed to play note");
          console.error(e);
        }
        noteObject.pressed = true;
        if ((0,Type/* isBooleanTrue */.bI)(node.pv.updateNoteFromInstrument)) {
          node.p.note.set(noteObject.note);
        }
      }
    }
    function playNoteMouse(noteObject) {
      isMousePressed.value = true;
      playNote(noteObject);
    }
    function playNoteHover(noteObject) {
      if (isMousePressed.value)
        playNote(noteObject);
    }
    function removePressedKey(noteObject) {
      if (!noteObject) {
        return;
      }
      noteObject.pressed = false;
    }
    function removePressedKeyMouse(noteObject) {
      if (!noteObject) {
        return;
      }
      isMousePressed.value = false;
      removePressedKey(noteObject);
    }
    function whiteNoteBackground(pressed) {
      return pressed ? props.whiteNoteColor : "linear-gradient(to bottom, #eee 0%, #fff 100%)";
    }
    function blackNoteBackground(pressed) {
      return pressed ? props.blackNoteColor : "linear-gradient(45deg, #555, #222)";
    }
    function generateNotes() {
      let keyIndex = 0;
      let noteIndex = 0;
      notes.value.length = 0;
      const ALL_NOTES = NotesBuilder/* NotesBuilder.ALL_NOTES */.o.ALL_NOTES;
      for (let octave = startOctave.value; octave <= endOctave.value; octave++) {
        while (noteIndex < ALL_NOTES.length) {
          const currentNote = ALL_NOTES[noteIndex];
          const newNote = {
            note: currentNote + octave,
            key: props.allKeys[keyIndex++],
            pressed: false,
            label: getLabel(currentNote, octave)
          };
          if (currentNote !== "B" && currentNote !== "E") {
            const blackNote = {
              note: currentNote + "#" + octave,
              key: props.allKeys[keyIndex++],
              pressed: false,
              label: getLabel(currentNote + "#", octave)
            };
            newNote["blackNote"] = blackNote;
          }
          notes.value.push(newNote);
          if (octave === endOctave.value && currentNote === "B")
            break;
          noteIndex++;
        }
        noteIndex = 0;
      }
      whiteNoteWidthSize.value = 100 / notes.value.length;
    }
    function generateNotesIndexesByKey() {
      notesIndexesByKey.value = {};
      for (let index = 0; index < notes.value.length; index++) {
        const k = notes.value[index].key;
        notesIndexesByKey.value[k] = index;
        const blackNote = notes.value[index].blackNote;
        if (blackNote)
          notesIndexesByKey.value[blackNote.key] = index;
      }
    }
    function regenerate() {
      generateNotes();
      generateNotesIndexesByKey();
    }
    function getLabel(note, octave) {
      return note;
    }
    return {
      isErrored,
      errorMessage,
      showKeys,
      showNotes,
      playNoteMouse,
      playNoteHover,
      removePressedKey,
      removePressedKeyMouse,
      whiteNoteBackground,
      blackNoteBackground,
      whiteNoteWidthSize,
      notes
    };
  }
}));

;// CONCATENATED MODULE: ../src/editor/components/panels/params/components/extras/instruments/piano/Piano.vue?vue&type=script&lang=ts
 
// EXTERNAL MODULE: ../node_modules/vue-loader/dist/exportHelper.js
var exportHelper = __webpack_require__(6959);
;// CONCATENATED MODULE: ../src/editor/components/panels/params/components/extras/instruments/piano/Piano.vue




;


const __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(Pianovue_type_script_lang_ts, [['render',render]])

/* harmony default export */ var Piano = (__exports__);

/***/ })

}])
//# sourceMappingURL=src_editor_components_panels_params_components_extras_instruments_piano_Piano_vue.f0a7866765d58f9ff3e2.js.map