(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_engine_examples_examples_advanced_CornellBoxLightMaps_ts"],{

/***/ 17243:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createData": function() { return /* binding */ createData; }
/* harmony export */ });
/* harmony import */ var _polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51254);
/* harmony import */ var _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52070);
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21410);
/* harmony import */ var _polygonjs_polygonjs_src_core_geometry_Constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91568);





function createData(options) {
  const { scene } = options;
  const root = scene.root();
  function create_perspectiveCamera1(parentNode) {
    var perspectiveCamera12 = parentNode.createNode("perspectiveCamera");
    perspectiveCamera12.setName("perspectiveCamera1");
    function create_events1(perspectiveCamera13) {
      var events1 = perspectiveCamera13.createNode("eventsNetwork");
      events1.setName("events1");
      function create_cameraOrbitControls1(events12) {
        var cameraOrbitControls1 = events12.createNode("cameraOrbitControls");
        cameraOrbitControls1.setName("cameraOrbitControls1");
        cameraOrbitControls1.uiData.setPosition(150, 50);
        cameraOrbitControls1.p.target.set([0.4011138810525549, 0.6269525911122225, 0.00746186814011605]);
        cameraOrbitControls1.params.postCreateSpareParams();
        cameraOrbitControls1.params.runOnSceneLoadHooks();
        return cameraOrbitControls1;
      }
      create_cameraOrbitControls1(events1);
      events1.uiData.setPosition(-200, 50);
      events1.params.postCreateSpareParams();
      events1.params.runOnSceneLoadHooks();
      return events1;
    }
    create_events1(perspectiveCamera12);
    perspectiveCamera12.uiData.setPosition(-200, 100);
    perspectiveCamera12.flags.display.set(true);
    perspectiveCamera12.p.t.set([2.10809191478773, 0.7849278357863356, 0.00730504579171153]);
    perspectiveCamera12.p.r.set([-90.12177353678986, 84.71347391947322, 90.12229372467415]);
    perspectiveCamera12.p.controls.set("./events1/cameraOrbitControls1");
    perspectiveCamera12.params.postCreateSpareParams();
    perspectiveCamera12.params.runOnSceneLoadHooks();
    return perspectiveCamera12;
  }
  function create_dummy_lights(parentNode) {
    var dummy_lights = parentNode.createNode("geo");
    dummy_lights.setName("dummy_lights");
    function create_MAT(dummy_lights2) {
      var MAT = dummy_lights2.createNode("materialsNetwork");
      MAT.setName("MAT");
      function create_meshBasic_LIGHT(MAT2) {
        var meshBasic_LIGHT = MAT2.createNode("meshBasic");
        meshBasic_LIGHT.setName("meshBasic_LIGHT");
        meshBasic_LIGHT.uiData.setPosition(-100, 100);
        meshBasic_LIGHT.p.color.set([0.1, 0.1, 0.1]);
        meshBasic_LIGHT.params.postCreateSpareParams();
        meshBasic_LIGHT.params.runOnSceneLoadHooks();
        return meshBasic_LIGHT;
      }
      create_meshBasic_LIGHT(MAT);
      MAT.uiData.setPosition(-250, 350);
      MAT.params.postCreateSpareParams();
      MAT.params.runOnSceneLoadHooks();
      return MAT;
    }
    function create_actor1(dummy_lights2) {
      var actor12 = dummy_lights2.createNode("actor");
      actor12.setName("actor1");
      function create_constant1(actor13) {
        var constant12 = actor13.createNode("constant");
        constant12.setName("constant1");
        constant12.uiData.setPosition(-50, 700);
        constant12.p.type.set(1);
        constant12.p.color.set([1, 1, 1]);
        constant12.params.postCreateSpareParams();
        constant12.params.runOnSceneLoadHooks();
        return constant12;
      }
      function create_constant2(actor13) {
        var constant22 = actor13.createNode("constant");
        constant22.setName("constant2");
        constant22.uiData.setPosition(-50, 850);
        constant22.p.type.set(1);
        constant22.p.color.set([0.047058823529411764, 0.058823529411764705, 0.11372549019607843]);
        constant22.params.postCreateSpareParams();
        constant22.params.runOnSceneLoadHooks();
        return constant22;
      }
      function create_getMaterial3(actor13) {
        var getMaterial32 = actor13.createNode("getMaterial");
        getMaterial32.setName("getMaterial3");
        getMaterial32.uiData.setPosition(200, 1250);
        getMaterial32.p.node.set("../../../cornell_box/MAT/meshBasicBuilder1");
        getMaterial32.params.postCreateSpareParams();
        getMaterial32.params.runOnSceneLoadHooks();
        return getMaterial32;
      }
      function create_getObjectAttribute1(actor13) {
        var getObjectAttribute12 = actor13.createNode("getObjectAttribute");
        getObjectAttribute12.setName("getObjectAttribute1");
        getObjectAttribute12.uiData.setPosition(150, 1600);
        getObjectAttribute12.p.type.set(4);
        getObjectAttribute12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.STRING */ ._.STRING, "attribName", "uniformName", {
          spare: true,
          editable: true
        });
        getObjectAttribute12.params.postCreateSpareParams();
        getObjectAttribute12.params.runOnSceneLoadHooks();
        return getObjectAttribute12;
      }
      function create_getObjectAttribute2(actor13) {
        var getObjectAttribute22 = actor13.createNode("getObjectAttribute");
        getObjectAttribute22.setName("getObjectAttribute2");
        getObjectAttribute22.uiData.setPosition(0, 1050);
        getObjectAttribute22.p.type.set(0);
        getObjectAttribute22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.STRING */ ._.STRING, "attribName", "hovered", { spare: true, editable: true });
        getObjectAttribute22.params.postCreateSpareParams();
        getObjectAttribute22.params.runOnSceneLoadHooks();
        return getObjectAttribute22;
      }
      function create_onObjectHover1(actor13) {
        var onObjectHover12 = actor13.createNode("onObjectHover");
        onObjectHover12.setName("onObjectHover1");
        onObjectHover12.uiData.setPosition(300, 200);
        onObjectHover12.params.postCreateSpareParams();
        onObjectHover12.params.runOnSceneLoadHooks();
        return onObjectHover12;
      }
      function create_onTick2(actor13) {
        var onTick22 = actor13.createNode("onTick");
        onTick22.setName("onTick2");
        onTick22.uiData.setPosition(600, 550);
        onTick22.params.postCreateSpareParams();
        onTick22.params.runOnSceneLoadHooks();
        return onTick22;
      }
      function create_setMaterialColor1(actor13) {
        var setMaterialColor12 = actor13.createNode("setMaterialColor");
        setMaterialColor12.setName("setMaterialColor1");
        setMaterialColor12.uiData.setPosition(800, 650);
        setMaterialColor12.params.postCreateSpareParams();
        setMaterialColor12.params.runOnSceneLoadHooks();
        return setMaterialColor12;
      }
      function create_setMaterialUniform1(actor13) {
        var setMaterialUniform12 = actor13.createNode("setMaterialUniform");
        setMaterialUniform12.setName("setMaterialUniform1");
        setMaterialUniform12.uiData.setPosition(800, 1400);
        setMaterialUniform12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, _polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, 0, { spare: true, editable: false });
        setMaterialUniform12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.STRING */ ._.STRING, "uniformName", "", { spare: true, editable: false });
        setMaterialUniform12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "lerp", 0, { spare: true, editable: false });
        setMaterialUniform12.params.get("lerp").set(0.14);
        setMaterialUniform12.params.postCreateSpareParams();
        setMaterialUniform12.params.runOnSceneLoadHooks();
        return setMaterialUniform12;
      }
      function create_setObjectAttribute1(actor13) {
        var setObjectAttribute12 = actor13.createNode("setObjectAttribute");
        setObjectAttribute12.setName("setObjectAttribute1");
        setObjectAttribute12.uiData.setPosition(500, 100);
        setObjectAttribute12.p.type.set(0);
        setObjectAttribute12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.STRING */ ._.STRING, "attribName", "hovered", { spare: true, editable: true });
        setObjectAttribute12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "lerp", 1, { spare: true, editable: true });
        setObjectAttribute12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.BOOLEAN */ ._.BOOLEAN, "val", false, { spare: true, editable: false });
        setObjectAttribute12.params.postCreateSpareParams();
        setObjectAttribute12.params.runOnSceneLoadHooks();
        return setObjectAttribute12;
      }
      function create_twoWaySwitch2(actor13) {
        var twoWaySwitch22 = actor13.createNode("twoWaySwitch");
        twoWaySwitch22.setName("twoWaySwitch2");
        twoWaySwitch22.uiData.setPosition(200, 1450);
        twoWaySwitch22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.BOOLEAN */ ._.BOOLEAN, "condition", false, { spare: true, editable: false });
        twoWaySwitch22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "ifTrue", 0, { spare: true, editable: true });
        twoWaySwitch22.params.get("ifTrue").set(1);
        twoWaySwitch22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "ifFalse", 0, { spare: true, editable: true });
        twoWaySwitch22.params.postCreateSpareParams();
        twoWaySwitch22.params.runOnSceneLoadHooks();
        return twoWaySwitch22;
      }
      function create_twoWaySwitch3(actor13) {
        var twoWaySwitch32 = actor13.createNode("twoWaySwitch");
        twoWaySwitch32.setName("twoWaySwitch3");
        twoWaySwitch32.uiData.setPosition(450, 1050);
        twoWaySwitch32.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.BOOLEAN */ ._.BOOLEAN, "condition", false, { spare: true, editable: false });
        twoWaySwitch32.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "ifTrue", 0, { spare: true, editable: true });
        twoWaySwitch32.params.get("ifTrue").set(0.45);
        twoWaySwitch32.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "ifFalse", 0, { spare: true, editable: true });
        twoWaySwitch32.params.get("ifFalse").set(0.01);
        twoWaySwitch32.params.postCreateSpareParams();
        twoWaySwitch32.params.runOnSceneLoadHooks();
        return twoWaySwitch32;
      }
      function create_twoWaySwitch4(actor13) {
        var twoWaySwitch42 = actor13.createNode("twoWaySwitch");
        twoWaySwitch42.setName("twoWaySwitch4");
        twoWaySwitch42.uiData.setPosition(250, 700);
        twoWaySwitch42.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.BOOLEAN */ ._.BOOLEAN, "condition", false, { spare: true, editable: false });
        twoWaySwitch42.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.COLOR */ ._.COLOR, "ifTrue", [0, 0, 0], { spare: true, editable: false });
        twoWaySwitch42.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.COLOR */ ._.COLOR, "ifFalse", [0, 0, 0], { spare: true, editable: false });
        twoWaySwitch42.params.postCreateSpareParams();
        twoWaySwitch42.params.runOnSceneLoadHooks();
        return twoWaySwitch42;
      }
      var constant1 = create_constant1(actor12);
      var constant2 = create_constant2(actor12);
      var getMaterial3 = create_getMaterial3(actor12);
      var getObjectAttribute1 = create_getObjectAttribute1(actor12);
      var getObjectAttribute2 = create_getObjectAttribute2(actor12);
      var onObjectHover1 = create_onObjectHover1(actor12);
      var onTick2 = create_onTick2(actor12);
      var setMaterialColor1 = create_setMaterialColor1(actor12);
      var setMaterialUniform1 = create_setMaterialUniform1(actor12);
      var setObjectAttribute1 = create_setObjectAttribute1(actor12);
      var twoWaySwitch2 = create_twoWaySwitch2(actor12);
      var twoWaySwitch3 = create_twoWaySwitch3(actor12);
      var twoWaySwitch4 = create_twoWaySwitch4(actor12);
      setMaterialColor1.setInput("trigger", onTick2, "trigger");
      setMaterialColor1.setInput(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.COLOR */ ._.COLOR, twoWaySwitch4, "val");
      setMaterialColor1.setInput("lerp", twoWaySwitch3, "val");
      setMaterialUniform1.setInput("trigger", onTick2, "trigger");
      setMaterialUniform1.setInput("Material", getMaterial3, "Material");
      setMaterialUniform1.setInput(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, twoWaySwitch2, "val");
      setMaterialUniform1.setInput("uniformName", getObjectAttribute1, "val");
      setMaterialUniform1.setInput("lerp", twoWaySwitch3, "val");
      setObjectAttribute1.setInput("trigger", onObjectHover1, "trigger");
      setObjectAttribute1.setInput("val", onObjectHover1, "hovered");
      twoWaySwitch2.setInput("condition", getObjectAttribute2, "val");
      twoWaySwitch3.setInput("condition", getObjectAttribute2, "val");
      twoWaySwitch4.setInput("condition", getObjectAttribute2, "val");
      twoWaySwitch4.setInput("ifTrue", constant1, "val");
      twoWaySwitch4.setInput("ifFalse", constant2, "val");
      actor12.uiData.setComment(
        'Inside this actor node, we define the behavior of the 3 input sphere, which is that when one has the cursor on top of it, its "hovered" attribute is set to 1. And each frame (using the onTick node), the material color is updated.\n\nThen, the uniform of the material with the lightmaps is also updated, which is what makes the cornell box illuminated.'
      );
      actor12.uiData.setPosition(200, 700);
      actor12.params.postCreateSpareParams();
      actor12.params.runOnSceneLoadHooks();
      return actor12;
    }
    function create_actor2(dummy_lights2) {
      var actor22 = dummy_lights2.createNode("actor");
      actor22.setName("actor2");
      function create_getChildrenAttributes1(actor23) {
        var getChildrenAttributes12 = actor23.createNode("getChildrenAttributes");
        getChildrenAttributes12.setName("getChildrenAttributes1");
        getChildrenAttributes12.uiData.setPosition(-50, 250);
        getChildrenAttributes12.p.type.set(0);
        getChildrenAttributes12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.STRING */ ._.STRING, "attribName", "hovered", {
          spare: true,
          editable: true
        });
        getChildrenAttributes12.params.postCreateSpareParams();
        getChildrenAttributes12.params.runOnSceneLoadHooks();
        return getChildrenAttributes12;
      }
      function create_onTick1(actor23) {
        var onTick12 = actor23.createNode("onTick");
        onTick12.setName("onTick1");
        onTick12.uiData.setPosition(100, 0);
        onTick12.params.postCreateSpareParams();
        onTick12.params.runOnSceneLoadHooks();
        return onTick12;
      }
      function create_or1(actor23) {
        var or12 = actor23.createNode("or");
        or12.setName("or1");
        or12.uiData.setPosition(150, 250);
        or12.params.postCreateSpareParams();
        or12.params.runOnSceneLoadHooks();
        return or12;
      }
      function create_setViewer1(actor23) {
        var setViewer12 = actor23.createNode("setViewer");
        setViewer12.setName("setViewer1");
        setViewer12.uiData.setPosition(300, 150);
        setViewer12.params.postCreateSpareParams();
        setViewer12.params.runOnSceneLoadHooks();
        return setViewer12;
      }
      var getChildrenAttributes1 = create_getChildrenAttributes1(actor22);
      var onTick1 = create_onTick1(actor22);
      var or1 = create_or1(actor22);
      var setViewer1 = create_setViewer1(actor22);
      or1.setInput("boolean0", getChildrenAttributes1, "val");
      setViewer1.setInput("trigger", onTick1, "trigger");
      setViewer1.setInput("set", or1, "val");
      actor22.uiData.setComment(
        'inside this actor node, which is applied to the object which has the 3 spheres as children, we can check if any of those sphere has its "hovered" attribute set to 1. If this is the case, we change the CSS class on the viewer HTML element, which is what changes the cursor to a hand.'
      );
      actor22.uiData.setPosition(100, 1200);
      actor22.flags.display.set(true);
      actor22.params.postCreateSpareParams();
      actor22.params.runOnSceneLoadHooks();
      return actor22;
    }
    function create_attribCreate1(dummy_lights2) {
      var attribCreate12 = dummy_lights2.createNode("attribCreate");
      attribCreate12.setName("attribCreate1");
      attribCreate12.uiData.setPosition(200, 550);
      attribCreate12.setAttribClass(_polygonjs_polygonjs_src_core_geometry_Constant__WEBPACK_IMPORTED_MODULE_1__/* .AttribClass.OBJECT */ .io.OBJECT);
      attribCreate12.p.type.set(1);
      attribCreate12.p.name.set("uniformName");
      attribCreate12.p.value1.set("@objnum+1");
      attribCreate12.p.string.set("lightMapMult`@objnum+1`");
      attribCreate12.params.postCreateSpareParams();
      attribCreate12.params.runOnSceneLoadHooks();
      return attribCreate12;
    }
    function create_emptyObject1(dummy_lights2) {
      var emptyObject12 = dummy_lights2.createNode("emptyObject");
      emptyObject12.setName("emptyObject1");
      emptyObject12.uiData.setPosition(0, 850);
      emptyObject12.params.postCreateSpareParams();
      emptyObject12.params.runOnSceneLoadHooks();
      return emptyObject12;
    }
    function create_material1(dummy_lights2) {
      var material12 = dummy_lights2.createNode("material");
      material12.setName("material1");
      material12.uiData.setPosition(-50, 200);
      material12.p.material.set("../MAT/meshBasic_LIGHT");
      material12.p.cloneMat.set(true);
      material12.params.postCreateSpareParams();
      material12.params.runOnSceneLoadHooks();
      return material12;
    }
    function create_material2(dummy_lights2) {
      var material22 = dummy_lights2.createNode("material");
      material22.setName("material2");
      material22.uiData.setPosition(200, 200);
      material22.p.material.set("../MAT/meshBasic_LIGHT");
      material22.p.cloneMat.set(true);
      material22.params.postCreateSpareParams();
      material22.params.runOnSceneLoadHooks();
      return material22;
    }
    function create_material3(dummy_lights2) {
      var material32 = dummy_lights2.createNode("material");
      material32.setName("material3");
      material32.uiData.setPosition(450, 200);
      material32.p.material.set("../MAT/meshBasic_LIGHT");
      material32.p.cloneMat.set(true);
      material32.params.postCreateSpareParams();
      material32.params.runOnSceneLoadHooks();
      return material32;
    }
    function create_merge1(dummy_lights2) {
      var merge12 = dummy_lights2.createNode("merge");
      merge12.setName("merge1");
      merge12.uiData.setPosition(200, 450);
      merge12.params.postCreateSpareParams();
      merge12.params.runOnSceneLoadHooks();
      return merge12;
    }
    function create_setChildren1(dummy_lights2) {
      var setChildren12 = dummy_lights2.createNode("setChildren");
      setChildren12.setName("setChildren1");
      setChildren12.uiData.setPosition(100, 1050);
      setChildren12.params.postCreateSpareParams();
      setChildren12.params.runOnSceneLoadHooks();
      return setChildren12;
    }
    function create_sphere1(dummy_lights2) {
      var sphere12 = dummy_lights2.createNode("sphere");
      sphere12.setName("sphere1");
      sphere12.uiData.setPosition(200, -100);
      sphere12.p.radius.set(0.05);
      sphere12.params.postCreateSpareParams();
      sphere12.params.runOnSceneLoadHooks();
      return sphere12;
    }
    function create_transform1(dummy_lights2) {
      var transform12 = dummy_lights2.createNode("transform");
      transform12.setName("transform1");
      transform12.uiData.setPosition(-50, 100);
      transform12.p.t.set([0, 0.9011514060161644, 0]);
      transform12.params.postCreateSpareParams();
      transform12.params.runOnSceneLoadHooks();
      return transform12;
    }
    function create_transform2(dummy_lights2) {
      var transform22 = dummy_lights2.createNode("transform");
      transform22.setName("transform2");
      transform22.uiData.setPosition(200, 100);
      transform22.p.t.set([-0.4854636761764971, 0.505798168647816, -0.4299028195488099]);
      transform22.params.postCreateSpareParams();
      transform22.params.runOnSceneLoadHooks();
      return transform22;
    }
    function create_transform3(dummy_lights2) {
      var transform32 = dummy_lights2.createNode("transform");
      transform32.setName("transform3");
      transform32.uiData.setPosition(450, 100);
      transform32.p.t.set([0.4679062758532525, 0.12241998019394396, 0.3889367455877049]);
      transform32.params.postCreateSpareParams();
      transform32.params.runOnSceneLoadHooks();
      return transform32;
    }
    create_MAT(dummy_lights);
    var actor1 = create_actor1(dummy_lights);
    var actor2 = create_actor2(dummy_lights);
    var attribCreate1 = create_attribCreate1(dummy_lights);
    var emptyObject1 = create_emptyObject1(dummy_lights);
    var material1 = create_material1(dummy_lights);
    var material2 = create_material2(dummy_lights);
    var material3 = create_material3(dummy_lights);
    var merge1 = create_merge1(dummy_lights);
    var setChildren1 = create_setChildren1(dummy_lights);
    var sphere1 = create_sphere1(dummy_lights);
    var transform1 = create_transform1(dummy_lights);
    var transform2 = create_transform2(dummy_lights);
    var transform3 = create_transform3(dummy_lights);
    actor1.setInput(0, attribCreate1);
    actor2.setInput(0, setChildren1);
    attribCreate1.setInput(0, merge1);
    material1.setInput(0, transform1);
    material2.setInput(0, transform2);
    material3.setInput(0, transform3);
    merge1.setInput(0, material1);
    merge1.setInput(1, material2);
    merge1.setInput(2, material3);
    setChildren1.setInput(0, emptyObject1);
    setChildren1.setInput(1, actor1);
    transform1.setInput(0, sphere1);
    transform2.setInput(0, sphere1);
    transform3.setInput(0, sphere1);
    dummy_lights.uiData.setComment("Dive inside here to see how the lights are setup to react to the cursor.");
    dummy_lights.uiData.setPosition(-50, -350);
    dummy_lights.flags.display.set(true);
    dummy_lights.params.postCreateSpareParams();
    dummy_lights.params.runOnSceneLoadHooks();
    return dummy_lights;
  }
  function create_cornell_box(parentNode) {
    var cornell_box = parentNode.createNode("geo");
    cornell_box.setName("cornell_box");
    function create_COP(cornell_box2) {
      var COP = cornell_box2.createNode("copNetwork");
      COP.setName("COP");
      function create_image_LIGHTMAP_0(COP2) {
        var image_LIGHTMAP_0 = COP2.createNode("image");
        image_LIGHTMAP_0.setName("image_LIGHTMAP_0");
        image_LIGHTMAP_0.uiData.setPosition(-300, -100);
        image_LIGHTMAP_0.p.url.set(
          "https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/models/cornell_box/lightmap.0.png"
        );
        image_LIGHTMAP_0.p.tcolorSpace.set(true);
        image_LIGHTMAP_0.p.colorSpace.set(three__WEBPACK_IMPORTED_MODULE_2__.SRGBColorSpace);
        image_LIGHTMAP_0.p.tminFilter.set(true);
        image_LIGHTMAP_0.p.tmagFilter.set(true);
        image_LIGHTMAP_0.p.tanisotropy.set(true);
        image_LIGHTMAP_0.p.useRendererMaxAnisotropy.set(true);
        image_LIGHTMAP_0.p.tflipY.set(true);
        image_LIGHTMAP_0.p.flipY.set(true);
        image_LIGHTMAP_0.params.postCreateSpareParams();
        image_LIGHTMAP_0.params.runOnSceneLoadHooks();
        return image_LIGHTMAP_0;
      }
      function create_image_LIGHTMAP_1(COP2) {
        var image_LIGHTMAP_1 = COP2.createNode("image");
        image_LIGHTMAP_1.setName("image_LIGHTMAP_1");
        image_LIGHTMAP_1.uiData.setPosition(-300, 200);
        image_LIGHTMAP_1.p.url.set(
          "https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/models/cornell_box/lightmap.1.png"
        );
        image_LIGHTMAP_1.p.tcolorSpace.set(true);
        image_LIGHTMAP_1.p.colorSpace.set(three__WEBPACK_IMPORTED_MODULE_2__.SRGBColorSpace);
        image_LIGHTMAP_1.p.tminFilter.set(true);
        image_LIGHTMAP_1.p.tmagFilter.set(true);
        image_LIGHTMAP_1.p.tanisotropy.set(true);
        image_LIGHTMAP_1.p.useRendererMaxAnisotropy.set(true);
        image_LIGHTMAP_1.p.tflipY.set(true);
        image_LIGHTMAP_1.p.flipY.set(true);
        image_LIGHTMAP_1.params.postCreateSpareParams();
        image_LIGHTMAP_1.params.runOnSceneLoadHooks();
        return image_LIGHTMAP_1;
      }
      function create_image_LIGHTMAP_2(COP2) {
        var image_LIGHTMAP_2 = COP2.createNode("image");
        image_LIGHTMAP_2.setName("image_LIGHTMAP_2");
        image_LIGHTMAP_2.uiData.setPosition(-300, 450);
        image_LIGHTMAP_2.p.url.set(
          "https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/models/cornell_box/lightmap.2.png"
        );
        image_LIGHTMAP_2.p.tcolorSpace.set(true);
        image_LIGHTMAP_2.p.colorSpace.set(three__WEBPACK_IMPORTED_MODULE_2__.SRGBColorSpace);
        image_LIGHTMAP_2.p.tminFilter.set(true);
        image_LIGHTMAP_2.p.tmagFilter.set(true);
        image_LIGHTMAP_2.p.tanisotropy.set(true);
        image_LIGHTMAP_2.p.useRendererMaxAnisotropy.set(true);
        image_LIGHTMAP_2.p.tflipY.set(true);
        image_LIGHTMAP_2.p.flipY.set(true);
        image_LIGHTMAP_2.params.postCreateSpareParams();
        image_LIGHTMAP_2.params.runOnSceneLoadHooks();
        return image_LIGHTMAP_2;
      }
      function create_image_LIGHTMAP_3(COP2) {
        var image_LIGHTMAP_3 = COP2.createNode("image");
        image_LIGHTMAP_3.setName("image_LIGHTMAP_3");
        image_LIGHTMAP_3.uiData.setPosition(-300, 700);
        image_LIGHTMAP_3.p.url.set(
          "https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/models/cornell_box/lightmap.3.png"
        );
        image_LIGHTMAP_3.p.tcolorSpace.set(true);
        image_LIGHTMAP_3.p.colorSpace.set(three__WEBPACK_IMPORTED_MODULE_2__.SRGBColorSpace);
        image_LIGHTMAP_3.p.tminFilter.set(true);
        image_LIGHTMAP_3.p.tmagFilter.set(true);
        image_LIGHTMAP_3.p.tanisotropy.set(true);
        image_LIGHTMAP_3.p.useRendererMaxAnisotropy.set(true);
        image_LIGHTMAP_3.p.tflipY.set(true);
        image_LIGHTMAP_3.p.flipY.set(true);
        image_LIGHTMAP_3.params.postCreateSpareParams();
        image_LIGHTMAP_3.params.runOnSceneLoadHooks();
        return image_LIGHTMAP_3;
      }
      create_image_LIGHTMAP_0(COP);
      create_image_LIGHTMAP_1(COP);
      create_image_LIGHTMAP_2(COP);
      create_image_LIGHTMAP_3(COP);
      COP.uiData.setComment("Here we load the 4 different light maps used by the cornell box material");
      COP.uiData.setPosition(-250, 350);
      COP.params.postCreateSpareParams();
      COP.params.runOnSceneLoadHooks();
      return COP;
    }
    function create_MAT(cornell_box2) {
      var MAT = cornell_box2.createNode("materialsNetwork");
      MAT.setName("MAT");
      function create_meshBasicBuilder1(MAT2) {
        var meshBasicBuilder1 = MAT2.createNode("meshBasicBuilder");
        meshBasicBuilder1.setName("meshBasicBuilder1");
        function create_add1(meshBasicBuilder12) {
          var add12 = meshBasicBuilder12.createNode("add");
          add12.setName("add1");
          add12.uiData.setPosition(100, -50);
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "add0", [0, 0, 0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "add1", [0, 0, 0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "add2", [0, 0, 0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "add3", [0, 0, 0, 0], { spare: true, editable: false });
          add12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "add4", [0, 0, 0, 0], { spare: true, editable: true });
          add12.params.postCreateSpareParams();
          add12.params.runOnSceneLoadHooks();
          return add12;
        }
        function create_globals1(meshBasicBuilder12) {
          var globals12 = meshBasicBuilder12.createNode("globals");
          globals12.setName("globals1");
          globals12.uiData.setPosition(-550, -100);
          globals12.params.postCreateSpareParams();
          globals12.params.runOnSceneLoadHooks();
          return globals12;
        }
        function create_multScalar1(meshBasicBuilder12) {
          var multScalar12 = meshBasicBuilder12.createNode("multScalar");
          multScalar12.setName("multScalar1");
          multScalar12.uiData.setPosition(-100, -100);
          multScalar12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "value", [1, 1, 1, 1], { spare: true, editable: false });
          multScalar12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: false });
          multScalar12.params.postCreateSpareParams();
          multScalar12.params.runOnSceneLoadHooks();
          return multScalar12;
        }
        function create_multScalar2(meshBasicBuilder12) {
          var multScalar22 = meshBasicBuilder12.createNode("multScalar");
          multScalar22.setName("multScalar2");
          multScalar22.uiData.setPosition(-100, 150);
          multScalar22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "value", [1, 1, 1, 1], { spare: true, editable: false });
          multScalar22.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: false });
          multScalar22.params.postCreateSpareParams();
          multScalar22.params.runOnSceneLoadHooks();
          return multScalar22;
        }
        function create_multScalar3(meshBasicBuilder12) {
          var multScalar32 = meshBasicBuilder12.createNode("multScalar");
          multScalar32.setName("multScalar3");
          multScalar32.uiData.setPosition(-100, 400);
          multScalar32.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "value", [1, 1, 1, 1], { spare: true, editable: false });
          multScalar32.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: false });
          multScalar32.params.postCreateSpareParams();
          multScalar32.params.runOnSceneLoadHooks();
          return multScalar32;
        }
        function create_multScalar4(meshBasicBuilder12) {
          var multScalar42 = meshBasicBuilder12.createNode("multScalar");
          multScalar42.setName("multScalar4");
          multScalar42.uiData.setPosition(-100, 750);
          multScalar42.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "value", [1, 1, 1, 1], { spare: true, editable: false });
          multScalar42.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: false });
          multScalar42.params.postCreateSpareParams();
          multScalar42.params.runOnSceneLoadHooks();
          return multScalar42;
        }
        function create_multScalar5(meshBasicBuilder12) {
          var multScalar52 = meshBasicBuilder12.createNode("multScalar");
          multScalar52.setName("multScalar5");
          multScalar52.uiData.setPosition(-200, -200);
          multScalar52.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR4 */ ._.VECTOR4, "value", [1, 1, 1, 1], { spare: true, editable: false });
          multScalar52.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: true });
          multScalar52.params.get("mult").set(0.17);
          multScalar52.params.postCreateSpareParams();
          multScalar52.params.runOnSceneLoadHooks();
          return multScalar52;
        }
        function create_output1(meshBasicBuilder12) {
          var output12 = meshBasicBuilder12.createNode("output");
          output12.setName("output1");
          output12.uiData.setPosition(400, -50);
          output12.params.postCreateSpareParams();
          output12.params.runOnSceneLoadHooks();
          return output12;
        }
        function create_param1(meshBasicBuilder12) {
          var param12 = meshBasicBuilder12.createNode("param");
          param12.setName("param1");
          param12.uiData.setPosition(-200, -50);
          param12.p.name.set("lightMapMult0");
          param12.params.postCreateSpareParams();
          param12.params.runOnSceneLoadHooks();
          return param12;
        }
        function create_param2(meshBasicBuilder12) {
          var param22 = meshBasicBuilder12.createNode("param");
          param22.setName("param2");
          param22.uiData.setPosition(-200, 200);
          param22.p.name.set("lightMapMult1");
          param22.params.postCreateSpareParams();
          param22.params.runOnSceneLoadHooks();
          return param22;
        }
        function create_param3(meshBasicBuilder12) {
          var param32 = meshBasicBuilder12.createNode("param");
          param32.setName("param3");
          param32.uiData.setPosition(-200, 450);
          param32.p.name.set("lightMapMult2");
          param32.params.postCreateSpareParams();
          param32.params.runOnSceneLoadHooks();
          return param32;
        }
        function create_param4(meshBasicBuilder12) {
          var param42 = meshBasicBuilder12.createNode("param");
          param42.setName("param4");
          param42.uiData.setPosition(-200, 800);
          param42.p.name.set("lightMapMult3");
          param42.params.postCreateSpareParams();
          param42.params.runOnSceneLoadHooks();
          return param42;
        }
        function create_texture1(meshBasicBuilder12) {
          var texture12 = meshBasicBuilder12.createNode("texture");
          texture12.setName("texture1");
          texture12.uiData.setPosition(-350, -200);
          texture12.p.paramName.set("lightMap0");
          texture12.params.postCreateSpareParams();
          texture12.params.runOnSceneLoadHooks();
          return texture12;
        }
        function create_texture2(meshBasicBuilder12) {
          var texture22 = meshBasicBuilder12.createNode("texture");
          texture22.setName("texture2");
          texture22.uiData.setPosition(-200, 100);
          texture22.p.paramName.set("lightMap1");
          texture22.params.postCreateSpareParams();
          texture22.params.runOnSceneLoadHooks();
          return texture22;
        }
        function create_texture3(meshBasicBuilder12) {
          var texture32 = meshBasicBuilder12.createNode("texture");
          texture32.setName("texture3");
          texture32.uiData.setPosition(-200, 350);
          texture32.p.paramName.set("lightMap2");
          texture32.params.postCreateSpareParams();
          texture32.params.runOnSceneLoadHooks();
          return texture32;
        }
        function create_texture4(meshBasicBuilder12) {
          var texture42 = meshBasicBuilder12.createNode("texture");
          texture42.setName("texture4");
          texture42.uiData.setPosition(-200, 700);
          texture42.p.paramName.set("lightMap3");
          texture42.params.postCreateSpareParams();
          texture42.params.runOnSceneLoadHooks();
          return texture42;
        }
        function create_vec4ToVec3_1(meshBasicBuilder12) {
          var vec4ToVec3_12 = meshBasicBuilder12.createNode("vec4ToVec3");
          vec4ToVec3_12.setName("vec4ToVec3_1");
          vec4ToVec3_12.uiData.setPosition(200, -50);
          vec4ToVec3_12.params.postCreateSpareParams();
          vec4ToVec3_12.params.runOnSceneLoadHooks();
          return vec4ToVec3_12;
        }
        var add1 = create_add1(meshBasicBuilder1);
        var globals1 = create_globals1(meshBasicBuilder1);
        var multScalar1 = create_multScalar1(meshBasicBuilder1);
        var multScalar2 = create_multScalar2(meshBasicBuilder1);
        var multScalar3 = create_multScalar3(meshBasicBuilder1);
        var multScalar4 = create_multScalar4(meshBasicBuilder1);
        var multScalar5 = create_multScalar5(meshBasicBuilder1);
        var output1 = create_output1(meshBasicBuilder1);
        var param1 = create_param1(meshBasicBuilder1);
        var param2 = create_param2(meshBasicBuilder1);
        var param3 = create_param3(meshBasicBuilder1);
        var param4 = create_param4(meshBasicBuilder1);
        var texture1 = create_texture1(meshBasicBuilder1);
        var texture2 = create_texture2(meshBasicBuilder1);
        var texture3 = create_texture3(meshBasicBuilder1);
        var texture4 = create_texture4(meshBasicBuilder1);
        var vec4ToVec3_1 = create_vec4ToVec3_1(meshBasicBuilder1);
        add1.setInput("add0", multScalar1, "val");
        add1.setInput("add1", multScalar2, "val");
        add1.setInput("add2", multScalar3, "val");
        add1.setInput("add3", multScalar4, "val");
        multScalar1.setInput("value", multScalar5, "val");
        multScalar1.setInput("mult", param1, "val");
        multScalar2.setInput("value", texture2, "rgba");
        multScalar2.setInput("mult", param2, "val");
        multScalar3.setInput("value", texture3, "rgba");
        multScalar3.setInput("mult", param3, "val");
        multScalar4.setInput("value", texture4, "rgba");
        multScalar4.setInput("mult", param4, "val");
        multScalar5.setInput("value", texture1, "rgba");
        output1.setInput(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.COLOR */ ._.COLOR, vec4ToVec3_1, "vec3");
        texture1.setInput("uv", globals1, "uv");
        texture2.setInput("uv", globals1, "uv");
        texture3.setInput("uv", globals1, "uv");
        texture4.setInput("uv", globals1, "uv");
        vec4ToVec3_1.setInput("vec4", add1, "sum");
        meshBasicBuilder1.uiData.setComment(
          "In order to understand how this material is created, you need to go inside and see how the textures are being loaded, and how their values are being multiplied.\n\nThen on this node itself, select it to view its parameters. Then open the advanced tab to see the parameters created by the texture and params nodes inside. When the scene is not playing, you can edit those and see how they change the material.\n\nWhen the scene is playing, those parameters will be changed by the actor nodes inside the dummy lights object"
        );
        meshBasicBuilder1.uiData.setPosition(0, 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.NODE_PATH */ ._.NODE_PATH, "lightMap0", "", {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true,
          nodeSelection: { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP }
        });
        meshBasicBuilder1.params.get("lightMap0").set("../../COP/image_LIGHTMAP_0");
        meshBasicBuilder1.params.get("lightMap0").options.setOption("nodeSelection", { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP });
        meshBasicBuilder1.params.get("lightMap0").options.setOption("editable", void 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.NODE_PATH */ ._.NODE_PATH, "lightMap1", "", {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true,
          nodeSelection: { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP }
        });
        meshBasicBuilder1.params.get("lightMap1").set("../../COP/image_LIGHTMAP_1");
        meshBasicBuilder1.params.get("lightMap1").options.setOption("nodeSelection", { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP });
        meshBasicBuilder1.params.get("lightMap1").options.setOption("editable", void 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.NODE_PATH */ ._.NODE_PATH, "lightMap2", "", {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true,
          nodeSelection: { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP }
        });
        meshBasicBuilder1.params.get("lightMap2").set("../../COP/image_LIGHTMAP_2");
        meshBasicBuilder1.params.get("lightMap2").options.setOption("nodeSelection", { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP });
        meshBasicBuilder1.params.get("lightMap2").options.setOption("editable", void 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.NODE_PATH */ ._.NODE_PATH, "lightMap3", "", {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true,
          nodeSelection: { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP }
        });
        meshBasicBuilder1.params.get("lightMap3").set("../../COP/image_LIGHTMAP_3");
        meshBasicBuilder1.params.get("lightMap3").options.setOption("nodeSelection", { context: _polygonjs_polygonjs_src_engine_poly_NodeContext__WEBPACK_IMPORTED_MODULE_3__/* .NodeContext.COP */ .sy.COP });
        meshBasicBuilder1.params.get("lightMap3").options.setOption("editable", void 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "lightMapMult0", 0, {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true
        });
        meshBasicBuilder1.params.get("lightMapMult0").options.setOption("editable", void 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "lightMapMult1", 0, {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true
        });
        meshBasicBuilder1.params.get("lightMapMult1").options.setOption("editable", void 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "lightMapMult2", 0, {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true
        });
        meshBasicBuilder1.params.get("lightMapMult2").options.setOption("editable", void 0);
        meshBasicBuilder1.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "lightMapMult3", 0, {
          spare: true,
          computeOnDirty: true,
          cook: false,
          dependentOnFoundNode: true
        });
        meshBasicBuilder1.params.get("lightMapMult3").options.setOption("editable", void 0);
        meshBasicBuilder1.params.postCreateSpareParams();
        meshBasicBuilder1.params.runOnSceneLoadHooks();
        return meshBasicBuilder1;
      }
      create_meshBasicBuilder1(MAT);
      MAT.uiData.setComment(
        "Inside here is the material applied to the cornell box object.\nThis is a key component to this scene."
      );
      MAT.uiData.setPosition(-250, 150);
      MAT.params.postCreateSpareParams();
      MAT.params.runOnSceneLoadHooks();
      return MAT;
    }
    function create_fileOBJ1(cornell_box2) {
      var fileOBJ12 = cornell_box2.createNode("fileOBJ");
      fileOBJ12.setName("fileOBJ1");
      fileOBJ12.uiData.setPosition(0, -100);
      fileOBJ12.p.url.set(
        "https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/models/cornell_box/cornell_box.obj?t=1"
      );
      fileOBJ12.params.postCreateSpareParams();
      fileOBJ12.params.runOnSceneLoadHooks();
      return fileOBJ12;
    }
    function create_material1(cornell_box2) {
      var material12 = cornell_box2.createNode("material");
      material12.setName("material1");
      material12.uiData.setPosition(0, 150);
      material12.flags.display.set(true);
      material12.p.group.set("*");
      material12.p.material.set("../MAT/meshBasicBuilder1");
      material12.params.postCreateSpareParams();
      material12.params.runOnSceneLoadHooks();
      return material12;
    }
    create_COP(cornell_box);
    create_MAT(cornell_box);
    var fileOBJ1 = create_fileOBJ1(cornell_box);
    var material1 = create_material1(cornell_box);
    material1.setInput(0, fileOBJ1);
    cornell_box.uiData.setComment("Dive inside this node to see how the material for the cornell box is created");
    cornell_box.uiData.setPosition(-50, -100);
    cornell_box.flags.display.set(true);
    cornell_box.params.postCreateSpareParams();
    cornell_box.params.runOnSceneLoadHooks();
    return cornell_box;
  }
  function create_text_hint(parentNode) {
    var text_hint = parentNode.createNode("geo");
    text_hint.setName("text_hint");
    function create_MAT(text_hint2) {
      var MAT = text_hint2.createNode("materialsNetwork");
      MAT.setName("MAT");
      function create_meshBasic1(MAT2) {
        var meshBasic1 = MAT2.createNode("meshBasic");
        meshBasic1.setName("meshBasic1");
        meshBasic1.uiData.setPosition(-150, 100);
        meshBasic1.params.postCreateSpareParams();
        meshBasic1.params.runOnSceneLoadHooks();
        return meshBasic1;
      }
      create_meshBasic1(MAT);
      MAT.uiData.setPosition(-350, 150);
      MAT.params.postCreateSpareParams();
      MAT.params.runOnSceneLoadHooks();
      return MAT;
    }
    function create_material1(text_hint2) {
      var material12 = text_hint2.createNode("material");
      material12.setName("material1");
      material12.uiData.setPosition(-150, 150);
      material12.flags.display.set(true);
      material12.p.material.set("../MAT/meshBasic1");
      material12.params.postCreateSpareParams();
      material12.params.runOnSceneLoadHooks();
      return material12;
    }
    function create_text1(text_hint2) {
      var text12 = text_hint2.createNode("text");
      text12.setName("text1");
      text12.uiData.setPosition(-150, -150);
      text12.p.font.set(
        "https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/fonts/SourceCodePro-Black.ttf"
      );
      text12.p.text.set("move your cursor\nabove the blue dots");
      text12.p.type.set(1);
      text12.p.size.set(0.060000000000000005);
      text12.p.justifyMode.set(2);
      text12.params.postCreateSpareParams();
      text12.params.runOnSceneLoadHooks();
      return text12;
    }
    function create_transform1(text_hint2) {
      var transform12 = text_hint2.createNode("transform");
      transform12.setName("transform1");
      transform12.uiData.setPosition(-150, 50);
      transform12.p.t.set([0.48, 1.13757101438631, 0]);
      transform12.p.r.set([0, 90, 0]);
      transform12.params.postCreateSpareParams();
      transform12.params.runOnSceneLoadHooks();
      return transform12;
    }
    create_MAT(text_hint);
    var material1 = create_material1(text_hint);
    var text1 = create_text1(text_hint);
    var transform1 = create_transform1(text_hint);
    material1.setInput(0, transform1);
    transform1.setInput(0, text1);
    text_hint.uiData.setPosition(-50, -500);
    text_hint.flags.display.set(true);
    text_hint.params.postCreateSpareParams();
    text_hint.params.runOnSceneLoadHooks();
    return text_hint;
  }
  var perspectiveCamera1 = create_perspectiveCamera1(root);
  create_dummy_lights(root);
  create_cornell_box(root);
  create_text_hint(root);
  scene.setFrame(0);
  scene.play();
  return {
    scene,
    cameraPath: perspectiveCamera1.path(),
    focusedNodes: [],
    // no node is focused here, so that we don't have the transform gizmo appearing
    autoLayout: false
  };
}


/***/ })

}])
//# sourceMappingURL=src_engine_examples_examples_advanced_CornellBoxLightMaps_ts.27648276081172367cba.js.map