(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_editor_components_widgets_monaco_MonacoEditorWrapper_vue"],{

/***/ 61596:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20559);
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93476);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".monaco-editor-container{min-height:1000px}", "",{"version":3,"sources":["webpack://./../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue"],"names":[],"mappings":"AAEA,yBACC,iBAAA","sourcesContent":["\n\n.monaco-editor-container\n\tmin-height: 1000px\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 29993:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u": function() { return /* binding */ MonacoEditorEnvironment; }
/* harmony export */ });

class MonacoEditorEnvironment {
  static setup() {
    const monaco_setup_element = document.getElementById("monaco-setup");
    const json_url = (monaco_setup_element == null ? void 0 : monaco_setup_element.dataset["json"]) || "/editor/json.worker.js";
    const css_url = (monaco_setup_element == null ? void 0 : monaco_setup_element.dataset["css"]) || "/editor/css.worker.js";
    const html_url = (monaco_setup_element == null ? void 0 : monaco_setup_element.dataset["html"]) || "/editor/html.worker.js";
    const typescript_url = (monaco_setup_element == null ? void 0 : monaco_setup_element.dataset["typescript"]) || "/editor/ts.worker.js";
    const urls = {
      json: json_url,
      css: css_url,
      html: html_url,
      typescript: typescript_url,
      javascript: typescript_url
    };
    const default_url = (monaco_setup_element == null ? void 0 : monaco_setup_element.dataset["editor"]) || "/editor/editor.worker.js";
    self.MonacoEnvironment = {
      getWorkerUrl: function(moduleId, label) {
        const url = urls[label] || default_url;
        return url;
      }
    };
  }
}


/***/ }),

/***/ 77336:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "t": function() { return /* binding */ monacoEditorAddHotkeys; }
/* harmony export */ });
/* harmony import */ var monaco_editor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99391);


function monacoEditorAddHotkeys(options) {
  const { monacoEditor, readonly, callbacks } = options;
  monacoEditor.addCommand(monaco_editor__WEBPACK_IMPORTED_MODULE_0__.KeyMod.CtrlCmd | monaco_editor__WEBPACK_IMPORTED_MODULE_0__.KeyCode.KeyB, callbacks.togglePanelToFullScreen);
  if (!readonly) {
    if (callbacks.saveParam) {
      monacoEditor.addCommand(monaco_editor__WEBPACK_IMPORTED_MODULE_0__.KeyMod.CtrlCmd | monaco_editor__WEBPACK_IMPORTED_MODULE_0__.KeyCode.Enter, callbacks.saveParam);
    }
    if (callbacks.saveParamAndScene) {
      monacoEditor.addCommand(monaco_editor__WEBPACK_IMPORTED_MODULE_0__.KeyMod.CtrlCmd | monaco_editor__WEBPACK_IMPORTED_MODULE_0__.KeyCode.KeyS, callbacks.saveParamAndScene);
    }
  }
}


/***/ }),

/***/ 55116:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "x": function() { return /* binding */ monacoEditorSetupForGLSL; }
/* harmony export */ });
/* unused harmony export language */
/* harmony import */ var _polygonjs_polygonjs_src_engine_params_utils_OptionsController__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94051);
/* harmony import */ var monaco_editor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99391);
/* harmony import */ var _MonacoEditorCommon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33015);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
const conf = {
  comments: {
    lineComment: "//",
    blockComment: ["/*", "*/"]
  },
  brackets: [
    ["{", "}"],
    ["[", "]"],
    ["(", ")"]
  ],
  autoClosingPairs: [
    { open: "[", close: "]" },
    { open: "{", close: "}" },
    { open: "(", close: ")" },
    { open: "'", close: "'", notIn: ["string", "comment"] },
    { open: '"', close: '"', notIn: ["string"] }
  ],
  surroundingPairs: [
    { open: "{", close: "}" },
    { open: "[", close: "]" },
    { open: "(", close: ")" },
    { open: '"', close: '"' },
    { open: "'", close: "'" }
  ]
};
const keywords = [
  "const",
  "uniform",
  "break",
  "continue",
  "do",
  "for",
  "while",
  "if",
  "else",
  "switch",
  "case",
  "in",
  "out",
  "inout",
  "true",
  "false",
  "invariant",
  "discard",
  "return",
  "sampler2D",
  "samplerCube",
  "sampler3D",
  "struct",
  "radians",
  "degrees",
  "sin",
  "cos",
  "tan",
  "asin",
  "acos",
  "atan",
  "pow",
  "sinh",
  "cosh",
  "tanh",
  "asinh",
  "acosh",
  "atanh",
  "exp",
  "log",
  "exp2",
  "log2",
  "sqrt",
  "inversesqrt",
  "abs",
  "sign",
  "floor",
  "ceil",
  "round",
  "roundEven",
  "trunc",
  "fract",
  "mod",
  "modf",
  "min",
  "max",
  "clamp",
  "mix",
  "step",
  "smoothstep",
  "length",
  "distance",
  "dot",
  "cross ",
  "determinant",
  "inverse",
  "normalize",
  "faceforward",
  "reflect",
  "refract",
  "matrixCompMult",
  "outerProduct",
  "transpose",
  "lessThan ",
  "lessThanEqual",
  "greaterThan",
  "greaterThanEqual",
  "equal",
  "notEqual",
  "any",
  "all",
  "not",
  "packUnorm2x16",
  "unpackUnorm2x16",
  "packSnorm2x16",
  "unpackSnorm2x16",
  "packHalf2x16",
  "unpackHalf2x16",
  "dFdx",
  "dFdy",
  "fwidth",
  "textureSize",
  "texture",
  "textureProj",
  "textureLod",
  "textureGrad",
  "texelFetch",
  "texelFetchOffset",
  "textureProjLod",
  "textureLodOffset",
  "textureGradOffset",
  "textureProjLodOffset",
  "textureProjGrad",
  "intBitsToFloat",
  "uintBitsToFloat",
  "floatBitsToInt",
  "floatBitsToUint",
  "isnan",
  "isinf",
  "vec2",
  "vec3",
  "vec4",
  "ivec2",
  "ivec3",
  "ivec4",
  "uvec2",
  "uvec3",
  "uvec4",
  "bvec2",
  "bvec3",
  "bvec4",
  "mat2",
  "mat3",
  "mat2x2",
  "mat2x3",
  "mat2x4",
  "mat3x2",
  "mat3x3",
  "mat3x4",
  "mat4x2",
  "mat4x3",
  "mat4x4",
  "mat4",
  "float",
  "int",
  "uint",
  "void",
  "bool"
];
const language = {
  tokenPostfix: ".glsl",
  // Set defaultToken to invalid to see what you do not tokenize yet
  defaultToken: "invalid",
  keywords,
  operators: [
    "=",
    ">",
    "<",
    "!",
    "~",
    "?",
    ":",
    "==",
    "<=",
    ">=",
    "!=",
    "&&",
    "||",
    "++",
    "--",
    "+",
    "-",
    "*",
    "/",
    "&",
    "|",
    "^",
    "%",
    "<<",
    ">>",
    ">>>",
    "+=",
    "-=",
    "*=",
    "/=",
    "&=",
    "|=",
    "^=",
    "%=",
    "<<=",
    ">>=",
    ">>>="
  ],
  symbols: /[=><!~?:&|+\-*\/\^%]+/,
  escapes: /\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,
  integersuffix: /([uU](ll|LL|l|L)|(ll|LL|l|L)?[uU]?)/,
  floatsuffix: /[fFlL]?/,
  encoding: /u|u8|U|L/,
  tokenizer: {
    root: [
      // identifiers and keywords
      [
        /[a-zA-Z_]\w*/,
        {
          cases: {
            "@keywords": { token: "keyword.$0" },
            "@default": "identifier"
          }
        }
      ],
      // Preprocessor directive (#define)
      [/^\s*#\s*\w+/, "keyword.directive"],
      // whitespace
      { include: "@whitespace" },
      // delimiters and operators
      [/[{}()\[\]]/, "@brackets"],
      [
        /@symbols/,
        {
          cases: {
            "@operators": "operator",
            "@default": ""
          }
        }
      ],
      // numbers
      [/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/, "number.float"],
      [/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/, "number.float"],
      [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, "number.hex"],
      [/0[0-7']*[0-7](@integersuffix)/, "number.octal"],
      [/0[bB][0-1']*[0-1](@integersuffix)/, "number.binary"],
      [/\d[\d']*\d(@integersuffix)/, "number"],
      [/\d(@integersuffix)/, "number"],
      // delimiter: after number because of .\d floats
      [/[;,.]/, "delimiter"]
    ],
    comment: [
      [/[^\/*]+/, "comment"],
      [/\/\*/, "comment", "@push"],
      ["\\*/", "comment", "@pop"],
      [/[\/*]/, "comment"]
    ],
    // Does it have strings?
    string: [
      [/[^\\"]+/, "string"],
      [/@escapes/, "string.escape"],
      [/\\./, "string.escape.invalid"],
      [
        /"/,
        {
          token: "string.quote",
          bracket: "@close",
          next: "@pop"
        }
      ]
    ],
    whitespace: [
      [/[ \t\r\n]+/, "white"],
      [/\/\*/, "comment", "@comment"],
      [/\/\/.*$/, "comment"]
    ]
  }
};



function monacoEditorSetupForGLSL(rawInput, element, options) {
  monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.register({
    id: "glsl"
    // extensions?: string[];
    // filenames?: string[];
    // filenamePatterns?: string[];
    // firstLine?: string;
    // aliases?: string[];
    // mimetypes?: string[];
    // configuration?: Uri;
  });
  monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.setLanguageConfiguration("glsl", conf);
  monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.setMonarchTokensProvider("glsl", language);
  const editor = monaco_editor__WEBPACK_IMPORTED_MODULE_0__.editor.create(element, __spreadValues({
    model: (0,_MonacoEditorCommon__WEBPACK_IMPORTED_MODULE_1__/* .monacoEditorCreateModel */ .Ih)(rawInput, _polygonjs_polygonjs_src_engine_params_utils_OptionsController__WEBPACK_IMPORTED_MODULE_2__/* .StringParamLanguage.GLSL */ .qs.GLSL, options.uniqueId),
    value: rawInput,
    language: _polygonjs_polygonjs_src_engine_params_utils_OptionsController__WEBPACK_IMPORTED_MODULE_2__/* .StringParamLanguage.GLSL */ .qs.GLSL,
    readOnly: options.readOnly
  }, _MonacoEditorCommon__WEBPACK_IMPORTED_MODULE_1__/* .MonacoCommonOptions */ .mD));
  return editor;
}


/***/ }),

/***/ 33015:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ih": function() { return /* binding */ monacoEditorCreateModel; },
/* harmony export */   "JU": function() { return /* binding */ updateMonacoEditorModel; },
/* harmony export */   "mD": function() { return /* binding */ MonacoCommonOptions; }
/* harmony export */ });
/* harmony import */ var _polygonjs_polygonjs_src_core_Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19037);
/* harmony import */ var monaco_editor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99391);



const MonacoCommonOptions = {
  renderWhitespace: "boundary",
  theme: "vs-dark",
  // 'hc-black', // vs-dark // not sure why only the minimap gets the theme
  insertSpaces: false,
  tabSize: 4,
  automaticLayout: true
  // auto resize (https://stackoverflow.com/questions/47017753/monaco-editor-dynamically-resizable)
};
function updateMonacoEditorModel(content, model) {
  if (model) {
    if ((0,_polygonjs_polygonjs_src_core_Type__WEBPACK_IMPORTED_MODULE_1__/* .isString */ .HD)(content)) {
      model.setValue(content);
    }
  } else {
    console.warn("no model to update");
  }
}
function monacoEditorCreateModel(rawInput, language, editorId) {
  const uri = monaco_editor__WEBPACK_IMPORTED_MODULE_0__.Uri.parse(`file:///${language}-${editorId}.tsx`);
  let model = monaco_editor__WEBPACK_IMPORTED_MODULE_0__.editor.getModel(uri);
  if (!model) {
    model = monaco_editor__WEBPACK_IMPORTED_MODULE_0__.editor.createModel(rawInput, language, uri);
  } else {
    model.setValue(rawInput);
  }
  return model;
}


/***/ }),

/***/ 1726:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "f": function() { return /* binding */ MonacoTypescriptController; }
/* harmony export */ });
/* harmony import */ var monaco_editor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99391);
/* harmony import */ var _self_contained_FilesRegister__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91282);
/* harmony import */ var _polygonjs_polygonjs_src_core_String__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40065);
/* harmony import */ var _history_commands_ParamSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(42362);
/* harmony import */ var _MonacoEditorCommon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(33015);
/* harmony import */ var _polygonjs_polygonjs_src_engine_params_utils_OptionsController__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94051);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};






const DEBUG_EXTRA_LIB = false;
const _MonacoTypescriptController = class {
  constructor() {
  }
  static updateModel(content) {
    (0,_MonacoEditorCommon__WEBPACK_IMPORTED_MODULE_3__/* .updateMonacoEditorModel */ .JU)(content, this.model);
  }
  static saveParam(param, multiCmd) {
    return __async(this, null, function* () {
      const javascriptParam = param.node.params.get("codeJavascript");
      if (javascriptParam && this.model) {
        const transpiled = (yield _MonacoTypescriptController.transpile(this.model)) || "";
        const cmd = new _history_commands_ParamSet__WEBPACK_IMPORTED_MODULE_2__/* .ParamSetCommand */ .O(javascriptParam, transpiled);
        multiCmd.pushCommand(cmd);
      }
    });
  }
  static addLibs() {
    return __async(this, null, function* () {
      if (this._libsAdded) {
        return;
      }
      this._libsAdded = true;
    });
  }
  static setupForTypescriptWithoutNode(rawInput, element, options, param) {
    return __async(this, null, function* () {
      _MonacoTypescriptController.setCompilerOptions();
      if (DEBUG_EXTRA_LIB) {
        debugExtraLib();
        return;
      }
      yield _MonacoTypescriptController.addLibs();
      if (param) {
        yield _MonacoTypescriptController.addTypesForNode(param.node);
      }
      this.model = (0,_MonacoEditorCommon__WEBPACK_IMPORTED_MODULE_3__/* .monacoEditorCreateModel */ .Ih)(rawInput, _polygonjs_polygonjs_src_engine_params_utils_OptionsController__WEBPACK_IMPORTED_MODULE_4__/* .StringParamLanguage.TYPESCRIPT */ .qs.TYPESCRIPT, options.uniqueId);
      const editor = monaco_editor__WEBPACK_IMPORTED_MODULE_0__.editor.create(element, __spreadValues({
        model: this.model,
        value: rawInput,
        readOnly: options.readOnly
      }, _MonacoEditorCommon__WEBPACK_IMPORTED_MODULE_3__/* .MonacoCommonOptions */ .mD));
      return editor;
    });
  }
  static setupForTypescript(param, rawInput, element, options) {
    return __async(this, null, function* () {
      return this.setupForTypescriptWithoutNode(rawInput, element, options, param);
    });
  }
  static addTypesForNode(node) {
    return __async(this, null, function* () {
      yield _self_contained_FilesRegister__WEBPACK_IMPORTED_MODULE_1__.FilesRegister.init();
      let content = yield _self_contained_FilesRegister__WEBPACK_IMPORTED_MODULE_1__.FilesRegister.polygonjsBundledTypes();
      content = this._injectNodeSpareParamsTypes(content, node);
      const uri = "ts:filename/facts2.d.ts";
      monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.typescript.typescriptDefaults.addExtraLib(content, uri);
    });
  }
  static _injectNodeSpareParamsTypes(content, node) {
    const spareParams = node.params.spare.filter((p) => p.parentParam() == null);
    const linesToAdd = spareParams.map((p) => `${p.name()}: ParamTemplate<ParamType.${p.type().toUpperCase()}>;`);
    const lineStart = `declare class Code${_polygonjs_polygonjs_src_core_String__WEBPACK_IMPORTED_MODULE_5__/* .CoreString.titleize */ .YE.titleize(
      node.context()
    )}ParamsConfig extends NodeParamsConfig {`;
    const replacement = `${lineStart}
${linesToAdd.join("\n")}`;
    content = content.replace(lineStart, replacement);
    return content;
  }
  static setCompilerOptions() {
    if (this._compilerOptionsSet) {
      return;
    }
    this._compilerOptionsSet = true;
    monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.typescript.typescriptDefaults.setDiagnosticsOptions({
      noSemanticValidation: false,
      noSyntaxValidation: false
      // noSuggestionDiagnostics
    });
    monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.typescript.typescriptDefaults.setCompilerOptions({
      target: monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.typescript.ScriptTarget.ES2020,
      // allowNonTsExtensions: true,
      moduleResolution: monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.typescript.ModuleResolutionKind.NodeJs,
      // module: monaco.languages.typescript.ModuleKind.CommonJS,
      // noEmit: true,
      typeRoots: ["node_modules/@types"]
      //
      // allowNonTsExtensions: true,
      // strictNullChecks: true,
    });
  }
  static transpile(model) {
    return __async(this, null, function* () {
      const worker = yield monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.typescript.getTypeScriptWorker();
      const client = yield worker(model.uri);
      const result = yield client.getEmitOutput(model.uri.toString());
      return result.outputFiles[0].text;
    });
  }
};
let MonacoTypescriptController = _MonacoTypescriptController;
MonacoTypescriptController._libsAdded = false;
MonacoTypescriptController.model = null;
MonacoTypescriptController._compilerOptionsSet = false;
let _started = false;
function debugExtraLib() {
  return __async(this, null, function* () {
    if (_started) {
      return;
    }
    _started = true;
    const extraLibs = {
      "polygonjs_bundled_types.d.ts": yield _self_contained_FilesRegister__WEBPACK_IMPORTED_MODULE_1__.FilesRegister.polygonjsBundledTypes()
    };
    const testContent = `
	export class CodeJsProcessor extends BaseCodeJsProcessor {}
	`;
    for (const libName of Object.keys(extraLibs)) {
      const content =  true ? extraLibs[libName] : 0;
      const libModel = monaco_editor__WEBPACK_IMPORTED_MODULE_0__.editor.createModel(content, "typescript", monaco_editor__WEBPACK_IMPORTED_MODULE_0__.Uri.file(libName));
      setTimeout(() => {
        validateCode(libModel);
      }, 500);
    }
    function validateCode(model) {
      monaco_editor__WEBPACK_IMPORTED_MODULE_0__.languages.typescript.getTypeScriptWorker().then((worker) => {
        worker(model.uri).then((client) => {
          client.getSuggestionDiagnostics(model.uri.toString()).then((diagnostics) => {
            console.log("getSuggestionDiagnostics:", diagnostics);
          });
          client.getCompilerOptionsDiagnostics(model.uri.toString()).then((diagnostics) => {
            console.log("getCompilerOptionsDiagnostics:", diagnostics);
          });
          client.getSyntacticDiagnostics(model.uri.toString()).then((diagnostics) => {
            console.log("Syntax errors:", diagnostics);
          });
          client.getSemanticDiagnostics(model.uri.toString()).then((diagnostics) => {
            console.log("Semantic errors:", diagnostics);
          });
        });
      });
    }
  });
}


/***/ }),

/***/ 82826:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ MonacoEditorWrapper; }
});

// EXTERNAL MODULE: ../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js
var runtime_core_esm_bundler = __webpack_require__(88917);
// EXTERNAL MODULE: ../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js + 1 modules
var runtime_dom_esm_bundler = __webpack_require__(90996);
;// CONCATENATED MODULE: ../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?vue&type=template&id=1a1c70e8&ts=true

const _hoisted_1 = { class: "MonacoEditorWrapper" };
const _hoisted_2 = {
  class: "monaco-editor-container",
  ref: "editorElement"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)("div", _hoisted_1, [
    (0,runtime_core_esm_bundler/* createElementVNode */._)(
      "div",
      {
        class: "monaco-editor-events-catcher",
        onKeypress: _cache[0] || (_cache[0] = (0,runtime_dom_esm_bundler.withModifiers)(() => {
        }, ["stop"])),
        onKeyup: _cache[1] || (_cache[1] = (0,runtime_dom_esm_bundler.withModifiers)(() => {
        }, ["stop"])),
        onKeydown: _cache[2] || (_cache[2] = (0,runtime_dom_esm_bundler.withModifiers)(() => {
        }, ["stop"]))
      },
      [
        (0,runtime_core_esm_bundler/* createElementVNode */._)(
          "div",
          _hoisted_2,
          null,
          512
          /* NEED_PATCH */
        )
      ],
      32
      /* HYDRATE_EVENTS */
    )
  ]);
}

;// CONCATENATED MODULE: ../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?vue&type=template&id=1a1c70e8&ts=true

// EXTERNAL MODULE: include-loader!../node_modules/monaco-editor/esm/vs/editor/editor.api.js + 690 modules
var editor_api = __webpack_require__(99391);
// EXTERNAL MODULE: ../src/editor/components/widgets/monaco/MonacoEditorEnvironment.ts
var MonacoEditorEnvironment = __webpack_require__(29993);
// EXTERNAL MODULE: ../src/editor/history/commands/ParamSet.ts
var ParamSet = __webpack_require__(42362);
// EXTERNAL MODULE: ../src/editor/store/controllers/StoreController.ts + 44 modules
var StoreController = __webpack_require__(72555);
// EXTERNAL MODULE: ../src/editor/components/panels/params/components/fields/mixins/FieldCommon.ts
var FieldCommon = __webpack_require__(9491);
// EXTERNAL MODULE: ../src/editor/history/commands/Multiple.ts
var Multiple = __webpack_require__(71117);
// EXTERNAL MODULE: ../src/editor/components/widgets/monaco/languages/TypescriptController.ts
var TypescriptController = __webpack_require__(1726);
// EXTERNAL MODULE: ../src/editor/components/widgets/monaco/languages/MonacoEditorCommon.ts
var MonacoEditorCommon = __webpack_require__(33015);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/engine/params/utils/OptionsController.ts
var OptionsController = __webpack_require__(94051);
// EXTERNAL MODULE: ../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js + 1 modules
var reactivity_esm_bundler = __webpack_require__(61334);
// EXTERNAL MODULE: ../src/editor/Editor.ts + 11 modules
var Editor = __webpack_require__(90192);
// EXTERNAL MODULE: ../@polygonjs/polygonjs/src/core/Type.ts
var Type = __webpack_require__(19037);
;// CONCATENATED MODULE: ../src/editor/components/widgets/monaco/languages/CSS.ts

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};



function monacoEditorSetupForCSS(rawInput, element, options) {
  return __async(this, null, function* () {
    const editor = editor_api.editor.create(element, __spreadValues({
      model: (0,MonacoEditorCommon/* monacoEditorCreateModel */.Ih)(rawInput, OptionsController/* StringParamLanguage.CSS */.qs.CSS, options.uniqueId),
      value: rawInput,
      language: OptionsController/* StringParamLanguage.CSS */.qs.CSS
    }, MonacoEditorCommon/* MonacoCommonOptions */.mD));
    return editor;
  });
}

;// CONCATENATED MODULE: ../src/editor/components/widgets/monaco/languages/HTML.ts

var HTML_defProp = Object.defineProperty;
var HTML_getOwnPropSymbols = Object.getOwnPropertySymbols;
var HTML_hasOwnProp = Object.prototype.hasOwnProperty;
var HTML_propIsEnum = Object.prototype.propertyIsEnumerable;
var HTML_defNormalProp = (obj, key, value) => key in obj ? HTML_defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var HTML_spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (HTML_hasOwnProp.call(b, prop))
      HTML_defNormalProp(a, prop, b[prop]);
  if (HTML_getOwnPropSymbols)
    for (var prop of HTML_getOwnPropSymbols(b)) {
      if (HTML_propIsEnum.call(b, prop))
        HTML_defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var HTML_async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};



function monacoEditorSetupForHTML(rawInput, element, options) {
  return HTML_async(this, null, function* () {
    const editor = editor_api.editor.create(element, HTML_spreadValues({
      model: (0,MonacoEditorCommon/* monacoEditorCreateModel */.Ih)(rawInput, OptionsController/* StringParamLanguage.HTML */.qs.HTML, options.uniqueId),
      value: rawInput,
      language: OptionsController/* StringParamLanguage.HTML */.qs.HTML
    }, MonacoEditorCommon/* MonacoCommonOptions */.mD));
    return editor;
  });
}

;// CONCATENATED MODULE: ../src/editor/components/widgets/monaco/languages/JSON.ts

var JSON_defProp = Object.defineProperty;
var JSON_getOwnPropSymbols = Object.getOwnPropertySymbols;
var JSON_hasOwnProp = Object.prototype.hasOwnProperty;
var JSON_propIsEnum = Object.prototype.propertyIsEnumerable;
var JSON_defNormalProp = (obj, key, value) => key in obj ? JSON_defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var JSON_spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (JSON_hasOwnProp.call(b, prop))
      JSON_defNormalProp(a, prop, b[prop]);
  if (JSON_getOwnPropSymbols)
    for (var prop of JSON_getOwnPropSymbols(b)) {
      if (JSON_propIsEnum.call(b, prop))
        JSON_defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var JSON_async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};



function monacoEditorSetupForJSON(rawInput, element, options) {
  return JSON_async(this, null, function* () {
    const editor = editor_api.editor.create(element, JSON_spreadValues({
      model: (0,MonacoEditorCommon/* monacoEditorCreateModel */.Ih)(rawInput, OptionsController/* StringParamLanguage.JSON */.qs.JSON, options.uniqueId),
      value: rawInput,
      language: OptionsController/* StringParamLanguage.JSON */.qs.JSON
    }, MonacoEditorCommon/* MonacoCommonOptions */.mD));
    return editor;
  });
}

// EXTERNAL MODULE: ../src/editor/components/widgets/monaco/languages/GLSL.ts
var GLSL = __webpack_require__(55116);
// EXTERNAL MODULE: ../src/editor/components/widgets/monaco/MonacoHotKeys.ts
var MonacoHotKeys = __webpack_require__(77336);
;// CONCATENATED MODULE: ../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?vue&type=script&lang=ts
var MonacoEditorWrappervue_type_script_lang_ts_defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var MonacoEditorWrappervue_type_script_lang_ts_getOwnPropSymbols = Object.getOwnPropertySymbols;
var MonacoEditorWrappervue_type_script_lang_ts_hasOwnProp = Object.prototype.hasOwnProperty;
var MonacoEditorWrappervue_type_script_lang_ts_propIsEnum = Object.prototype.propertyIsEnumerable;
var MonacoEditorWrappervue_type_script_lang_ts_defNormalProp = (obj, key, value) => key in obj ? MonacoEditorWrappervue_type_script_lang_ts_defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var MonacoEditorWrappervue_type_script_lang_ts_spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (MonacoEditorWrappervue_type_script_lang_ts_hasOwnProp.call(b, prop))
      MonacoEditorWrappervue_type_script_lang_ts_defNormalProp(a, prop, b[prop]);
  if (MonacoEditorWrappervue_type_script_lang_ts_getOwnPropSymbols)
    for (var prop of MonacoEditorWrappervue_type_script_lang_ts_getOwnPropSymbols(b)) {
      if (MonacoEditorWrappervue_type_script_lang_ts_propIsEnum.call(b, prop))
        MonacoEditorWrappervue_type_script_lang_ts_defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var MonacoEditorWrappervue_type_script_lang_ts_async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

















/* harmony default export */ var MonacoEditorWrappervue_type_script_lang_ts = ((0,runtime_core_esm_bundler/* defineComponent */.aZ)({
  emit: ["toggleFullScreen"],
  name: "monaco-editor-wrapper",
  props: __spreadProps(MonacoEditorWrappervue_type_script_lang_ts_spreadValues({}, FieldCommon/* SetupFieldCommonProps */.H), {
    uniqueId: {
      type: String,
      required: true
    }
  }),
  setup(props, context) {
    const param = StoreController/* StoreController.engine.param */.F.engine.param(props.json_param.graph_node_id);
    const raw_input = (0,runtime_core_esm_bundler/* computed */.Fl)(() => props.json_param.raw_input);
    const editorElement = (0,reactivity_esm_bundler/* ref */.iH)(null);
    let monacoEditor;
    (0,runtime_core_esm_bundler/* onMounted */.bv)(() => MonacoEditorWrappervue_type_script_lang_ts_async(this, null, function* () {
      yield _createEditor();
    }));
    (0,runtime_core_esm_bundler/* onBeforeUnmount */.Jd)(() => {
      if (monacoEditor) {
        monacoEditor.dispose();
        window.testSuiteMonacoEditor = void 0;
      }
    });
    (0,runtime_core_esm_bundler/* watch */.YP)(raw_input, () => {
      if (monacoEditor && raw_input.value != null && Type/* CoreType.isString */.MR.isString(raw_input.value)) {
        const model = monacoEditor.getModel();
        (0,MonacoEditorCommon/* updateMonacoEditorModel */.JU)(raw_input.value, model);
      }
    });
    function _createEditor() {
      return MonacoEditorWrappervue_type_script_lang_ts_async(this, null, function* () {
        if (!editor_api.editor || !editorElement.value) {
          console.warn("editor or container not available");
          return;
        }
        if (!Type/* CoreType.isString */.MR.isString(raw_input.value)) {
          console.warn("value is not a string", raw_input.value);
          return;
        }
        MonacoEditorEnvironment/* MonacoEditorEnvironment.setup */.u.setup();
        const paramLanguage = param.options.language();
        switch (paramLanguage) {
          case OptionsController/* StringParamLanguage.CSS */.qs.CSS: {
            monacoEditor = yield monacoEditorSetupForCSS(raw_input.value, editorElement.value, {
              uniqueId: props.uniqueId
            });
            break;
          }
          case OptionsController/* StringParamLanguage.HTML */.qs.HTML: {
            monacoEditor = yield monacoEditorSetupForHTML(raw_input.value, editorElement.value, {
              uniqueId: props.uniqueId
            });
            break;
          }
          case OptionsController/* StringParamLanguage.JSON */.qs.JSON: {
            monacoEditor = yield monacoEditorSetupForJSON(raw_input.value, editorElement.value, {
              uniqueId: props.uniqueId
            });
            break;
          }
          case OptionsController/* StringParamLanguage.TYPESCRIPT */.qs.TYPESCRIPT: {
            monacoEditor = yield TypescriptController/* MonacoTypescriptController.setupForTypescript */.f.setupForTypescript(
              param,
              raw_input.value,
              editorElement.value,
              { uniqueId: props.uniqueId }
            );
            break;
          }
          case OptionsController/* StringParamLanguage.GLSL */.qs.GLSL: {
            monacoEditor = yield (0,GLSL/* monacoEditorSetupForGLSL */.x)(raw_input.value, editorElement.value, {
              readOnly: false,
              uniqueId: props.uniqueId
            });
            break;
          }
        }
        if (!monacoEditor) {
          console.warn("editor not created");
          return;
        }
        (0,MonacoHotKeys/* monacoEditorAddHotkeys */.t)({
          monacoEditor,
          readonly: false,
          callbacks: {
            togglePanelToFullScreen: toggleFullScreen,
            saveParam: _saveParam,
            saveParamAndScene: _saveParamAndScene
          }
        });
        monacoEditor.onDidBlurEditorText(() => _saveParam());
        window.testSuiteMonacoEditor = monacoEditor;
      });
    }
    function toggleFullScreen() {
      context.emit("toggleFullScreen");
    }
    function _saveParam() {
      return MonacoEditorWrappervue_type_script_lang_ts_async(this, null, function* () {
        if (monacoEditor) {
          const newCode = monacoEditor.getValue();
          const multiCmd = new Multiple/* MultipleCommand */.Y(StoreController/* StoreController.scene */.F.scene);
          const codeCmd = new ParamSet/* ParamSetCommand */.O(param, newCode);
          multiCmd.pushCommand(codeCmd);
          const paramLanguage = param.options.language();
          if (paramLanguage == OptionsController/* StringParamLanguage.TYPESCRIPT */.qs.TYPESCRIPT) {
            yield TypescriptController/* MonacoTypescriptController.saveParam */.f.saveParam(param, multiCmd);
          }
          yield Editor/* Editor.instance */.M.instance().pushCommand(multiCmd);
        }
      });
    }
    function _saveParamAndScene() {
      return MonacoEditorWrappervue_type_script_lang_ts_async(this, null, function* () {
        yield _saveParam();
        Editor/* Editor.instance */.M.instance().save();
      });
    }
    return {
      // CSS_URL,
      editorElement
    };
  }
}));

;// CONCATENATED MODULE: ../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?vue&type=script&lang=ts
 
// EXTERNAL MODULE: ../node_modules/vue-style-loader/index.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-7.use[2]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?vue&type=style&index=0&id=1a1c70e8&lang=sass
var MonacoEditorWrappervue_type_style_index_0_id_1a1c70e8_lang_sass = __webpack_require__(7072);
;// CONCATENATED MODULE: ../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue?vue&type=style&index=0&id=1a1c70e8&lang=sass

// EXTERNAL MODULE: ../node_modules/vue-loader/dist/exportHelper.js
var exportHelper = __webpack_require__(6959);
;// CONCATENATED MODULE: ../src/editor/components/widgets/monaco/MonacoEditorWrapper.vue




;


const __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(MonacoEditorWrappervue_type_script_lang_ts, [['render',render]])

/* harmony default export */ var MonacoEditorWrapper = (__exports__);

/***/ }),

/***/ 7072:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(61596);
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.id, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = (__webpack_require__(49441)/* ["default"] */ .Z)
var update = add("40a8e275", content, false, {});
// Hot Module Replacement
if(false) {}

/***/ })

}])
//# sourceMappingURL=src_editor_components_widgets_monaco_MonacoEditorWrapper_vue.cd76b8e748508d202250.js.map