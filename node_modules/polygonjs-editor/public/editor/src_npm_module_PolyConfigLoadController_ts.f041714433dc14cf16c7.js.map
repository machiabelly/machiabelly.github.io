{"version":3,"file":"src_npm_module_PolyConfigLoadController_ts.f041714433dc14cf16c7.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACN;AACH;AAWrB,MAAM,kCAAkC;AAAA;AAAA,EAE9C,OAAO,KAAK,WAAiC;AAC5C,WAAO,IAAI,QAAQ,CAAO,YAAY;AAGrC,aAAO,qBAAqB,+EAAI;AAWhC,YAAM,kGAAgC,CAAC,oIAA8C,CAAC,EAAC,UAAS,CAAC,CAAC;AAElG,YAAM,MAAM,8HAA2C,CAAC,EAAC,UAAS,CAAC;AACnE,aAAO,4CAA4C,MAAM;AACxD,gBAAQ;AAAA,MACT;AACA,YAAM,gBAAgB,SAAS,cAAc,QAAQ;AACrD,oBAAc,aAAa,QAAQ,QAAQ;AAC3C,YAAM,OAAO;AAAA,uDACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBpD,oBAAc,OAAO;AACrB,eAAS,KAAK,YAAY,aAAa;AAAA,IAYxC,EAAC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaD","sources":["webpack:///../src/npm_module/PolyConfigLoadController.ts"],"sourcesContent":["import {NpmModuleApiController} from './NpmModuleApiController';\nimport {Poly, PolyEngine} from '../../@polygonjs/polygonjs/src/engine/Poly';\nimport {FilesRegister} from '../editor/self_contained/FilesRegister';\nimport {PolyScene} from '../../@polygonjs/polygonjs/src/engine/scene/PolyScene';\ntype ResolveCallback = (value: unknown) => void;\ntype ConfigureSceneCallback = (scene: PolyScene) => void;\ndeclare global {\n\tinterface Window {\n\t\t__POLYGONJS_POLY__: PolyEngine | undefined;\n\t\t__POLYGONJS_POLY_CONFIG_CONFIGURE_SCENE: ConfigureSceneCallback | undefined;\n\t\t__POLYGONJS_POLY_CONFIG_INSTANCE__RESOLVE: ResolveCallback | undefined;\n\t}\n}\nexport class NpmModulePolyConfigLoadController {\n\t// private static _resolve: ((t: unknown) => void) | undefined;\n\tstatic load(sceneName:string): Promise<void> {\n\t\treturn new Promise(async (resolve) => {\n\t\t\t// this._resolve = resolve;\n\t\t\t// ensure window.__POLYGONJS_POLY_INSTANCE__ is declared\n\t\t\twindow.__POLYGONJS_POLY__ = Poly;\n\n\t\t\t// the scene is unlikely to exit when requesting the polyConfig\n\t\t\t// const scene = StoreController.scene;\n\t\t\t// const sceneName = scene.name();\n\t\t\t// if (!sceneName) {\n\t\t\t// \treturn;\n\t\t\t// }\n\n\t\t\t// we register the raw config first,\n\t\t\t// as otherwise this may lead to 2 compilations happening at the same time on the server app.\n\t\t\tawait FilesRegister.registerPolyConfig(NpmModuleApiController.config.polyConfigUrlRaw({sceneName}));\n\n\t\t\tconst url = NpmModuleApiController.config.polyConfigUrl({sceneName});\n\t\t\twindow.__POLYGONJS_POLY_CONFIG_INSTANCE__RESOLVE = () => {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tconst scriptElement = document.createElement('script');\n\t\t\tscriptElement.setAttribute('type', 'module');\n\t\t\tconst text = `\n\t\t\timport {configurePolygonjs, configureScene} from '${url}';\n\t\t\tif(window.__POLYGONJS_POLY__ && window.__POLYGONJS_POLY__.wrapConfigurePolygonjs) {\n\t\t\t\twindow.__POLYGONJS_POLY__.wrapConfigurePolygonjs(async ()=>{\n\t\t\t\t\tawait configurePolygonjs(window.__POLYGONJS_POLY__)\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tconsole.warn('configurePolygonjs not run')\n\t\t\t}\n\t\t\twindow.__POLYGONJS_POLY_CONFIG_CONFIGURE_SCENE = configureScene;\n\t\t\tconst polyConfigResolve = window.__POLYGONJS_POLY_CONFIG_INSTANCE__RESOLVE;\n\t\t\twindow.__POLYGONJS_POLY_CONFIG_INSTANCE__RESOLVE = undefined;\n\t\t\twindow.__POLYGONJS_POLY__ = undefined;\n\t\t\tif(polyConfigResolve) {\n\t\t\t\tpolyConfigResolve()\n\t\t\t} else {\n\t\t\t\tconsole.warn('polyConfigResolve not run')\n\t\t\t}\n\t\t\t`;\n\t\t\tscriptElement.text = text;\n\t\t\tdocument.body.appendChild(scriptElement);\n\n\t\t\t// scriptElement.onload = ()=>{\n\t\t\t// \tresolve()\n\t\t\t// };\n\n\t\t\t// const url = NpmModuleApiController.load_poly_config_url();\n\t\t\t// const script_element = document.createElement('script');\n\t\t\t// script_element.src = url;\n\t\t\t// document.body.appendChild(script_element);\n\n\t\t\t// this.check_if_config_loaded();\n\t\t});\n\t}\n\n\t// static check_if_config_loaded() {\n\t// \tif (window.__POLYGONJS_POLY_INSTANCE__CONFIG_LOADED) {\n\t// \t\tif (this._resolve) {\n\t// \t\t\tthis._resolve(undefined);\n\t// \t\t}\n\t// \t} else {\n\t// \t\tsetTimeout(() => {\n\t// \t\t\tthis.check_if_config_loaded();\n\t// \t\t}, 100);\n\t// \t}\n\t// }\n}\n"],"names":[],"sourceRoot":""}