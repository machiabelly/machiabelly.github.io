{"version":3,"file":"src_engine_examples_examples_sop_Copy_materialsAndTextures_ts.aef12163ffd59e068fad.js","mappings":";;;;;;;;;;;AAQ6B;AAEtB,SAAS,WAAW,SAA2C;AACrE,QAAM,EAAC,MAAK,IAAI;AAChB,QAAM,OAAO,MAAM,KAAK;AACxB,QAAM,mBAAyC,CAAC;AAChD,WAAS,YAAY,YAA6B;AACjD,QAAI,OAAO,WAAW,WAAW,KAAK;AACtC,SAAK,QAAQ,MAAM;AACnB,UAAM,aAAmC,CAAC;AAC1C,aAAS,WAAWA,OAAkB;AACrC,UAAI,MAAMA,MAAK,WAAW,YAAY;AACtC,UAAI,QAAQ,KAAK;AACjB,YAAM,YAAkC,CAAC;AACzC,eAAS,cAAcC,MAAwB;AAC9C,YAAI,SAASA,KAAI,WAAW,OAAO;AACnC,eAAO,QAAQ,QAAQ;AACvB,cAAM,eAAqC,CAAC;AAC5C,eAAO,OAAO,YAAY,MAAM,IAAI;AACpC,eAAO,OAAO,sBAAsB;AACpC,eAAO,OAAO,oBAAoB;AAClC,eAAO,EAAC,MAAM,QAAQ,UAAU,aAAY;AAAA,MAC7C;AACA,eAAS,cAAcA,MAAwB;AAC9C,YAAI,SAASA,KAAI,WAAW,OAAO;AACnC,eAAO,QAAQ,QAAQ;AACvB,cAAM,eAAqC,CAAC;AAC5C,eAAO,OAAO,YAAY,MAAM,GAAG;AACnC,eAAO,EAAE,IAAI;AAAA,UACZ;AAAA,QACD;AACA,eAAO,EAAE,YAAY,IAAI,IAAI;AAC7B,eAAO,EAAE,WAAW,IAAI,iDAAc;AACtC,eAAO,EAAE,WAAW,IAAI,IAAI;AAC5B,eAAO,EAAE,WAAW,IAAI,IAAI;AAC5B,eAAO,EAAE,YAAY,IAAI,IAAI;AAC7B,eAAO,EAAE,yBAAyB,IAAI,IAAI;AAC1C,eAAO,OAAO,sBAAsB;AACpC,eAAO,OAAO,oBAAoB;AAClC,eAAO,EAAC,MAAM,QAAQ,UAAU,aAAY;AAAA,MAC7C;AACA,eAAS,cAAcA,MAAwB;AAC9C,YAAI,SAASA,KAAI,WAAW,OAAO;AACnC,eAAO,QAAQ,QAAQ;AACvB,cAAM,eAAqC,CAAC;AAC5C,eAAO,OAAO,YAAY,MAAM,GAAG;AACnC,eAAO,EAAE,IAAI;AAAA,UACZ;AAAA,QACD;AACA,eAAO,EAAE,YAAY,IAAI,IAAI;AAC7B,eAAO,EAAE,WAAW,IAAI,iDAAc;AACtC,eAAO,EAAE,WAAW,IAAI,IAAI;AAC5B,eAAO,EAAE,WAAW,IAAI,IAAI;AAC5B,eAAO,EAAE,YAAY,IAAI,IAAI;AAC7B,eAAO,EAAE,yBAAyB,IAAI,IAAI;AAC1C,eAAO,OAAO,sBAAsB;AACpC,eAAO,OAAO,oBAAoB;AAClC,eAAO,EAAC,MAAM,QAAQ,UAAU,aAAY;AAAA,MAC7C;AACA,gBAAU,QAAQ,IAAI,cAAc,GAAG;AACvC,gBAAU,QAAQ,IAAI,cAAc,GAAG;AACvC,gBAAU,QAAQ,IAAI,cAAc,GAAG;AACvC,UAAI,IAAI,oBAAoB;AAC3B,YAAI,mBAAmB,UAAU,IAAI,CAAC,UAAU,QAAQ,EAAE,IAAI,CAAC;AAAA,MAChE;AACA,UAAI,OAAO,WAAW,6BAA6B;AACnD,UAAI,OAAO,YAAY,GAAG,GAAG;AAC7B,UAAI,OAAO,sBAAsB;AACjC,UAAI,OAAO,oBAAoB;AAC/B,aAAO,EAAC,MAAM,KAAK,UAAU,UAAS;AAAA,IACvC;AACA,aAAS,WAAWD,OAAkB;AACrC,UAAI,MAAMA,MAAK,WAAW,kBAAkB;AAC5C,UAAI,QAAQ,KAAK;AACjB,YAAM,YAAkC,CAAC;AACzC,eAAS,qBAAqBE,MAA8B;AAC3D,YAAI,gBAAgBA,KAAI,WAAW,cAAc;AACjD,sBAAc,QAAQ,eAAe;AACrC,cAAM,sBAA4C,CAAC;AACnD,sBAAc,OAAO;AAAA,UACpB;AAAA,QACD;AACA,sBAAc,OAAO,YAAY,MAAM,GAAG;AAC1C,sBAAc,EAAE,MAAM,IAAI,CAAC,oBAAoB,mBAAmB,iBAAiB,CAAC;AACpF,sBAAc,EAAE,OAAO,IAAI,IAAI;AAC/B,sBAAc,EAAE,IAAI,IAAI,gCAAgC;AACxD,sBAAc,OAAO,sBAAsB;AAC3C,sBAAc,OAAO,oBAAoB;AACzC,eAAO,EAAC,MAAM,eAAe,UAAU,oBAAmB;AAAA,MAC3D;AACA,eAAS,qBAAqBA,MAA8B;AAC3D,YAAI,gBAAgBA,KAAI,WAAW,cAAc;AACjD,sBAAc,QAAQ,eAAe;AACrC,cAAM,sBAA4C,CAAC;AACnD,sBAAc,OAAO,YAAY,KAAK,GAAG;AACzC,sBAAc,EAAE,MAAM,IAAI,CAAC,qBAAqB,oBAAoB,mBAAmB,CAAC;AACxF,sBAAc,EAAE,OAAO,IAAI,IAAI;AAC/B,sBAAc,EAAE,IAAI,IAAI,gCAAgC;AACxD,sBAAc,OAAO,sBAAsB;AAC3C,sBAAc,OAAO,oBAAoB;AACzC,eAAO,EAAC,MAAM,eAAe,UAAU,oBAAmB;AAAA,MAC3D;AACA,eAAS,qBAAqBA,MAA8B;AAC3D,YAAI,gBAAgBA,KAAI,WAAW,cAAc;AACjD,sBAAc,QAAQ,eAAe;AACrC,cAAM,sBAA4C,CAAC;AACnD,sBAAc,OAAO,YAAY,KAAK,GAAG;AACzC,sBAAc,EAAE,OAAO,IAAI,IAAI;AAC/B,sBAAc,EAAE,IAAI,IAAI,gCAAgC;AACxD,sBAAc,OAAO,sBAAsB;AAC3C,sBAAc,OAAO,oBAAoB;AACzC,eAAO,EAAC,MAAM,eAAe,UAAU,oBAAmB;AAAA,MAC3D;AACA,gBAAU,eAAe,IAAI,qBAAqB,GAAG;AACrD,gBAAU,eAAe,IAAI,qBAAqB,GAAG;AACrD,gBAAU,eAAe,IAAI,qBAAqB,GAAG;AACrD,UAAI,IAAI,oBAAoB;AAC3B,YAAI,mBAAmB,UAAU,IAAI,CAAC,UAAU,eAAe,EAAE,IAAI,CAAC;AAAA,MACvE;AACA,UAAI,OAAO;AAAA,QACV;AAAA,MACD;AACA,UAAI,OAAO,YAAY,GAAG,GAAG;AAC7B,UAAI,OAAO,sBAAsB;AACjC,UAAI,OAAO,oBAAoB;AAC/B,aAAO,EAAC,MAAM,KAAK,UAAU,UAAS;AAAA,IACvC;AACA,aAAS,aAAaF,OAAkB;AACvC,UAAI,QAAQA,MAAK,WAAW,MAAM;AAClC,YAAM,QAAQ,OAAO;AACrB,YAAM,cAAoC,CAAC;AAC3C,YAAM,OAAO;AAAA,QACZ;AAAA,MACD;AACA,YAAM,OAAO,YAAY,KAAK,GAAG;AACjC,YAAM,MAAM,QAAQ,IAAI,IAAI;AAC5B,YAAM,EAAE,MAAM,IAAI,CAAC;AACnB,YAAM,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACvB,YAAM,OAAO,sBAAsB;AACnC,YAAM,OAAO,oBAAoB;AACjC,aAAO,EAAC,MAAM,OAAO,UAAU,YAAW;AAAA,IAC3C;AACA,aAAS,iBAAiBA,OAAkB;AAC3C,UAAI,YAAYA,MAAK,WAAW,UAAU;AAC1C,gBAAU,QAAQ,WAAW;AAC7B,YAAM,kBAAwC,CAAC;AAC/C,gBAAU,OAAO;AAAA,QAChB;AAAA,MACD;AACA,gBAAU,OAAO,YAAY,KAAK,GAAG;AACrC,gBAAU,EAAE,SAAS,IAAI,2CAA2C;AACpE,gBAAU,OAAO,sBAAsB;AACvC,gBAAU,OAAO,oBAAoB;AACrC,aAAO,EAAC,MAAM,WAAW,UAAU,gBAAe;AAAA,IACnD;AACA,aAAS,eAAeA,OAAkB;AACzC,UAAI,UAAUA,MAAK,WAAW,QAAQ;AACtC,cAAQ,QAAQ,SAAS;AACzB,YAAM,gBAAsC,CAAC;AAC7C,cAAQ,OAAO,YAAY,KAAK,IAAI;AACpC,cAAQ,EAAE,OAAO,IAAI,IAAI;AACzB,cAAQ,OAAO,sBAAsB;AACrC,cAAQ,OAAO,oBAAoB;AACnC,aAAO,EAAC,MAAM,SAAS,UAAU,cAAa;AAAA,IAC/C;AACA,eAAW,KAAK,IAAI,WAAW,IAAI;AACnC,eAAW,KAAK,IAAI,WAAW,IAAI;AACnC,eAAW,OAAO,IAAI,aAAa,IAAI;AACvC,eAAW,WAAW,IAAI,iBAAiB,IAAI;AAC/C,eAAW,SAAS,IAAI,eAAe,IAAI;AAC3C,eAAW,OAAO,EAAE,KAAK,SAAS,GAAG,WAAW,WAAW,EAAE,IAAI;AACjE,eAAW,WAAW,EAAE,KAAK,SAAS,GAAG,WAAW,SAAS,EAAE,IAAI;AACnE,QAAI,KAAK,oBAAoB;AAC5B,WAAK,mBAAmB,UAAU,IAAI,CAAC,CAAC;AAAA,IACzC;AACA,SAAK,OAAO,YAAY,KAAK,IAAI;AACjC,SAAK,MAAM,QAAQ,IAAI,IAAI;AAC3B,SAAK,OAAO,sBAAsB;AAClC,SAAK,OAAO,oBAAoB;AAChC,WAAO,EAAC,MAAM,MAAM,UAAU,WAAU;AAAA,EACzC;AACA,WAAS,wBAAwB,YAA6B;AAC7D,QAAI,mBAAmB,WAAW,WAAW,iBAAiB;AAC9D,qBAAiB,QAAQ,kBAAkB;AAC3C,UAAM,yBAA+C,CAAC;AACtD,qBAAiB,OAAO,YAAY,KAAK,GAAG;AAC5C,qBAAiB,MAAM,QAAQ,IAAI,IAAI;AACvC,qBAAiB,OAAO,sBAAsB;AAC9C,qBAAiB,OAAO,oBAAoB;AAC5C,WAAO,EAAC,MAAM,kBAAkB,UAAU,uBAAsB;AAAA,EACjE;AACA,WAAS,0BAA0B,YAA6B;AAC/D,QAAI,qBAAqB,WAAW,WAAW,mBAAmB;AAClE,uBAAmB,QAAQ,oBAAoB;AAC/C,UAAM,2BAAiD,CAAC;AACxD,aAAS,eAAeG,qBAA8C;AACrE,UAAI,UAAUA,oBAAmB,WAAW,eAAe;AAC3D,cAAQ,QAAQ,SAAS;AACzB,YAAM,gBAAsC,CAAC;AAC7C,eAAS,4BAA4BC,UAA+B;AACnE,YAAI,uBAAuBA,SAAQ,WAAW,qBAAqB;AACnE,6BAAqB,QAAQ,sBAAsB;AACnD,cAAM,6BAAmD,CAAC;AAC1D,6BAAqB,OAAO,YAAY,KAAK,EAAE;AAC/C,6BAAqB,EAAE,OAAO,IAAI,CAAC,oBAAoB,sBAAsB,oBAAoB,CAAC;AAClG,6BAAqB,OAAO,sBAAsB;AAClD,6BAAqB,OAAO,oBAAoB;AAChD,eAAO,EAAC,MAAM,sBAAsB,UAAU,2BAA0B;AAAA,MACzE;AACA,oBAAc,sBAAsB,IAAI,4BAA4B,OAAO;AAC3E,UAAI,QAAQ,oBAAoB;AAC/B,gBAAQ,mBAAmB,UAAU,IAAI,CAAC,CAAC;AAAA,MAC5C;AACA,cAAQ,OAAO,YAAY,MAAM,EAAE;AACnC,cAAQ,OAAO,sBAAsB;AACrC,cAAQ,OAAO,oBAAoB;AACnC,aAAO,EAAC,MAAM,SAAS,UAAU,cAAa;AAAA,IAC/C;AACA,6BAAyB,SAAS,IAAI,eAAe,kBAAkB;AACvE,QAAI,mBAAmB,oBAAoB;AAC1C,yBAAmB,mBAAmB,UAAU,IAAI,CAAC,CAAC;AAAA,IACvD;AACA,uBAAmB,OAAO,YAAY,MAAM,GAAG;AAC/C,uBAAmB,MAAM,QAAQ,IAAI,IAAI;AACzC,uBAAmB,EAAE,EAAE,IAAI,CAAC,oBAAoB,oBAAoB,iBAAiB,CAAC;AACtF,uBAAmB,EAAE,EAAE,IAAI,CAAC,oBAAoB,qBAAqB,mBAAmB,CAAC;AACzF,uBAAmB,EAAE,SAAS,IAAI,gCAAgC;AAClE,uBAAmB,OAAO,sBAAsB;AAChD,uBAAmB,OAAO,oBAAoB;AAC9C,WAAO,EAAC,MAAM,oBAAoB,UAAU,yBAAwB;AAAA,EACrE;AACA,mBAAiB,MAAM,IAAI,YAAY,IAAI;AAC3C,mBAAiB,kBAAkB,IAAI,wBAAwB,IAAI;AACnE,mBAAiB,oBAAoB,IAAI,0BAA0B,IAAI;AACvE,SAAO;AAAA,IACN;AAAA,IACA,YAAY,iBAAiB,oBAAoB,EAAE,KAAK,KAAK;AAAA,IAC7D,cAAc,OAAO,OAAO,iBAAiB,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI;AAAA,IAChF,YAAY;AAAA,EACb;AACD","sources":["webpack:///../src/engine/examples/examples/sop/Copy_materialsAndTextures.ts"],"sourcesContent":["import type {CopNetworkSopNode} from './../../../../../@polygonjs/polygonjs/src/engine/nodes/sop/CopNetwork';\nimport type {MaterialsNetworkSopNode} from './../../../../../@polygonjs/polygonjs/src/engine/nodes/sop/MaterialsNetwork';\nimport type {EventsNetworkSopNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/sop/EventsNetwork';\nimport type {PerspectiveCameraObjNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/obj/PerspectiveCamera';\nimport type {GeoObjNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/obj/Geo';\nimport type {RootManagerNode} from '../../../../../@polygonjs/polygonjs/src/engine/nodes/manager/Root';\nimport type {ExampleData, DataCallbackOptions} from '../../Common';\nimport type {ReturnedNodeDataDict} from '../../ExampleUtils';\nimport {SRGBColorSpace} from 'three';\n\nexport function createData(options: DataCallbackOptions): ExampleData {\n\tconst {scene} = options;\n\tconst root = scene.root();\n\tconst scene_root_nodes: ReturnedNodeDataDict = {};\n\tfunction create_geo1(parentNode: RootManagerNode) {\n\t\tvar geo1 = parentNode.createNode('geo');\n\t\tgeo1.setName('geo1');\n\t\tconst geo1_nodes: ReturnedNodeDataDict = {};\n\t\tfunction create_COP(geo1: GeoObjNode) {\n\t\t\tvar COP = geo1.createNode('copNetwork');\n\t\t\tCOP.setName('COP');\n\t\t\tconst COP_nodes: ReturnedNodeDataDict = {};\n\t\t\tfunction create_image0(COP: CopNetworkSopNode) {\n\t\t\t\tvar image0 = COP.createNode('image');\n\t\t\t\timage0.setName('image0');\n\t\t\t\tconst image0_nodes: ReturnedNodeDataDict = {};\n\t\t\t\timage0.uiData.setPosition(-400, -200);\n\t\t\t\timage0.params.postCreateSpareParams();\n\t\t\t\timage0.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: image0, children: image0_nodes};\n\t\t\t}\n\t\t\tfunction create_image1(COP: CopNetworkSopNode) {\n\t\t\t\tvar image1 = COP.createNode('image');\n\t\t\t\timage1.setName('image1');\n\t\t\t\tconst image1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\timage1.uiData.setPosition(-400, -50);\n\t\t\t\timage1.p.url.set(\n\t\t\t\t\t'https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/textures/resources/polyhaven.com/fabric_pattern_07/2k/diffuse.jpg'\n\t\t\t\t);\n\t\t\t\timage1.p.tcolorSpace.set(true);\n\t\t\t\timage1.p.colorSpace.set(SRGBColorSpace);\n\t\t\t\timage1.p.tminFilter.set(true);\n\t\t\t\timage1.p.tmagFilter.set(true);\n\t\t\t\timage1.p.tanisotropy.set(true);\n\t\t\t\timage1.p.useRendererMaxAnisotropy.set(true);\n\t\t\t\timage1.params.postCreateSpareParams();\n\t\t\t\timage1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: image1, children: image1_nodes};\n\t\t\t}\n\t\t\tfunction create_image2(COP: CopNetworkSopNode) {\n\t\t\t\tvar image2 = COP.createNode('image');\n\t\t\t\timage2.setName('image2');\n\t\t\t\tconst image2_nodes: ReturnedNodeDataDict = {};\n\t\t\t\timage2.uiData.setPosition(-400, 100);\n\t\t\t\timage2.p.url.set(\n\t\t\t\t\t'https://raw.githubusercontent.com/polygonjs/polygonjs-assets/master/textures/resources/polyhaven.com/brick_moss_001/2k/diffuse.jpg'\n\t\t\t\t);\n\t\t\t\timage2.p.tcolorSpace.set(true);\n\t\t\t\timage2.p.colorSpace.set(SRGBColorSpace);\n\t\t\t\timage2.p.tminFilter.set(true);\n\t\t\t\timage2.p.tmagFilter.set(true);\n\t\t\t\timage2.p.tanisotropy.set(true);\n\t\t\t\timage2.p.useRendererMaxAnisotropy.set(true);\n\t\t\t\timage2.params.postCreateSpareParams();\n\t\t\t\timage2.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: image2, children: image2_nodes};\n\t\t\t}\n\t\t\tCOP_nodes['image0'] = create_image0(COP);\n\t\t\tCOP_nodes['image1'] = create_image1(COP);\n\t\t\tCOP_nodes['image2'] = create_image2(COP);\n\t\t\tif (COP.childrenController) {\n\t\t\t\tCOP.childrenController.selection.set([COP_nodes['image2'].node]);\n\t\t\t}\n\t\t\tCOP.uiData.setComment('This contains the textures.');\n\t\t\tCOP.uiData.setPosition(0, 350);\n\t\t\tCOP.params.postCreateSpareParams();\n\t\t\tCOP.params.runOnSceneLoadHooks();\n\t\t\treturn {node: COP, children: COP_nodes};\n\t\t}\n\t\tfunction create_MAT(geo1: GeoObjNode) {\n\t\t\tvar MAT = geo1.createNode('materialsNetwork');\n\t\t\tMAT.setName('MAT');\n\t\t\tconst MAT_nodes: ReturnedNodeDataDict = {};\n\t\t\tfunction create_meshStandard0(MAT: MaterialsNetworkSopNode) {\n\t\t\t\tvar meshStandard0 = MAT.createNode('meshStandard');\n\t\t\t\tmeshStandard0.setName('meshStandard0');\n\t\t\t\tconst meshStandard0_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tmeshStandard0.uiData.setComment(\n\t\t\t\t\t'Each material node here refers to a different texture node. The texture node path could be fully set, but we instead use a simple expression based on [opdigits](https://polygonjs.com/docs/expressions/opdigits) which resolves to the number at the end of the name, and makes copy/pasting nodes faster.'\n\t\t\t\t);\n\t\t\t\tmeshStandard0.uiData.setPosition(-250, 100);\n\t\t\t\tmeshStandard0.p.color.set([0.8666666666666667, 0.615686274509804, 0.615686274509804]);\n\t\t\t\tmeshStandard0.p.useMap.set(true);\n\t\t\t\tmeshStandard0.p.map.set(\"../../COP/image`opdigits('.')`\");\n\t\t\t\tmeshStandard0.params.postCreateSpareParams();\n\t\t\t\tmeshStandard0.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: meshStandard0, children: meshStandard0_nodes};\n\t\t\t}\n\t\t\tfunction create_meshStandard1(MAT: MaterialsNetworkSopNode) {\n\t\t\t\tvar meshStandard1 = MAT.createNode('meshStandard');\n\t\t\t\tmeshStandard1.setName('meshStandard1');\n\t\t\t\tconst meshStandard1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tmeshStandard1.uiData.setPosition(100, 100);\n\t\t\t\tmeshStandard1.p.color.set([0.13333333333333333, 0.6980392156862745, 0.12156862745098039]);\n\t\t\t\tmeshStandard1.p.useMap.set(true);\n\t\t\t\tmeshStandard1.p.map.set(\"../../COP/image`opdigits('.')`\");\n\t\t\t\tmeshStandard1.params.postCreateSpareParams();\n\t\t\t\tmeshStandard1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: meshStandard1, children: meshStandard1_nodes};\n\t\t\t}\n\t\t\tfunction create_meshStandard2(MAT: MaterialsNetworkSopNode) {\n\t\t\t\tvar meshStandard2 = MAT.createNode('meshStandard');\n\t\t\t\tmeshStandard2.setName('meshStandard2');\n\t\t\t\tconst meshStandard2_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tmeshStandard2.uiData.setPosition(400, 100);\n\t\t\t\tmeshStandard2.p.useMap.set(true);\n\t\t\t\tmeshStandard2.p.map.set(\"../../COP/image`opdigits('.')`\");\n\t\t\t\tmeshStandard2.params.postCreateSpareParams();\n\t\t\t\tmeshStandard2.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: meshStandard2, children: meshStandard2_nodes};\n\t\t\t}\n\t\t\tMAT_nodes['meshStandard0'] = create_meshStandard0(MAT);\n\t\t\tMAT_nodes['meshStandard1'] = create_meshStandard1(MAT);\n\t\t\tMAT_nodes['meshStandard2'] = create_meshStandard2(MAT);\n\t\t\tif (MAT.childrenController) {\n\t\t\t\tMAT.childrenController.selection.set([MAT_nodes['meshStandard0'].node]);\n\t\t\t}\n\t\t\tMAT.uiData.setComment(\n\t\t\t\t'This contains the materials that will be loaded by the [../material1](../material1) node.'\n\t\t\t);\n\t\t\tMAT.uiData.setPosition(0, 150);\n\t\t\tMAT.params.postCreateSpareParams();\n\t\t\tMAT.params.runOnSceneLoadHooks();\n\t\t\treturn {node: MAT, children: MAT_nodes};\n\t\t}\n\t\tfunction create_copy1(geo1: GeoObjNode) {\n\t\t\tvar copy1 = geo1.createNode('copy');\n\t\t\tcopy1.setName('copy1');\n\t\t\tconst copy1_nodes: ReturnedNodeDataDict = {};\n\t\t\tcopy1.uiData.setComment(\n\t\t\t\t'With the copy node, we iterate 3 times on the nodes above.\\n\\nSince we uses the [copy](https://polygonjs.com/docs/expressions/copy) expression in the material node, it will be recooked on each iteration, and apply a different material on the new sphere every time.\\n\\nNote that this scene only contains 3 materials and textures, so if you wanted to increase the could param of this node, you would have to create more material and texture nodes. You can do that with the editor, or also using the [api](https://polygonjs.com/api)'\n\t\t\t);\n\t\t\tcopy1.uiData.setPosition(250, 500);\n\t\t\tcopy1.flags.display.set(true);\n\t\t\tcopy1.p.count.set(3);\n\t\t\tcopy1.p.t.set([2, 0, 0]);\n\t\t\tcopy1.params.postCreateSpareParams();\n\t\t\tcopy1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: copy1, children: copy1_nodes};\n\t\t}\n\t\tfunction create_material1(geo1: GeoObjNode) {\n\t\t\tvar material1 = geo1.createNode('material');\n\t\t\tmaterial1.setName('material1');\n\t\t\tconst material1_nodes: ReturnedNodeDataDict = {};\n\t\t\tmaterial1.uiData.setComment(\n\t\t\t\t'the material param uses the [copy](https://polygonjs.com/docs/expressions/copy) expression to resolve to a different material node on each iteration.\\n\\nThe expression will resolve to the following material nodes:\\n\\n- [../MAT/meshStandard0](../MAT/meshStandard0)\\n- [../MAT/meshStandard1](../MAT/meshStandard1)\\n- [../MAT/meshStandard2](../MAT/meshStandard2)\\n\\n'\n\t\t\t);\n\t\t\tmaterial1.uiData.setPosition(250, 100);\n\t\t\tmaterial1.p.material.set(\"../MAT/meshStandard`copy('../copy1')*1+0`\");\n\t\t\tmaterial1.params.postCreateSpareParams();\n\t\t\tmaterial1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: material1, children: material1_nodes};\n\t\t}\n\t\tfunction create_sphere1(geo1: GeoObjNode) {\n\t\t\tvar sphere1 = geo1.createNode('sphere');\n\t\t\tsphere1.setName('sphere1');\n\t\t\tconst sphere1_nodes: ReturnedNodeDataDict = {};\n\t\t\tsphere1.uiData.setPosition(250, -150);\n\t\t\tsphere1.p.radius.set(0.96);\n\t\t\tsphere1.params.postCreateSpareParams();\n\t\t\tsphere1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: sphere1, children: sphere1_nodes};\n\t\t}\n\t\tgeo1_nodes['COP'] = create_COP(geo1);\n\t\tgeo1_nodes['MAT'] = create_MAT(geo1);\n\t\tgeo1_nodes['copy1'] = create_copy1(geo1);\n\t\tgeo1_nodes['material1'] = create_material1(geo1);\n\t\tgeo1_nodes['sphere1'] = create_sphere1(geo1);\n\t\tgeo1_nodes['copy1'].node.setInput(0, geo1_nodes['material1'].node);\n\t\tgeo1_nodes['material1'].node.setInput(0, geo1_nodes['sphere1'].node);\n\t\tif (geo1.childrenController) {\n\t\t\tgeo1.childrenController.selection.set([]);\n\t\t}\n\t\tgeo1.uiData.setPosition(-50, -150);\n\t\tgeo1.flags.display.set(true);\n\t\tgeo1.params.postCreateSpareParams();\n\t\tgeo1.params.runOnSceneLoadHooks();\n\t\treturn {node: geo1, children: geo1_nodes};\n\t}\n\tfunction create_hemisphereLight1(parentNode: RootManagerNode) {\n\t\tvar hemisphereLight1 = parentNode.createNode('hemisphereLight');\n\t\themisphereLight1.setName('hemisphereLight1');\n\t\tconst hemisphereLight1_nodes: ReturnedNodeDataDict = {};\n\t\themisphereLight1.uiData.setPosition(150, 100);\n\t\themisphereLight1.flags.display.set(true);\n\t\themisphereLight1.params.postCreateSpareParams();\n\t\themisphereLight1.params.runOnSceneLoadHooks();\n\t\treturn {node: hemisphereLight1, children: hemisphereLight1_nodes};\n\t}\n\tfunction create_perspectiveCamera1(parentNode: RootManagerNode) {\n\t\tvar perspectiveCamera1 = parentNode.createNode('perspectiveCamera');\n\t\tperspectiveCamera1.setName('perspectiveCamera1');\n\t\tconst perspectiveCamera1_nodes: ReturnedNodeDataDict = {};\n\t\tfunction create_events1(perspectiveCamera1: PerspectiveCameraObjNode) {\n\t\t\tvar events1 = perspectiveCamera1.createNode('eventsNetwork');\n\t\t\tevents1.setName('events1');\n\t\t\tconst events1_nodes: ReturnedNodeDataDict = {};\n\t\t\tfunction create_cameraOrbitControls1(events1: EventsNetworkSopNode) {\n\t\t\t\tvar cameraOrbitControls1 = events1.createNode('cameraOrbitControls');\n\t\t\t\tcameraOrbitControls1.setName('cameraOrbitControls1');\n\t\t\t\tconst cameraOrbitControls1_nodes: ReturnedNodeDataDict = {};\n\t\t\t\tcameraOrbitControls1.uiData.setPosition(150, 50);\n\t\t\t\tcameraOrbitControls1.p.target.set([2.0876561966466443, -0.04060340244757113, -0.28273938451754854]);\n\t\t\t\tcameraOrbitControls1.params.postCreateSpareParams();\n\t\t\t\tcameraOrbitControls1.params.runOnSceneLoadHooks();\n\t\t\t\treturn {node: cameraOrbitControls1, children: cameraOrbitControls1_nodes};\n\t\t\t}\n\t\t\tevents1_nodes['cameraOrbitControls1'] = create_cameraOrbitControls1(events1);\n\t\t\tif (events1.childrenController) {\n\t\t\t\tevents1.childrenController.selection.set([]);\n\t\t\t}\n\t\t\tevents1.uiData.setPosition(-200, 50);\n\t\t\tevents1.params.postCreateSpareParams();\n\t\t\tevents1.params.runOnSceneLoadHooks();\n\t\t\treturn {node: events1, children: events1_nodes};\n\t\t}\n\t\tperspectiveCamera1_nodes['events1'] = create_events1(perspectiveCamera1);\n\t\tif (perspectiveCamera1.childrenController) {\n\t\t\tperspectiveCamera1.childrenController.selection.set([]);\n\t\t}\n\t\tperspectiveCamera1.uiData.setPosition(-200, 100);\n\t\tperspectiveCamera1.flags.display.set(true);\n\t\tperspectiveCamera1.p.t.set([1.9444268071639697, 2.1161993609210836, 4.686026521437992]);\n\t\tperspectiveCamera1.p.r.set([-23.46097661513556, -1.5307978098028159, -0.6642616748859466]);\n\t\tperspectiveCamera1.p.controls.set('./events1/cameraOrbitControls1');\n\t\tperspectiveCamera1.params.postCreateSpareParams();\n\t\tperspectiveCamera1.params.runOnSceneLoadHooks();\n\t\treturn {node: perspectiveCamera1, children: perspectiveCamera1_nodes};\n\t}\n\tscene_root_nodes['geo1'] = create_geo1(root);\n\tscene_root_nodes['hemisphereLight1'] = create_hemisphereLight1(root);\n\tscene_root_nodes['perspectiveCamera1'] = create_perspectiveCamera1(root);\n\treturn {\n\t\tscene,\n\t\tcameraPath: scene_root_nodes['perspectiveCamera1'].node.path(),\n\t\tfocusedNodes: Object.values(scene_root_nodes['geo1'].children).map((n) => n.node),\n\t\tautoLayout: false,\n\t};\n}\n// export const sopCopy_materialsAndTextures = [\n// \tnew Example({\n// \t\tname: `${ExamplePrefix.BY_NODE}/sop/copy/materialsAndTextures`,\n// \t\tcreateData,\n// \t\tcategories: [ExampleCategory.INSTANCING],\n// \t\trelatedNodes: [CopySopNode],\n// \t}),\n// \t// new Example({name: `${ExamplePrefix.BY_CATEGORY}/instancing/CopyUniqueMaterialsAndTextures`, createData}),\n// ];\n"],"names":["geo1","COP","MAT","perspectiveCamera1","events1"],"sourceRoot":""}