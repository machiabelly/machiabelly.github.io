(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_docs_pages_mdx_export_local_mdx"],{

/***/ 26082:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ MDXContent; }
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88917);
/* harmony import */ var _mdx_js_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12588);

/*@jsxRuntime automatic @jsxImportSource @mdx-js/vue*/

function _createMdxContent(props) {
  const _components = {
      a: "a",
      code: "code",
      h1: "h1",
      h2: "h2",
      li: "li",
      p: "p",
      pre: "pre",
      ul: "ul",
      ...(0,_mdx_js_vue__WEBPACK_IMPORTED_MODULE_0__/* .useMDXComponents */ .a)(),
      ...props.components
    },
    {
      DocRouterLink
    } = _components;
  if (!DocRouterLink) _missingMdxReference("DocRouterLink", true);
  return (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(vue__WEBPACK_IMPORTED_MODULE_1__/* .Fragment */ .HY, null, [(0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.h1, null, {
    default: () => [(0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.a, {
      "href": "/export"
    }, {
      default: () => ["Export"]
    }), " / Local"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["In order to export locally, all you need to do is to save your scene, with ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
      default: () => ["File -> Save"]
    }), ", or with the keyboard shortcut ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
      default: () => ["Ctrl + S"]
    }), "."]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["Polygonjs then saves your scene files in 2 places:"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.ul, null, {
    default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.li, null, {
      default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
        default: () => ["in ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
          default: () => ["./src/polygonjs/scenes/<your scene name>"]
        })]
      }), "\n"]
    }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.li, null, {
      default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
        default: () => ["and in ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
          default: () => ["./public/polygonjs/scenes/<your scene name>"]
        })]
      }), "\n"]
    }), "\n"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["Notice that both path are almost identical, and contain ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
      default: () => ["polygonjs/scenes/<your scene name>"]
    }), ". The only difference is that the first one is under ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
      default: () => ["src"]
    }), " while the second is under ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
      default: () => ["public"]
    }), "."]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.h2, null, {
    default: () => ["Saved as multiple files"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["You may notice that unlike other 3D packages like Blender or Houdini, your scene is not saved into a single file. There are multiple reasons for that:"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.ul, null, {
    default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.li, null, {
      default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
        default: () => ["Since Polygonjs scenes are designed to be loaded onto a website, it is much faster to load multiple small files than a single large one."]
      }), "\n"]
    }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.li, null, {
      default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
        default: () => ["It's much easier to track changes across multiple revisions when the files are saved as readable text files, and across multiple files. This makes ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.a, {
          "href": "/integrations/git"
        }, {
          default: () => ["integrations with git"]
        }), " particularly efficient."]
      }), "\n"]
    }), "\n"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.h2, null, {
    default: () => ["Files Types"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["The folders ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
      default: () => ["src"]
    }), " and ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
      default: () => ["public"]
    }), " have 2 distinct use, which is why Polygonjs saved different file types in each:"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.ul, null, {
    default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.li, null, {
      default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
        default: () => [(0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
          default: () => ["src"]
        }), " folder contains any javascript files. Those would be the one that define which node your scene will load (which in turn defines how small or large the javascript bundle will be) and hooks to load your scene."]
      }), "\n"]
    }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.li, null, {
      default: () => ["\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
        default: () => [(0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, null, {
          default: () => ["public"]
        }), " folder contains .json files that contain your scene data. This describe the parameter values, the node inputs, other scene parameters. You would also add 3D assets like models and textures to this folder."]
      }), "\n"]
    }), "\n"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.h2, null, {
    default: () => ["How to use the scene files"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["If you've created a project using the ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.a, {
      "href": "/install/new"
    }, {
      default: () => ["create polygonjs"]
    }), " command line tool, you will have prepared template that import your scene into your page."]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["It looks like this for a react project:"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.pre, null, {
    default: () => [(0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, {
      "className": "language-js"
    }, {
      default: () => ["import {PolygonjsScene} from '@polygonjs/react';\nimport {createAndMountScene_doc_as_vue} from '../src/loadScene.js';\n...\n<PolygonjsScene\n\tkey=\"doc_as_vue\"\n\tsceneName=\"doc_as_vue\"\n\tloadFunction={createAndMountScene_doc_as_vue}\n\tonSceneReady={onSceneReady}\n\trender={true}\n/>\n...\n"]
    })]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["or like this for a vanilla project:"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.pre, null, {
    default: () => [(0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.code, {
      "className": "language-js"
    }, {
      default: () => ["import {createAndMountScene_doc_as_vue} from './createAndMountScene';\ncreateAndMountScene_doc_as_vue({\n\tdomElement: 'app',\n\tautoPlay: true,\n\tcreateViewer: true,\n});\n"]
    })]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["As you can see, regardless of the framework you use (if any), it's just a few lines. This allows you to add a Polygonjs anywhere in your project."]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.h2, null, {
    default: () => ["What's next?"]
  }), "\n", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_components.p, null, {
    default: () => ["Let's now have a look at ", (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(DocRouterLink, {
      "bang": true,
      "href": "/docs/upgrade!",
      "innerText": "How to Upgrade Polygonjs â†’"
    }, null)]
  })]);
}
function MDXContent(props = {}) {
  const {
    wrapper: MDXLayout
  } = {
    ...(0,_mdx_js_vue__WEBPACK_IMPORTED_MODULE_0__/* .useMDXComponents */ .a)(),
    ...props.components
  };
  return MDXLayout ? (0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(MDXLayout, props, {
    default: () => [(0,vue__WEBPACK_IMPORTED_MODULE_1__/* .createVNode */ .Wm)(_createMdxContent, props, null)]
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}

/***/ }),

/***/ 12588:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ MDXProvider; },
/* harmony export */   "a": function() { return /* binding */ useMDXComponents; }
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88917);
/**
 * @typedef {import('mdx/types.js').MDXComponents} MDXComponents
 * @typedef {import('vue').Component<Props>} Provider
 * @typedef {import('vue').ComponentPublicInstance} ComponentPublicInstance
 */

/**
 * @typedef Props
 *   Configuration for `MDXProvider`.
 * @property {MDXComponents | null | undefined} [components]
 *   Additional components to use (optional).
 */



/**
 * Provider for MDX context.
 *
 * @type {Provider}
 *   Provider.
 */
const MDXProvider = {
  name: 'MDXProvider',
  props: {
    components: {
      default() {
        return {}
      },
      type: Object
    }
  },
  setup(props) {
    (0,vue__WEBPACK_IMPORTED_MODULE_0__/* .provide */ .JJ)('$mdxComponents', props.components)
  },
  /**
   * @this {ComponentPublicInstance}
   *   Context.
   * @returns
   *   Element.
   */
  render() {
    return (0,vue__WEBPACK_IMPORTED_MODULE_0__/* .createVNode */ .Wm)(
      vue__WEBPACK_IMPORTED_MODULE_0__/* .Fragment */ .HY,
      undefined,
      this.$slots.default ? this.$slots.default() : []
    )
  }
}

/**
 * Get current components from the MDX Context.
 *
 * @returns {MDXComponents}
 *   Current components.
 */
function useMDXComponents() {
  return (0,vue__WEBPACK_IMPORTED_MODULE_0__/* .inject */ .f3)('$mdxComponents', {})
}


/***/ })

}])
//# sourceMappingURL=src_docs_pages_mdx_export_local_mdx.26a7690ba8b239d52eef.js.map