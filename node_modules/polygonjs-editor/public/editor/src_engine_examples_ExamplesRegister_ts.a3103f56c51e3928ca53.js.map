{"version":3,"file":"src_engine_examples_ExamplesRegister_ts.a3103f56c51e3928ca53.js","mappings":"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","sources":["webpack:///../@polygonjs/polygonjs/src/engine/expressions/methods/Common.ts","webpack:///../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Mat.ts","webpack:///../src/engine/examples/Example.ts","webpack:///../src/engine/examples/ExamplesRegister.ts"],"sourcesContent":["export enum ExpressionType {\n\tanimationNames = 'animationNames',\n\targ = 'arg',\n\targc = 'argc',\n\tbbox = 'bbox',\n\tblob = 'blob',\n\tcameraName = 'cameraName',\n\tcameraNames = 'cameraNames',\n\tcamerasCount = 'camerasCount',\n\tcentroid = 'centroid',\n\tch = 'ch',\n\tchsop = 'chsop',\n\tcopy = 'copy',\n\tcopRes = 'copRes',\n\tisDeviceMobile = 'isDeviceMobile',\n\tisDeviceTouch = 'isDeviceTouch',\n\tlen = 'len',\n\tjoin = 'join',\n\tjs = 'js',\n\tobject = 'object',\n\tobjectsCount = 'objectsCount',\n\tobjectName = 'objectName',\n\tobjectNames = 'objectNames',\n\topdigits = 'opdigits',\n\topname = 'opname',\n\tpadzero = 'padzero',\n\tplayerMode = 'playerMode',\n\tpoint = 'point',\n\tpointsCount = 'pointsCount',\n\tsmoothstep = 'smoothstep',\n\tsmootherstep = 'smootherstep',\n\tsolverIteration = 'solverIteration',\n\tstrCharsCount = 'strCharsCount',\n\tstrConcat = 'strConcat',\n\tstrIndex = 'strIndex',\n\tstrSub = 'strSub',\n\tviewerSize = 'viewerSize',\n\twindowSize = 'windowSize',\n}\n","export enum MatType {\n\tLINE_BASIC = 'lineBasic',\n\tLINE_BASIC_BUILDER = 'lineBasicBuilder',\n\tMESH_BASIC = 'meshBasic',\n\tMESH_BASIC_BUILDER = 'meshBasicBuilder',\n\tMESH_DEPTH_BUILDER = 'meshDepthBuilder',\n\tMESH_DISTANCE_BUILDER = 'meshDistanceBuilder',\n\tMESH_LAMBERT = 'meshLambert',\n\tMESH_LAMBERT_BUILDER = 'meshLambertBuilder',\n\tMESH_MATCAP = 'meshMatcap',\n\tMESH_NORMAL = 'meshNormal',\n\tMESH_PHONG = 'meshPhong',\n\tMESH_PHONG_BUILDER = 'meshPhongBuilder',\n\tMESH_PHYSICAL = 'meshPhysical',\n\tMESH_PHYSICAL_BUILDER = 'meshPhysicalBuilder',\n\tMESH_STANDARD = 'meshStandard',\n\tMESH_STANDARD_BUILDER = 'meshStandardBuilder',\n\tMESH_TOON = 'meshToon',\n\tMESH_TOON_BUILDER = 'meshToonBuilder',\n\tPOINTS = 'points',\n\tPOINTS_BUILDER = 'pointsBuilder',\n\tRAY_MARCHING_BUILDER = 'rayMarchingBuilder',\n\tSHADOW = 'shadow',\n\tSKY = 'sky',\n\tVOLUME = 'volume',\n\tVOLUME_BUILDER = 'volumeBuilder',\n}\n","// import {BaseNodeClass} from '../../../@polygonjs/polygonjs/src/engine/nodes/_Base';\nimport {CoreType} from '../../../@polygonjs/polygonjs/src/core/Type';\nimport {\n\tExampleOptions,\n\texampleNameToId,\n\tExamplePrefix,\n\t// ExampleRelatedNodeWithLabel,\n\tExampleCategory,\n\tExampleCategoryWithLabel,\n\tDataCallbackOptions,\n} from './Common';\n\nexport class Example {\n\tconstructor(private _options: ExampleOptions) {}\n\tid() {\n\t\treturn exampleNameToId(this.name());\n\t}\n\tname(): string {\n\t\treturn this._options.name;\n\t}\n\tshortName() {\n\t\tconst elements = this.name().split('/');\n\t\treturn elements[elements.length - 1];\n\t}\n\tpath(): string {\n\t\t// this returns the path that should resolve to the already saved thumbnail.\n\t\t//\n\t\tconst nameElements = this.name().split('/');\n\t\tif (nameElements.length > 0) {\n\t\t\treturn this.name();\n\t\t} else {\n\t\t\treturn this.path()[0];\n\t\t}\n\t}\n\tpaths(): string[] {\n\t\tconst list: string[] = [];\n\n\t\tif (this._options.relatedNodeContextAndTypes) {\n\t\t\tfor (let nodeContextAndType of this._options.relatedNodeContextAndTypes) {\n\t\t\t\t// const type = (nodeContextAndType).type;\n\t\t\t\t// if (type != null) {\n\t\t\t\tconst path: string[] = [\n\t\t\t\t\tExamplePrefix.BY_NODE,\n\t\t\t\t\tnodeContextAndType.context,\n\t\t\t\t\tnodeContextAndType.type,\n\t\t\t\t\tthis.shortName(),\n\t\t\t\t];\n\t\t\t\tlist.push(path.join('/'));\n\t\t\t\t// } else {\n\t\t\t\t// \tconst labelled = nodeClassOrLabelled as ExampleRelatedNodeWithLabel;\n\t\t\t\t// \tconst label = labelled.label;\n\t\t\t\t// \tconst nodeClass = labelled.node;\n\t\t\t\t// \tconst path: string[] = [ExamplePrefix.BY_NODE, nodeClass.context(), nodeClass.type(), label];\n\t\t\t\t// \tlist.push(path.join('/'));\n\t\t\t\t// }\n\t\t\t}\n\t\t}\n\t\tif (this._options.categories) {\n\t\t\tfor (let categoryOrWithLabel of this._options.categories) {\n\t\t\t\tif (CoreType.isString(categoryOrWithLabel)) {\n\t\t\t\t\tconst category = categoryOrWithLabel as ExampleCategory;\n\t\t\t\t\tconst path: string[] = [ExamplePrefix.BY_CATEGORY, category, this.shortName()];\n\t\t\t\t\tlist.push(path.join('/'));\n\t\t\t\t} else {\n\t\t\t\t\tconst categoryWithlabel = categoryOrWithLabel as ExampleCategoryWithLabel;\n\t\t\t\t\tconst path: string[] = [\n\t\t\t\t\t\tExamplePrefix.BY_CATEGORY,\n\t\t\t\t\t\tcategoryWithlabel.category,\n\t\t\t\t\t\tcategoryWithlabel.label,\n\t\t\t\t\t];\n\t\t\t\t\tlist.push(path.join('/'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn list;\n\t}\n\tlabel() {\n\t\treturn this._options.label || this.shortName();\n\t}\n\tasync data(options: DataCallbackOptions) {\n\t\tconst {createData} = await this._options.createData();\n\t\treturn createData(options);\n\t}\n\trelatedNodeContextAndTypes() {\n\t\treturn this._options?.relatedNodeContextAndTypes;\n\t\t// const list = this._options?.relatedNodes;\n\t\t// return list?.map((nodeClassOrLabelled) => {\n\t\t// \tconst type = (nodeClassOrLabelled as typeof BaseNodeClass).type;\n\t\t// \tif (type != null) {\n\t\t// \t\treturn nodeClassOrLabelled as typeof BaseNodeClass;\n\t\t// \t} else {\n\t\t// \t\treturn (nodeClassOrLabelled as ExampleRelatedNodeWithLabel).node;\n\t\t// \t}\n\t\t// });\n\t}\n\tcategories(): ExampleCategory[] | undefined {\n\t\treturn this._options?.categories?.map((categoryOrWithLabel) => {\n\t\t\tif (CoreType.isString(categoryOrWithLabel)) {\n\t\t\t\treturn categoryOrWithLabel as ExampleCategory;\n\t\t\t} else {\n\t\t\t\treturn (categoryOrWithLabel as ExampleCategoryWithLabel).category;\n\t\t\t}\n\t\t});\n\t}\n\trelatedExpressionTypes() {\n\t\treturn this._options?.relatedExpressionTypes;\n\t}\n\t// label() {\n\t// \treturn this._options?.label || this.name();\n\t// }\n\t// hasThumbnail() {\n\t// \treturn this._options?.thumbnail || false;\n\t// }\n}\n","import {ExampleCategory, exampleNameToId, ExampleOptions, ExamplePrefix} from './Common';\nimport {Example} from './Example';\nimport {examplePath, exampleUrl} from '../../routes';\nimport {\n\tCameraSopNodeType,\n\tNetworkNodeType,\n\tNodeContext,\n} from '../../../@polygonjs/polygonjs/src/engine/poly/NodeContext';\nimport {MapUtils} from '../../../@polygonjs/polygonjs/src/core/MapUtils';\nimport {ExpressionType} from '../../../@polygonjs/polygonjs/src/engine/expressions/methods/Common';\nimport {CameraNodeType} from '../../../@polygonjs/polygonjs/src/engine/poly/NodeContext';\nimport {JsType} from '../../../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Js';\nimport {AnimType} from '../../../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Anim';\nimport {GlType} from '../../../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Gl';\nimport {MatType} from '../../../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Mat';\nimport {RopType} from '../../../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Rop';\nimport {SopType, SopTypeFile} from '../../../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Sop';\nimport {CopType} from '../../../@polygonjs/polygonjs/src/engine/poly/registers/nodes/types/Cop';\n\nexport class ExamplesRegisterClass {\n\tprivate _examplesByName: Map<string, Example> = new Map();\n\tprivate _examplesByPath: Map<string, Example> = new Map();\n\tprivate _examplesById: Map<string, Example> = new Map();\n\tprivate _examplesByNodeTypeByContext: Map<NodeContext, Map<string, Example[]>> = new Map();\n\tprivate _examplesByCategory: Map<ExampleCategory, Example[]> = new Map();\n\tprivate _examplesByExpression: Map<ExpressionType, Example[]> = new Map();\n\tprivate static _instance: ExamplesRegisterClass;\n\tstatic instance() {\n\t\treturn (this._instance = this._instance || new ExamplesRegisterClass());\n\t}\n\tprivate constructor() {\n\t\t//\n\t\t//\n\t\t// actor\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/actor/AnimationMixer/onScenePlay`,\n\t\t\tcategories: [ExampleCategory.STATE_AND_EVENTS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.JS, type: JsType.ON_SCENE_PLAY}],\n\t\t\tlabel: 'Animate On Play',\n\t\t\tcreateData: () => import('./examples/actor/AnimationMixer_onScenePlay'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/actor/OnObjectAttributeUpdate/cameraNavigation`,\n\t\t\tcategories: [ExampleCategory.STATE_AND_EVENTS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.JS, type: JsType.ON_OBJECT_ATTRIBUTE_UPDATE}],\n\t\t\tcreateData: () => import('./examples/actor/OnObjectAttributeUpdate'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/actor/setObjectLookAt/camera`,\n\t\t\tcategories: [ExampleCategory.STATE_AND_EVENTS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.JS, type: JsType.SET_OBJECT_LOOK_AT}],\n\t\t\tlabel: 'Objects Look At Camera',\n\t\t\tcreateData: () => import('./examples/actor/SetObjectLookAt_camera'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/actor/setObjectLookAt/cursor`,\n\t\t\tcategories: [ExampleCategory.STATE_AND_EVENTS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.JS, type: JsType.SET_OBJECT_LOOK_AT}],\n\t\t\tlabel: 'Objects Look At Cursor',\n\t\t\tcreateData: () => import('./examples/actor/SetObjectLookAt_cursor'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.COMPUTER_VISION}/${ExampleCategory.PHYSICS}`,\n\t\t\tcategories: [ExampleCategory.PHYSICS, ExampleCategory.COMPUTER_VISION],\n\t\t\tcreateData: () => import('./examples/actor/TrackHand_physics'),\n\t\t});\n\n\t\t//\n\t\t//\n\t\t// anim\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/anim/easing`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.ANIM, type: AnimType.EASING}],\n\t\t\tcategories: [ExampleCategory.ANIMATION],\n\t\t\tcreateData: () => import('./examples/anim/Easing'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/anim/target/Animate Nodes`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.ANIM, type: AnimType.TARGET}],\n\t\t\tcategories: [ExampleCategory.ANIMATION],\n\t\t\tcreateData: () => import('./examples/anim/Target.Node'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/anim/target/Animate Scene Graph`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.ANIM, type: AnimType.TARGET}],\n\t\t\tcategories: [ExampleCategory.ANIMATION],\n\t\t\tcreateData: () => import('./examples/anim/Target.SceneGraph'),\n\t\t});\n\n\t\t//\n\t\t//\n\t\t// mat\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/lineBasic`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.LINE_BASIC}],\n\t\t\tcreateData: () => import('./examples/mat/LineBasic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.CUSTOM_MATERIALS}/grass`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.LINE_BASIC_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/LineBasicBuilder_grass'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshBasic`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_BASIC}],\n\t\t\tcreateData: () => import('./examples/mat/MeshBasic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshBasicBuilder/blink_multiple`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_BASIC_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/MeshBasicBuilder_blink_multiple'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.CUSTOM_MATERIALS}/blink_on_hover_with_instances`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_BASIC_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/MeshBasicBuilder_blink_on_hover_with_instances'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\t// name: `${ExamplePrefix.BY_NODE}/mat/meshBasicBuilder/blink_on_hover_with_separate_objects`,\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.CUSTOM_MATERIALS}/blink_on_hover_with_separate_objects`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.JS, type: JsType.ON_OBJECT_HOVER}],\n\t\t\tcreateData: () => import('./examples/mat/MeshBasicBuilder_blink_on_hover_with_instances'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshBasicBuilder/blink_single`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_BASIC_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/MeshBasicBuilder_blink_single'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.CUSTOM_MATERIALS}/texture_transition`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.MAT, type: MatType.MESH_BASIC_BUILDER},\n\t\t\t\t{context: NodeContext.GL, type: GlType.NOISE},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/mat/MeshBasicBuilder_texture_transition'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshLambert`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_LAMBERT}],\n\t\t\tcreateData: () => import('./examples/mat/MeshLambert'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshMatcap`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_MATCAP}],\n\t\t\tcreateData: () => import('./examples/mat/MeshMatcap'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshNormal`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_NORMAL}],\n\t\t\tcreateData: () => import('./examples/mat/MeshNormal'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshPhong`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_PHONG}],\n\t\t\tcreateData: () => import('./examples/mat/MeshPhong'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshPhysical`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_PHYSICAL}],\n\t\t\tcreateData: () => import('./examples/mat/MeshPhysical'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.CUSTOM_MATERIALS}/transmission_animation`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_PHYSICAL_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/MeshPhysicalBuilder_tranmission_animation'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshStandard`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_STANDARD}],\n\t\t\tcreateData: () => import('./examples/mat/MeshStandard'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.CUSTOM_MATERIALS}/texture_distortion`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_STANDARD_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/MeshStandardBuilder_texture_distortion'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshToon`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_TOON}],\n\t\t\tcreateData: () => import('./examples/mat/MeshToon'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/points`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.POINTS}],\n\t\t\tcreateData: () => import('./examples/mat/Points'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/rayMarchingBuilder/usingAreaLights`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER},\n\t\t\t\t{context: NodeContext.MAT, type: MatType.MESH_STANDARD_BUILDER},\n\t\t\t\t{context: NodeContext.MAT, type: MatType.MESH_BASIC_BUILDER},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_areaLights'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/rayMarchingBuilder/multishapes`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER},\n\t\t\t\t{context: NodeContext.MAT, type: MatType.MESH_BASIC_BUILDER},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_multishapes'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/rayMarchingBuilder/primitives`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_primitives'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/rayMarchingBuilder/reflections`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_reflections'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/rayMarchingBuilder/refractions`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER},\n\t\t\t\t{context: NodeContext.JS, type: JsType.ON_PERFORMANCE_CHANGE},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_refractions'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/rayMarchingBuilder/SDFFromObject`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_SDFFromObject'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.CUSTOM_MATERIALS}/raymarchingShadows`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_shadows'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.AR}/${ExampleCategory.CUSTOM_MATERIALS}/raymarching`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS, ExampleCategory.AR],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.RAY_MARCHING_BUILDER}],\n\t\t\tcreateData: () => import('./examples/mat/RayMarchingBuilder_WebXRAR'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/shadow`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.SHADOW}],\n\t\t\tcreateData: () => import('./examples/mat/Shadow'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/sky`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.SKY}],\n\t\t\tcreateData: () => import('./examples/mat/Sky'),\n\t\t});\n\n\t\t//\n\t\t//\n\t\t// sop\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/add/Create Line`,\n\t\t\tcreateData: () => import('./examples/sop/Add.createLine'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/add/Create Points`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.ADD}],\n\t\t\tcreateData: () => import('./examples/sop/Add'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/attribAddMult`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.ATTRIB_ADD_MULT}],\n\t\t\tcreateData: () => import('./examples/sop/AttribAddMult'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/attribCopy`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.ATTRIB_COPY}],\n\t\t\tcreateData: () => import('./examples/sop/AttribCopy'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/attribCreate`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.ATTRIB_CREATE}],\n\t\t\tcreateData: () => import('./examples/sop/AttribCreate'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/blend`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.BLEND}],\n\t\t\tcreateData: () => import('./examples/sop/Blend'),\n\t\t});\n\t\t// this._registerAsync({\n\t\t// \tname: `${ExamplePrefix.BY_NODE}/sop/blend`,\n\t\t// \trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.BLEND}],\n\t\t// \tcreateData: () => import('./examples/sop/Blend'),\n\t\t// });\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/box`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.BOX}],\n\t\t\tcreateData: () => import('./examples/sop/Box'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.AR}/basic`,\n\t\t\tcategories: [ExampleCategory.AR],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: CameraSopNodeType.WEBXR_AR}],\n\t\t\tcreateData: () => import('./examples/sop/CameraWebXRAR.basic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.AR}/controllerRay`,\n\t\t\tcategories: [ExampleCategory.AR],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: CameraSopNodeType.WEBXR_AR}],\n\t\t\tcreateData: () => import('./examples/sop/CameraWebXRAR.controllerRay'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.AR}/controllerRay2`,\n\t\t\tcategories: [ExampleCategory.AR],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: CameraSopNodeType.WEBXR_AR}],\n\t\t\tcreateData: () => import('./examples/sop/CameraWebXRAR.controllerRay2'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.VR}/basic`,\n\t\t\tcategories: [ExampleCategory.VR],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: CameraSopNodeType.WEBXR_VR}],\n\t\t\tcreateData: () => import('./examples/sop/CameraWebXRVR.basic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/copy/materialsAndTextures`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.COPY}],\n\t\t\tcreateData: () => import('./examples/sop/Copy_materialsAndTextures'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/instancing/stairsAreFun/stairCaseFPS`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.COPY}],\n\t\t\tcreateData: () => import('./examples/sop/Copy_stairCaseFPS'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/instancing/stairsAreFun/stairCaseMultiple`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.COPY}],\n\t\t\tcreateData: () => import('./examples/sop/Copy_stairCaseMultiple'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/instancing/stairsAreFun/stairCaseSimple`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.COPY}],\n\t\t\tcreateData: () => import('./examples/sop/Copy_stairCaseSimple'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/copy/withTemplateAttributes`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.COPY}],\n\t\t\tcreateData: () => import('./examples/sop/Copy_withTemplateAttributes'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/CSS2DObject/basic`,\n\t\t\tcategories: [ExampleCategory.HTML_IN_3D],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CSS2D_OBJECT},\n\t\t\t\t{context: NodeContext.ROP, type: RopType.CSS2D},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/sop/CSS2DObject_basic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/CSS2DObject/clickable`,\n\t\t\tcategories: [ExampleCategory.HTML_IN_3D],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CSS2D_OBJECT},\n\t\t\t\t{context: NodeContext.ROP, type: RopType.CSS2D},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/sop/CSS2DObject_clickable'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/CSS3DObject/basic`,\n\t\t\tcategories: [{category: ExampleCategory.HTML_IN_3D, label: 'basic 3D'}],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CSS3D_OBJECT},\n\t\t\t\t{context: NodeContext.ROP, type: RopType.CSS3D},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/sop/CSS3DObject_basic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/data/advanced`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.DATA}],\n\t\t\tcreateData: () => import('./examples/sop/Data_advanced'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/data/advancedWithCopy`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.DATA}],\n\t\t\tcreateData: () => import('./examples/sop/Data_advancedWithCopy'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/data/basic`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.DATA}],\n\t\t\tcreateData: () => import('./examples/sop/Data_basic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/dataUrl`,\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.DATA_URL}],\n\t\t\tcreateData: () => import('./examples/sop/DataUrl'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/Decompose/basic`,\n\t\t\tlabel: 'Edit Materials After Import',\n\t\t\tcategories: [ExampleCategory.ASSETS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: NetworkNodeType.DECOMPOSE}],\n\t\t\tcreateData: () => import('./examples/sop/Decompose_basic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/file`,\n\t\t\tcategories: [ExampleCategory.ASSETS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopTypeFile.FILE_OBJ}],\n\t\t\tcreateData: () => import('./examples/sop/File'),\n\t\t});\n\t\t// this._registerAsync({\n\t\t// \tname: `${ExamplePrefix.BY_NODE}/sop/fileIFC`,\n\t\t// \tlabel: 'IFC',\n\t\t// \tcategories: [ExampleCategory.ASSETS],\n\t\t// \trelatedNodeContextAndTypes: [\n\t\t// \t\t{context: NodeContext.SOP, type: SopTypeFile.FILE_IFC},\n\t\t// \t\t{context: NodeContext.SOP, type: SopType.IFC_FILTER_CATEGORIES},\n\t\t// \t],\n\t\t// \tcreateData: () => import('./examples/sop/FileIFC'),\n\t\t// });\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/fileGEOJSON`,\n\t\t\tlabel: 'GEOJSON',\n\t\t\tcategories: [ExampleCategory.ASSETS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopTypeFile.FILE_GEOJSON}],\n\t\t\tcreateData: () => import('./examples/sop/FileGEOJSON'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/instance/withTemplateAttributes`,\n\t\t\tlabel: 'With Template Attributes',\n\t\t\tcategories: [{category: ExampleCategory.INSTANCING, label: 'withTemplateAttributes (instances)'}],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.INSTANCE}],\n\t\t\tcreateData: () => import('./examples/sop/Instance_withTemplateAttributes'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/instance`,\n\t\t\tlabel: 'Basic',\n\t\t\tcategories: [ExampleCategory.INSTANCING],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.INSTANCE}],\n\t\t\tcreateData: () => import('./examples/sop/Instance'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.MAPS}/basic`,\n\t\t\tcategories: [ExampleCategory.MAPS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: CameraNodeType.MAPBOX},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.MAPBOX_TRANSFORM},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/sop/MapboxCamera.basic'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.MAPS}/html2D`,\n\t\t\tcategories: [ExampleCategory.MAPS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: CameraNodeType.MAPBOX},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.MAPBOX_TRANSFORM},\n\t\t\t\t{context: NodeContext.ROP, type: RopType.CSS2D},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/sop/MapboxCamera.html2D'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/noise`,\n\t\t\t// categories: [ExampleCategory.EFFECTS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.NOISE}],\n\t\t\tcreateData: () => import('./examples/sop/Noise'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.EFFECTS}/Particles/polygonjsLogo`,\n\t\t\tcategories: [ExampleCategory.EFFECTS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.PARTICLES_SYSTEM_GPU}],\n\t\t\tcreateData: () => import('./examples/sop/ParticlesSystemGPU_polygonjsLogo'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/actor/setObjectLookAt/ClickedObject`,\n\t\t\tcategories: [ExampleCategory.STATE_AND_EVENTS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: CameraNodeType.PERSPECTIVE},\n\t\t\t\t{context: NodeContext.JS, type: JsType.SET_OBJECT_LOOK_AT},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/sop/PerspectiveCamera_lookAtClickedObject'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/roundedBox`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.ROUNDED_BOX}],\n\t\t\tcreateData: () => import('./examples/sop/RoundedBox'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/sphere/icosahedron`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.SPHERE}],\n\t\t\tcreateData: () => import('./examples/sop/Sphere.icosahedron'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/sphere/default`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.SPHERE}],\n\t\t\tcreateData: () => import('./examples/sop/Sphere'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/subdivide`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.SUBDIVIDE}],\n\t\t\tcreateData: () => import('./examples/sop/Subdivide'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/switch`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.SWITCH}],\n\t\t\tcreateData: () => import('./examples/sop/Switch'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/tetrahedron`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.TETRAHEDRON}],\n\t\t\tcreateData: () => import('./examples/sop/Tetrahedron'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/torus`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.TORUS}],\n\t\t\tcreateData: () => import('./examples/sop/Torus'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/torusKnot`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.TORUS_KNOT}],\n\t\t\tcreateData: () => import('./examples/sop/TorusKnot'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/sop/uvUnwrap`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.SOP, type: SopType.UV_UNWRAP}],\n\t\t\tcreateData: () => import('./examples/sop/UvUnwrap'),\n\t\t});\n\n\t\t// this._register(sopAddCreateLine);\n\t\t// this._register(sopAdd);\n\t\t// this._register(sopAttribAddMult);\n\t\t// this._register(sopAttribCopy);\n\t\t// this._register(sopAttribCreate);\n\t\t// this._register(sopBlend);\n\t\t// this._register(sopBox);\n\t\t// this._register(sopCameraWebXRAR_basic);\n\t\t// this._register(sopCameraWebXRAR_controllerRay);\n\t\t// this._register(sopCameraWebXRAR_controllerRay2);\n\t\t// this._register(sopCameraWebXRVR_basic);\n\t\t// this._register(sopCopy_materialsAndTextures);\n\t\t// this._register(sopCopy_stairCaseFPS);\n\t\t// this._register(sopCopy_stairCaseMultiple);\n\t\t// this._register(sopCopy_stairCaseSimple);\n\t\t// this._register(sopCopy_withTemplateAttributes);\n\t\t// this._register(sopCSS2DObject_basic);\n\t\t// this._register(sopCSS2DObject_clickable);\n\t\t// this._register(sopCSS3DObject_basic);\n\t\t// this._register(sopData_basic);\n\t\t// this._register(sopData_advanced);\n\t\t// this._register(sopData_advancedWithCopy);\n\t\t// this._register(sopDataUrl);\n\t\t// this._register(sopDecompose_basic);\n\t\t// this._register(sopFile);\n\t\t// this._register(sopFileGEOJSON);\n\t\t// this._register(sopInstance);\n\t\t// this._register(sopInstance_withTemplateAttributes);\n\t\t// this._register(sopMapboxCamera_basic);\n\t\t// this._register(sopMapboxCamera_HTML2D);\n\t\t// this._register(sopNoise);\n\t\t// this._register(sopParticlesSystemGPU_polygonjsLogo);\n\t\t// this._register(sopPerspectiveCamera_lookAtClickedObject);\n\t\t// this._register(sopRoundedBox);\n\t\t// this._register(sopSphereIcosahedron);\n\t\t// this._register(sopSphere);\n\t\t// this._register(sopSubdivide);\n\t\t// this._register(sopSwitch);\n\t\t// this._register(sopTetrahedron);\n\t\t// this._register(sopTorus);\n\t\t// this._register(sopTorusKnot);\n\t\t// this._register(sopUvUnwrap);\n\n\t\t//\n\t\t//\n\t\t// expressions\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExamplePrefix.USING_EXPRESSIONS}/bbox`,\n\t\t\trelatedExpressionTypes: [ExpressionType.bbox],\n\t\t\tcreateData: () => import('./examples/expressions/bbox'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExamplePrefix.USING_EXPRESSIONS}/centroid`,\n\t\t\trelatedExpressionTypes: [ExpressionType.centroid],\n\t\t\tcreateData: () => import('./examples/expressions/centroid'),\n\t\t});\n\n\t\t//\n\t\t//\n\t\t// advanced\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_NODE}/mat/meshBasicBuilder/CornellBoxLightMaps`,\n\t\t\tlabel: `CornellBoxLightMaps`,\n\t\t\tcategories: [ExampleCategory.CUSTOM_MATERIALS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.MAT, type: MatType.MESH_BASIC_BUILDER}],\n\t\t\tcreateData: () => import('./examples/advanced/CornellBoxLightMaps'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.EFFECTS}/PsychedelicCar`,\n\t\t\tlabel: `PsychedelicCar`,\n\t\t\tcategories: [ExampleCategory.EFFECTS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.MATERIAL},\n\t\t\t\t{context: NodeContext.MAT, type: MatType.MESH_STANDARD_BUILDER},\n\t\t\t\t{context: NodeContext.MAT, type: MatType.MESH_PHYSICAL_BUILDER},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/advanced/PsychedelicCar'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.EFFECTS}/TubesFlowingOnCurves`,\n\t\t\tcategories: [ExampleCategory.EFFECTS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.COPY},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CURVE_FROM_POINTS},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.POLYWIRE},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.RAY},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/advanced/TubesFlowingOnCurves'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.EFFECTS}/Portal`,\n\t\t\tcategories: [ExampleCategory.EFFECTS],\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.COP, type: CopType.RENDER}],\n\t\t\tcreateData: () => import('./examples/advanced/Portal'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.EFFECTS}/VertexAnimationTexture`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.GL, type: GlType.VERTEX_ANIMATION_TEXTURE}],\n\t\t\tcategories: [ExampleCategory.ANIMATION, ExampleCategory.EFFECTS],\n\t\t\tcreateData: () => import('./examples/advanced/VertexAnimationTexture_simple'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.EFFECTS}/lightMap`,\n\t\t\trelatedNodeContextAndTypes: [{context: NodeContext.COP, type: CopType.LIGHT_MAP}],\n\t\t\tcategories: [ExampleCategory.RENDER, ExampleCategory.EFFECTS],\n\t\t\tcreateData: () => import('./examples/advanced/LightMap'),\n\t\t});\n\t\t//\n\t\t//\n\t\t// physics\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.PHYSICS}/RBDAttractorCursor`,\n\t\t\tcategories: [ExampleCategory.PHYSICS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.COPY},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CURVE_FROM_POINTS},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.PHYSICS_RBD_ATTRIBUTES},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.PHYSICS_WORLD},\n\t\t\t\t{context: NodeContext.JS, type: JsType.SET_PHYSICS_RBD_POSITION},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/physics/PhysicsRBDAttractorCursor'),\n\t\t});\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.PHYSICS}/basics`,\n\t\t\tcategories: [ExampleCategory.PHYSICS],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.COPY},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CURVE_FROM_POINTS},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.PHYSICS_RBD_ATTRIBUTES},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.PHYSICS_WORLD},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.PHYSICS_GROUND},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/physics/PhysicsRBDSimple'),\n\t\t});\n\t\t//\n\t\t//\n\t\t// CAD\n\t\t//\n\t\t//\n\t\tthis._registerAsync({\n\t\t\tname: `${ExamplePrefix.BY_CATEGORY}/${ExampleCategory.MODELING}/CAD_basics`,\n\t\t\tcategories: [ExampleCategory.MODELING],\n\t\t\trelatedNodeContextAndTypes: [\n\t\t\t\t{context: NodeContext.SOP, type: SopType.COPY},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CAD_BOX},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CAD_BOOLEAN},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CAD_FILLET},\n\t\t\t\t{context: NodeContext.SOP, type: SopType.CAD_GROUP},\n\t\t\t],\n\t\t\tcreateData: () => import('./examples/sop/CAD_fillet'),\n\t\t});\n\t}\n\n\t// private _register(examples: Example | Array<Example>) {\n\t// \tif (CoreType.isArray(examples)) {\n\t// \t\tfor (let example of examples) {\n\t// \t\t\tthis._registerExample(example);\n\t// \t\t}\n\t// \t} else {\n\t// \t\tthis._registerExample(examples);\n\t// \t}\n\t// }\n\tprivate _registerAsync(examplesOptions: ExampleOptions) {\n\t\tconst example = new Example(examplesOptions);\n\t\tthis._registerExample(example);\n\t}\n\tprivate _registerExample(example: Example) {\n\t\t// by name\n\t\tconst exampleName = example.name();\n\t\tconst existingExample = this._examplesByName.get(exampleName);\n\t\tif (existingExample) {\n\t\t\tconsole.error(`example name already registered:${exampleName}`);\n\t\t\treturn;\n\t\t}\n\t\tthis._examplesByName.set(exampleName, example);\n\n\t\t// by id\n\t\tconst exampleId = example.id();\n\t\tif (this._examplesById.has(exampleId)) {\n\t\t\tconsole.warn(`example id already registered:${exampleId}`);\n\t\t\treturn;\n\t\t}\n\t\tthis._examplesById.set(exampleId, example);\n\n\t\t// by path\n\t\tconst examplePaths = example.paths();\n\t\tfor (let examplePath of examplePaths) {\n\t\t\tif (this._examplesByPath.has(examplePath)) {\n\t\t\t\tconsole.warn(`example path already registered:${examplePath}`);\n\t\t\t\tconsole.log('previously registered:', this._examplesByPath.get(examplePath)?.name());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._examplesByPath.set(examplePath, example);\n\t\t}\n\n\t\t// register by related nodes\n\t\tconst relatedNodeContextAndTypes = example.relatedNodeContextAndTypes();\n\t\tif (relatedNodeContextAndTypes) {\n\t\t\tfor (let relatedNode of relatedNodeContextAndTypes) {\n\t\t\t\tconst {context, type} = relatedNode;\n\t\t\t\tlet contextMap = this._examplesByNodeTypeByContext.get(context);\n\t\t\t\tif (!contextMap) {\n\t\t\t\t\tcontextMap = new Map();\n\t\t\t\t\tthis._examplesByNodeTypeByContext.set(context, contextMap);\n\t\t\t\t}\n\t\t\t\tMapUtils.pushOnArrayAtEntry(contextMap, type.toLowerCase(), example);\n\t\t\t}\n\t\t}\n\t\t// register by category\n\t\tconst categories = example.categories();\n\t\tif (categories) {\n\t\t\tfor (let category of categories) {\n\t\t\t\tMapUtils.pushOnArrayAtEntry(this._examplesByCategory, category, example);\n\t\t\t}\n\t\t}\n\t\t// register by related expressions\n\t\tconst relatedExpressionTypes = example.relatedExpressionTypes();\n\t\tif (relatedExpressionTypes) {\n\t\t\tfor (let relatedExpressionType of relatedExpressionTypes) {\n\t\t\t\tMapUtils.pushOnArrayAtEntry(this._examplesByExpression, relatedExpressionType, example);\n\t\t\t}\n\t\t}\n\t}\n\tnames() {\n\t\tconst list: string[] = [];\n\t\tthis._examplesByName.forEach((_, exampleName) => list.push(exampleName));\n\t\treturn list;\n\t}\n\tpaths() {\n\t\tconst list: string[] = [];\n\t\tthis._examplesByPath.forEach((_, examplePath) => list.push(examplePath));\n\t\treturn list;\n\t}\n\tprivate _exampleFromName(exampleName: string) {\n\t\tconst example =\n\t\t\tthis.exampleFromName(exampleName) ||\n\t\t\tthis.exampleFromId(exampleNameToId(exampleName)) ||\n\t\t\tthis.exampleFromPath(exampleName);\n\t\tif (!example) {\n\t\t\tconsole.log('no url found from example name', exampleName);\n\t\t\treturn;\n\t\t}\n\t\treturn example;\n\t}\n\troute(exampleName: string) {\n\t\tconst example = this._exampleFromName(exampleName);\n\t\tif (!example) {\n\t\t\tconsole.log('no url found from example name', exampleName);\n\t\t\treturn;\n\t\t}\n\t\tconst exampleId = example.id();\n\t\treturn examplePath(exampleId);\n\t\t// const localEditorUrl = window.location.origin;\n\t\t// // web editor url should be accessible for non registered users\n\t\t// const webEditorUrl = `${window.location.origin}/demo`;\n\t\t// const rootUrl = Editor.type() == EditorType.LOCAL ? localEditorUrl : webEditorUrl;\n\t\t// const url = `${rootUrl}?${EXAMPLES_REGISTER_URL_PARAM_NAME}=${exampleId}`;\n\t\t// return url;\n\t}\n\turl(exampleName: string) {\n\t\tconst example = this._exampleFromName(exampleName);\n\t\tif (!example) {\n\t\t\tconsole.log('no url found from example name', exampleName);\n\t\t\treturn;\n\t\t}\n\t\tconst exampleId = example.id();\n\t\treturn exampleUrl(exampleId);\n\t}\n\texampleFromName(exampleName: string) {\n\t\treturn this._examplesByName.get(exampleName);\n\t}\n\texampleFromPath(examplePath: string) {\n\t\treturn this._examplesByPath.get(examplePath);\n\t}\n\texampleFromId(exampleId: string) {\n\t\treturn this._examplesById.get(exampleId);\n\t}\n\texamplesFromNode(context: NodeContext, type: string): Example[] | undefined {\n\t\treturn this._examplesByNodeTypeByContext.get(context)?.get(type.toLowerCase());\n\t}\n\texamplesFromCategory(category: ExampleCategory): Example[] | undefined {\n\t\treturn this._examplesByCategory.get(category);\n\t}\n\texamplesFromExpression(expressionName: ExpressionType): Example[] | undefined {\n\t\treturn this._examplesByExpression.get(expressionName);\n\t}\n}\nexport const __ExamplesRegister__ = ExamplesRegisterClass.instance();\n"],"names":["ExpressionType","MatType","examplePath"],"sourceRoot":""}