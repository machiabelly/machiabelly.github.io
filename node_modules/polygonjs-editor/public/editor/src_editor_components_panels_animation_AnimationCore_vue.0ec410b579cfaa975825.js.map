{"version":3,"file":"src_editor_components_panels_animation_AnimationCore_vue.0ec410b579cfaa975825.js","mappings":"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","sources":["webpack:///../node_modules/@heroicons/vue/24/outline/ChevronDownIcon.js","webpack:///../node_modules/@heroicons/vue/24/outline/ChevronUpIcon.js","webpack:///../node_modules/@heroicons/vue/24/outline/EyeIcon.js","webpack:///../node_modules/@heroicons/vue/24/outline/EyeSlashIcon.js","webpack:///../node_modules/@heroicons/vue/24/outline/MinusIcon.js","webpack:///../node_modules/@heroicons/vue/24/outline/PlusIcon.js","webpack:///../node_modules/@heroicons/vue/24/outline/TrashIcon.js","webpack:///../@polygonjs/polygonjs/src/core/keyframes/channel/Cubic.ts","webpack:///../@polygonjs/polygonjs/src/core/keyframes/channel/Linear.ts","webpack:///../@polygonjs/polygonjs/src/core/keyframes/Channel.ts","webpack:///../@polygonjs/polygonjs/src/core/render/CSSRenderers/CSS2DRenderer.ts","webpack:///../src/editor/components/panels/animation/mixins/LayoutData.ts","webpack:///../src/editor/components/panels/animation/AnimationCore.vue","webpack:///../src/editor/components/panels/animation/AnimationCore.vue?34b6","webpack:///../src/editor/components/panels/animation/mixins/EventKey.ts","webpack:///../src/editor/components/panels/animation/mixins/EventMouse.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/glsl/keyframePositionHandle.vert.glsl","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/glsl/keyframePositionHandle.frag.glsl","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/glsl/keyframeTangentLine.vert.glsl","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/glsl/keyframeTangentLine.frag.glsl","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/common/Constant.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/objects/SegmentCurve.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/elements/SegmentHandler.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/objects/_Base.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/objects/KeyframeHandleValue.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/objects/KeyframeHandlePosition.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/common/Utils.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/objects/KeyframeTangentLine.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/objects/KeyframeTangentDot.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/elements/KeyframeHandler.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/elements/ChannelHandler.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/elements/NodeHandler.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/EventsController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/KeyframeEditorRaycast.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/KeyframeEditorObjectsController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/BackgroundGridController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/_BaseActionController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/SelectionController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/CameraPanController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/CameraZoomController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframePositionController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeValueController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeTangentAngleController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeTangentEndController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeDeleteController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeCreateController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeTangentSplitController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeTangentMergeController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/ChannelInterpolationController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/KeyframeTangentSetController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/CopyPasteController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/CameraFrameController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/actions/CurrentTimeController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/ActionsController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/controllers/CurrentTimeController.ts","webpack:///../src/editor/components/panels/animation/keyframeEditorSceneController/KeyframeEditorSceneController.ts","webpack:///../src/editor/components/panels/animation/mixins/SetupForm.ts","webpack:///../src/editor/components/panels/animation/mixins/SetupFormInterpolation.ts","webpack:///../src/editor/components/panels/animation/mixins/SetupButtons.ts","webpack:///../src/editor/components/panels/animation/AnimationCore.vue?2f47","webpack:///../src/editor/components/panels/animation/AnimationCore.vue?12a3"],"sourcesContent":["const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = require(\"vue\")\n\nmodule.exports = function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n    })\n  ]))\n}","const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = require(\"vue\")\n\nmodule.exports = function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M4.5 15.75l7.5-7.5 7.5 7.5\"\n    })\n  ]))\n}","const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = require(\"vue\")\n\nmodule.exports = function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z\"\n    }),\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n    })\n  ]))\n}","const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = require(\"vue\")\n\nmodule.exports = function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.242 4.242L9.88 9.88\"\n    })\n  ]))\n}","const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = require(\"vue\")\n\nmodule.exports = function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M19.5 12h-15\"\n    })\n  ]))\n}","const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = require(\"vue\")\n\nmodule.exports = function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M12 4.5v15m7.5-7.5h-15\"\n    })\n  ]))\n}","const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = require(\"vue\")\n\nmodule.exports = function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n    })\n  ]))\n}","import {CubicBezierCurve, Vector2} from 'three';\nimport {KeyframeData, SearchRange, SetCurveCallback} from '../KeyframeCommon';\nimport {keyframeTangentToEndPoint} from '../KeyframeTangent';\n\nconst _v2 = new Vector2();\nconst _endPt0 = new Vector2();\nconst _endPt1 = new Vector2();\nexport const curve = new CubicBezierCurve(new Vector2(), new Vector2(), new Vector2(), new Vector2());\n\nexport const setCurveFromKeyframePairCubic: SetCurveCallback = (\n\tkeyframeStart: KeyframeData,\n\tkeyframeEnd: KeyframeData\n) => {\n\tkeyframeTangentToEndPoint(keyframeStart, false, _endPt0);\n\tkeyframeTangentToEndPoint(keyframeEnd, true, _endPt1);\n\t// keyframe 1\n\tcurve.v0.x = keyframeStart.pos;\n\tcurve.v0.y = keyframeStart.value;\n\tcurve.v1.x = keyframeStart.pos + _endPt0.x;\n\tcurve.v1.y = keyframeStart.value + _endPt0.y;\n\t// keyframe 2\n\tcurve.v3.x = keyframeEnd.pos;\n\tcurve.v3.y = keyframeEnd.value;\n\tcurve.v2.x = keyframeEnd.pos - _endPt1.x;\n\tcurve.v2.y = keyframeEnd.value - _endPt1.y;\n};\n\nfunction getX(t: number, curve: CubicBezierCurve) {\n\tcurve.getPoint(t, _v2);\n\treturn _v2.x;\n}\n\nconst MAX_ITERATIONS = 500;\nconst EPSILON = 1e-6;\nconst range: SearchRange = {min: 0, max: 1};\nfunction findTForXCubic(expectedX: number) {\n\tconst curveStartPos = curve.v0.x;\n\tconst curveEndPos = curve.v3.x;\n\trange.min = curveStartPos;\n\trange.max = curveEndPos;\n\n\tfunction _normalizePos(_pos: number) {\n\t\treturn (_pos - curveStartPos) / (curveEndPos - curveStartPos);\n\t}\n\n\tlet currentX = expectedX;\n\n\tfor (let iteration = 0; iteration < MAX_ITERATIONS; iteration++) {\n\t\tconst foundX = getX(_normalizePos(currentX), curve);\n\t\tconst delta = foundX - expectedX;\n\t\tif (Math.abs(delta) < EPSILON) {\n\t\t\treturn _normalizePos(currentX);\n\t\t}\n\t\tif (foundX < expectedX) {\n\t\t\trange.min = currentX;\n\t\t\tcurrentX = (range.max + currentX) / 2;\n\t\t} else {\n\t\t\trange.max = currentX;\n\t\t\tcurrentX = (range.min + currentX) / 2;\n\t\t}\n\t}\n\treturn _normalizePos(currentX);\n}\n\nexport function getValueCubic(pos: number): number {\n\tconst t = findTForXCubic(pos);\n\tcurve.getPoint(t, _v2);\n\treturn _v2.y;\n}\n","import {LineCurve, Vector2} from 'three';\nimport {KeyframeData, SetCurveCallback} from '../KeyframeCommon';\n\nexport const curve = new LineCurve(new Vector2(), new Vector2());\n\nexport const setCurveFromKeyframePairLinear: SetCurveCallback = (\n\tkeyframeStart: KeyframeData,\n\tkeyframeEnd: KeyframeData\n) => {\n\t// keyframe 1\n\tcurve.v1.x = keyframeStart.pos;\n\tcurve.v1.y = keyframeStart.value;\n\t// keyframe 2\n\tcurve.v2.x = keyframeEnd.pos;\n\tcurve.v2.y = keyframeEnd.value;\n};\n\nexport function getValueLinear(pos: number): number {\n\tconst curveStartPos = curve.v1.x;\n\tconst curveEndPos = curve.v2.x;\n\n\tconst t = (pos - curveStartPos) / (curveEndPos - curveStartPos);\n\tconst value = t * curve.v2.y + (1 - t) * curve.v1.y;\n\treturn value;\n}\n","import {ChannelData, KeyframeData, ChannelInterpolation, SetCurveCallback, GetValueCallback} from './KeyframeCommon';\nimport {setCurveFromKeyframePairCubic, getValueCubic} from './channel/Cubic';\nimport {setCurveFromKeyframePairLinear, getValueLinear} from './channel/Linear';\nimport {mix} from '../math/_Module';\nimport {MapUtils} from '../MapUtils';\nimport {copyKeyframeData, createKeyframeData} from './KeyframeSerialize';\n\ninterface KeyframePair {\n\tstart: KeyframeData;\n\tend: KeyframeData;\n}\n// const _v2 = new Vector2();\n\nexport class Channel {\n\tprivate _valuesByPos: Map<number, number> = new Map();\n\tprotected _setCurveCallback: SetCurveCallback = setCurveFromKeyframePairLinear;\n\tprotected _getValueCallback: GetValueCallback = getValueLinear;\n\tconstructor(public readonly data: ChannelData) {\n\t\tChannel.validate(this.data);\n\t\tthis.compute();\n\t}\n\tstatic fromJSON(data: ChannelData) {\n\t\treturn new Channel(data);\n\t}\n\tvalue(t: number): number {\n\t\tif (t == Math.floor(t)) {\n\t\t\tconst value = this._valuesByPos.get(t);\n\t\t\tif (value != null) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tconst keyframes = this.data.keyframes;\n\t\t\tif (keyframes.length == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tconst firstPos = keyframes[0].pos;\n\t\t\tconst lastPos = keyframes[keyframes.length - 1].pos;\n\t\t\tif (t < firstPos) {\n\t\t\t\treturn this._valuesByPos.get(firstPos) || 0;\n\t\t\t}\n\t\t\tif (t > lastPos) {\n\t\t\t\treturn this._valuesByPos.get(lastPos) || 0;\n\t\t\t}\n\t\t}\n\t\tconst t0 = Math.floor(t);\n\t\tconst t1 = Math.ceil(t);\n\t\tconst v0 = this._valuesByPos.get(t0) || 0;\n\t\tconst v1 = this._valuesByPos.get(t1) || 0;\n\t\treturn mix(v0, v1, t - t0);\n\t}\n\tstatic validate(data: ChannelData) {\n\t\tlet keyframes = data.keyframes;\n\n\t\tconst keyframesByPos: Map<number, KeyframeData[]> = new Map();\n\t\tfor (const keyframe of keyframes) {\n\t\t\tMapUtils.pushOnArrayAtEntry(keyframesByPos, keyframe.pos, keyframe);\n\t\t}\n\n\t\t// if we have keyframes that need to be merged, adjust the sizes of the arrays\n\t\tif (keyframes.length != keyframesByPos.size) {\n\t\t\tconst expectedSize = keyframesByPos.size;\n\t\t\tconst keptKeyframes: KeyframeData[] = new Array(expectedSize);\n\t\t\tlet i = 0;\n\t\t\tkeyframesByPos.forEach((keyframes, pos) => {\n\t\t\t\tkeptKeyframes[i] = keyframes[0];\n\t\t\t\ti++;\n\t\t\t});\n\t\t\tkeyframes = keptKeyframes;\n\t\t\tdata.keyframes.splice(expectedSize, data.keyframes.length - expectedSize);\n\t\t}\n\n\t\t// sort by replacing the values, not just swapping the keyframe data objects\n\t\tconst sortedKeyframes = keyframes\n\t\t\t.sort((k1, k2) => k1.pos - k2.pos)\n\t\t\t.map((k) => {\n\t\t\t\tconst target = createKeyframeData();\n\t\t\t\tcopyKeyframeData(k, target);\n\t\t\t\treturn target;\n\t\t\t});\n\t\tlet i = 0;\n\t\tfor (const keyframe of sortedKeyframes) {\n\t\t\tcopyKeyframeData(keyframe, data.keyframes[i]);\n\t\t\ti++;\n\t\t}\n\t}\n\n\tprivate _setCallbacks() {\n\t\tswitch (this.data.interpolation) {\n\t\t\tcase ChannelInterpolation.CUBIC: {\n\t\t\t\tthis._setCurveCallback = setCurveFromKeyframePairCubic;\n\t\t\t\tthis._getValueCallback = getValueCubic;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase ChannelInterpolation.LINEAR: {\n\t\t\t\tthis._setCurveCallback = setCurveFromKeyframePairLinear;\n\t\t\t\tthis._getValueCallback = getValueLinear;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tcompute() {\n\t\tChannel.validate(this.data);\n\t\tconst keyframes = this.data.keyframes;\n\t\tif (keyframes.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setCallbacks();\n\n\t\tconst firstPos = keyframes[0].pos;\n\t\tconst lastPos = keyframes[keyframes.length - 1].pos;\n\t\tthis._valuesByPos.clear();\n\n\t\tif (keyframes.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (keyframes.length == 1) {\n\t\t\tthis._valuesByPos.set(keyframes[0].pos, keyframes[0].value);\n\t\t\treturn;\n\t\t}\n\n\t\tlet segmentIndex = 0;\n\t\tconst keyframePair: KeyframePair = {start: keyframes[0], end: keyframes[1]};\n\n\t\tthis._setCurveCallback(keyframePair.start, keyframePair.end);\n\t\tfor (let pos = firstPos; pos <= lastPos; pos++) {\n\t\t\tif (pos > keyframePair.end.pos) {\n\t\t\t\tsegmentIndex++;\n\t\t\t\tkeyframePair.start = keyframePair.end;\n\t\t\t\tkeyframePair.end = keyframes[segmentIndex + 1];\n\t\t\t\tthis._setCurveCallback(keyframePair.start, keyframePair.end);\n\t\t\t}\n\t\t\tconst value = this._getValueCallback(pos);\n\t\t\tthis._valuesByPos.set(pos, value);\n\t\t}\n\t}\n\t// private _computeValue(pos: number, curve: CubicBezierCurve): number {\n\t// \tconst t = this._findTForXCallback(pos, curve);\n\t// \tcurve.getPoint(t, _v2);\n\t// \tconsole.log(pos, t, _v2.x, _v2.y);\n\n\t// \treturn _v2.y;\n\t// }\n}\n","/*\n\nThe main modification of this compared to three's CSS2DRenderer\nis the addition of removeElementsDeletedFromSceneGraph,\nwhich allows the removal of CSS objects that are not in the scene graph anymore,\nwithout relying on CSS2DObject `this.addEventListener( 'removed'...`,\nwhich isn't dispatched for children of the removed object\n\n*/\n\nimport {Matrix4, Object3D, Vector3, Scene, Camera} from 'three';\nimport {CSS2DObject} from './CSS2DObject';\n\ntype ObjectData = {\n\tdistanceToCameraSquared: number;\n};\nexport interface CSS2DParameters {\n\telement?: HTMLElement;\n}\n\nconst _vector = new Vector3();\nconst _viewMatrix = new Matrix4();\nconst _viewProjectionMatrix = new Matrix4();\nconst _a = new Vector3();\nconst _b = new Vector3();\n\nexport class CSS2DRenderer {\n\tprivate _width = 0;\n\tprivate _height = 0;\n\tprivate _widthHalf = 0;\n\tprivate _heightHalf = 0;\n\tprivate dataByObject: WeakMap<Object3D, ObjectData> = new WeakMap();\n\tpublic domElement: HTMLElement;\n\tpublic appendedObjects: Set<CSS2DObject> = new Set();\n\tpublic objectsToRender: Set<CSS2DObject> = new Set();\n\tpublic objectsToRemove: Set<CSS2DObject> = new Set();\n\tconstructor(parameters: CSS2DParameters = {}) {\n\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement('div');\n\n\t\tdomElement.style.overflow = 'hidden';\n\n\t\tthis.domElement = domElement;\n\t}\n\tgetSize() {\n\t\treturn {\n\t\t\twidth: this._width,\n\t\t\theight: this._height,\n\t\t};\n\t}\n\n\trender(scene: Scene, camera: Camera) {\n\t\t// if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n\t\t// if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy(camera.matrixWorldInverse);\n\t\t_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\n\t\tthis.removeElementsDeletedFromSceneGraph(scene);\n\t\tthis.renderObject(scene, scene, camera);\n\t\tthis.zOrder(scene);\n\t}\n\n\tprivate removeElementsDeletedFromSceneGraph(scene: Scene) {\n\t\tthis.objectsToRender.clear();\n\t\tscene.traverse((object) => {\n\t\t\tif ((object as CSS2DObject).isCSS2DObject) {\n\t\t\t\tthis.objectsToRender.add(object as CSS2DObject);\n\t\t\t}\n\t\t});\n\t\tthis.objectsToRemove.clear();\n\t\tthis.appendedObjects.forEach((appendedObject) => {\n\t\t\tif (!this.objectsToRender.has(appendedObject)) {\n\t\t\t\tthis.objectsToRemove.add(appendedObject);\n\t\t\t}\n\t\t});\n\t\tthis.objectsToRemove.forEach((object) => {\n\t\t\tthis.domElement.removeChild(object.element);\n\t\t\tthis.appendedObjects.delete(object);\n\t\t});\n\t}\n\n\tsetSize(width: number, height: number) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tthis._widthHalf = this._width / 2;\n\t\tthis._heightHalf = this._height / 2;\n\n\t\tthis.domElement.style.width = width + 'px';\n\t\tthis.domElement.style.height = height + 'px';\n\t}\n\n\trenderObject(object: Object3D, scene: Scene, camera: Camera) {\n\t\tif ((object as CSS2DObject).isCSS2DObject) {\n\t\t\t_vector.setFromMatrixPosition(object.matrixWorld);\n\t\t\t_vector.applyMatrix4(_viewProjectionMatrix);\n\n\t\t\tconst visible =\n\t\t\t\tobject.visible === true &&\n\t\t\t\t_vector.z >= -1 &&\n\t\t\t\t_vector.z <= 1 &&\n\t\t\t\tobject.layers.test(camera.layers) === true;\n\t\t\t(object as CSS2DObject).element.style.display = visible === true ? '' : 'none';\n\n\t\t\tif (visible === true) {\n\t\t\t\t(object as any).onBeforeRender(this as any, scene, camera);\n\n\t\t\t\tconst element = (object as CSS2DObject).element;\n\n\t\t\t\telement.style.transform =\n\t\t\t\t\t'translate(-50%,-50%) translate(' +\n\t\t\t\t\t(_vector.x * this._widthHalf + this._widthHalf) +\n\t\t\t\t\t'px,' +\n\t\t\t\t\t(-_vector.y * this._heightHalf + this._heightHalf) +\n\t\t\t\t\t'px)';\n\n\t\t\t\tif (element.parentNode !== this.domElement) {\n\t\t\t\t\tthis.domElement.appendChild(element);\n\t\t\t\t\tthis.appendedObjects.add(object as CSS2DObject);\n\t\t\t\t}\n\n\t\t\t\t(object as any).onAfterRender(this, scene, camera);\n\t\t\t}\n\n\t\t\tlet objectData = this.dataByObject.get(object);\n\t\t\tconst distanceToCameraSquared = this.getDistanceToSquared(camera, object);\n\t\t\tif (!objectData) {\n\t\t\t\tobjectData = {\n\t\t\t\t\tdistanceToCameraSquared,\n\t\t\t\t};\n\t\t\t\tthis.dataByObject.set(object, objectData);\n\t\t\t} else {\n\t\t\t\tobjectData.distanceToCameraSquared = distanceToCameraSquared;\n\t\t\t}\n\t\t}\n\n\t\tfor (const child of object.children) {\n\t\t\tthis.renderObject(child, scene, camera);\n\t\t}\n\t}\n\n\tgetDistanceToSquared(object1: Object3D, object2: Object3D) {\n\t\t_a.setFromMatrixPosition(object1.matrixWorld);\n\t\t_b.setFromMatrixPosition(object2.matrixWorld);\n\n\t\treturn _a.distanceToSquared(_b);\n\t}\n\n\tfilterAndFlatten(scene: Scene) {\n\t\tconst result: CSS2DObject[] = [];\n\n\t\tscene.traverse(function (object) {\n\t\t\tif ((object as CSS2DObject).isCSS2DObject) result.push(object as CSS2DObject);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tzOrder(scene: Scene) {\n\t\tconst sorted = this.filterAndFlatten(scene).sort((a, b) => {\n\t\t\tif (a.renderOrder !== b.renderOrder) {\n\t\t\t\treturn b.renderOrder - a.renderOrder;\n\t\t\t}\n\n\t\t\tconst distanceA = this.dataByObject.get(a)?.distanceToCameraSquared || 0;\n\t\t\tconst distanceB = this.dataByObject.get(b)?.distanceToCameraSquared || 0;\n\n\t\t\treturn distanceA - distanceB;\n\t\t});\n\n\t\tconst zMax = sorted.length;\n\n\t\tfor (let i = 0, l = sorted.length; i < l; i++) {\n\t\t\tsorted[i].element.style.zIndex = `${zMax - i}`;\n\t\t}\n\t}\n}\n","import {onBeforeMount, Ref} from 'vue';\nimport {SetupLinkIndexReturn} from '../../common/LinkIndex';\nimport {AnimationPanelInitLayoutData} from '../../../../types';\n\nexport interface AnimationPanelProps {\n\tpanelId: string;\n\tinit_layout_data: AnimationPanelInitLayoutData;\n}\nexport interface AnimationPanelCoreProps extends AnimationPanelProps {\n\t// transparent: boolean;\n\t// paramsAlwaysDisplayed: boolean;\n}\ninterface ParentOptions {\n\tanimationCore: Ref<HTMLElement | null>;\n\tsetupLinkIndex: SetupLinkIndexReturn;\n}\ninterface SetupLayoutDataArgs {\n\tprops: AnimationPanelProps;\n\tsetupLinkIndex: SetupLinkIndexReturn;\n}\n\nexport function SetupLayoutDataParentComponent(options: ParentOptions) {\n\tconst {animationCore, setupLinkIndex} = options;\n\tfunction fromJSON(json: AnimationPanelInitLayoutData) {\n\t\tconsole.log('network fromJSON', json);\n\t\tif (animationCore.value) {\n\t\t\t(animationCore.value as any).fromJSON(json);\n\t\t}\n\t}\n\tfunction layoutData(): AnimationPanelInitLayoutData {\n\t\tif (animationCore.value) {\n\t\t\treturn {\n\t\t\t\t...(animationCore.value as any).layoutData(),\n\t\t\t\tlinkIndex: setupLinkIndex.linkIndex.value,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tlinkIndex: setupLinkIndex.linkIndex.value,\n\t\t\t\t//camera: {position: {x: 0, y: 0}, zoom: 1},\n\t\t\t\t//history: {},\n\t\t\t\t//paramsDisplayed: false,\n\t\t\t};\n\t\t}\n\t}\n\treturn {fromJSON, layoutData};\n}\n\nexport function SetupLayoutDataCore(options: SetupLayoutDataArgs) {\n\tconst {props, setupLinkIndex} = options;\n\tonBeforeMount(() => {\n\t\tfromJSON(props.init_layout_data);\n\t});\n\n\tfunction fromJSON(json: AnimationPanelInitLayoutData) {\n\t\t// const loaded_camera_data = json['camera'];\n\t\t// if (loaded_camera_data) {\n\t\t// \tconst position = loaded_camera_data.position;\n\t\t// \tconst zoom = loaded_camera_data.zoom;\n\t\t// \t// this.camera = camera_data\n\t\t// \tif (position) {\n\t\t// \t\tcamera_data.value.position.x = position.x;\n\t\t// \t\tcamera_data.value.position.y = position.y;\n\t\t// \t}\n\t\t// \tif (zoom) {\n\t\t// \t\tcamera_data.value.zoom = zoom;\n\t\t// \t}\n\t\t// }\n\n\t\t// const json_camera_history = json['history'];\n\t\t// if (json_camera_history) {\n\t\t// \tfor (let id of Object.keys(json_camera_history)) {\n\t\t// \t\tcameraTransformByNodeId.value[id] = json_camera_history[id];\n\t\t// \t}\n\t\t// }\n\t\t// if (json.paramsDisplayed != null) {\n\t\t// \tparamsDisplayed.value = json.paramsDisplayed;\n\t\t// }\n\n\t\tsetupLinkIndex.fromJSON(json);\n\t}\n\n\tfunction layoutData(): AnimationPanelInitLayoutData {\n\t\treturn {\n\t\t\t// camera: {\n\t\t\t// \tposition: {\n\t\t\t// \t\tx: camera_data.value.position.x,\n\t\t\t// \t\ty: camera_data.value.position.y,\n\t\t\t// \t},\n\t\t\t// \tzoom: camera_data.value.zoom,\n\t\t\t// },\n\t\t\t// // currently not saving camera history anymore\n\t\t\t// // since as we have the ability to have linked panels,\n\t\t\t// // this seems unnecessary,\n\t\t\t// // and void accumulating large json in editor.json\n\t\t\t// // UPDATE: the camera history should be saved,\n\t\t\t// // as it's really inconvenient not to have the navigation history\n\t\t\t// // preserved when reloading the page, which happens often.\n\t\t\t// // And it should not accumulate, since the keys are node ids,\n\t\t\t// // so it's not like it will be an infinite queue\n\t\t\t// history: cameraTransformByNodeId.value,\n\t\t\t// paramsDisplayed: paramsDisplayed.value,\n\t\t\t...setupLinkIndex.toJSON(),\n\t\t};\n\t}\n\n\treturn {fromJSON, layoutData};\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = { class: \"text-right mb-1 leading-none text-white\" }\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"mx-1\" }, null, -1 /* HOISTED */)\nconst _hoisted_5 = [\"disabled\"]\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = { key: 2 }\nconst _hoisted_8 = { key: 3 }\nconst _hoisted_9 = { class: \"grow flex w-full max-w-full\" }\nconst _hoisted_10 = { class: \"mb-1\" }\nconst _hoisted_11 = { class: \"text-xs disable-select text-text-faded whitespace-nowrap\" }\nconst _hoisted_12 = [\"onClick\"]\nconst _hoisted_13 = [\"title\"]\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mt-1 disable-select\"\n}\nconst _hoisted_15 = [\"onClick\"]\nconst _hoisted_16 = { class: \"flex-1\" }\nconst _hoisted_17 = { class: \"grow flex flex-col\" }\nconst _hoisted_18 = {\n  ref: \"currentTimeBarElement\",\n  class: \"h-3 bg-neutral-900 cursor-pointer hover:opacity-80\"\n}\nconst _hoisted_19 = {\n  ref: \"canvasElementParent\",\n  class: \"grow max-w-full relative bg-black rounded\"\n}\nconst _hoisted_20 = {\n  ref: \"canvasGPURaycastElement\",\n  class: \"block absolute inset-0\"\n}\nconst _hoisted_21 = {\n  ref: \"canvasElement\",\n  class: \"block absolute inset-0\"\n}\nconst _hoisted_22 = {\n  ref: \"css2DElement\",\n  class: \"block absolute inset-0 pointer-events-none\"\n}\nconst _hoisted_23 = { class: \"my-1 flex text-xs space-x-4\" }\nconst _hoisted_24 = { class: \"flex space-x-1 items-center\" }\nconst _hoisted_25 = [\"disabled\"]\nconst _hoisted_26 = { class: \"flex space-x-1 items-center\" }\nconst _hoisted_27 = [\"disabled\"]\nconst _hoisted_28 = { class: \"flex space-x-1 items-center\" }\nconst _hoisted_29 = [\"disabled\"]\nconst _hoisted_30 = [\"disabled\"]\nconst _hoisted_31 = { class: \"flex space-x-1 items-center\" }\nconst _hoisted_32 = [\"disabled\"]\nconst _hoisted_33 = [\"disabled\"]\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-xs hidden lg:inline\" }, \"interpolation\", -1 /* HOISTED */)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_PlusIcon = _resolveComponent(\"PlusIcon\")!\n  const _component_TrashIcon = _resolveComponent(\"TrashIcon\")!\n  const _component_MinusIcon = _resolveComponent(\"MinusIcon\")!\n  const _component_ChevronUpIcon = _resolveComponent(\"ChevronUpIcon\")!\n  const _component_EyeSlashIcon = _resolveComponent(\"EyeSlashIcon\")!\n  const _component_EyeIcon = _resolveComponent(\"EyeIcon\")!\n  const _component_MagnifyingGlassIcon = _resolveComponent(\"MagnifyingGlassIcon\")!\n  const _component_XMarkIcon = _resolveComponent(\"XMarkIcon\")!\n  const _component_ChevronDownIcon = _resolveComponent(\"ChevronDownIcon\")!\n  const _component_DropDownMenu = _resolveComponent(\"DropDownMenu\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"extra-keyframes-actor-node w-full h-full flex flex-col\",\n    onMousemove: _cache[18] || (_cache[18] = \n//@ts-ignore\n(...args) => (_ctx.onMousemove && _ctx.onMousemove(...args)))\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        type: \"button\",\n        class: _normalizeClass([\n\t\t\t\t\t'mr-1 inline-flex items-center px-3 py-1 shadow-sm text-xs leading-4 rounded-sm',\n\t\t\t\t\t_ctx.addKeyframesButtonActive\n\t\t\t\t\t\t? 'opacity-100 cursor-pointer bg-green-700 hover:bg-green-600'\n\t\t\t\t\t\t: 'cursor-not-allowed opacity-30',\n\t\t\t\t]),\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.addKeys && _ctx.addKeys(...args))),\n        disabled: !_ctx.addKeyframesButtonActive,\n        title: \"Add Keyframes ( Alt + Click )\"\n      }, [\n        _createVNode(_component_PlusIcon, {\n          class: \"h-4 w-4\",\n          \"aria-hidden\": \"true\"\n        })\n      ], 10 /* CLASS, PROPS */, _hoisted_2),\n      _createElementVNode(\"button\", {\n        type: \"button\",\n        class: _normalizeClass([\n\t\t\t\t\t'mr-1 inline-flex items-center px-3 py-1 shadow-sm text-xs leading-4 rounded-sm',\n\t\t\t\t\t_ctx.keyframeButtonsActive\n\t\t\t\t\t\t? 'opacity-100 cursor-pointer bg-red-700 hover:bg-red-600'\n\t\t\t\t\t\t: 'cursor-not-allowed opacity-30 bg-black',\n\t\t\t\t]),\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.deleteSelectedKeyframes && _ctx.deleteSelectedKeyframes(...args))),\n        disabled: !_ctx.keyframeButtonsActive,\n        title: \"Delete Keyframes ( Del )\"\n      }, [\n        _createVNode(_component_TrashIcon, {\n          class: \"h-4 w-4\",\n          \"aria-hidden\": \"true\"\n        })\n      ], 10 /* CLASS, PROPS */, _hoisted_3),\n      _hoisted_4,\n      _createElementVNode(\"button\", {\n        type: \"button\",\n        class: _normalizeClass([\n\t\t\t\t\t'mr-1 inline-flex items-center px-3 py-1 shadow-sm text-xs leading-4 rounded-sm',\n\t\t\t\t\t_ctx.keyframeButtonsActive\n\t\t\t\t\t\t? 'opacity-100 cursor-pointer bg-teal-700 hover:bg-teal-600 '\n\t\t\t\t\t\t: 'cursor-not-allowed opacity-30 bg-black',\n\t\t\t\t]),\n        onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.mergeTangents && _ctx.mergeTangents(...args))),\n        disabled: !_ctx.keyframeButtonsActive,\n        title: \"Merge tangents\"\n      }, [\n        _createVNode(_component_MinusIcon, {\n          class: \"-ml-0.5 mr-2 h-4 w-4\",\n          \"aria-hidden\": \"true\"\n        }),\n        _createTextVNode(\" Merge Tangents \")\n      ], 10 /* CLASS, PROPS */, _hoisted_5),\n      _createElementVNode(\"button\", {\n        type: \"button\",\n        class: _normalizeClass([\n\t\t\t\t\t'mr-1 inline-flex items-center px-3 py-1 shadow-sm text-xs leading-4 rounded-sm',\n\t\t\t\t\t_ctx.keyframeButtonsActive\n\t\t\t\t\t\t? 'opacity-100 cursor-pointer bg-teal-700 hover:bg-teal-600'\n\t\t\t\t\t\t: 'cursor-not-allowed opacity-30 bg-black',\n\t\t\t\t]),\n        onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.splitTangents && _ctx.splitTangents(...args))),\n        disabled: !_ctx.keyframeButtonsActive,\n        title: \"Split tangents\"\n      }, [\n        _createVNode(_component_ChevronUpIcon, {\n          class: \"-ml-0.5 mr-2 h-4 w-4\",\n          \"aria-hidden\": \"true\"\n        }),\n        _createTextVNode(\" Split Tangents \")\n      ], 10 /* CLASS, PROPS */, _hoisted_6),\n      _createElementVNode(\"button\", {\n        type: \"button\",\n        class: \"mr-1 inline-flex items-center px-3 py-1 shadow-sm text-xs leading-4 rounded-sm opacity-100 cursor-pointer bg-sky-700 hover:bg-sky-600\",\n        onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.toggleTangentsDisplay && _ctx.toggleTangentsDisplay(...args))),\n        title: \"Toggle Tangents\"\n      }, [\n        (_ctx.tangentsDisplayed)\n          ? (_openBlock(), _createBlock(_component_EyeSlashIcon, {\n              key: 0,\n              class: \"-ml-0.5 mr-2 h-4 w-4\",\n              \"aria-hidden\": \"true\"\n            }))\n          : (_openBlock(), _createBlock(_component_EyeIcon, {\n              key: 1,\n              class: \"-ml-0.5 mr-2 h-4 w-4\",\n              \"aria-hidden\": \"true\"\n            })),\n        (_ctx.tangentsDisplayed)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Hide Tangents\"))\n          : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"Show Tangents\"))\n      ]),\n      _createElementVNode(\"button\", {\n        type: \"button\",\n        class: \"inline-flex items-center px-3 py-1 shadow-sm text-xs leading-4 rounded-sm bg-sky-600 hover:bg-sky-700 cursor-pointer\",\n        onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.frameSelection && _ctx.frameSelection(...args))),\n        title: \"Frame Selected ( F )\"\n      }, [\n        _createVNode(_component_MagnifyingGlassIcon, {\n          class: \"-ml-0.5 mr-2 h-4 w-4\",\n          \"aria-hidden\": \"true\"\n        }),\n        _createTextVNode(\" Frame Selected \")\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"ul\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.nodeNames, (nodeName, nodeIndex) => {\n          return (_openBlock(), _createElementBlock(\"li\", _hoisted_10, [\n            _createElementVNode(\"div\", _hoisted_11, [\n              _createElementVNode(\"span\", {\n                title: \"Pin node\",\n                onClick: ($event: any) => (_ctx.toggleNodeCollpasedState(_ctx.nodeIds[nodeIndex]))\n              }, [\n                (_ctx.collapsedStates[nodeIndex])\n                  ? (_openBlock(), _createBlock(_component_PlusIcon, {\n                      key: 0,\n                      class: \"pl-1 inline-block cursor-pointer w-4 h-4 opacity-50 hover:opacity-100\"\n                    }))\n                  : (_openBlock(), _createBlock(_component_MinusIcon, {\n                      key: 1,\n                      class: \"pl-1 inline-block cursor-pointer w-4 h-4 opacity-50 hover:opacity-100\"\n                    }))\n              ], 8 /* PROPS */, _hoisted_12),\n              _createElementVNode(\"span\", {\n                class: \"px-1\",\n                title: _ctx.nodePaths[nodeIndex]\n              }, _toDisplayString(nodeName), 9 /* TEXT, PROPS */, _hoisted_13),\n              _createVNode(_component_XMarkIcon, {\n                class: _normalizeClass([\n\t\t\t\t\t\t\t\t'inline-block cursor-pointer w-4 h-4 text-gray-500 hover:text-red-500 opacity-50 hover:opacity-100',\n\t\t\t\t\t\t\t\t_ctx.nodeNames.length > 1 ? 'ml-1' : 'mx-1',\n\t\t\t\t\t\t\t]),\n                onClick: ($event: any) => (_ctx.removeNode(_ctx.nodeIds[nodeIndex]))\n              }, null, 8 /* PROPS */, [\"class\", \"onClick\"]),\n              (_ctx.nodeNames.length > 1)\n                ? (_openBlock(), _createBlock(_component_ChevronDownIcon, {\n                    key: 0,\n                    class: _normalizeClass([\n\t\t\t\t\t\t\t\t'inline-block w-4 h-4',\n\t\t\t\t\t\t\t\tnodeIndex < _ctx.nodeNames.length - 1\n\t\t\t\t\t\t\t\t\t? 'cursor-pointer hover:opacity-100 opacity-50'\n\t\t\t\t\t\t\t\t\t: 'opacity-0',\n\t\t\t\t\t\t\t]),\n                    onClick: ($event: any) => (_ctx.moveNodeIdDown(_ctx.nodeIds[nodeIndex]))\n                  }, null, 8 /* PROPS */, [\"class\", \"onClick\"]))\n                : _createCommentVNode(\"v-if\", true),\n              (_ctx.nodeNames.length > 1)\n                ? (_openBlock(), _createBlock(_component_ChevronUpIcon, {\n                    key: 1,\n                    class: _normalizeClass([\n\t\t\t\t\t\t\t\t'inline-block w-4 h-4',\n\t\t\t\t\t\t\t\tnodeIndex > 0 ? 'cursor-pointer opacity-50 hover:opacity-100' : ' opacity-0',\n\t\t\t\t\t\t\t]),\n                    onClick: ($event: any) => (_ctx.moveNodeIdUp(_ctx.nodeIds[nodeIndex]))\n                  }, null, 8 /* PROPS */, [\"class\", \"onClick\"]))\n                : _createCommentVNode(\"v-if\", true)\n            ]),\n            (!_ctx.collapsedStates[nodeIndex])\n              ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_14, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.channelDataItems[nodeIndex], (channelDataItem) => {\n                    return (_openBlock(), _createElementBlock(\"li\", {\n                      class: _normalizeClass([\n\t\t\t\t\t\t\t\t'flex whitespace-nowrap cursor-pointer hover:text-white px-2 py-1 rounded-l mb-px text-xs',\n\t\t\t\t\t\t\t\tchannelDataItem.displayedState ? 'text-white bg-black' : 'text-text-faded',\n\t\t\t\t\t\t\t]),\n                      onClick: ($event: any) => (_ctx.toggleChannelDisplayState(channelDataItem))\n                    }, [\n                      _createElementVNode(\"span\", _hoisted_16, _toDisplayString(channelDataItem.channelName), 1 /* TEXT */),\n                      _createElementVNode(\"span\", {\n                        class: _normalizeClass(['flex-0 m-1 rounded-full w-2 h-2 ', channelDataItem.color])\n                      }, null, 2 /* CLASS */)\n                    ], 10 /* CLASS, PROPS */, _hoisted_15))\n                  }), 256 /* UNKEYED_FRAGMENT */))\n                ]))\n              : _createCommentVNode(\"v-if\", true)\n          ]))\n        }), 256 /* UNKEYED_FRAGMENT */))\n      ]),\n      _createElementVNode(\"div\", _hoisted_17, [\n        _createElementVNode(\"div\", _hoisted_18, null, 512 /* NEED_PATCH */),\n        _createElementVNode(\"div\", _hoisted_19, [\n          _createElementVNode(\"canvas\", _hoisted_20, null, 512 /* NEED_PATCH */),\n          _createElementVNode(\"canvas\", _hoisted_21, null, 512 /* NEED_PATCH */),\n          _createElementVNode(\"div\", _hoisted_22, null, 512 /* NEED_PATCH */)\n        ], 512 /* NEED_PATCH */),\n        _createElementVNode(\"div\", _hoisted_23, [\n          _createElementVNode(\"div\", _hoisted_24, [\n            _createElementVNode(\"label\", {\n              for: \"animation-editor-keyframe-value\",\n              class: _normalizeClass([\n\t\t\t\t\t\t\t\t'items-center text-text-faded whitespace-nowrap',\n\t\t\t\t\t\t\t\t_ctx.keyframePosActive ? '' : 'opacity-50',\n\t\t\t\t\t\t\t])\n            }, \"Time\", 2 /* CLASS */),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"number\",\n              name: \"animation-editor-keyframe-time\",\n              id: \"animation-editor-keyframe-time\",\n              step: \"1\",\n              class: \"inline-block shadow appearance-none border-0 rounded w-full py-1 px-1 bg-black text-gray-100 text-xs leading-none\",\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.keyframePos) = $event)),\n              onChange: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.onKeyframePosChange && _ctx.onKeyframePosChange(...args))),\n              disabled: !_ctx.keyframePosActive\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_25), [\n              [_vModelText, _ctx.keyframePos]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_26, [\n            _createElementVNode(\"label\", {\n              for: \"animation-editor-keyframe-value\",\n              class: _normalizeClass([\n\t\t\t\t\t\t\t\t'items-center text-text-faded whitespace-nowrap',\n\t\t\t\t\t\t\t\t_ctx.keyframeValueActive ? '' : 'opacity-50',\n\t\t\t\t\t\t\t])\n            }, \"Value\", 2 /* CLASS */),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"number\",\n              name: \"animation-editor-keyframe-value\",\n              id: \"animation-editor-keyframe-value\",\n              step: \"0.001\",\n              class: \"inline-block shadow appearance-none border-0 rounded w-full py-1 px-1 bg-black text-gray-100 text-xs leading-none\",\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.keyframeValue) = $event)),\n              onChange: _cache[9] || (_cache[9] = \n//@ts-ignore\n(...args) => (_ctx.onKeyframeValueChange && _ctx.onKeyframeValueChange(...args))),\n              disabled: !_ctx.keyframeValueActive\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_27), [\n              [_vModelText, _ctx.keyframeValue]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_28, [\n            _createElementVNode(\"label\", {\n              for: \"animation-editor-keyframe-value\",\n              class: _normalizeClass([\n\t\t\t\t\t\t\t\t'items-center text-text-faded whitespace-nowrap',\n\t\t\t\t\t\t\t\t_ctx.keyframeInActive ? '' : 'opacity-50',\n\t\t\t\t\t\t\t])\n            }, \"Tangent In\", 2 /* CLASS */),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"number\",\n              name: \"animation-editor-keyframe-value\",\n              id: \"animation-editor-keyframe-value\",\n              step: \"0.001\",\n              class: \"inline-block shadow appearance-none border-0 rounded w-full py-1 px-1 bg-black text-gray-100 text-xs leading-none\",\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.keyframeInSlope) = $event)),\n              onChange: _cache[11] || (_cache[11] = \n//@ts-ignore\n(...args) => (_ctx.onKeyframeTangentInSlopeChange && _ctx.onKeyframeTangentInSlopeChange(...args))),\n              disabled: !_ctx.keyframeInActive\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_29), [\n              [_vModelText, _ctx.keyframeInSlope]\n            ]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"number\",\n              name: \"animation-editor-keyframe-value\",\n              id: \"animation-editor-keyframe-value\",\n              step: \"0.001\",\n              class: \"inline-block shadow appearance-none border-0 rounded w-full py-1 px-1 bg-black text-gray-100 text-xs leading-none\",\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.keyframeInAccel) = $event)),\n              onChange: _cache[13] || (_cache[13] = \n//@ts-ignore\n(...args) => (_ctx.onKeyframeTangentInAccelChange && _ctx.onKeyframeTangentInAccelChange(...args))),\n              disabled: !_ctx.keyframeInActive\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_30), [\n              [_vModelText, _ctx.keyframeInAccel]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_31, [\n            _createElementVNode(\"label\", {\n              for: \"animation-editor-keyframe-value\",\n              class: _normalizeClass([\n\t\t\t\t\t\t\t\t'items-center text-text-faded whitespace-nowrap',\n\t\t\t\t\t\t\t\t_ctx.keyframeOutSlope ? '' : 'opacity-50',\n\t\t\t\t\t\t\t])\n            }, \"Tangent Out\", 2 /* CLASS */),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"number\",\n              name: \"animation-editor-keyframe-value\",\n              id: \"animation-editor-keyframe-value\",\n              step: \"0.001\",\n              class: \"inline-block shadow appearance-none border-0 rounded w-full py-1 px-1 bg-black text-gray-100 text-xs leading-none\",\n              \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.keyframeOutSlope) = $event)),\n              onChange: _cache[15] || (_cache[15] = \n//@ts-ignore\n(...args) => (_ctx.onKeyframeTangentOutSlopeChange && _ctx.onKeyframeTangentOutSlopeChange(...args))),\n              disabled: !_ctx.keyframeOutActive\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_32), [\n              [_vModelText, _ctx.keyframeOutSlope]\n            ]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"number\",\n              name: \"animation-editor-keyframe-value\",\n              id: \"animation-editor-keyframe-value\",\n              step: \"0.001\",\n              class: \"inline-block shadow appearance-none border-0 rounded w-full py-1 px-1 bg-black text-gray-100 text-xs leading-none\",\n              \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((_ctx.keyframeOutAccel) = $event)),\n              onChange: _cache[17] || (_cache[17] = \n//@ts-ignore\n(...args) => (_ctx.onKeyframeTangentOutAccelChange && _ctx.onKeyframeTangentOutAccelChange(...args))),\n              disabled: !_ctx.keyframeOutActive\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_33), [\n              [_vModelText, _ctx.keyframeOutAccel]\n            ])\n          ]),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(['flex', _ctx.interpolationDropdownActive ? '' : 'cursor-not-allowed opacity-50'])\n          }, [\n            _createVNode(_component_DropDownMenu, {\n              label: _ctx.currentInterpolation,\n              entries: _ctx.interpolationMenuEntries,\n              onSelect: _ctx.onInterpolationsMenuEntrySelect,\n              label_padding: [0, 5]\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", {\n                  class: _normalizeClass([\n\t\t\t\t\t\t\t\t\t'rounded bg-bg-dark px-2 py-1 inline-flex text-gray-100',\n\t\t\t\t\t\t\t\t\t_ctx.interpolationDropdownActive ? '' : 'cursor-not-allowed',\n\t\t\t\t\t\t\t\t])\n                }, [\n                  _hoisted_34,\n                  _createVNode(_component_ChevronDownIcon, { class: \"w-4 h-4\" })\n                ], 2 /* CLASS */)\n              ]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"label\", \"entries\", \"onSelect\"])\n          ], 2 /* CLASS */)\n        ])\n      ])\n    ])\n  ], 32 /* HYDRATE_EVENTS */))\n}","export * from \"-!../../../../../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./AnimationCore.vue?vue&type=template&id=2d45f6de&ts=true\"","import {KeyframeEditorSceneController} from '../keyframeEditorSceneController/KeyframeEditorSceneController';\n\ninterface SetupEventKeyOptions {\n\tsceneController: KeyframeEditorSceneController;\n}\n\nexport function SetupEventKey(options: SetupEventKeyOptions) {\n\tconst {sceneController} = options;\n\tfunction onKeypress(event: KeyboardEvent) {\n\t\treturn false;\n\t}\n\n\t// better to have Tab on key down,\n\t// otherwise, it gets detected when switching windows with alt+tab\n\tfunction onKeydown(event: KeyboardEvent): boolean {\n\t\tlet key_processed = true;\n\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tselectAllKeys();\n\t\t\t\t\t// stop event to avoid selecting all text\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'x':\n\t\t\t\t\tcut();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tcopy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'v':\n\t\t\t\t\tpaste();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tkey_processed = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (event.shiftKey) {\n\t\t\t\t// switch (event.key) {\n\t\t\t\t// \tcase 'c':\n\t\t\t\t// \tcase 'C':\n\t\t\t\t// \t\tcollapseSelectionAtCurrentTime();\n\t\t\t\t// \t\tbreak;\n\t\t\t\t// \tdefault:\n\t\t\t\t// \t\tkey_processed = false;\n\t\t\t\t// }\n\t\t\t} else {\n\t\t\t\tswitch (event.key) {\n\t\t\t\t\tcase 'Delete':\n\t\t\t\t\t\t// using backspace is actually very dangerous,\n\t\t\t\t\t\t// since it currently means nodes can be deleted\n\t\t\t\t\t\t// when pressing it while editing a field (such as from the polyNodeUpdateForm)\n\t\t\t\t\t\t// case 'Backspace':\n\t\t\t\t\t\tdeleteSelectedKeys();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tsceneController.frameSelection();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t//this.add_to_context_menu_filter(event.key)\n\t\t\t\t\t\tkey_processed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn key_processed;\n\t}\n\n\tfunction onKeyup(event: KeyboardEvent) {\n\t\treturn false;\n\t}\n\n\tasync function deleteSelectedKeys() {\n\t\tsceneController.events.deleteSelectedKeys();\n\t}\n\n\t//\n\t//\n\t// BUFFER COPY/PASTE\n\t//\n\t//\n\tfunction selectAllKeys() {\n\t\tsceneController.actions.selection.selectAll();\n\t}\n\tasync function cut() {\n\t\tsceneController.actions.copyPaste.copy();\n\t\tdeleteSelectedKeys();\n\t}\n\t//\n\tfunction copy() {\n\t\tsceneController.actions.copyPaste.copy();\n\t}\n\tasync function paste() {\n\t\tawait sceneController.actions.copyPaste.paste();\n\t}\n\n\treturn {\n\t\tonKeypress,\n\t\tonKeydown,\n\t\tonKeyup,\n\t\tcut,\n\t\tcopy,\n\t\tpaste,\n\t};\n}\n","import {KeyEventsDispatcher, KeyEventProcessor} from '../../../../helpers/KeyEventsDispatcher';\nimport {SetupLinkIndexReturn} from '../../common/LinkIndex';\nimport {KeyframeEditorSceneController} from '../keyframeEditorSceneController/KeyframeEditorSceneController';\n\nexport interface SetupEventMouseOptions {\n\teventKeyOptions: KeyEventProcessor;\n\tsceneController: KeyframeEditorSceneController;\n}\n\nexport function SetupEventMouse(options: SetupEventMouseOptions, setupLinkIndex: SetupLinkIndexReturn) {\n\tconst {eventKeyOptions} = options;\n\n\tfunction onMousemove(event: MouseEvent) {\n\t\tKeyEventsDispatcher.instance().registerProcessor(eventKeyOptions);\n\t}\n\n\tfunction onContextMenu(event: MouseEvent) {\n\t\t//this.toggle_tab_menu()\n\t\t//event.stopPropagation()\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tonMousemove,\n\t\tonContextMenu,\n\t};\n}\n","export default \"uniform vec2 frustumSize;\\nuniform float heightMult;\\nuniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n\\n\\n\\n// /geo1/MAT/lineBasicBuilder1/globals1\\nvarying vec3 v_POLY_globals1_position;\\n\\n\\n\\n\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\n\\n\\n\\t// /geo1/MAT/lineBasicBuilder1/globals1\\n\\tv_POLY_globals1_position = vec3(position);\\n\\tv_POLY_globals1_position.y *= heightMult * frustumSize.y;\\n\\t\\n\\t// /geo1/MAT/lineBasicBuilder1/output1\\n\\tvec3 transformed = vec3( v_POLY_globals1_position );vec4 mvPosition = vec4( transformed, 1.0 ); gl_Position = projectionMatrix * modelViewMatrix * mvPosition;\\n\\n\\n\\n\\t#include <morphcolor_vertex>\\n// removed:\\n//\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n// removed:\\n//\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\"","export default \"// uniform vec2 frustumSize;\\n//\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n\\n\\n\\n// /geo1/MAT/lineBasicBuilder1/globals1\\n// varying vec3 v_POLY_globals1_position;\\n\\n\\n\\n\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\n\\n\\n\\t// /geo1/MAT/lineBasicBuilder1/vec3ToFloat1\\n\\t// float v_POLY_vec3ToFloat1_y = v_POLY_globals1_position.y;\\n\\t// float mult = (abs(v_POLY_vec3ToFloat1_y) > (.06 * frustumSize.y)) ? 0.0 : 1.0;\\n\\t// diffuseColor.x *= mult;\\n\\t// diffuseColor.y *= mult;\\n\\t// diffuseColor.z *= mult;\\n\\t// diffuseColor.w *= mult;\\n\\n\\n\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\"","export default \"uniform vec2 frustumSize;\\n//\\nuniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n\\nfloat vector2Angle(vec2 v) {\\n\\treturn atan(v.y, v.x);\\n}\\n\\n// /geo1/MAT/lineBasicBuilder1/globals1\\n// varying vec3 v_POLY_globals1_position;\\n\\n\\n\\n\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\n\\n\\n\\t// /geo1/MAT/lineBasicBuilder1/globals1\\n\\tvec3 pC = vec3(position);\\n\\t// pA.z = 0.;\\n\\t// float tangentLength = length(pA);\\n\\t// float frustumRatio = frustumSize.y / frustumSize.x;\\n\\t// pB.x *= frustumSize.x;\\n\\t// pB.y *= frustumSize.y;\\n\\t// float tangentLength2 = length(pB);\\n\\n\\t// pC.z = 0.;\\n\\tif(abs(position.x)>0.001){\\n\\t\\t// vec3 pA = vec3(position);\\n\\t\\tvec3 pB = vec3(position);\\n\\n\\t\\t// float tangentLength = length(pC);\\n\\t\\t// float frustumRatio = frustumSize.y / frustumSize.x;\\n\\t\\t// pB.x /= frustumSize.x;\\n\\t\\t// pB.y /= frustumSize.y;\\n\\t\\t// float tangentLength2 = length(pB);\\n\\n\\t\\t// float tangentLength = length(pC);\\n\\t\\t// pC = normalize(pC) * tangentLength*frustumRatio*frustumRatio;\\n\\t\\t// pC.x /= frustumRatio;\\n\\t\\t// pC.y *= tangentLength;\\n\\t}\\n\\t// pC.x *= 50.;\\n\\t// pC.y *= 50.;\\n\\t// pC.z = position.z;\\n\\t\\n\\t// /geo1/MAT/lineBasicBuilder1/output1\\n\\tvec3 transformed = vec3( pC ); vec4 mvPosition = vec4( transformed, 1.0 ); gl_Position = projectionMatrix * modelViewMatrix * mvPosition;\\n\\n\\n\\n\\t#include <morphcolor_vertex>\\n// removed:\\n//\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n// removed:\\n//\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\"","export default \"// uniform vec2 frustumSize;\\n//\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n\\n\\n\\n// /geo1/MAT/lineBasicBuilder1/globals1\\n// varying vec3 v_POLY_globals1_position;\\n\\n\\n\\n\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\n\\n\\n\\t// /geo1/MAT/lineBasicBuilder1/vec3ToFloat1\\n\\t// float frustumRatio = frustumSize.x / frustumSize.y;\\n\\t// float v_POLY_vec3ToFloat1_y = v_POLY_globals1_position.y;\\n\\t// // float lineLength = len(v_POLY_globals1_position.xy);\\n\\t// float mult = 1.0;//(abs(v_POLY_vec3ToFloat1_y) > (.06 * frustumRatio)) ? 0.0 : 1.0;\\n\\t// diffuseColor.x *= mult;\\n\\t// diffuseColor.y *= mult;\\n\\t// diffuseColor.z *= mult;\\n\\t// diffuseColor.w *= mult;\\n\\n\\n\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\"","import {\n\tLineBasicMaterial,\n\tPointsMaterial,\n\tColorRepresentation,\n\tShaderLib,\n\tUniformsUtils,\n\tVector2,\n\tIUniform,\n\tColor,\n} from 'three';\nimport {MaterialUserDataUniforms} from '../../../../../../../@polygonjs/polygonjs/src/engine/nodes/gl/code/assemblers/materials/OnBeforeCompile';\nimport KEYFRAME_POSITION_HANDLE_VERT from '../glsl/keyframePositionHandle.vert.glsl';\nimport KEYFRAME_POSITION_HANDLE_FRAG from '../glsl/keyframePositionHandle.frag.glsl';\nimport KEYFRAME_TANGENT_LINE_VERT from '../glsl/keyframeTangentLine.vert.glsl';\nimport KEYFRAME_TANGENT_LINE_FRAG from '../glsl/keyframeTangentLine.frag.glsl';\nimport {PolyDictionary} from '../../../../../../../@polygonjs/polygonjs/src/types/GlobalTypes';\n\nconst LINE_WIDTH_RAYCAST_GPU = 16 * window.devicePixelRatio;\nconst POINT_SIZE_RAYCAST_GPU = 8 * window.devicePixelRatio;\nexport const KEYFRAME_HANDLE_POSITION_HEIGHT_MULT = 0.1;\n\ninterface FrustrumSizeUniform {\n\tvalue: Vector2;\n}\ninterface HeightMultUniform {\n\tvalue: number;\n}\ninterface KeyframeHandlePositionMaterialUniforms extends PolyDictionary<IUniform> {\n\tfrustumSize: FrustrumSizeUniform;\n\theightMult: HeightMultUniform;\n}\nexport const FRUSTRUM_SIZE_UNIFORM: FrustrumSizeUniform = {value: new Vector2()};\nconst HEIGHT_MULT_UNIFORM: HeightMultUniform = {value: KEYFRAME_HANDLE_POSITION_HEIGHT_MULT};\ninterface KeyframeHandlePositionMaterial extends LineBasicMaterial {\n\tuniforms: KeyframeHandlePositionMaterialUniforms;\n}\ninterface LineMaterialOptions {\n\tcolor: ColorRepresentation;\n\tforGPUraycast: boolean;\n}\n\nexport enum ObjectId {\n\tCURRENT_TIME_LINE = 2,\n}\nexport const OBJECT_IDS: ObjectId[] = [ObjectId.CURRENT_TIME_LINE];\nexport const OBJECT_IDS_SET = new Set(OBJECT_IDS);\n\nconst COLOR = {\n\tbase: {\n\t\tcurrentTime: 0xaaaaaa,\n\t\tsegmentCurve: 0x00aa00,\n\t\tkeyframeTangent: 0xaaaaaa,\n\t\tkeyframeHandlePosition: 0x009922,\n\t\tkeyframeHandleValue: 0xaaaa00,\n\t\tkeyframeTangentDot: 0x880088,\n\t},\n\thighlighted: {\n\t\tcurrentTime: 0xffffff,\n\t\tsegmentCurve: 0x00ff00,\n\t\tkeyframeTangent: 0xffffff,\n\t\tkeyframeHandlePosition: 0x00ff55,\n\t\tkeyframeHandleValue: 0xffff00,\n\t\tkeyframeTangentDot: 0xff00ff,\n\t},\n};\n\nexport const segmentCurveMaterial = (color: ColorRepresentation) => {\n\treturn new LineBasicMaterial({\n\t\tcolor,\n\t\tlinewidth: 2,\n\t});\n};\nexport const currentTimeMaterial = (options: LineMaterialOptions) => {\n\tconst {color, forGPUraycast} = options;\n\treturn new LineBasicMaterial({\n\t\tcolor,\n\t\tlinewidth: forGPUraycast ? LINE_WIDTH_RAYCAST_GPU : 2,\n\t});\n};\n\nexport const keyframeTangentLineMaterial = (options: LineMaterialOptions) => {\n\tconst {color, forGPUraycast} = options;\n\tconst material = new LineBasicMaterial({\n\t\tcolor,\n\t\tlinewidth: forGPUraycast ? LINE_WIDTH_RAYCAST_GPU : 2,\n\t\talphaTest: 0.5,\n\t\ttransparent: true,\n\t});\n\tconst uniforms = UniformsUtils.clone(ShaderLib.dashed.uniforms) as KeyframeHandlePositionMaterialUniforms;\n\tuniforms.frustumSize = FRUSTRUM_SIZE_UNIFORM;\n\tuniforms.heightMult = HEIGHT_MULT_UNIFORM;\n\tmaterial.onBeforeCompile = (shader) => {\n\t\tshader.vertexShader = KEYFRAME_TANGENT_LINE_VERT;\n\t\tshader.fragmentShader = KEYFRAME_TANGENT_LINE_FRAG;\n\t\tshader.uniforms = uniforms;\n\t};\n\tMaterialUserDataUniforms.setUniforms(material, uniforms);\n\treturn material as KeyframeHandlePositionMaterial;\n};\n\nexport const keyframeHandlePositionMaterial = (options: LineMaterialOptions): KeyframeHandlePositionMaterial => {\n\tconst {color, forGPUraycast} = options;\n\tconst material = new LineBasicMaterial({\n\t\tcolor,\n\t\tlinewidth: forGPUraycast ? LINE_WIDTH_RAYCAST_GPU : 2,\n\t\talphaTest: 0.5,\n\t\ttransparent: true,\n\t});\n\tconst uniforms = UniformsUtils.clone(ShaderLib.dashed.uniforms) as KeyframeHandlePositionMaterialUniforms;\n\tuniforms.frustumSize = FRUSTRUM_SIZE_UNIFORM;\n\tuniforms.heightMult = HEIGHT_MULT_UNIFORM;\n\tmaterial.onBeforeCompile = (shader) => {\n\t\tshader.vertexShader = KEYFRAME_POSITION_HANDLE_VERT;\n\t\tshader.fragmentShader = KEYFRAME_POSITION_HANDLE_FRAG;\n\t\tshader.uniforms = uniforms;\n\t};\n\tMaterialUserDataUniforms.setUniforms(material, uniforms);\n\treturn material as KeyframeHandlePositionMaterial;\n};\n\nconst _keyframeHandleValueMaterial = (color: ColorRepresentation) => {\n\treturn new PointsMaterial({\n\t\tcolor: color,\n\t\tsize: 7,\n\t\tsizeAttenuation: false,\n\t});\n};\nconst _keyframeTangentDotMaterial = (color: ColorRepresentation) => {\n\treturn new PointsMaterial({\n\t\tcolor: color,\n\t\tsize: 6,\n\t\tsizeAttenuation: false,\n\t});\n};\n// export const lineRaycastGPUMaterial = (color: ColorRepresentation) => {\n// \treturn new LineBasicMaterial({\n// \t\tcolor,\n// \t\tlinewidth: LINE_WIDTH_RAYCAST_GPU,\n// \t});\n// };\nexport const pointsRaycastGPUMaterial = (color: ColorRepresentation) => {\n\treturn new PointsMaterial({\n\t\tcolor,\n\t\tsize: POINT_SIZE_RAYCAST_GPU,\n\t\tsizeAttenuation: false,\n\t});\n};\nexport const MATERIAL = {\n\tselectionRectangle: new LineBasicMaterial({\n\t\tcolor: 0x00dd00,\n\t\tlinewidth: 2,\n\t}),\n\tbgGrid: {\n\t\tlines: new LineBasicMaterial({\n\t\t\tcolor: 0x444444,\n\t\t\tlinewidth: 1,\n\t\t}),\n\t\taxis: new LineBasicMaterial({\n\t\t\tcolor: 0x666666,\n\t\t\tlinewidth: 2,\n\t\t}),\n\t},\n\n\t// segmentCurve: {\n\t// \tdefault: segmentCurveMaterial(COLOR.base.segmentCurve),\n\t// \thighlighted: segmentCurveMaterial(COLOR.highlighted.segmentCurve),\n\t// },\n\tcurrentTime: {\n\t\tdefault: currentTimeMaterial({color: COLOR.base.currentTime, forGPUraycast: false}),\n\t\thighlighted: currentTimeMaterial({color: COLOR.highlighted.currentTime, forGPUraycast: false}),\n\t\traycasting: currentTimeMaterial({\n\t\t\tcolor: (function () {\n\t\t\t\tconst c = new Color();\n\t\t\t\tc.r = ObjectId.CURRENT_TIME_LINE;\n\t\t\t\treturn c;\n\t\t\t})(),\n\t\t\tforGPUraycast: true,\n\t\t}),\n\t},\n\tkeyframeTangentLine: {\n\t\tdefault: keyframeTangentLineMaterial({color: COLOR.base.keyframeTangent, forGPUraycast: false}),\n\t\thighlighted: keyframeTangentLineMaterial({color: COLOR.highlighted.keyframeTangent, forGPUraycast: false}),\n\t},\n\tkeyframeHandlePosition: {\n\t\tdefault: keyframeHandlePositionMaterial({color: COLOR.base.keyframeHandlePosition, forGPUraycast: false}),\n\t\thighlighted: keyframeHandlePositionMaterial({\n\t\t\tcolor: COLOR.highlighted.keyframeHandlePosition,\n\t\t\tforGPUraycast: false,\n\t\t}),\n\t\tselected: keyframeHandlePositionMaterial({color: 0xffffff, forGPUraycast: false}),\n\t},\n\tkeyframeHandleValue: {\n\t\tdefault: _keyframeHandleValueMaterial(COLOR.base.keyframeHandleValue),\n\t\thighlighted: _keyframeHandleValueMaterial(COLOR.highlighted.keyframeHandleValue),\n\t},\n\tkeyframeTangentDot: {\n\t\tdefault: _keyframeTangentDotMaterial(COLOR.base.keyframeTangentDot),\n\t\thighlighted: _keyframeTangentDotMaterial(COLOR.highlighted.keyframeTangentDot),\n\t},\n};\nexport function _updateMaterialHandleFrustrumSize(frustumSize: Vector2) {\n\t// console.log(frustumSize.toArray(), frustumSize.x / frustumSize.y);\n\tFRUSTRUM_SIZE_UNIFORM.value.copy(frustumSize);\n}\n\nexport const Z_POS = {\n\t// non interactive objects\n\tplaneHelper: -0.2,\n\tplaneHelperAxis: -0.15,\n\tcurve: -0.1,\n\t// interactive objects\n\tcurrentTime: -0.08,\n\ttangent: 0.05,\n\tdot: 0.1,\n\tselectionRectangle: 0.8,\n\tcamera: 1,\n};\n","import {watch, ComputedRef, computed} from 'vue';\nimport {Vector2, Line, BufferGeometry, BufferAttribute, LineBasicMaterial, TypedArray} from 'three';\nimport {KeyframeData, ChannelData} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {SegmentHandler} from '../elements/SegmentHandler';\nimport {Z_POS} from '../common/Constant';\nimport {CoreGraphNodeId} from '../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\nimport {typedArrayCopy} from '../../../../../../../@polygonjs/polygonjs/src/core/ArrayUtils';\n\nconst _v2 = new Vector2();\nconst POSITION_NAME = 'position';\n\ninterface SegmentCurveOptions {\n\tcontroller: KeyframeEditorSceneController;\n\tsegmentHandler: SegmentHandler;\n\tnodeId: CoreGraphNodeId;\n\tchannelIndex: number;\n\tsubChannelIndex: number;\n\tsegmentIndex: number;\n\tmaterial: LineBasicMaterial;\n}\n\nexport class SegmentCurve {\n\tprotected channelData: ComputedRef<ChannelData | null>;\n\tpublic readonly keyframeStart: ComputedRef<KeyframeData | null>;\n\tpublic readonly keyframeEnd: ComputedRef<KeyframeData | null>;\n\n\tprotected _geometry: BufferGeometry;\n\tprotected _object: Line;\n\tpublic readonly segmentHandler: SegmentHandler;\n\tconstructor(options: SegmentCurveOptions) {\n\t\tconst {segmentHandler, nodeId, channelIndex, subChannelIndex, segmentIndex, material} = options;\n\t\tthis.segmentHandler = segmentHandler;\n\t\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\t\tthis.channelData = computed(() => {\n\t\t\tconst nodeData = keyframeEditor.channelDatasByNodeIds.value[nodeId];\n\t\t\tif (!nodeData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst channelData = nodeData[channelIndex];\n\t\t\tif (!channelData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn channelData[subChannelIndex] || null;\n\t\t});\n\t\tthis.keyframeStart = computed(() => this.channelData.value?.keyframes[segmentIndex] || null);\n\t\tthis.keyframeEnd = computed(() => this.channelData.value?.keyframes[segmentIndex + 1] || null);\n\t\tconst valuesByPos = computed(() => segmentHandler.channelHandler.valuesByPos.value);\n\n\t\t//\n\t\tthis._geometry = new BufferGeometry();\n\n\t\tthis._object = new Line(this._geometry, material);\n\t\tthis._object.matrixAutoUpdate = false;\n\n\t\twatch(this.keyframeStart, this.update.bind(this), {deep: true});\n\t\twatch(this.keyframeEnd, this.update.bind(this), {deep: true});\n\t\twatch(valuesByPos, this.update.bind(this), {deep: true});\n\t\tthis.update();\n\t}\n\tdispose() {\n\t\tthis.segmentHandler.group.remove(this._object);\n\t}\n\thighlightable() {\n\t\treturn false;\n\t}\n\tupdate() {\n\t\tif (!this.keyframeStart.value || !this.keyframeEnd.value) {\n\t\t\tthis.segmentHandler.group.remove(this._object);\n\t\t\treturn;\n\t\t}\n\n\t\tlet positionAttribute = this._geometry.getAttribute(POSITION_NAME) as BufferAttribute | undefined;\n\n\t\tconst channelHandler = this.segmentHandler.channelHandler;\n\t\tconst posStart = this.keyframeStart.value.pos;\n\t\tconst posEnd = this.keyframeEnd.value.pos;\n\n\t\tconst pointsCount: number = Math.abs(posEnd - posStart) + 1;\n\t\tconst bufferCreateRequired = positionAttribute == null || positionAttribute.count != pointsCount;\n\n\t\tconst positions: TypedArray =\n\t\t\tbufferCreateRequired || positionAttribute == null\n\t\t\t\t? new Float32Array(pointsCount * 3)\n\t\t\t\t: typedArrayCopy(positionAttribute.array, new Float32Array());\n\n\t\tlet i = 0;\n\t\tfor (let t = posStart; t <= posEnd; t++) {\n\t\t\t_v2.x = t;\n\t\t\t_v2.y = channelHandler.valuesByPos.value[t];\n\t\t\tpositions[i] = _v2.x;\n\t\t\tpositions[i + 1] = _v2.y;\n\t\t\tpositions[i + 2] = Z_POS.curve;\n\t\t\ti += 3;\n\t\t}\n\t\tif (bufferCreateRequired) {\n\t\t\tpositionAttribute = new BufferAttribute(new Float32Array(positions), 3);\n\t\t\tthis._geometry.setAttribute(POSITION_NAME, positionAttribute);\n\t\t} else {\n\t\t\tif (positionAttribute) {\n\t\t\t\tpositionAttribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.segmentHandler.group.add(this._object);\n\t}\n}\n","import {computed, watch, ComputedRef} from 'vue';\nimport {Group, LineBasicMaterial, Color} from 'three';\nimport {ChannelData, KeyframeData} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {ChannelHandler} from './ChannelHandler';\nimport {SegmentCurve} from '../objects/SegmentCurve';\nimport {segmentCurveMaterial} from '../common/Constant';\nimport {HEX_BY_TAILWIND_COLOR, TailwindColor} from '../../../../../core/Tailwind';\nimport {CoreGraphNodeId} from '../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\nimport {COLOR_VALUES_BY_SUBCHANNEL_INDEX} from '../../../../../store/controllers/editor/KeyframeEditor';\n\ninterface SegmentHandlerOptions {\n\tcontroller: KeyframeEditorSceneController;\n\tchannelHandler: ChannelHandler;\n\tnodeId: CoreGraphNodeId;\n\tchannelIndex: number;\n\tsubChannelIndex: number;\n\tsegmentIndex: number;\n}\nexport class SegmentHandler {\n\tprotected channelData: ComputedRef<ChannelData | null>;\n\tprotected dataParamId: ComputedRef<CoreGraphNodeId | null>;\n\tprotected channelColorName: ComputedRef<TailwindColor | null>;\n\t//\n\tpublic readonly group: Group = new Group();\n\tprivate keyframeStart: ComputedRef<KeyframeData | null>;\n\tprivate keyframeEnd: ComputedRef<KeyframeData | null>;\n\tprivate _curve: SegmentCurve;\n\t// private _curveCheck: SegmentCurveCheck;\n\tprivate _material: LineBasicMaterial = segmentCurveMaterial(new Color());\n\tpublic readonly channelHandler: ChannelHandler;\n\tconstructor(protected options: SegmentHandlerOptions) {\n\t\tconst {channelHandler, nodeId, channelIndex, subChannelIndex, segmentIndex} = options;\n\t\tthis.channelHandler = channelHandler;\n\t\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\t\tthis.dataParamId = computed(() => {\n\t\t\tconst nodeData = keyframeEditor.channelDataParamIdsByNodeId.value[nodeId];\n\t\t\treturn nodeData ? nodeData[channelIndex] : null;\n\t\t});\n\t\tthis.channelData = computed(() => {\n\t\t\tconst nodeData = keyframeEditor.channelDatasByNodeIds.value[nodeId];\n\t\t\tif (!nodeData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst channelData = nodeData[channelIndex];\n\t\t\tif (!channelData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn channelData[subChannelIndex] || null;\n\t\t});\n\t\tthis.channelColorName = computed(() =>\n\t\t\tthis.dataParamId.value != null ? keyframeEditor.channelColorByParamId.value[this.dataParamId.value] : null\n\t\t);\n\t\t//\n\t\tchannelHandler.group.add(this.group);\n\t\tthis.group.matrixAutoUpdate = false;\n\t\t//\n\t\tthis.keyframeStart = computed(() =>\n\t\t\tthis.channelData.value ? this.channelData.value.keyframes[segmentIndex] : null\n\t\t);\n\t\tthis.keyframeEnd = computed(() =>\n\t\t\tthis.channelData.value ? this.channelData.value.keyframes[segmentIndex + 1] : null\n\t\t);\n\n\t\tthis._curve = new SegmentCurve({\n\t\t\tcontroller: this.options.controller,\n\t\t\tsegmentHandler: this,\n\t\t\tnodeId,\n\t\t\tchannelIndex,\n\t\t\tsubChannelIndex,\n\t\t\tsegmentIndex,\n\t\t\tmaterial: this._material,\n\t\t});\n\t\t// this._curveCheck = new SegmentCurveCheck(this.controller, this, this.keyframeStart, this.keyframeEnd);\n\n\t\twatch(this.keyframeStart, this._update.bind(this), {deep: true});\n\t\twatch(this.keyframeEnd, this._update.bind(this), {deep: true});\n\t\twatch(this.channelColorName, this._updateMaterialColor.bind(this));\n\t\tthis._update();\n\t\tthis._updateMaterialColor();\n\t}\n\tdispose() {\n\t\tthis.channelHandler.group.remove(this.group);\n\t\tthis._curve.dispose();\n\t\t// this._curveCheck.dispose();\n\t}\n\tprivate _update() {\n\t\tthis._curve.update();\n\t\t// this._curveCheck.update();\n\t}\n\tprivate _updateMaterialColor() {\n\t\tif (!this.channelColorName.value) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = COLOR_VALUES_BY_SUBCHANNEL_INDEX[this.options.subChannelIndex];\n\t\tconst colorHex = HEX_BY_TAILWIND_COLOR[this.channelColorName.value][value];\n\t\tthis._material.color.setStyle(colorHex, '');\n\t}\n}\n","import {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {Object3D, BufferGeometry, MathUtils, Box2, Material, Mesh, Color, Vector2} from 'three';\nimport {Ref, ref, watch, computed, ComputedRef} from 'vue';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\nimport {KeyframeHandler} from '../elements/KeyframeHandler';\nimport {BaseActionController} from '../controllers/actions/_BaseActionController';\nimport {ChannelData, KeyframeData} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {CoreGraphNodeId} from '../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\n// import {dataParamIdsForNodeId} from '../../../../../store/controllers/editor/KeyframeEditor';\nimport {BaseObjectSelectionData} from '../common/Common';\nimport {dataParamIdForSelectionData} from '../../../../../store/controllers/editor/KeyframeEditor';\nimport {StringParam} from '../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {OBJECT_IDS} from '../common/Constant';\n\nexport interface BaseObjectOptions {\n\tcontroller: KeyframeEditorSceneController;\n\tkeyframeHandler: KeyframeHandler;\n\tnodeId: CoreGraphNodeId;\n\tchannelData: ComputedRef<ChannelData | null>;\n\tchannelIndex: number;\n\tsubChannelIndex: number;\n\tkeyframeIndex: ComputedRef<number>;\n}\n\n// _nextId starts at 2, so that we don't think we detecting objects\n// with id = 0 when hovering over the background\nlet _nextId = Math.max(...OBJECT_IDS) + 1;\nexport abstract class BaseObject {\n\tpublic readonly subChannelDatas: ComputedRef<ChannelData[] | null>;\n\tpublic readonly channelData: ComputedRef<ChannelData | null>;\n\tprotected abstract _object: Object3D;\n\tprotected abstract _geometry: BufferGeometry;\n\tpublic readonly highlighted: Ref<boolean> = ref(false);\n\tpublic readonly uuid = MathUtils.generateUUID();\n\tpublic readonly selected = computed(() => {\n\t\tconst {nodeId, channelIndex, keyframeIndex} = this.options;\n\t\t// const _nodeId: number = nodeId;\n\t\t// const nodeIdString: string = `${_nodeId}`;\n\t\tconst nodeSelection = StoreController.editor.keyframeEditor.selection.value[nodeId];\n\t\tif (!nodeSelection) {\n\t\t\treturn false;\n\t\t}\n\t\t// if (channelName.value == null) {\n\t\t// \treturn false;\n\t\t// }\n\t\tconst channelSelection = nodeSelection[channelIndex];\n\t\tif (!channelSelection) {\n\t\t\treturn false;\n\t\t}\n\t\tconst subChannelSelection = channelSelection[this.options.subChannelIndex];\n\t\tif (!subChannelSelection) {\n\t\t\treturn false;\n\t\t}\n\t\treturn subChannelSelection.includes(keyframeIndex.value);\n\t});\n\tpublic readonly id: number;\n\tprotected _raycastGPUColor = new Color();\n\n\tconstructor(protected options: BaseObjectOptions) {\n\t\twatch(this.highlighted, () => this.updateMaterial());\n\t\twatch(this.selected, () => this.updateMaterial());\n\t\tthis.id = _nextId++;\n\t\tthis._raycastGPUColor.r = this.id;\n\n\t\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\t\tthis.subChannelDatas = computed(() => {\n\t\t\tconst nodeData = keyframeEditor.channelDatasByNodeIds.value[this.options.nodeId];\n\t\t\tif (!nodeData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst subChannelDatas = nodeData[this.options.channelIndex];\n\t\t\tif (!subChannelDatas) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn subChannelDatas;\n\t\t});\n\t\tthis.channelData = computed(() => {\n\t\t\tconst subChannelData = this.subChannelDatas.value;\n\t\t\tif (!subChannelData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn subChannelData[this.options.subChannelIndex] || null;\n\t\t});\n\t}\n\tobject() {\n\t\treturn this._object;\n\t}\n\tabstract highlightable(): boolean;\n\tprotected register() {\n\t\tif (!this._object) {\n\t\t\tthrow new Error('no object');\n\t\t}\n\t\tthis.options.controller.objects.register(this);\n\t}\n\tdispose() {\n\t\tthis.options.controller.objects.unregister(this);\n\t}\n\tafterUpdate() {\n\t\tthis._geometry.boundingSphere = null;\n\t\tthis._geometry.boundingBox = null;\n\t}\n\tabstract update(): void;\n\n\t// abstract setHightlighted(highlighted: boolean): void;\n\tabstract updateMaterial(): void;\n\tabstract raycastGPUMaterial(): Material;\n\tabstract actionController(): BaseActionController | undefined;\n\tkeyframeData(): KeyframeData | undefined {\n\t\tif (this.channelData.value) {\n\t\t\treturn this.channelData.value?.keyframes[this.options.keyframeIndex.value];\n\t\t}\n\t}\n\t// otherKeyframeDatas(): KeyframeData[] | undefined {\n\t// \tif (this.channelData.value) {\n\t// \t\treturn this.channelData.value?.keyframes.filter((k, i) => i != this.options.keyframeIndex.value);\n\t// \t}\n\t// }\n\t// dataParamId(): CoreGraphNodeId | undefined {\n\t// \tconst paramIds = dataParamIdsForNodeId(this.options.nodeId);\n\t// \tif (paramIds) {\n\t// \t\treturn paramIds[this.options.channelIndex];\n\t// \t}\n\t// }\n\n\tonMoveStart(event: PointerEvent, start: Vector2): void {}\n\tonMoveProgress(event: PointerEvent, delta: Vector2): void {}\n\tonMoveEnd(): void {}\n\tabstract intersectsBox(box: Box2): boolean;\n\tselectionData(): BaseObjectSelectionData {\n\t\treturn {\n\t\t\tnodeId: this.options.nodeId,\n\t\t\tchannelIndex: this.options.channelIndex,\n\t\t\tsubChannelIndex: this.options.subChannelIndex,\n\t\t\tkeyframeIndex: this.options.keyframeIndex.value,\n\t\t};\n\t}\n\n\tprivate _previousMaterial: Material | Material[] | undefined;\n\tprepareForRaycastGPU() {\n\t\tthis._object.frustumCulled = false;\n\t\tthis._previousMaterial = (this._object as Mesh).material;\n\t\t(this._object as Mesh).material = this.raycastGPUMaterial();\n\t}\n\trestoreFromRaycastGPU() {\n\t\tthis._object.frustumCulled = true;\n\t\tif (this._previousMaterial) {\n\t\t\t(this._object as Mesh).material = this._previousMaterial;\n\t\t}\n\t}\n\tprotected _dataParam() {\n\t\tconst paramId = dataParamIdForSelectionData(this.selectionData());\n\t\tif (!(paramId != null && this.options.channelData.value)) {\n\t\t\treturn;\n\t\t}\n\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\treturn param;\n\t}\n}\n","import {watch, ComputedRef, computed} from 'vue';\nimport {Points, BufferGeometry, BufferAttribute, Box2, PointsMaterial} from 'three';\nimport {KeyframeData} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {MATERIAL, Z_POS, pointsRaycastGPUMaterial} from '../common/Constant';\nimport {BaseObject, BaseObjectOptions} from './_Base';\n\nexport class KeyframeHandleValue extends BaseObject {\n\tprivate keyframe: ComputedRef<KeyframeData | null>;\n\tprivate _positions: Float32Array = new Float32Array(3); // 3 vertices per point\n\tprivate _positionAttribute = new BufferAttribute(this._positions, 3);\n\tprotected _geometry: BufferGeometry;\n\tprotected _object: Points;\n\tconstructor(options: BaseObjectOptions) {\n\t\tsuper(options);\n\t\tthis.keyframe = computed(() =>\n\t\t\tthis.options.channelData.value\n\t\t\t\t? this.options.channelData.value.keyframes[this.options.keyframeIndex.value]\n\t\t\t\t: null\n\t\t);\n\t\t//\n\t\tthis._geometry = new BufferGeometry();\n\t\tthis._geometry.setAttribute('position', this._positionAttribute);\n\t\tthis._object = new Points(this._geometry);\n\t\tthis._object.matrixAutoUpdate = false;\n\n\t\tthis._positions[2] = Z_POS.dot;\n\t\tthis.updateMaterial();\n\n\t\tconst position = computed(() => this.keyframe.value?.pos);\n\t\tconst value = computed(() => this.keyframe.value?.value);\n\t\twatch(position, this.update.bind(this));\n\t\twatch(value, this.update.bind(this));\n\t\tthis.update();\n\t\tthis.register();\n\t}\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t}\n\thighlightable() {\n\t\treturn true;\n\t}\n\tupdateMaterial() {\n\t\tconst material = this.highlighted.value\n\t\t\t? MATERIAL.keyframeHandleValue.highlighted\n\t\t\t: MATERIAL.keyframeHandleValue.default;\n\t\tthis._object.material = material;\n\t}\n\toverride update() {\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe) {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t\t\treturn;\n\t\t}\n\t\t// console.log(this.index, segmentData)\n\t\t// keyframe 1\n\n\t\tthis._positions[0] = keyframe.pos;\n\t\tthis._positions[1] = keyframe.value;\n\n\t\tthis._positionAttribute.needsUpdate = true;\n\t\tthis.afterUpdate();\n\t\tthis.options.keyframeHandler.group.add(this._object);\n\t\t// console.log('build segment', segmentData);\n\t}\n\tactionController() {\n\t\treturn this.options.controller.actions.keyframeValue;\n\t}\n\t// private _onMoveStartValue: number = 0;\n\t// onMoveStart(start: Vector2) {\n\t// \tif (!this.keyframe.value) {\n\t// \t\treturn;\n\t// \t}\n\t// \tthis._onMoveStartValue = this.keyframe.value.value;\n\t// }\n\t// onMoveProgress(delta: Vector2) {\n\t// \tif (!this.keyframe.value) {\n\t// \t\treturn;\n\t// \t}\n\t// \tthis.keyframe.value.value = this._onMoveStartValue + delta.y;\n\t// }\n\t// onMoveEnd() {}\n\tintersectsBox(box: Box2) {\n\t\treturn false;\n\t}\n\tprivate _raycastGPUMaterial: PointsMaterial | undefined;\n\traycastGPUMaterial() {\n\t\treturn (this._raycastGPUMaterial = this._raycastGPUMaterial || pointsRaycastGPUMaterial(this._raycastGPUColor));\n\t}\n}\n","import {watch, ComputedRef, computed} from 'vue';\nimport {Line, BufferGeometry, BufferAttribute, Vector2, Box2, LineBasicMaterial} from 'three';\nimport {KeyframeData} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {\n\tKEYFRAME_HANDLE_POSITION_HEIGHT_MULT,\n\tFRUSTRUM_SIZE_UNIFORM,\n\tMATERIAL,\n\tZ_POS,\n\tkeyframeHandlePositionMaterial,\n} from '../common/Constant';\nimport {BaseObject, BaseObjectOptions} from './_Base';\n\nconst _v2a = new Vector2();\nconst _box2 = new Box2();\nconst HEIGHT = 1;\nconst HALF_HEIGHT = HEIGHT * 0.5;\nconst POINTS_COUNT: number = 2;\n\nexport class KeyframeHandlePosition extends BaseObject {\n\tpublic readonly keyframe: ComputedRef<KeyframeData | null>;\n\n\tprivate _positions: Float32Array = new Float32Array(POINTS_COUNT * 3); // 3 vertices per point\n\tprivate _positionAttribute = new BufferAttribute(this._positions, 3);\n\t// private _ids: Float32Array = new Float32Array(POINTS_COUNT);\n\t// private _idAttribute = new BufferAttribute(this._ids, 1);\n\tprotected _geometry: BufferGeometry;\n\tprotected _object: Line;\n\tconstructor(options: BaseObjectOptions) {\n\t\tsuper(options);\n\t\tthis.keyframe = computed(() => {\n\t\t\treturn this.options.channelData.value\n\t\t\t\t? this.options.channelData.value.keyframes[this.options.keyframeIndex.value]\n\t\t\t\t: null;\n\t\t});\n\t\t//\n\t\tthis._geometry = new BufferGeometry();\n\t\t// this._ids[0] = 0;\n\t\t// this._ids[1] = 1;\n\t\tthis._geometry.setAttribute('position', this._positionAttribute);\n\t\t// this._geometry.setAttribute('id', this._idAttribute);\n\t\tthis._object = new Line(this._geometry);\n\t\tthis._object.matrixAutoUpdate = false;\n\n\t\tthis.updateMaterial();\n\n\t\tthis._positions[0] = 0;\n\t\tthis._positions[1] = -HALF_HEIGHT;\n\t\tthis._positions[2] = Z_POS.curve;\n\t\tthis._positions[3] = 0;\n\t\tthis._positions[4] = +HALF_HEIGHT;\n\t\tthis._positions[5] = Z_POS.curve;\n\n\t\tconst position = computed(() => this.keyframe.value?.pos);\n\t\tconst value = computed(() => this.keyframe.value?.value);\n\t\twatch(position, this.update.bind(this));\n\t\twatch(value, this.update.bind(this));\n\t\tthis.update();\n\t\tthis.register();\n\t}\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t}\n\thighlightable() {\n\t\treturn true;\n\t}\n\tupdate() {\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe) {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._object.position.y != keyframe.value) {\n\t\t\tthis._object.position.y = keyframe.value;\n\t\t\tthis._object.updateMatrix();\n\t\t}\n\t\tif (this._object.position.x != keyframe.pos) {\n\t\t\tthis._object.position.x = keyframe.pos;\n\t\t\tthis._object.updateMatrix();\n\t\t}\n\t\t// if (this._positions[0] != keyframe.pos) {\n\t\t// \tthis._positions[0] = keyframe.pos;\n\t\t// \tthis._positions[3] = keyframe.pos;\n\n\t\t// \tthis._positionAttribute.needsUpdate = true;\n\t\t// \tthis.afterUpdate();\n\t\t// }\n\n\t\tthis.options.keyframeHandler.group.add(this._object);\n\t}\n\tupdateMaterial() {\n\t\tconst mats = MATERIAL.keyframeHandlePosition;\n\t\tconst material = this.selected.value ? mats.selected : this.highlighted.value ? mats.highlighted : mats.default;\n\t\tthis._object.material = material;\n\t}\n\t// private _onMoveStartPos: number = 0;\n\t// onMoveStart(start: Vector2) {\n\t// \tif (!this.keyframe.value) {\n\t// \t\treturn;\n\t// \t}\n\t// \tthis._onMoveStartPos = this.keyframe.value.pos;\n\t// \tthis.options.keyframeHandler.onMovePositionStart();\n\t// }\n\t// onMoveProgress(delta: Vector2) {\n\t// \tthis.options.keyframeHandler.onMovePositionProgress(delta, this._onMoveStartPos);\n\t// }\n\t// onMoveEnd() {\n\t// \tthis.options.keyframeHandler.onMovePositionEnd();\n\t// }\n\tactionController() {\n\t\treturn this.options.controller.actions.keyframePosition;\n\t}\n\tintersectsBox(box: Box2) {\n\t\tconst {x, y} = this._object.position;\n\t\t_v2a.set(x, y);\n\t\tif (box.containsPoint(_v2a)) {\n\t\t\treturn true;\n\t\t}\n\t\tconst heightMult = KEYFRAME_HANDLE_POSITION_HEIGHT_MULT * FRUSTRUM_SIZE_UNIFORM.value.y;\n\t\t_v2a.y += HALF_HEIGHT * heightMult;\n\t\tif (box.containsPoint(_v2a)) {\n\t\t\treturn true;\n\t\t}\n\t\t_v2a.y -= HEIGHT * heightMult;\n\t\tif (box.containsPoint(_v2a)) {\n\t\t\treturn true;\n\t\t}\n\t\t// if the box does not contain the 3 points above, we create a box from the 2 points and check if it intersects\n\t\t_box2.min.set(x - 0.1, y - HALF_HEIGHT * heightMult);\n\t\t_box2.max.set(x + 0.1, y + HALF_HEIGHT * heightMult);\n\t\treturn box.intersectsBox(_box2);\n\t}\n\n\tprivate _raycastGPUMaterial: LineBasicMaterial | undefined;\n\traycastGPUMaterial() {\n\t\treturn (this._raycastGPUMaterial =\n\t\t\tthis._raycastGPUMaterial ||\n\t\t\tkeyframeHandlePositionMaterial({color: this._raycastGPUColor, forGPUraycast: true}));\n\t}\n}\n","import {Channel} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/Channel';\n// import { KeyframeData } from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {Box2, Vector2} from 'three';\n\nconst ORIGIN = new Vector2(0, 0);\n\nexport function validatesBox2(box: Box2) {\n\tconst minX = Math.min(box.min.x, box.max.x);\n\tconst minY = Math.min(box.min.y, box.max.y);\n\tconst maxX = Math.max(box.min.x, box.max.x);\n\tconst maxY = Math.max(box.min.y, box.max.y);\n\n\tbox.min.x = minX;\n\tbox.min.y = minY;\n\tbox.max.x = maxX;\n\tbox.max.y = maxY;\n}\n\nconst ANGLE_MARGIN = 0.01;\nconst MIN_ANGLE = Math.PI * 1.5 + ANGLE_MARGIN;\nconst MAX_ANGLE = Math.PI / 2 - ANGLE_MARGIN;\n\nexport function clampTangentAngle(tangent: Vector2, isInTangent: boolean) {\n\tlet angle = tangent.angle();\n\tif (angle > Math.PI) {\n\t\tif (angle < MIN_ANGLE) {\n\t\t\tconst angleExcess = Math.abs(angle) - MIN_ANGLE;\n\t\t\ttangent.rotateAround(ORIGIN, -angleExcess);\n\t\t}\n\t} else {\n\t\tif (angle > MAX_ANGLE) {\n\t\t\tconst angleExcess = Math.abs(angle) - MAX_ANGLE;\n\t\t\ttangent.rotateAround(ORIGIN, -angleExcess);\n\t\t}\n\t}\n}\n\ninterface ChannelBoundsOptions {\n\tchannel: Channel;\n\tfirstPos?: number;\n\tlastPos?: number;\n}\nexport function channelBounds(options: ChannelBoundsOptions, target: Box2) {\n\tconst {channel} = options;\n\tlet {firstPos, lastPos} = options;\n\t// const keyframes = channel.data.keyframes.filter((keyframe) => {\n\t// \tif(firstPos!=null&&lastPos!=null){\n\t// \t\treturn keyframe.pos >= firstPos && keyframe.pos <= lastPos;\n\t// \t}else{\n\t// \t\tif(firstPos!=null){\n\t// \t\t\treturn keyframe.pos >= firstPos;\n\t// \t\t}else if(lastPos!=null){\n\t// \t\t\treturn keyframe.pos <= lastPos;\n\t// \t\t}\n\t// \t\treturn true\n\t// \t}\n\t// })\n\t// if (keyframes.length == 0) {\n\t// \treturn;\n\t// }\n\tconst keyframes = channel.data.keyframes;\n\tif (firstPos == null) {\n\t\tfirstPos = keyframes[0].pos;\n\t}\n\tif (lastPos == null) {\n\t\tlastPos = keyframes[keyframes.length - 1].pos;\n\t}\n\ttarget.min.set(firstPos, -Infinity);\n\ttarget.max.set(lastPos, Infinity);\n\tlet minValue = Infinity;\n\tlet maxValue = -Infinity;\n\tfor (let pos = firstPos; pos <= lastPos; pos++) {\n\t\tconst value = channel.value(pos);\n\t\tminValue = Math.min(minValue, value);\n\t\tmaxValue = Math.max(maxValue, value);\n\t}\n\ttarget.min.y = minValue;\n\ttarget.max.y = maxValue;\n}\n\n// export function keyframesBounds(unsortedKeyframeData:KeyframeData[], target:Box2){\n// \tif(unsortedKeyframeData.length==0){return}\n// \tconst keyframes = unsortedKeyframeData.sort((a, b) => a.pos - b.pos);\n\n// \t\tconst firstPos = keyframes[0].pos;\n// \t\tconst lastPos = keyframes[keyframes.length - 1].pos;\n// \ttarget.min.set(firstPos, -Infinity);\n// \ttarget.max.set(lastPos, Infinity);\n// \tlet minValue = Infinity;\n// \tlet maxValue = -Infinity;\n// \tfor (let pos = firstPos; pos <= lastPos; pos++) {\n// \t\tconst value = channel.value(pos);\n// \t\tminValue = Math.min(minValue, value);\n// \t\tmaxValue = Math.max(maxValue, value);\n// \t}\n// \ttarget.min.y = minValue;\n// \ttarget.max.y = maxValue;\n// }\n","import {watch, ComputedRef, computed} from 'vue';\nimport {Line, BufferGeometry, BufferAttribute, Box2, LineBasicMaterial, Vector2} from 'three';\nimport {\n\tChannelInterpolation,\n\tKeyframeData,\n} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {\n\tendPointToKeyframeTangent,\n\tgetTangent,\n} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\nimport {MATERIAL, Z_POS, keyframeTangentLineMaterial} from '../common/Constant';\nimport {BaseObject, BaseObjectOptions} from './_Base';\nimport {channelDataToString} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {KeyframeTangent} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {keyframeTangentToEndPoint} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\nimport {ParamSetCommand} from '../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../Editor';\nimport {clampTangentAngle} from '../common/Utils';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\n\nconst endPt = new Vector2();\nexport class KeyframeTangentLine extends BaseObject {\n\tprivate keyframe: ComputedRef<KeyframeData | null>;\n\tprivate displayTangents: ComputedRef<boolean>;\n\tprivate _pointsCount: number = 2;\n\tprivate _positions: Float32Array = new Float32Array(this._pointsCount * 3); // 3 vertices per point\n\tprivate _positionAttribute = new BufferAttribute(this._positions, 3);\n\tprotected _geometry: BufferGeometry;\n\tprotected _object: Line;\n\t// protected _tangent: Vector2Like;\n\tprotected _tangentComputed: ComputedRef<KeyframeTangent | null>;\n\n\tconstructor(options: BaseObjectOptions, private isInTangent: boolean) {\n\t\tsuper(options);\n\t\tthis.keyframe = computed(() =>\n\t\t\tthis.options.channelData.value\n\t\t\t\t? this.options.channelData.value.keyframes[this.options.keyframeIndex.value]\n\t\t\t\t: null\n\t\t);\n\t\tthis.displayTangents = computed(\n\t\t\t() =>\n\t\t\t\tStoreController.editor.keyframeEditor.tangentsDisplayed.value &&\n\t\t\t\tthis.channelData.value?.interpolation != ChannelInterpolation.LINEAR\n\t\t);\n\t\t//\n\t\tthis._geometry = new BufferGeometry();\n\t\tthis._geometry.setAttribute('position', this._positionAttribute);\n\t\tthis._object = new Line(this._geometry);\n\t\tthis._object.matrixAutoUpdate = false;\n\t\tthis._positions[0] = 0;\n\t\tthis._positions[1] = 0;\n\t\tthis._positions[2] = Z_POS.tangent;\n\t\tthis._positions[5] = Z_POS.tangent;\n\n\t\tthis.updateMaterial();\n\n\t\t// this._tangent = getTangent(this.keyframe.value, this.isInTangent);\n\t\tthis._tangentComputed = computed(() => {\n\t\t\tif (this.keyframe.value) {\n\t\t\t\treturn getTangent(this.keyframe.value, this.isInTangent);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\n\t\tconst position = computed(() => this.keyframe.value?.pos);\n\t\tconst value = computed(() => this.keyframe.value?.value);\n\t\twatch(position, this.update.bind(this));\n\t\twatch(value, this.update.bind(this));\n\t\twatch(this._tangentComputed, this.update.bind(this), {deep: true});\n\t\twatch(this.displayTangents, this._updateVisibility.bind(this));\n\t\tthis.update();\n\t\tthis._updateVisibility();\n\t\tthis.register();\n\t}\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t}\n\thighlightable() {\n\t\treturn true;\n\t}\n\tprivate _updateVisibility() {\n\t\tif (this.displayTangents.value) {\n\t\t\tthis.options.keyframeHandler.group.add(this._object);\n\t\t} else {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t\t}\n\t\tthis.options.controller.markRenderRequired();\n\t}\n\tupdate() {\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe || this._tangentComputed.value == null) {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._object.position.x != keyframe.pos || this._object.position.y != keyframe.value) {\n\t\t\tthis._object.position.x = keyframe.pos;\n\t\t\tthis._object.position.y = keyframe.value;\n\t\t\tthis._object.updateMatrix();\n\t\t}\n\n\t\tconst mult = this.isInTangent ? -1 : 1;\n\t\tkeyframeTangentToEndPoint(keyframe, this.isInTangent, endPt);\n\t\tconst newX = endPt.x * mult;\n\t\tconst newY = endPt.y * mult;\n\t\tif (this._positions[3] != newX || this._positions[4] != newY) {\n\t\t\tthis._positions[3] = newX;\n\t\t\tthis._positions[4] = newY;\n\n\t\t\tthis._positionAttribute.needsUpdate = true;\n\t\t\tthis.afterUpdate();\n\t\t}\n\n\t\tif (this.displayTangents.value) {\n\t\t\tthis.options.keyframeHandler.group.add(this._object);\n\t\t}\n\t}\n\tupdateMaterial() {\n\t\tconst material = this.highlighted.value\n\t\t\t? MATERIAL.keyframeTangentLine.highlighted\n\t\t\t: MATERIAL.keyframeTangentLine.default;\n\t\tthis._object.material = material;\n\t}\n\tactionController() {\n\t\treturn this.options.controller.actions.keyframeTangentAngle;\n\t}\n\n\tprivate _startLength = 0;\n\tprivate _keyframePos = new Vector2();\n\tprivate _endPointStart = new Vector2();\n\tprivate _cursorMoveStart = new Vector2();\n\tprivate _cursorMoveProgress = new Vector2();\n\tprivate _endPointMoveProgress = new Vector2();\n\tprivate _paramStartValue: string | undefined;\n\t// private _tangent: Vector2Like | null = null;\n\toverride onMoveStart(event: PointerEvent, start: Vector2) {\n\t\tconst param = this._dataParam();\n\t\t// this._tangent = this.keyframe.value ? getTangent(this.keyframe.value, this.isInTangent) : null;\n\t\tif (!param) {\n\t\t\treturn;\n\t\t}\n\t\tthis._paramStartValue = param.value;\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe || this._tangentComputed.value == null) {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t\t\treturn;\n\t\t}\n\t\tkeyframeTangentToEndPoint(keyframe, this.isInTangent, this._endPointStart);\n\t\t// this._tangentStart.set(this._tangentComputed.value.x, this._tangentComputed.value.y);\n\t\tthis._startLength = this._endPointStart.length();\n\t\tthis._keyframePos.set(keyframe.pos, keyframe.value);\n\t\tthis._cursorMoveStart.copy(start);\n\t}\n\toverride onMoveProgress(event: PointerEvent, delta: Vector2) {\n\t\tconst param = this._dataParam();\n\t\tif (!(param && this.subChannelDatas.value)) {\n\t\t\treturn;\n\t\t}\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe || this._tangentComputed.value == null) {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\n\t\t\treturn;\n\t\t}\n\t\tconst mult = this.isInTangent ? -1 : 1;\n\n\t\tthis._cursorMoveProgress.copy(this._cursorMoveStart).add(delta);\n\t\tthis._endPointMoveProgress\n\t\t\t.copy(this._cursorMoveProgress)\n\t\t\t.sub(this._keyframePos)\n\t\t\t.normalize()\n\t\t\t.multiplyScalar(this._startLength * mult);\n\n\t\tclampTangentAngle(this._endPointMoveProgress, this.isInTangent);\n\t\tendPointToKeyframeTangent(this._endPointMoveProgress, this.isInTangent, this._tangentComputed.value);\n\n\t\t// set param\n\t\tconst newValue = channelDataToString(this.subChannelDatas.value);\n\t\tparam.set(newValue);\n\t}\n\toverride async onMoveEnd() {\n\t\tconst param = this._dataParam();\n\t\tif (!(param && this.subChannelDatas.value)) {\n\t\t\treturn;\n\t\t}\n\t\tconst newValue = channelDataToString(this.subChannelDatas.value);\n\t\tconst cmd = new ParamSetCommand(param, newValue, this._paramStartValue);\n\t\tawait Editor.instance().pushCommand(cmd);\n\t}\n\tintersectsBox(box: Box2) {\n\t\treturn false;\n\t}\n\tprivate _raycastGPUMaterial: LineBasicMaterial | undefined;\n\traycastGPUMaterial() {\n\t\treturn (this._raycastGPUMaterial =\n\t\t\tthis._raycastGPUMaterial ||\n\t\t\tkeyframeTangentLineMaterial({color: this._raycastGPUColor, forGPUraycast: true}));\n\t}\n}\n","import {watch, ComputedRef, computed} from 'vue';\nimport {Points, BufferGeometry, BufferAttribute, Box2, PointsMaterial, Vector2} from 'three';\nimport {\n\tKeyframeData,\n\tKeyframeTangent,\n\tChannelInterpolation,\n} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {MATERIAL, pointsRaycastGPUMaterial} from '../common/Constant';\nimport {BaseObject, BaseObjectOptions} from './_Base';\nimport {channelDataToString} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {\n\tgetTangent,\n\tkeyframeTangentToEndPoint,\n\tendPointToKeyframeTangent,\n} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\nimport {ParamSetCommand} from '../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../Editor';\nimport {clampTangentAngle} from '../common/Utils';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\n\nconst endPt = new Vector2();\nexport class KeyframeTangentDot extends BaseObject {\n\tprivate keyframe: ComputedRef<KeyframeData | null>;\n\tprivate displayTangents: ComputedRef<boolean>;\n\tprivate _positions: Float32Array = new Float32Array(3); // 3 vertices per point\n\tprivate _positionAttribute = new BufferAttribute(this._positions, 3);\n\tprotected _geometry: BufferGeometry;\n\tprotected _object: Points;\n\t// protected _tangent: Vector2Like;\n\tprotected _tangentComputed: ComputedRef<KeyframeTangent | null>;\n\tconstructor(options: BaseObjectOptions, private isInTangent: boolean) {\n\t\tsuper(options);\n\t\tthis.keyframe = computed(() =>\n\t\t\tthis.options.channelData.value\n\t\t\t\t? this.options.channelData.value.keyframes[this.options.keyframeIndex.value]\n\t\t\t\t: null\n\t\t);\n\t\tthis.displayTangents = computed(\n\t\t\t() =>\n\t\t\t\tStoreController.editor.keyframeEditor.tangentsDisplayed.value &&\n\t\t\t\tthis.channelData.value?.interpolation != ChannelInterpolation.LINEAR\n\t\t);\n\t\t//\n\t\tthis._geometry = new BufferGeometry();\n\t\tthis._geometry.setAttribute('position', this._positionAttribute);\n\t\tthis._object = new Points(this._geometry);\n\t\tthis._object.matrixAutoUpdate = false;\n\n\t\tthis._positions[2] = 0.5;\n\n\t\t// this._tangent = getTangent(this.keyframe.value, this.isInTangent);\n\t\tthis._tangentComputed = computed(() => {\n\t\t\tif (this.keyframe.value) {\n\t\t\t\treturn getTangent(this.keyframe.value, this.isInTangent);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t\tthis.updateMaterial();\n\n\t\tconst position = computed(() => this.keyframe.value?.pos);\n\t\tconst value = computed(() => this.keyframe.value?.value);\n\t\twatch(position, this.update.bind(this));\n\t\twatch(value, this.update.bind(this));\n\t\twatch(this._tangentComputed, this.update.bind(this), {deep: true});\n\t\twatch(this.displayTangents, this._updateVisibility.bind(this));\n\t\tthis.update();\n\t\tthis._updateVisibility();\n\t\tthis.register();\n\t}\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t}\n\thighlightable() {\n\t\treturn true;\n\t}\n\tprivate _updateVisibility() {\n\t\tif (this.displayTangents.value) {\n\t\t\tthis.options.keyframeHandler.group.add(this._object);\n\t\t} else {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t\t}\n\t}\n\tupdate() {\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe || this._tangentComputed.value == null) {\n\t\t\tthis.options.keyframeHandler.group.remove(this._object);\n\t\t\treturn;\n\t\t}\n\t\t// console.log(this.index, segmentData)\n\t\t// keyframe 1\n\n\t\tconst mult = this.isInTangent ? -1 : 1;\n\t\tkeyframeTangentToEndPoint(keyframe, this.isInTangent, endPt);\n\t\tthis._positions[0] = keyframe.pos + endPt.x * mult;\n\t\tthis._positions[1] = keyframe.value + endPt.y * mult;\n\n\t\tthis._positionAttribute.needsUpdate = true;\n\t\tthis.afterUpdate();\n\t\tif (this.displayTangents.value) {\n\t\t\tthis.options.keyframeHandler.group.add(this._object);\n\t\t}\n\t}\n\tupdateMaterial() {\n\t\tconst material = this.highlighted.value\n\t\t\t? MATERIAL.keyframeTangentDot.highlighted\n\t\t\t: MATERIAL.keyframeTangentDot.default;\n\t\tthis._object.material = material;\n\t}\n\tactionController() {\n\t\treturn this.options.controller.actions.keyframeTangentEnd;\n\t}\n\n\tprivate _keyframePos = new Vector2();\n\tprivate _endPointStart = new Vector2();\n\tprivate _cursorMoveStart = new Vector2();\n\tprivate _cursorMoveProgress = new Vector2();\n\tprivate _endPointMoveProgress = new Vector2();\n\tprivate _paramStartValue: string | undefined;\n\toverride onMoveStart(event: PointerEvent, start: Vector2) {\n\t\tconst param = this._dataParam();\n\t\tif (!(param && this.options.channelData.value)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._paramStartValue = param.value;\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe || this._tangentComputed.value == null) {\n\t\t\treturn;\n\t\t}\n\t\tkeyframeTangentToEndPoint(keyframe, this.isInTangent, this._endPointStart);\n\t\t// this._tangentStart.set(this._tangentComputed.value.x, this._tangentComputed.value.y);\n\t\tthis._keyframePos.set(keyframe.pos, keyframe.value);\n\t\tthis._cursorMoveStart.copy(start);\n\t}\n\toverride onMoveProgress(event: PointerEvent, delta: Vector2) {\n\t\tconst param = this._dataParam();\n\t\tif (!(param && this.subChannelDatas.value)) {\n\t\t\treturn;\n\t\t}\n\t\tconst keyframe = this.keyframe.value;\n\t\tif (!keyframe || this._tangentComputed.value == null) {\n\t\t\treturn;\n\t\t}\n\t\tconst mult = this.isInTangent ? -1 : 1;\n\n\t\tthis._cursorMoveProgress.copy(this._cursorMoveStart).add(delta);\n\t\tthis._endPointMoveProgress.copy(this._cursorMoveProgress).sub(this._keyframePos).multiplyScalar(mult);\n\t\t// console.log(this._endPointMoveProgress);\n\n\t\tif (event.shiftKey) {\n\t\t\tconst newLength = this._endPointMoveProgress.length();\n\t\t\tthis._endPointMoveProgress.copy(this._endPointStart).normalize().multiplyScalar(newLength);\n\t\t}\n\n\t\tclampTangentAngle(this._endPointMoveProgress, this.isInTangent);\n\n\t\tendPointToKeyframeTangent(this._endPointMoveProgress, this.isInTangent, this._tangentComputed.value);\n\n\t\t// this._tangentComputed.value.x = this._tanMoveProgress.x;\n\t\t// this._tangentComputed.value.y = this._tanMoveProgress.y;\n\n\t\t// set param\n\t\tconst newValue = channelDataToString(this.subChannelDatas.value);\n\t\tparam.set(newValue);\n\t}\n\toverride async onMoveEnd() {\n\t\tconst param = this._dataParam();\n\t\tif (!(param && this.subChannelDatas.value)) {\n\t\t\treturn;\n\t\t}\n\t\tconst newValue = channelDataToString(this.subChannelDatas.value);\n\t\tconst cmd = new ParamSetCommand(param, newValue, this._paramStartValue);\n\t\tawait Editor.instance().pushCommand(cmd);\n\t}\n\tintersectsBox(box: Box2) {\n\t\treturn false;\n\t}\n\tprivate _raycastGPUMaterial: PointsMaterial | undefined;\n\traycastGPUMaterial() {\n\t\treturn (this._raycastGPUMaterial = this._raycastGPUMaterial || pointsRaycastGPUMaterial(this._raycastGPUColor));\n\t}\n}\n","import {computed, watch, ComputedRef} from 'vue';\nimport {Group} from 'three';\nimport {ChannelData, KeyframeData} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {ChannelHandler} from './ChannelHandler';\nimport {KeyframeHandleValue} from '../objects/KeyframeHandleValue';\nimport {KeyframeHandlePosition} from '../objects/KeyframeHandlePosition';\nimport {KeyframeTangentLine} from '../objects/KeyframeTangentLine';\nimport {KeyframeTangentDot} from '../objects/KeyframeTangentDot';\nimport {CoreGraphNodeId} from '../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\n\ninterface KeyframeHandlerOptions {\n\tcontroller: KeyframeEditorSceneController;\n\tchannelHandler: ChannelHandler;\n\tnodeId: CoreGraphNodeId;\n\tchannelIndex: number;\n\tsubChannelIndex: number;\n\tkeyframeIndex: number;\n}\nexport class KeyframeHandler {\n\tpublic readonly group: Group = new Group();\n\tprotected channelData: ComputedRef<ChannelData | null>;\n\t// protected channelName: ComputedRef<string | null>;\n\tpublic readonly keyframe: ComputedRef<KeyframeData | null>;\n\tprivate _valueHandle: KeyframeHandleValue;\n\tprivate _keyframeTangentLineStart: KeyframeTangentLine;\n\tprivate _keyframeTangentLineEnd: KeyframeTangentLine;\n\tprivate _keyframeTangentDotStart: KeyframeTangentDot;\n\tprivate _keyframeTangentDotEnd: KeyframeTangentDot;\n\tprivate _positionHandle: KeyframeHandlePosition;\n\tpublic readonly keyframeIndex: ComputedRef<number>;\n\tconstructor(protected options: KeyframeHandlerOptions) {\n\t\tconst {controller, channelHandler, nodeId, channelIndex, subChannelIndex, keyframeIndex} = options;\n\t\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\t\tthis.keyframeIndex = computed(() => keyframeIndex);\n\t\tthis.channelData = computed(() => {\n\t\t\tconst nodeData = keyframeEditor.channelDatasByNodeIds.value[nodeId];\n\t\t\tif (!nodeData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst channelData = nodeData[channelIndex];\n\t\t\tif (!channelData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn channelData[subChannelIndex] || null;\n\t\t});\n\n\t\t// this.channelName = computed(() => {\n\t\t// \tconst nodeData = keyframeEditor.channelNamesByNodeId.value[nodeId];\n\t\t// \treturn nodeData ? nodeData[channelIndex] : null;\n\t\t// });\n\t\tthis.keyframe = computed(() =>\n\t\t\tthis.channelData.value ? this.channelData.value.keyframes[this.keyframeIndex.value] : null\n\t\t);\n\t\t//\n\t\tchannelHandler.group.add(this.group);\n\t\tthis.group.matrixAutoUpdate = false;\n\t\t//\n\n\t\t// this.keyframeEnd = computed(() => this.channelData.value[this.index + 1]);\n\t\t// const nodePath = computed(() => {\n\t\t// \tconst jsonNode = StoreController.engine.json_node(this.nodeId);\n\t\t// \tif (jsonNode) {\n\t\t// \t\tconst node = StoreController.engine.node(this.nodeId) as KeyframesJsNode;\n\t\t// \t\tconst nodePath = node.path();\n\t\t// \t\treturn nodePath;\n\t\t// \t} else {\n\t\t// \t\treturn '';\n\t\t// \t}\n\t\t// });\n\n\t\tthis._valueHandle = new KeyframeHandleValue({\n\t\t\tcontroller,\n\t\t\tkeyframeHandler: this,\n\t\t\tnodeId,\n\t\t\tchannelData: this.channelData,\n\t\t\tchannelIndex,\n\t\t\tsubChannelIndex,\n\t\t\tkeyframeIndex: this.keyframeIndex,\n\t\t});\n\t\tthis._positionHandle = new KeyframeHandlePosition({\n\t\t\tcontroller,\n\t\t\tkeyframeHandler: this,\n\t\t\tnodeId,\n\t\t\tchannelData: this.channelData,\n\t\t\tchannelIndex,\n\t\t\tsubChannelIndex,\n\t\t\tkeyframeIndex: this.keyframeIndex,\n\t\t});\n\t\t// this._keyframeDotEnd = new KeyframeDot(this.controller, this, this.keyframeEnd);\n\t\tthis._keyframeTangentLineStart = new KeyframeTangentLine(\n\t\t\t{\n\t\t\t\tcontroller,\n\t\t\t\tkeyframeHandler: this,\n\t\t\t\tnodeId,\n\t\t\t\tchannelData: this.channelData,\n\t\t\t\tchannelIndex,\n\t\t\t\tsubChannelIndex,\n\t\t\t\tkeyframeIndex: this.keyframeIndex,\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t\tthis._keyframeTangentLineEnd = new KeyframeTangentLine(\n\t\t\t{\n\t\t\t\tcontroller,\n\t\t\t\tkeyframeHandler: this,\n\t\t\t\tnodeId,\n\t\t\t\tchannelData: this.channelData,\n\t\t\t\tchannelIndex,\n\t\t\t\tsubChannelIndex,\n\t\t\t\tkeyframeIndex: this.keyframeIndex,\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tthis._keyframeTangentDotStart = new KeyframeTangentDot(\n\t\t\t{\n\t\t\t\tcontroller,\n\t\t\t\tkeyframeHandler: this,\n\t\t\t\tnodeId,\n\t\t\t\tchannelData: this.channelData,\n\t\t\t\tchannelIndex,\n\t\t\t\tsubChannelIndex,\n\t\t\t\tkeyframeIndex: this.keyframeIndex,\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t\tthis._keyframeTangentDotEnd = new KeyframeTangentDot(\n\t\t\t{\n\t\t\t\tcontroller,\n\t\t\t\tkeyframeHandler: this,\n\t\t\t\tnodeId,\n\t\t\t\tchannelData: this.channelData,\n\t\t\t\tchannelIndex,\n\t\t\t\tsubChannelIndex,\n\t\t\t\tkeyframeIndex: this.keyframeIndex,\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\twatch(this.keyframe, this._update.bind(this), {deep: true});\n\t\t// watch(this.keyframeEnd, this._update.bind(this), {deep: true});\n\t\tthis._update();\n\t}\n\tdispose() {\n\t\tthis.options.channelHandler.group.remove(this.group);\n\t\tthis._valueHandle.dispose();\n\t\t// this._keyframeDotEnd.dispose();\n\t\tthis._keyframeTangentLineStart.dispose();\n\t\tthis._keyframeTangentLineEnd.dispose();\n\t\tthis._keyframeTangentDotStart.dispose();\n\t\tthis._keyframeTangentDotEnd.dispose();\n\t\tthis._positionHandle.dispose();\n\t}\n\tprivate _update() {\n\t\tif (this.keyframe.value == null) {\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._valueHandle.update();\n\t\t// this._keyframeDotEnd.update();\n\t\tthis._keyframeTangentLineStart.update();\n\t\tthis._keyframeTangentLineEnd.update();\n\t\tthis._keyframeTangentDotStart.update();\n\t\tthis._keyframeTangentDotEnd.update();\n\t\tthis._positionHandle.update();\n\t}\n\t// onMovePositionStart() {\n\t// \tthis.channelHandler.onKeyframeMovePositionStart(this);\n\t// }\n\t// onMovePositionProgress(delta: Vector2, startPos: number) {\n\t// \tthis.channelHandler.onKeyframeMovePositionProgress(this, delta, startPos);\n\t// }\n\t// onMovePositionEnd() {\n\t// \tthis.channelHandler.onKeyframeMovePositionEnd(this);\n\t// }\n}\n","import {Ref, ref, computed, watch, ComputedRef} from 'vue';\nimport {Group, Box2, Vector2} from 'three';\nimport {\n\tChannelData,\n\tKeyframeData,\n\tKeyframeTangent,\n} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {Channel} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/Channel';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {SegmentHandler} from './SegmentHandler';\nimport {KeyframeHandler} from './KeyframeHandler';\nimport {CoreGraphNodeId} from '../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\nimport {KeyframesJsNode} from '../../../../../../../@polygonjs/polygonjs/src/engine/nodes/js/Keyframes';\nimport {NodeHandler} from './NodeHandler';\nimport {\n\tgetTangent,\n\tcreateKeyframeTangent,\n\tcopyKeyframeTangent,\n\tlerpKeyframeTangents,\n} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\nimport {channelBounds} from '../common/Utils';\n\nconst previousTangent = createKeyframeTangent();\nconst nextTangent = createKeyframeTangent();\nconst prevValue = new Vector2();\nconst nextValue = new Vector2();\n\ninterface ChannelHandlerOptions {\n\tcontroller: KeyframeEditorSceneController;\n\tnodeHandler: NodeHandler;\n\tnodeId: CoreGraphNodeId;\n\tchannelIndex: number;\n\tsubChannelIndex: number;\n}\ninterface ComputeBoundsOptions {\n\tfirstPos?: number;\n\tlastPos?: number;\n}\n\nexport class ChannelHandler {\n\tpublic readonly channelData: ComputedRef<ChannelData | null>;\n\tpublic readonly visible: ComputedRef<boolean>;\n\t// public readonly dataParamId: ComputedRef<CoreGraphNodeId | null>;\n\tprivate _channel: Channel | null;\n\tpublic readonly group: Group = new Group();\n\tpublic readonly segmentHandlers: SegmentHandler[] = [];\n\tpublic readonly keyframeHandlers: KeyframeHandler[] = [];\n\tpublic readonly valuesByPos: Ref<Record<number, number>> = ref({});\n\tconstructor(protected options: ChannelHandlerOptions) {\n\t\tconst {nodeHandler, nodeId, channelIndex, subChannelIndex} = options;\n\t\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\t\t// this.dataParamId = computed(() => {\n\t\t// \tconst nodeData = keyframeEditor.channelDataParamIdsByNodeId.value[this.nodeId];\n\t\t// \treturn nodeData ? nodeData[this.channelIndex] : null;\n\t\t// });\n\t\tthis.channelData = computed(() => {\n\t\t\tconst nodeData = keyframeEditor.channelDatasByNodeIds.value[nodeId];\n\t\t\tif (!nodeData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst channelData = nodeData[channelIndex];\n\t\t\tif (!channelData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn channelData[subChannelIndex] || null;\n\t\t});\n\t\tthis.visible = computed(() => {\n\t\t\tconst displayedStateForNode =\n\t\t\t\tkeyframeEditor.channelDisplayedStateBySubChannelIndexByChannelIndexByNodeId.value[nodeId];\n\t\t\tif (!displayedStateForNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst subChannelStates = displayedStateForNode[channelIndex];\n\t\t\tif (subChannelStates == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn subChannelStates[subChannelIndex] || false;\n\t\t});\n\n\t\tthis._channel = this.channelData.value ? new Channel(this.channelData.value) : null;\n\t\t//\n\t\tnodeHandler.group.add(this.group);\n\t\tthis.group.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\t// watch one channel at a time\n\t\t// TODO: save with a command\n\t\tconst node = StoreController.engine.node(nodeId) as KeyframesJsNode;\n\t\tif (!node) {\n\t\t\tthrow 'bad node';\n\t\t}\n\t\twatch(\n\t\t\tthis.channelData,\n\t\t\t(newData) => {\n\t\t\t\tthis._channel?.compute();\n\t\t\t\tthis._build(newData);\n\t\t\t\t// node.scene().batchUpdates(() => {\n\t\t\t\t// \tif (this.channelData.value) {\n\t\t\t\t// \t\tconst dataParam = node.channelDataParams()[this.channelIndex];\n\t\t\t\t// \t\tconst json = channelDataToString(this.channelData.value);\n\t\t\t\t// \t\tdataParam.set(json);\n\t\t\t\t// \t}\n\t\t\t\t// });\n\t\t\t},\n\t\t\t{deep: true}\n\t\t);\n\t\twatch(this.visible, () => this._updateVisibility());\n\t\tthis._build(this.channelData.value);\n\t\tthis._updateVisibility();\n\t}\n\tchannelIndex() {\n\t\treturn this.options.channelIndex;\n\t}\n\tsubChannelIndex() {\n\t\treturn this.options.subChannelIndex;\n\t}\n\tkeyframe(index: number) {\n\t\treturn this._channel?.data.keyframes[index];\n\t}\n\tchannelValue(time: number) {\n\t\tif (this._channel) {\n\t\t\treturn this._channel.value(time);\n\t\t}\n\t}\n\tchannelTangent(time: number, target: KeyframeTangent) {\n\t\tconst v0 = this.channelValue(time - 1) || 0;\n\t\tconst v1 = this.channelValue(time + 1) || 0;\n\t\tprevValue.set(time - 1, v0);\n\t\tnextValue.set(time + 1, v1);\n\t\tlet previousKeyframe: KeyframeData | undefined;\n\t\tlet nextKeyframe: KeyframeData | undefined;\n\n\t\tif (!this.channelData.value) {\n\t\t\ttarget.slope = 0;\n\t\t\ttarget.accel = 1;\n\t\t\treturn;\n\t\t}\n\t\tfor (const keyframeData of this.channelData.value.keyframes) {\n\t\t\tif (keyframeData.pos < time) {\n\t\t\t\tpreviousKeyframe = keyframeData;\n\t\t\t}\n\t\t\tif (keyframeData.pos > time && nextKeyframe == null) {\n\t\t\t\tnextKeyframe = keyframeData;\n\t\t\t}\n\t\t}\n\t\tif (previousKeyframe) {\n\t\t\tconst t = getTangent(previousKeyframe, false);\n\t\t\tcopyKeyframeTangent(t, previousTangent);\n\t\t}\n\t\tif (nextKeyframe) {\n\t\t\tconst t = getTangent(nextKeyframe, true);\n\t\t\tcopyKeyframeTangent(t, nextTangent);\n\t\t}\n\t\t// if we have both tangents (before and after)\n\t\tif (previousKeyframe && nextKeyframe) {\n\t\t\tconst t = (time - previousKeyframe.pos) / (nextKeyframe.pos - previousKeyframe.pos);\n\t\t\t// previousTangent.lerp(nextTangent, t);\n\t\t\tlerpKeyframeTangents(previousTangent, nextTangent, t, target);\n\t\t\t// const length = previousTangent.accel;\n\t\t\t// target.copy(nextValue).sub(prevValue).normalize().multiplyScalar(length);\n\t\t\treturn;\n\t\t}\n\t\t// if we only have before\n\t\tif (previousKeyframe) {\n\t\t\ttarget.accel = previousTangent.accel;\n\t\t\ttarget.slope = 0;\n\t\t\t// const length = previousTangent.length();\n\t\t\t// target.set(1, 0).normalize().multiplyScalar(length);\n\t\t\treturn;\n\t\t}\n\t\t// if we only have after\n\t\tif (nextKeyframe) {\n\t\t\ttarget.accel = nextTangent.accel;\n\t\t\ttarget.slope = 0;\n\t\t\t// const length = nextTangent.length();\n\t\t\t// target.set(1, 0).normalize().multiplyScalar(length);\n\t\t\treturn;\n\t\t}\n\t\t// target.set(1, 0);\n\t\ttarget.accel = 1;\n\t\ttarget.slope = 0;\n\t}\n\tdispose() {\n\t\tthis.options.nodeHandler.group.remove(this.group);\n\t}\n\tcomputeBounds(options: ComputeBoundsOptions, target: Box2) {\n\t\tif (!this._channel) {\n\t\t\treturn;\n\t\t}\n\t\tchannelBounds({...options, channel: this._channel}, target);\n\t}\n\tprivate _updateVisibility() {\n\t\tthis.group.visible = this.visible.value;\n\t\tif (this.visible.value) {\n\t\t\tthis.options.nodeHandler.group.add(this.group);\n\t\t} else {\n\t\t\tthis.options.nodeHandler.group.remove(this.group);\n\t\t}\n\t\tthis.options.controller.markRenderRequired();\n\t}\n\tprivate _build(channelData: ChannelData | null) {\n\t\tif (!(channelData && this._channel)) {\n\t\t\treturn;\n\t\t}\n\t\tconst keyframes = channelData.keyframes;\n\t\tconst {controller, nodeId, channelIndex, subChannelIndex} = this.options;\n\n\t\t//\n\t\tthis.valuesByPos.value = {};\n\t\tif (keyframes.length > 0) {\n\t\t\tconst firstPos = keyframes[0].pos;\n\t\t\tconst lastPos = keyframes[keyframes.length - 1].pos;\n\t\t\tfor (let i = firstPos; i <= lastPos; i++) {\n\t\t\t\tthis.valuesByPos.value[i] = this._channel.value(i);\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\tconst keyframesCount = keyframes.length;\n\t\tconst segmentsCount = keyframesCount - 1;\n\t\tif (this.segmentHandlers.length > segmentsCount) {\n\t\t\tconst removedSegments = this.segmentHandlers.splice(segmentsCount);\n\t\t\tfor (let segment of removedSegments) {\n\t\t\t\tsegment.dispose();\n\t\t\t}\n\t\t}\n\t\tif (this.keyframeHandlers.length > keyframesCount) {\n\t\t\tconst removedKeyframes = this.keyframeHandlers.splice(keyframesCount);\n\t\t\tfor (let keyframe of removedKeyframes) {\n\t\t\t\tkeyframe.dispose();\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < segmentsCount; i++) {\n\t\t\tthis.segmentHandlers[i] =\n\t\t\t\tthis.segmentHandlers[i] ||\n\t\t\t\tnew SegmentHandler({\n\t\t\t\t\tcontroller,\n\t\t\t\t\tchannelHandler: this,\n\t\t\t\t\tnodeId,\n\t\t\t\t\tchannelIndex,\n\t\t\t\t\tsubChannelIndex,\n\t\t\t\t\tsegmentIndex: i,\n\t\t\t\t});\n\t\t}\n\n\t\tfor (let i = 0; i < keyframesCount; i++) {\n\t\t\tlet keyframeHandler = this.keyframeHandlers[i];\n\t\t\tif (!keyframeHandler) {\n\t\t\t\tkeyframeHandler = new KeyframeHandler({\n\t\t\t\t\tcontroller,\n\t\t\t\t\tchannelHandler: this,\n\t\t\t\t\tnodeId,\n\t\t\t\t\tchannelIndex,\n\t\t\t\t\tsubChannelIndex,\n\t\t\t\t\tkeyframeIndex: i,\n\t\t\t\t});\n\t\t\t\tthis.keyframeHandlers[i] = keyframeHandler;\n\t\t\t}\n\t\t}\n\t}\n}\n","import {watch, computed, ComputedRef} from 'vue';\nimport {Group} from 'three';\nimport {ChannelData} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {ChannelHandler} from './ChannelHandler';\nimport {CoreGraphNodeId} from '../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\n// import {KeyframesJsNode} from '../../../../../../../@polygonjs/polygonjs/src/engine/nodes/js/Keyframes';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\n\nexport class NodeHandler {\n\tpublic readonly group: Group = new Group();\n\t// public readonly segmentHandlers: SegmentHandler[] = [];\n\t// public readonly channelHandlers: ChannelHandler[] = [];\n\t// public readonly valuesByPos: Ref<Record<number, number>> = ref({});\n\tpublic readonly channelsData: ComputedRef<ChannelData[][] | null>;\n\tpublic readonly channelDataParamIds: ComputedRef<CoreGraphNodeId[] | null>;\n\t// public readonly channelNames: ComputedRef<string[] | null>;\n\tpublic readonly channelHandlers: ChannelHandler[][] = [];\n\n\tconstructor(protected controller: KeyframeEditorSceneController, protected nodeId: CoreGraphNodeId) {\n\t\t// const node = StoreController.engine.node(this.nodeId) as KeyframesJsNode;\n\t\tconst keyframecontroller = StoreController.editor.keyframeEditor;\n\t\t// this.channelNames = computed(() => keyframecontroller.channelNamesByNodeId.value[this.nodeId]);\n\t\tthis.channelsData = computed(() => keyframecontroller.channelDatasByNodeIds.value[this.nodeId]);\n\t\tthis.channelDataParamIds = computed(\n\t\t\t() => StoreController.editor.keyframeEditor.channelDataParamIdsByNodeId.value[nodeId]\n\t\t);\n\t\t// node.channelsData(this.channelsData.value);\n\t\t// this.channelNames = computed(() => {\n\t\t// \treturn Object.keys(this.channelsData.value || {});\n\t\t// });\n\n\t\twatch(\n\t\t\tthis.channelsData,\n\t\t\t() => {\n\t\t\t\tthis._build();\n\t\t\t\tthis.controller.markRenderRequired();\n\t\t\t},\n\t\t\t{deep: true}\n\t\t);\n\t\tthis._build();\n\t}\n\tdispose() {\n\t\tthis.controller.nodesGroup.remove(this.group);\n\t\tthis.channelHandlers.forEach((list) => list.map((c) => c.dispose()));\n\t}\n\n\ttraverseDisplayedChannelHandlers(callback: (channelHandler: ChannelHandler) => void) {\n\t\tthis.channelHandlers.forEach((list, channelIndex) =>\n\t\t\tlist.forEach((c, subChannelIndex) => {\n\t\t\t\tconst isDisplayed = StoreController.editor.keyframeEditor.isChannelDisplayed({\n\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\tchannelIndex,\n\t\t\t\t\tsubChannelIndex,\n\t\t\t\t});\n\t\t\t\tif (isDisplayed) {\n\t\t\t\t\tcallback(c);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate _build() {\n\t\t// if (!this.channelNames.value) {\n\t\t// \treturn;\n\t\t// }\n\t\t// let i = 0;\n\t\t// for (const _ of this.channelNames.value) {\n\t\t// \tlet channelHandler = this.channelHandlersByIndex[i];\n\t\t// \tif (!channelHandler) {\n\t\t// \t\tchannelHandler = new ChannelHandler(this.controller, this, this.nodeId, i);\n\t\t// \t\tthis.channelHandlersByIndex[i] = channelHandler;\n\t\t// \t}\n\t\t// \ti++;\n\t\t// }\n\t\tthis.channelsData.value?.forEach((channelData, channelIndex) => {\n\t\t\tthis.channelHandlers[channelIndex] = this.channelHandlers[channelIndex] || [];\n\t\t\tchannelData.forEach((subChannelData, subChannelIndex) => {\n\t\t\t\tlet channelHandler = this.channelHandlers[channelIndex][subChannelIndex];\n\t\t\t\tif (!channelHandler) {\n\t\t\t\t\tchannelHandler = new ChannelHandler({\n\t\t\t\t\t\tcontroller: this.controller,\n\t\t\t\t\t\tnodeHandler: this,\n\t\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\t\tchannelIndex,\n\t\t\t\t\t\tsubChannelIndex,\n\t\t\t\t\t});\n\t\t\t\t\tthis.channelHandlers[channelIndex][subChannelIndex] = channelHandler;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.controller.nodesGroup.add(this.group);\n\t}\n}\n","import {Ref, watch} from 'vue';\nimport {Vector2, OrthographicCamera, Raycaster, Plane, Vector3} from 'three';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {BaseActionController} from './actions/_BaseActionController';\nimport {MouseButton} from '../../../../../../../@polygonjs/polygonjs/src/core/MouseButton';\nimport {EventHelper} from '../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {StoreController} from '../../../../../store/controllers/StoreController';\nimport {ChannelInterpolation} from '../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {CoreDom} from '../../../../../core/Dom';\nimport {KeyframeTangentSetOptions} from './actions/KeyframeTangentSetController';\n// import {BaseObject} from '../objects/_Base';\n\nconst raycaster = new Raycaster();\nconst plane = new Plane(new Vector3(0, 0, 1), 0);\nconst CURSOR = {\n\t// camera: new OrthographicCamera(),\n\tstart: new Vector2(),\n\tmove: new Vector2(),\n\tdelta: new Vector2(),\n};\nconst RAYCAST = {\n\tcamera: new OrthographicCamera(),\n\tstart: new Vector3(),\n\tstart2D: new Vector2(),\n\tmove: new Vector3(),\n\tdelta: new Vector3(),\n\tdelta2D: new Vector2(),\n};\n\ninterface KeyframeEditorEventsOptions {\n\tcontroller: KeyframeEditorSceneController;\n\tcanvasElementParent: Ref<HTMLElement | null>;\n\tcanvasElement: Ref<HTMLCanvasElement | null>;\n}\n\nexport class KeyframeEditorEventsController {\n\tpublic readonly controller: KeyframeEditorSceneController;\n\n\tprivate _resizeObserver: ResizeObserver | undefined;\n\tprivate _currentActionController: BaseActionController | undefined;\n\n\tconstructor(public readonly options: KeyframeEditorEventsOptions) {\n\t\tconst {controller, canvasElement, canvasElementParent} = options;\n\t\tthis.controller = controller;\n\t\t//\n\t\tconst _initIfReady = () => {\n\t\t\tif (canvasElement.value && canvasElementParent.value) {\n\t\t\t\tthis._init(canvasElement.value, canvasElementParent.value);\n\t\t\t}\n\t\t};\n\t\twatch(canvasElement, _initIfReady);\n\t\twatch(canvasElementParent, _initIfReady);\n\t}\n\tdispose() {\n\t\tthis._resizeObserver?.disconnect();\n\t}\n\n\tactionInProgress() {\n\t\treturn this._currentActionController != null;\n\t}\n\n\tprivate _init(canvas: HTMLCanvasElement, canvasElementParent: HTMLElement) {\n\t\tthis._addEventListeners(canvas);\n\t\tthis._createResizeObserver(canvasElementParent);\n\t}\n\tprivate _addEventListeners(canvas: HTMLCanvasElement) {\n\t\tcanvas.addEventListener('wheel', this._onWheelZoom.bind(this));\n\t\tcanvas.addEventListener('pointerdown', this._onPointerdownBound);\n\t\tcanvas.addEventListener('contextmenu', (event: MouseEvent) => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t}\n\n\tprivate _onPointermoveProgressBound = this._onPointermoveProgress.bind(this);\n\tprivate _onPointerdownBound = this._onPointerdown.bind(this);\n\tprivate _onPointerupBound = this._onPointerup.bind(this);\n\tprivate _onPointerdown(event: PointerEvent) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tCoreDom.addDragClasses();\n\t\tthis.controller.copyCamera(RAYCAST.camera);\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.start);\n\t\traycaster.setFromCamera(CURSOR.start, RAYCAST.camera);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.start);\n\t\tRAYCAST.start2D.set(RAYCAST.start.x, RAYCAST.start.y);\n\n\t\tconst setCurrentActionController = () => {\n\t\t\tswitch (event.button) {\n\t\t\t\tcase MouseButton.LEFT: {\n\t\t\t\t\tif (event.altKey) {\n\t\t\t\t\t\tthis.controller.actions.keyframeCreate.createFromEvent(event, RAYCAST.start2D);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.controller.currentTime.hovered.value) {\n\t\t\t\t\t\tthis._currentActionController = this.controller.actions.currentTime;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst hoveredObject = this.controller.raycast.hoveredObject();\n\t\t\t\t\tif (hoveredObject) {\n\t\t\t\t\t\tconst baseObject = this.controller.objects.baseObject(hoveredObject);\n\t\t\t\t\t\tif (!baseObject) {\n\t\t\t\t\t\t\tconsole.warn('no base object found');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._currentActionController = baseObject.actionController();\n\n\t\t\t\t\t\tif (baseObject.selected.value) {\n\t\t\t\t\t\t\tconst selectedSelectionDatas =\n\t\t\t\t\t\t\t\tStoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\t\t\t\t\t\tthis._currentActionController?.setCurrentSelectionDatas(selectedSelectionDatas, baseObject);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._currentActionController?.setCurrentSelectionDatas(\n\t\t\t\t\t\t\t\t[baseObject.selectionData()],\n\t\t\t\t\t\t\t\tbaseObject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!this._currentActionController) {\n\t\t\t\t\t\tthis._currentActionController = this.controller.actions.selection;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase MouseButton.MIDDLE: {\n\t\t\t\t\tthis._currentActionController = this.controller.actions.cameraPan;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase MouseButton.RIGHT: {\n\t\t\t\t\tthis._currentActionController = this.controller.actions.cameraZoom;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tsetCurrentActionController();\n\t\tif (this._currentActionController) {\n\t\t\tdocument.addEventListener('pointermove', this._onPointermoveProgressBound);\n\t\t\tdocument.addEventListener('pointerup', this._onPointerupBound);\n\t\t\tthis._currentActionController.onStart(event, RAYCAST.start2D);\n\t\t}\n\t}\n\tprivate _onPointerup(event: PointerEvent) {\n\t\tCoreDom.removeDragClasses();\n\t\tthis._currentActionController?.onEnd(event);\n\t\tthis._currentActionController = undefined;\n\t\tdocument.removeEventListener('pointermove', this._onPointermoveProgressBound);\n\t\tdocument.removeEventListener('pointerup', this._onPointerupBound);\n\t}\n\tprivate _onPointermoveProgress(event: PointerEvent) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.move);\n\t\traycaster.setFromCamera(CURSOR.move, RAYCAST.camera);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.move);\n\t\tRAYCAST.delta.copy(RAYCAST.move).sub(RAYCAST.start);\n\t\tRAYCAST.delta2D.set(RAYCAST.delta.x, RAYCAST.delta.y);\n\n\t\tthis._currentActionController?.onProgress(event, RAYCAST.delta2D);\n\t}\n\n\t//\n\t//\n\t// WHEEL ZOOM\n\t//\n\t//\n\tprivate _onWheelZoom(event: WheelEvent) {\n\t\tconst delta = event.deltaY * 0.001;\n\t\tthis.controller.frustumSize.value.multiplyScalar(1 + delta);\n\t}\n\n\t//\n\t//\n\t// resize\n\t//\n\t//\n\tprivate _createResizeObserver(canvasElementParent: HTMLElement) {\n\t\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tconst s = entry.contentBoxSize[0];\n\t\t\t\tconst w = Math.floor(s.inlineSize);\n\t\t\t\tconst h = Math.floor(s.blockSize);\n\t\t\t\tthis.controller.rendererSize.value.set(w, h);\n\t\t\t});\n\t\t});\n\t\tresizeObserver.observe(canvasElementParent);\n\t\tthis.onResize();\n\t}\n\tonResize() {\n\t\tconst canvasElementParent = this.options.canvasElementParent.value;\n\t\tif (!canvasElementParent) {\n\t\t\treturn;\n\t\t}\n\t\tconst rect = canvasElementParent.getBoundingClientRect();\n\t\tthis.controller.rendererSize.value.set(rect.width, rect.height);\n\t}\n\t//\n\t//\n\t// Key actions\n\t//\n\t//\n\tdeleteSelectedKeys() {\n\t\tconst controller = this.controller.actions.keyframeDelete;\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\tcontroller.setCurrentSelectionDatas(selectedSelectionDatas);\n\t\tcontroller.deleteSelection();\n\t}\n\t//\n\t//\n\t//\n\t//\n\t//\n\n\tsplitTangents() {\n\t\tconst controller = this.controller.actions.keyframeTangentSplit;\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\tcontroller.setCurrentSelectionDatas(selectedSelectionDatas);\n\t\tcontroller.deleteSelection();\n\t}\n\tmergeTangents() {\n\t\tconst controller = this.controller.actions.keyframeTangentMerge;\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\tcontroller.setCurrentSelectionDatas(selectedSelectionDatas);\n\t\tcontroller.deleteSelection();\n\t}\n\tsetSelectedChannelInterpolation(interpolation: ChannelInterpolation) {\n\t\tconst controller = this.controller.actions.channelInterpolation;\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\tcontroller.setCurrentSelectionDatas(selectedSelectionDatas);\n\t\tcontroller.setSelectedChannelsInterpolation(interpolation);\n\t}\n\tsetSelectedKeyframesPosition(pos: number) {\n\t\tconst controller = this.controller.actions.keyframePosition;\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\tcontroller.setCurrentSelectionDatas(selectedSelectionDatas);\n\t\tcontroller.setSelectedKeyframesPosition(pos);\n\t}\n\tsetSelectedKeyframesValue(value: number) {\n\t\tconst controller = this.controller.actions.keyframeValue;\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\tcontroller.setCurrentSelectionDatas(selectedSelectionDatas);\n\t\tcontroller.setSelectedKeyframesValue(value);\n\t}\n\tsetSelectedKeyframesValueTangent(options: KeyframeTangentSetOptions) {\n\t\tconst controller = this.controller.actions.keyframeTangentSet;\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\t\tcontroller.setCurrentSelectionDatas(selectedSelectionDatas);\n\t\tcontroller.setSelectedTangents(options);\n\t}\n}\n","import {Ref, watch} from 'vue';\nimport {Vector2, Vector4, Mesh, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, FloatType} from 'three';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {EventHelper} from '../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {OBJECT_IDS_SET, ObjectId} from '../common/Constant';\n// import {RaycasterForBVH} from '../../../../../../../@polygonjs/polygonjs/src/core/geometry/bvh/three-mesh-bvh';\n\nconst cursor = new Vector2();\nconst cursorGPU = new Vector2();\nconst raycastGPUValue = new Vector4();\n// const POINT_THRESHOLD_MULT = 1;\n// function _createRaycaster() {\n// \tconst raycaster = new Raycaster();\n// \t(raycaster as RaycasterForBVH).firstHitOnly = true;\n// \traycaster.params.Line = {threshold: 0.01};\n// \traycaster.params.Points = {threshold: 0.01 * POINT_THRESHOLD_MULT};\n// \treturn raycaster;\n// }\n// const raycaster = _createRaycaster();\n\ninterface KeyframeEditorRaycastOptions {\n\tcontroller: KeyframeEditorSceneController;\n\t// canvasElementParent: Ref<HTMLElement | null>;\n\tcanvasElement: Ref<HTMLCanvasElement | null>;\n\t// canvasGPURaycastElement: Ref<HTMLCanvasElement | null>;\n}\n\nexport class KeyframeEditorRaycast {\n\tpublic readonly controller: KeyframeEditorSceneController;\n\t// private _intersections: Intersection[] = [];\n\tprivate _hoveredObject: Mesh | undefined;\n\tprivate _renderTarget: WebGLRenderTarget = new WebGLRenderTarget(1, 1, {\n\t\tminFilter: LinearFilter,\n\t\tmagFilter: NearestFilter,\n\t\tformat: RGBAFormat,\n\t\ttype: FloatType,\n\t});\n\tprivate _raycastGPUBuffer = new Float32Array(4);\n\n\tconstructor(public readonly options: KeyframeEditorRaycastOptions) {\n\t\tconst {controller, canvasElement} = options;\n\t\tthis.controller = controller;\n\t\t//\n\t\tconst _initIfReady = () => {\n\t\t\tif (canvasElement.value) {\n\t\t\t\tthis._init(canvasElement.value);\n\t\t\t}\n\t\t};\n\t\twatch(canvasElement, _initIfReady);\n\n\t\t// const raycasterParamsVariables = [this.controller.frustumSize, this.controller.rendererSize];\n\t\t// for (let raycasterVariable of raycasterParamsVariables) {\n\t\t// \twatch(\n\t\t// \t\traycasterVariable,\n\t\t// \t\t() => {\n\t\t// \t\t\tthis._updateRaycasterParams();\n\t\t// \t\t},\n\t\t// \t\t{deep: true}\n\t\t// \t);\n\t\t// }\n\t\t// this._updateRaycasterParams();\n\t}\n\tdispose() {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (canvas) {\n\t\t\tcanvas.removeEventListener('pointermove', this._onPointermoveBound);\n\t\t}\n\t}\n\thoveredObject() {\n\t\treturn this._hoveredObject;\n\t}\n\n\tprivate _init(canvasGPURaycast: HTMLCanvasElement) {\n\t\tthis._addEventListeners(canvasGPURaycast);\n\t}\n\tprivate _addEventListeners(canvas: HTMLCanvasElement) {\n\t\tcanvas.addEventListener('pointermove', this._onPointermoveBound);\n\t}\n\tprivate _onPointermoveBound = this._onPointermove.bind(this);\n\tprivate _onPointermove(event: PointerEvent) {\n\t\tif (this.options.controller.events.actionInProgress()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst _unhighlightHoveredObject = () => {\n\t\t\tif (this._hoveredObject) {\n\t\t\t\tconst baseObject = this.controller.objects.baseObject(this._hoveredObject);\n\t\t\t\tif (baseObject) {\n\t\t\t\t\tbaseObject.highlighted.value = false;\n\t\t\t\t}\n\t\t\t\tthis._hoveredObject = undefined;\n\t\t\t}\n\t\t};\n\n\t\tEventHelper.normalizedPosition(event, canvas, cursor);\n\t\tcursorGPU.x = 0.5 * (cursor.x + 1);\n\t\tcursorGPU.y = 0.5 * (1 - cursor.y);\n\n\t\tthis.controller.renderRaycast(cursorGPU, this._renderTarget, this._raycastGPUBuffer);\n\n\t\traycastGPUValue.fromArray(this._raycastGPUBuffer);\n\n\t\tconst foundId = raycastGPUValue.x;\n\t\tif (OBJECT_IDS_SET.has(foundId)) {\n\t\t\t_unhighlightHoveredObject();\n\t\t\tconst objectId = foundId as ObjectId;\n\t\t\tswitch (objectId) {\n\t\t\t\tcase ObjectId.CURRENT_TIME_LINE: {\n\t\t\t\t\tthis.controller.currentTime.hovered.value = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.controller.currentTime.hovered.value = false;\n\t\t}\n\n\t\tconst foundBaseObject = this.controller.objects.baseObjectFromId(foundId);\n\n\t\tif (!foundBaseObject) {\n\t\t\tconst current = this._hoveredObject;\n\t\t\t_unhighlightHoveredObject();\n\t\t\tif (current) {\n\t\t\t\tthis.controller.markRenderRequired();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hoveredObject && foundBaseObject.object() != this._hoveredObject) {\n\t\t\t_unhighlightHoveredObject();\n\t\t}\n\n\t\tfoundBaseObject.highlighted.value = true;\n\t\tthis._hoveredObject = foundBaseObject.object() as Mesh;\n\t\tthis.controller.markRenderRequired();\n\t}\n\t// private _updateRaycasterParams() {\n\t// \tconst max = Math.max(\n\t// \t\tthis.controller.frustumSize.value.x, // this.controller.rendererSize.value.x,\n\t// \t\tthis.controller.frustumSize.value.y // this.controller.rendererSize.value.y\n\t// \t);\n\t// \tconst threshold = max * 0.001;\n\t// \traycaster.params.Line!.threshold = threshold;\n\t// \traycaster.params.Points!.threshold = threshold * POINT_THRESHOLD_MULT;\n\t// }\n}\n","import {Object3D} from 'three';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {BaseObject} from '../objects/_Base';\n\ninterface KeyframeEditorObjectsRegisterOptions {\n\tcontroller: KeyframeEditorSceneController;\n}\ntype ForEachCallback = (baseObject: BaseObject, object3D: Object3D) => void;\n\nexport class KeyframeEditorObjectsController {\n\tprivate _baseObjectByObject3D: Map<Object3D, BaseObject> = new Map();\n\tprivate _baseObjectById: Map<number, BaseObject> = new Map();\n\n\tconstructor(public readonly options: KeyframeEditorObjectsRegisterOptions) {}\n\tdispose() {}\n\n\tregister(baseObject: BaseObject) {\n\t\tthis._baseObjectByObject3D.set(baseObject.object(), baseObject);\n\t\tthis._baseObjectById.set(baseObject.id, baseObject);\n\t}\n\tunregister(baseObject: BaseObject) {\n\t\tthis._baseObjectByObject3D.delete(baseObject.object());\n\t\tthis._baseObjectById.delete(baseObject.id);\n\t}\n\tbaseObject(object: Object3D) {\n\t\treturn this._baseObjectByObject3D.get(object);\n\t}\n\tforEachObject(callback: ForEachCallback) {\n\t\tthis._baseObjectByObject3D.forEach(callback);\n\t}\n\tbaseObjectFromId(id: number) {\n\t\treturn this._baseObjectById.get(id);\n\t}\n}\n","import {Raycaster, Vector2, Box2, LineSegments, BufferAttribute, BufferGeometry, Group, LineBasicMaterial} from 'three';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {MATERIAL, Z_POS} from '../common/Constant';\nimport {validatesBox2} from '../common/Utils';\nimport {watch} from 'vue';\nimport {CoreGeometryBuilderMerge} from '../../../../../../../@polygonjs/polygonjs/src/core/geometry/modules/three/builders/Merge';\nimport {CSS2DObject} from '../../../../../../../@polygonjs/polygonjs/src/core/render/CSSRenderers/CSS2DObject';\n\nfunction _createRaycaster() {\n\tconst raycaster = new Raycaster();\n\treturn raycaster;\n}\nconst raycaster = _createRaycaster();\n\nconst COORDS = {\n\tTOP: {\n\t\tLEFT: new Vector2(-1, -1),\n\t},\n\tBOTTOM: {\n\t\tRIGHT: new Vector2(1, 1),\n\t},\n};\nconst viewportBound = new Box2();\nconst delta = new Vector2();\nconst viewportSize = new Vector2();\nconst intervalSize = new Vector2();\nconst gridStart = new Vector2();\n// const gridEnd = new Vector2();\n// const gridScale = new Vector2();\nconst LINES_COUNT = 20;\n// const linesCount = new Vector2();\n// const viewportSize = new Vector2();\n// const lines = _buildLineSegment()\nfunction _createCSS2DObject() {\n\tconst cssObject = new CSS2DObject();\n\tcssObject.element.classList.add('animation-editor-css2d-object-axis');\n\treturn cssObject;\n}\nconst CSS_OBJECTS_X: CSS2DObject[] = new Array(LINES_COUNT).fill(1).map(_createCSS2DObject);\nconst CSS_OBJECTS_Y: CSS2DObject[] = new Array(LINES_COUNT).fill(1).map(_createCSS2DObject);\n\nfunction _buildLineSegment(linesCount: number, material: LineBasicMaterial): LineSegments {\n\t// horizontal lines\n\tconst horizontalLinesGeometry = () => {\n\t\tconst pointsCount = linesCount * 2;\n\t\tconst positions: Float32Array = new Float32Array(pointsCount * 3);\n\t\tconst indices = new Array(pointsCount);\n\n\t\tfor (let i = 0; i < linesCount; i++) {\n\t\t\tconst y = i / linesCount;\n\t\t\tconst index = i * 2;\n\t\t\t//\n\t\t\tpositions[index * 3] = 0;\n\t\t\tpositions[index * 3 + 1] = y;\n\t\t\tpositions[index * 3 + 2] = 0;\n\t\t\t//\n\t\t\tpositions[index * 3 + 3] = 1;\n\t\t\tpositions[index * 3 + 4] = y;\n\t\t\tpositions[index * 3 + 5] = 0;\n\n\t\t\tindices[index] = index;\n\t\t\tindices[index + 1] = index + 1;\n\t\t}\n\n\t\tconst positionAttribute = new BufferAttribute(positions, 3);\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute('position', positionAttribute);\n\t\tgeometry.setIndex(indices);\n\t\treturn geometry;\n\t};\n\tconst verticalLinesGeometry = () => {\n\t\tconst pointsCount = linesCount * 2;\n\t\tconst positions: Float32Array = new Float32Array(pointsCount * 3);\n\t\tconst indices = new Array(pointsCount);\n\n\t\tfor (let i = 0; i < linesCount; i++) {\n\t\t\tconst x = i / linesCount;\n\t\t\tconst index = i * 2;\n\t\t\t//\n\t\t\tpositions[index * 3] = x;\n\t\t\tpositions[index * 3 + 1] = 0;\n\t\t\tpositions[index * 3 + 2] = 0;\n\t\t\t//\n\t\t\tpositions[index * 3 + 3] = x;\n\t\t\tpositions[index * 3 + 4] = 1;\n\t\t\tpositions[index * 3 + 5] = 0;\n\n\t\t\tindices[index] = index;\n\t\t\tindices[index + 1] = index + 1;\n\t\t}\n\n\t\tconst positionAttribute = new BufferAttribute(positions, 3);\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute('position', positionAttribute);\n\t\tgeometry.setIndex(indices);\n\t\treturn geometry;\n\t};\n\tconst geometries = [horizontalLinesGeometry(), verticalLinesGeometry()];\n\tconst geometry = CoreGeometryBuilderMerge.merge(geometries);\n\n\tconst lineSegments = new LineSegments(geometry, material);\n\treturn lineSegments;\n}\n\ninterface BackgroundGridControllerOptions {\n\tcontroller: KeyframeEditorSceneController;\n}\n\nexport class BackgroundGridController {\n\tpublic readonly controller: KeyframeEditorSceneController;\n\tprivate _group = new Group();\n\t// private gridHelper: GridHelper;\n\tprivate lines = _buildLineSegment(LINES_COUNT, MATERIAL.bgGrid.lines);\n\tprivate axis1 = _buildLineSegment(1, MATERIAL.bgGrid.axis);\n\tprivate axis2 = _buildLineSegment(1, MATERIAL.bgGrid.axis);\n\tconstructor(public readonly options: BackgroundGridControllerOptions) {\n\t\tconst {controller} = options;\n\t\tthis.controller = controller;\n\t\tthis.controller.scene.add(this._group);\n\n\t\tthis.lines.matrixAutoUpdate = false;\n\t\tthis.lines.position.z = Z_POS.planeHelper;\n\t\tthis.axis1.matrixAutoUpdate = false;\n\t\tthis.axis1.position.z = Z_POS.planeHelperAxis;\n\t\tthis.axis2.matrixAutoUpdate = false;\n\t\tthis.axis2.position.z = Z_POS.planeHelperAxis;\n\t\tthis.axis2.rotateZ(Math.PI);\n\t\tthis._group.add(this.lines);\n\t\tthis._group.add(this.axis1);\n\t\tthis._group.add(this.axis2);\n\n\t\tCSS_OBJECTS_X.forEach((cssObject) => this._group.add(cssObject));\n\t\tCSS_OBJECTS_Y.forEach((cssObject) => this._group.add(cssObject));\n\n\t\tconst frustumSize = this.controller.frustumSize;\n\t\tconst rendererSize = this.controller.rendererSize;\n\t\tconst cameraPos = this.controller.cameraPos;\n\t\tconst toWatchs = [frustumSize, rendererSize, cameraPos];\n\n\t\tfor (const toWatch of toWatchs) {\n\t\t\twatch(\n\t\t\t\ttoWatch,\n\t\t\t\t() => {\n\t\t\t\t\tthis.update();\n\t\t\t\t},\n\t\t\t\t{deep: true}\n\t\t\t);\n\t\t}\n\t}\n\tdispose() {}\n\n\tupdate() {\n\t\tfunction raycastToVector(vector: Vector2) {\n\t\t\tvector.x = raycaster.ray.origin.x;\n\t\t\tvector.y = raycaster.ray.origin.y;\n\t\t}\n\t\tthis.controller.setRaycaster(raycaster, COORDS.TOP.LEFT);\n\t\traycastToVector(viewportBound.min);\n\t\tthis.controller.setRaycaster(raycaster, COORDS.BOTTOM.RIGHT);\n\t\traycastToVector(viewportBound.max);\n\n\t\tvalidatesBox2(viewportBound);\n\n\t\tdelta.copy(viewportBound.max).sub(viewportBound.min);\n\n\t\tviewportBound.getSize(viewportSize);\n\t\tintervalSize.x = Math.pow(10, Math.floor(Math.log10(delta.x))) * 1;\n\t\tintervalSize.y = Math.pow(10, Math.floor(Math.log10(delta.y))) * 1;\n\n\t\tif (isNaN(intervalSize.x)) {\n\t\t\tintervalSize.x = 1;\n\t\t}\n\t\tif (isNaN(intervalSize.y)) {\n\t\t\tintervalSize.y = 1;\n\t\t}\n\t\tintervalSize.x = Math.max(1, intervalSize.x);\n\t\tintervalSize.y = Math.max(1, intervalSize.y);\n\n\t\tgridStart.x = Math.floor(viewportBound.min.x / intervalSize.x) * intervalSize.x;\n\t\tgridStart.y = Math.floor(viewportBound.min.y / intervalSize.y) * intervalSize.y;\n\n\t\t// gridEnd.x = Math.ceil(viewportBound.max.x / intervalSize.x) * intervalSize.x;\n\t\t// gridEnd.y = Math.ceil(viewportBound.max.y / intervalSize.y) * intervalSize.y;\n\n\t\t// gridScale.copy(gridEnd).sub(gridStart);\n\n\t\tthis.lines.position.x = gridStart.x;\n\t\tthis.lines.position.y = gridStart.y;\n\t\tthis.lines.scale.x = (intervalSize.x * LINES_COUNT) / 2;\n\t\tthis.lines.scale.y = (intervalSize.y * LINES_COUNT) / 2;\n\t\tthis.lines.updateMatrix();\n\t\tthis.axis1.scale.copy(this.lines.scale);\n\t\tthis.axis1.updateMatrix();\n\t\tthis.axis2.scale.copy(this.lines.scale);\n\t\tthis.axis2.updateMatrix();\n\n\t\t// CSSObjects\n\t\tconst viewportRatio = viewportSize.x / viewportSize.y;\n\t\tfor (let i = 0; i < LINES_COUNT; i++) {\n\t\t\tconst cssObjectX = CSS_OBJECTS_X[i];\n\t\t\tconst cssObjectY = CSS_OBJECTS_Y[i];\n\t\t\tif (cssObjectX) {\n\t\t\t\tcssObjectX.position.x = this.lines.position.x + i * intervalSize.x;\n\t\t\t\tcssObjectX.position.y = viewportBound.min.y + 0.05 * viewportSize.y;\n\t\t\t\tcssObjectX.updateMatrix();\n\t\t\t\tcssObjectX.element.innerHTML = cssObjectX.position.x.toString();\n\t\t\t}\n\t\t\tif (cssObjectY) {\n\t\t\t\tcssObjectY.position.x = viewportBound.min.x + (0.05 / viewportRatio) * viewportSize.x;\n\t\t\t\tcssObjectY.position.y = this.lines.position.y + i * intervalSize.y;\n\t\t\t\tcssObjectY.updateMatrix();\n\t\t\t\tcssObjectY.element.innerHTML = cssObjectY.position.y.toString();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {Ref, ref, computed, ComputedRef} from 'vue';\nimport {KeyframeEditorSceneController} from '../../KeyframeEditorSceneController';\nimport {BaseObjectSelectionData} from '../../common/Common';\nimport {\n\tkeyframeDataForSelectionData,\n\totherKeyframeDatasForSelectionData,\n\tdataParamIdForSelectionData,\n\tsubChannelDataForSelectionData,\n\tsubChannelDatasForSelectionData,\n\totherKeyframeDatasForSelectionDataNotInSelection,\n} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {ArrayUtils} from '../../../../../../../../@polygonjs/polygonjs/src/core/ArrayUtils';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {CoreGraphNodeId} from '../../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {ChannelData} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {Vector2} from 'three';\nimport {BaseObject} from '../../objects/_Base';\n\nexport interface BaseActionControllerOptions {\n\tcontroller: KeyframeEditorSceneController;\n\t// canvasElementParent: Ref<HTMLElement | null>;\n\tcanvasElement: Ref<HTMLCanvasElement | null>;\n}\n\nexport class BaseActionController {\n\t// private _currentBaseObjects: BaseObject[] = [];\n\tprotected _baseHoveredObject: BaseObject | undefined;\n\tprotected _currentSelectionDatas: Ref<BaseObjectSelectionData[]> = ref([]);\n\n\tprotected _keyframeDataForSelectionData = computed(() => {\n\t\treturn this._currentSelectionDatas.value.map(keyframeDataForSelectionData);\n\t});\n\tprotected _otherKeyframeDatasForSelectionData = computed(() => {\n\t\treturn this._currentSelectionDatas.value.map(otherKeyframeDatasForSelectionData);\n\t});\n\tprotected _otherKeyframeDatasForSelectionDataNotSelected = computed(() => {\n\t\treturn this._currentSelectionDatas.value.map(otherKeyframeDatasForSelectionDataNotInSelection);\n\t});\n\tprotected _dataParamIdForSelectionData = computed(() => {\n\t\treturn this._currentSelectionDatas.value.map(dataParamIdForSelectionData);\n\t});\n\tprotected _subChannelDataForSelectionData = computed(() => {\n\t\treturn this._currentSelectionDatas.value.map(subChannelDataForSelectionData);\n\t});\n\tprotected _subChannelDatasForSelectionData = computed(() => {\n\t\treturn this._currentSelectionDatas.value.map(subChannelDatasForSelectionData);\n\t});\n\tprotected _uniqueParamIds = computed(() => {\n\t\tconst compacted: number[] = [];\n\t\tconst uniqIds: number[] = [];\n\t\tArrayUtils.compact(this._dataParamIdForSelectionData.value, compacted);\n\t\tArrayUtils.uniq(compacted, uniqIds);\n\t\treturn uniqIds;\n\t});\n\tprotected _dataParamValueForUniqueParamIds = computed(() => {\n\t\treturn this._uniqueParamIds.value.map((paramId) => {\n\t\t\treturn StoreController.engine.json_param(paramId)?.value as string | undefined;\n\t\t});\n\t});\n\tprotected _subChannelDatasForUniqueParamIds: ComputedRef<Array<ChannelData[] | undefined>> = computed(() => {\n\t\tconst baseSelectionDatas = this._currentSelectionDatas.value;\n\t\tlet i = 0;\n\t\tconst _channelDataByParamId: Map<CoreGraphNodeId, ChannelData[]> = new Map();\n\t\tfor (let _ of baseSelectionDatas) {\n\t\t\tconst paramId = this._dataParamIdForSelectionData.value[i];\n\t\t\tconst subChannelDatas = this._subChannelDatasForSelectionData.value[i];\n\t\t\tif (paramId != null && subChannelDatas) {\n\t\t\t\t_channelDataByParamId.set(paramId, subChannelDatas);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn this._uniqueParamIds.value.map((paramId) => _channelDataByParamId.get(paramId));\n\t});\n\n\tconstructor(protected options: BaseActionControllerOptions) {}\n\tdispose() {}\n\n\tsetCurrentSelectionDatas(datas: BaseObjectSelectionData[], hoveredObject?: BaseObject) {\n\t\tthis._baseHoveredObject = hoveredObject;\n\t\tthis._currentSelectionDatas.value.length = 0;\n\t\t// if (this.useSelection()) {\n\t\tfor (let data of datas) {\n\t\t\tthis._currentSelectionDatas.value.push(data);\n\t\t}\n\t}\n\n\tonStart(event: PointerEvent, start: Vector2) {}\n\tonProgress(event: PointerEvent, delta: Vector2) {}\n\tonEnd(event: PointerEvent) {}\n}\n","import {Vector2, Line, BufferAttribute, BufferGeometry, Raycaster, Vector3, Plane, Box2} from 'three';\nimport {KeyframeEditorSceneController} from '../../KeyframeEditorSceneController';\nimport {MATERIAL, Z_POS} from '../../common/Constant';\nimport {Ref, ref, computed, watch} from 'vue';\nimport {EventHelper} from '../../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {validatesBox2} from '../../common/Utils';\n// import {MapUtils} from '../../../../../../../@polygonjs/polygonjs/src/core/MapUtils';\n// import {SetUtils} from '../../../../../../../@polygonjs/polygonjs/src/core/SetUtils';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {BaseObject} from '../../objects/_Base';\n\nconst raycaster = new Raycaster();\nconst plane = new Plane(new Vector3(0, 0, 1), 0);\nconst box = new Box2();\nconst CURSOR = {\n\t// camera: new OrthographicCamera(),\n\tstart: new Vector2(),\n\tmove: new Vector2(),\n\tdelta: new Vector2(),\n};\nconst RAYCAST = {\n\t// camera: new OrthographicCamera(),\n\tstart: new Vector3(),\n\tstart2D: new Vector2(),\n\tmove: new Vector3(),\n\tmove2D: new Vector2(),\n\t// delta: new Vector3(),\n\t// delta2D: new Vector2(),\n};\n\nexport interface SelectionRectangleData {\n\tactive: boolean;\n\tstart: Vector2;\n\tend: Vector2;\n}\ninterface SelectWithConditionsOptions {\n\tcondition: (baseObject: BaseObject) => boolean;\n\taddToSelection: boolean;\n\ttoggleSelection: boolean;\n}\n\nfunction _buildSelectionRectangle(): Line {\n\t// horizontal lines\n\tconst pointsCount = 4;\n\tconst positions: Float32Array = new Float32Array(pointsCount * 3);\n\tconst indices = [0, 1, 2, 3, 0];\n\n\tlet i = 0;\n\tpositions[i * 3] = 0;\n\tpositions[i * 3 + 1] = 0;\n\tpositions[i * 3 + 2] = 0;\n\ti++;\n\tpositions[i * 3] = 1;\n\tpositions[i * 3 + 1] = 0;\n\tpositions[i * 3 + 2] = 0;\n\ti++;\n\tpositions[i * 3] = 1;\n\tpositions[i * 3 + 1] = 1;\n\tpositions[i * 3 + 2] = 0;\n\ti++;\n\tpositions[i * 3] = 0;\n\tpositions[i * 3 + 1] = 1;\n\tpositions[i * 3 + 2] = 0;\n\n\tconst positionAttribute = new BufferAttribute(positions, 3);\n\tconst geometry = new BufferGeometry();\n\tgeometry.setAttribute('position', positionAttribute);\n\tgeometry.setIndex(indices);\n\n\tconst lineSegments = new Line(geometry, MATERIAL.selectionRectangle);\n\treturn lineSegments;\n}\n\nexport class SelectionController extends BaseActionController {\n\tpublic readonly controller: KeyframeEditorSceneController;\n\t// private gridHelper: GridHelper;\n\tprivate selectionRectangle = _buildSelectionRectangle();\n\tpublic readonly selectionData: Ref<SelectionRectangleData> = ref({\n\t\tactive: false,\n\t\tstart: new Vector2(),\n\t\tend: new Vector2(),\n\t});\n\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t\tconst {controller} = options;\n\t\tthis.controller = controller;\n\n\t\tthis.selectionRectangle.matrixAutoUpdate = false;\n\t\tthis.selectionRectangle.position.z = Z_POS.selectionRectangle;\n\t\tthis.controller.scene.add(this.selectionRectangle);\n\n\t\tconst active = computed(() => this.selectionData.value.active);\n\t\twatch(active, (active) => {\n\t\t\tthis._updateRectangleVisibility();\n\t\t});\n\t\tthis._updateRectangleVisibility();\n\t}\n\n\t// private _onPointermoveBound = this._onPointermove.bind(this);\n\t// private _onPointerupBound = this._onPointerup.bind(this);\n\toverride onStart(event: PointerEvent) {\n\t\t// document.addEventListener('pointermove', this._onPointermoveBound);\n\t\t// document.addEventListener('pointerup', this._onPointerupBound);\n\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.start);\n\t\tthis.controller.setRaycaster(raycaster, CURSOR.start);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.start);\n\t\tRAYCAST.start2D.set(RAYCAST.start.x, RAYCAST.start.y);\n\t\tthis._setBoxEndFromEvent(event);\n\t}\n\toverride onProgress(event: PointerEvent) {\n\t\tthis.selectionData.value.active = true;\n\t\tthis._setBoxEndFromEvent(event);\n\t}\n\tprivate _setBoxEndFromEvent(event: PointerEvent) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.move);\n\t\tthis.controller.setRaycaster(raycaster, CURSOR.move);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.move);\n\t\tRAYCAST.move2D.set(RAYCAST.move.x, RAYCAST.move.y);\n\n\t\tbox.min.copy(RAYCAST.start2D);\n\t\tbox.max.copy(RAYCAST.move2D);\n\t\tvalidatesBox2(box);\n\t\tthis.selectionRectangle.position.x = box.min.x;\n\t\tthis.selectionRectangle.position.y = box.min.y;\n\t\tthis.selectionRectangle.scale.x = box.max.x - box.min.x;\n\t\tthis.selectionRectangle.scale.y = box.max.y - box.min.y;\n\t\tthis.selectionRectangle.updateMatrix();\n\t\tthis.controller.markRenderRequired();\n\t}\n\toverride onEnd(event: PointerEvent) {\n\t\tthis._selectWithCondition({\n\t\t\tcondition: (baseObject) => baseObject.intersectsBox(box),\n\t\t\taddToSelection: event.shiftKey,\n\t\t\ttoggleSelection: event.ctrlKey,\n\t\t});\n\t}\n\tclearSelection() {\n\t\tStoreController.editor.keyframeEditor.selection.value = {};\n\t}\n\tselectAll() {\n\t\tthis._selectWithCondition({\n\t\t\tcondition: (baseObject) => true,\n\t\t\taddToSelection: false,\n\t\t\ttoggleSelection: false,\n\t\t});\n\t}\n\tprivate _selectWithCondition(options: SelectWithConditionsOptions) {\n\t\tconst {condition, addToSelection, toggleSelection} = options;\n\t\tconst ADD_TO_SELECTION = addToSelection;\n\t\tconst TOGGLE_SELECTION = toggleSelection;\n\n\t\tthis.selectionData.value.active = false;\n\n\t\tconst selection = StoreController.editor.keyframeEditor.selection;\n\t\tif (!(ADD_TO_SELECTION || TOGGLE_SELECTION)) {\n\t\t\tselection.value = {};\n\t\t}\n\t\tthis.controller.objects.forEachObject((baseObject, object3D) => {\n\t\t\tif (condition(baseObject)) {\n\t\t\t\tconst selectionData = baseObject.selectionData();\n\t\t\t\tlet forNodeId = selection.value[selectionData.nodeId];\n\t\t\t\tif (!forNodeId) {\n\t\t\t\t\tforNodeId = [];\n\t\t\t\t\tselection.value[selectionData.nodeId] = forNodeId;\n\t\t\t\t}\n\t\t\t\tlet forChannelIndex = forNodeId[selectionData.channelIndex];\n\t\t\t\tif (!forChannelIndex) {\n\t\t\t\t\tforChannelIndex = [];\n\t\t\t\t\tforNodeId[selectionData.channelIndex] = forChannelIndex;\n\t\t\t\t}\n\t\t\t\tlet forSubChannelIndex = forChannelIndex[selectionData.subChannelIndex];\n\t\t\t\tif (!forSubChannelIndex) {\n\t\t\t\t\tforSubChannelIndex = [];\n\t\t\t\t\tforChannelIndex[selectionData.subChannelIndex] = forSubChannelIndex;\n\t\t\t\t}\n\t\t\t\tif (!forSubChannelIndex.includes(selectionData.keyframeIndex)) {\n\t\t\t\t\tforSubChannelIndex.push(selectionData.keyframeIndex);\n\t\t\t\t} else if (TOGGLE_SELECTION) {\n\t\t\t\t\tconst index = forSubChannelIndex.indexOf(selectionData.keyframeIndex);\n\t\t\t\t\tforSubChannelIndex.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.controller.markRenderRequired();\n\t}\n\n\tprivate _updateRectangleVisibility() {\n\t\tconst active = this.selectionData.value.active;\n\t\tthis.selectionRectangle.visible = active;\n\t}\n}\n","import {Vector2, OrthographicCamera, Vector3, Plane, Raycaster} from 'three';\n\nimport {EventHelper} from '../../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\n\nconst raycaster = new Raycaster();\nconst plane = new Plane(new Vector3(0, 0, 1), 0);\nconst PAN = {\n\tcamera: {\n\t\tposition: {\n\t\t\tstart: new Vector2(),\n\t\t\tend: new Vector2(),\n\t\t},\n\t},\n};\nconst CURSOR = {\n\t// camera: new OrthographicCamera(),\n\tstart: new Vector2(),\n\tmove: new Vector2(),\n\tdelta: new Vector2(),\n};\nconst RAYCAST = {\n\tcamera: new OrthographicCamera(),\n\tstart: new Vector3(),\n\tstart2D: new Vector2(),\n\tmove: new Vector3(),\n\tdelta: new Vector3(),\n\tdelta2D: new Vector2(),\n};\n\nexport class CameraPanController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\toverride onStart(event: PointerEvent) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis.options.controller.copyCamera(RAYCAST.camera);\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.start);\n\t\traycaster.setFromCamera(CURSOR.start, RAYCAST.camera);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.start);\n\t\tPAN.camera.position.start.copy(this.options.controller.cameraPos.value);\n\t}\n\toverride onProgress(event: PointerEvent) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.move);\n\t\traycaster.setFromCamera(CURSOR.move, RAYCAST.camera);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.move);\n\t\tRAYCAST.delta.copy(RAYCAST.move).sub(RAYCAST.start);\n\t\tRAYCAST.delta2D.set(RAYCAST.delta.x, RAYCAST.delta.y).multiplyScalar(-1);\n\n\t\t// CURSOR.move.set(event.clientX, event.clientY);\n\t\t// CURSOR.delta.copy(CURSOR.move).sub(CURSOR.start);\n\t\t// const mult = 0.01;\n\t\t// CURSOR.delta.x *= -mult;\n\t\t// CURSOR.delta.y *= mult;\n\t\tPAN.camera.position.end.copy(PAN.camera.position.start).add(RAYCAST.delta2D);\n\t\tthis.options.controller.cameraPos.value.copy(PAN.camera.position.end);\n\t}\n\toverride onEnd(event: PointerEvent) {}\n}\n","import {Vector2, OrthographicCamera, Vector3, Plane, Raycaster} from 'three';\nimport {clamp} from '../../../../../../../../@polygonjs/polygonjs/src/core/math/_Module';\nimport {EventHelper} from '../../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\n\nconst raycaster = new Raycaster();\nconst plane = new Plane(new Vector3(0, 0, 1), 0);\nconst ZOOM = {\n\tfrustumSize: {\n\t\tstart: new Vector2(),\n\t\tdelta: new Vector2(),\n\t\tprogress: new Vector2(),\n\t},\n};\nconst CURSOR = {\n\t// camera: new OrthographicCamera(),\n\tstart: new Vector2(),\n\tmove: new Vector2(),\n\tdelta: new Vector2(),\n};\nconst RAYCAST = {\n\tcamera: new OrthographicCamera(),\n\tstart: new Vector3(),\n\tstart2D: new Vector2(),\n\tmove: new Vector3(),\n\tdelta: new Vector3(),\n\tdelta2D: new Vector2(),\n};\nenum NonUniformZoomAxis {\n\tVERTICAL = 'vertical',\n\tHORIZONTAL = 'horizontal',\n}\n\nexport class CameraZoomController extends BaseActionController {\n\tprivate _nonUniformZoomAxis: NonUniformZoomAxis | undefined;\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\toverride onStart(event: PointerEvent) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis.options.controller.copyCamera(RAYCAST.camera);\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.start);\n\t\traycaster.setFromCamera(CURSOR.start, RAYCAST.camera);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.start);\n\t\t// CURSOR.start.set(event.clientX, event.clientY);\n\t\tZOOM.frustumSize.start.copy(this.options.controller.frustumSize.value);\n\t}\n\toverride onProgress(event: PointerEvent) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tEventHelper.normalizedPosition(event, canvas, CURSOR.move);\n\t\traycaster.setFromCamera(CURSOR.move, RAYCAST.camera);\n\t\traycaster.ray.intersectPlane(plane, RAYCAST.move);\n\t\tRAYCAST.delta.copy(RAYCAST.move).sub(RAYCAST.start);\n\t\t// CURSOR.move.set(event.clientX, event.clientY);\n\t\tCURSOR.delta.copy(CURSOR.move).sub(CURSOR.start);\n\n\t\t// if (CURSOR.delta.length() < 10) {\n\t\t// \treturn;\n\t\t// }\n\n\t\tif (event.shiftKey && !this._nonUniformZoomAxis) {\n\t\t\tthis._nonUniformZoomAxis =\n\t\t\t\tMath.abs(CURSOR.delta.x) > Math.abs(CURSOR.delta.y)\n\t\t\t\t\t? NonUniformZoomAxis.HORIZONTAL\n\t\t\t\t\t: NonUniformZoomAxis.VERTICAL;\n\t\t}\n\n\t\tconst mult = 0.5;\n\t\tconst MIN = 0.01;\n\t\tconst MAX = 1000;\n\t\tif (this._nonUniformZoomAxis) {\n\t\t\tlet delta = this._nonUniformZoomAxis == NonUniformZoomAxis.VERTICAL ? RAYCAST.delta.y : RAYCAST.delta.x;\n\t\t\tdelta *= mult;\n\t\t\tswitch (this._nonUniformZoomAxis) {\n\t\t\t\tcase NonUniformZoomAxis.VERTICAL: {\n\t\t\t\t\tthis.options.controller.frustumSize.value.y = clamp(ZOOM.frustumSize.start.y + delta, MIN, MAX);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase NonUniformZoomAxis.HORIZONTAL: {\n\t\t\t\t\tthis.options.controller.frustumSize.value.x = clamp(ZOOM.frustumSize.start.x + delta, MIN, MAX);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tRAYCAST.delta2D.set(RAYCAST.delta.x, RAYCAST.delta.y).multiplyScalar(-1);\n\t\t\tZOOM.frustumSize.progress.copy(ZOOM.frustumSize.start).add(RAYCAST.delta2D);\n\t\t\tZOOM.frustumSize.progress.x = clamp(ZOOM.frustumSize.progress.x, MIN, MAX);\n\t\t\tZOOM.frustumSize.progress.y = clamp(ZOOM.frustumSize.progress.y, MIN, MAX);\n\t\t\tthis.options.controller.frustumSize.value.copy(ZOOM.frustumSize.progress);\n\t\t}\n\t}\n\toverride onEnd(event: PointerEvent) {}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {channelDataToString} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\n// import {EventHelper} from '../../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {Vector2} from 'three';\nimport {\n\tChannelData,\n\tKeyframeData,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {BaseObjectSelectionData} from '../../common/Common';\nimport {dataParamIdForSelectionData as _dataParamIdForSelectionData} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\nimport {Channel} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/Channel';\n\ninterface ProcessData {\n\tbaseSelectionDatas: BaseObjectSelectionData[];\n\totherKeyframeDatasForSelectionDataNotSelected: (KeyframeData[] | undefined)[];\n\tkeyframeDataForSelectionData: (KeyframeData | undefined)[];\n\tuniqueParamIds: number[];\n\tdataParamValueForUniqueParamIds: (string | undefined)[];\n\tsubChannelDatasForUniqueParamIds: (ChannelData[] | undefined)[];\n}\n\nexport class KeyframePositionController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\tprivate _startPosBySelectionData: WeakMap<BaseObjectSelectionData, number> = new WeakMap();\n\tprivate _processData: ProcessData | undefined;\n\n\toverride onStart(event: PointerEvent, start: Vector2) {\n\t\tthis._setProcessData();\n\t}\n\toverride onProgress(event: PointerEvent, delta: Vector2) {\n\t\tconst baseOffset = Math.round(delta.x);\n\t\tthis._setNewPos((startPos: number) => startPos + baseOffset);\n\t}\n\toverride async onEnd(event: PointerEvent) {\n\t\tawait this._createCommand();\n\t}\n\tasync setSelectedKeyframesPosition(pos: number) {\n\t\tthis._setProcessData();\n\t\tthis._setNewPos(() => pos);\n\t\tawait this._createCommand();\n\t}\n\tprivate _setProcessData() {\n\t\tconst baseSelectionDatas = this._currentSelectionDatas.value;\n\t\tconst keyframeDatas = this._keyframeDataForSelectionData.value;\n\t\tlet i = 0;\n\t\tfor (let selectionData of baseSelectionDatas) {\n\t\t\tconst keyframeData = keyframeDatas[i];\n\t\t\tif (keyframeData) {\n\t\t\t\tthis._startPosBySelectionData.set(selectionData, keyframeData.pos);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tthis._processData = {\n\t\t\tbaseSelectionDatas,\n\t\t\totherKeyframeDatasForSelectionDataNotSelected: this._otherKeyframeDatasForSelectionDataNotSelected.value,\n\t\t\tkeyframeDataForSelectionData: this._keyframeDataForSelectionData.value,\n\t\t\tuniqueParamIds: this._uniqueParamIds.value,\n\t\t\tdataParamValueForUniqueParamIds: this._dataParamValueForUniqueParamIds.value,\n\t\t\tsubChannelDatasForUniqueParamIds: this._subChannelDatasForUniqueParamIds.value,\n\t\t};\n\t}\n\n\tprivate _setNewPos(getPos: (startPos: number) => number) {\n\t\tif (!this._processData) {\n\t\t\treturn;\n\t\t}\n\t\tconst newPosBySelectionData = new WeakMap<BaseObjectSelectionData, number>();\n\n\t\tconst {\n\t\t\tbaseSelectionDatas,\n\t\t\totherKeyframeDatasForSelectionDataNotSelected,\n\t\t\tkeyframeDataForSelectionData,\n\t\t\tuniqueParamIds,\n\t\t\tsubChannelDatasForUniqueParamIds,\n\t\t} = this._processData;\n\n\t\tlet i = 0;\n\t\t// this ensure we won't have overlapping keys\n\t\tfor (let selectionData of baseSelectionDatas) {\n\t\t\tconst startPos = this._startPosBySelectionData.get(selectionData);\n\t\t\tif (startPos != null) {\n\t\t\t\tlet newPos = getPos(startPos);\n\t\t\t\tconst otherKeyframes = otherKeyframeDatasForSelectionDataNotSelected[i];\n\t\t\t\tif (otherKeyframes) {\n\t\t\t\t\tconst existingKeyframeAtPos = otherKeyframes.find((keyframe) => keyframe.pos === newPos);\n\t\t\t\t\tconst currentKeyframe = keyframeDataForSelectionData[i];\n\t\t\t\t\tif (existingKeyframeAtPos && currentKeyframe) {\n\t\t\t\t\t\tconst currentPos = currentKeyframe.pos;\n\t\t\t\t\t\tif (newPos < currentPos) {\n\t\t\t\t\t\t\tnewPos -= 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewPos += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewPosBySelectionData.set(selectionData, newPos);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ti = 0;\n\t\tfor (let selectionData of baseSelectionDatas) {\n\t\t\tconst newPos = newPosBySelectionData.get(selectionData);\n\t\t\tif (newPos != null) {\n\t\t\t\tconst currentKeyframe = keyframeDataForSelectionData[i];\n\t\t\t\tif (currentKeyframe) {\n\t\t\t\t\tcurrentKeyframe.pos = newPos;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\t// set params\n\t\tStoreController.scene.batchUpdates(() => {\n\t\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\t\tif (param) {\n\t\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\t\tparam.set(newValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tprivate async _createCommand() {\n\t\tif (!this._processData) {\n\t\t\treturn;\n\t\t}\n\t\tconst {uniqueParamIds, dataParamValueForUniqueParamIds, subChannelDatasForUniqueParamIds} = this._processData;\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\n\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\tif (param) {\n\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\tsubChannelDatas.forEach((d) => Channel.validate(d));\n\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\tconst oldValue = dataParamValueForUniqueParamIds[i];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {channelDataToString} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\n// import {EventHelper} from '../../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {Vector2} from 'three';\nimport {\n\tChannelData,\n\tKeyframeData,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {BaseObjectSelectionData} from '../../common/Common';\nimport {dataParamIdForSelectionData as _dataParamIdForSelectionData} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\n\n// const raycaster = new Raycaster();\n// const plane = new Plane(new Vector3(0, 0, 1), 0);\n// const CURSOR = {\n// \tstart: new Vector2(),\n// \tmove: new Vector2(),\n// \tdelta: new Vector2(),\n// };\n// const RAYCAST = {\n// \tcamera: new OrthographicCamera(),\n// \tstart: new Vector3(),\n// \tmove: new Vector3(),\n// \tdelta: new Vector3(),\n// \tdelta2D: new Vector2(),\n// };\n\ninterface ProcessData {\n\tbaseSelectionDatas: BaseObjectSelectionData[];\n\t// otherKeyframeDatasForSelectionData: (KeyframeData[] | undefined)[];\n\tkeyframeDataForSelectionData: (KeyframeData | undefined)[];\n\tuniqueParamIds: number[];\n\tdataParamValueForUniqueParamIds: (string | undefined)[];\n\tsubChannelDatasForUniqueParamIds: (ChannelData[] | undefined)[];\n}\n\nexport class KeyframeValueController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\tprivate _startValueBySelectionData: WeakMap<BaseObjectSelectionData, number> = new WeakMap();\n\tprivate _processData: ProcessData | undefined;\n\n\toverride onStart(event: PointerEvent, start: Vector2) {\n\t\tthis._setProcessData();\n\t}\n\toverride onProgress(event: PointerEvent, delta: Vector2) {\n\t\tconst baseOffset = delta.y;\n\t\tthis._setNewValue((startValue: number) => startValue + baseOffset);\n\t}\n\toverride async onEnd(event: PointerEvent) {\n\t\tthis._createCommand();\n\t}\n\tasync setSelectedKeyframesValue(value: number) {\n\t\tthis._setProcessData();\n\t\tthis._setNewValue(() => value);\n\t\tawait this._createCommand();\n\t}\n\tprivate _setProcessData() {\n\t\tconst baseSelectionDatas = this._currentSelectionDatas.value;\n\t\tconst keyframeDatas = this._keyframeDataForSelectionData.value;\n\t\tlet i = 0;\n\t\tfor (let selectionData of baseSelectionDatas) {\n\t\t\tconst keyframeData = keyframeDatas[i];\n\t\t\tif (keyframeData) {\n\t\t\t\tthis._startValueBySelectionData.set(selectionData, keyframeData.value);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tthis._processData = {\n\t\t\tbaseSelectionDatas,\n\t\t\t// otherKeyframeDatasForSelectionData: this._otherKeyframeDatasForSelectionData.value,\n\t\t\tkeyframeDataForSelectionData: this._keyframeDataForSelectionData.value,\n\t\t\tuniqueParamIds: this._uniqueParamIds.value,\n\t\t\tdataParamValueForUniqueParamIds: this._dataParamValueForUniqueParamIds.value,\n\t\t\tsubChannelDatasForUniqueParamIds: this._subChannelDatasForUniqueParamIds.value,\n\t\t};\n\t}\n\tprivate _setNewValue(getValue: (startValue: number) => number) {\n\t\tif (!this._processData) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValueBySelectionData = new WeakMap<BaseObjectSelectionData, number>();\n\n\t\tconst {\n\t\t\tbaseSelectionDatas,\n\t\t\t// otherKeyframeDatasForSelectionData,\n\t\t\tkeyframeDataForSelectionData,\n\t\t\tuniqueParamIds,\n\t\t\tsubChannelDatasForUniqueParamIds,\n\t\t} = this._processData;\n\n\t\tlet i = 0;\n\t\tfor (let selectionData of baseSelectionDatas) {\n\t\t\tconst startValue = this._startValueBySelectionData.get(selectionData);\n\t\t\tif (startValue != null) {\n\t\t\t\tconst newValue = getValue(startValue);\n\t\t\t\t// const otherKeyframes = otherKeyframeDatasForSelectionData[i];\n\t\t\t\t// if (otherKeyframes) {\n\t\t\t\t// \tconst existingKeyframeAtPos = otherKeyframes.find((keyframe) => keyframe.value === newValue);\n\t\t\t\t// \tconst currentKeyframe = keyframeDataForSelectionData[i];\n\t\t\t\t// \tif (existingKeyframeAtPos && currentKeyframe) {\n\t\t\t\t// \t\tconst currentPos = currentKeyframe.pos;\n\t\t\t\t// \t\tif (newPos < currentPos) {\n\t\t\t\t// \t\t\tnewPos -= 1;\n\t\t\t\t// \t\t} else {\n\t\t\t\t// \t\t\tnewPos += 1;\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// }\n\t\t\t\tnewValueBySelectionData.set(selectionData, newValue);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\ti = 0;\n\t\tfor (let selectionData of baseSelectionDatas) {\n\t\t\tconst newValue = newValueBySelectionData.get(selectionData);\n\t\t\tif (newValue != null) {\n\t\t\t\tconst currentKeyframe = keyframeDataForSelectionData[i];\n\t\t\t\tif (currentKeyframe) {\n\t\t\t\t\tcurrentKeyframe.value = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\t// set params\n\t\tStoreController.scene.batchUpdates(() => {\n\t\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\t\tif (param) {\n\t\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\t\tparam.set(newValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tprivate async _createCommand() {\n\t\tif (!this._processData) {\n\t\t\treturn;\n\t\t}\n\t\tconst {uniqueParamIds, dataParamValueForUniqueParamIds, subChannelDatasForUniqueParamIds} = this._processData;\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\n\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\tif (param) {\n\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\tconst oldValue = dataParamValueForUniqueParamIds[i];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {Vector2} from 'three';\nimport {dataParamIdForSelectionData as _dataParamIdForSelectionData} from '../../../../../../store/controllers/editor/KeyframeEditor';\n\nexport class KeyframeTangentAngleController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\toverride onStart(event: PointerEvent, start: Vector2) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._baseHoveredObject?.onMoveStart(event, start);\n\t}\n\toverride onProgress(event: PointerEvent, delta: Vector2) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis._baseHoveredObject?.onMoveProgress(event, delta);\n\t}\n\toverride async onEnd(event: PointerEvent) {\n\t\tthis._baseHoveredObject?.onMoveEnd();\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {Vector2} from 'three';\nimport {dataParamIdForSelectionData as _dataParamIdForSelectionData} from '../../../../../../store/controllers/editor/KeyframeEditor';\n\nexport class KeyframeTangentEndController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\toverride onStart(event: PointerEvent, start: Vector2) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._baseHoveredObject?.onMoveStart(event, start);\n\t}\n\toverride onProgress(event: PointerEvent, delta: Vector2) {\n\t\tconst canvas = this.options.canvasElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis._baseHoveredObject?.onMoveProgress(event, delta);\n\t}\n\toverride async onEnd(event: PointerEvent) {\n\t\tthis._baseHoveredObject?.onMoveEnd();\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {channelDataToString} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {ChannelData} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {\n\tdataParamIdForSelectionData as _dataParamIdForSelectionData,\n\tsubChannelDataForSelectionData,\n} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\nimport {BaseObjectSelectionData} from '../../common/Common';\nimport {MapUtils} from '../../../../../../../../@polygonjs/polygonjs/src/core/MapUtils';\n\nexport class KeyframeDeleteController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\tasync deleteSelection() {\n\t\t// make sure we get the data before modifying it\n\t\tconst selectionDatas = this._currentSelectionDatas.value;\n\t\tconst dataParamValueForUniqueParamIds = this._dataParamValueForUniqueParamIds.value;\n\t\tconst uniqueParamIds = this._uniqueParamIds.value;\n\t\tconst subChannelDatasForUniqueParamIds = this._subChannelDatasForUniqueParamIds.value;\n\n\t\t// process keys by channel,\n\t\t// and delete the ones with high index first\n\t\tconst selectionDataBySubChannelIndexByChannel = new Map<ChannelData, BaseObjectSelectionData[]>();\n\t\tselectionDatas.forEach((selectionData) => {\n\t\t\tconst subChannelData = subChannelDataForSelectionData(selectionData);\n\t\t\tif (subChannelData) {\n\t\t\t\tMapUtils.pushOnArrayAtEntry(selectionDataBySubChannelIndexByChannel, subChannelData, selectionData);\n\t\t\t}\n\t\t});\n\t\t// process each channel separately\n\t\tselectionDataBySubChannelIndexByChannel.forEach((selectionDatasForChannel, channelData) => {\n\t\t\tselectionDatasForChannel.sort((a, b) => {\n\t\t\t\treturn b.keyframeIndex - a.keyframeIndex;\n\t\t\t});\n\t\t\tselectionDatasForChannel.forEach((selectionData) => {\n\t\t\t\tconst keyframeIndex = selectionData.keyframeIndex;\n\t\t\t\tchannelData.keyframes.splice(keyframeIndex, 1);\n\t\t\t});\n\t\t});\n\n\t\t// set params\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\tif (param) {\n\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\tconst oldValue = dataParamValueForUniqueParamIds[i];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t\tthis.options.controller.actions.selection.clearSelection();\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {\n\tchannelDataToString,\n\tcreateKeyframeData,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {\n\tcopyKeyframeTangent,\n\tcreateKeyframeTangent,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\nimport {ChannelData} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {\n\tdataParamIdForSelectionData as _dataParamIdForSelectionData,\n\tchannelDatasForNodeId,\n\tdataParamIdsForNodeId,\n} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\nimport {Vector2} from 'three';\nimport {CoreGraphNodeId} from '../../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {ChannelHandler} from '../../elements/ChannelHandler';\n\ninterface ChannelDataAndParamId {\n\tparamId: number;\n\tchannelDatas: ChannelData[];\n\tchannelHandlers: ChannelHandler[];\n}\nconst _tangent = createKeyframeTangent();\n\nexport class KeyframeCreateController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\tasync createFromEvent(event: PointerEvent, start: Vector2) {\n\t\tconst time = Math.round(start.x);\n\t\tawait this.createAtTime(time);\n\t}\n\tasync createAtTime(time: number) {\n\t\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\t\tconst channelsDisplayedState =\n\t\t\tkeyframeEditor.channelDisplayedStateBySubChannelIndexByChannelIndexByNodeId.value;\n\t\tconst nodeIds = Object.keys(channelsDisplayedState).map((e) => parseInt(e));\n\n\t\t// gather required info\n\t\tconst channelDataByChannelIndexByNodeId: Map<\n\t\t\tCoreGraphNodeId,\n\t\t\tArray<ChannelDataAndParamId | undefined>\n\t\t> = new Map();\n\t\tfor (const nodeId of nodeIds) {\n\t\t\tconst nodeHandler = this.options.controller.nodeHandlersByNodeId.get(nodeId);\n\t\t\tconst channelsData = channelDatasForNodeId(nodeId);\n\t\t\tconst paramIds = dataParamIdsForNodeId(nodeId);\n\t\t\tif (channelsData && paramIds && nodeHandler) {\n\t\t\t\tconst channelsDataToUpdate: Array<ChannelDataAndParamId | undefined> = [];\n\t\t\t\tchannelDataByChannelIndexByNodeId.set(nodeId, channelsDataToUpdate);\n\t\t\t\tconst channelsDisplayedStateForNode = channelsDisplayedState[nodeId];\n\t\t\t\tif (channelsDisplayedStateForNode) {\n\t\t\t\t\tchannelsDisplayedStateForNode.forEach((channelIndices, channelIndex) => {\n\t\t\t\t\t\tconst channelHandlers = nodeHandler.channelHandlers[channelIndex];\n\t\t\t\t\t\tif (channelHandlers) {\n\t\t\t\t\t\t\tchannelHandlers.forEach((channelHandler, subChannelIndex) => {\n\t\t\t\t\t\t\t\tconst visibleState = keyframeEditor.isChannelDisplayed({\n\t\t\t\t\t\t\t\t\tnodeId,\n\t\t\t\t\t\t\t\t\tchannelIndex,\n\t\t\t\t\t\t\t\t\tsubChannelIndex,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (visibleState == true && channelHandler != null) {\n\t\t\t\t\t\t\t\t\tchannelsDataToUpdate[channelIndex] = {\n\t\t\t\t\t\t\t\t\t\tchannelDatas: channelsData[channelIndex],\n\t\t\t\t\t\t\t\t\t\tparamId: paramIds[channelIndex],\n\t\t\t\t\t\t\t\t\t\tchannelHandlers,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add keyframe in each channel\n\t\tchannelDataByChannelIndexByNodeId.forEach((channelDataByChannelIndex, nodeId) => {\n\t\t\tchannelDataByChannelIndex.forEach((data, channelIndex) => {\n\t\t\t\tif (data) {\n\t\t\t\t\tdata.channelDatas.forEach((channelData, subChannelIndex) => {\n\t\t\t\t\t\tconst visibleState = keyframeEditor.isChannelDisplayed({nodeId, channelIndex, subChannelIndex});\n\t\t\t\t\t\tif (visibleState) {\n\t\t\t\t\t\t\tconst channelHandler = data.channelHandlers[subChannelIndex];\n\t\t\t\t\t\t\tconst newKeyframeData = createKeyframeData();\n\n\t\t\t\t\t\t\tnewKeyframeData.pos = time;\n\t\t\t\t\t\t\tnewKeyframeData.value = channelHandler.channelValue(time) || 0;\n\t\t\t\t\t\t\tchannelHandler.channelTangent(time, _tangent);\n\t\t\t\t\t\t\t// ensure length is at least 1\n\t\t\t\t\t\t\t// const length = _tangent.accel;\n\t\t\t\t\t\t\t// if (length < 1) {\n\t\t\t\t\t\t\t// \t_tangent.normalize().multiplyScalar(1 / length);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\tcopyKeyframeTangent(_tangent, newKeyframeData.in);\n\t\t\t\t\t\t\t// newKeyframeData.inOut = {x: _tangent.x, y: _tangent.y};\n\t\t\t\t\t\t\tlet newIndex = 0;\n\t\t\t\t\t\t\tlet keyframeFoundAtTime = false;\n\t\t\t\t\t\t\tfor (const keyframeData of channelData.keyframes) {\n\t\t\t\t\t\t\t\tif (keyframeData.pos < time) {\n\t\t\t\t\t\t\t\t\tnewIndex++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (keyframeData.pos == time) {\n\t\t\t\t\t\t\t\t\tkeyframeFoundAtTime = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!keyframeFoundAtTime) {\n\t\t\t\t\t\t\t\tchannelData.keyframes.splice(newIndex, 0, newKeyframeData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// set params\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\t\tchannelDataByChannelIndexByNodeId.forEach((channelDataByChannelIndex, nodeId) => {\n\t\t\tfor (const data of channelDataByChannelIndex) {\n\t\t\t\tif (data) {\n\t\t\t\t\tconst param = StoreController.engine.param(data.paramId) as StringParam | undefined;\n\t\t\t\t\tif (param) {\n\t\t\t\t\t\tconst newValue = channelDataToString(data.channelDatas);\n\t\t\t\t\t\tconst oldValue = param.value;\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {channelDataToString} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {keyframeTangentSplit} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {\n\tdataParamIdForSelectionData as _dataParamIdForSelectionData,\n\tkeyframeDataForSelectionData,\n} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\n\nexport class KeyframeTangentSplitController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\tasync deleteSelection() {\n\t\t// make sure we get the data before modifying it\n\t\tconst selectionDatas = this._currentSelectionDatas.value;\n\t\tconst dataParamValueForUniqueParamIds = this._dataParamValueForUniqueParamIds.value;\n\t\tconst uniqueParamIds = this._uniqueParamIds.value;\n\t\tconst subChannelDatasForUniqueParamIds = this._subChannelDatasForUniqueParamIds.value;\n\n\t\t// merge\n\t\tfor (const selectionData of selectionDatas) {\n\t\t\tconst keyframeData = keyframeDataForSelectionData(selectionData);\n\t\t\tif (keyframeData) {\n\t\t\t\tkeyframeTangentSplit(keyframeData);\n\t\t\t}\n\t\t}\n\n\t\t// set params\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\tif (param) {\n\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\tconst oldValue = dataParamValueForUniqueParamIds[i];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {channelDataToString} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {keyframeTangentMerge} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {\n\tdataParamIdForSelectionData as _dataParamIdForSelectionData,\n\tkeyframeDataForSelectionData,\n} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\n\nexport class KeyframeTangentMergeController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\tasync deleteSelection() {\n\t\t// make sure we get the data before modifying it\n\t\tconst selectionDatas = this._currentSelectionDatas.value;\n\t\tconst dataParamValueForUniqueParamIds = this._dataParamValueForUniqueParamIds.value;\n\t\tconst uniqueParamIds = this._uniqueParamIds.value;\n\t\tconst subChannelDatasForUniqueParamIds = this._subChannelDatasForUniqueParamIds.value;\n\n\t\t// merge\n\t\tfor (const selectionData of selectionDatas) {\n\t\t\tconst keyframeData = keyframeDataForSelectionData(selectionData);\n\t\t\tif (keyframeData) {\n\t\t\t\tkeyframeTangentMerge(keyframeData);\n\t\t\t}\n\t\t}\n\n\t\t// set params\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\tif (param) {\n\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\tconst oldValue = dataParamValueForUniqueParamIds[i];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {channelDataToString} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {\n\tdataParamIdForSelectionData as _dataParamIdForSelectionData,\n\tsubChannelDataForSelectionData,\n} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\nimport {\n\tChannelData,\n\tChannelInterpolation,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {BaseObjectSelectionData} from '../../common/Common';\nimport {MapUtils} from '../../../../../../../../@polygonjs/polygonjs/src/core/MapUtils';\n\nexport class ChannelInterpolationController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\tasync setSelectedChannelsInterpolation(interpolation: ChannelInterpolation) {\n\t\t// make sure we get the data before modifying it\n\t\tconst selectionDatas = this._currentSelectionDatas.value;\n\t\tconst dataParamValueForUniqueParamIds = this._dataParamValueForUniqueParamIds.value;\n\t\tconst uniqueParamIds = this._uniqueParamIds.value;\n\t\tconst subChannelDatasForUniqueParamIds = this._subChannelDatasForUniqueParamIds.value;\n\n\t\t// set interpolation\n\t\tconst selectionDataBySubChannelIndexByChannel = new Map<ChannelData, BaseObjectSelectionData[]>();\n\t\tselectionDatas.forEach((selectionData) => {\n\t\t\tconst subChannelData = subChannelDataForSelectionData(selectionData);\n\t\t\tif (subChannelData) {\n\t\t\t\tMapUtils.pushOnArrayAtEntry(selectionDataBySubChannelIndexByChannel, subChannelData, selectionData);\n\t\t\t}\n\t\t});\n\t\t// process each channel separately\n\t\tselectionDataBySubChannelIndexByChannel.forEach((selectionDatasForChannel, channelData) => {\n\t\t\tchannelData.interpolation = interpolation;\n\t\t});\n\n\t\t// set params\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\tif (param) {\n\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\tconst oldValue = dataParamValueForUniqueParamIds[i];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {channelDataToString} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {\n\tChannelData,\n\tKeyframeData,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {BaseObjectSelectionData} from '../../common/Common';\nimport {dataParamIdForSelectionData as _dataParamIdForSelectionData} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\nimport {getTangent} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\n\ninterface ProcessData {\n\tbaseSelectionDatas: BaseObjectSelectionData[];\n\tkeyframeDataForSelectionData: (KeyframeData | undefined)[];\n\tuniqueParamIds: number[];\n\tdataParamValueForUniqueParamIds: (string | undefined)[];\n\tsubChannelDatasForUniqueParamIds: (ChannelData[] | undefined)[];\n}\nexport interface KeyframeTangentSetOptions {\n\tslope?: number;\n\taccel?: number;\n\tinTangent: boolean;\n}\n\nexport class KeyframeTangentSetController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\tprivate _startValueBySelectionData: WeakMap<BaseObjectSelectionData, number> = new WeakMap();\n\tprivate _processData: ProcessData | undefined;\n\n\t// override onStart(event: PointerEvent, start: Vector2) {\n\t// \tthis._setProcessData();\n\t// }\n\t// override onProgress(event: PointerEvent, delta: Vector2) {\n\t// \tconst baseOffset = delta.y;\n\t// \tthis._setNewValue((startValue: number) => startValue + baseOffset);\n\t// }\n\t// override async onEnd(event: PointerEvent) {\n\t// \tthis._createCommand();\n\t// }\n\tasync setSelectedTangents(options: KeyframeTangentSetOptions) {\n\t\tthis._setProcessData();\n\t\tthis._setNewValue(options);\n\t\tawait this._createCommand();\n\t}\n\tprivate _setProcessData() {\n\t\tconst baseSelectionDatas = this._currentSelectionDatas.value;\n\t\tconst keyframeDatas = this._keyframeDataForSelectionData.value;\n\t\tlet i = 0;\n\t\tfor (let selectionData of baseSelectionDatas) {\n\t\t\tconst keyframeData = keyframeDatas[i];\n\t\t\tif (keyframeData) {\n\t\t\t\tthis._startValueBySelectionData.set(selectionData, keyframeData.value);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tthis._processData = {\n\t\t\tbaseSelectionDatas,\n\t\t\t// otherKeyframeDatasForSelectionData: this._otherKeyframeDatasForSelectionData.value,\n\t\t\tkeyframeDataForSelectionData: this._keyframeDataForSelectionData.value,\n\t\t\tuniqueParamIds: this._uniqueParamIds.value,\n\t\t\tdataParamValueForUniqueParamIds: this._dataParamValueForUniqueParamIds.value,\n\t\t\tsubChannelDatasForUniqueParamIds: this._subChannelDatasForUniqueParamIds.value,\n\t\t};\n\t}\n\tprivate _setNewValue(options: KeyframeTangentSetOptions) {\n\t\tif (!this._processData) {\n\t\t\treturn;\n\t\t}\n\n\t\t// const newValueBySelectionData = new WeakMap<BaseObjectSelectionData, number>();\n\n\t\tconst {\n\t\t\tbaseSelectionDatas,\n\t\t\t// otherKeyframeDatasForSelectionData,\n\t\t\tkeyframeDataForSelectionData,\n\t\t\tuniqueParamIds,\n\t\t\tsubChannelDatasForUniqueParamIds,\n\t\t} = this._processData;\n\n\t\tlet i = 0;\n\t\tfor (let _ of baseSelectionDatas) {\n\t\t\tconst currentKeyframe = keyframeDataForSelectionData[i];\n\t\t\tif (currentKeyframe) {\n\t\t\t\tconst tangent = getTangent(currentKeyframe, options.inTangent);\n\t\t\t\tif (options.slope != null) {\n\t\t\t\t\ttangent.slope = options.slope;\n\t\t\t\t}\n\t\t\t\tif (options.accel != null) {\n\t\t\t\t\ttangent.accel = options.accel;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// const startValue = this._startValueBySelectionData.get(selectionData);\n\t\t\t// if (startValue != null) {\n\t\t\t// \tconst newValue = getValue(startValue);\n\t\t\t// \tnewValueBySelectionData.set(selectionData, newValue);\n\t\t\t// }\n\t\t\ti++;\n\t\t}\n\t\t// i = 0;\n\t\t// for (let selectionData of baseSelectionDatas) {\n\t\t// \tconst newValue = newValueBySelectionData.get(selectionData);\n\t\t// \tif (newValue != null) {\n\t\t// \t\tconst currentKeyframe = keyframeDataForSelectionData[i];\n\t\t// \t\tif (currentKeyframe) {\n\t\t// \t\t\tcurrentKeyframe.value = newValue;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \ti++;\n\t\t// }\n\n\t\t// set params\n\t\tStoreController.scene.batchUpdates(() => {\n\t\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\t\tif (param) {\n\t\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\t\tparam.set(newValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tprivate async _createCommand() {\n\t\tif (!this._processData) {\n\t\t\treturn;\n\t\t}\n\t\tconst {uniqueParamIds, dataParamValueForUniqueParamIds, subChannelDatasForUniqueParamIds} = this._processData;\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\n\t\tuniqueParamIds.map((paramId, i) => {\n\t\t\tconst param = StoreController.engine.param(paramId) as StringParam | undefined;\n\t\t\tif (param) {\n\t\t\t\tconst subChannelDatas = subChannelDatasForUniqueParamIds[i];\n\t\t\t\tif (subChannelDatas) {\n\t\t\t\t\tconst newValue = channelDataToString(subChannelDatas);\n\t\t\t\t\tconst oldValue = dataParamValueForUniqueParamIds[i];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {\n\tchannelDataToString,\n\tcreateKeyframeData,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\n\nimport {\n\tChannelData,\n\tKeyframeData,\n} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {StringParam} from '../../../../../../../../@polygonjs/polygonjs/src/engine/params/String';\nimport {\n\tdataParamIdForSelectionData as _dataParamIdForSelectionData,\n\tchannelDatasForNodeId,\n\tdataParamIdsForNodeId,\n\tkeyframeDataForSelectionData,\n\ttraverseSelection,\n\tsubChannelNamesForNodeId,\n} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {MultipleCommand} from '../../../../../../history/commands/Multiple';\nimport {ParamSetCommand} from '../../../../../../history/commands/ParamSet';\nimport {Editor} from '../../../../../../Editor';\nimport {CoreGraphNodeId} from '../../../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {MapUtils} from '../../../../../../../../@polygonjs/polygonjs/src/core/MapUtils';\nimport {copyKeyframeData} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeSerialize';\nimport {BaseObjectSelectionData} from '../../common/Common';\n\ninterface ChannelDataAndParamId {\n\tparamId: number;\n\tchannelDatas: ChannelData[];\n}\ninterface KeyframeDataAndSelectionData {\n\tkeyframeData: KeyframeData;\n\tselectionData: BaseObjectSelectionData;\n}\n\nexport class CopyPasteController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\tprivate _copiedKeyframeDataBySubChannelName: Map<string, KeyframeDataAndSelectionData[]> = new Map();\n\tcopy() {\n\t\tthis._copiedKeyframeDataBySubChannelName.clear();\n\t\tconst selection = StoreController.editor.keyframeEditor.selection.value;\n\t\ttraverseSelection(selection, (selectionData) => {\n\t\t\tconst keyframeData = keyframeDataForSelectionData(selectionData);\n\t\t\tif (keyframeData) {\n\t\t\t\tconst keyframeCopy = createKeyframeData();\n\t\t\t\tcopyKeyframeData(keyframeData, keyframeCopy);\n\t\t\t\tconst channelNames = subChannelNamesForNodeId(selectionData.nodeId);\n\t\t\t\tif (channelNames) {\n\t\t\t\t\tconst subChannelName = channelNames[selectionData.channelIndex][selectionData.subChannelIndex];\n\t\t\t\t\tMapUtils.pushOnArrayAtEntry(this._copiedKeyframeDataBySubChannelName, subChannelName, {\n\t\t\t\t\t\tkeyframeData: keyframeCopy,\n\t\t\t\t\t\tselectionData,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync paste() {\n\t\tconst currentTime = this.options.controller.currentTime.currentTime.value;\n\t\tconst minPos = this._getMinPos();\n\n\t\tconst channelDataByChannelIndexByNodeId: Map<CoreGraphNodeId, Array<ChannelDataAndParamId>> = new Map();\n\n\t\t// gather channes data\n\t\tthis._copiedKeyframeDataBySubChannelName.forEach((keyframeDatas, channelName) => {\n\t\t\tconst channelData = this._findSubChannelDataByName(channelName);\n\t\t\tif (channelData) {\n\t\t\t\tkeyframeDatas.forEach((keyframeDataAndSelectionData) => {\n\t\t\t\t\tconst {selectionData} = keyframeDataAndSelectionData;\n\t\t\t\t\tconst {nodeId, channelIndex} = selectionData;\n\n\t\t\t\t\tlet channelsDataToUpdate = channelDataByChannelIndexByNodeId.get(nodeId);\n\t\t\t\t\tif (!channelsDataToUpdate) {\n\t\t\t\t\t\tchannelsDataToUpdate = [];\n\t\t\t\t\t\tchannelDataByChannelIndexByNodeId.set(nodeId, channelsDataToUpdate);\n\t\t\t\t\t}\n\t\t\t\t\tconst channelsData = channelDatasForNodeId(nodeId);\n\t\t\t\t\tconst paramIds = dataParamIdsForNodeId(nodeId);\n\t\t\t\t\tif (channelsData && paramIds) {\n\t\t\t\t\t\tchannelsDataToUpdate[channelIndex] = {\n\t\t\t\t\t\t\tchannelDatas: channelsData[channelIndex],\n\t\t\t\t\t\t\tparamId: paramIds[channelIndex],\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// update channels\n\t\tthis._copiedKeyframeDataBySubChannelName.forEach((keyframeDatas, channelName) => {\n\t\t\tkeyframeDatas.forEach((keyframeDataAndSelectionData) => {\n\t\t\t\tconst {keyframeData, selectionData} = keyframeDataAndSelectionData;\n\t\t\t\tconst {nodeId, channelIndex, subChannelIndex} = selectionData;\n\n\t\t\t\tconst channelsDataToUpdate = channelDataByChannelIndexByNodeId.get(nodeId);\n\t\t\t\tif (channelsDataToUpdate) {\n\t\t\t\t\tconst channelData = channelsDataToUpdate[channelIndex].channelDatas[subChannelIndex];\n\t\t\t\t\tif (channelData) {\n\t\t\t\t\t\tconst posDelta = keyframeData.pos - minPos;\n\t\t\t\t\t\tconst newPos = posDelta + currentTime;\n\t\t\t\t\t\tconst keyframeCopy = createKeyframeData();\n\t\t\t\t\t\tcopyKeyframeData(keyframeData, keyframeCopy);\n\t\t\t\t\t\tkeyframeCopy.pos = newPos;\n\n\t\t\t\t\t\tchannelData.keyframes.push(keyframeCopy);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t// }\n\t\t});\n\n\t\t// set params\n\t\tconst multicmd = new MultipleCommand(StoreController.engine.scene);\n\t\tchannelDataByChannelIndexByNodeId.forEach((channelDataByChannelIndex, nodeId) => {\n\t\t\tfor (const data of channelDataByChannelIndex) {\n\t\t\t\tif (data) {\n\t\t\t\t\tconst param = StoreController.engine.param(data.paramId) as StringParam | undefined;\n\t\t\t\t\tif (param) {\n\t\t\t\t\t\tconst newValue = channelDataToString(data.channelDatas);\n\t\t\t\t\t\tconst oldValue = param.value;\n\t\t\t\t\t\tconst cmd = new ParamSetCommand(param, newValue, oldValue);\n\t\t\t\t\t\tmulticmd.pushCommand(cmd);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Editor.instance().pushCommand(multicmd);\n\t}\n\n\tprivate _getMinPos() {\n\t\tlet minPos: number = +Infinity;\n\t\tthis._copiedKeyframeDataBySubChannelName.forEach((keyframeDatas) => {\n\t\t\tkeyframeDatas.forEach((keyframeDataAndSelectionData) => {\n\t\t\t\tconst {keyframeData} = keyframeDataAndSelectionData;\n\t\t\t\tif (keyframeData.pos < minPos) {\n\t\t\t\t\tminPos = keyframeData.pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn minPos;\n\t}\n\tprivate _findSubChannelDataByName(subChannelName: string) {\n\t\tconst nodeIds = StoreController.editor.keyframeEditor.nodeIds.value;\n\n\t\tfor (let nodeId of nodeIds) {\n\t\t\tconst channelNames = subChannelNamesForNodeId(nodeId);\n\t\t\tif (channelNames) {\n\t\t\t\tfor (let channelIndex = 0; channelIndex < channelNames.length; channelIndex++) {\n\t\t\t\t\tconst subChannelNames = channelNames[channelIndex];\n\t\t\t\t\tfor (let subChannelIndex = 0; subChannelIndex < subChannelNames.length; subChannelIndex++) {\n\t\t\t\t\t\tconst subChannelNameToCheck = subChannelNames[subChannelIndex];\n\t\t\t\t\t\tif (subChannelNameToCheck == subChannelName) {\n\t\t\t\t\t\t\tconst channelDatas = channelDatasForNodeId(nodeId);\n\t\t\t\t\t\t\tif (channelDatas) {\n\t\t\t\t\t\t\t\treturn channelDatas[channelIndex][subChannelIndex];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {Box2, Vector2} from 'three';\nimport {dataParamIdForSelectionData as _dataParamIdForSelectionData} from '../../../../../../store/controllers/editor/KeyframeEditor';\nimport {StoreController} from '../../../../../../store/controllers/StoreController';\nimport {ArrayUtils} from '../../../../../../../../@polygonjs/polygonjs/src/core/ArrayUtils';\nimport {KeyframeData} from '../../../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\n\nconst channelsBbox = new Box2();\nconst channelsBboxCenter = new Vector2();\nconst channelsBboxSize = new Vector2();\nconst _box2 = new Box2();\n\nexport class CameraFrameController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\n\tframe() {\n\t\tconst {controller} = this.options;\n\t\tlet _channelsBbox: Box2 | undefined;\n\n\t\tconst selectedSelectionDatas = StoreController.editor.keyframeEditor.selectedSelectionData.value;\n\n\t\tif (selectedSelectionDatas.length == 0) {\n\t\t\t// nothing selected\n\t\t\tconst nodeIds = controller.nodeIds.value;\n\t\t\tfor (let nodeId of nodeIds) {\n\t\t\t\tconst nodeHandler = controller.nodeHandlersByNodeId.get(nodeId);\n\t\t\t\tif (nodeHandler) {\n\t\t\t\t\tnodeHandler.traverseDisplayedChannelHandlers((channelHandler) => {\n\t\t\t\t\t\tchannelHandler.computeBounds({}, _box2);\n\t\t\t\t\t\tif (_channelsBbox) {\n\t\t\t\t\t\t\t_channelsBbox.union(_box2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_channelsBbox = channelsBbox.copy(_box2);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// some keyframes selected\n\t\t\tconst nodeIds = Object.keys(StoreController.editor.keyframeEditor.selection.value).map((e) => parseInt(e));\n\t\t\tfor (let nodeId of nodeIds) {\n\t\t\t\tconst nodeHandler = controller.nodeHandlersByNodeId.get(nodeId);\n\t\t\t\tif (nodeHandler) {\n\t\t\t\t\tnodeHandler.traverseDisplayedChannelHandlers((channelHandler) => {\n\t\t\t\t\t\tconst selectionDatasForChannel = selectedSelectionDatas.filter((selectionData) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tselectionData.nodeId == nodeId &&\n\t\t\t\t\t\t\t\tselectionData.channelIndex == channelHandler.channelIndex() &&\n\t\t\t\t\t\t\t\tselectionData.subChannelIndex == channelHandler.subChannelIndex()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst selectedKeyframes: KeyframeData[] = [];\n\t\t\t\t\t\tArrayUtils.compact(\n\t\t\t\t\t\t\tselectionDatasForChannel.map((s) => channelHandler.keyframe(s.keyframeIndex)),\n\t\t\t\t\t\t\tselectedKeyframes\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (selectedKeyframes.length > 0) {\n\t\t\t\t\t\t\tconst sortedKeyframes = selectedKeyframes.sort((a, b) => a.pos - b.pos);\n\t\t\t\t\t\t\tconst firstPos = sortedKeyframes[0].pos;\n\t\t\t\t\t\t\tconst lastPos = sortedKeyframes[sortedKeyframes.length - 1].pos;\n\t\t\t\t\t\t\tchannelHandler.computeBounds({firstPos, lastPos}, _box2);\n\t\t\t\t\t\t\tif (_channelsBbox) {\n\t\t\t\t\t\t\t\t_channelsBbox.union(_box2);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_channelsBbox = channelsBbox.copy(_box2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!_channelsBbox) {\n\t\t\treturn;\n\t\t}\n\t\t_channelsBbox.getCenter(channelsBboxCenter);\n\t\t_channelsBbox.getSize(channelsBboxSize);\n\t\t// give a min bbox size,\n\t\t// which is useful when there's only one keyframe selected,\n\t\t// which would result in a bbox of size 0,0\n\t\tchannelsBboxSize.x = Math.max(channelsBboxSize.x, 3);\n\t\tchannelsBboxSize.y = Math.max(channelsBboxSize.y, 0.1);\n\t\t//\n\t\tconst rendererSize = controller.rendererSize.value;\n\t\tconst ratio = rendererSize.x / rendererSize.y;\n\t\tchannelsBboxSize.x = channelsBboxSize.x / ratio;\n\t\tchannelsBboxSize.multiplyScalar(1.2);\n\t\tcontroller.frustumSize.value.set(channelsBboxSize.x, channelsBboxSize.y);\n\t\tcontroller.cameraPos.value.copy(channelsBboxCenter);\n\n\t\tcontroller.markRenderRequired();\n\t}\n}\n","import {BaseActionController, BaseActionControllerOptions} from './_BaseActionController';\nimport {Vector2} from 'three';\nimport {dataParamIdForSelectionData as _dataParamIdForSelectionData} from '../../../../../../store/controllers/editor/KeyframeEditor';\n\nexport class CurrentTimeController extends BaseActionController {\n\tconstructor(options: BaseActionControllerOptions) {\n\t\tsuper(options);\n\t}\n\tprivate _startTime = 0;\n\toverride onStart(event: PointerEvent, start: Vector2) {\n\t\tthis._startTime = this.options.controller.currentTime.currentTime.value;\n\t}\n\toverride onProgress(event: PointerEvent, delta: Vector2) {\n\t\tconst baseOffset = Math.round(delta.x);\n\t\tthis.options.controller.currentTime.currentTime.value = this._startTime + baseOffset;\n\t}\n\toverride async onEnd(event: PointerEvent) {\n\t\tthis.options.controller.currentTime.hovered.value = false;\n\t}\n}\n","import {Ref} from 'vue';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {SelectionController} from './actions/SelectionController';\nimport {CameraPanController} from './actions/CameraPanController';\nimport {CameraZoomController} from './actions/CameraZoomController';\nimport {KeyframePositionController} from './actions/KeyframePositionController';\nimport {KeyframeValueController} from './actions/KeyframeValueController';\nimport {KeyframeTangentAngleController} from './actions/KeyframeTangentAngleController';\nimport {KeyframeTangentEndController} from './actions/KeyframeTangentEndController';\nimport {KeyframeDeleteController} from './actions/KeyframeDeleteController';\nimport {KeyframeCreateController} from './actions/KeyframeCreateController';\nimport {KeyframeTangentSplitController} from './actions/KeyframeTangentSplitController';\nimport {KeyframeTangentMergeController} from './actions/KeyframeTangentMergeController';\nimport {ChannelInterpolationController} from './actions/ChannelInterpolationController';\nimport {KeyframeTangentSetController} from './actions/KeyframeTangentSetController';\nimport {CopyPasteController} from './actions/CopyPasteController';\nimport {CameraFrameController} from './actions/CameraFrameController';\nimport {CurrentTimeController} from './actions/CurrentTimeController';\n\ninterface KeyframeEditorObjectsRegisterOptions {\n\tcontroller: KeyframeEditorSceneController;\n\tcanvasElementParent: Ref<HTMLElement | null>;\n\tcanvasElement: Ref<HTMLCanvasElement | null>;\n}\n\nexport class ActionsController {\n\tpublic readonly selection: SelectionController;\n\tpublic readonly cameraPan: CameraPanController;\n\tpublic readonly cameraZoom: CameraZoomController;\n\tpublic readonly keyframePosition: KeyframePositionController;\n\tpublic readonly keyframeValue: KeyframeValueController;\n\tpublic readonly keyframeTangentAngle: KeyframeTangentAngleController;\n\tpublic readonly keyframeTangentEnd: KeyframeTangentEndController;\n\tpublic readonly keyframeDelete: KeyframeDeleteController;\n\tpublic readonly keyframeCreate: KeyframeCreateController;\n\tpublic readonly keyframeTangentSplit: KeyframeTangentSplitController;\n\tpublic readonly keyframeTangentMerge: KeyframeTangentMergeController;\n\tpublic readonly channelInterpolation: ChannelInterpolationController;\n\tpublic readonly keyframeTangentSet: KeyframeTangentSetController;\n\tpublic readonly copyPaste: CopyPasteController;\n\tpublic readonly cameraFrame: CameraFrameController;\n\tpublic readonly currentTime: CurrentTimeController;\n\n\tconstructor(public readonly options: KeyframeEditorObjectsRegisterOptions) {\n\t\tthis.selection = new SelectionController(options);\n\t\tthis.cameraPan = new CameraPanController(options);\n\t\tthis.cameraZoom = new CameraZoomController(options);\n\t\tthis.keyframePosition = new KeyframePositionController(options);\n\t\tthis.keyframeValue = new KeyframeValueController(options);\n\t\tthis.keyframeTangentAngle = new KeyframeTangentAngleController(options);\n\t\tthis.keyframeTangentEnd = new KeyframeTangentEndController(options);\n\t\tthis.keyframeDelete = new KeyframeDeleteController(options);\n\t\tthis.keyframeCreate = new KeyframeCreateController(options);\n\t\tthis.keyframeTangentSplit = new KeyframeTangentSplitController(options);\n\t\tthis.keyframeTangentMerge = new KeyframeTangentMergeController(options);\n\t\tthis.channelInterpolation = new ChannelInterpolationController(options);\n\t\tthis.keyframeTangentSet = new KeyframeTangentSetController(options);\n\t\tthis.copyPaste = new CopyPasteController(options);\n\t\tthis.cameraFrame = new CameraFrameController(options);\n\t\tthis.currentTime = new CurrentTimeController(options);\n\t}\n\tdispose() {\n\t\tthis.selection.dispose();\n\t\tthis.cameraPan.dispose();\n\t\tthis.cameraZoom.dispose();\n\t\tthis.keyframePosition.dispose();\n\t\tthis.keyframeValue.dispose();\n\t\tthis.keyframeTangentAngle.dispose();\n\t\tthis.keyframeTangentEnd.dispose();\n\t\tthis.keyframeDelete.dispose();\n\t\tthis.keyframeCreate.dispose();\n\t\tthis.keyframeTangentSplit.dispose();\n\t\tthis.keyframeTangentMerge.dispose();\n\t\tthis.channelInterpolation.dispose();\n\t\tthis.keyframeTangentSet.dispose();\n\t\tthis.copyPaste.dispose();\n\t\tthis.cameraFrame.dispose();\n\t}\n}\n","import {Ref, ref, watch} from 'vue';\nimport {\n\tRaycaster,\n\tVector2,\n\tBox2,\n\tLineSegments,\n\tBufferAttribute,\n\tBufferGeometry,\n\t// Group,\n\tLineBasicMaterial,\n} from 'three';\nimport {KeyframeEditorSceneController} from '../KeyframeEditorSceneController';\nimport {MATERIAL, Z_POS} from '../common/Constant';\nimport {validatesBox2} from '../common/Utils';\nimport {CoreGeometryBuilderMerge} from '../../../../../../../@polygonjs/polygonjs/src/core/geometry/modules/three/builders/Merge';\nimport {EventHelper} from '../../../../../../../@polygonjs/polygonjs/src/core/EventHelper';\nimport {CoreDom} from '../../../../../core/Dom';\n\nfunction _createRaycaster() {\n\tconst raycaster = new Raycaster();\n\treturn raycaster;\n}\nconst raycaster = _createRaycaster();\n\nconst COORDS = {\n\tTOP: {\n\t\tLEFT: new Vector2(-1, -1),\n\t},\n\tBOTTOM: {\n\t\tRIGHT: new Vector2(1, 1),\n\t},\n};\nconst viewportBound = new Box2();\nconst cursor = new Vector2();\n\nfunction _buildLineSegment(linesCount: number, material: LineBasicMaterial): LineSegments {\n\tconst verticalLinesGeometry = () => {\n\t\tconst pointsCount = linesCount * 2;\n\t\tconst positions: Float32Array = new Float32Array(pointsCount * 3);\n\t\tconst indices = new Array(pointsCount);\n\n\t\tfor (let i = 0; i < linesCount; i++) {\n\t\t\tconst x = i / linesCount;\n\t\t\tconst index = i * 2;\n\t\t\t//\n\t\t\tpositions[index * 3] = x;\n\t\t\tpositions[index * 3 + 1] = -1;\n\t\t\tpositions[index * 3 + 2] = 0;\n\t\t\t//\n\t\t\tpositions[index * 3 + 3] = x;\n\t\t\tpositions[index * 3 + 4] = 1;\n\t\t\tpositions[index * 3 + 5] = 0;\n\n\t\t\tindices[index] = index;\n\t\t\tindices[index + 1] = index + 1;\n\t\t}\n\n\t\tconst positionAttribute = new BufferAttribute(positions, 3);\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute('position', positionAttribute);\n\t\tgeometry.setIndex(indices);\n\t\treturn geometry;\n\t};\n\tconst geometries = [verticalLinesGeometry()];\n\tconst geometry = CoreGeometryBuilderMerge.merge(geometries);\n\n\tconst lineSegments = new LineSegments(geometry, material);\n\tlineSegments.frustumCulled = false;\n\treturn lineSegments;\n}\n\ninterface CurrentTimeControllerOptions {\n\tcontroller: KeyframeEditorSceneController;\n}\n\nexport class CurrentTimeController {\n\tpublic readonly controller: KeyframeEditorSceneController;\n\tpublic readonly currentTime: Ref<number> = ref(1);\n\tpublic readonly hovered: Ref<boolean> = ref(false);\n\t// private gridHelper: GridHelper;\n\tprivate line = _buildLineSegment(1, MATERIAL.currentTime.default);\n\tconstructor(public readonly options: CurrentTimeControllerOptions) {\n\t\tconst {controller} = options;\n\t\tthis.controller = controller;\n\t\tthis.controller.scene.add(this.line);\n\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.line.position.z = Z_POS.currentTime;\n\t\tthis.line.scale.y = 100000;\n\n\t\tconst frustumSize = this.controller.frustumSize;\n\t\tconst rendererSize = this.controller.rendererSize;\n\t\tconst cameraPos = this.controller.cameraPos;\n\t\tconst toWatchs = [frustumSize, rendererSize, cameraPos];\n\n\t\tfor (const toWatch of toWatchs) {\n\t\t\twatch(\n\t\t\t\ttoWatch,\n\t\t\t\t() => {\n\t\t\t\t\tthis.updateTimeBounds();\n\t\t\t\t},\n\t\t\t\t{deep: true}\n\t\t\t);\n\t\t}\n\t\twatch(this.currentTime, () => {\n\t\t\tthis.update();\n\t\t});\n\t\twatch(this.hovered, () => {\n\t\t\tthis._updateMaterial();\n\t\t});\n\t\tthis.update();\n\t}\n\tdispose() {}\n\n\tprivate _currentTimeBarElement: HTMLElement | null = null;\n\tinit(currentTimeBarElement: HTMLElement) {\n\t\tthis._currentTimeBarElement = currentTimeBarElement;\n\t\tcurrentTimeBarElement.addEventListener('pointerdown', this._onPointerdownBound);\n\t\tcurrentTimeBarElement.addEventListener('click', this._setTimeFromEventBound);\n\t}\n\tprivate _setTimeFromEventBound = this._setTimeFromEvent.bind(this);\n\tprivate _onPointerdownBound = this._onPointerdown.bind(this);\n\tprivate _onPointermoveBound = this._onPointermove.bind(this);\n\tprivate _onPointerupBound = this._onPointerup.bind(this);\n\tprivate _onPointerdown(event: PointerEvent) {\n\t\tif (!this._currentTimeBarElement) {\n\t\t\treturn;\n\t\t}\n\t\tCoreDom.addDragClasses();\n\t\tdocument.addEventListener('pointermove', this._onPointermoveBound);\n\t\tdocument.addEventListener('pointerup', this._onPointerupBound);\n\t}\n\tprivate _onPointermove(event: PointerEvent) {\n\t\tif (!this._currentTimeBarElement) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setTimeFromEvent(event);\n\t}\n\tprivate _onPointerup(event: PointerEvent) {\n\t\tif (!this._currentTimeBarElement) {\n\t\t\treturn;\n\t\t}\n\t\tCoreDom.removeDragClasses();\n\t\tdocument.removeEventListener('pointermove', this._onPointermoveBound);\n\t\tdocument.removeEventListener('pointerup', this._onPointerupBound);\n\t}\n\n\tprivate _setTimeFromEvent(event: MouseEvent | PointerEvent) {\n\t\tif (!this._currentTimeBarElement) {\n\t\t\treturn;\n\t\t}\n\t\tEventHelper.normalizedPosition(event, this._currentTimeBarElement, cursor);\n\t\tconst lerp = (cursor.x + 1) / 2;\n\t\tconst time = lerp * viewportBound.max.x + (1 - lerp) * viewportBound.min.x;\n\t\tthis.currentTime.value = Math.round(time);\n\t}\n\n\tupdateTimeBounds() {\n\t\tfunction raycastToVector(vector: Vector2) {\n\t\t\tvector.x = raycaster.ray.origin.x;\n\t\t\tvector.y = raycaster.ray.origin.y;\n\t\t}\n\t\tthis.controller.setRaycaster(raycaster, COORDS.TOP.LEFT);\n\t\traycastToVector(viewportBound.min);\n\t\tthis.controller.setRaycaster(raycaster, COORDS.BOTTOM.RIGHT);\n\t\traycastToVector(viewportBound.max);\n\t\tvalidatesBox2(viewportBound);\n\t}\n\n\tupdate() {\n\t\tthis.line.position.x = this.currentTime.value;\n\t\tthis.line.updateMatrix();\n\t\tthis.controller.markRenderRequired();\n\t}\n\tprivate _material() {\n\t\treturn this.hovered.value ? MATERIAL.currentTime.highlighted : MATERIAL.currentTime.default;\n\t}\n\tprivate _updateMaterial() {\n\t\tthis.line.material = this._material();\n\t\tthis.controller.markRenderRequired();\n\t}\n\n\tprepareForRaycastGPU() {\n\t\tthis.line.material = MATERIAL.currentTime.raycasting;\n\t}\n\trestoreForRaycastGPU() {\n\t\tthis._updateMaterial();\n\t}\n}\n","import {Ref, ref, watch, ComputedRef, computed} from 'vue';\nimport {\n\tScene,\n\tOrthographicCamera,\n\tWebGLRenderer,\n\tVector2,\n\tRaycaster,\n\tGroup,\n\tNoToneMapping,\n\tLinearEncoding,\n\tWebGLRenderTarget,\n} from 'three';\nimport {CSS2DRenderer} from '../../../../../../@polygonjs/polygonjs/src/core/render/CSSRenderers/CSS2DRenderer';\nimport {NodeHandler} from './elements/NodeHandler';\nimport {Z_POS, _updateMaterialHandleFrustrumSize} from './common/Constant';\nimport {CoreGraphNodeId} from '../../../../../../@polygonjs/polygonjs/src/core/graph/CoreGraph';\nimport {ArrayUtils} from '../../../../../../@polygonjs/polygonjs/src/core/ArrayUtils';\nimport {ChannelInterpolation} from '../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\n//\nimport {KeyframeEditorEventsController} from './controllers/EventsController';\nimport {KeyframeEditorRaycast} from './controllers/KeyframeEditorRaycast';\nimport {KeyframeEditorObjectsController} from './controllers/KeyframeEditorObjectsController';\nimport {BackgroundGridController} from './controllers/BackgroundGridController';\nimport {ActionsController} from './controllers/ActionsController';\nimport {CurrentTimeController} from './controllers/CurrentTimeController';\n\nconst ORTHOGRAPHIC_CAMERA_OPTIONS = {\n\tleft: -1,\n\tright: 1,\n\ttop: 1,\n\tbottom: -1,\n\tnear: 0.1,\n\tfar: 2,\n};\n\nexport interface SceneControllerOptions {\n\tnodeIds: ComputedRef<CoreGraphNodeId[]>;\n\tcanvasElementParent: Ref<HTMLElement | null>;\n\tcanvasElement: Ref<HTMLCanvasElement | null>;\n\tcss2DElement: Ref<HTMLElement | null>;\n\tcanvasGPURaycastElement: Ref<HTMLCanvasElement | null>;\n\tcurrentTimeBarElement: Ref<HTMLElement | null>;\n\t//JSONParamData: Ref<ChannelsData>;\n}\ninterface InitOptions {\n\tcanvasVisible: HTMLCanvasElement;\n\tcanvasGPURaycast: HTMLCanvasElement;\n\tcss2DElement: HTMLElement;\n\tcurrentTimeBarElement: HTMLElement;\n}\n\nexport class KeyframeEditorSceneController {\n\tprivate _renderRequired = true;\n\t//\n\tpublic readonly scene: Scene = new Scene();\n\tprivate _camera: OrthographicCamera;\n\tpublic readonly nodesGroup = new Group();\n\tprivate _rendererGPURaycast: WebGLRenderer | undefined;\n\tprivate _rendererVisible: WebGLRenderer | undefined;\n\tprivate _css2DRenderer: CSS2DRenderer | undefined;\n\t//\n\tpublic readonly rendererSize: Ref<Vector2> = ref(new Vector2(512, 512));\n\tpublic readonly frustumSize: Ref<Vector2> = ref(new Vector2(20, 20));\n\tpublic readonly cameraPos: Ref<Vector2> = ref(new Vector2(5, 5));\n\n\t//\n\tpublic readonly nodeIds: ComputedRef<CoreGraphNodeId[]>;\n\t// public readonly channelHandlersByName: Map<string, ChannelHandler> = new Map();\n\tpublic readonly nodeHandlersByNodeId: Map<CoreGraphNodeId, NodeHandler> = new Map();\n\tpublic readonly events: KeyframeEditorEventsController;\n\tpublic readonly raycast: KeyframeEditorRaycast;\n\tpublic readonly objects: KeyframeEditorObjectsController;\n\tpublic readonly backgroundGrid: BackgroundGridController;\n\tpublic readonly currentTime: CurrentTimeController;\n\t// public readonly selectionController: SelectionController;\n\tpublic readonly actions: ActionsController;\n\t//\n\t// public readonly data: Ref<ChannelsData>;\n\tconstructor(public readonly options: SceneControllerOptions) {\n\t\tconst {\n\t\t\tcanvasElement,\n\t\t\tcss2DElement,\n\t\t\tcanvasGPURaycastElement,\n\t\t\tcanvasElementParent,\n\t\t\tcurrentTimeBarElement,\n\t\t\tnodeIds,\n\t\t} = options;\n\t\t// this.data = JSONParamData;\n\n\t\tthis.events = new KeyframeEditorEventsController({controller: this, canvasElement, canvasElementParent});\n\t\tthis.raycast = new KeyframeEditorRaycast({controller: this, canvasElement});\n\t\tthis.objects = new KeyframeEditorObjectsController({controller: this});\n\t\tthis.backgroundGrid = new BackgroundGridController({controller: this});\n\t\t// this.selectionController = new SelectionController({controller: this, canvasElement});\n\t\tthis.actions = new ActionsController({controller: this, canvasElement, canvasElementParent});\n\t\tthis.currentTime = new CurrentTimeController({controller: this});\n\t\t// (window as any).keyframeScene = this.scene;\n\n\t\t// setup scene\n\t\tthis.scene.matrixAutoUpdate = false;\n\t\tthis.scene.add(this.nodesGroup);\n\t\tthis.nodesGroup.matrixAutoUpdate = false;\n\n\t\tthis._camera = new OrthographicCamera(\n\t\t\tORTHOGRAPHIC_CAMERA_OPTIONS.left,\n\t\t\tORTHOGRAPHIC_CAMERA_OPTIONS.right,\n\t\t\tORTHOGRAPHIC_CAMERA_OPTIONS.top,\n\t\t\tORTHOGRAPHIC_CAMERA_OPTIONS.bottom,\n\t\t\tORTHOGRAPHIC_CAMERA_OPTIONS.near,\n\t\t\tORTHOGRAPHIC_CAMERA_OPTIONS.far\n\t\t);\n\t\t// this._camera.position.x = this.cameraPos.value.x;\n\t\t// this._camera.position.y = this.cameraPos.value.y;\n\t\tthis._camera.position.z = Z_POS.camera;\n\n\t\t// add events\n\t\tconst _initIfReady = () => {\n\t\t\tif (\n\t\t\t\tcanvasElement.value &&\n\t\t\t\tcss2DElement.value &&\n\t\t\t\tcanvasGPURaycastElement.value &&\n\t\t\t\tcurrentTimeBarElement.value\n\t\t\t) {\n\t\t\t\tthis._init({\n\t\t\t\t\tcanvasVisible: canvasElement.value,\n\t\t\t\t\tcss2DElement: css2DElement.value,\n\t\t\t\t\tcanvasGPURaycast: canvasGPURaycastElement.value,\n\t\t\t\t\tcurrentTimeBarElement: currentTimeBarElement.value,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\twatch(canvasElement, _initIfReady);\n\t\twatch(css2DElement, _initIfReady);\n\t\twatch(canvasGPURaycastElement, _initIfReady);\n\t\twatch(currentTimeBarElement, _initIfReady);\n\n\t\t// this.channelNames = computed(() => Object.keys(JSONParamData.value));\n\t\t// watch(\n\t\t// \tthis.channelNames,\n\t\t// \t(newNames) => {\n\t\t// \t\tthis._createChannels(newNames);\n\t\t// \t},\n\t\t// \t{deep: true}\n\t\t// );\n\t\t// this._createChannels(this.channelNames.value);\n\t\t// const nodePaths = computed(()=>{\n\t\t// \tconst paths:string[]=[]\n\t\t// \tconst ids = nodeIds.value\n\t\t// \tfor(const nodeId of ids){\n\t\t// \t\tconst jsonNode = StoreController.engine.json_node(nodeId)\n\t\t// \t\tif(jsonNode && jsonNode.type == JsType.KEYFRAMES){\n\t\t// \t\t\tconst node = StoreController.engine.node(nodeId)\n\t\t// \t\t\tif(node){\n\t\t// \t\t\t\tpaths.push(node.path())\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \treturn paths\n\t\t// })\n\t\tthis.nodeIds = computed(() => nodeIds.value);\n\t\twatch(\n\t\t\tnodeIds,\n\t\t\t(newids) => {\n\t\t\t\tthis._createNodeHandlers(newids);\n\t\t\t},\n\t\t\t{deep: true}\n\t\t);\n\t\tthis._createNodeHandlers(nodeIds.value);\n\n\t\twatch(this.rendererSize, this._onResize.bind(this), {deep: true});\n\t\twatch(this.frustumSize, this._updateCameraProjectionMatrix.bind(this), {deep: true});\n\t\twatch(this.cameraPos, this._updateCameraPosition.bind(this), {deep: true});\n\n\t\tthis._updateCameraPosition();\n\t\tthis.backgroundGrid.update();\n\t\tthis.currentTime.updateTimeBounds();\n\t}\n\tdispose() {\n\t\tthis._rendererVisible?.dispose();\n\t\t// this._css2DRenderer?.dispose()\n\t\tthis._rendererGPURaycast?.dispose();\n\t\tthis.events.dispose();\n\t\tthis.raycast.dispose();\n\t\tthis.objects.dispose();\n\t\tthis.backgroundGrid.dispose();\n\t}\n\tframeSelection() {\n\t\tthis.actions.cameraFrame.frame();\n\t}\n\tsplitTangents() {\n\t\tthis.events.splitTangents();\n\t}\n\tmergeTangents() {\n\t\tthis.events.mergeTangents();\n\t}\n\tsetSelectedChannelInterpolation(interpolation: ChannelInterpolation) {\n\t\tthis.events.setSelectedChannelInterpolation(interpolation);\n\t}\n\n\tsetRaycaster(raycaster: Raycaster, cursor: Vector2) {\n\t\traycaster.setFromCamera(cursor, this._camera);\n\t}\n\trenderRaycast(cursorGPU: Vector2, renderTarget: WebGLRenderTarget, target: Float32Array) {\n\t\tconst canvas = this.options.canvasGPURaycastElement.value;\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tconst renderer = this._rendererGPURaycast;\n\t\tif (!renderer) {\n\t\t\treturn;\n\t\t}\n\t\tconst camera = this._camera;\n\n\t\t(camera as any).setViewOffset(\n\t\t\trenderer.domElement.width,\n\t\t\trenderer.domElement.height,\n\t\t\tcursorGPU.x * renderer.domElement.width,\n\t\t\tcursorGPU.y * renderer.domElement.height,\n\t\t\t1,\n\t\t\t1\n\t\t);\n\n\t\tconst _prepareScene = () => {\n\t\t\tthis.objects.forEachObject((baseObject) => baseObject.prepareForRaycastGPU());\n\t\t\tthis.currentTime.prepareForRaycastGPU();\n\t\t};\n\t\tconst _restoreScene = () => {\n\t\t\tthis.objects.forEachObject((baseObject) => baseObject.restoreFromRaycastGPU());\n\t\t\tthis.currentTime.restoreForRaycastGPU();\n\t\t};\n\n\t\t_prepareScene();\n\t\trenderer.setRenderTarget(renderTarget);\n\t\trenderer.clear();\n\t\trenderer.render(this.scene, camera);\n\t\trenderer.setRenderTarget(null);\n\t\t(camera as any).clearViewOffset();\n\n\t\t_restoreScene();\n\n\t\trenderer.readRenderTargetPixels(renderTarget, 0, 0, 1, 1, target);\n\t}\n\n\tprivate _currentNodeIds: CoreGraphNodeId[] = [];\n\tprivate _createNodeHandlers(nodeIds: CoreGraphNodeId[]) {\n\t\tif (ArrayUtils.isEqual(nodeIds, this._currentNodeIds)) {\n\t\t\t// if we don't check the equality,\n\t\t\t// we go through this method again, even though the nodeIds are the same\n\t\t\treturn;\n\t\t}\n\t\tthis._currentNodeIds = [...nodeIds];\n\n\t\tconst nodeIdsSet = new Set(nodeIds);\n\t\tthis.nodeHandlersByNodeId.forEach((nodeHandler, nodeId) => {\n\t\t\tif (!nodeIdsSet.has(nodeId)) {\n\t\t\t\tnodeHandler.dispose();\n\t\t\t\tthis.nodeHandlersByNodeId.delete(nodeId);\n\t\t\t}\n\t\t});\n\n\t\tfor (const nodeId of nodeIds) {\n\t\t\tlet nodeHandler = this.nodeHandlersByNodeId.get(nodeId);\n\t\t\tif (!nodeHandler) {\n\t\t\t\tnodeHandler = new NodeHandler(this, nodeId);\n\t\t\t\tthis.nodeHandlersByNodeId.set(nodeId, nodeHandler);\n\t\t\t}\n\t\t}\n\t\tthis.actions.cameraFrame.frame();\n\t}\n\tprivate _init(options: InitOptions) {\n\t\tconst {canvasVisible, canvasGPURaycast, css2DElement, currentTimeBarElement} = options;\n\t\tthis.currentTime.init(currentTimeBarElement);\n\t\tthis._rendererVisible =\n\t\t\tthis._rendererVisible ||\n\t\t\tnew WebGLRenderer({\n\t\t\t\tcanvas: canvasVisible,\n\t\t\t\tantialias: true,\n\t\t\t\talpha: false,\n\t\t\t\tpowerPreference: 'high-performance',\n\t\t\t\tpreserveDrawingBuffer: false,\n\t\t\t});\n\t\tthis._rendererVisible.setPixelRatio(2);\n\n\t\tthis._css2DRenderer = new CSS2DRenderer({element: css2DElement});\n\n\t\tthis._rendererGPURaycast =\n\t\t\tthis._rendererGPURaycast ||\n\t\t\tnew WebGLRenderer({\n\t\t\t\tcanvas: canvasGPURaycast,\n\t\t\t\tantialias: false,\n\t\t\t\talpha: false,\n\t\t\t\tpowerPreference: 'high-performance',\n\t\t\t\tpreserveDrawingBuffer: false,\n\t\t\t});\n\t\tthis._rendererGPURaycast.toneMapping = NoToneMapping;\n\t\tthis._rendererGPURaycast.outputEncoding = LinearEncoding;\n\t\tthis._rendererGPURaycast.setPixelRatio(1);\n\n\t\tthis._render();\n\t}\n\tmarkRenderRequired() {\n\t\tif (this._renderRequired) {\n\t\t\t// do not run requestAnimationFrame if it's already running\n\t\t\treturn;\n\t\t}\n\t\tthis._renderRequired = true;\n\t\trequestAnimationFrame(this._render.bind(this));\n\t}\n\tprivate _render() {\n\t\tif (!this._renderRequired) {\n\t\t\treturn;\n\t\t}\n\t\tthis._camera.updateMatrix();\n\t\tthis._camera.updateProjectionMatrix();\n\t\tthis.backgroundGrid.update();\n\t\tthis._rendererVisible?.render(this.scene, this._camera);\n\t\tthis._css2DRenderer?.render(this.scene, this._camera);\n\t\tthis._renderRequired = false;\n\t\t// this._rendererGPURaycast?.render(this.scene, this._camera);\n\t}\n\t// private _animate() {\n\t// \tthis._render();\n\t// \tif (!this._renderRequired) {\n\t// \t\treturn;\n\t// \t}\n\t// \trequestAnimationFrame(this._animate.bind(this));\n\t// }\n\tprivate _onResize() {\n\t\tif (!(this._rendererVisible && this._css2DRenderer && this._rendererGPURaycast)) {\n\t\t\treturn;\n\t\t}\n\t\tconst width = this.rendererSize.value.x;\n\t\tconst height = this.rendererSize.value.y;\n\t\tthis._rendererVisible.setSize(width, height);\n\t\tthis._css2DRenderer.setSize(width, height);\n\t\tthis._rendererGPURaycast.setSize(width, height);\n\t\tthis._updateCameraProjectionMatrix();\n\t\tthis.markRenderRequired();\n\t}\n\tprivate _updateCameraProjectionMatrix() {\n\t\tconst width = this.rendererSize.value.x;\n\t\tconst height = this.rendererSize.value.y;\n\t\tconst aspect = width / height;\n\t\tthis._camera.left = (-this.frustumSize.value.x * aspect) / 2;\n\t\tthis._camera.right = (this.frustumSize.value.x * aspect) / 2;\n\t\tthis._camera.top = this.frustumSize.value.y / 2;\n\t\tthis._camera.bottom = -this.frustumSize.value.y / 2;\n\n\t\tthis._camera.updateProjectionMatrix();\n\t\t_updateMaterialHandleFrustrumSize(this.frustumSize.value);\n\t\tthis.markRenderRequired();\n\t\tthis._render();\n\t}\n\tprivate _updateCameraPosition() {\n\t\tthis._camera.position.x = this.cameraPos.value.x;\n\t\tthis._camera.position.y = this.cameraPos.value.y;\n\t\tthis._camera.updateMatrix();\n\t\tthis.markRenderRequired();\n\t}\n\tcopyCamera(target: OrthographicCamera) {\n\t\ttarget.copy(this._camera);\n\t}\n}\n","import {computed, ref, watch} from 'vue';\nimport {StoreController} from '../../../../store/controllers/StoreController';\nimport {KeyframeEditorSceneController} from '../keyframeEditorSceneController/KeyframeEditorSceneController';\n// import {KeyframeTangentSetOptions} from '../keyframeEditorSceneController/controllers/actions/KeyframeTangentSetController';\nimport {subChannelDataForSelectionData} from '../../../../store/controllers/editor/KeyframeEditor';\nimport {getTangent} from '../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeTangent';\n\ninterface SetupFormOptions {\n\tsceneController: KeyframeEditorSceneController;\n}\n\nexport function SetupForm(options: SetupFormOptions) {\n\tconst {sceneController} = options;\n\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\n\tconst keyframePos = ref(0);\n\tconst keyframeValue = ref(0);\n\tconst keyframeInSlope = ref(0);\n\tconst keyframeInAccel = ref(0);\n\tconst keyframeOutSlope = ref(0);\n\tconst keyframeOutAccel = ref(0);\n\t//\n\n\t//\n\tconst selectionActive = computed(() => {\n\t\treturn keyframeEditor.selectedSelectionData.value.length > 0;\n\t});\n\tconst firstSelectionData = computed(() => {\n\t\treturn keyframeEditor.selectedSelectionData.value[0];\n\t});\n\tconst firstSelectedKeyframeData = computed(() => {\n\t\tif (firstSelectionData.value) {\n\t\t\tconst channelData = subChannelDataForSelectionData(firstSelectionData.value);\n\t\t\tif (channelData) {\n\t\t\t\treturn channelData.keyframes[firstSelectionData.value.keyframeIndex];\n\t\t\t}\n\t\t}\n\t});\n\tconst keyframePosActive = computed(() => selectionActive.value);\n\tconst keyframeValueActive = computed(() => selectionActive.value);\n\tconst keyframeInActive = computed(() => selectionActive.value);\n\tconst keyframeOutActive = computed(() => keyframeInActive.value && firstSelectedKeyframeData.value?.out != null);\n\n\t// update inputs from data changes\n\tconst selectedKeyframePos = computed(() => firstSelectedKeyframeData.value?.pos);\n\tconst selectedKeyframeValue = computed(() => firstSelectedKeyframeData.value?.value);\n\tconst selectedKeyframeIn = computed(() =>\n\t\tfirstSelectedKeyframeData?.value ? getTangent(firstSelectedKeyframeData.value, true) : null\n\t);\n\tconst selectedKeyframeOut = computed(() =>\n\t\tfirstSelectedKeyframeData?.value ? getTangent(firstSelectedKeyframeData.value, false) : null\n\t);\n\tconst selectedKeyframeInSlope = computed(() => selectedKeyframeIn.value?.slope);\n\tconst selectedKeyframeInAccel = computed(() => selectedKeyframeIn.value?.accel);\n\tconst selectedKeyframeOutSlope = computed(() => selectedKeyframeOut.value?.slope);\n\tconst selectedKeyframeOutAccel = computed(() => selectedKeyframeOut.value?.accel);\n\twatch(selectedKeyframePos, () => {\n\t\tkeyframePos.value = selectedKeyframePos.value || 0;\n\t});\n\twatch(selectedKeyframeValue, () => {\n\t\tkeyframeValue.value = selectedKeyframeValue.value || 0;\n\t});\n\twatch(selectedKeyframeInSlope, () => {\n\t\tkeyframeInSlope.value = selectedKeyframeInSlope.value || 0;\n\t});\n\twatch(selectedKeyframeInAccel, () => {\n\t\tkeyframeInAccel.value = selectedKeyframeInAccel.value || 0;\n\t});\n\twatch(selectedKeyframeOutSlope, () => {\n\t\tkeyframeOutSlope.value = selectedKeyframeOutSlope.value || 0;\n\t});\n\twatch(selectedKeyframeOutAccel, () => {\n\t\tkeyframeOutAccel.value = selectedKeyframeOutAccel.value || 0;\n\t});\n\n\tfunction onKeyframePosChange() {\n\t\tsceneController.events.setSelectedKeyframesPosition(keyframePos.value);\n\t}\n\tfunction onKeyframeValueChange() {\n\t\tsceneController.events.setSelectedKeyframesValue(keyframeValue.value);\n\t}\n\tfunction onKeyframeTangentInSlopeChange() {\n\t\tsceneController.events.setSelectedKeyframesValueTangent({slope: keyframeInSlope.value, inTangent: true});\n\t}\n\tfunction onKeyframeTangentInAccelChange() {\n\t\tsceneController.events.setSelectedKeyframesValueTangent({accel: keyframeInAccel.value, inTangent: true});\n\t}\n\tfunction onKeyframeTangentOutSlopeChange() {\n\t\tsceneController.events.setSelectedKeyframesValueTangent({slope: keyframeOutSlope.value, inTangent: false});\n\t}\n\tfunction onKeyframeTangentOutAccelChange() {\n\t\tsceneController.events.setSelectedKeyframesValueTangent({accel: keyframeOutAccel.value, inTangent: false});\n\t}\n\n\treturn {\n\t\tselectionActive,\n\t\tkeyframePos,\n\t\tkeyframeValue,\n\t\tkeyframeInSlope,\n\t\tkeyframeInAccel,\n\t\tkeyframeOutSlope,\n\t\tkeyframeOutAccel,\n\t\tkeyframePosActive,\n\t\tkeyframeValueActive,\n\t\tkeyframeInActive,\n\t\tkeyframeOutActive,\n\t\t//\n\t\tonKeyframePosChange,\n\t\tonKeyframeValueChange,\n\t\tonKeyframeTangentInSlopeChange,\n\t\tonKeyframeTangentInAccelChange,\n\t\tonKeyframeTangentOutSlopeChange,\n\t\tonKeyframeTangentOutAccelChange,\n\t};\n}\n","import {computed} from 'vue';\nimport {StoreController} from '../../../../store/controllers/StoreController';\nimport {KeyframeEditorSceneController} from '../keyframeEditorSceneController/KeyframeEditorSceneController';\nimport {ChannelInterpolation} from '../../../../../../@polygonjs/polygonjs/src/core/keyframes/KeyframeCommon';\nimport {DropDownMenuEntry} from '../../../../types';\nimport {TypeAssert} from '../../../../../../@polygonjs/polygonjs/src/engine/poly/Assert';\n\ninterface SetupFormInterpolationOptions {\n\tsceneController: KeyframeEditorSceneController;\n}\n\nexport function SetupFormInterpolation(options: SetupFormInterpolationOptions) {\n\tconst {sceneController} = options;\n\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\n\tconst interpolationDropdownActive = computed(() => {\n\t\treturn keyframeEditor.selectedSelectionData.value.length > 0;\n\t});\n\n\tconst currentInterpolation = computed(() => 'interpolation');\n\tconst interpolationMenuEntries = computed(() => {\n\t\tconst entries: DropDownMenuEntry[] = [];\n\n\t\tif (!interpolationDropdownActive.value) {\n\t\t\treturn entries;\n\t\t}\n\t\tentries.push({id: ChannelInterpolation.CUBIC});\n\t\tentries.push({id: ChannelInterpolation.LINEAR});\n\n\t\treturn entries;\n\t});\n\tfunction onInterpolationsMenuEntrySelect(entry: ChannelInterpolation) {\n\t\tswitch (entry) {\n\t\t\tcase ChannelInterpolation.CUBIC: {\n\t\t\t\tsceneController.setSelectedChannelInterpolation(ChannelInterpolation.CUBIC);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase ChannelInterpolation.LINEAR: {\n\t\t\t\tsceneController.setSelectedChannelInterpolation(ChannelInterpolation.LINEAR);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTypeAssert.unreachable(entry);\n\t}\n\n\treturn {\n\t\tinterpolationDropdownActive,\n\t\tcurrentInterpolation,\n\t\tinterpolationMenuEntries,\n\t\tonInterpolationsMenuEntrySelect,\n\t};\n}\n","import {computed} from 'vue';\nimport {StoreController} from '../../../../store/controllers/StoreController';\nimport {KeyframeEditorSceneController} from '../keyframeEditorSceneController/KeyframeEditorSceneController';\n\ninterface SetupButtonsOptions {\n\tsceneController: KeyframeEditorSceneController;\n}\n\nexport function SetupButtons(options: SetupButtonsOptions) {\n\tconst {sceneController} = options;\n\tconst keyframeEditor = StoreController.editor.keyframeEditor;\n\n\tconst keyframeButtonsActive = computed(() => {\n\t\treturn keyframeEditor.selectedSelectionData.value.length > 0;\n\t});\n\tconst addKeyframesButtonActive = computed(() => true);\n\tfunction addKeys() {\n\t\tconst currentTime = sceneController.currentTime.currentTime.value;\n\t\tsceneController.actions.keyframeCreate.createAtTime(currentTime);\n\t}\n\tfunction deleteSelectedKeyframes() {\n\t\tsceneController.events.deleteSelectedKeys();\n\t}\n\tfunction splitTangents() {\n\t\tsceneController.splitTangents();\n\t}\n\tfunction mergeTangents() {\n\t\tsceneController.mergeTangents();\n\t}\n\tfunction frameSelection() {\n\t\tsceneController.frameSelection();\n\t}\n\n\treturn {\n\t\taddKeys,\n\t\tdeleteSelectedKeyframes,\n\t\taddKeyframesButtonActive,\n\t\tkeyframeButtonsActive,\n\t\tsplitTangents,\n\t\tmergeTangents,\n\t\tframeSelection,\n\t};\n}\n","export { default } from \"-!../../../../../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./AnimationCore.vue?vue&type=script&lang=ts\"; export * from \"-!../../../../../node_modules/esbuild-loader/dist/index.cjs??clonedRuleSet-2.use[0]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[14].use[0]!./AnimationCore.vue?vue&type=script&lang=ts\"","import { render } from \"./AnimationCore.vue?vue&type=template&id=2d45f6de&ts=true\"\nimport script from \"./AnimationCore.vue?vue&type=script&lang=ts\"\nexport * from \"./AnimationCore.vue?vue&type=script&lang=ts\"\n\nimport \"./AnimationCore.vue?vue&type=style&index=0&id=2d45f6de&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["curve","i","keyframes","_a","_b","ObjectId","raycaster","geometry","active","NonUniformZoomAxis"],"sourceRoot":""}