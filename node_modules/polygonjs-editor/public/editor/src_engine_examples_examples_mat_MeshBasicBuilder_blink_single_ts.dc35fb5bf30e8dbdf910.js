(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_engine_examples_examples_mat_MeshBasicBuilder_blink_single_ts"],{

/***/ 83622:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createData": function() { return /* binding */ createData; }
/* harmony export */ });
/* harmony import */ var _polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51254);


function createData(options) {
  const { scene } = options;
  const root = scene.root();
  function create_geo1(parentNode) {
    var geo1 = parentNode.createNode("geo");
    geo1.setName("geo1");
    function create_MAT(geo12) {
      var MAT2 = geo12.createNode("materialsNetwork");
      MAT2.setName("MAT");
      function create_meshBasicBuilder1(MAT3) {
        var meshBasicBuilder14 = MAT3.createNode("meshBasicBuilder");
        meshBasicBuilder14.setName("meshBasicBuilder1");
        function create_constant1(meshBasicBuilder15) {
          var constant12 = meshBasicBuilder15.createNode("constant");
          constant12.setName("constant1");
          constant12.uiData.setPosition(50, -200);
          constant12.p.type.set(4);
          constant12.p.color.set([1, 0, 0]);
          constant12.p.asColor.set(true);
          constant12.params.postCreateSpareParams();
          constant12.params.runOnSceneLoadHooks();
          return constant12;
        }
        function create_constant2(meshBasicBuilder15) {
          var constant22 = meshBasicBuilder15.createNode("constant");
          constant22.setName("constant2");
          constant22.uiData.setPosition(50, -50);
          constant22.p.type.set(4);
          constant22.p.color.set([0, 1, 0]);
          constant22.p.asColor.set(true);
          constant22.params.postCreateSpareParams();
          constant22.params.runOnSceneLoadHooks();
          return constant22;
        }
        function create_fit1(meshBasicBuilder15) {
          var fit12 = meshBasicBuilder15.createNode("fit");
          fit12.setName("fit1");
          fit12.uiData.setPosition(50, 200);
          fit12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "val", 0, { spare: true, editable: false });
          fit12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "srcMin", 0, { spare: true, editable: true });
          fit12.params.get("srcMin").set(-1);
          fit12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "srcMax", 1, { spare: true, editable: true });
          fit12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "destMin", 0, { spare: true, editable: true });
          fit12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "destMax", 1, { spare: true, editable: true });
          fit12.params.postCreateSpareParams();
          fit12.params.runOnSceneLoadHooks();
          return fit12;
        }
        function create_globals1(meshBasicBuilder15) {
          var globals12 = meshBasicBuilder15.createNode("globals");
          globals12.setName("globals1");
          globals12.uiData.setPosition(-300, 0);
          globals12.params.postCreateSpareParams();
          globals12.params.runOnSceneLoadHooks();
          return globals12;
        }
        function create_mix1(meshBasicBuilder15) {
          var mix12 = meshBasicBuilder15.createNode("mix");
          mix12.setName("mix1");
          mix12.uiData.setPosition(300, 100);
          mix12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR3 */ ._.VECTOR3, "value0", [0, 0, 0], { spare: true, editable: false });
          mix12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.VECTOR3 */ ._.VECTOR3, "value1", [0, 0, 0], { spare: true, editable: false });
          mix12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "blend", 0.5, { spare: true, editable: false });
          mix12.params.postCreateSpareParams();
          mix12.params.runOnSceneLoadHooks();
          return mix12;
        }
        function create_multAdd1(meshBasicBuilder15) {
          var multAdd12 = meshBasicBuilder15.createNode("multAdd");
          multAdd12.setName("multAdd1");
          multAdd12.uiData.setPosition(-150, 200);
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "value", 0, { spare: true, editable: false });
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "preAdd", 0, { spare: true, editable: true });
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "mult", 1, { spare: true, editable: true });
          multAdd12.params.get("mult").set(4);
          multAdd12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "postAdd", 0, { spare: true, editable: true });
          multAdd12.params.postCreateSpareParams();
          multAdd12.params.runOnSceneLoadHooks();
          return multAdd12;
        }
        function create_output1(meshBasicBuilder15) {
          var output12 = meshBasicBuilder15.createNode("output");
          output12.setName("output1");
          output12.uiData.setPosition(550, 100);
          output12.params.postCreateSpareParams();
          output12.params.runOnSceneLoadHooks();
          return output12;
        }
        function create_sin1(meshBasicBuilder15) {
          var sin12 = meshBasicBuilder15.createNode("sin");
          sin12.setName("sin1");
          sin12.uiData.setPosition(-50, 200);
          sin12.addParam(_polygonjs_polygonjs_src_engine_poly_ParamType__WEBPACK_IMPORTED_MODULE_0__/* .ParamType.FLOAT */ ._.FLOAT, "radians", 0, { spare: true, editable: false });
          sin12.params.postCreateSpareParams();
          sin12.params.runOnSceneLoadHooks();
          return sin12;
        }
        var constant1 = create_constant1(meshBasicBuilder14);
        var constant2 = create_constant2(meshBasicBuilder14);
        var fit1 = create_fit1(meshBasicBuilder14);
        var globals1 = create_globals1(meshBasicBuilder14);
        var mix1 = create_mix1(meshBasicBuilder14);
        var multAdd1 = create_multAdd1(meshBasicBuilder14);
        var output1 = create_output1(meshBasicBuilder14);
        var sin1 = create_sin1(meshBasicBuilder14);
        fit1.setInput("val", sin1, "val", { noExceptionOnInvalidInput: true });
        mix1.setInput("value0", constant1, "val", { noExceptionOnInvalidInput: true });
        mix1.setInput("value1", constant2, "val", { noExceptionOnInvalidInput: true });
        mix1.setInput("blend", fit1, "val", { noExceptionOnInvalidInput: true });
        multAdd1.setInput("value", globals1, "time", { noExceptionOnInvalidInput: true });
        output1.setInput("color", mix1, "mix", { noExceptionOnInvalidInput: true });
        sin1.setInput("radians", multAdd1, "val", { noExceptionOnInvalidInput: true });
        meshBasicBuilder14.uiData.setPosition(0, -50);
        meshBasicBuilder14.params.postCreateSpareParams();
        meshBasicBuilder14.params.runOnSceneLoadHooks();
        return meshBasicBuilder14;
      }
      var meshBasicBuilder13 = create_meshBasicBuilder1(MAT2);
      MAT2.uiData.setPosition(-250, 150);
      MAT2.params.postCreateSpareParams();
      MAT2.params.runOnSceneLoadHooks();
      return { MAT: MAT2, meshBasicBuilder1: meshBasicBuilder13 };
    }
    function create_material1(geo12) {
      var material12 = geo12.createNode("material");
      material12.setName("material1");
      material12.uiData.setPosition(0, 150);
      material12.flags.display.set(true);
      material12.p.material.set("../MAT/meshBasicBuilder1");
      material12.params.postCreateSpareParams();
      material12.params.runOnSceneLoadHooks();
      return material12;
    }
    function create_sphere1(geo12) {
      var sphere12 = geo12.createNode("sphere");
      sphere12.setName("sphere1");
      sphere12.uiData.setPosition(0, 50);
      sphere12.params.postCreateSpareParams();
      sphere12.params.runOnSceneLoadHooks();
      return sphere12;
    }
    const { MAT, meshBasicBuilder1: meshBasicBuilder12 } = create_MAT(geo1);
    var material1 = create_material1(geo1);
    var sphere1 = create_sphere1(geo1);
    material1.setInput(0, sphere1);
    geo1.uiData.setPosition(-50, -150);
    geo1.flags.display.set(true);
    geo1.params.postCreateSpareParams();
    geo1.params.runOnSceneLoadHooks();
    return { geo1, MAT, meshBasicBuilder1: meshBasicBuilder12 };
  }
  function create_grid(parentNode) {
    var grid = parentNode.createNode("geo");
    grid.setName("grid");
    function create_planeHelper1(grid2) {
      var planeHelper1 = grid2.createNode("planeHelper");
      planeHelper1.setName("planeHelper1");
      planeHelper1.uiData.setPosition(0, 0);
      planeHelper1.flags.display.set(true);
      planeHelper1.params.postCreateSpareParams();
      planeHelper1.params.runOnSceneLoadHooks();
      return planeHelper1;
    }
    create_planeHelper1(grid);
    grid.uiData.setPosition(-50, -250);
    grid.flags.display.set(true);
    grid.params.postCreateSpareParams();
    grid.params.runOnSceneLoadHooks();
    return grid;
  }
  function create_perspectiveCamera1(parentNode) {
    var perspectiveCamera12 = parentNode.createNode("perspectiveCamera");
    perspectiveCamera12.setName("perspectiveCamera1");
    function create_events1(perspectiveCamera13) {
      var events1 = perspectiveCamera13.createNode("eventsNetwork");
      events1.setName("events1");
      function create_cameraOrbitControls1(events12) {
        var cameraOrbitControls1 = events12.createNode("cameraOrbitControls");
        cameraOrbitControls1.setName("cameraOrbitControls1");
        cameraOrbitControls1.uiData.setPosition(150, 50);
        cameraOrbitControls1.params.postCreateSpareParams();
        cameraOrbitControls1.params.runOnSceneLoadHooks();
        return cameraOrbitControls1;
      }
      create_cameraOrbitControls1(events1);
      events1.uiData.setPosition(-200, 50);
      events1.params.postCreateSpareParams();
      events1.params.runOnSceneLoadHooks();
      return events1;
    }
    create_events1(perspectiveCamera12);
    perspectiveCamera12.uiData.setPosition(-200, 100);
    perspectiveCamera12.flags.display.set(true);
    perspectiveCamera12.p.t.set([3.0161526633531355, 1.1787657307191874, 2.814738208647524]);
    perspectiveCamera12.p.r.set([-22.723127930556515, 44.66532130223666, 16.403892417511617]);
    perspectiveCamera12.p.controls.set("./events1/cameraOrbitControls1");
    perspectiveCamera12.params.postCreateSpareParams();
    perspectiveCamera12.params.runOnSceneLoadHooks();
    return perspectiveCamera12;
  }
  var { meshBasicBuilder1 } = create_geo1(root);
  create_grid(root);
  var perspectiveCamera1 = create_perspectiveCamera1(root);
  scene.play();
  return {
    scene,
    cameraPath: perspectiveCamera1.path(),
    focusedNodes: meshBasicBuilder1.children(),
    autoLayout: false
  };
}


/***/ })

}])
//# sourceMappingURL=src_engine_examples_examples_mat_MeshBasicBuilder_blink_single_ts.dc35fb5bf30e8dbdf910.js.map