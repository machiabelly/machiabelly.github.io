{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/core/camera/CoreCamera.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraPostProcessController.js"],
  "sourcesContent": ["\"use strict\";\nimport { arrayCompact } from \"../ArrayUtils\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nexport const CORE_CAMERA_DEFAULT = {\n  near: 0.1,\n  far: 100\n};\nexport var CameraAttribute = /* @__PURE__ */ ((CameraAttribute2) => {\n  CameraAttribute2[\"NODE_ID\"] = \"_Camera_nodeGeneratorId__\";\n  CameraAttribute2[\"CONTROLS_NODE_ID\"] = \"_Camera_controlsNodeId\";\n  CameraAttribute2[\"CSS_RENDERER_NODE_ID\"] = \"_Camera_CSSRendererNodeId\";\n  CameraAttribute2[\"FRAME_MODE\"] = \"_Camera_frameMode\";\n  CameraAttribute2[\"FRAME_MODE_EXPECTED_ASPECT_RATIO\"] = \"_Camera_frameModeExpectedAspectRatio\";\n  CameraAttribute2[\"MAX_FPS\"] = \"maxFPS\";\n  CameraAttribute2[\"MAX_FPS_DYNAMIC_CHANGE\"] = \"_Camera_maxFPSDynamicChange\";\n  CameraAttribute2[\"VIEW_OFFSET_MIN\"] = \"_Camera_viewOffsetMin\";\n  CameraAttribute2[\"VIEW_OFFSET_MAX\"] = \"_Camera_viewOffsetMax\";\n  CameraAttribute2[\"POST_PROCESS_NODE_ID\"] = \"_Camera_postProcessNodeId\";\n  CameraAttribute2[\"RENDER_SCENE_NODE_ID\"] = \"_Camera_renderSceneNodeId\";\n  CameraAttribute2[\"RENDERER_NODE_ID\"] = \"_Camera_rendererNodeId\";\n  CameraAttribute2[\"VIEWER_ID\"] = \"_Camera_viewerId\";\n  CameraAttribute2[\"VIEWER_HTML\"] = \"_Camera_viewerHTML\";\n  CameraAttribute2[\"WEBXR_AR\"] = \"_Camera_WebXR_AR\";\n  CameraAttribute2[\"WEBXR_VR\"] = \"_Camera_WebXR_VR\";\n  CameraAttribute2[\"WEBXR_AR_FEATURES_OPTIONAL\"] = \"_Camera_WebXR_AR_Features_Optional\";\n  CameraAttribute2[\"WEBXR_AR_FEATURES_REQUIRED\"] = \"_Camera_WebXR_AR_Features_Required\";\n  CameraAttribute2[\"WEBXR_AR_OVERRIDE_REFERENCE_SPACE_TYPE\"] = \"_Camera_WebXR_AR_overrideReferenceSpaceType\";\n  CameraAttribute2[\"WEBXR_AR_REFERENCE_SPACE_TYPE\"] = \"_Camera_WebXR_AR_referenceSpaceType\";\n  CameraAttribute2[\"WEBXR_VR_FEATURES_OPTIONAL\"] = \"_Camera_WebXR_VR_Features_Optional\";\n  CameraAttribute2[\"WEBXR_VR_FEATURES_REQUIRED\"] = \"_Camera_WebXR_VR_Features_Required\";\n  CameraAttribute2[\"WEBXR_VR_OVERRIDE_REFERENCE_SPACE_TYPE\"] = \"_Camera_WebXR_VR_overrideReferenceSpaceType\";\n  CameraAttribute2[\"WEBXR_VR_REFERENCE_SPACE_TYPE\"] = \"_Camera_WebXR_VR_referenceSpaceType\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING\"] = \"_Camera_WebXR_AR_markerTracking\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING_SOURCE_MODE\"] = \"_Camera_WebXR_AR_markerTracking_sourceMode\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING_SOURCE_URL\"] = \"_Camera_WebXR_AR_markerTracking_sourceUrl\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING_BAR_CODE_TYPE\"] = \"_Camera_WebXR_AR_markerTracking_barCodeType\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING_BAR_CODE_VALUE\"] = \"_Camera_WebXR_AR_markerTracking_barCodeValue\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING_TRANSFORM_MODE\"] = \"_Camera_WebXR_AR_markerTracking_transformMode\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING_SMOOTH\"] = \"_Camera_WebXR_AR_markerTracking_smooth\";\n  CameraAttribute2[\"WEBXR_AR_MARKER_TRACKING_SMOOTH_COUNT\"] = \"_Camera_WebXR_AR_markerTracking_smoothCount\";\n  return CameraAttribute2;\n})(CameraAttribute || {});\nexport const CAMERA_ATTRIBUTES = [\n  \"_Camera_nodeGeneratorId__\" /* NODE_ID */,\n  \"_Camera_controlsNodeId\" /* CONTROLS_NODE_ID */,\n  \"_Camera_CSSRendererNodeId\" /* CSS_RENDERER_NODE_ID */,\n  \"_Camera_frameMode\" /* FRAME_MODE */,\n  \"_Camera_frameModeExpectedAspectRatio\" /* FRAME_MODE_EXPECTED_ASPECT_RATIO */,\n  \"_Camera_viewOffsetMin\" /* VIEW_OFFSET_MIN */,\n  \"_Camera_viewOffsetMax\" /* VIEW_OFFSET_MAX */,\n  \"_Camera_postProcessNodeId\" /* POST_PROCESS_NODE_ID */,\n  \"_Camera_renderSceneNodeId\" /* RENDER_SCENE_NODE_ID */,\n  \"_Camera_rendererNodeId\" /* RENDERER_NODE_ID */,\n  \"_Camera_WebXR_AR\" /* WEBXR_AR */,\n  \"_Camera_WebXR_VR\" /* WEBXR_VR */,\n  \"_Camera_WebXR_AR_Features_Optional\" /* WEBXR_AR_FEATURES_OPTIONAL */,\n  \"_Camera_WebXR_AR_Features_Required\" /* WEBXR_AR_FEATURES_REQUIRED */,\n  \"_Camera_WebXR_AR_overrideReferenceSpaceType\" /* WEBXR_AR_OVERRIDE_REFERENCE_SPACE_TYPE */,\n  \"_Camera_WebXR_AR_referenceSpaceType\" /* WEBXR_AR_REFERENCE_SPACE_TYPE */,\n  \"_Camera_WebXR_VR_Features_Optional\" /* WEBXR_VR_FEATURES_OPTIONAL */,\n  \"_Camera_WebXR_VR_Features_Required\" /* WEBXR_VR_FEATURES_REQUIRED */,\n  \"_Camera_WebXR_VR_overrideReferenceSpaceType\" /* WEBXR_VR_OVERRIDE_REFERENCE_SPACE_TYPE */,\n  \"_Camera_WebXR_VR_referenceSpaceType\" /* WEBXR_VR_REFERENCE_SPACE_TYPE */\n];\nexport var PerspectiveCameraAttribute = /* @__PURE__ */ ((PerspectiveCameraAttribute2) => {\n  PerspectiveCameraAttribute2[\"FOV\"] = \"_PerspectiveCamera_fov\";\n  return PerspectiveCameraAttribute2;\n})(PerspectiveCameraAttribute || {});\nexport const PERSPECTIVE_CAMERA_ATTRIBUTES = [\"_PerspectiveCamera_fov\" /* FOV */];\nexport var OrthographicCameraAttribute = /* @__PURE__ */ ((OrthographicCameraAttribute2) => {\n  OrthographicCameraAttribute2[\"SIZE\"] = \"_OrthographicCamera_size\";\n  return OrthographicCameraAttribute2;\n})(OrthographicCameraAttribute || {});\nexport const ORTHOGRAPHIC_CAMERA_ATTRIBUTES = [\"_OrthographicCamera_size\" /* SIZE */];\nexport function serializeCamera(camera, attributeNames) {\n  const values = attributeNames.map((attribName) => {\n    const value = coreObjectClassFactory(camera).attribValue(camera, attribName);\n    if (value != null) {\n      return { [attribName]: value };\n    }\n  });\n  const attribValues = [];\n  return JSON.stringify({\n    uuid: camera.uuid,\n    attributes: arrayCompact(values, attribValues)\n  });\n}\n", "\"use strict\";\nimport { WebGLRenderer } from \"three\";\nimport { TypedNode } from \"../../engine/nodes/_Base\";\nimport { CameraSopNodeType, NetworkNodeType, NodeContext } from \"../../engine/poly/NodeContext\";\nimport { CoreType } from \"../Type\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nexport class CoreCameraPostProcessController {\n  static isPostProcessNetworkNode(node) {\n    return node.type() == NetworkNodeType.POST || node.context() == NodeContext.SOP && node.type() == CameraSopNodeType.POST_PROCESS;\n  }\n  static createComposer(options) {\n    const { renderer, scene, renderScene, camera, viewer } = options;\n    let postProcessNode;\n    const postProcessNodeId = coreObjectClassFactory(camera).attribValue(\n      camera,\n      CameraAttribute.POST_PROCESS_NODE_ID\n    );\n    if (postProcessNodeId && CoreType.isNumber(postProcessNodeId)) {\n      const foundNode = scene.graph.nodeFromId(postProcessNodeId);\n      if (foundNode && foundNode instanceof TypedNode && this.isPostProcessNetworkNode(foundNode)) {\n        postProcessNode = foundNode;\n      }\n    }\n    if (!postProcessNode) {\n      return;\n    }\n    if (!(renderer instanceof WebGLRenderer)) {\n      return;\n    }\n    return postProcessNode.effectsComposerController.createEffectsComposerAndBuildPasses({\n      renderer,\n      scene: renderScene,\n      camera,\n      viewer\n      // resolution,\n      // requester: this.node,\n      // render_target: render_target,\n      // prepend_render_pass: this.node.pv.prepend_render_pass,\n    });\n  }\n  // private _clear_render_passes(composer: EffectComposer) {\n  // \tlet render_pass: Pass | undefined;\n  // \twhile ((render_pass = composer.passes.pop())) {\n  // \t\tif (render_pass) {\n  // \t\t\tconst disposable_pass: DisposablePass = render_pass as DisposablePass;\n  // \t\t\tif (typeof disposable_pass.dispose === 'function') {\n  // \t\t\t\ttry {\n  // \t\t\t\t\tdisposable_pass.dispose();\n  // \t\t\t\t} catch (e) {\n  // \t\t\t\t\tconsole.warn(e);\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAGO,IAAM,sBAAsB;AAAA,EACjC,MAAM;AAAA,EACN,KAAK;AACP;AACO,IAAI,mBAAmC,CAAC,qBAAqB;AAClE,mBAAiB,SAAS,IAAI;AAC9B,mBAAiB,kBAAkB,IAAI;AACvC,mBAAiB,sBAAsB,IAAI;AAC3C,mBAAiB,YAAY,IAAI;AACjC,mBAAiB,kCAAkC,IAAI;AACvD,mBAAiB,SAAS,IAAI;AAC9B,mBAAiB,wBAAwB,IAAI;AAC7C,mBAAiB,iBAAiB,IAAI;AACtC,mBAAiB,iBAAiB,IAAI;AACtC,mBAAiB,sBAAsB,IAAI;AAC3C,mBAAiB,sBAAsB,IAAI;AAC3C,mBAAiB,kBAAkB,IAAI;AACvC,mBAAiB,WAAW,IAAI;AAChC,mBAAiB,aAAa,IAAI;AAClC,mBAAiB,UAAU,IAAI;AAC/B,mBAAiB,UAAU,IAAI;AAC/B,mBAAiB,4BAA4B,IAAI;AACjD,mBAAiB,4BAA4B,IAAI;AACjD,mBAAiB,wCAAwC,IAAI;AAC7D,mBAAiB,+BAA+B,IAAI;AACpD,mBAAiB,4BAA4B,IAAI;AACjD,mBAAiB,4BAA4B,IAAI;AACjD,mBAAiB,wCAAwC,IAAI;AAC7D,mBAAiB,+BAA+B,IAAI;AACpD,mBAAiB,0BAA0B,IAAI;AAC/C,mBAAiB,sCAAsC,IAAI;AAC3D,mBAAiB,qCAAqC,IAAI;AAC1D,mBAAiB,wCAAwC,IAAI;AAC7D,mBAAiB,yCAAyC,IAAI;AAC9D,mBAAiB,yCAAyC,IAAI;AAC9D,mBAAiB,iCAAiC,IAAI;AACtD,mBAAiB,uCAAuC,IAAI;AAC5D,SAAO;AACT,GAAG,mBAAmB,CAAC,CAAC;AAuBjB,IAAI,8BAA8C,CAAC,gCAAgC;AACxF,8BAA4B,KAAK,IAAI;AACrC,SAAO;AACT,GAAG,8BAA8B,CAAC,CAAC;AAE5B,IAAI,+BAA+C,CAAC,iCAAiC;AAC1F,+BAA6B,MAAM,IAAI;AACvC,SAAO;AACT,GAAG,+BAA+B,CAAC,CAAC;;;ACjE7B,IAAM,kCAAN,MAAsC;AAAA,EAC3C,OAAO,yBAAyB,MAAM;AACpC,WAAO,KAAK,KAAK,KAAK,gBAAgB,QAAQ,KAAK,QAAQ,KAAK,YAAY,OAAO,KAAK,KAAK,KAAK,kBAAkB;AAAA,EACtH;AAAA,EACA,OAAO,eAAe,SAAS;AAC7B,UAAM,EAAE,UAAU,OAAO,aAAa,QAAQ,OAAO,IAAI;AACzD,QAAI;AACJ,UAAM,oBAAoB,uBAAuB,MAAM,EAAE;AAAA,MACvD;AAAA,MACA,gBAAgB;AAAA,IAClB;AACA,QAAI,qBAAqB,SAAS,SAAS,iBAAiB,GAAG;AAC7D,YAAM,YAAY,MAAM,MAAM,WAAW,iBAAiB;AAC1D,UAAI,aAAa,qBAAqB,aAAa,KAAK,yBAAyB,SAAS,GAAG;AAC3F,0BAAkB;AAAA,MACpB;AAAA,IACF;AACA,QAAI,CAAC,iBAAiB;AACpB;AAAA,IACF;AACA,QAAI,EAAE,oBAAoB,gBAAgB;AACxC;AAAA,IACF;AACA,WAAO,gBAAgB,0BAA0B,oCAAoC;AAAA,MACnF;AAAA,MACA,OAAO;AAAA,MACP;AAAA,MACA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBF;",
  "names": []
}
