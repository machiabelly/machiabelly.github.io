{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/core/geometry/Mask.js"],
  "sourcesContent": ["\"use strict\";\nimport { stringMatchMask } from \"../String\";\nimport { CoreType } from \"../Type\";\nimport { CorePath } from \"./CorePath\";\nimport { coreObjectInstanceFactory } from \"./CoreObjectFactory\";\nexport function filterObjectsFromCoreGroup(coreGroup, options, coreObjects) {\n  return filterCoreObjects(options.group, coreObjects || coreGroup.allCoreObjects()).map(\n    (o) => o.object(),\n    options.invert\n  );\n}\nexport function filterCoreObjectsFromCoreGroup(coreGroup, options, coreObjects) {\n  return filterCoreObjects(options.group, coreObjects || coreGroup.allCoreObjects());\n}\nexport function filterThreejsCoreObjectsFromCoreGroup(coreGroup, options, coreObjects) {\n  return filterCoreObjects(options.group, coreObjects || coreGroup.threejsCoreObjects());\n}\nexport function isInGroup(unSanitizedGroupString, coreObject) {\n  const group = unSanitizedGroupString.trim();\n  if (group.length == 0) {\n    return true;\n  }\n  if (coreObject.object.name == group) {\n    return true;\n  }\n  if (stringMatchMask(coreObject.name(), group)) {\n    return true;\n  }\n  const elements = group.split(\"=\");\n  const attribNameWithPrefix = elements[0];\n  if (attribNameWithPrefix[0] == \"@\") {\n    const attribName = attribNameWithPrefix.substring(1);\n    const expectedAttribValue = elements[1];\n    const currentAttribValue = coreObject.attribValue(attribName);\n    return expectedAttribValue == currentAttribValue;\n  }\n  return false;\n}\nfunction filterCoreObjects(groupString, coreObjects) {\n  groupString = groupString.trim();\n  if (groupString == \"\") {\n    return coreObjects;\n  }\n  const index = parseInt(groupString);\n  if (!CoreType.isNaN(index)) {\n    const coreObject = coreObjects[index];\n    if (coreObject) {\n      return [coreObject];\n    } else {\n      return [];\n    }\n  }\n  const selectedCoreObjects = [];\n  for (const rootObject of coreObjects) {\n    let added = false;\n    const object = rootObject.object();\n    if (object) {\n      const objectsInMask = CorePath.objectsByMask(groupString, object);\n      for (const objectInMask of objectsInMask) {\n        const parent = objectInMask.parent;\n        const index2 = parent ? parent.children.indexOf(objectInMask) : 0;\n        const coreObject = coreObjectInstanceFactory(objectInMask, index2);\n        selectedCoreObjects.push(coreObject);\n        added = true;\n      }\n      const _isInGroup = isInGroup(groupString, rootObject);\n      if (_isInGroup && !added) {\n        selectedCoreObjects.push(rootObject);\n      }\n    }\n  }\n  return selectedCoreObjects;\n}\nexport function filterThreejsObjects(coreGroup, options) {\n  return filterObjectsFromCoreGroup(coreGroup, options, coreGroup.threejsCoreObjects());\n}\nexport function filterThreejsOrQuadObjects(coreGroup, options) {\n  return filterObjectsFromCoreGroup(coreGroup, options, coreGroup.threejsOrQuadCoreObjects());\n}\nexport function filterObjectsWithGroup(coreGroup, options) {\n  return filterObjectsFromCoreGroup(coreGroup, {\n    group: options.group\n  });\n}\nexport function filterThreejsObjectsWithGroup(coreGroup, options) {\n  return filterThreejsObjects(coreGroup, {\n    group: options.group\n  });\n}\nexport function filterThreejsOrQuadObjectsWithGroup(coreGroup, options) {\n  return filterThreejsOrQuadObjects(coreGroup, {\n    group: options.group\n  });\n}\nexport class CoreMask {\n}\nCoreMask.filterObjects = filterObjectsFromCoreGroup;\nCoreMask.filterCoreObjects = filterCoreObjectsFromCoreGroup;\nCoreMask.filterThreejsObjects = filterThreejsObjects;\nCoreMask.isInGroup = isInGroup;\n"],
  "mappings": ";;;;;;;;;;;;;;AAKO,SAAS,2BAA2B,WAAW,SAAS,aAAa;AAC1E,SAAO,kBAAkB,QAAQ,OAAO,eAAe,UAAU,eAAe,CAAC,EAAE;AAAA,IACjF,CAAC,MAAM,EAAE,OAAO;AAAA,IAChB,QAAQ;AAAA,EACV;AACF;AACO,SAAS,+BAA+B,WAAW,SAAS,aAAa;AAC9E,SAAO,kBAAkB,QAAQ,OAAO,eAAe,UAAU,eAAe,CAAC;AACnF;AACO,SAAS,sCAAsC,WAAW,SAAS,aAAa;AACrF,SAAO,kBAAkB,QAAQ,OAAO,eAAe,UAAU,mBAAmB,CAAC;AACvF;AACO,SAAS,UAAU,wBAAwB,YAAY;AAC5D,QAAM,QAAQ,uBAAuB,KAAK;AAC1C,MAAI,MAAM,UAAU,GAAG;AACrB,WAAO;AAAA,EACT;AACA,MAAI,WAAW,OAAO,QAAQ,OAAO;AACnC,WAAO;AAAA,EACT;AACA,MAAI,gBAAgB,WAAW,KAAK,GAAG,KAAK,GAAG;AAC7C,WAAO;AAAA,EACT;AACA,QAAM,WAAW,MAAM,MAAM,GAAG;AAChC,QAAM,uBAAuB,SAAS,CAAC;AACvC,MAAI,qBAAqB,CAAC,KAAK,KAAK;AAClC,UAAM,aAAa,qBAAqB,UAAU,CAAC;AACnD,UAAM,sBAAsB,SAAS,CAAC;AACtC,UAAM,qBAAqB,WAAW,YAAY,UAAU;AAC5D,WAAO,uBAAuB;AAAA,EAChC;AACA,SAAO;AACT;AACA,SAAS,kBAAkB,aAAa,aAAa;AACnD,gBAAc,YAAY,KAAK;AAC/B,MAAI,eAAe,IAAI;AACrB,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,SAAS,WAAW;AAClC,MAAI,CAAC,SAAS,MAAM,KAAK,GAAG;AAC1B,UAAM,aAAa,YAAY,KAAK;AACpC,QAAI,YAAY;AACd,aAAO,CAAC,UAAU;AAAA,IACpB,OAAO;AACL,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACA,QAAM,sBAAsB,CAAC;AAC7B,aAAW,cAAc,aAAa;AACpC,QAAI,QAAQ;AACZ,UAAM,SAAS,WAAW,OAAO;AACjC,QAAI,QAAQ;AACV,YAAM,gBAAgB,SAAS,cAAc,aAAa,MAAM;AAChE,iBAAW,gBAAgB,eAAe;AACxC,cAAM,SAAS,aAAa;AAC5B,cAAM,SAAS,SAAS,OAAO,SAAS,QAAQ,YAAY,IAAI;AAChE,cAAM,aAAa,0BAA0B,cAAc,MAAM;AACjE,4BAAoB,KAAK,UAAU;AACnC,gBAAQ;AAAA,MACV;AACA,YAAM,aAAa,UAAU,aAAa,UAAU;AACpD,UAAI,cAAc,CAAC,OAAO;AACxB,4BAAoB,KAAK,UAAU;AAAA,MACrC;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACO,SAAS,qBAAqB,WAAW,SAAS;AACvD,SAAO,2BAA2B,WAAW,SAAS,UAAU,mBAAmB,CAAC;AACtF;AAIO,SAAS,uBAAuB,WAAW,SAAS;AACzD,SAAO,2BAA2B,WAAW;AAAA,IAC3C,OAAO,QAAQ;AAAA,EACjB,CAAC;AACH;AAWO,IAAM,WAAN,MAAe;AACtB;AACA,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,YAAY;",
  "names": []
}
