import {
  BaseBuilderParamConfig,
  CustomMaterialMeshParamConfig,
  FogParamConfig,
  PCSSController,
  PCSSParamConfig,
  TypedBuilderMatNode,
  UniformFogController,
  UniformsTransparencyController,
  UniformsTransparencyParamConfig,
  WireframeShaderMaterialController,
  WireframeShaderMaterialParamsConfig,
  materialMeshAssemblerCustomMaterialRequested
} from "./chunk-KR5F7M52.js";
import "./chunk-BKKMVJB3.js";
import "./chunk-LTBPBA52.js";
import {
  AOMapParamConfig,
  AdvancedCommonController,
  AdvancedCommonParamConfig,
  AdvancedFolderParamConfig,
  AlphaMapParamConfig,
  BumpMapParamConfig,
  DefaultFolderParamConfig,
  DisplacementMapParamConfig,
  EmissiveMapParamConfig,
  EnvMapParamConfig,
  LightMapParamConfig,
  MapParamConfig,
  MatType,
  MetalnessRoughnessMapParamConfig,
  NormalMapParamConfig,
  TextureAOMapController,
  TextureAlphaMapController,
  TextureBumpMapController,
  TextureDisplacementMapController,
  TextureEmissiveMapController,
  TextureEnvMapController,
  TextureLightMapController,
  TextureMapController,
  TextureMetalnessRoughnessMapController,
  TextureNormalMapController,
  TexturesFolderParamConfig
} from "./chunk-DPUZQYKG.js";
import "./chunk-EGRHWZRV.js";
import {
  NodeParamsConfig
} from "./chunk-FUAFRKQ7.js";
import "./chunk-RVFV2LA3.js";
import {
  AssemblerName,
  Poly
} from "./chunk-O564GFGZ.js";
import "./chunk-6OBTIB4K.js";
import "./chunk-PQDBXNT6.js";
import "./chunk-UXIASGQL.js";

// node_modules/@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder.js
var MeshStandardBuilderMatParamsConfig = class extends CustomMaterialMeshParamConfig(
  PCSSParamConfig(
    FogParamConfig(
      WireframeShaderMaterialParamsConfig(
        AdvancedCommonParamConfig(
          BaseBuilderParamConfig(
            /* advanced */
            AdvancedFolderParamConfig(
              MetalnessRoughnessMapParamConfig(
                NormalMapParamConfig(
                  LightMapParamConfig(
                    EnvMapParamConfig(
                      EmissiveMapParamConfig(
                        DisplacementMapParamConfig(
                          BumpMapParamConfig(
                            AOMapParamConfig(
                              AlphaMapParamConfig(
                                MapParamConfig(
                                  /* textures */
                                  TexturesFolderParamConfig(
                                    UniformsTransparencyParamConfig(
                                      DefaultFolderParamConfig(NodeParamsConfig)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
) {
};
var ParamsConfig = new MeshStandardBuilderMatParamsConfig();
var MeshStandardBuilderMatNode = class extends TypedBuilderMatNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
    this.controllers = {
      advancedCommon: new AdvancedCommonController(this),
      alphaMap: new TextureAlphaMapController(this),
      aoMap: new TextureAOMapController(this),
      bumpMap: new TextureBumpMapController(this),
      displacementMap: new TextureDisplacementMapController(this),
      emissiveMap: new TextureEmissiveMapController(this),
      envMap: new TextureEnvMapController(this),
      lightMap: new TextureLightMapController(this),
      map: new TextureMapController(this),
      metalnessRoughnessMap: new TextureMetalnessRoughnessMapController(this),
      normalMap: new TextureNormalMapController(this),
      PCSS: new PCSSController(this),
      uniformFog: new UniformFogController(this),
      uniformTransparency: new UniformsTransparencyController(this),
      wireframeShader: new WireframeShaderMaterialController(this)
    };
    this.controllersList = Object.values(this.controllers);
  }
  static type() {
    return MatType.MESH_STANDARD_BUILDER;
  }
  usedAssembler() {
    return AssemblerName.GL_MESH_STANDARD;
  }
  _createAssemblerController() {
    return Poly.assemblersRegister.assembler(this, this.usedAssembler());
  }
  customMaterialRequested(customName) {
    return materialMeshAssemblerCustomMaterialRequested(this, customName);
  }
  async cook() {
    this._material = this._material || this.createMaterial();
    await Promise.all(this.controllersPromises(this._material));
    this.compileIfRequired(this._material);
    this.setMaterial(this._material);
  }
};
export {
  MeshStandardBuilderMatNode
};
//# sourceMappingURL=@polygonjs_polygonjs_dist_src_engine_nodes_mat_MeshStandardBuilder.js.map
