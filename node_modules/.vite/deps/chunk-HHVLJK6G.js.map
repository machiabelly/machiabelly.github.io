{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/core/FeaturesController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/ManualTriggersController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/ActorsKeyboardEventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/js/code/globals/Common.js", "../../@polygonjs/polygonjs/dist/src/core/geometry/util/HierarchyTraverse.js", "../../@polygonjs/polygonjs/dist/src/core/render/renderPixel/depthRead/DepthRead.vert.glsl.js", "../../@polygonjs/polygonjs/dist/src/core/render/renderPixel/depthRead/DepthRead.frag.glsl.js", "../../@polygonjs/polygonjs/dist/src/core/render/renderPixel/DepthRead.js", "../../@polygonjs/polygonjs/dist/src/core/render/renderPixel/RenderPixelController.js", "../../@polygonjs/polygonjs/dist/src/core/MouseButton.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/Common.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/_BaseRayObjectIntersectionsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsHoverController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsPointerdownController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsPointerupController.js", "../../@polygonjs/polygonjs/dist/src/core/CursorMoveMonitor.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsClickController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsMouseClickController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsContextmenuController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsLongPressController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/RayObjectIntersectionsSwipeController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/_BaseUserInputController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/PointerdownController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/actors/rayObjectIntersection/PointerupController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/ActorsManager.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/SceneCamerasController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/Cooker.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/CookController.js", "../../@polygonjs/polygonjs/dist/src/core/graph/CoreGraph.js", "../../@polygonjs/polygonjs/dist/src/core/performance/PerformanceNode.js", "../../@polygonjs/polygonjs/dist/src/core/performance/CorePerformance.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/DispatchController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/SceneExpressionsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/LifeCycleController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/LoadingController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/missingReferences/MissingReference.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/missingReferences/MissingReferencesController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/GraphNodesController.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/_Base.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/ObjectsController.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/Audio.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/AutoUpdate.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/Background.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/Env.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/Fog.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/LoadProgress.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/MaterialOverride.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/utils/Scene/RootMainCamera.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/manager/Root.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/NodesController.js", "../../@polygonjs/polygonjs/dist/src/core/event/PointerEventType.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/_BaseEventsController.js", "../../@polygonjs/polygonjs/dist/src/core/event/DragEventType.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/DragEventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/KeyboardEventsController.js", "../../@polygonjs/polygonjs/dist/src/core/event/MouseEventType.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/MouseEventsController.js", "../../@polygonjs/polygonjs/dist/src/core/event/TouchEventType.js", "../../@polygonjs/polygonjs/dist/src/core/Vector.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/event/utils/CursorHelper.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/PointerEventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/WindowEventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/TouchEventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/ConnectionTriggerDispatcher.js", "../../@polygonjs/polygonjs/dist/src/engine/poly/registers/nodes/types/Event.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/EventsDispatcher.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/ScenePerformanceMonitor.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/ReferencesController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/UniformsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/ViewersRegister.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/WebGLController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/WindowController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/AssetsController.js", "../../@polygonjs/polygonjs/dist/src/core/lights/Common.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/raymarching/_Base.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/raymarching/SpotLight.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/raymarching/DirectionalLight.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/raymarching/PointLight.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/SceneTraverser.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/SceneRenderersRegister.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/WebXREventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/PolyScene.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/Node.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/Param.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/param/Multiple.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/param/String.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/param/Ramp.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/nodes/Poly.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/OptimizedNodes.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/Nodes.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/Dispatcher.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/ImportReport.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/import/Scene.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/sanitize.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/Node.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/Param.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/param/Numeric.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/param/NodePath.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/param/ParamPath.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/param/String.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/param/Ramp.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/nodes/Poly.js", "../../@polygonjs/polygonjs/dist/src/engine/io/json/export/Dispatcher.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/utils/poly/PolyNodeController.js"],
  "sourcesContent": ["\"use strict\";\nexport class CoreFeaturesController {\n  static urlParams() {\n    return new URLSearchParams(window.location.search);\n  }\n  static urlParam(paramName) {\n    return this.urlParams().get(paramName);\n  }\n  static noAssemblers() {\n    return this.urlParam(\"noassemblers\") == \"1\";\n  }\n  static debugLoadProgress() {\n    return this.urlParam(\"debugLoadProgress\") == \"1\";\n  }\n  static testBatchId() {\n    const testBatchIdStr = this.urlParam(\"testBatchId\");\n    if (testBatchIdStr) {\n      return parseInt(testBatchIdStr);\n    }\n    return -1;\n  }\n}\n", "\"use strict\";\nexport class ActorManualTriggersController {\n  constructor(actorsManager) {\n    this.actorsManager = actorsManager;\n    this._scene = actorsManager.scene;\n  }\n  runTriggerFromFunctionNode(node, methodName) {\n    this._scene.threejsScene().traverse((object) => {\n      const nodeIds = this.actorsManager.objectActorNodeIds(object);\n      if (nodeIds && nodeIds.includes(node.graphNodeId())) {\n        this.actorsManager.triggerEventNode(node, object, methodName);\n      }\n    });\n  }\n}\n", "\"use strict\";\nimport { MapUtils } from \"../../../../core/MapUtils\";\nexport class ActorKeyboardEventsController {\n  constructor(actorsManager) {\n    this.actorsManager = actorsManager;\n    this._triggeredEvaluatorGeneratorsByMethodName = /* @__PURE__ */ new Map();\n    this._scene = actorsManager.scene;\n  }\n  addTriggeredEvaluators(evaluatorGenerators, methodName) {\n    evaluatorGenerators.forEach((evaluatorGenerator) => {\n      MapUtils.addToSetAtEntry(this._triggeredEvaluatorGeneratorsByMethodName, methodName, evaluatorGenerator);\n    });\n  }\n  runTriggers() {\n    this._triggeredEvaluatorGeneratorsByMethodName.forEach((evaluatorGenerators, methodName) => {\n      evaluatorGenerators.forEach((evaluatorGenerator) => {\n        evaluatorGenerator.traverseEvaluator((evaluator) => {\n          if (evaluator[methodName]) {\n            evaluator[methodName]();\n          }\n        });\n      });\n    });\n    this._triggeredEvaluatorGeneratorsByMethodName.clear();\n  }\n}\n", "\"use strict\";\nexport var GlobalsJsBaseControllerType = /* @__PURE__ */ ((GlobalsJsBaseControllerType2) => {\n  GlobalsJsBaseControllerType2[\"GEOMETRY\"] = \"geometry\";\n  return GlobalsJsBaseControllerType2;\n})(GlobalsJsBaseControllerType || {});\n", "\"use strict\";\nexport function hierarchyTraverse(object, callback) {\n  callback(object);\n  const childrenCount = object.children.length;\n  for (let i = 0; i < childrenCount; i++) {\n    const child = object.children[i];\n    if (child) {\n      hierarchyTraverse(child, callback);\n    }\n  }\n}\n", "export default \"varying vec2 vUv;\\n\\nvoid main() {\\n\tvUv = uv;\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\";\n", "export default \"#include <packing>\\n\\nvarying vec2 vUv;\\nuniform sampler2D tDiffuse;\\nuniform sampler2D tDepth;\\nuniform float cameraNear;\\nuniform float cameraFar;\\n\\n\\nfloat readDepth( sampler2D depthSampler, vec2 coord ) {\\n\tfloat fragCoordZ = texture2D( depthSampler, coord ).x;\\n\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\\n\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\\n}\\n\\nvoid main() {\\n\tfloat alpha = texture2D( tDiffuse, vUv ).a;\\n\tfloat depth = readDepth( tDepth, vUv );\\n\\n\tgl_FragColor.rgb = vec3( depth );\\n\tgl_FragColor.a = alpha;\\n}\";\n", "\"use strict\";\nimport {\n  OrthographicCamera,\n  Scene,\n  ShaderMaterial,\n  PlaneGeometry,\n  Mesh\n} from \"three\";\nimport VERTEX from \"./depthRead/DepthRead.vert.glsl\";\nimport FRAGMENT from \"./depthRead/DepthRead.frag.glsl\";\nexport function setupDepthReadScene() {\n  const camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  const material = new ShaderMaterial({\n    vertexShader: VERTEX,\n    fragmentShader: FRAGMENT,\n    uniforms: {\n      cameraNear: { value: camera.near },\n      cameraFar: { value: camera.far },\n      tDiffuse: { value: null },\n      tDepth: { value: null }\n    }\n  });\n  const postPlane = new PlaneGeometry(2, 2);\n  const postQuad = new Mesh(postPlane, material);\n  const scene = new Scene();\n  scene.add(postQuad);\n  return { scene, camera, material };\n}\nexport function updateDepthSetup(setup, camera, renderTarget) {\n  if (camera.isPerspectiveCamera || camera.isOrthographicCamera) {\n    setup.material.uniforms.cameraNear.value = camera.near;\n    setup.material.uniforms.cameraFar.value = camera.far;\n    setup.material.uniforms.tDiffuse.value = renderTarget.texture;\n    setup.material.uniforms.tDepth.value = renderTarget.depthTexture;\n  } else {\n    console.warn(\"camera is not a PerspectiveCamera or OrthographicCamera\");\n  }\n}\n", "\"use strict\";\nimport {\n  WebGLRenderTarget,\n  NearestFilter,\n  RGBAFormat,\n  FloatType,\n  WebGLRenderer,\n  Scene,\n  NoToneMapping,\n  NoColorSpace,\n  DepthTexture,\n  UnsignedInt248Type\n} from \"three\";\nimport { coreGetDefaultCamera } from \"./CoreGetDefautCamera\";\nimport { setupDepthReadScene, updateDepthSetup } from \"./DepthRead\";\nexport function coreCursorToUv(cursor, target) {\n  target.x = 0.5 * (cursor.x + 1);\n  target.y = 0.5 * (1 - cursor.y);\n}\nfunction _createDepthTexture() {\n  const texture = new DepthTexture(1, 1);\n  texture.type = UnsignedInt248Type;\n  return texture;\n}\nexport class RenderPixelController {\n  constructor() {\n    // Note for this to work on iOS:\n    // The materials used for picking should have their transparency OFF.\n    // This could potentially be done automatically by traversing the scene first.\n    this._colorWriteRenderTarget = new WebGLRenderTarget(1, 1, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat,\n      type: FloatType,\n      colorSpace: NoColorSpace,\n      depthTexture: _createDepthTexture()\n    });\n    this._depthReadRenderTarget = new WebGLRenderTarget(1, 1, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat,\n      type: FloatType,\n      colorSpace: NoColorSpace\n    });\n    this._renderScene = new Scene();\n    this._depthReadSetup = setupDepthReadScene();\n    this._restoreContext = {\n      object: {\n        parent: null\n      },\n      // scene: {\n      // \toverrideMaterial: null,\n      // },\n      renderer: {\n        toneMapping: NoToneMapping,\n        outputColorSpace: NoColorSpace\n      }\n    };\n    this._read = new Float32Array(4);\n  }\n  renderColor(scene, object3D, material, camera, backgroundColor, uv, target) {\n    this._doRender(scene, object3D, camera, material, backgroundColor, uv, target, false);\n    return target;\n  }\n  renderDepth(scene, object3D, camera, backgroundColor, uv, target) {\n    this._doRender(scene, object3D, camera, null, backgroundColor, uv, target, true);\n    return target;\n  }\n  _doRender(scene, object3D, camera, material, backgroundColor, uv, target, renderDepth) {\n    const renderer = scene.renderersRegister.lastRegisteredRenderer();\n    if (!renderer) {\n      return target;\n    }\n    if (!(renderer instanceof WebGLRenderer)) {\n      console.log(\"renderPixel: renderer found is not WebGLRenderer\");\n      return target;\n    }\n    if (camera == null) {\n      camera = coreGetDefaultCamera(scene);\n    }\n    this._prepare(object3D, material, backgroundColor, renderer);\n    this._render(uv, camera, renderer, target, renderDepth);\n    this._restore(object3D, renderer);\n    return target;\n  }\n  _prepare(object3D, material, backgroundColor, renderer) {\n    this._restoreContext.renderer.outputColorSpace = renderer.outputColorSpace;\n    this._restoreContext.renderer.toneMapping = renderer.toneMapping;\n    this._restoreContext.object.parent = object3D.parent;\n    this._renderScene.background = backgroundColor;\n    this._renderScene.overrideMaterial = material || null;\n    this._renderScene.attach(object3D);\n    renderer.toneMapping = NoToneMapping;\n    renderer.outputColorSpace = NoColorSpace;\n  }\n  _render(uv, camera, renderer, target, readDepth) {\n    camera.setViewOffset(\n      renderer.domElement.width,\n      renderer.domElement.height,\n      uv.x * renderer.domElement.width,\n      uv.y * renderer.domElement.height,\n      1,\n      1\n    );\n    renderer.setRenderTarget(this._colorWriteRenderTarget);\n    renderer.clear();\n    renderer.render(this._renderScene, camera);\n    if (readDepth) {\n      updateDepthSetup(this._depthReadSetup, camera, this._colorWriteRenderTarget);\n      renderer.setRenderTarget(this._depthReadRenderTarget);\n      renderer.render(this._depthReadSetup.scene, this._depthReadSetup.camera);\n      renderer.readRenderTargetPixels(this._depthReadRenderTarget, 0, 0, 1, 1, this._read);\n    } else {\n      renderer.readRenderTargetPixels(this._colorWriteRenderTarget, 0, 0, 1, 1, this._read);\n    }\n    renderer.setRenderTarget(null);\n    camera.clearViewOffset();\n    target.fromArray(this._read);\n  }\n  _restore(object3D, renderer) {\n    var _a;\n    renderer.outputColorSpace = this._restoreContext.renderer.outputColorSpace;\n    renderer.toneMapping = this._restoreContext.renderer.toneMapping;\n    (_a = this._restoreContext.object.parent) == null ? void 0 : _a.attach(object3D);\n  }\n}\n", "\"use strict\";\nexport var MouseButton = /* @__PURE__ */ ((MouseButton2) => {\n  MouseButton2[MouseButton2[\"LEFT\"] = 0] = \"LEFT\";\n  MouseButton2[MouseButton2[\"MIDDLE\"] = 1] = \"MIDDLE\";\n  MouseButton2[MouseButton2[\"RIGHT\"] = 2] = \"RIGHT\";\n  return MouseButton2;\n})(MouseButton || {});\nexport var MouseButtons = /* @__PURE__ */ ((MouseButtons2) => {\n  MouseButtons2[MouseButtons2[\"NONE\"] = 0] = \"NONE\";\n  MouseButtons2[MouseButtons2[\"LEFT\"] = 1] = \"LEFT\";\n  MouseButtons2[MouseButtons2[\"RIGHT\"] = 2] = \"RIGHT\";\n  MouseButtons2[MouseButtons2[\"LEFT_RIGHT\"] = 3] = \"LEFT_RIGHT\";\n  MouseButtons2[MouseButtons2[\"MIDDLE\"] = 4] = \"MIDDLE\";\n  MouseButtons2[MouseButtons2[\"LEFT_MIDDLE\"] = 5] = \"LEFT_MIDDLE\";\n  MouseButtons2[MouseButtons2[\"MIDDLE_RIGHT\"] = 6] = \"MIDDLE_RIGHT\";\n  MouseButtons2[MouseButtons2[\"LEFT_MIDDLE_RIGHT\"] = 7] = \"LEFT_MIDDLE_RIGHT\";\n  return MouseButtons2;\n})(MouseButtons || {});\nexport const MOUSE_BUTTONS = [\n  /*0*/\n  [],\n  /*1*/\n  [0 /* LEFT */],\n  /*2*/\n  [2 /* RIGHT */],\n  /*3*/\n  [0 /* LEFT */, 2 /* RIGHT */],\n  /*4*/\n  [1 /* MIDDLE */],\n  /*5*/\n  [0 /* LEFT */, 1 /* MIDDLE */],\n  /*6*/\n  [1 /* MIDDLE */, 2 /* RIGHT */],\n  /*7*/\n  [0 /* LEFT */, 1 /* MIDDLE */, 2 /* RIGHT */]\n];\n", "\"use strict\";\nimport { MouseButton, MouseButtons } from \"../../../../../core/MouseButton\";\nimport { TypeAssert } from \"../../../../poly/Assert\";\nexport function hasCPUOptions(optionsList) {\n  for (const options of optionsList) {\n    if (options.cpu != null) {\n      return true;\n    }\n  }\n  return false;\n}\nexport function hasGPUOptions(optionsList) {\n  for (const options of optionsList) {\n    if (options.gpu != null) {\n      return true;\n    }\n  }\n  return false;\n}\nexport function GPUOptionsDepthBufferRequired(optionsList) {\n  for (const options of optionsList) {\n    if (options.gpu != null && options.gpu.worldPosMaterial == null) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction _cpuOptionsEqual(options1, options2) {\n  return options1.traverseChildren == options2.traverseChildren && options1.pointsThreshold == options2.pointsThreshold && options1.lineThreshold == options2.lineThreshold;\n}\nexport function CPUOptionsEqual(optionsList) {\n  let firstCPUOptions;\n  for (const options of optionsList) {\n    if (options.cpu != null) {\n      if (firstCPUOptions == null) {\n        firstCPUOptions = options.cpu;\n      } else {\n        if (!_cpuOptionsEqual(firstCPUOptions, options.cpu)) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\nexport function CPUOptionsMax(optionsList, target) {\n  target.traverseChildren = false;\n  target.pointsThreshold = -1;\n  target.lineThreshold = -1;\n  for (const options of optionsList) {\n    if (options.cpu != null) {\n      if (target.traverseChildren == false && options.cpu.traverseChildren == true) {\n        target.traverseChildren = options.cpu.traverseChildren;\n      }\n      if (target.pointsThreshold < options.cpu.pointsThreshold) {\n        target.pointsThreshold = options.cpu.pointsThreshold;\n      }\n      if (target.lineThreshold < options.cpu.lineThreshold) {\n        target.lineThreshold = options.cpu.lineThreshold;\n      }\n    }\n  }\n  return target;\n}\nexport var Status = /* @__PURE__ */ ((Status2) => {\n  Status2[Status2[\"REQUIRED\"] = 0] = \"REQUIRED\";\n  Status2[Status2[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n  Status2[Status2[\"FORBIDDEN\"] = 2] = \"FORBIDDEN\";\n  return Status2;\n})(Status || {});\nexport const STATUS_OPTIONS = [0 /* REQUIRED */, 1 /* OPTIONAL */, 2 /* FORBIDDEN */];\nexport const STATUS_OPTION_LABEL = [\"required\", \"optional\", \"forbidden\"];\nexport const DEFAULT_STATUS_OPTION = STATUS_OPTIONS.indexOf(1 /* OPTIONAL */);\nexport const STATUS_MENU_OPTIONS = {\n  menu: {\n    entries: STATUS_OPTIONS.map((value) => ({\n      value,\n      name: STATUS_OPTION_LABEL[value]\n    }))\n  }\n};\nfunction statusMatch(modifierProperty, value) {\n  switch (modifierProperty) {\n    case 0 /* REQUIRED */: {\n      return value == true;\n    }\n    case 1 /* OPTIONAL */: {\n      return true;\n    }\n    case 2 /* FORBIDDEN */: {\n      return value == false;\n    }\n  }\n  TypeAssert.unreachable(modifierProperty);\n}\nexport function propertyMatchesButtonConfig(propertyConfig, buttonConfig) {\n  switch (buttonConfig.button) {\n    case MouseButton.LEFT: {\n      if (propertyConfig.button.left == false) {\n        return false;\n      }\n      break;\n    }\n    case MouseButton.MIDDLE: {\n      if (propertyConfig.button.middle == false) {\n        return false;\n      }\n      break;\n    }\n    case MouseButton.RIGHT: {\n      if (propertyConfig.button.right == false) {\n        return false;\n      }\n      break;\n    }\n  }\n  return statusMatch(propertyConfig.modifier.ctrl, buttonConfig.ctrl) && statusMatch(propertyConfig.modifier.shift, buttonConfig.shift) && statusMatch(propertyConfig.modifier.alt, buttonConfig.alt);\n}\nexport function propertyMatchesButtonsConfig(propertyConfig, buttonsConfig) {\n  switch (buttonsConfig.buttons) {\n    case MouseButtons.LEFT: {\n      if (propertyConfig.button.left == 2 /* FORBIDDEN */ || propertyConfig.button.middle == 0 /* REQUIRED */ || propertyConfig.button.right == 0 /* REQUIRED */) {\n        return false;\n      }\n      break;\n    }\n    case MouseButtons.MIDDLE: {\n      if (propertyConfig.button.left == 0 /* REQUIRED */ || propertyConfig.button.middle == 2 /* FORBIDDEN */ || propertyConfig.button.right == 0 /* REQUIRED */) {\n        return false;\n      }\n      break;\n    }\n    case MouseButtons.RIGHT: {\n      if (propertyConfig.button.left == 0 /* REQUIRED */ || propertyConfig.button.middle == 0 /* REQUIRED */ || propertyConfig.button.right == 2 /* FORBIDDEN */) {\n        return false;\n      }\n      break;\n    }\n    case MouseButtons.LEFT_RIGHT: {\n      if (propertyConfig.button.left == 2 /* FORBIDDEN */ || propertyConfig.button.middle == 0 /* REQUIRED */ || propertyConfig.button.right == 2 /* FORBIDDEN */) {\n        return false;\n      }\n      break;\n    }\n    case MouseButtons.LEFT_MIDDLE: {\n      if (propertyConfig.button.left == 2 /* FORBIDDEN */ || propertyConfig.button.middle == 2 /* FORBIDDEN */ || propertyConfig.button.right == 0 /* REQUIRED */) {\n        return false;\n      }\n      break;\n    }\n    case MouseButtons.MIDDLE_RIGHT: {\n      if (propertyConfig.button.left == 0 /* REQUIRED */ || propertyConfig.button.middle == 2 /* FORBIDDEN */ || propertyConfig.button.right == 2 /* FORBIDDEN */) {\n        return false;\n      }\n      break;\n    }\n    case MouseButtons.LEFT_MIDDLE_RIGHT: {\n      if (propertyConfig.button.left == 2 /* FORBIDDEN */ || propertyConfig.button.middle == 2 /* FORBIDDEN */ || propertyConfig.button.right == 2 /* FORBIDDEN */) {\n        return false;\n      }\n      break;\n    }\n  }\n  return statusMatch(propertyConfig.modifier.ctrl, buttonsConfig.ctrl) && statusMatch(propertyConfig.modifier.shift, buttonsConfig.shift) && statusMatch(propertyConfig.modifier.alt, buttonsConfig.alt);\n}\nfunction propertiesMatchesButtonConfig(propertiesList, buttonConfig) {\n  for (const properties of propertiesList) {\n    if (propertyMatchesButtonConfig(properties.config, buttonConfig)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction propertiesMatchesButtonsConfig(propertiesList, buttonConfig) {\n  for (const properties of propertiesList) {\n    if (propertyMatchesButtonsConfig(properties.config, buttonConfig)) {\n      return true;\n    }\n  }\n  return false;\n}\nexport function buttonConfigFromEvent(event, target) {\n  target.button = event.button || MouseButton.LEFT;\n  target.ctrl = event.ctrlKey;\n  target.shift = event.shiftKey;\n  target.alt = event.altKey;\n}\nexport function buttonsConfigFromEvent(event, target) {\n  target.buttons = event.buttons || MouseButtons.LEFT;\n  target.ctrl = event.ctrlKey;\n  target.shift = event.shiftKey;\n  target.alt = event.altKey;\n}\nconst _buttonConfig = { button: MouseButton.LEFT, ctrl: false, shift: false, alt: false };\nconst _buttonsConfig = { buttons: MouseButtons.LEFT, ctrl: false, shift: false, alt: false };\nexport function filterObjectsWithMatchButtonConfig(event, objects, propertiesListByObject, target) {\n  target.length = 0;\n  buttonConfigFromEvent(event, _buttonConfig);\n  for (const object of objects) {\n    const propertiesList = propertiesListByObject.get(object);\n    if (propertiesList) {\n      if (propertiesMatchesButtonConfig(propertiesList, _buttonConfig)) {\n        target.push(object);\n      }\n    }\n  }\n}\nexport function filterObjectsWithMatchButtonsConfig(event, objects, propertiesListByObject, target) {\n  target.length = 0;\n  buttonsConfigFromEvent(event, _buttonsConfig);\n  for (const object of objects) {\n    const propertiesList = propertiesListByObject.get(object);\n    if (propertiesList) {\n      if (propertiesMatchesButtonsConfig(propertiesList, _buttonsConfig)) {\n        target.push(object);\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { ref } from \"@vue/reactivity\";\nimport { Vector2, Vector3, Vector4 } from \"three\";\nimport { ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT } from \"../../../../../core/actor/ActorCompilationController\";\nimport { RenderPixelController, coreCursorToUv } from \"../../../../../core/render/renderPixel/RenderPixelController\";\nimport { coreGetDefaultCamera } from \"../../../../../core/render/renderPixel/CoreGetDefautCamera\";\nimport { pushOnArrayAtEntry } from \"../../../../../core/MapUtils\";\nimport {\n  hasCPUOptions,\n  hasGPUOptions,\n  CPUOptionsEqual,\n  CPUOptionsMax,\n  GPUOptionsDepthBufferRequired\n} from \"./Common\";\nconst RAYCAST_UPDATE_OPTIONS = {\n  pointsThreshold: 0.1,\n  lineThreshold: 0.1\n};\nconst TMP_CPU_OPTIONS = {\n  traverseChildren: false,\n  pointsThreshold: 0.1,\n  lineThreshold: 0.1,\n  intersectionRef: ref(null)\n};\nfunction intersectsSort(a, b) {\n  return a.distance - b.distance;\n}\nconst pixelRenderUv = new Vector2();\nconst pixelRenderTarget = new Vector4();\nconst raycasterDirNormalised = new Vector3();\nconst gpuCameraRayAtNearPlane = new Vector3();\nconst gpuCameraRayAtFarPlane = new Vector3();\nconst gpuHitPos = new Vector3();\nexport class BaseRayObjectIntersectionsController {\n  constructor(actorsManager) {\n    this.actorsManager = actorsManager;\n    this._objects = [];\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectsByObject = /* @__PURE__ */ new WeakMap();\n    this._closestIntersects = /* @__PURE__ */ new Map();\n    this._objectByClosestIntersect = /* @__PURE__ */ new Map();\n    this._closestIntersectsSorted = [];\n    this._renderPixelController = new RenderPixelController();\n    this._scene = actorsManager.scene;\n  }\n  _setIntersectedState(objects, intersectedStateByObject) {\n    if (objects.length == 0) {\n      return;\n    }\n    this._closestIntersects.clear();\n    this._objectByClosestIntersect.clear();\n    const pointerEventsController = this._scene.eventsDispatcher.pointerEventsController;\n    const raycaster = pointerEventsController.raycaster().value;\n    pointerEventsController.updateRaycast(RAYCAST_UPDATE_OPTIONS);\n    const gpuObjectsPresent = this._gpuObjectsPresent();\n    const camera = gpuObjectsPresent == true ? coreGetDefaultCamera(this._scene) : null;\n    if (gpuObjectsPresent == true && camera) {\n      const cursor = pointerEventsController.cursor().value;\n      coreCursorToUv(cursor, pixelRenderUv);\n      if (this._gpuDepthBufferReadRequired()) {\n        raycasterDirNormalised.copy(raycaster.ray.direction).normalize();\n        gpuCameraRayAtNearPlane.set(cursor.x, cursor.y, -1).unproject(camera);\n        gpuCameraRayAtFarPlane.set(cursor.x, cursor.y, 1).unproject(camera);\n      }\n    }\n    for (const object of objects) {\n      intersectedStateByObject.set(\n        object,\n        false\n        /*we reset to false here*/\n      );\n      const propertiesList = this._propertiesListByObject.get(object);\n      const intersects = this._intersectsByObject.get(object);\n      if (propertiesList && intersects) {\n        intersects.length = 0;\n        if (hasCPUOptions(propertiesList)) {\n          const cpuOptions = CPUOptionsEqual(propertiesList) ? propertiesList[0].cpu : CPUOptionsMax(propertiesList, TMP_CPU_OPTIONS);\n          RAYCAST_UPDATE_OPTIONS.pointsThreshold = cpuOptions.pointsThreshold;\n          RAYCAST_UPDATE_OPTIONS.lineThreshold = cpuOptions.lineThreshold;\n          raycaster.intersectObject(object, cpuOptions.traverseChildren, intersects);\n          const closestIntersect = intersects[0];\n          this._closestIntersects.set(object, closestIntersect);\n          if (closestIntersect) {\n            this._objectByClosestIntersect.set(closestIntersect, object);\n          }\n        }\n        if (hasGPUOptions(propertiesList)) {\n          const gpuOptions = propertiesList[0].gpu;\n          if (gpuOptions && camera) {\n            const worldPosMaterial = gpuOptions.worldPosMaterial;\n            if (worldPosMaterial != null) {\n              this._renderPixelController.renderColor(\n                this._scene,\n                object,\n                gpuOptions.worldPosMaterial,\n                camera,\n                null,\n                //necessary to have alpha=0 when no object is hit\n                pixelRenderUv,\n                pixelRenderTarget\n              );\n            } else {\n              this._renderPixelController.renderDepth(\n                this._scene,\n                object,\n                // gpuOptions.worldPosMaterial,\n                camera,\n                null,\n                //necessary to have alpha=0 when no object is hit\n                pixelRenderUv,\n                pixelRenderTarget\n              );\n            }\n            if (pixelRenderTarget.w > 0) {\n              if (worldPosMaterial) {\n                gpuHitPos.set(pixelRenderTarget.x, pixelRenderTarget.y, pixelRenderTarget.z);\n              } else {\n                gpuHitPos.copy(gpuCameraRayAtNearPlane).lerp(gpuCameraRayAtFarPlane, pixelRenderTarget.x);\n              }\n              const distance = gpuHitPos.distanceTo(raycaster.ray.origin);\n              const gpuIntersect = { distance };\n              this._closestIntersects.set(object, gpuIntersect);\n              if (gpuIntersect) {\n                this._objectByClosestIntersect.set(gpuIntersect, object);\n              }\n            } else {\n              this._closestIntersects.set(object, void 0);\n            }\n          }\n        }\n      }\n    }\n    this._closestIntersectsSorted.length = 0;\n    for (const object of objects) {\n      const closestIntersect = this._closestIntersects.get(object);\n      if (closestIntersect) {\n        this._closestIntersectsSorted.push(closestIntersect);\n      }\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        for (const properties of propertiesList) {\n          const cpuOptions = properties.cpu;\n          if (cpuOptions) {\n            cpuOptions.intersectionRef.value = closestIntersect || null;\n          } else {\n            const gpuOptions = properties.gpu;\n            if (gpuOptions) {\n              gpuOptions.distanceRef.value = closestIntersect ? closestIntersect.distance : -1;\n            }\n          }\n        }\n      }\n    }\n    this._closestIntersectsSorted.sort(intersectsSort);\n    let blockingObjectProcessed = false;\n    for (const intersect of this._closestIntersectsSorted) {\n      const object = this._objectByClosestIntersect.get(intersect);\n      if (object) {\n        const propertiesList = this._propertiesListByObject.get(object);\n        if (propertiesList) {\n          let blockObjectsBehind = false;\n          for (const properties of propertiesList) {\n            if (blockingObjectProcessed == false || properties.priority.skipIfObjectsInFront == true) {\n              intersectedStateByObject.set(object, true);\n            }\n            if (properties.priority.blockObjectsBehind == true) {\n              blockObjectsBehind = true;\n            }\n          }\n          blockingObjectProcessed = blockObjectsBehind;\n        }\n      }\n    }\n    this._objectByClosestIntersect.clear();\n  }\n  // protected _postProcess() {\n  // \tthis._objectByClosestIntersect.clear();\n  // }\n  _gpuObjectsPresent() {\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList && hasGPUOptions(propertiesList)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  _gpuDepthBufferReadRequired() {\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList && GPUOptionsDepthBufferRequired(propertiesList)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  addPropertiesForObject(object, properties) {\n    if (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n      return;\n    }\n    pushOnArrayAtEntry(this._propertiesListByObject, object, properties);\n    const index = this._objects.indexOf(object);\n    if (index < 0) {\n      this._objects.push(object);\n      this._intersectsByObject.set(object, []);\n    }\n  }\n  removePropertiesForObject(object, properties) {\n    if (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n      return;\n    }\n    const propertiesForObject = this._propertiesListByObject.get(object);\n    if (propertiesForObject) {\n      const propertyIndex = propertiesForObject.indexOf(properties);\n      propertiesForObject.splice(propertyIndex, 1);\n      if (propertiesForObject.length == 0) {\n        const objectIndex = this._objects.indexOf(object);\n        if (objectIndex >= 0) {\n          this._objects.splice(objectIndex, 1);\n          this._intersectsByObject.delete(object);\n          this._propertiesListByObject.delete(object);\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseRayObjectIntersectionsController } from \"./_BaseRayObjectIntersectionsController\";\nexport class RayObjectIntersectionsHoverController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateByObject = /* @__PURE__ */ new Map();\n  }\n  process() {\n    this._setIntersectedState(this._objects, this._intersectedStateByObject);\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        for (const properties of propertiesList) {\n          const currentHoveredState = properties.hover.hoveredStateRef.value;\n          const newHoveredState = this._intersectedStateByObject.get(object) || false;\n          if (newHoveredState != currentHoveredState) {\n            properties.hover.hoveredStateRef.value = newHoveredState;\n            properties.hover.onHoveredStateChange();\n          }\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseRayObjectIntersectionsController } from \"./_BaseRayObjectIntersectionsController\";\nimport {\n  filterObjectsWithMatchButtonConfig,\n  buttonConfigFromEvent,\n  propertyMatchesButtonConfig\n} from \"./Common\";\nimport { MouseButton } from \"../../../../../core/MouseButton\";\nconst _buttonConfig = { button: MouseButton.LEFT, ctrl: false, shift: false, alt: false };\nexport class RayObjectIntersectionsPointerdownController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateByObject = /* @__PURE__ */ new Map();\n    this._objectsMatchingEventConfig = [];\n  }\n  onPointerdown(event) {\n    filterObjectsWithMatchButtonConfig(\n      event,\n      this._objects,\n      this._propertiesListByObject,\n      this._objectsMatchingEventConfig\n    );\n    if (this._objectsMatchingEventConfig.length == 0) {\n      return;\n    }\n    this._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateByObject);\n    buttonConfigFromEvent(event, _buttonConfig);\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        const isIntersecting = this._intersectedStateByObject.get(object);\n        if (isIntersecting == true) {\n          for (const properties of propertiesList) {\n            if (propertyMatchesButtonConfig(properties.config, _buttonConfig)) {\n              properties.pointerdown.callback();\n            }\n          }\n        }\n      }\n    }\n  }\n  // protected override _setEvent() {\n  // \tconsole.log('_setEvent', this._objects.length);\n  // \tif (this._objects.length > 0) {\n  // \t\tdocument.addEventListener('pointerdown', this._processBound);\n  // \t} else {\n  // \t\tdocument.removeEventListener('pointerdown', this._processBound);\n  // \t}\n  // }\n}\n", "\"use strict\";\nimport { BaseRayObjectIntersectionsController } from \"./_BaseRayObjectIntersectionsController\";\nimport {\n  filterObjectsWithMatchButtonConfig,\n  buttonConfigFromEvent,\n  propertyMatchesButtonConfig\n} from \"./Common\";\nimport { MouseButton } from \"../../../../../core/MouseButton\";\nconst _buttonConfig = { button: MouseButton.LEFT, ctrl: false, shift: false, alt: false };\nexport class RayObjectIntersectionsPointerupController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateByObject = /* @__PURE__ */ new Map();\n    this._objectsMatchingEventConfig = [];\n  }\n  // private _processBound = this._process.bind(this);\n  onPointerup(event) {\n    filterObjectsWithMatchButtonConfig(\n      event,\n      this._objects,\n      this._propertiesListByObject,\n      this._objectsMatchingEventConfig\n    );\n    if (this._objectsMatchingEventConfig.length == 0) {\n      return;\n    }\n    this._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateByObject);\n    buttonConfigFromEvent(event, _buttonConfig);\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        const isIntersecting = this._intersectedStateByObject.get(object);\n        if (isIntersecting == true) {\n          for (const properties of propertiesList) {\n            if (propertyMatchesButtonConfig(properties.config, _buttonConfig)) {\n              properties.pointerup.callback();\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { Vector2 } from \"three\";\nconst _cursorDelta = new Vector2();\nconst _currentCursorPos = new Vector2();\nexport class CursorMoveMonitor {\n  constructor() {\n    this._lastCursorPosSet = false;\n    this._movedCursorDistance = 0;\n    this._lastCursorPos = new Vector2();\n    this._bound = {\n      pointermove: this._onPointermove.bind(this)\n    };\n  }\n  addPointermoveEventListener(cursorRef) {\n    this.cursorRef = cursorRef;\n    this._movedCursorDistance = 0;\n    this._lastCursorPosSet = false;\n    document.addEventListener(\"pointermove\", this._bound.pointermove);\n    document.addEventListener(\"touchmove\", this._bound.pointermove);\n  }\n  removeEventListener() {\n    document.removeEventListener(\"pointermove\", this._bound.pointermove);\n    document.removeEventListener(\"touchmove\", this._bound.pointermove);\n  }\n  movedCursorDistance() {\n    return this._movedCursorDistance;\n  }\n  _onPointermove() {\n    if (!this.cursorRef) {\n      return;\n    }\n    const cursor = this.cursorRef.value;\n    if (this._lastCursorPosSet == false) {\n      this._lastCursorPos.copy(cursor);\n      this._lastCursorPosSet = true;\n    }\n    _currentCursorPos.copy(cursor);\n    _cursorDelta.copy(_currentCursorPos).sub(this._lastCursorPos);\n    this._movedCursorDistance += _cursorDelta.manhattanLength() / 2;\n    this._lastCursorPos.copy(_currentCursorPos);\n  }\n}\n", "\"use strict\";\nimport { BaseRayObjectIntersectionsController } from \"./_BaseRayObjectIntersectionsController\";\nimport {\n  filterObjectsWithMatchButtonConfig,\n  propertyMatchesButtonConfig,\n  buttonConfigFromEvent\n} from \"./Common\";\nimport { ParamConfig } from \"../../../../nodes/utils/params/ParamsConfig\";\nimport { MouseButton } from \"../../../../../core/MouseButton\";\nimport { CursorMoveMonitor } from \"../../../../../core/CursorMoveMonitor\";\nconst _buttonConfig = { button: MouseButton.LEFT, ctrl: false, shift: false, alt: false };\nfunction hasPropertiesWithCursorMoveLessThan(options, distance) {\n  for (const option of options) {\n    if (distance < option.click.maxCursorMoveDistance) {\n      return true;\n    }\n  }\n  return false;\n}\nexport function ClickParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param max cursor move distance */\n      this.maxCursorMoveDistance = ParamConfig.FLOAT(0.05, {\n        range: [0, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param max duration */\n      this.maxDuration = ParamConfig.INTEGER(200, {\n        range: [0, 1e3],\n        rangeLocked: [true, false]\n      });\n    }\n  };\n}\nexport class RayObjectIntersectionsClickController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnPointerdownByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnPointerupByObject = /* @__PURE__ */ new Map();\n    this._objectsMatchingEventConfig = [];\n    this._objectsIntersectedOnPointerdown = [];\n    this._cursorMoveMonitor = new CursorMoveMonitor();\n    this._pointerdownReceivedAt = 0;\n    this._bound = {\n      pointerup: this._onPointerup.bind(this)\n    };\n  }\n  onPointerdown(event) {\n    this._pointerdownEvent = event;\n    this._pointerdownReceivedAt = performance.now();\n    if (this._objects.length == 0) {\n      return;\n    }\n    filterObjectsWithMatchButtonConfig(\n      event,\n      this._objects,\n      this._propertiesListByObject,\n      this._objectsMatchingEventConfig\n    );\n    if (this._objectsMatchingEventConfig.length == 0) {\n      return;\n    }\n    document.addEventListener(\"pointerup\", this._bound.pointerup);\n    document.addEventListener(\"touchend\", this._bound.pointerup);\n    this._cursorMoveMonitor.addPointermoveEventListener(\n      this._scene.eventsDispatcher.pointerEventsController.cursor()\n    );\n    this._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnPointerdownByObject);\n  }\n  _onPointerup() {\n    document.removeEventListener(\"pointerup\", this._bound.pointerup);\n    document.removeEventListener(\"touchend\", this._bound.pointerup);\n    this._cursorMoveMonitor.removeEventListener();\n    const event = this._pointerdownEvent;\n    if (!event) {\n      return;\n    }\n    this._pointerdownEvent = void 0;\n    const duration = performance.now() - this._pointerdownReceivedAt;\n    const movedCursorDistance = this._cursorMoveMonitor.movedCursorDistance();\n    const objects = this._objectsMatchingEventConfig;\n    this._objectsIntersectedOnPointerdown.length = 0;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList && hasPropertiesWithCursorMoveLessThan(propertiesList, movedCursorDistance)) {\n        const isIntersectingOnPointerdown = this._intersectedStateOnPointerdownByObject.get(object);\n        if (isIntersectingOnPointerdown) {\n          this._objectsIntersectedOnPointerdown.push(object);\n        }\n      }\n    }\n    if (this._objectsIntersectedOnPointerdown.length == 0) {\n      return;\n    }\n    this._setIntersectedState(objects, this._intersectedStateOnPointerupByObject);\n    buttonConfigFromEvent(event, _buttonConfig);\n    const objectsIntersectedOnPointerdown = this._objectsIntersectedOnPointerdown;\n    for (const object of objectsIntersectedOnPointerdown) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        const isIntersectingOnPointerup = this._intersectedStateOnPointerupByObject.get(object);\n        if (isIntersectingOnPointerup == true) {\n          for (const properties of propertiesList) {\n            if (movedCursorDistance < properties.click.maxCursorMoveDistance && duration < properties.click.maxDuration && propertyMatchesButtonConfig(properties.config, _buttonConfig)) {\n              properties.click.callback();\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseRayObjectIntersectionsController } from \"./_BaseRayObjectIntersectionsController\";\nimport {\n  filterObjectsWithMatchButtonsConfig,\n  propertyMatchesButtonsConfig,\n  buttonsConfigFromEvent\n} from \"./Common\";\nimport { ParamConfig } from \"../../../../nodes/utils/params/ParamsConfig\";\nimport { MouseButtons } from \"../../../../../core/MouseButton\";\nimport { CursorMoveMonitor } from \"../../../../../core/CursorMoveMonitor\";\nconst _buttonsConfig = { buttons: MouseButtons.LEFT, ctrl: false, shift: false, alt: false };\nfunction hasPropertiesWithCursorMoveLessThan(options, distance) {\n  for (const option of options) {\n    if (distance < option.click.maxCursorMoveDistance) {\n      return true;\n    }\n  }\n  return false;\n}\nexport function ClickParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param max cursor move distance */\n      this.maxCursorMoveDistance = ParamConfig.FLOAT(0.05, {\n        range: [0, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param max duration */\n      this.maxDuration = ParamConfig.INTEGER(200, {\n        range: [0, 1e3],\n        rangeLocked: [true, false]\n      });\n    }\n  };\n}\nexport class RayObjectIntersectionsMouseClickController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnMousedownByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnMouseupByObject = /* @__PURE__ */ new Map();\n    this._objectsMatchingEventConfig = [];\n    this._objectsIntersectedOnMousedown = [];\n    this._cursorMoveMonitor = new CursorMoveMonitor();\n    this._mousedownReceivedAt = 0;\n    this._bound = {\n      mouseup: this._onMouseup.bind(this)\n    };\n  }\n  onMousedown(event) {\n    this._mousedownEvent = event;\n    this._mousedownReceivedAt = performance.now();\n    if (this._objects.length == 0) {\n      return;\n    }\n    filterObjectsWithMatchButtonsConfig(\n      event,\n      this._objects,\n      this._propertiesListByObject,\n      this._objectsMatchingEventConfig\n    );\n    if (this._objectsMatchingEventConfig.length == 0) {\n      return;\n    }\n    document.addEventListener(\"mouseup\", this._bound.mouseup);\n    document.addEventListener(\"touchend\", this._bound.mouseup);\n    this._cursorMoveMonitor.addPointermoveEventListener(\n      this._scene.eventsDispatcher.pointerEventsController.cursor()\n    );\n    this._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnMousedownByObject);\n  }\n  _onMouseup() {\n    document.removeEventListener(\"mouseup\", this._bound.mouseup);\n    document.removeEventListener(\"touchend\", this._bound.mouseup);\n    this._cursorMoveMonitor.removeEventListener();\n    const event = this._mousedownEvent;\n    if (!event) {\n      return;\n    }\n    this._mousedownEvent = void 0;\n    const duration = performance.now() - this._mousedownReceivedAt;\n    const movedCursorDistance = this._cursorMoveMonitor.movedCursorDistance();\n    const objects = this._objectsMatchingEventConfig;\n    this._objectsIntersectedOnMousedown.length = 0;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList && hasPropertiesWithCursorMoveLessThan(propertiesList, movedCursorDistance)) {\n        const isIntersectingOnMousedown = this._intersectedStateOnMousedownByObject.get(object);\n        if (isIntersectingOnMousedown) {\n          this._objectsIntersectedOnMousedown.push(object);\n        }\n      }\n    }\n    if (this._objectsIntersectedOnMousedown.length == 0) {\n      return;\n    }\n    this._setIntersectedState(objects, this._intersectedStateOnMouseupByObject);\n    buttonsConfigFromEvent(event, _buttonsConfig);\n    const objectsIntersectedOnMousedown = this._objectsIntersectedOnMousedown;\n    for (const object of objectsIntersectedOnMousedown) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        const isIntersectingOnMouseup = this._intersectedStateOnMouseupByObject.get(object);\n        if (isIntersectingOnMouseup == true) {\n          for (const properties of propertiesList) {\n            if (movedCursorDistance < properties.click.maxCursorMoveDistance && duration < properties.click.maxDuration && propertyMatchesButtonsConfig(properties.config, _buttonsConfig)) {\n              properties.click.callback();\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport {\n  BaseRayObjectIntersectionsController\n} from \"./_BaseRayObjectIntersectionsController\";\nexport class RayObjectIntersectionsContextmenuController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateByObject = /* @__PURE__ */ new Map();\n  }\n  onContextmenu(event) {\n    this._setIntersectedState(this._objects, this._intersectedStateByObject);\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        const isIntersecting = this._intersectedStateByObject.get(object);\n        if (isIntersecting == true) {\n          for (const properties of propertiesList) {\n            properties.contextmenu.callback();\n          }\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseRayObjectIntersectionsController } from \"./_BaseRayObjectIntersectionsController\";\nimport {\n  filterObjectsWithMatchButtonConfig,\n  buttonConfigFromEvent,\n  propertyMatchesButtonConfig\n} from \"./Common\";\nimport { pushOnArrayAtEntry } from \"../../../../../core/MapUtils\";\nimport { ParamConfig } from \"../../../../nodes/utils/params/ParamsConfig\";\nimport { MouseButton } from \"../../../../../core/MouseButton\";\nimport { CursorMoveMonitor } from \"../../../../../core/CursorMoveMonitor\";\nconst _buttonConfig = { button: MouseButton.LEFT, ctrl: false, shift: false, alt: false };\nexport const DEFAULT_LONG_PRESS_DURATION = 500;\nfunction hasPropertiesWithCursorMoveLessThan(options, distance) {\n  for (const option of options) {\n    if (distance < option.longPress.maxCursorMoveDistance) {\n      return true;\n    }\n  }\n  return false;\n}\nexport const DEFAULT_MAX_CURSOR_MOVE_DISTANCE = 0.05;\nexport function LongPressParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param press duration (in milliseconds) */\n      this.duration = ParamConfig.INTEGER(DEFAULT_LONG_PRESS_DURATION, {\n        range: [0, 1e3],\n        rangeLocked: [true, false]\n      });\n      /** @param max cursor move distance */\n      this.maxCursorMoveDistance = ParamConfig.FLOAT(DEFAULT_MAX_CURSOR_MOVE_DISTANCE, {\n        range: [0, 1],\n        rangeLocked: [true, false]\n      });\n    }\n  };\n}\nexport class RayObjectIntersectionsLongPressController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnPointerdownByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnTimeoutByObject = /* @__PURE__ */ new Map();\n    this._objectsMatchingEventConfig = [];\n    this._objectsByLongPressDuration = /* @__PURE__ */ new Map();\n    this._timerByDuration = /* @__PURE__ */ new Map();\n    this._cursorMoveMonitor = new CursorMoveMonitor();\n    this._bound = {\n      pointerup: this._onPointerup.bind(this)\n      // pointermove: this._onPointermove.bind(this),\n    };\n  }\n  onPointerdown(event) {\n    if (this._objects.length == 0) {\n      return;\n    }\n    filterObjectsWithMatchButtonConfig(\n      event,\n      this._objects,\n      this._propertiesListByObject,\n      this._objectsMatchingEventConfig\n    );\n    if (this._objectsMatchingEventConfig.length == 0) {\n      return;\n    }\n    document.addEventListener(\"pointerup\", this._bound.pointerup);\n    document.addEventListener(\"touchend\", this._bound.pointerup);\n    this._cursorMoveMonitor.addPointermoveEventListener(\n      this._scene.eventsDispatcher.pointerEventsController.cursor()\n    );\n    this._objectsByLongPressDuration.clear();\n    this._timerByDuration.clear();\n    this._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnPointerdownByObject);\n    const _groupIntersectedObjectsByDuration = () => {\n      const objects = this._objects;\n      for (const object of objects) {\n        const propertiesList = this._propertiesListByObject.get(object);\n        if (propertiesList) {\n          const isIntersecting = this._intersectedStateOnPointerdownByObject.get(object);\n          if (isIntersecting == true) {\n            for (const properties of propertiesList) {\n              pushOnArrayAtEntry(this._objectsByLongPressDuration, properties.longPress.duration, object);\n            }\n          }\n        }\n      }\n    };\n    _groupIntersectedObjectsByDuration();\n    buttonConfigFromEvent(event, _buttonConfig);\n    this._objectsByLongPressDuration.forEach((objects, duration) => {\n      const wrappedTriggeredMethod = () => {\n        const movedCursorDistance = this._cursorMoveMonitor.movedCursorDistance();\n        this._timerByDuration.delete(duration);\n        this._setIntersectedState(this._objects, this._intersectedStateOnTimeoutByObject);\n        for (const object of objects) {\n          const propertiesList = this._propertiesListByObject.get(object);\n          if (propertiesList && hasPropertiesWithCursorMoveLessThan(propertiesList, movedCursorDistance)) {\n            const isIntersecting = this._intersectedStateOnTimeoutByObject.get(object);\n            if (isIntersecting) {\n              for (const properties of propertiesList) {\n                if (movedCursorDistance < properties.longPress.maxCursorMoveDistance && propertyMatchesButtonConfig(properties.config, _buttonConfig)) {\n                  properties.longPress.callback();\n                }\n              }\n            }\n          }\n        }\n      };\n      const timer = setTimeout(wrappedTriggeredMethod, duration);\n      this._timerByDuration.set(duration, timer);\n    });\n  }\n  _onPointerup() {\n    document.removeEventListener(\"pointerup\", this._bound.pointerup);\n    document.removeEventListener(\"touchend\", this._bound.pointerup);\n    this._cursorMoveMonitor.removeEventListener();\n    this._timerByDuration.forEach((timer, duration) => {\n      clearTimeout(timer);\n    });\n    this._timerByDuration.clear();\n  }\n}\n", "\"use strict\";\nimport { Vector2 } from \"three\";\nimport { radToDeg } from \"../../../../../core/math/_Module\";\nimport { BaseRayObjectIntersectionsController } from \"./_BaseRayObjectIntersectionsController\";\nimport {\n  filterObjectsWithMatchButtonConfig,\n  buttonConfigFromEvent,\n  propertyMatchesButtonConfig\n} from \"./Common\";\nimport { ParamConfig } from \"../../../../nodes/utils/params/ParamsConfig\";\nimport { MouseButton } from \"../../../../../core/MouseButton\";\nconst _tmp = new Vector2();\nconst _buttonConfig = { button: MouseButton.LEFT, ctrl: false, shift: false, alt: false };\nfunction degAngle(radians) {\n  if (radians > Math.PI) {\n    radians -= Math.PI * 2;\n  }\n  return radToDeg(radians);\n}\nexport const ANGLE_DEGREES = {\n  LEFT: degAngle(_tmp.set(-1, 0).angle()),\n  RIGHT: degAngle(_tmp.set(1, 0).angle()),\n  UP: degAngle(_tmp.set(0, 1).angle()),\n  DOWN: degAngle(_tmp.set(0, -1).angle())\n};\nconst DEFAULT_MIN_CURSOR_MOVE_DISTANCE = 0.05;\nexport function SwipeParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param angle */\n      this.angle = ParamConfig.FLOAT(0, {\n        range: [-180, 180],\n        rangeLocked: [true, false]\n      });\n      /** @param angle margin */\n      this.angleMargin = ParamConfig.FLOAT(45, {\n        range: [0, 180],\n        rangeLocked: [true, false]\n      });\n      /** @param min distance */\n      this.minDistance = ParamConfig.FLOAT(DEFAULT_MIN_CURSOR_MOVE_DISTANCE, {\n        range: [0, 1],\n        rangeLocked: [true, false]\n      });\n    }\n  };\n}\nfunction optionsContainsAngle(options, angle) {\n  return angle >= options.angle - options.angleMargin && angle <= options.angle + options.angleMargin;\n}\nconst _cursorDelta = new Vector2();\nexport class RayObjectIntersectionsSwipeController extends BaseRayObjectIntersectionsController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnPointerdownByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateOnPointerupByObject = /* @__PURE__ */ new Map();\n    this._objectsMatchingEventConfig = [];\n    this._objectsIntersectedOnPointerdown = [];\n    this._cursorOnPointerdown = new Vector2();\n    this._cursorOnPointerup = new Vector2();\n    this._bound = {\n      pointerup: this._onPointerup.bind(this)\n    };\n  }\n  onPointerdown(event) {\n    this._pointerdownEvent = event;\n    if (this._objects.length == 0) {\n      return;\n    }\n    filterObjectsWithMatchButtonConfig(\n      event,\n      this._objects,\n      this._propertiesListByObject,\n      this._objectsMatchingEventConfig\n    );\n    if (this._objectsMatchingEventConfig.length == 0) {\n      return;\n    }\n    document.addEventListener(\"pointerup\", this._bound.pointerup);\n    document.addEventListener(\"touchend\", this._bound.pointerup);\n    this._setIntersectedState(this._objectsMatchingEventConfig, this._intersectedStateOnPointerdownByObject);\n    this._getCursor(this._cursorOnPointerdown);\n  }\n  _onPointerup(_event) {\n    document.removeEventListener(\"pointerup\", this._bound.pointerup);\n    document.removeEventListener(\"touchend\", this._bound.pointerup);\n    const event = this._pointerdownEvent;\n    if (!event) {\n      return;\n    }\n    this._pointerdownEvent = void 0;\n    const objects = this._objects;\n    this._objectsIntersectedOnPointerdown.length = 0;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        const isIntersectingOnPointerdown = this._intersectedStateOnPointerdownByObject.get(object);\n        if (isIntersectingOnPointerdown) {\n          this._objectsIntersectedOnPointerdown.push(object);\n        }\n      }\n    }\n    if (this._objectsIntersectedOnPointerdown.length == 0) {\n      return;\n    }\n    this._getCursor(this._cursorOnPointerup);\n    _cursorDelta.copy(this._cursorOnPointerup).sub(this._cursorOnPointerdown);\n    let radians = _cursorDelta.angle();\n    const degrees = degAngle(radians);\n    const distance = _cursorDelta.manhattanLength();\n    this._setIntersectedState(objects, this._intersectedStateOnPointerupByObject);\n    buttonConfigFromEvent(event, _buttonConfig);\n    const objectsIntersectedOnPointerdown = this._objectsIntersectedOnPointerdown;\n    for (const object of objectsIntersectedOnPointerdown) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        const isIntersectingOnPointerup = this._intersectedStateOnPointerupByObject.get(object);\n        if (isIntersectingOnPointerup == true) {\n          for (const properties of propertiesList) {\n            if (distance > properties.swipe.minDistance && optionsContainsAngle(properties.swipe, degrees) && propertyMatchesButtonConfig(properties.config, _buttonConfig)) {\n              properties.swipe.callback();\n            }\n          }\n        }\n      }\n    }\n  }\n  _getCursor(target) {\n    const pointerEventsController = this._scene.eventsDispatcher.pointerEventsController;\n    const cursor = pointerEventsController.cursor().value;\n    target.copy(cursor);\n  }\n}\n", "\"use strict\";\nimport { ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT } from \"../../../../../core/actor/ActorCompilationController\";\nimport { pushOnArrayAtEntry } from \"../../../../../core/MapUtils\";\nexport class BaseUserInputController {\n  constructor(actorsManager) {\n    this.actorsManager = actorsManager;\n    this._objects = [];\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._scene = actorsManager.scene;\n  }\n  addPropertiesForObject(object, properties) {\n    if (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n      return;\n    }\n    pushOnArrayAtEntry(this._propertiesListByObject, object, properties);\n    const index = this._objects.indexOf(object);\n    if (index < 0) {\n      this._objects.push(object);\n    }\n  }\n  removePropertiesForObject(object, properties) {\n    if (object == ACTOR_COMPILATION_CONTROLLER_DUMMY_OBJECT) {\n      return;\n    }\n    const propertiesForObject = this._propertiesListByObject.get(object);\n    if (propertiesForObject) {\n      const propertyIndex = propertiesForObject.indexOf(properties);\n      propertiesForObject.splice(propertyIndex, 1);\n      if (propertiesForObject.length == 0) {\n        const objectIndex = this._objects.indexOf(object);\n        if (objectIndex >= 0) {\n          this._objects.splice(objectIndex, 1);\n          this._propertiesListByObject.delete(object);\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseUserInputController } from \"./_BaseUserInputController\";\nexport class PointerdownController extends BaseUserInputController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateByObject = /* @__PURE__ */ new Map();\n  }\n  onPointerdown(event) {\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        for (const properties of propertiesList) {\n          properties.pointerdown.callback();\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseUserInputController } from \"./_BaseUserInputController\";\nexport class PointerupController extends BaseUserInputController {\n  constructor() {\n    super(...arguments);\n    this._propertiesListByObject = /* @__PURE__ */ new Map();\n    this._intersectedStateByObject = /* @__PURE__ */ new Map();\n  }\n  onPointerup(event) {\n    const objects = this._objects;\n    for (const object of objects) {\n      const propertiesList = this._propertiesListByObject.get(object);\n      if (propertiesList) {\n        for (const properties of propertiesList) {\n          properties.pointerup.callback();\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { ActorManualTriggersController } from \"./actors/ManualTriggersController\";\nimport { ActorKeyboardEventsController } from \"./actors/ActorsKeyboardEventsController\";\nimport { JsType } from \"../../poly/registers/nodes/types/Js\";\nimport { EVALUATOR_METHOD_NAMES } from \"../../nodes/js/code/assemblers/actor/ActorEvaluator\";\nimport { AssemblerControllerNode } from \"../../nodes/js/code/Controller\";\nimport { hierarchyTraverse } from \"../../../core/geometry/util/HierarchyTraverse\";\nimport { Poly } from \"../../Poly\";\nimport { RayObjectIntersectionsHoverController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsHoverController\";\nimport { RayObjectIntersectionsPointerdownController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsPointerdownController\";\nimport { RayObjectIntersectionsPointerupController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsPointerupController\";\nimport { RayObjectIntersectionsClickController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsClickController\";\nimport { RayObjectIntersectionsMouseClickController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsMouseClickController\";\nimport { RayObjectIntersectionsContextmenuController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsContextmenuController\";\nimport { RayObjectIntersectionsLongPressController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsLongPressController\";\nimport { RayObjectIntersectionsSwipeController } from \"./actors/rayObjectIntersection/RayObjectIntersectionsSwipeController\";\nimport { PointerdownController } from \"./actors/rayObjectIntersection/PointerdownController\";\nimport { PointerupController } from \"./actors/rayObjectIntersection/PointerupController\";\nconst ACTOR_BUILDER_NODE_IDS_KEY = \"actorBuilderNodeIds\";\nvar EventHandlerType = /* @__PURE__ */ ((EventHandlerType2) => {\n  EventHandlerType2[\"instant\"] = \"instant\";\n  EventHandlerType2[\"onTick\"] = \"onTick\";\n  return EventHandlerType2;\n})(EventHandlerType || {});\nconst EVENT_MAP_LOGIC = {\n  [JsType.ON_KEY]: \"onTick\" /* onTick */,\n  [JsType.ON_KEYDOWN]: \"onTick\" /* onTick */,\n  [JsType.ON_KEYPRESS]: \"onTick\" /* onTick */,\n  [JsType.ON_KEYUP]: \"onTick\" /* onTick */,\n  // [JsType.ON_MANUAL_TRIGGER]: EventHandlerType.instant,\n  [JsType.ON_MAPBOX_CAMERA_MOVE]: \"onTick\" /* onTick */,\n  [JsType.ON_MAPBOX_CAMERA_MOVE_START]: \"onTick\" /* onTick */,\n  [JsType.ON_MAPBOX_CAMERA_MOVE_END]: \"onTick\" /* onTick */,\n  [JsType.ON_OBJECT_ATTRIBUTE_UPDATE]: \"onTick\" /* onTick */,\n  // ['onClick']: EventHandlerType.onTick,\n  [\"onContextMenu\"]: \"onTick\" /* onTick */,\n  [JsType.ON_OBJECT_DISPATCH_EVENT]: \"instant\" /* instant */,\n  // TODO\n  [\"onPointermove\"]: \"onTick\" /* onTick */,\n  // [JsType.ON_OBJECT_POINTERDOWN]: EventHandlerType.onTick,\n  // [JsType.ON_OBJECT_POINTERUP]: EventHandlerType.onTick,\n  [JsType.ON_PERFORMANCE_CHANGE]: \"instant\" /* instant */,\n  [JsType.ON_POINTERDOWN]: \"onTick\" /* onTick */,\n  [JsType.ON_POINTERUP]: \"onTick\" /* onTick */,\n  [JsType.ON_SCENE_PAUSE]: \"instant\" /* instant */,\n  [JsType.ON_SCENE_PLAY]: \"instant\" /* instant */,\n  [JsType.ON_SCENE_RESET]: \"instant\" /* instant */,\n  [JsType.ON_TICK]: \"onTick\" /* onTick */,\n  [JsType.ON_VIDEO_EVENT]: \"onTick\" /* onTick */,\n  [JsType.ON_WEBXR_CONTROLLER_EVENT]: \"onTick\" /* onTick */\n  // TODO\n};\nconst ON_TICK_METHOD_NAMES = new Set(\n  EVALUATOR_METHOD_NAMES.filter((methodName) => EVENT_MAP_LOGIC[methodName] == \"onTick\" /* onTick */)\n);\nconst INSTANT_METHOD_NAMES = new Set(\n  EVALUATOR_METHOD_NAMES.filter((methodName) => EVENT_MAP_LOGIC[methodName] == \"instant\" /* instant */)\n);\nif (0 + 0) {\n  console.log({ ON_TICK_METHOD_NAMES, INSTANT_METHOD_NAMES });\n}\nexport class ActorBuilderNode extends AssemblerControllerNode {\n}\nexport class ActorsManager {\n  constructor(scene) {\n    this.scene = scene;\n    this.rayObjectIntersectionClick = new RayObjectIntersectionsClickController(this);\n    this.rayObjectIntersectionMouseClick = new RayObjectIntersectionsMouseClickController(this);\n    this.rayObjectIntersectionContextmenu = new RayObjectIntersectionsContextmenuController(this);\n    this.rayObjectIntersectionHover = new RayObjectIntersectionsHoverController(this);\n    this.rayObjectIntersectionLongPress = new RayObjectIntersectionsLongPressController(this);\n    this.rayObjectIntersectionPointerdown = new RayObjectIntersectionsPointerdownController(this);\n    this.rayObjectIntersectionPointerup = new RayObjectIntersectionsPointerupController(this);\n    this.rayObjectIntersectionSwipe = new RayObjectIntersectionsSwipeController(this);\n    this.pointerdown = new PointerdownController(this);\n    this.pointerup = new PointerupController(this);\n    /*\n     *\n     * PRIVATE METHODS\n     *\n     */\n    // tick\n    this._onEventTickBound = this._onEventTick.bind(this);\n    // reset\n    this._onEventSceneResetBound = this._onEventSceneReset.bind(this);\n    // play\n    this._onEventScenePlayBound = this._onEventScenePlay.bind(this);\n    // pause\n    this._onEventScenePauseBound = this._onEventScenePause.bind(this);\n    // performanceChange\n    this._onEventPerformanceChangeBound = this._onEventPerformanceChange.bind(this);\n  }\n  registerEvaluatorGenerator(evaluatorGenerator) {\n    this.scene.eventsDispatcher.registerEvaluatorGenerator(evaluatorGenerator);\n  }\n  unregisterEvaluatorGenerator(evaluatorGenerator) {\n    this.scene.eventsDispatcher.unregisterEvaluatorGenerator(evaluatorGenerator);\n  }\n  assignActorBuilder(object, node) {\n    let ids = this.objectActorNodeIds(object);\n    if (!ids) {\n      ids = [];\n      object.userData[ACTOR_BUILDER_NODE_IDS_KEY] = ids;\n    }\n    const id = node.graphNodeId();\n    if (!ids.includes(id)) {\n      ids.push(id);\n    }\n    Poly.onObjectsAddRemoveHooks.assignOnRemoveHookHandler(object, node);\n  }\n  objectActorNodeIds(object) {\n    return object.userData[ACTOR_BUILDER_NODE_IDS_KEY];\n  }\n  /*\n   *\n   * EVENTS\n   *\n   */\n  get keyboardEventsController() {\n    return this._keyboardEventsController = this._keyboardEventsController || new ActorKeyboardEventsController(this);\n  }\n  get manualTriggerController() {\n    return this._manualTriggerController = this._manualTriggerController || new ActorManualTriggersController(this);\n  }\n  /*\n   *\n   * PUBLIC METHODS\n   *\n   */\n  tick() {\n    var _a;\n    this.rayObjectIntersectionHover.process();\n    (_a = this._keyboardEventsController) == null ? void 0 : _a.runTriggers();\n    hierarchyTraverse(this.scene.threejsScene(), (object) => {\n      this.triggerEventNodes(object, \"onPointermove\");\n      this._onEventTickBound(object);\n    });\n  }\n  runOnEventSceneReset() {\n    this._onEventSceneResetTraverse();\n  }\n  runOnEventScenePlay() {\n    this._onEventScenePlayTraverse();\n  }\n  runOnEventScenePause() {\n    this._onEventScenePauseTraverse();\n  }\n  runOnEventPerformanceChange() {\n    this._onEventPerformanceChangeTraverse();\n  }\n  _onEventTick(object) {\n    this.triggerEventNodes(object, JsType.ON_TICK);\n  }\n  _onEventSceneReset(object) {\n    this.triggerEventNodes(object, JsType.ON_SCENE_RESET);\n  }\n  _onEventSceneResetTraverse() {\n    hierarchyTraverse(this.scene.threejsScene(), this._onEventSceneResetBound);\n  }\n  _onEventScenePlay(object) {\n    this.triggerEventNodes(object, JsType.ON_SCENE_PLAY);\n  }\n  _onEventScenePlayTraverse() {\n    hierarchyTraverse(this.scene.threejsScene(), this._onEventScenePlayBound);\n  }\n  _onEventScenePause(object) {\n    this.triggerEventNodes(object, JsType.ON_SCENE_PAUSE);\n  }\n  _onEventScenePauseTraverse() {\n    hierarchyTraverse(this.scene.threejsScene(), this._onEventScenePauseBound);\n  }\n  _onEventPerformanceChange(object) {\n    this.triggerEventNodes(object, JsType.ON_PERFORMANCE_CHANGE);\n  }\n  _onEventPerformanceChangeTraverse() {\n    hierarchyTraverse(this.scene.threejsScene(), this._onEventPerformanceChangeBound);\n  }\n  //\n  triggerEventNodes(object, methodName) {\n    const nodeIds = this.objectActorNodeIds(object);\n    if (!nodeIds) {\n      return;\n    }\n    for (const nodeId of nodeIds) {\n      if (object.parent == null) {\n        return;\n      }\n      const node = this.scene.graph.nodeFromId(nodeId);\n      if (node) {\n        this.triggerEventNode(node, object, methodName);\n      }\n    }\n  }\n  triggerEventNode(node, object, methodName) {\n    const evaluatorGenerator = node.compilationController.evaluatorGenerator();\n    this._triggerEvaluatorGenerator(evaluatorGenerator, object, methodName);\n  }\n  _triggerEvaluatorGenerator(evaluatorGenerator, object, methodName) {\n    const evaluator = evaluatorGenerator.findOrCreateEvaluator(object);\n    if (evaluator[methodName]) {\n      evaluator[methodName]();\n    }\n  }\n}\n", "\"use strict\";\nimport { Poly } from \"../../Poly\";\nimport { CoreGraphNode } from \"../../../core/graph/CoreGraphNode\";\nconst _cameras = [];\nexport class SceneCamerasController {\n  constructor(scene) {\n    this.scene = scene;\n    this._cameraObjectsRecentlyUpdated = [];\n    // async mainCameraObjectPath() {\n    // \treturn this._mainCameraObjectPath;\n    // }\n    this._errorMessageDisplayed = false;\n    this._onCameraObjectsUpdatedCallbacks = [];\n    this._coreGraphNode = new CoreGraphNode(this.scene, \"SceneCamerasController\");\n  }\n  coreGraphNode() {\n    return this._coreGraphNode;\n  }\n  dispose() {\n    this._coreGraphNode.dispose();\n  }\n  updateFromChangeInObject(object) {\n    this._cameraObjects(object, this._cameraObjectsRecentlyUpdated);\n    if (this._cameraObjectsRecentlyUpdated.length > 0) {\n      this._coreGraphNode.setDirty();\n    }\n    for (const callback of this._onCameraObjectsUpdatedCallbacks) {\n      callback();\n    }\n  }\n  cameraObjects(target) {\n    this._cameraObjects(this.scene.threejsScene(), target);\n    return target;\n  }\n  _cameraObjects(parent, cameraObjects) {\n    cameraObjects.splice(0, cameraObjects.length);\n    parent.traverse((object) => {\n      if (Poly.camerasRegister.objectRegistered(object)) {\n        cameraObjects.push(object);\n      }\n    });\n  }\n  cameraObjectsRecentlyUpdated() {\n    return this._cameraObjectsRecentlyUpdated;\n  }\n  // _mainCameraObjectPath: string | null = null;\n  setMainCamera(camera) {\n    this.scene.root().mainCameraController.setCamera(camera);\n  }\n  setMainCameraPath(path) {\n    this.scene.root().mainCameraController.setCameraPath(path);\n  }\n  mainCameraPath() {\n    return this.scene.root().mainCameraController.rawCameraPath();\n  }\n  async mainCamera(options) {\n    if (this.scene.disposed()) {\n      return null;\n    }\n    let printCameraNotFoundError = true;\n    if ((options == null ? void 0 : options.printCameraNotFoundError) != null) {\n      printCameraNotFoundError = options.printCameraNotFoundError;\n    }\n    const cameraMaskOverride = options == null ? void 0 : options.cameraMaskOverride;\n    if (cameraMaskOverride != null) {\n      this.scene.root().mainCameraController.setCameraPath(cameraMaskOverride);\n    }\n    const _printWarningMessage = (warningMessage2) => {\n      if (this._errorMessageDisplayed == true) {\n        return;\n      }\n      if (printCameraNotFoundError) {\n        console.error(warningMessage2);\n        this._errorMessageDisplayed = true;\n      }\n    };\n    const camera = await this.scene.root().mainCameraController.camera();\n    if (camera) {\n      return camera;\n    }\n    let findAnyCamera = true;\n    if ((options == null ? void 0 : options.findAnyCamera) != null) {\n      findAnyCamera = options.findAnyCamera;\n    }\n    const cameraPath = await this.scene.root().mainCameraController.cameraPath();\n    const warningMessage = `No camera found at path '${cameraPath}'. Make sure to set the root parameter 'mainCameraPath' to match a camera (from the top menu Windows->Root Node Params)`;\n    if (findAnyCamera) {\n      const firstAnyCamera = this._findAnyCameraObject();\n      if (firstAnyCamera) {\n        _printWarningMessage(warningMessage);\n        return firstAnyCamera;\n      }\n    }\n    _printWarningMessage(warningMessage);\n    return null;\n  }\n  _findAnyCameraObject() {\n    this.cameraObjects(_cameras);\n    return _cameras[0];\n  }\n  async createMainViewer(options) {\n    const camera = await this.mainCamera({\n      cameraMaskOverride: options == null ? void 0 : options.cameraMaskOverride\n    });\n    if (!camera) {\n      return;\n    }\n    return Poly.camerasRegister.createViewer({\n      ...options,\n      camera,\n      scene: this.scene\n    });\n  }\n  onCameraObjectsUpdated(callback) {\n    const index = this._onCameraObjectsUpdatedCallbacks.indexOf(callback);\n    if (index >= 0) {\n      return;\n    }\n    this._onCameraObjectsUpdatedCallbacks.push(callback);\n  }\n  removeOnCameraObjectsUpdated(callback) {\n    const index = this._onCameraObjectsUpdatedCallbacks.indexOf(callback);\n    if (index >= 0) {\n      this._onCameraObjectsUpdatedCallbacks.splice(index, 1);\n    }\n  }\n}\n", "\"use strict\";\nexport class Cooker {\n  constructor(_scene) {\n    this._scene = _scene;\n    this._queue = /* @__PURE__ */ new Map();\n    this._nodeIdsInFlushingQueue = /* @__PURE__ */ new Set();\n    this._blockLevel = 0;\n  }\n  // private _processesCount: number = 0;\n  block() {\n    this._blockLevel += 1;\n  }\n  unblock() {\n    this._blockLevel -= 1;\n    if (this._blockLevel > 0) {\n      return;\n    }\n    if (this._blockLevel < 0) {\n      this._blockLevel = 0;\n    }\n    this._processQueue();\n  }\n  blocked() {\n    return this._blockLevel > 0 || this._scene.loadingController.isLoading();\n  }\n  enqueue(node, originalTriggerGraphNode) {\n    if (!node.dirtyController.hasPostDirtyHooks()) {\n      return;\n    }\n    if (this._queue.has(node.graphNodeId()) || this._nodeIdsInFlushingQueue.has(node.graphNodeId())) {\n      return;\n    }\n    this._queue.set(node.graphNodeId(), originalTriggerGraphNode);\n  }\n  _processQueue() {\n    if (this.blocked()) {\n      return;\n    }\n    if (this._queue.size == 0) {\n      return;\n    }\n    const originalTriggerGraphNodes = [];\n    const nodeIds = [];\n    this._queue.forEach((originalTriggerGraphNode, nodeId) => {\n      originalTriggerGraphNodes.push(originalTriggerGraphNode);\n      nodeIds.push(nodeId);\n      this._nodeIdsInFlushingQueue.add(nodeId);\n    });\n    this._queue.clear();\n    let i = 0;\n    for (const originalTriggerGraphNode of originalTriggerGraphNodes) {\n      const nodeId = nodeIds[i];\n      this._processItem(originalTriggerGraphNode, nodeId);\n      this._nodeIdsInFlushingQueue.delete(nodeId);\n      i++;\n    }\n  }\n  _processItem(originalTriggerGraphNode, nodeId) {\n    const node = this._scene.graph.nodeFromId(nodeId);\n    if (node) {\n      node.dirtyController.runPostDirtyHooks(originalTriggerGraphNode);\n    }\n  }\n}\n", "\"use strict\";\nexport class SceneCookController {\n  constructor() {\n    this._cookingNodesById = /* @__PURE__ */ new Map();\n    this._nodeIdsHavingCookedAtLeastOnce = /* @__PURE__ */ new Set();\n    this._nodeIdsCookingMoreThanOnce = /* @__PURE__ */ new Set();\n    this._resolves = [];\n  }\n  addNode(node) {\n    const id = node.graphNodeId();\n    this._cookingNodesById.set(id, node);\n    if (!this._nodeIdsHavingCookedAtLeastOnce.has(id)) {\n      this._nodeIdsCookingMoreThanOnce.add(id);\n    }\n    this._nodeIdsHavingCookedAtLeastOnce.add(id);\n  }\n  removeNode(node) {\n    const id = node.graphNodeId();\n    this._cookingNodesById.delete(id);\n    this._nodeIdsCookingMoreThanOnce.delete(id);\n    if (this._cookingNodesById.size == 0) {\n      this.flush();\n    }\n  }\n  cookingNodes(target = []) {\n    target.length = 0;\n    this._cookingNodesById.forEach((node, id) => {\n      target.push(node);\n    });\n    return target;\n  }\n  allNodesHaveCookedAtLeastOnce() {\n    return this._nodeIdsCookingMoreThanOnce.size == 0;\n  }\n  flush() {\n    let callback;\n    while (callback = this._resolves.pop()) {\n      callback();\n    }\n  }\n  async waitForCooksCompleted() {\n    if (this._cookingNodesById.size == 0) {\n      return;\n    } else {\n      return new Promise((resolve, reject) => {\n        this._resolves.push(resolve);\n      });\n    }\n  }\n}\n", "\"use strict\";\nimport { isArray } from \"../Type\";\nimport { addToSetAtEntry } from \"../MapUtils\";\nconst _idStack = [];\nconst _idsSet = /* @__PURE__ */ new Set();\nexport class CoreGraph {\n  constructor() {\n    this._nextId = 0;\n    this._successors = /* @__PURE__ */ new Map();\n    this._predecessors = /* @__PURE__ */ new Map();\n    this._nodesById = /* @__PURE__ */ new Map();\n    this._forbiddenTriggerNodeIds = /* @__PURE__ */ new Map();\n    this._selfDirtyForbidden = /* @__PURE__ */ new Set();\n    this._nodesCount = 0;\n    this._debugging = false;\n    this._addedNodesDuringDebugging = /* @__PURE__ */ new Map();\n    this._boundPredecessorIds = this.predecessorIds.bind(this);\n    this._boundSuccessorIds = this.successorIds.bind(this);\n  }\n  startDebugging() {\n    this._debugging = true;\n  }\n  stopDebugging() {\n    this._debugging = false;\n  }\n  printDebug() {\n    this._addedNodesDuringDebugging.forEach((node, nodeId) => {\n      console.log(nodeId, node, node.graphPredecessors(), node.graphSuccessors());\n    });\n  }\n  // print() {\n  // \tthis._nodesById.forEach((node, nodeId) => {\n  // \t\tconsole.log(nodeId, node, node.graphPredecessors(), node.graphSuccessors());\n  // \t});\n  // }\n  setScene(scene) {\n    this._scene = scene;\n  }\n  scene() {\n    return this._scene;\n  }\n  nextId() {\n    this._nextId += 1;\n    return this._nextId;\n  }\n  nodesFromIds(ids, target) {\n    target.length = 0;\n    for (const id of ids) {\n      const node = this.nodeFromId(id);\n      if (node) {\n        target.push(node);\n      }\n    }\n  }\n  nodeFromId(id) {\n    return this._nodesById.get(id);\n  }\n  hasNode(node) {\n    return this._nodesById.get(node.graphNodeId()) != null;\n  }\n  addNode(node) {\n    this._nodesById.set(node.graphNodeId(), node);\n    this._nodesCount += 1;\n    if (this._debugging) {\n      this._addedNodesDuringDebugging.set(node.graphNodeId(), node);\n    }\n  }\n  removeNode(node) {\n    this.disconnectPredecessors(node);\n    this.disconnectSuccessors(node);\n    const nodeId = node.graphNodeId();\n    this._nodesById.delete(nodeId);\n    this._successors.delete(nodeId);\n    this._predecessors.delete(nodeId);\n    this._nodesCount -= 1;\n    this._forbiddenTriggerNodeIds.delete(nodeId);\n    this._forbiddenTriggerNodeIds.forEach((set, nodeId2) => {\n      if (set.has(nodeId2)) {\n        set.delete(nodeId2);\n      }\n    });\n    this._selfDirtyForbidden.delete(nodeId);\n    if (this._debugging) {\n      this._addedNodesDuringDebugging.delete(nodeId);\n    }\n  }\n  nodesCount() {\n    return this._nodesCount;\n  }\n  connect(src, dest, checkCycle = true) {\n    const srcId = src.graphNodeId();\n    const destId = dest.graphNodeId();\n    if (!(this.hasNode(src) && this.hasNode(dest))) {\n      console.warn(`attempt to connect non existing node ${srcId} or ${destId}`);\n      return false;\n    }\n    if (checkCycle) {\n      const sceneLoading = this._scene ? this._scene.loadingController.isLoading() : true;\n      checkCycle = !sceneLoading;\n    }\n    const graphWouldHaveCycle = checkCycle ? src.hasPredecessor(dest) : false;\n    if (graphWouldHaveCycle) {\n      return false;\n    } else {\n      this._createConnection(srcId, destId);\n      src.clearCachesWithPredecessorsAndSuccessors();\n      return true;\n    }\n  }\n  disconnect(src, dest) {\n    this._removeConnection(src.graphNodeId(), dest.graphNodeId());\n    src.clearCachesWithPredecessorsAndSuccessors();\n    dest.clearCachesWithPredecessorsAndSuccessors();\n  }\n  disconnectPredecessors(node) {\n    const predecessors = this.predecessors(node);\n    if (!predecessors) {\n      return;\n    }\n    for (const predecessor of predecessors) {\n      this.disconnect(predecessor, node);\n    }\n  }\n  disconnectSuccessors(node) {\n    const successors = this.successors(node);\n    if (!successors) {\n      return;\n    }\n    for (const successor of successors) {\n      this.disconnect(node, successor);\n    }\n  }\n  predecessorIds(id) {\n    var _a;\n    return (_a = this._predecessors.get(id)) == null ? void 0 : _a.idsArray;\n  }\n  predecessors(node) {\n    var _a;\n    return (_a = this._predecessors.get(node.graphNodeId())) == null ? void 0 : _a.nodes;\n  }\n  successorIds(id) {\n    var _a;\n    return (_a = this._successors.get(id)) == null ? void 0 : _a.idsArray;\n  }\n  successors(node) {\n    var _a;\n    return (_a = this._successors.get(node.graphNodeId())) == null ? void 0 : _a.nodes;\n  }\n  // private _allNodeIds(node: CoreGraphNode, method: TraverseCallback, target: CoreGraphNodeId[]): void {\n  // \ttarget.length = 0;\n  // \t_idsSet.clear();\n  // \t_idStack.length = 1;\n  // \t_idStack[0] = node.graphNodeId();\n  // \tconst forbiddenIds = this._forbiddenTriggerNodeIds.get(node.graphNodeId())\n  // \twhile (_idStack.length > 0) {\n  // \t\tconst currentId = _idStack.pop()!;\n  // \t\tconst ids = method(currentId);\n  // \t\tif (ids) {\n  // \t\t\tfor (const id of ids) {\n  // \t\t\t\tif (!_idsSet.has(id)) {\n  // \t\t\t\t\t_idsSet.add(id);\n  // \t\t\t\t\ttarget.push(id);\n  // \t\t\t\t\t_idStack.push(id);\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // }\n  allPredecessorIds(node, target) {\n    target.length = 0;\n    _idsSet.clear();\n    _idStack.length = 1;\n    _idStack[0] = node.graphNodeId();\n    while (_idStack.length > 0) {\n      const currentId = _idStack.pop();\n      const ids = this._boundPredecessorIds(currentId);\n      if (ids) {\n        for (const id of ids) {\n          if (!_idsSet.has(id)) {\n            _idsSet.add(id);\n            target.push(id);\n            _idStack.push(id);\n          }\n        }\n      }\n    }\n  }\n  allSuccessorIds(node, target) {\n    target.length = 0;\n    _idsSet.clear();\n    _idStack.length = 1;\n    _idStack[0] = node.graphNodeId();\n    const forbiddenIds = this._forbiddenTriggerNodeIds.get(node.graphNodeId());\n    while (_idStack.length > 0) {\n      const currentId = _idStack.pop();\n      const ids = this._boundSuccessorIds(currentId);\n      if (ids) {\n        for (const id of ids) {\n          if (!_idsSet.has(id)) {\n            _idsSet.add(id);\n            if (forbiddenIds == null || !forbiddenIds.has(id)) {\n              target.push(id);\n              _idStack.push(id);\n            }\n          }\n        }\n      }\n    }\n  }\n  // private _allNodes(node: CoreGraphNode, method: TraverseCallback, target: CoreGraphNode[]): void {\n  // \ttarget.length = 0;\n  // \t_idsSet.clear();\n  // \t_idStack.length = 1;\n  // \t_idStack[0] = node.graphNodeId();\n  // \twhile (_idStack.length > 0) {\n  // \t\tconst currentId = _idStack.pop()!;\n  // \t\tconst ids = method(currentId);\n  // \t\tif (ids) {\n  // \t\t\tfor (const id of ids) {\n  // \t\t\t\tif (!_idsSet.has(id)) {\n  // \t\t\t\t\t_idsSet.add(id);\n  // \t\t\t\t\tconst otherNode = this._nodesById.get(id);\n  // \t\t\t\t\tif (otherNode) {\n  // \t\t\t\t\t\ttarget.push(otherNode);\n  // \t\t\t\t\t}\n  // \t\t\t\t\t_idStack.push(id);\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // }\n  allPredecessors(node, target) {\n    target.length = 0;\n    _idsSet.clear();\n    _idStack.length = 1;\n    _idStack[0] = node.graphNodeId();\n    while (_idStack.length > 0) {\n      const currentId = _idStack.pop();\n      const ids = this._boundPredecessorIds(currentId);\n      if (ids) {\n        for (const id of ids) {\n          if (!_idsSet.has(id)) {\n            _idsSet.add(id);\n            const otherNode = this._nodesById.get(id);\n            if (otherNode) {\n              target.push(otherNode);\n            }\n            _idStack.push(id);\n          }\n        }\n      }\n    }\n  }\n  allSuccessors(node, target) {\n    target.length = 0;\n    _idsSet.clear();\n    _idStack.length = 1;\n    _idStack[0] = node.graphNodeId();\n    const forbiddenIds = this._forbiddenTriggerNodeIds.get(node.graphNodeId());\n    while (_idStack.length > 0) {\n      const currentId = _idStack.pop();\n      const ids = this._boundSuccessorIds(currentId);\n      if (ids) {\n        for (const id of ids) {\n          if (!_idsSet.has(id)) {\n            _idsSet.add(id);\n            if (forbiddenIds == null || !forbiddenIds.has(id)) {\n              const otherNode = this._nodesById.get(id);\n              if (otherNode) {\n                target.push(otherNode);\n              }\n              _idStack.push(id);\n            }\n          }\n        }\n      }\n    }\n  }\n  _createConnection(srcId, destId) {\n    let successorsData = this._successors.get(srcId);\n    let predecessorsData = this._predecessors.get(destId);\n    if (!successorsData) {\n      successorsData = { idsSet: /* @__PURE__ */ new Set(), idsArray: [], nodes: [] };\n      this._successors.set(srcId, successorsData);\n    }\n    if (!predecessorsData) {\n      predecessorsData = { idsSet: /* @__PURE__ */ new Set(), idsArray: [], nodes: [] };\n      this._predecessors.set(destId, predecessorsData);\n    }\n    if (!successorsData.idsSet.has(destId)) {\n      successorsData.idsSet.add(destId);\n      successorsData.idsArray.push(destId);\n      const destNode = this._nodesById.get(destId);\n      if (destNode) {\n        successorsData.nodes.push(destNode);\n      } else {\n        throw new Error(`creating connection with node not in graph ${destId}`);\n      }\n    }\n    if (!predecessorsData.idsSet.has(srcId)) {\n      predecessorsData.idsSet.add(srcId);\n      predecessorsData.idsArray.push(srcId);\n      const srcNode = this._nodesById.get(srcId);\n      if (srcNode) {\n        predecessorsData.nodes.push(srcNode);\n      } else {\n        throw new Error(`creating connection with node not in graph ${srcId}`);\n      }\n    }\n  }\n  _removeConnection(srcId, destId) {\n    const successorsData = this._successors.get(srcId);\n    if (successorsData && successorsData.idsSet.has(destId)) {\n      successorsData.idsSet.delete(destId);\n      const idIndex = successorsData.idsArray.indexOf(destId);\n      if (idIndex >= 0) {\n        successorsData.idsArray.splice(idIndex, 1);\n        successorsData.nodes.splice(idIndex, 1);\n      } else {\n        console.warn(`could not find id ${destId} in successorsData.idsArray`, successorsData.idsArray);\n      }\n    }\n    const predecessorsData = this._predecessors.get(destId);\n    if (predecessorsData && predecessorsData.idsSet.has(srcId)) {\n      predecessorsData.idsSet.delete(srcId);\n      const idIndex = predecessorsData.idsArray.indexOf(srcId);\n      if (idIndex >= 0) {\n        predecessorsData.idsArray.splice(idIndex, 1);\n        predecessorsData.nodes.splice(idIndex, 1);\n      } else {\n        console.warn(`could not find id ${srcId} in predecessorsData.idsArray`, predecessorsData.idsArray);\n      }\n    }\n  }\n  setForbiddenTriggerNodes(src, dest) {\n    var _a;\n    (_a = this._forbiddenTriggerNodeIds.get(src.graphNodeId())) == null ? void 0 : _a.clear();\n    if (isArray(dest)) {\n      for (const destNode of dest) {\n        addToSetAtEntry(this._forbiddenTriggerNodeIds, src.graphNodeId(), destNode.graphNodeId());\n      }\n    } else {\n      addToSetAtEntry(this._forbiddenTriggerNodeIds, src.graphNodeId(), dest.graphNodeId());\n    }\n  }\n  clearForbiddenTriggerNodes(src) {\n    this._forbiddenTriggerNodeIds.delete(src.graphNodeId());\n  }\n  setSelfDirtyForbidden(node, state) {\n    if (state) {\n      this._selfDirtyForbidden.add(node.graphNodeId());\n    } else {\n      this._selfDirtyForbidden.delete(node.graphNodeId());\n    }\n  }\n  selfDirtyForbidden(node) {\n    return this._selfDirtyForbidden.has(node.graphNodeId());\n  }\n}\n", "\"use strict\";\nexport class PerformanceNode {\n  constructor(_node) {\n    this._node = _node;\n    this._cooks_count = 0;\n    this._total_cook_time = 0;\n    this._total_inputs_time = 0;\n    this._total_params_time = 0;\n  }\n  update_cook_data(performance_data) {\n    this._cooks_count += 1;\n    this._total_cook_time += performance_data.cookTime;\n    this._total_inputs_time += performance_data.inputsTime;\n    this._total_params_time += performance_data.paramsTime;\n  }\n  total_time() {\n    return this._total_cook_time + this._total_inputs_time + this._total_params_time;\n  }\n  total_cook_time() {\n    return this._total_cook_time;\n  }\n  cook_time_per_iteration() {\n    if (this._cooks_count > 0) {\n      return this._total_cook_time / this._cooks_count;\n    } else {\n      return 0;\n    }\n  }\n  total_inputs_time() {\n    return this._total_inputs_time;\n  }\n  inputs_time_per_iteration() {\n    if (this._cooks_count > 0) {\n      return this._total_inputs_time / this._cooks_count;\n    } else {\n      return 0;\n    }\n  }\n  total_params_time2() {\n    return this._total_params_time;\n  }\n  params_time_per_iteration2() {\n    if (this._cooks_count > 0) {\n      return this._total_params_time / this._cooks_count;\n    } else {\n      return 0;\n    }\n  }\n  cooks_count() {\n    return this._cooks_count;\n  }\n  print_object() {\n    return {\n      fullPath: this._node.path(),\n      cooks_count: this.cooks_count(),\n      total_time: this.total_time(),\n      total_cook_time: this.total_cook_time(),\n      cook_time_per_iteration: this.cook_time_per_iteration(),\n      // cook_time_total_with_inputs: this.cook_time_total_with_inputs,\n      // cook_time_total_with_inputs_per_iteration: this.cook_time_total_with_inputs_per_iteration,\n      inputs_time_per_iteration: this.inputs_time_per_iteration(),\n      params_time_per_iteration: this.params_time_per_iteration2()\n    };\n  }\n}\n", "\"use strict\";\nimport { PerformanceNode } from \"./PerformanceNode\";\nimport { arraySortBy, arrayUniq } from \"../ArrayUtils\";\nimport { objectClone } from \"../ObjectUtils\";\nimport { Poly } from \"../../engine/Poly\";\nexport class CorePerformance {\n  constructor() {\n    this._started = false;\n    this._start_time = 0;\n    this._previous_timestamp = 0;\n    this._nodes_cook_data = {};\n    this._durations_by_name = {};\n    this._durations_count_by_name = {};\n  }\n  profile(name, method) {\n    const performance2 = Poly.performance.performanceManager();\n    const start_time = performance2.now();\n    method();\n    const total_time = performance2.now() - start_time;\n    console.log(`${name}: ${total_time}`);\n  }\n  start() {\n    if (!this._started) {\n      this.reset();\n      this._started = true;\n      const performance2 = Poly.performance.performanceManager();\n      this._start_time = performance2.now();\n      this._nodes_cook_data = {};\n      this._previous_timestamp = this._start_time;\n    }\n  }\n  stop() {\n    this.reset();\n  }\n  reset() {\n    this._started = false;\n    this._start_time = null;\n    this._durations_by_name = {};\n    this._durations_count_by_name = {};\n    this._nodes_cook_data = {};\n  }\n  started() {\n    return this._started;\n  }\n  recordNodeCookData(node, performance_data) {\n    const id = node.graphNodeId();\n    if (this._nodes_cook_data[id] == null) {\n      this._nodes_cook_data[id] = new PerformanceNode(node);\n    }\n    this._nodes_cook_data[id].update_cook_data(performance_data);\n  }\n  record(name) {\n    if (!this.started()) {\n      this.start();\n    }\n    const current_timestamp = performance.now();\n    if (this._durations_by_name[name] == null) {\n      this._durations_by_name[name] = 0;\n    }\n    this._durations_by_name[name] += current_timestamp - this._previous_timestamp;\n    if (this._durations_count_by_name[name] == null) {\n      this._durations_count_by_name[name] = 0;\n    }\n    this._durations_count_by_name[name] += 1;\n    return this._previous_timestamp = current_timestamp;\n  }\n  print() {\n    this.print_node_cook_data();\n    this.print_recordings();\n  }\n  print_node_cook_data() {\n    let performance_nodes = Object.values(this._nodes_cook_data);\n    performance_nodes = arraySortBy(performance_nodes, (performance_node) => performance_node.total_cook_time());\n    const print_objects = performance_nodes.map((performance_node) => performance_node.print_object());\n    console.log(\"--------------- NODES COOK TIME -----------\");\n    const table_entries = [];\n    const sorted_print_objects = arraySortBy(print_objects, (print_object) => -print_object.total_cook_time);\n    for (const print_object of sorted_print_objects) {\n      table_entries.push(print_object);\n    }\n    console.table(table_entries);\n    return print_objects;\n  }\n  print_recordings() {\n    const durations_by_name = objectClone(this._durations_by_name);\n    const durations_count_by_name = objectClone(this._durations_count_by_name);\n    const durations = [];\n    const names_by_duration = {};\n    for (const name of Object.keys(durations_by_name)) {\n      const duration = durations_by_name[name];\n      durations.push(duration);\n      if (names_by_duration[duration] == null) {\n        names_by_duration[duration] = [];\n      }\n      names_by_duration[duration].push(name);\n    }\n    durations.sort((a, b) => a - b);\n    const sortedDurations = [];\n    arrayUniq(durations, sortedDurations);\n    console.log(\"--------------- PERF RECORDINGS -----------\");\n    const table_entries = [];\n    for (const duration of sortedDurations) {\n      const names = names_by_duration[duration];\n      for (const name of names) {\n        const count = durations_count_by_name[name];\n        const duration_per_iteration = duration / count;\n        const entry = { duration, name, count, duration_per_iteration };\n        table_entries.push(entry);\n      }\n    }\n    console.table(table_entries);\n    return table_entries;\n  }\n}\n", "\"use strict\";\nexport class DispatchController {\n  constructor(scene) {\n    this.scene = scene;\n  }\n  setListener(eventsListener) {\n    if (!this._eventsListener) {\n      this._eventsListener = eventsListener;\n      this._runOnAddListenerCallbacks();\n    } else {\n      console.warn(\"scene already has a listener\");\n    }\n  }\n  onAddListener(callback) {\n    if (this._eventsListener) {\n      callback();\n    } else {\n      this._onAddListenerCallbacks = this._onAddListenerCallbacks || [];\n      this._onAddListenerCallbacks.push(callback);\n    }\n  }\n  _runOnAddListenerCallbacks() {\n    if (this._onAddListenerCallbacks) {\n      let callback;\n      while (callback = this._onAddListenerCallbacks.pop()) {\n        callback();\n      }\n      this._onAddListenerCallbacks = void 0;\n    }\n  }\n  dispatch(emitter, event, data) {\n    var _a;\n    (_a = this._eventsListener) == null ? void 0 : _a.processEvents(emitter, event, data);\n  }\n  emitAllowed() {\n    return this._eventsListener != null && this.scene.loadingController.loaded() && this.scene.loadingController.autoUpdating();\n  }\n  processActorEvaluator(evaluator) {\n    var _a;\n    return (_a = this._eventsListener) == null ? void 0 : _a.processActorEvaluator(evaluator);\n  }\n  actorEvaluatorDebug(options) {\n    var _a;\n    return (_a = this._eventsListener) == null ? void 0 : _a.actorEvaluatorDebug(options);\n  }\n}\n", "\"use strict\";\nexport class SceneExpressionsController {\n  constructor() {\n    this._paramsById = /* @__PURE__ */ new Map();\n  }\n  registerParam(param) {\n    this._paramsById.set(param.graphNodeId(), param);\n  }\n  deregisterParam(param) {\n    this._paramsById.delete(param.graphNodeId());\n  }\n  //\n  //\n  //\n  //\n  regenerateReferringExpressions(node) {\n    node.nameController.graphNode().setSuccessorsDirty(node);\n  }\n}\n", "\"use strict\";\nexport class SceneLifeCycleController {\n  constructor(scene) {\n    this.scene = scene;\n    this._lifecycleOnAfterCreatedAllowed = true;\n  }\n  onAfterCreatedCallbackAllowed() {\n    return this.scene.loadingController.loaded() && this._lifecycleOnAfterCreatedAllowed;\n  }\n  onAfterCreatedPrevent(callback) {\n    this._lifecycleOnAfterCreatedAllowed = false;\n    callback();\n    this._lifecycleOnAfterCreatedAllowed = true;\n  }\n}\n", "\"use strict\";\nimport { SCENE_EVENT_CREATED_EVENT_CONTEXT, SCENE_EVENT_READY_EVENT_CONTEXT } from \"./events/SceneEventsController\";\nexport class LoadingController {\n  constructor(scene) {\n    this.scene = scene;\n    this._loadingState = true;\n    this._autoUpdating = false;\n  }\n  markAsLoading() {\n    this._setLoadingState(true);\n  }\n  markAsLoaded() {\n    this.scene.missingExpressionReferencesController.resolveMissingReferences();\n    this._setLoadingState(false);\n    this._triggerLoadedEvent();\n  }\n  dispatchReadyEvent() {\n    if (globalThis.Event) {\n      this.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_READY_EVENT_CONTEXT);\n    }\n  }\n  _triggerLoadedEvent() {\n    if (globalThis.Event) {\n      this.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_CREATED_EVENT_CONTEXT);\n    }\n  }\n  _setLoadingState(state) {\n    this._loadingState = state;\n    this.setAutoUpdate(!this._loadingState);\n    this.scene.cooker.unblock();\n  }\n  isLoading() {\n    return this._loadingState;\n  }\n  loaded() {\n    return !this._loadingState;\n  }\n  autoUpdating() {\n    return this._autoUpdating;\n  }\n  setAutoUpdate(newState) {\n    if (this._autoUpdating !== newState) {\n      this._autoUpdating = newState;\n      if (this._autoUpdating) {\n        const root = this.scene.root();\n        if (root) {\n          root.processQueue();\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { CoreWalker } from \"../../../../core/Walker\";\nexport class MissingReference {\n  constructor(param, path) {\n    this.param = param;\n    this.path = path;\n  }\n  absolutePath() {\n    if (!this.param.node) {\n      return;\n    }\n    return CoreWalker.makeAbsolutePath(this.param.node, this.path);\n  }\n  matchesPath(path) {\n    return this.absolutePath() == path;\n  }\n  resolveMissingDependencies() {\n    const input = this.param.rawInputSerialized();\n    this.param.set(this.param.defaultValue());\n    this.param.set(input);\n  }\n}\n", "\"use strict\";\nimport { MissingReference } from \"./MissingReference\";\nimport { addToSetAtEntry, mapValuesToArray } from \"../../../../core/MapUtils\";\nimport { CoreWalker } from \"../../../../core/Walker\";\nimport { setToArray } from \"../../../../core/SetUtils\";\nconst _resolvedReferences = [];\nconst _missingReferences = [];\nconst _missingReferencesSet = [];\nexport class MissingReferencesController {\n  constructor(scene) {\n    this.scene = scene;\n    this.references = /* @__PURE__ */ new Map();\n    this._toIgnore = /* @__PURE__ */ new WeakMap();\n  }\n  register(param, path, jsepNode) {\n    if (jsepNode && this._toIgnore.get(jsepNode) == true) {\n      return;\n    }\n    const missingReference = new MissingReference(param, path);\n    addToSetAtEntry(this.references, param.graphNodeId(), missingReference);\n    return missingReference;\n  }\n  deregisterParam(param) {\n    this.references.delete(param.graphNodeId());\n  }\n  registerToIgnore(jsepNode) {\n    this._toIgnore.set(jsepNode, true);\n  }\n  //\n  //\n  // MISSING REFERENCES\n  //\n  //\n  resolveMissingReferences() {\n    _resolvedReferences.length = 0;\n    this.references.forEach((references) => {\n      references.forEach((reference) => {\n        if (this._isReferenceResolvable(reference)) {\n          _resolvedReferences.push(reference);\n        }\n      });\n    });\n    for (const reference of _resolvedReferences) {\n      reference.resolveMissingDependencies();\n    }\n  }\n  _isReferenceResolvable(reference) {\n    const absolutePath = reference.absolutePath();\n    if (absolutePath) {\n      const node = this.scene.node(absolutePath);\n      if (node) {\n        return true;\n      } else {\n        const paths = CoreWalker.splitParentChild(absolutePath);\n        if (paths.child) {\n          const parentNode = this.scene.node(paths.parent);\n          if (parentNode) {\n            const param = parentNode.params.get(paths.child);\n            if (param) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  // call this from node.create and node.rename\n  checkForMissingNodeReferences(node) {\n    if (!node.scene().loadingController.loaded()) {\n      return;\n    }\n    this._checkForMissingReferencesForNode(node);\n    for (const param of node.params.all) {\n      this._checkForMissingReferencesForParam(param);\n    }\n  }\n  // call this from spare params update\n  checkForMissingParamReferences(param) {\n    if (!param.scene().loadingController.loaded()) {\n      return;\n    }\n    this._checkForMissingReferencesForParam(param);\n  }\n  _checkForMissingReferencesForNode(node) {\n    const id = node.graphNodeId();\n    mapValuesToArray(this.references, _missingReferencesSet);\n    for (const missingReferenceSet of _missingReferencesSet) {\n      let matchFound = false;\n      setToArray(missingReferenceSet, _missingReferences);\n      for (const ref of _missingReferences) {\n        if (ref.matchesPath(node.path())) {\n          matchFound = true;\n          ref.resolveMissingDependencies();\n        }\n      }\n      if (matchFound) {\n        this.references.delete(id);\n      }\n    }\n  }\n  _checkForMissingReferencesForParam(param) {\n    const id = param.graphNodeId();\n    mapValuesToArray(this.references, _missingReferencesSet);\n    for (const missingReferenceSet of _missingReferencesSet) {\n      let matchFound = false;\n      setToArray(missingReferenceSet, _missingReferences);\n      for (const ref of _missingReferences) {\n        if (ref.matchesPath(param.path())) {\n          matchFound = true;\n          ref.resolveMissingDependencies();\n        }\n      }\n      if (matchFound) {\n        this.references.delete(id);\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { ref } from \"@vue/reactivity\";\nexport class GraphNodesController {\n  constructor(scene) {\n    this.scene = scene;\n    this._graphNodeIdByPath = /* @__PURE__ */ new Map();\n    this._pathByGraphNodeId = /* @__PURE__ */ new Map();\n  }\n  notifyNodePathChanged(node) {\n    var _a;\n    this._notifyGraphNodePathChanged(node);\n    const params = node.params.all;\n    for (const param of params) {\n      this.notifyParamPathChanged(param);\n    }\n    (_a = node.childrenController) == null ? void 0 : _a.traverseChildren((child) => {\n      this._notifyGraphNodePathChanged(child);\n    });\n  }\n  notifyParamPathChanged(param) {\n    this._notifyGraphNodePathChanged(param);\n  }\n  _notifyGraphNodePathChanged(node) {\n    const id = node.graphNodeId();\n    const newPath = node.path();\n    const previousPath = this._pathByGraphNodeId.get(id);\n    if (previousPath != null) {\n      const _ref2 = this._graphNodeIdByPath.get(previousPath);\n      if (_ref2) {\n        _ref2.value = null;\n      }\n    }\n    if (node.disposed()) {\n      return;\n    }\n    const _ref = this._findOrCreateRef(newPath);\n    _ref.value = id;\n    this._pathByGraphNodeId.set(id, newPath);\n  }\n  pathRef(path) {\n    return this._findOrCreateRef(path);\n  }\n  _findOrCreateRef(path) {\n    let _ref = this._graphNodeIdByPath.get(path);\n    if (!_ref) {\n      _ref = ref(null);\n      this._graphNodeIdByPath.set(path, _ref);\n    }\n    return _ref;\n  }\n}\n", "\"use strict\";\nimport { TypedNode } from \"../_Base\";\nimport { NodeContext } from \"../../poly/NodeContext\";\nexport class TypedBaseManagerNode extends TypedNode {\n  static context() {\n    return NodeContext.MANAGER;\n  }\n}\nexport class BaseManagerNodeClass extends TypedBaseManagerNode {\n}\n", "\"use strict\";\nimport { CorePath, objectsByMask } from \"../../../core/geometry/CorePath\";\nexport const ROOT_NAME = \"/\";\nexport class ObjectsController {\n  constructor(scene) {\n    this.scene = scene;\n  }\n  findObjectByMask(mask) {\n    return CorePath.findObjectByMask(mask, this.scene.threejsScene());\n  }\n  objectsByMask(mask, parent) {\n    return objectsByMask(mask, parent || this.scene.threejsScene(), false);\n  }\n  traverseObjectsWithMask(mask, callback, object, invertMask = false) {\n    CorePath.traverseObjectsWithMaskInObject(mask, object || this.scene.threejsScene(), callback, invertMask);\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { isBooleanTrue } from \"../../../../../core/Type\";\nconst CallbackOptions = {\n  computeOnDirty: false,\n  callback: (node) => {\n    RootAudioController.update(node);\n  }\n};\nexport function RootAudioParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      // audio\n      /** @param set if a audio icon is shown in the viewer to toggle sound on/off */\n      this.displayAudioIcon = ParamConfig.BOOLEAN(0, {\n        ...CallbackOptions,\n        separatorBefore: true\n      });\n      /** @param icon color */\n      this.audioIconColor = ParamConfig.COLOR([0, 0, 0], {\n        ...CallbackOptions,\n        visibleIf: { displayAudioIcon: 1 }\n      });\n      /** @param icon style properties */\n      this.audioIconStyle = ParamConfig.STRING(\n        \"position: absolute; top: 10px; right: 10px; width: 24px; height: 24px; cursor: pointer\",\n        {\n          ...CallbackOptions,\n          visibleIf: { displayAudioIcon: 1 }\n        }\n      );\n    }\n  };\n}\nexport class RootAudioController {\n  constructor(node) {\n    this.node = node;\n    /*\n     *\n     * CALLBACKS\n     *\n     */\n    this._callbacksByName = /* @__PURE__ */ new Map();\n  }\n  async toggleSound() {\n    this.audioListeners().forEach((node) => {\n      node.toggleSound();\n    });\n    this.update();\n    this._runOnToggleSoundCallbacks();\n  }\n  soundOn() {\n    const listener = this.audioListeners()[0];\n    if (listener) {\n      return isBooleanTrue(listener.pv.soundOn) || false;\n    } else {\n      return false;\n    }\n  }\n  update() {\n    this._updateViewers();\n  }\n  audioListeners() {\n    return this.node.nodesByType(\"audioListener\");\n  }\n  _updateViewers() {\n    this.node.scene().viewersRegister.traverseViewers((viewer) => {\n      viewer.audioController().update();\n    });\n  }\n  static update(node) {\n    node.audioController.update();\n  }\n  onToggleSound(callbackName, callback) {\n    if (this._callbacksByName.get(callbackName)) {\n      console.warn(`callback already registered ith name '${callbackName}'`);\n      return;\n    }\n    this._callbacksByName.set(callbackName, callback);\n  }\n  _runOnToggleSoundCallbacks() {\n    const soundOn = this.soundOn();\n    this._callbacksByName.forEach((callback) => {\n      callback(soundOn);\n    });\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { isBooleanTrue } from \"../../../../../core/BooleanValue\";\nconst CallbackOptions = {\n  computeOnDirty: false,\n  callback: (node) => {\n    SceneAutoUpdateController.update(node);\n  }\n};\nexport function SceneAutoUpdateParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param autoUpdate */\n      this.autoUpdate = ParamConfig.BOOLEAN(1, {\n        ...CallbackOptions,\n        separatorBefore: true\n      });\n    }\n  };\n}\nexport class SceneAutoUpdateController {\n  constructor(node) {\n    this.node = node;\n  }\n  async update() {\n    const scene = this.node.object;\n    const pv = this.node.pv;\n    if (isBooleanTrue(pv.autoUpdate) != scene.matrixWorldAutoUpdate) {\n      scene.matrixWorldAutoUpdate = isBooleanTrue(pv.autoUpdate);\n    }\n  }\n  static async update(node) {\n    node.sceneAutoUpdateController.update();\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { NodeContext } from \"../../../../poly/NodeContext\";\nimport { Color } from \"three\";\nimport { TypeAssert } from \"../../../../poly/Assert\";\nexport var BackgroundMode = /* @__PURE__ */ ((BackgroundMode2) => {\n  BackgroundMode2[\"NONE\"] = \"none\";\n  BackgroundMode2[\"COLOR\"] = \"color\";\n  BackgroundMode2[\"TEXTURE\"] = \"texture\";\n  return BackgroundMode2;\n})(BackgroundMode || {});\nexport const BACKGROUND_MODES = [\"none\" /* NONE */, \"color\" /* COLOR */, \"texture\" /* TEXTURE */];\nconst CallbackOptions = {\n  cook: false,\n  callback: (node) => {\n    SceneBackgroundController.update(node);\n  }\n};\nexport function SceneBackgroundParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      // background\n      /** @param set background mode (none, color or texture). Note that in order to have a transparent background, you also need to set the renderer's alpha to true. In order to do so, you may need to create a rop/WebGLRenderer node, set it alpha parameter, and assign the node to your camera. */\n      this.backgroundMode = ParamConfig.INTEGER(BACKGROUND_MODES.indexOf(\"color\" /* COLOR */), {\n        menu: {\n          entries: BACKGROUND_MODES.map((mode, i) => {\n            return { name: mode, value: i };\n          })\n        },\n        ...CallbackOptions,\n        separatorBefore: true\n      });\n      /** @param background color */\n      this.bgColor = ParamConfig.COLOR([0.01, 0.01, 0.01], {\n        visibleIf: { backgroundMode: BACKGROUND_MODES.indexOf(\"color\" /* COLOR */) },\n        ...CallbackOptions\n        // conversion: ColorConversion.SRGB_TO_LINEAR,\n      });\n      /** @param background texture */\n      this.bgTexture = ParamConfig.NODE_PATH(\"\", {\n        visibleIf: { backgroundMode: BACKGROUND_MODES.indexOf(\"texture\" /* TEXTURE */) },\n        nodeSelection: {\n          context: NodeContext.COP\n        },\n        // dependentOnFoundNode: false,\n        ...CallbackOptions\n      });\n      /** @param background blur */\n      this.bgBlur = ParamConfig.FLOAT(0, {\n        visibleIf: { backgroundMode: BACKGROUND_MODES.indexOf(\"texture\" /* TEXTURE */) },\n        range: [0, 1],\n        rangeLocked: [true, false],\n        ...CallbackOptions\n      });\n      /** @param background intensity */\n      this.bgIntensity = ParamConfig.FLOAT(1, {\n        visibleIf: { backgroundMode: BACKGROUND_MODES.indexOf(\"texture\" /* TEXTURE */) },\n        range: [0, 2],\n        rangeLocked: [true, false],\n        ...CallbackOptions\n      });\n    }\n  };\n}\nconst CALLBACK_NAME = \"SceneBackgroundController\";\nexport class SceneBackgroundController {\n  constructor(node) {\n    this.node = node;\n    this._updateBound = this.update.bind(this);\n  }\n  addHooks() {\n    const p = this.node.p;\n    const params = [p.backgroundMode, p.bgColor, p.bgTexture];\n    for (const param of params) {\n      param.addPostDirtyHook(CALLBACK_NAME, this._updateBound);\n    }\n  }\n  setMode(mode) {\n    this.node.p.backgroundMode.set(BACKGROUND_MODES.indexOf(mode));\n  }\n  backgroundMode() {\n    return BACKGROUND_MODES[this.node.pv.backgroundMode];\n  }\n  async update() {\n    const backgroundMode = this.backgroundMode();\n    switch (backgroundMode) {\n      case \"none\" /* NONE */: {\n        return this._setBackgroundNone();\n      }\n      case \"color\" /* COLOR */: {\n        return await this._setBackgroundColor();\n      }\n      case \"texture\" /* TEXTURE */: {\n        return await this._setBackgroundTexture();\n      }\n    }\n    TypeAssert.unreachable(backgroundMode);\n  }\n  _setBackgroundNone() {\n    const scene = this.node.object;\n    scene.background = null;\n  }\n  async _setBackgroundColor() {\n    const scene = this.node.object;\n    const pv = this.node.pv;\n    await this.node.p.bgColor.compute();\n    if (scene.background && scene.background instanceof Color) {\n      scene.background.copy(pv.bgColor);\n    } else {\n      scene.background = pv.bgColor;\n    }\n  }\n  async _setBackgroundTexture() {\n    const scene = this.node.object;\n    const pv = this.node.pv;\n    const node = pv.bgTexture.nodeWithContext(NodeContext.COP);\n    if (node) {\n      const container = await node.compute();\n      scene.background = container.texture();\n    } else {\n      this.node.states.error.set(\"bgTexture node not found\");\n      scene.background = null;\n    }\n    scene.backgroundBlurriness = pv.bgBlur;\n    scene.backgroundIntensity = pv.bgIntensity;\n  }\n  static update(node) {\n    node.sceneBackgroundController.update();\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { isBooleanTrue } from \"../../../../../core/BooleanValue\";\nimport { NodeContext } from \"../../../../poly/NodeContext\";\nconst CallbackOptions = {\n  cook: false,\n  callback: (node) => {\n    SceneEnvController.update(node);\n  }\n};\nexport function SceneEnvParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param toggle on to use an environment map */\n      this.useEnvironment = ParamConfig.BOOLEAN(0, {\n        ...CallbackOptions,\n        separatorBefore: true\n      });\n      /** @param environment map */\n      this.environment = ParamConfig.NODE_PATH(\"\", {\n        visibleIf: { useEnvironment: 1 },\n        nodeSelection: {\n          context: NodeContext.COP\n        },\n        // dependentOnFoundNode: false,\n        ...CallbackOptions\n      });\n    }\n  };\n}\nconst CALLBACK_NAME = \"SceneEnvController\";\nexport class SceneEnvController {\n  constructor(node) {\n    this.node = node;\n    this._updateBound = this.update.bind(this);\n  }\n  addHooks() {\n    const p = this.node.p;\n    const params = [p.useEnvironment, p.environment];\n    for (const param of params) {\n      param.addPostDirtyHook(CALLBACK_NAME, this._updateBound);\n    }\n  }\n  async update() {\n    const scene = this.node.object;\n    const pv = this.node.pv;\n    if (isBooleanTrue(pv.useEnvironment)) {\n      const node = pv.environment.nodeWithContext(NodeContext.COP);\n      if (node) {\n        node.compute().then((container) => {\n          scene.environment = container.texture();\n        });\n      } else {\n        scene.environment = null;\n        this.node.states.error.set(\"environment node not found\");\n      }\n    } else {\n      scene.environment = null;\n    }\n  }\n  static async update(node) {\n    node.sceneEnvController.update();\n  }\n}\n", "\"use strict\";\nimport { NodeParamsConfig, ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { isBooleanTrue } from \"../../../../../core/BooleanValue\";\nimport { Fog } from \"three\";\nimport { FogExp2 } from \"three\";\nconst CallbackOptions = {\n  computeOnDirty: false,\n  callback: (node) => {\n    SceneFogController.update(node);\n  }\n};\nexport var FogType = /* @__PURE__ */ ((FogType2) => {\n  FogType2[\"LINEAR\"] = \"linear\";\n  FogType2[\"EXPONENTIAL\"] = \"exponential\";\n  return FogType2;\n})(FogType || {});\nexport const FOG_TYPES = [\"linear\" /* LINEAR */, \"exponential\" /* EXPONENTIAL */];\nexport function SceneFogParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param toggle on to use fog */\n      this.useFog = ParamConfig.BOOLEAN(0, {\n        ...CallbackOptions,\n        separatorBefore: true\n      });\n      /** @param fog type */\n      this.fogType = ParamConfig.INTEGER(FOG_TYPES.indexOf(\"exponential\" /* EXPONENTIAL */), {\n        visibleIf: { useFog: 1 },\n        menu: {\n          entries: FOG_TYPES.map((mode, i) => {\n            return { name: mode, value: i };\n          })\n        },\n        ...CallbackOptions\n      });\n      /** @param fog color */\n      this.fogColor = ParamConfig.COLOR([1, 1, 1], {\n        visibleIf: { useFog: 1 },\n        ...CallbackOptions\n      });\n      /** @param fog near */\n      this.fogNear = ParamConfig.FLOAT(1, {\n        range: [0, 100],\n        rangeLocked: [true, false],\n        visibleIf: { useFog: 1, fogType: FOG_TYPES.indexOf(\"linear\" /* LINEAR */) },\n        ...CallbackOptions\n      });\n      /** @param fog far */\n      this.fogFar = ParamConfig.FLOAT(100, {\n        range: [0, 100],\n        rangeLocked: [true, false],\n        visibleIf: { useFog: 1, fogType: FOG_TYPES.indexOf(\"linear\" /* LINEAR */) },\n        ...CallbackOptions\n      });\n      /** @param fog density */\n      this.fogDensity = ParamConfig.FLOAT(25e-5, {\n        visibleIf: { useFog: 1, fogType: FOG_TYPES.indexOf(\"exponential\" /* EXPONENTIAL */) },\n        ...CallbackOptions\n      });\n    }\n  };\n}\nclass SceneFogParamsConfig extends SceneFogParamConfig(NodeParamsConfig) {\n}\nexport class SceneFogController {\n  constructor(node) {\n    this.node = node;\n  }\n  async update() {\n    const scene = this.node.object;\n    const pv = this.node.pv;\n    if (isBooleanTrue(pv.useFog)) {\n      if (pv.fogType == FOG_TYPES.indexOf(\"linear\" /* LINEAR */)) {\n        const fog = this.fog2(pv);\n        scene.fog = fog;\n        fog.color = pv.fogColor;\n        fog.near = pv.fogNear;\n        fog.far = pv.fogFar;\n      } else {\n        const fogExp2 = this.fogExp2(pv);\n        scene.fog = this.fogExp2(pv);\n        fogExp2.color = pv.fogColor;\n        fogExp2.density = pv.fogDensity;\n      }\n    } else {\n      const current_fog = scene.fog;\n      if (current_fog) {\n        scene.fog = null;\n      }\n    }\n  }\n  fog2(pv) {\n    return this._fog = this._fog || new Fog(16777215, pv.fogNear, pv.fogFar);\n  }\n  fogExp2(pv) {\n    return this._fogExp2 = this._fogExp2 || new FogExp2(16777215, pv.fogDensity);\n  }\n  static async update(node) {\n    node.sceneFogController.update();\n  }\n}\n", "\"use strict\";\nimport { CoreFeaturesController } from \"./../../../../../core/FeaturesController\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { setToArray } from \"../../../../../core/SetUtils\";\nimport { Poly } from \"../../../../Poly\";\nimport { arrayUniq, arrayCompact, arrayToSet } from \"../../../../../core/ArrayUtils\";\nclass NodeGroup {\n  constructor(nodes) {\n    this.nodes = nodes;\n    this._remaining = /* @__PURE__ */ new Set();\n    if (CoreFeaturesController.debugLoadProgress()) {\n      console.log(nodes);\n    }\n    this.totalCount = nodes.length;\n    this._processed = /* @__PURE__ */ new Set();\n    arrayToSet(nodes, this._remaining);\n  }\n  markNodeAsProcessed(node) {\n    this._processed.add(node);\n    this._remaining.delete(node);\n    if (CoreFeaturesController.debugLoadProgress()) {\n      console.log(\"markNodeAsProcessed\", node.path(), {\n        processed: setToArray(this._processed, []).map((n) => n.path()),\n        remaining: setToArray(this._remaining, []).map((n) => n.path())\n      });\n    }\n  }\n  isNodeProcessed(node) {\n    return this._processed.has(node);\n  }\n  processedCount() {\n    return this._processed.size;\n  }\n}\nexport function RootLoadProgressParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param when the scene loads, nodes that match the mask will update the progress bar as they cook */\n      this.nodesMask = ParamConfig.STRING(\"*/image* */envMap*\", {\n        cook: false,\n        separatorBefore: true,\n        objectMask: false\n        // do not use objectMask, since it is a node mask, not object\n      });\n      /** @param prints which nodes match the mask in the console */\n      this.printNodes = ParamConfig.BUTTON(null, {\n        cook: false,\n        callback: (node) => {\n          RootLoadProgressController.PARAM_CALLBACK_printResolve(node);\n        }\n        // objectMask: false // do not use objectMask, since it is a node mask, not object\n      });\n    }\n  };\n}\nexport class RootLoadProgressController {\n  constructor(node) {\n    this.node = node;\n  }\n  static async PARAM_CALLBACK_printResolve(node) {\n    const nodes = await node.loadProgress.resolvedNodes();\n    console.log(nodes);\n    const nodePaths = nodes.map((node2) => node2.path()).sort();\n    console.log(nodePaths);\n  }\n  async resolvedNodes() {\n    const param = this.node.p.nodesMask;\n    if (param.isDirty()) {\n      await param.compute();\n    }\n    const mask = param.value;\n    const scene = this.node.scene();\n    const nodes = scene.nodesController.nodesFromMask(mask || \"\");\n    const nodeDisplayNodes = await this._loadDisplayNodes();\n    const uniqNodes = [];\n    arrayUniq(nodes.concat(nodeDisplayNodes), uniqNodes);\n    return uniqNodes;\n  }\n  async _loadDisplayNodes() {\n    const scene = this.node.scene();\n    const cameraNodeTypes = Poly.camerasRegister.registeredNodeTypes();\n    const cameraNodes = cameraNodeTypes.map((type) => scene.nodesByType(type)).flat();\n    const displayNodes = this._displayNodes();\n    const nodes = cameraNodes.concat(displayNodes);\n    const cameraCreatorNode = await this.cameraCreatorNode();\n    if (cameraCreatorNode) {\n      nodes.push(cameraCreatorNode);\n    }\n    const uniqNodes = [];\n    arrayUniq(nodes, uniqNodes);\n    return uniqNodes;\n  }\n  _displayNodes() {\n    const objNodesWithDisplayNodeController = this._objectNodesWithDisplayNodeController();\n    const displayNodes = [];\n    arrayCompact(\n      objNodesWithDisplayNodeController.map((node) => node.displayNodeController.firstNonBypassedDisplayNode()),\n      displayNodes\n    );\n    return displayNodes;\n  }\n  _objectNodesWithDisplayNodeController() {\n    const scene = this.node.scene();\n    const objNodesWithDisplayNodeController = scene.root().children().filter((node) => node.displayNodeController != null).filter((node) => {\n      var _a, _b;\n      return (_b = (_a = node.flags) == null ? void 0 : _a.display) == null ? void 0 : _b.active();\n    });\n    return objNodesWithDisplayNodeController;\n  }\n  // private _getNodesWithSopGroup() {\n  // \treturn this._displayNodes().filter((node) => (node as GeoObjNode).childrenDisplayController != null);\n  // }\n  cameraCreatorNode() {\n    return this.node.mainCameraController.cameraCreatorNode();\n  }\n  _runCallback(progress, nodeTrigger) {\n    this._debug2(\"_runCallback\", { progress, nodeTrigger });\n    if (!(this._onProgressUpdateCallback && this._nodeGroups)) {\n      return;\n    }\n    this._debug2(\"_onProgressUpdateCallback\", this._nodeGroups);\n    this._onProgressUpdateCallback(progress, {\n      scene: this.node.scene(),\n      triggerNode: void 0,\n      groups: this._nodeGroups\n    });\n  }\n  _updateProgressAndRunCallback(nodeTrigger) {\n    if (!(this._onProgressUpdateCallback && this._nodeGroups)) {\n      return;\n    }\n    const totalNodesCount = this._nodeGroups.toCook.totalCount + this._nodeGroups.sopGroupToUpdate.totalCount;\n    const processedNodesCount = this._nodeGroups.toCook.processedCount() + this._nodeGroups.sopGroupToUpdate.processedCount();\n    const progress = processedNodesCount / totalNodesCount;\n    this._runCallback(progress, nodeTrigger);\n  }\n  async watchNodesProgress(callback) {\n    this._onProgressUpdateCallback = callback;\n    const resolvedNodes = await this.resolvedNodes();\n    const nodesToCook = resolvedNodes.filter((node) => node.isDirty());\n    this._debug({ nodesToCook });\n    const nodesToUpdateSopGroup = this._objectNodesWithDisplayNodeController().filter((node) => {\n      var _a;\n      const displayNode = node.displayNodeController.displayNode();\n      return displayNode != null && !((_a = displayNode.flags.bypass) == null ? void 0 : _a.active());\n    }).filter((node) => node.isDirty());\n    this._debug({ nodesToUpdateSopGroup });\n    this._nodeGroups = {\n      toCook: new NodeGroup(nodesToCook),\n      sopGroupToUpdate: new NodeGroup(nodesToUpdateSopGroup)\n    };\n    const totalNodesCount = this._nodeGroups.toCook.totalCount + this._nodeGroups.sopGroupToUpdate.totalCount;\n    this._debug({ totalNodesCount });\n    if (totalNodesCount == 0) {\n      this._runCallback(1);\n      return;\n    }\n    this._watchNodesWithSopGroup();\n    this._watchNodesToCook();\n  }\n  async _watchNodesToCook() {\n    var _a;\n    const nodesGroup = (_a = this._nodeGroups) == null ? void 0 : _a.toCook;\n    if (!nodesGroup) {\n      return;\n    }\n    const callbackName = \"RootLoadProgressController\";\n    const onNodeCooked = (node) => {\n      if (!nodesGroup.isNodeProcessed(node)) {\n        nodesGroup.markNodeAsProcessed(node);\n        this._updateProgressAndRunCallback(node);\n        node.cookController.deregisterOnCookEnd(callbackName);\n      }\n    };\n    for (const node of nodesGroup.nodes) {\n      node.cookController.registerOnCookEnd(callbackName, () => {\n        this._debug2(\"nodeToCook - completed\", node.path());\n        onNodeCooked(node);\n      });\n      this._debug2(\"nodeToCook - start\", node.path());\n      node.compute();\n    }\n  }\n  _watchNodesWithSopGroup() {\n    var _a;\n    const nodesGroup = (_a = this._nodeGroups) == null ? void 0 : _a.sopGroupToUpdate;\n    if (!nodesGroup) {\n      return;\n    }\n    const callbackName = \"RootLoadProgressController\";\n    const onNodeCooked = (node) => {\n      if (!nodesGroup.isNodeProcessed(node)) {\n        nodesGroup.markNodeAsProcessed(node);\n        this._updateProgressAndRunCallback(node);\n        const childrenDisplayController = node.childrenDisplayController;\n        childrenDisplayController.deregisterOnSopGroupUpdated(callbackName);\n      }\n    };\n    for (const node of nodesGroup.nodes) {\n      const childrenDisplayController = node.childrenDisplayController;\n      this._debug2(\"nodeWithSopGroup - watch\", node.path());\n      childrenDisplayController.registerOnSopGroupUpdated(callbackName, () => {\n        this._debug2(\"nodeWithSopGroup - completed\", node.path());\n        onNodeCooked(node);\n      });\n    }\n  }\n  static debugActive() {\n    return CoreFeaturesController.debugLoadProgress();\n  }\n  static debug(arg0) {\n    if (!this.debugActive()) {\n      return;\n    }\n    console.log(arg0);\n  }\n  static debug2(arg0, arg1) {\n    if (!this.debugActive()) {\n      return;\n    }\n    console.log(arg0, arg1);\n  }\n  _debug(arg0) {\n    RootLoadProgressController.debug(arg0);\n  }\n  _debug2(arg0, arg1) {\n    RootLoadProgressController.debug2(arg0, arg1);\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { isBooleanTrue } from \"../../../../../core/BooleanValue\";\nimport { NodeContext } from \"../../../../poly/NodeContext\";\nconst CallbackOptions = {\n  computeOnDirty: false,\n  callback: (node) => {\n    SceneMaterialOverrideController.update(node);\n  }\n};\nexport function SceneMaterialOverrideParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param toggle on to override all materials */\n      this.useOverrideMaterial = ParamConfig.BOOLEAN(0, {\n        ...CallbackOptions,\n        separatorBefore: true\n      });\n      /** @param material */\n      this.overrideMaterial = ParamConfig.NODE_PATH(\"\", {\n        visibleIf: { useOverrideMaterial: 1 },\n        nodeSelection: {\n          context: NodeContext.MAT\n        },\n        dependentOnFoundNode: false,\n        ...CallbackOptions\n      });\n    }\n  };\n}\nexport class SceneMaterialOverrideController {\n  constructor(node) {\n    this.node = node;\n  }\n  async update() {\n    const scene = this.node.object;\n    const pv = this.node.pv;\n    if (isBooleanTrue(pv.useOverrideMaterial)) {\n      const node = pv.overrideMaterial.nodeWithContext(NodeContext.MAT);\n      if (node) {\n        const container = await node.compute();\n        scene.overrideMaterial = container.material();\n      } else {\n        scene.overrideMaterial = null;\n        this.node.states.error.set(\"overrideMaterial node not found\");\n      }\n    } else {\n      scene.overrideMaterial = null;\n    }\n  }\n  static async update(node) {\n    node.sceneMaterialOverrideController.update();\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { PerspectiveCamera } from \"three\";\nimport { CoreWalker } from \"../../../../../core/Walker\";\nimport { CorePath } from \"../../../../../core/geometry/CorePath\";\nlet __defaultDummyPerspectiveCamera;\nexport function _defaultDummyPerspectiveCamera() {\n  return __defaultDummyPerspectiveCamera = __defaultDummyPerspectiveCamera || new PerspectiveCamera();\n}\nexport function RootMainCameraParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param path to the main camera object that will be used when the scene loads outside of the editor */\n      this.mainCameraPath = ParamConfig.STRING(\"\", {\n        cook: false,\n        separatorBefore: true,\n        objectMask: true\n      });\n    }\n  };\n}\nexport class RootMainCameraController {\n  constructor(node) {\n    this.node = node;\n  }\n  setCamera(object) {\n    const path = CorePath.objectPath(object);\n    this.setCameraPath(path);\n  }\n  setCameraPath(path) {\n    this.mainCameraPathParam().set(path);\n  }\n  mainCameraPathParam() {\n    return this.node.p.mainCameraPath;\n  }\n  rawCameraPath() {\n    return this.mainCameraPathParam().rawInput();\n  }\n  async cameraPath() {\n    const param = this.mainCameraPathParam();\n    if (param.isDirty()) {\n      await param.compute();\n    }\n    return param.value;\n  }\n  _cameraPathSync() {\n    const param = this.mainCameraPathParam();\n    return param.value;\n  }\n  cameraSync() {\n    const path = this._cameraPathSync();\n    const object = this.node.scene().objectsController.findObjectByMask(path);\n    return object;\n  }\n  dummyPerspectiveCamera() {\n    return _defaultDummyPerspectiveCamera();\n  }\n  cameraSyncOrDummy() {\n    return this.cameraSync();\n  }\n  async camera() {\n    const path = await this.cameraPath();\n    const object = this.node.scene().objectsController.findObjectByMask(path);\n    return object;\n  }\n  async cameraCreatorNode() {\n    const path = await this.cameraPath();\n    const elements = path.split(CoreWalker.SEPARATOR);\n    const nodeName = elements[1];\n    const objNode = this.node.node(nodeName);\n    if (objNode && elements.length != 2) {\n      const displayNodeController = objNode.displayNodeController;\n      if (displayNodeController) {\n        return objNode.displayNodeController.displayNode() || objNode;\n      }\n    }\n    return objNode;\n  }\n}\n", "\"use strict\";\nimport { TypedBaseManagerNode } from \"./_Base\";\nimport { NodeContext } from \"../../poly/NodeContext\";\nimport { NodeParamsConfig } from \"../utils/params/ParamsConfig\";\nimport { ROOT_NAME } from \"../../scene/utils/ObjectsController\";\nimport { Scene } from \"three\";\nimport { RootAudioController, RootAudioParamConfig } from \"./utils/Scene/Audio\";\nimport { SceneAutoUpdateParamConfig, SceneAutoUpdateController } from \"./utils/Scene/AutoUpdate\";\nimport { SceneBackgroundParamConfig, SceneBackgroundController } from \"./utils/Scene/Background\";\nimport { SceneEnvParamConfig, SceneEnvController } from \"./utils/Scene/Env\";\nimport { SceneFogParamConfig, SceneFogController } from \"./utils/Scene/Fog\";\nimport { RootLoadProgressParamConfig, RootLoadProgressController } from \"./utils/Scene/LoadProgress\";\nimport { SceneMaterialOverrideParamConfig, SceneMaterialOverrideController } from \"./utils/Scene/MaterialOverride\";\nimport { RootMainCameraController, RootMainCameraParamConfig } from \"./utils/Scene/RootMainCamera\";\nexport const ROOT_NODE_NAME = \"RootNode\";\nclass ObjectsManagerParamsConfig extends RootLoadProgressParamConfig(\n  RootAudioParamConfig(\n    SceneMaterialOverrideParamConfig(\n      SceneEnvParamConfig(\n        SceneFogParamConfig(\n          RootMainCameraParamConfig(SceneBackgroundParamConfig(SceneAutoUpdateParamConfig(NodeParamsConfig)))\n        )\n      )\n    )\n  )\n) {\n}\nconst ParamsConfig = new ObjectsManagerParamsConfig();\nexport class RootManagerNode extends TypedBaseManagerNode {\n  constructor() {\n    super(...arguments);\n    this.paramsConfig = ParamsConfig;\n    this._object = this._createScene();\n    this._queuedNodesById = /* @__PURE__ */ new Map();\n    // private _expected_geo_nodes: PolyDictionary<GeoObjNode> = {};\n    // private _process_queue_start: number = -1;\n    this.audioController = new RootAudioController(this);\n    this.sceneAutoUpdateController = new SceneAutoUpdateController(this);\n    this.sceneBackgroundController = new SceneBackgroundController(this);\n    this.sceneEnvController = new SceneEnvController(this);\n    this.sceneFogController = new SceneFogController(this);\n    this.loadProgress = new RootLoadProgressController(this);\n    this.sceneMaterialOverrideController = new SceneMaterialOverrideController(\n      this\n    );\n    this.mainCameraController = new RootMainCameraController(this);\n    this._childrenControllerContext = NodeContext.OBJ;\n  }\n  static type() {\n    return \"root\";\n  }\n  cook() {\n    this.cookController.endCook();\n  }\n  initializeNode() {\n    this.params.onParamsCreated(\"init controllers\", () => {\n      this.sceneEnvController.addHooks();\n      this.sceneBackgroundController.addHooks();\n    });\n    this.lifecycle.onChildAdd(this._onChildAdd.bind(this));\n    this.lifecycle.onChildRemove(this._onChildRemove.bind(this));\n  }\n  _createScene() {\n    const scene = new Scene();\n    scene.name = ROOT_NAME;\n    scene.matrixAutoUpdate = true;\n    return scene;\n  }\n  get object() {\n    return this._object;\n  }\n  createNode(nodeClass, options) {\n    return super.createNode(nodeClass, options);\n  }\n  children() {\n    return super.children();\n  }\n  nodesByType(type) {\n    return super.nodesByType(type);\n  }\n  // multiple_display_flags_allowed() {\n  // \treturn true;\n  // }\n  _updateScene() {\n    this.sceneAutoUpdateController.update();\n    this.sceneBackgroundController.update();\n    this.sceneEnvController.update();\n    this.sceneFogController.update();\n    this.sceneMaterialOverrideController.update();\n  }\n  _addToQueue(node) {\n    const id = node.graphNodeId();\n    if (!this._queuedNodesById.has(id)) {\n      this._queuedNodesById.set(id, node);\n    }\n    return node;\n  }\n  processQueue() {\n    this._updateScene();\n    const queuedNodesByPath = /* @__PURE__ */ new Map();\n    const paths = [];\n    this._queuedNodesById.forEach((node, id) => {\n      const fullPath = `_____${node.renderOrder}__${node.path()}`;\n      paths.push(fullPath);\n      queuedNodesByPath.set(fullPath, node);\n    });\n    this._queuedNodesById.clear();\n    for (const path_id of paths) {\n      const node = queuedNodesByPath.get(path_id);\n      if (node) {\n        queuedNodesByPath.delete(path_id);\n        this._addToScene(node);\n      }\n    }\n  }\n  _updateObject(node) {\n    if (!this.scene().loadingController.autoUpdating()) {\n      return this._addToQueue(node);\n    } else {\n      if (node.isDisplayed() && !node.cookController.isCooking()) {\n        node.compute();\n      }\n      return this._addToScene(node);\n    }\n  }\n  //\n  //\n  // OBJ PARENTING\n  //\n  //\n  getParentForNode(node) {\n    if (node.attachableToHierarchy()) {\n      const node_input = node.io.inputs.input(0);\n      if (node_input) {\n        return node_input.childrenGroup();\n      } else {\n        return this._object;\n      }\n    } else {\n      return null;\n    }\n  }\n  _addToScene(node) {\n    if (node.attachableToHierarchy()) {\n      const parentObject = this.getParentForNode(node);\n      if (parentObject) {\n        if (node.usedInScene()) {\n          if (node.childrenDisplayController) {\n            node.childrenDisplayController.requestDisplayNodeContainer();\n          } else {\n            node.compute();\n          }\n          node.addObjectToParent(parentObject);\n        } else {\n          node.removeObjectFromParent();\n        }\n      } else {\n      }\n    }\n  }\n  _removeFromScene(node) {\n    node.removeObjectFromParent();\n  }\n  areChildrenCooking() {\n    const children = this.children();\n    for (const child of children) {\n      if (child.cookController.isCooking() || child.isDisplayNodeCooking()) {\n        return true;\n      }\n    }\n    return false;\n  }\n  // private async expected_loading_geo_nodes_by_id() {\n  // \tconst geo_nodes = this.nodesByType('geo');\n  // \tconst node_by_id: PolyDictionary<GeoObjNode> = {};\n  // \tfor (let geo_node of geo_nodes) {\n  // \t\tconst isDisplayed = await geo_node.isDisplayed();\n  // \t\tif (isDisplayed) {\n  // \t\t\tnode_by_id[geo_node.graphNodeId()] = geo_node;\n  // \t\t}\n  // \t}\n  // \treturn node_by_id;\n  // }\n  addToParentTransform(node) {\n    this._updateObject(node);\n  }\n  removeFromParentTransform(node) {\n    this._updateObject(node);\n  }\n  _onChildAdd(node) {\n    if (node) {\n      this._updateObject(node);\n    }\n  }\n  _onChildRemove(node) {\n    if (node) {\n      this._removeFromScene(node);\n    }\n  }\n}\n", "\"use strict\";\nimport { RootManagerNode, ROOT_NODE_NAME } from \"../../nodes/manager/Root\";\nimport { stringMatchMask } from \"../../../core/String\";\nexport class NodesController {\n  constructor(scene) {\n    this.scene = scene;\n    this._nodeContextSignatures = {};\n    this._instanciatedNodesByContextAndType = /* @__PURE__ */ new Map();\n  }\n  createRoot(options) {\n    this._root = new RootManagerNode(this.scene, ROOT_NODE_NAME, options);\n    this._root.initializeBaseAndNode();\n    this._root.params.init();\n  }\n  root() {\n    return this._root;\n  }\n  _traverseNode(parent, callback) {\n    const nodes = parent.children();\n    if (!nodes || nodes.length == 0) {\n      return;\n    }\n    for (const node of nodes) {\n      if (node.childrenController) {\n        this._traverseNode(node, callback);\n      }\n      callback(node);\n    }\n  }\n  traverseNodes(callback) {\n    this._traverseNode(this._root, callback);\n  }\n  // objectsFromMask(mask: string): Object3D[] {\n  // \tconst masks = mask.split(' ');\n  // \tconst child_nodes = this.root.children() as BaseObjNodeType[];\n  // \tconst objects: Object3D[] = [];\n  // \tfor (let child_node of child_nodes) {\n  // \t\tif (CoreString.matchesOneMask(child_node.name, masks)) {\n  // \t\t\tif (child_node.object) {\n  // \t\t\t\tobjects.push(child_node.object);\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // \treturn objects;\n  // }\n  clear() {\n    var _a;\n    const children = this.root().children();\n    for (const child of children) {\n      (_a = this.root().childrenController) == null ? void 0 : _a.removeNode(child);\n    }\n  }\n  node(path) {\n    if (path === \"/\") {\n      return this.root();\n    } else {\n      return this.root().node(path);\n    }\n  }\n  allNodes() {\n    let nodes = [this.root()];\n    let current_parents = [this.root()];\n    let cmptr = 0;\n    while (current_parents.length > 0 && cmptr < 10) {\n      const children = current_parents.map((current_parent) => {\n        if (current_parent.childrenAllowed()) {\n          return current_parent.children();\n        } else {\n          return [];\n        }\n      }).flat();\n      nodes = nodes.concat(children);\n      current_parents = children;\n      cmptr += 1;\n    }\n    return nodes.flat();\n  }\n  nodesFromMask(mask) {\n    const nodes = this.allNodes();\n    const matching_nodes = [];\n    for (const node of nodes) {\n      const path = node.path();\n      if (stringMatchMask(path, mask)) {\n        matching_nodes.push(node);\n      }\n    }\n    return matching_nodes;\n  }\n  resetNodeContextSignatures() {\n    this._nodeContextSignatures = {};\n  }\n  registerNodeContextSignature(node) {\n    if (node.childrenAllowed() && node.childrenController) {\n      this._nodeContextSignatures[node.childrenController.nodeContextSignature()] = true;\n    }\n  }\n  nodeContextSignatures() {\n    return Object.keys(this._nodeContextSignatures).sort().map((s) => s.toLowerCase());\n  }\n  addToInstanciatedNode(node) {\n    const context = node.context();\n    const nodeType = node.type();\n    let mapForContext = this._instanciatedNodesByContextAndType.get(context);\n    if (!mapForContext) {\n      mapForContext = /* @__PURE__ */ new Map();\n      this._instanciatedNodesByContextAndType.set(context, mapForContext);\n    }\n    let mapForType = mapForContext.get(nodeType);\n    if (!mapForType) {\n      mapForType = /* @__PURE__ */ new Map();\n      mapForContext.set(nodeType, mapForType);\n    }\n    mapForType.set(node.graphNodeId(), node);\n  }\n  removeFromInstanciatedNode(node) {\n    const context = node.context();\n    const nodeType = node.type();\n    const mapForContext = this._instanciatedNodesByContextAndType.get(context);\n    if (!mapForContext) {\n      return;\n    }\n    const mapForType = mapForContext.get(nodeType);\n    if (!mapForType) {\n      return;\n    }\n    mapForType.delete(node.graphNodeId());\n  }\n  nodesByType(type) {\n    const list = [];\n    this._traverseNode(this.scene.root(), (node) => {\n      if (node.type() == type) {\n        list.push(node);\n      }\n    });\n    return list;\n  }\n  nodesByContextAndType(context, nodeType) {\n    const nodes = [];\n    const mapForContext = this._instanciatedNodesByContextAndType.get(context);\n    if (mapForContext) {\n      const mapForType = mapForContext.get(nodeType);\n      if (mapForType) {\n        mapForType.forEach((node) => {\n          nodes.push(node);\n        });\n      }\n    }\n    return nodes;\n  }\n  hasNodesByContextAndType(context, nodeType) {\n    const mapForContext = this._instanciatedNodesByContextAndType.get(context);\n    if (!mapForContext) {\n      return false;\n    }\n    const mapForType = mapForContext.get(nodeType);\n    if (!mapForType) {\n      return false;\n    }\n    return mapForType.size != 0;\n  }\n}\n", "\"use strict\";\nexport var PointerEventType = /* @__PURE__ */ ((PointerEventType2) => {\n  PointerEventType2[\"contextmenu\"] = \"contextmenu\";\n  PointerEventType2[\"pointerdown\"] = \"pointerdown\";\n  PointerEventType2[\"pointermove\"] = \"pointermove\";\n  PointerEventType2[\"pointerup\"] = \"pointerup\";\n  PointerEventType2[\"touchstart\"] = \"touchstart\";\n  PointerEventType2[\"touchmove\"] = \"touchmove\";\n  PointerEventType2[\"touchend\"] = \"touchend\";\n  return PointerEventType2;\n})(PointerEventType || {});\nexport const ONLY_POINTER_EVENT_TYPES = [\n  // PointerEventType.click, // no click for event/pointer\n  \"pointerdown\" /* pointerdown */,\n  \"pointermove\" /* pointermove */,\n  \"pointerup\" /* pointerup */\n];\nexport const ACCEPTED_POINTER_EVENT_TYPES = [\n  // PointerEventType.click,\n  \"contextmenu\" /* contextmenu */,\n  \"pointerdown\" /* pointerdown */,\n  \"pointermove\" /* pointermove */,\n  \"pointerup\" /* pointerup */\n];\n", "\"use strict\";\nimport { PointerEventType } from \"../../../../core/event/PointerEventType\";\nimport { CoreEventEmitter } from \"../../../../core/event/CoreEventEmitter\";\nimport { MapUtils } from \"../../../../core/MapUtils\";\nexport class BaseSceneEventsController {\n  constructor(dispatcher) {\n    this.dispatcher = dispatcher;\n    this._activeEventDatas = [];\n    this._activeEventDataTypes = /* @__PURE__ */ new Set();\n    this._eventNodes = /* @__PURE__ */ new Set();\n    this._requireCanvasEventListeners = false;\n    this._actorEvaluators = /* @__PURE__ */ new Set();\n    // protected _actorEventNames: Set<string> = new Set();\n    this._actorEvaluatorsByEventNames = /* @__PURE__ */ new Map();\n  }\n  registerEventNode(node) {\n    this._eventNodes.add(node);\n    this.updateViewerEventListeners();\n  }\n  unregisterEventNode(node) {\n    this._eventNodes.delete(node);\n    this.updateViewerEventListeners();\n  }\n  registerEvaluatorGenerator(evaluator) {\n    this._actorEvaluators.add(evaluator);\n    this._updateActorEvaluatorCache();\n    this.updateViewerEventListeners();\n  }\n  unregisterEvaluatorGenerator(evaluator) {\n    this._actorEvaluators.delete(evaluator);\n    this._updateActorEvaluatorCache();\n    this.updateViewerEventListeners();\n  }\n  _updateActorEvaluatorCache() {\n    this._actorEvaluatorsByEventNames.clear();\n    this._actorEvaluators.forEach((evaluator) => {\n      const eventDatas = evaluator.eventDatas;\n      if (eventDatas) {\n        eventDatas.forEach((eventData) => {\n          const eventName = eventData.type;\n          const emitter = eventData.emitter;\n          let mapForEventName = this._actorEvaluatorsByEventNames.get(eventName);\n          if (!mapForEventName) {\n            mapForEventName = /* @__PURE__ */ new Map();\n            this._actorEvaluatorsByEventNames.set(eventName, mapForEventName);\n          }\n          MapUtils.addToSetAtEntry(mapForEventName, emitter, evaluator);\n        });\n      }\n    });\n  }\n  // abstract accepts_event(event: Event): boolean;\n  processEvent(eventContext) {\n    var _a;\n    if (this._activeEventDatas.length == 0) {\n      return;\n    }\n    const eventType = (_a = eventContext.event) == null ? void 0 : _a.type;\n    if (eventType) {\n      if (!this._activeEventDataTypes.has(eventType)) {\n        return;\n      }\n    }\n    this._eventNodes.forEach((node) => {\n      node.processEvent(eventContext);\n    });\n  }\n  updateViewerEventListeners() {\n    this._updateActiveEventTypes();\n    if (this._requireCanvasEventListeners) {\n      this.dispatcher.scene.viewersRegister.traverseViewers((viewer) => {\n        viewer.eventsController().updateEvents(this);\n      });\n    }\n  }\n  activeEventDatas() {\n    return this._activeEventDatas;\n  }\n  _updateActiveEventTypes() {\n    const _storeEventData = (eventData) => {\n      this._activeEventDatas.push(eventData);\n      this._activeEventDataTypes.add(eventData.type);\n    };\n    const _reset = () => {\n      this._activeEventDatas.splice(0, this._activeEventDatas.length);\n      this._activeEventDataTypes.clear();\n    };\n    const _actorEventDatas = () => {\n      let eventTypeByEmitter = /* @__PURE__ */ new Map();\n      this._actorEvaluatorsByEventNames.forEach((mapForEventName, eventName) => {\n        mapForEventName.forEach((nodes, emitter) => {\n          nodes.forEach((node) => {\n            MapUtils.addToSetAtEntry(eventTypeByEmitter, emitter, eventName);\n          });\n        });\n      });\n      const eventDatas = [];\n      eventTypeByEmitter.forEach((eventNames, emitter) => {\n        for (const eventName of eventNames) {\n          const eventData = {\n            type: eventName,\n            emitter\n          };\n          eventDatas.push(eventData);\n        }\n      });\n      return eventDatas;\n    };\n    const _updateActorNodesEventData = () => {\n      const actorEventDatas = _actorEventDatas();\n      if (actorEventDatas) {\n        for (const data of actorEventDatas) {\n          _storeEventData(data);\n        }\n      }\n    };\n    const _updateEventNodesEventData = () => {\n      const activeNodeEventTypesState = /* @__PURE__ */ new Set();\n      this._eventNodes.forEach((node) => {\n        if (node.parent()) {\n          const nodeActiveEventDatas = node.activeEventDatas();\n          for (const data of nodeActiveEventDatas) {\n            activeNodeEventTypesState.add(data);\n          }\n        }\n      });\n      activeNodeEventTypesState.forEach((state, data) => {\n        _storeEventData(data);\n      });\n    };\n    _reset();\n    _storeEventData({\n      type: PointerEventType.pointermove,\n      emitter: CoreEventEmitter.DOCUMENT\n    });\n    _storeEventData({\n      type: PointerEventType.touchmove,\n      emitter: CoreEventEmitter.DOCUMENT\n    });\n    _updateActorNodesEventData();\n    _updateEventNodesEventData();\n  }\n}\nexport class BaseSceneEventsControllerClass extends BaseSceneEventsController {\n  type() {\n    return \"\";\n  }\n  acceptedEventTypes() {\n    return /* @__PURE__ */ new Set();\n  }\n}\n", "\"use strict\";\nexport var DragEventType = /* @__PURE__ */ ((DragEventType2) => {\n  DragEventType2[\"dragover\"] = \"dragover\";\n  return DragEventType2;\n})(DragEventType || {});\nexport const ACCEPTED_DRAG_EVENT_TYPES = [\"dragover\" /* dragover */];\n", "\"use strict\";\nimport { BaseSceneEventsController } from \"./_BaseEventsController\";\nimport { ACCEPTED_DRAG_EVENT_TYPES } from \"../../../../core/event/DragEventType\";\nexport class DragEventsController extends BaseSceneEventsController {\n  constructor() {\n    super(...arguments);\n    this._requireCanvasEventListeners = true;\n  }\n  type() {\n    return \"drag\";\n  }\n  acceptedEventTypes() {\n    return /* @__PURE__ */ new Set([...ACCEPTED_DRAG_EVENT_TYPES]);\n  }\n}\n", "\"use strict\";\nimport { BaseSceneEventsController } from \"./_BaseEventsController\";\nimport { ACCEPTED_KEYBOARD_EVENT_TYPES, KeyboardEventType } from \"../../../../core/event/KeyboardEventType\";\nimport { JsType } from \"../../../poly/registers/nodes/types/Js\";\nconst methodNameByEventType = {\n  [KeyboardEventType.keydown]: [JsType.ON_KEY, JsType.ON_KEYDOWN],\n  [KeyboardEventType.keypress]: [JsType.ON_KEYPRESS],\n  [KeyboardEventType.keyup]: [JsType.ON_KEY, JsType.ON_KEYUP]\n};\nexport class KeyboardEventsController extends BaseSceneEventsController {\n  constructor(dispatcher) {\n    super(dispatcher);\n    this._requireCanvasEventListeners = true;\n    this._currentEvents = [];\n    this._lastProcessedFrame = -1;\n    this.timeController = this.dispatcher.scene.timeController;\n    this.keyboardEventsController = this.dispatcher.scene.actorsManager.keyboardEventsController;\n  }\n  type() {\n    return \"keyboard\";\n  }\n  acceptedEventTypes() {\n    return new Set(ACCEPTED_KEYBOARD_EVENT_TYPES.map((n) => `${n}`));\n  }\n  currentEvents() {\n    return this._currentEvents;\n  }\n  processEvent(eventContext) {\n    super.processEvent(eventContext);\n    const { event } = eventContext;\n    if (!event) {\n      return;\n    }\n    const eventType = event.type;\n    const mapForEvent = this._actorEvaluatorsByEventNames.get(eventType);\n    if (!mapForEvent) {\n      return;\n    }\n    if (this.timeController.playing()) {\n      const frame = this.timeController.frame();\n      if (frame != this._lastProcessedFrame) {\n        this._lastProcessedFrame = frame;\n        this._currentEvents.length = 0;\n      }\n      this._currentEvents.push(event);\n    } else {\n      this._currentEvents[0] = event;\n    }\n    const eventEmitter = eventContext.emitter;\n    if (!eventEmitter) {\n      return;\n    }\n    const evaluatorGenerators = mapForEvent.get(eventEmitter);\n    if (!evaluatorGenerators) {\n      return;\n    }\n    const methodNames = methodNameByEventType[eventType];\n    if (!methodNames) {\n      return;\n    }\n    for (const methodName of methodNames) {\n      this.keyboardEventsController.addTriggeredEvaluators(evaluatorGenerators, methodName);\n    }\n  }\n}\n", "\"use strict\";\nexport var MouseEventType = /* @__PURE__ */ ((MouseEventType2) => {\n  MouseEventType2[\"auxclick\"] = \"auxclick\";\n  MouseEventType2[\"click\"] = \"click\";\n  MouseEventType2[\"contextmenu\"] = \"contextmenu\";\n  MouseEventType2[\"dblclick\"] = \"dblclick\";\n  MouseEventType2[\"mousedown\"] = \"mousedown\";\n  MouseEventType2[\"mouseenter\"] = \"mouseenter\";\n  MouseEventType2[\"mouseleave\"] = \"mouseleave\";\n  MouseEventType2[\"mousemove\"] = \"mousemove\";\n  MouseEventType2[\"mouseover\"] = \"mouseover\";\n  MouseEventType2[\"mouseout\"] = \"mouseout\";\n  MouseEventType2[\"mouseup\"] = \"mouseup\";\n  MouseEventType2[\"pointerlockchange\"] = \"pointerlockchange\";\n  MouseEventType2[\"pointerlockerror\"] = \"pointerlockerror\";\n  MouseEventType2[\"select\"] = \"select\";\n  MouseEventType2[\"wheel\"] = \"wheel\";\n  return MouseEventType2;\n})(MouseEventType || {});\nexport const ACCEPTED_MOUSE_EVENT_TYPES = [\n  \"auxclick\" /* auxclick */,\n  \"click\" /* click */,\n  \"contextmenu\" /* contextmenu */,\n  \"dblclick\" /* dblclick */,\n  \"mousedown\" /* mousedown */,\n  \"mouseenter\" /* mouseenter */,\n  \"mouseleave\" /* mouseleave */,\n  \"mousemove\" /* mousemove */,\n  \"mouseover\" /* mouseover */,\n  \"mouseout\" /* mouseout */,\n  \"mouseup\" /* mouseup */,\n  \"pointerlockchange\" /* pointerlockchange */,\n  \"pointerlockerror\" /* pointerlockerror */,\n  \"select\" /* select */,\n  \"wheel\" /* wheel */\n];\n", "\"use strict\";\nimport { BaseSceneEventsController } from \"./_BaseEventsController\";\nimport { ACCEPTED_MOUSE_EVENT_TYPES } from \"../../../../core/event/MouseEventType\";\nexport class MouseEventsController extends BaseSceneEventsController {\n  constructor() {\n    super(...arguments);\n    this._requireCanvasEventListeners = true;\n  }\n  type() {\n    return \"mouse\";\n  }\n  acceptedEventTypes() {\n    return /* @__PURE__ */ new Set([...ACCEPTED_MOUSE_EVENT_TYPES]);\n  }\n  // accepts_event(event: MouseEvent) {\n  // \treturn ACCEPTED_MOUSE_EVENT_TYPES.includes(event.type as MouseEventType);\n  // }\n}\n", "\"use strict\";\nexport var TouchEventType = /* @__PURE__ */ ((TouchEventType2) => {\n  TouchEventType2[\"touchstart\"] = \"touchstart\";\n  TouchEventType2[\"touchmove\"] = \"touchmove\";\n  TouchEventType2[\"touchend\"] = \"touchend\";\n  return TouchEventType2;\n})(TouchEventType || {});\nexport const ACCEPTED_TOUCH_EVENT_TYPES = [\n  \"touchstart\" /* touchstart */,\n  \"touchmove\" /* touchmove */,\n  \"touchend\" /* touchend */\n];\n", "\"use strict\";\nexport class CoreVector {\n  static isVector2Valid(vector) {\n    return !isNaN(vector.x) && !isNaN(vector.y) && isFinite(vector.x) && isFinite(vector.y);\n  }\n}\n", "\"use strict\";\nimport { CoreVector } from \"../../../../core/Vector\";\nclass MouseHelperClass {\n  constructor() {\n    this._rectByCanvas = /* @__PURE__ */ new Map();\n    this._resetCacheBound = this._resetCache.bind(this);\n    window.addEventListener(\"resize\", this._resetCacheBound);\n    document.addEventListener(\"scroll\", this._resetCacheBound);\n  }\n  static instance() {\n    return this._instance = this._instance || new MouseHelperClass();\n  }\n  setEventOffset(cursorPage, canvas, offset) {\n    let rect = this._rectByCanvas.get(canvas);\n    if (!rect) {\n      rect = canvas.getBoundingClientRect();\n      this._rectByCanvas.set(canvas, rect);\n    }\n    offset.offsetX = cursorPage.clientX - rect.left;\n    offset.offsetY = cursorPage.clientY - rect.top;\n  }\n  _resetCache() {\n    this._rectByCanvas.clear();\n  }\n}\nconst MouseHelper = MouseHelperClass.instance();\nconst _offset = { offsetX: 0, offsetY: 0 };\nexport class CursorHelper {\n  // protected _cursor: Vector2 = new Vector2();\n  setCursorForCPU(context, target) {\n    this.setCursor(context, target);\n    target.x = target.x * 2 - 1;\n    target.y = -target.y * 2 + 1;\n  }\n  setCursorForGPU(context, target) {\n    this.setCursor(context, target);\n    target.y = 1 - target.y;\n  }\n  setCursor(context, target) {\n    var _a;\n    const canvas = (_a = context.viewer) == null ? void 0 : _a.canvas();\n    if (!canvas) {\n      return;\n    }\n    const event = context.event;\n    if (event instanceof PointerEvent || event instanceof MouseEvent || event instanceof DragEvent) {\n      MouseHelper.setEventOffset(event, canvas, _offset);\n    }\n    if (window.TouchEvent && event instanceof TouchEvent) {\n      const touch = event.touches[0];\n      if (touch) {\n        MouseHelper.setEventOffset(touch, canvas, _offset);\n      }\n    }\n    this._updateFromCursor(canvas, target);\n  }\n  _updateFromCursor(canvas, target) {\n    if (canvas.offsetWidth <= 0 || canvas.offsetHeight <= 0) {\n      console.warn(\"zero size canvas\", canvas);\n      target.set(0, 0);\n    } else {\n      target.x = _offset.offsetX / canvas.offsetWidth;\n      target.y = _offset.offsetY / canvas.offsetHeight;\n    }\n    if (!CoreVector.isVector2Valid(target)) {\n      console.warn(\"invalid number detected\");\n      console.warn(target.toArray(), _offset.offsetX, _offset.offsetY, canvas.offsetWidth, canvas.offsetHeight);\n      return;\n    }\n  }\n  // protected _remapCursor() {}\n}\n", "\"use strict\";\nimport { BaseSceneEventsController } from \"./_BaseEventsController\";\nimport { Vector2 } from \"three\";\nimport { MouseEventType } from \"../../../../core/event/MouseEventType\";\nimport { ACCEPTED_POINTER_EVENT_TYPES, PointerEventType } from \"../../../../core/event/PointerEventType\";\nimport { TouchEventType } from \"../../../../core/event/TouchEventType\";\nimport { ref } from \"../../../../core/reactivity/CoreReactivity\";\nimport { CursorHelper } from \"../../../nodes/event/utils/CursorHelper\";\nimport { createRaycaster } from \"../../../../core/RaycastHelper\";\nimport { isTouchDevice } from \"../../../../core/UserAgent\";\nexport class PointerEventsController extends BaseSceneEventsController {\n  constructor(dispatcher) {\n    super(dispatcher);\n    this._requireCanvasEventListeners = true;\n    this._cursorHelper = new CursorHelper();\n    // init to a large value so we don't get a fake intersect\n    // if there was no interaction\n    this._cursor0 = ref(new Vector2(-1e3, -1e3));\n    // protected _camera: Camera | undefined;\n    this._raycaster0 = ref(createRaycaster());\n  }\n  type() {\n    return \"pointer\";\n  }\n  acceptedEventTypes() {\n    return /* @__PURE__ */ new Set([...ACCEPTED_POINTER_EVENT_TYPES]);\n  }\n  setRaycaster(raycaster) {\n    this._raycaster0.value = raycaster;\n  }\n  processEvent(eventContext) {\n    this._cursorHelper.setCursorForCPU(eventContext, this._cursor0.value);\n    super.processEvent(eventContext);\n    const { viewer, event } = eventContext;\n    if (!(event && viewer)) {\n      console.log(\"either event or viewer missing\");\n      return;\n    }\n    viewer.raycastersController.setCursor0(this._cursor0.value);\n    viewer.raycastersController.updateRaycasters();\n    const eventType = event.type;\n    if (eventType == PointerEventType.pointermove) {\n      return;\n    }\n    const mapForEvent = this._actorEvaluatorsByEventNames.get(eventType);\n    if (!mapForEvent) {\n      return;\n    }\n    const eventEmitter = eventContext.emitter;\n    if (!eventEmitter) {\n      return;\n    }\n    const evaluatorGenerators = mapForEvent.get(eventEmitter);\n    if (!evaluatorGenerators) {\n      return;\n    }\n    if (eventContext.event) {\n      const actorsManager = this.dispatcher.scene.actorsManager;\n      switch (eventType) {\n        case MouseEventType.mousedown: {\n          actorsManager.rayObjectIntersectionMouseClick.onMousedown(eventContext.event);\n          return;\n        }\n        case PointerEventType.pointerdown: {\n          actorsManager.rayObjectIntersectionClick.onPointerdown(eventContext.event);\n          actorsManager.rayObjectIntersectionLongPress.onPointerdown(eventContext.event);\n          actorsManager.rayObjectIntersectionPointerdown.onPointerdown(eventContext.event);\n          actorsManager.pointerdown.onPointerdown(eventContext.event);\n          actorsManager.rayObjectIntersectionSwipe.onPointerdown(eventContext.event);\n          return;\n        }\n        case PointerEventType.pointerup: {\n          if (!isTouchDevice()) {\n            actorsManager.rayObjectIntersectionPointerup.onPointerup(eventContext.event);\n            actorsManager.pointerup.onPointerup(eventContext.event);\n            return;\n          }\n        }\n        case PointerEventType.contextmenu: {\n          actorsManager.rayObjectIntersectionContextmenu.onContextmenu(eventContext.event);\n          return;\n        }\n        case TouchEventType.touchend: {\n          if (isTouchDevice()) {\n            actorsManager.rayObjectIntersectionPointerup.onPointerup(eventContext.event);\n            actorsManager.pointerup.onPointerup(eventContext.event);\n            return;\n          }\n        }\n      }\n    }\n  }\n  raycaster() {\n    return this._raycaster0;\n  }\n  cursor() {\n    return this._cursor0;\n  }\n  // camera() {\n  // \treturn this._camera;\n  // }\n  updateRaycast(options) {\n    const pointsParam = this._raycaster0.value.params.Points;\n    if (pointsParam) {\n      pointsParam.threshold = options.pointsThreshold;\n    }\n    const lineParam = this._raycaster0.value.params.Line;\n    if (lineParam) {\n      lineParam.threshold = options.lineThreshold;\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseSceneEventsController } from \"./_BaseEventsController\";\nvar WindowEventType = /* @__PURE__ */ ((WindowEventType2) => {\n  WindowEventType2[\"resize\"] = \"resize\";\n  return WindowEventType2;\n})(WindowEventType || {});\nexport const ACCEPTED_WINDOW_EVENT_TYPES = [\"resize\" /* resize */];\nexport class WindowEventsController extends BaseSceneEventsController {\n  constructor() {\n    super(...arguments);\n    this._requireCanvasEventListeners = true;\n  }\n  type() {\n    return \"window\";\n  }\n  acceptedEventTypes() {\n    return new Set(ACCEPTED_WINDOW_EVENT_TYPES.map((n) => `${n}`));\n  }\n}\n", "\"use strict\";\nimport { BaseSceneEventsController } from \"./_BaseEventsController\";\nimport { ACCEPTED_TOUCH_EVENT_TYPES } from \"../../../../core/event/TouchEventType\";\nexport class TouchEventsController extends BaseSceneEventsController {\n  constructor() {\n    super(...arguments);\n    this._requireCanvasEventListeners = true;\n  }\n  type() {\n    return \"touch\";\n  }\n  acceptedEventTypes() {\n    return /* @__PURE__ */ new Set([...ACCEPTED_TOUCH_EVENT_TYPES]);\n  }\n}\n", "\"use strict\";\nimport { NODE_CONNECTION_TRIGGERED_EVENT } from \"../../../nodes/utils/io/NodeConnection\";\nexport class SceneConnectionTriggerDispatcher {\n  // private _dispatchedConnections: Set<TypedNodeConnection<any>> = new Set();\n  constructor() {\n  }\n  dispatchTrigger(connection) {\n    var _a;\n    (_a = connection._eventDispatcher()) == null ? void 0 : _a.dispatchEvent(NODE_CONNECTION_TRIGGERED_EVENT);\n  }\n}\n", "\"use strict\";\nexport var EventInputType = /* @__PURE__ */ ((EventInputType2) => {\n  EventInputType2[\"DRAG\"] = \"drag\";\n  EventInputType2[\"KEYBOARD\"] = \"keyboard\";\n  EventInputType2[\"MOUSE\"] = \"mouse\";\n  EventInputType2[\"POINTER\"] = \"pointer\";\n  EventInputType2[\"TOUCH\"] = \"touch\";\n  EventInputType2[\"WINDOW\"] = \"window\";\n  return EventInputType2;\n})(EventInputType || {});\n", "\"use strict\";\nimport { SceneEventsController } from \"./SceneEventsController\";\nimport { DragEventsController } from \"./DragEventsController\";\nimport { KeyboardEventsController } from \"./KeyboardEventsController\";\nimport { MouseEventsController } from \"./MouseEventsController\";\nimport { PointerEventsController } from \"./PointerEventsController\";\nimport { WindowEventsController } from \"./WindowEventsController\";\nimport { TouchEventsController } from \"./TouchEventsController\";\nimport { SceneConnectionTriggerDispatcher } from \"./ConnectionTriggerDispatcher\";\nimport { EventInputType } from \"../../../poly/registers/nodes/types/Event\";\nimport { JsType } from \"../../../poly/registers/nodes/types/Js\";\nexport class SceneEventsDispatcher {\n  constructor(scene) {\n    this.scene = scene;\n    this._controllers = [];\n    this.sceneEventsController = new SceneEventsController();\n    this.pointerEventsController = this._createController(PointerEventsController);\n  }\n  registerEvaluatorGenerator(evaluatorGenerator) {\n    const controllers = this._findOrCreateControllerForEvaluator(evaluatorGenerator);\n    if (controllers) {\n      controllers.forEach((c) => c.registerEvaluatorGenerator(evaluatorGenerator));\n    }\n  }\n  unregisterEvaluatorGenerator(evaluatorGenerator) {\n    const controllers = this._findOrCreateControllerForEvaluator(evaluatorGenerator);\n    if (controllers) {\n      controllers.forEach((c) => c.unregisterEvaluatorGenerator(evaluatorGenerator));\n    }\n  }\n  // updateControllersFromJsNodes() {\n  // \tconst eventDatas = this.scene.actorsManager.eventDatas();\n  // \teventDatas.forEach((type) => {\n  // \t\tthis._findOrCreateControllerForEventInputType(type);\n  // \t});\n  // }\n  registerEventNode(node) {\n    const controller = this._findOrCreateControllerForEventNode(node);\n    if (controller) {\n      controller.registerEventNode(node);\n    }\n  }\n  unregisterEventNode(node) {\n    const controller = this._findOrCreateControllerForEventNode(node);\n    if (controller) {\n      controller.unregisterEventNode(node);\n    }\n  }\n  updateViewerEventListeners(node) {\n    const controller = this._findOrCreateControllerForEventNode(node);\n    if (controller) {\n      controller.updateViewerEventListeners();\n    }\n  }\n  traverseControllers(callback) {\n    for (const controller of this._controllers) {\n      callback(controller);\n    }\n  }\n  setRaycaster(raycaster) {\n    this.pointerEventsController.setRaycaster(raycaster);\n  }\n  // processEvent(event_content: EventContext<Event>) {\n  // \tif (!event_content.event) {\n  // \t\treturn;\n  // \t}\n  // \tfor (let controller of this._controllers) {\n  // \t\tif (controller.accepts_event(event_content.event)) {\n  // \t\t\tcontroller.processEvent(event_content);\n  // \t\t\treturn;\n  // \t\t}\n  // \t}\n  // }\n  _findOrCreateControllerForEventNode(node) {\n    return this._findOrCreateControllerForEventInputType(node.type());\n  }\n  _findOrCreateControllerForEvaluator(evaluator) {\n    const eventDatas = evaluator.eventDatas;\n    if (!eventDatas) {\n      return;\n    }\n    const controllers = /* @__PURE__ */ new Set();\n    eventDatas.forEach((eventData) => {\n      const controller = this._findOrCreateControllerForJsType(eventData.jsType);\n      if (controller) {\n        controllers.add(controller);\n      }\n    });\n    return controllers;\n  }\n  _findOrCreateControllerForEventInputType(type) {\n    switch (type) {\n      case EventInputType.KEYBOARD:\n        return this.keyboardEventsController;\n      case EventInputType.MOUSE:\n        return this.mouseEventsController;\n      case EventInputType.DRAG:\n        return this.dragEventsController;\n      case EventInputType.POINTER:\n        return this.pointerEventsController;\n      case EventInputType.TOUCH:\n        return this.touchEventsController;\n      case EventInputType.WINDOW:\n        return this.windowEventsController;\n    }\n  }\n  _findOrCreateControllerForJsType(jsType) {\n    switch (jsType) {\n      case JsType.CURSOR:\n      case JsType.ON_OBJECT_CLICK:\n      case JsType.ON_OBJECT_CONTEXT_MENU:\n      case JsType.ON_OBJECT_HOVER:\n      case JsType.ON_OBJECT_LONG_PRESS:\n      case JsType.ON_OBJECT_MOUSE_CLICK:\n      case JsType.ON_OBJECT_POINTERDOWN:\n      case JsType.ON_OBJECT_POINTERUP:\n      case JsType.ON_POINTERDOWN:\n      case JsType.ON_POINTERUP:\n      case JsType.RAY_FROM_CURSOR:\n        return this.pointerEventsController;\n      case JsType.ON_KEY:\n      case JsType.ON_KEYDOWN:\n      case JsType.ON_KEYPRESS:\n      case JsType.ON_KEYUP:\n        return this.keyboardEventsController;\n    }\n    console.warn(`no event controller defined for jsType`, jsType);\n  }\n  get keyboardEventsController() {\n    return this._keyboardEventsController = this._keyboardEventsController || this._createController(KeyboardEventsController);\n  }\n  get mouseEventsController() {\n    return this._mouseEventsController = this._mouseEventsController || this._createController(MouseEventsController);\n  }\n  get dragEventsController() {\n    return this._dragEventsController = this._dragEventsController || this._createController(DragEventsController);\n  }\n  // get pointerEventsController(): PointerEventsController {\n  // \treturn (this._pointerEventsController =\n  // \t\tthis._pointerEventsController || this._createController(PointerEventsController));\n  // }\n  get windowEventsController() {\n    return this._windowEventsController = this._windowEventsController || this._createController(WindowEventsController);\n  }\n  get touchEventsController() {\n    return this._touchEventsController = this._touchEventsController || this._createController(TouchEventsController);\n  }\n  _createController(eventConstructor) {\n    const controller = new eventConstructor(this);\n    if (!this._controllers.includes(controller)) {\n      this._controllers.push(controller);\n    }\n    return controller;\n  }\n  get connectionTriggerDispatcher() {\n    return this._connectionTriggerDispatcher = this._connectionTriggerDispatcher || new SceneConnectionTriggerDispatcher();\n  }\n}\n", "\"use strict\";\nimport { ref } from \"../../../core/reactivity/CoreReactivity\";\nexport class ScenePerformanceMonitor {\n  // private _thresholdContainers: ThresholdContainer[] = [];\n  constructor(scene) {\n    this.scene = scene;\n    this._performanceRef = ref(1);\n  }\n  // reset() {\n  // \tthis._thresholdContainers.length = 0;\n  // }\n  // addThreshold(threshold: number) {\n  // \t// check first that a similar threshold exists\n  // \tfor (let container of this._thresholdContainers) {\n  // \t\tif (container.threshold == threshold) {\n  // \t\t\t// no need to add it\n  // \t\t\treturn;\n  // \t\t}\n  // \t}\n  // \t// add if none similar found\n  // \tthis._thresholdContainers.push({\n  // \t\tthreshold,\n  // \t\tstate: ThresholdState.ABOVE,\n  // \t});\n  // }\n  ref() {\n    return this._performanceRef;\n  }\n  onPerformanceChange(perf) {\n    this._performanceRef.value = perf;\n  }\n  // performance() {\n  // \treturn this._performance;\n  // }\n}\n", "\"use strict\";\nimport { MapUtils } from \"../../../core/MapUtils\";\nimport { ParamType } from \"../../poly/ParamType\";\nimport { arrayShallowClone } from \"../../../core/ArrayUtils\";\nimport { NodePathParam } from \"../../params/NodePath\";\nconst _pathParams = [];\nconst _nodes = [];\nexport class ReferencesController {\n  constructor(scene) {\n    this.scene = scene;\n    this._referenced_nodes_by_src_param_id = /* @__PURE__ */ new Map();\n    this._referencing_params_by_referenced_node_id = /* @__PURE__ */ new Map();\n    this._referencing_params_by_all_named_node_ids = /* @__PURE__ */ new Map();\n  }\n  setReferenceFromParam(src_param, referencedGraphNode) {\n    this._referenced_nodes_by_src_param_id.set(src_param.graphNodeId(), referencedGraphNode);\n    MapUtils.pushOnArrayAtEntry(\n      this._referencing_params_by_referenced_node_id,\n      referencedGraphNode.graphNodeId(),\n      src_param\n    );\n  }\n  setNamedNodesFromParam(src_param) {\n    src_param.decomposedPath.namedNodes(_nodes);\n    for (const namedNode of _nodes) {\n      MapUtils.pushOnArrayAtEntry(\n        this._referencing_params_by_all_named_node_ids,\n        namedNode.graphNodeId(),\n        src_param\n      );\n    }\n  }\n  resetReferenceFromParam(src_param) {\n    const referenced_node = this._referenced_nodes_by_src_param_id.get(src_param.graphNodeId());\n    if (referenced_node) {\n      MapUtils.popFromArrayAtEntry(\n        this._referencing_params_by_referenced_node_id,\n        referenced_node.graphNodeId(),\n        src_param\n      );\n      src_param.decomposedPath.namedNodes(_nodes);\n      for (const namedNode of _nodes) {\n        MapUtils.popFromArrayAtEntry(\n          this._referencing_params_by_all_named_node_ids,\n          namedNode.graphNodeId(),\n          src_param\n        );\n      }\n      this._referenced_nodes_by_src_param_id.delete(src_param.graphNodeId());\n    }\n  }\n  referencing_params(node) {\n    return this._referencing_params_by_referenced_node_id.get(node.graphNodeId());\n  }\n  referencingNodes(node, target) {\n    const params = this._referencing_params_by_referenced_node_id.get(node.graphNodeId());\n    target.length = 0;\n    if (params) {\n      const node_by_node_id = /* @__PURE__ */ new Map();\n      for (const param of params) {\n        const node2 = param.node;\n        node_by_node_id.set(node2.graphNodeId(), node2);\n      }\n      node_by_node_id.forEach((node2) => {\n        target.push(node2);\n      });\n    }\n    return target;\n  }\n  nodesReferencedBy(node, target) {\n    const path_param_types = /* @__PURE__ */ new Set([ParamType.NODE_PATH]);\n    _pathParams.length = 0;\n    for (const param of node.params.all) {\n      if (path_param_types.has(param.type())) {\n        _pathParams.push(param);\n      }\n    }\n    const nodes_by_id = /* @__PURE__ */ new Map();\n    const params = [];\n    for (const pathParam of _pathParams) {\n      this._check_param(pathParam, nodes_by_id, params);\n    }\n    for (const param of params) {\n      nodes_by_id.set(param.node.graphNodeId(), param.node);\n    }\n    target.length = 0;\n    nodes_by_id.forEach((node2) => {\n      target.push(node2);\n    });\n    return target;\n  }\n  _check_param(param, nodes_by_id, params) {\n    if (param instanceof NodePathParam) {\n      const found_node = param.value.node();\n      if (found_node) {\n        nodes_by_id.set(found_node.graphNodeId(), found_node);\n      }\n      return;\n    }\n  }\n  //\n  //\n  // TRACK NAME CHANGES\n  //\n  //\n  notifyNameUpdated(node) {\n    const referencingParams = this._referencing_params_by_all_named_node_ids.get(node.graphNodeId());\n    if (referencingParams) {\n      const referencingParamsCloned = arrayShallowClone(referencingParams);\n      for (const referencingParam of referencingParamsCloned) {\n        referencingParam.notifyPathRebuildRequired(node);\n      }\n    }\n  }\n  //\n  //\n  // TRACK NODE DELETIONS/ADDITIONS\n  //\n  //\n  //\n  //\n  // TRACK PARAM DELETIONS/ADDITIONS\n  //\n  //\n  notifyParamsUpdated(node) {\n    const referencingParams = this._referencing_params_by_all_named_node_ids.get(node.graphNodeId());\n    if (referencingParams) {\n      const referencingParamsCloned = arrayShallowClone(referencingParams);\n      for (const referencingParam of referencingParamsCloned) {\n        if (referencingParam.options.isSelectingParam()) {\n          referencingParam.notifyTargetParamOwnerParamsUpdated(node);\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { Vector2 } from \"three\";\nexport var UniformName = /* @__PURE__ */ ((UniformName2) => {\n  UniformName2[\"TIME\"] = \"time\";\n  UniformName2[\"RESOLUTION\"] = \"resolution\";\n  UniformName2[\"SPOTLIGHTS_RAYMARCHING\"] = \"spotLightsRayMarching\";\n  UniformName2[\"DIRECTIONALLIGHTS_RAYMARCHING\"] = \"directionalLightsRayMarching\";\n  UniformName2[\"POINTLIGHTS_RAYMARCHING\"] = \"pointLightsRayMarching\";\n  return UniformName2;\n})(UniformName || {});\nconst GLOBAL_UNIFORMS = {\n  // [UniformName.TIME]: {value: 0},\n  [\"resolution\" /* RESOLUTION */]: { value: new Vector2(1e3, 1e3) }\n};\nexport class UniformsController {\n  constructor(scene) {\n    this.scene = scene;\n  }\n  // private _resolution: Vector2 = new Vector2(1, 1);\n  // private _resolutionDependentUniformsMap: Map<string, IUniformsWithResolutionOnly> = new Map();\n  // private _resolutionDependentUniforms: IUniformsWithResolutionOnly[] = [];\n  // add uniforms from assemblers\n  addUniforms(uniforms, options) {\n    const {\n      paramConfigs,\n      additionalTextureUniforms,\n      timeDependent,\n      resolutionDependent,\n      raymarchingLightsWorldCoordsDependent\n    } = options;\n    for (const paramConfig of paramConfigs) {\n      uniforms[paramConfig.uniformName()] = paramConfig.uniform();\n    }\n    const additionalUniformNames = Object.keys(additionalTextureUniforms);\n    for (const uniformName of additionalUniformNames) {\n      const uniformValue = additionalTextureUniforms[uniformName];\n      uniforms[uniformName] = uniformValue;\n    }\n    if (timeDependent) {\n      this.addTimeUniform(uniforms);\n    } else {\n      this.removeTimeUniform(uniforms);\n    }\n    if (resolutionDependent) {\n      this.addResolutionUniforms(uniforms);\n    } else {\n      this.removeResolutionUniform(uniforms);\n    }\n    if (raymarchingLightsWorldCoordsDependent) {\n      this.addRaymarchingUniforms(uniforms);\n    } else {\n      this.removeRaymarchingUniform(uniforms);\n    }\n  }\n  addTimeUniform(uniforms) {\n    uniforms[\"time\" /* TIME */] = this.scene.timeController.timeUniform();\n  }\n  removeTimeUniform(uniforms) {\n    delete uniforms[\"time\" /* TIME */];\n  }\n  timeUniformValue() {\n    return this.scene.timeController.timeUniform().value;\n  }\n  // public updateTime() {\n  // \tGLOBAL_UNIFORMS[UniformName.TIME].value = this.scene.time();\n  // }\n  // resolution\n  addResolutionUniforms(uniforms) {\n    uniforms[\"resolution\" /* RESOLUTION */] = GLOBAL_UNIFORMS[\"resolution\" /* RESOLUTION */];\n  }\n  removeResolutionUniform(uniforms) {\n    delete uniforms[\"resolution\" /* RESOLUTION */];\n  }\n  updateResolution(resolution, pixelRatio) {\n    GLOBAL_UNIFORMS[\"resolution\" /* RESOLUTION */].value.copy(resolution).multiplyScalar(pixelRatio);\n  }\n  // raymarching\n  addRaymarchingUniforms(uniforms) {\n    this.scene.sceneTraverser.addLightsRayMarchingUniform(uniforms);\n  }\n  removeRaymarchingUniform(uniforms) {\n    this.scene.sceneTraverser.removeLightsRayMarchingUniform(uniforms);\n  }\n  // updateResolutionDependentUniforms(uniforms: IUniformsWithResolutionOnly) {\n  // \tconst resolutionUniform = uniforms[UniformName.RESOLUTION];\n  // \tresolutionUniform.value.x = this._resolution.x; // * window.devicePixelRatio;\n  // \tresolutionUniform.value.y = this._resolution.y; // * window.devicePixelRatio;\n  // }\n}\n", "\"use strict\";\nimport { Poly } from \"../../Poly\";\nimport { CoreGraphNode } from \"../../../core/graph/CoreGraphNode\";\nexport class ViewersRegister {\n  constructor(_scene) {\n    this._scene = _scene;\n    this._viewersById = /* @__PURE__ */ new Map();\n  }\n  registerViewer(viewer) {\n    this._viewersById.set(viewer.id(), viewer);\n    this._updateCache();\n  }\n  unregisterViewer(viewer) {\n    this._viewersById.delete(viewer.id());\n    this._updateCache();\n  }\n  traverseViewers(callback) {\n    this._viewersById.forEach(callback);\n  }\n  viewer(options) {\n    const createViewerOptions = {\n      camera: options.camera,\n      canvas: options.canvas,\n      scene: this._scene\n    };\n    return Poly.camerasRegister.createViewer(createViewerOptions);\n  }\n  firstViewer() {\n    return this._firstViewer;\n  }\n  markViewerAsRendered(viewer) {\n    this._lastRenderedViewer = viewer;\n  }\n  lastRenderedViewer() {\n    return this._lastRenderedViewer;\n  }\n  _updateCache() {\n    this._firstViewer = void 0;\n    this._viewersById.forEach((viewer) => {\n      this._firstViewer = this._firstViewer || viewer;\n    });\n  }\n  graphNode() {\n    return this._graphNode = this._graphNode || this._createGraphNode();\n  }\n  _createGraphNode() {\n    const coreGraphNode = new CoreGraphNode(this._scene, \"SceneViewersRegister\");\n    return coreGraphNode;\n  }\n  // private _viewerWithResizeRequired: Set<string> = new Set();\n  markViewerAsSizeUpdated(viewer) {\n    var _a;\n    if (!this._viewersById.has(viewer.id())) {\n      return;\n    }\n    (_a = this._graphNode) == null ? void 0 : _a.setDirty();\n  }\n  // markViewerAsResizeCompleted(viewer: BaseViewerType) {\n  // \tif (!this._viewersById.has(viewer.id())) {\n  // \t\treturn;\n  // \t}\n  // \tthis._viewerWithResizeRequired.delete(viewer.id());\n  // }\n  // isViewerResizeRequired(viewer: BaseViewerType) {\n  // \treturn this._viewerWithResizeRequired.has(viewer.id());\n  // }\n  // updateViewersSize() {\n  // \tthis._viewerWithResizeRequired.forEach((viewerId) => {\n  // \t\tconst viewer = this._viewersById.get(viewerId);\n  // \t\tif (viewer) {\n  // \t\t\tviewer.updateSize();\n  // \t\t}\n  // \t});\n  // }\n}\n", "\"use strict\";\nimport { Poly } from \"../../Poly\";\nexport class SceneWebGLController {\n  constructor() {\n    this._requireWebGL2 = false;\n  }\n  requireWebGL2() {\n    return this._requireWebGL2;\n  }\n  setRequireWebGL2() {\n    if (!this._requireWebGL2) {\n      this._requireWebGL2 = true;\n      Poly.renderersController.setRequireWebGL2();\n    }\n  }\n}\n", "\"use strict\";\nimport { CoreGraphNode } from \"../../../core/graph/CoreGraphNode\";\nexport class WindowController {\n  constructor(_scene) {\n    this._scene = _scene;\n    this._onWindowResizeBound = this._onWindowResize.bind(this);\n  }\n  graphNode() {\n    return this._graphNode = this._graphNode || this._createGraphNode();\n  }\n  _createGraphNode() {\n    const coreGraphNode = new CoreGraphNode(this._scene, \"SceneWindowController\");\n    window.addEventListener(\"resize\", this._onWindowResizeBound);\n    return coreGraphNode;\n  }\n  _onWindowResize() {\n    this.graphNode().setSuccessorsDirty();\n  }\n  dispose() {\n    window.removeEventListener(\"resize\", this._onWindowResizeBound);\n  }\n}\n", "\"use strict\";\nexport class SceneAssetsController {\n  constructor() {\n    //\n    //\n    // REGISTER PARAMS\n    //\n    //\n    this._params_by_id = /* @__PURE__ */ new Map();\n    //\n    //\n    // ASSETS ROOT\n    //\n    //\n    this._assetsRoot = null;\n  }\n  register_param(param) {\n    this._params_by_id.set(param.graphNodeId(), param);\n  }\n  deregister_param(param) {\n    this._params_by_id.delete(param.graphNodeId());\n  }\n  traverse_params(callback) {\n    this._params_by_id.forEach((param, id) => {\n      callback(param);\n    });\n  }\n  root() {\n    return this._assetsRoot;\n  }\n  setRoot(url) {\n    if (url == \"\") {\n      url = null;\n    }\n    this._assetsRoot = url;\n  }\n}\n", "\"use strict\";\nexport var LightUserDataRaymarching = /* @__PURE__ */ ((LightUserDataRaymarching2) => {\n  LightUserDataRaymarching2[\"PENUMBRA\"] = \"raymarchingPenumbra\";\n  LightUserDataRaymarching2[\"SHADOW_BIAS_ANGLE\"] = \"raymarchingShadowBiasAngle\";\n  LightUserDataRaymarching2[\"SHADOW_BIAS_DISTANCE\"] = \"raymarchingShadowBiasDistance\";\n  return LightUserDataRaymarching2;\n})(LightUserDataRaymarching || {});\n", "\"use strict\";\nimport { LightUserDataRaymarching } from \"./../../../../core/lights/Common\";\nexport var LightType = /* @__PURE__ */ ((LightType2) => {\n  LightType2[LightType2[\"SPOT\"] = 0] = \"SPOT\";\n  LightType2[LightType2[\"DIRECTIONAL\"] = 1] = \"DIRECTIONAL\";\n  LightType2[LightType2[\"HEMISPHERE\"] = 2] = \"HEMISPHERE\";\n  LightType2[LightType2[\"POINT\"] = 3] = \"POINT\";\n  return LightType2;\n})(LightType || {});\nexport function getLightType(object) {\n  if (object.isSpotLight) {\n    return 0 /* SPOT */;\n  }\n  if (object.isDirectionalLight) {\n    return 1 /* DIRECTIONAL */;\n  }\n  if (object.isHemisphereLight) {\n    return 2 /* HEMISPHERE */;\n  }\n  if (object.isPointLight) {\n    return 3 /* POINT */;\n  }\n}\nexport function updateUserDataPenumbra(object, uniforms, index, defaultUniformCreate) {\n  uniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n  const uniformName = LightUserDataRaymarching.PENUMBRA;\n  if (uniforms.value[index].penumbra != object.userData[uniformName]) {\n    uniforms.value[index].penumbra = object.userData[uniformName];\n    uniforms.value.needsUpdate = true;\n  }\n}\nexport function updateUserDataShadowBias(object, uniforms, index, defaultUniformCreate) {\n  uniforms.value[index] = uniforms.value[index] || defaultUniformCreate();\n  if (uniforms.value[index].shadowBiasAngle != object.userData[LightUserDataRaymarching.SHADOW_BIAS_ANGLE]) {\n    uniforms.value[index].shadowBiasAngle = object.userData[LightUserDataRaymarching.SHADOW_BIAS_ANGLE];\n    uniforms.value.needsUpdate = true;\n  }\n  if (uniforms.value[index].shadowBiasDistance != object.userData[LightUserDataRaymarching.SHADOW_BIAS_DISTANCE]) {\n    uniforms.value[index].shadowBiasDistance = object.userData[LightUserDataRaymarching.SHADOW_BIAS_DISTANCE];\n    uniforms.value.needsUpdate = true;\n  }\n}\n", "\"use strict\";\nimport {\n  updateUserDataPenumbra,\n  updateUserDataShadowBias\n} from \"./_Base\";\nexport function _createSpotLightUniform() {\n  return {\n    penumbra: 0,\n    shadowBiasAngle: 0,\n    shadowBiasDistance: 0\n  };\n}\nlet spotLightIndex = 0;\nexport const _updateUniformsWithSpotLight = (object, spotLightsRayMarching) => {\n  updateUserDataPenumbra(object, spotLightsRayMarching, spotLightIndex, _createSpotLightUniform);\n  updateUserDataShadowBias(object, spotLightsRayMarching, spotLightIndex, _createSpotLightUniform);\n  spotLightIndex++;\n};\nexport function _resetSpotLightIndex() {\n  spotLightIndex = 0;\n}\n", "\"use strict\";\nimport {\n  updateUserDataPenumbra,\n  updateUserDataShadowBias\n} from \"./_Base\";\nexport function _createDirectionalLightUniform() {\n  return {\n    penumbra: 0,\n    shadowBiasAngle: 0,\n    shadowBiasDistance: 0\n  };\n}\nlet directionalLightIndex = 0;\nexport const _updateUniformsWithDirectionalLight = (object, directionalLightsRayMarching) => {\n  updateUserDataPenumbra(\n    object,\n    directionalLightsRayMarching,\n    directionalLightIndex,\n    _createDirectionalLightUniform\n  );\n  updateUserDataShadowBias(\n    object,\n    directionalLightsRayMarching,\n    directionalLightIndex,\n    _createDirectionalLightUniform\n  );\n  directionalLightIndex++;\n};\nexport function _resetDirectionalLightIndex() {\n  directionalLightIndex = 0;\n}\n", "\"use strict\";\nimport {\n  updateUserDataPenumbra,\n  updateUserDataShadowBias\n} from \"./_Base\";\nexport function _createPointLightUniform() {\n  return {\n    penumbra: 0,\n    shadowBiasAngle: 0,\n    shadowBiasDistance: 0\n  };\n}\nlet pointLightIndex = 0;\nexport const _updateUniformsWithPointLight = (object, pointLightsRayMarching) => {\n  updateUserDataPenumbra(object, pointLightsRayMarching, pointLightIndex, _createPointLightUniform);\n  updateUserDataShadowBias(object, pointLightsRayMarching, pointLightIndex, _createPointLightUniform);\n  pointLightIndex++;\n};\nexport function _resetPointLightIndex() {\n  pointLightIndex = 0;\n}\n", "\"use strict\";\nimport { UniformName } from \"./UniformsController\";\nimport { LightType, getLightType } from \"./raymarching/_Base\";\nimport {\n  _resetSpotLightIndex,\n  _updateUniformsWithSpotLight\n} from \"./raymarching/SpotLight\";\nimport {\n  _resetDirectionalLightIndex,\n  _updateUniformsWithDirectionalLight\n} from \"./raymarching/DirectionalLight\";\nimport {\n  _resetPointLightIndex,\n  _updateUniformsWithPointLight\n} from \"./raymarching/PointLight\";\nfunction _updateUniformsFunctionForLight(object) {\n  const lightType = getLightType(object);\n  switch (lightType) {\n    case LightType.SPOT: {\n      return _updateUniformsWithSpotLight;\n    }\n    case LightType.DIRECTIONAL: {\n      return _updateUniformsWithDirectionalLight;\n    }\n    case LightType.POINT: {\n      return _updateUniformsWithPointLight;\n    }\n  }\n}\nexport class SceneTraverserController {\n  constructor(scene) {\n    this.scene = scene;\n    this._spotLightsRayMarching = {\n      value: []\n    };\n    this._directionalLightsRayMarching = {\n      value: []\n    };\n    // private _hemisphereLightsRayMarching: HemisphereLightRayMarchingUniform = {\n    // \tvalue: [],\n    // };\n    this._pointLightsRayMarching = {\n      value: []\n    };\n    // private _areaLightsRayMarching: AreaLightRayMarchingUniform = {\n    // \tvalue: [],\n    // \t// properties: {\n    // \t// \tworldPos: {},\n    // \t// },\n    // };\n    this._updateUniformsFunctionByLight = /* @__PURE__ */ new WeakMap();\n    this._uniformsByLight = /* @__PURE__ */ new WeakMap();\n    this._onObjectTraverseBound = this._onObjectTraverse.bind(this);\n  }\n  traverseScene(scene) {\n    _resetSpotLightIndex();\n    _resetDirectionalLightIndex();\n    _resetPointLightIndex();\n    scene = scene || this.scene.threejsScene();\n    scene.traverse(this._onObjectTraverseBound);\n  }\n  _onObjectTraverse(object) {\n    let updateFunction = this._updateUniformsFunctionByLight.get(object);\n    if (!updateFunction) {\n      if (object.isLight) {\n        updateFunction = _updateUniformsFunctionForLight(object);\n        if (updateFunction) {\n          this._updateUniformsFunctionByLight.set(object, updateFunction);\n        }\n      }\n    }\n    if (!updateFunction) {\n      return updateFunction;\n    }\n    let uniforms = this._uniformsByLight.get(object);\n    if (!uniforms) {\n      uniforms = this._updateUniformsForLight(object);\n      if (uniforms) {\n        this._uniformsByLight.set(object, uniforms);\n      }\n    }\n    if (!uniforms) {\n      return;\n    }\n    updateFunction(object, uniforms);\n  }\n  _updateUniformsForLight(object) {\n    const lightType = getLightType(object);\n    switch (lightType) {\n      case LightType.SPOT: {\n        return this._spotLightsRayMarching;\n      }\n      case LightType.DIRECTIONAL: {\n        return this._directionalLightsRayMarching;\n      }\n      case LightType.POINT: {\n        return this._pointLightsRayMarching;\n      }\n    }\n  }\n  addLightsRayMarchingUniform(uniforms) {\n    uniforms[UniformName.SPOTLIGHTS_RAYMARCHING] = this._spotLightsRayMarching;\n    uniforms[UniformName.DIRECTIONALLIGHTS_RAYMARCHING] = this._directionalLightsRayMarching;\n    uniforms[UniformName.POINTLIGHTS_RAYMARCHING] = this._pointLightsRayMarching;\n  }\n  removeLightsRayMarchingUniform(uniforms) {\n    delete uniforms[UniformName.SPOTLIGHTS_RAYMARCHING];\n    delete uniforms[UniformName.DIRECTIONALLIGHTS_RAYMARCHING];\n    delete uniforms[UniformName.POINTLIGHTS_RAYMARCHING];\n  }\n}\n", "\"use strict\";\nimport { Poly } from \"../../Poly\";\nimport { WebGLRenderer } from \"three\";\nimport { arrayCopy } from \"../../../core/ArrayUtils\";\nconst _renderers = [];\nexport class SceneRenderersRegister {\n  constructor(scene) {\n    this.scene = scene;\n    this._renderersById = /* @__PURE__ */ new Map();\n    this._registerTimeByRenderer = /* @__PURE__ */ new Map();\n    this._resolves = [];\n  }\n  registerRenderer(renderer, options) {\n    let assignId = true;\n    if ((options == null ? void 0 : options.assignId) == false) {\n      assignId = false;\n    }\n    if (assignId) {\n      Poly.renderersController.assignIdToRenderer(renderer);\n    }\n    const id = Poly.renderersController.rendererId(renderer);\n    if (id == null) {\n      return;\n    }\n    this._renderersById.set(id, renderer);\n    this._registerTimeByRenderer.set(renderer, performance.now());\n    this._updateCache();\n    if (this._renderersById.size == 1) {\n      this._flushCallbacksWithRenderer(renderer);\n    }\n  }\n  dispose() {\n    this.renderers(_renderers);\n    for (const renderer of _renderers) {\n      this.deregisterRenderer(renderer);\n    }\n  }\n  deregisterRenderer(renderer) {\n    const id = Poly.renderersController.rendererId(renderer);\n    if (id == null) {\n      return;\n    }\n    this._renderersById.delete(id);\n    renderer.dispose();\n    this._updateCache();\n  }\n  lastRegisteredRenderer() {\n    return this._lastRegisteredRenderer;\n  }\n  renderers(target) {\n    this._renderersById.forEach((renderer) => {\n      target.push(renderer);\n    });\n    return target;\n  }\n  _updateCache() {\n    this._lastRegisteredRenderer = void 0;\n    this._registerTimeByRenderer.forEach((registerTime, renderer) => {\n      if (this._lastRegisteredRenderer == void 0) {\n        this._lastRegisteredRenderer = renderer;\n      } else {\n        const lastRegisterTime = this._registerTimeByRenderer.get(this._lastRegisteredRenderer);\n        if (lastRegisterTime != null) {\n          if (registerTime > lastRegisterTime) {\n            this._lastRegisteredRenderer = renderer;\n          }\n        }\n      }\n    });\n  }\n  _flushCallbacksWithRenderer(renderer) {\n    const callbacks = [];\n    arrayCopy(this._resolves, callbacks);\n    this._resolves.length = 0;\n    for (const c of callbacks) {\n      c(renderer);\n    }\n  }\n  async waitForAbstractRenderer() {\n    if (this._lastRegisteredRenderer) {\n      return this._lastRegisteredRenderer;\n    } else {\n      return new Promise((resolve, reject) => {\n        this._resolves.push(resolve);\n      });\n    }\n  }\n  async waitForRenderer() {\n    let renderer = await this.waitForAbstractRenderer();\n    if (renderer instanceof WebGLRenderer) {\n      return renderer;\n    }\n    renderer = renderer.webGLRenderer;\n    if (renderer && renderer instanceof WebGLRenderer) {\n      return renderer;\n    }\n    if (renderer) {\n      if (!(renderer instanceof WebGLRenderer)) {\n        console.log(\"unexpected renderer:\", { renderer });\n      }\n    }\n  }\n}\n", "\"use strict\";\nexport class SceneWebXRController {\n  constructor(scene) {\n    this.scene = scene;\n    /**\n     *\n     * WebXR\n     *\n     */\n    this._activeXRController = null;\n    this._activeARController = null;\n    this._activeVRController = null;\n  }\n  _setActiveXRController(controller) {\n    this._activeXRController = controller;\n  }\n  activeXRController() {\n    return this._activeXRController;\n  }\n  setARControllerCreationFunction(func) {\n    this._ARControllerCreateFunction = func;\n  }\n  ARControllerCreateFunction() {\n    return this._ARControllerCreateFunction;\n  }\n  setActiveARController(ARController) {\n    this._activeARController = ARController;\n    this._setActiveXRController(ARController);\n  }\n  activeARController() {\n    return this._activeARController;\n  }\n  setVRControllerCreationFunction(func) {\n    this._VRControllerCreateFunction = func;\n  }\n  VRControllerCreateFunction() {\n    return this._VRControllerCreateFunction;\n  }\n  setActiveVRController(VRController) {\n    this._activeVRController = VRController;\n    this._setActiveXRController(VRController);\n  }\n  activeVRController() {\n    return this._activeVRController;\n  }\n}\n", "\"use strict\";\nimport { ActorsManager } from \"./utils/ActorsManager\";\nimport { SceneCamerasController } from \"./utils/SceneCamerasController\";\nimport { Cooker } from \"./utils/Cooker\";\nimport { SceneCookController } from \"./utils/CookController\";\nimport { CoreGraph } from \"../../core/graph/CoreGraph\";\nimport { CorePerformance } from \"../../core/performance/CorePerformance\";\nimport { DispatchController } from \"./utils/DispatchController\";\nimport { SceneExpressionsController } from \"./utils/SceneExpressionsController\";\nimport { SceneLifeCycleController } from \"./utils/LifeCycleController\";\nimport { LoadingController } from \"./utils/LoadingController\";\nimport { MissingReferencesController } from \"./utils/missingReferences/MissingReferencesController\";\nimport { GraphNodesController } from \"./utils/GraphNodesController\";\nimport { NodesController } from \"./utils/NodesController\";\nimport { SceneEventsDispatcher } from \"./utils/events/EventsDispatcher\";\nimport { ObjectsController } from \"./utils/ObjectsController\";\nimport { ScenePerformanceMonitor } from \"./utils/ScenePerformanceMonitor\";\nimport { ReferencesController } from \"./utils/ReferencesController\";\nimport {\n  TimeController,\n  TIME_CONTROLLER_UPDATE_TIME_OPTIONS_DEFAULT\n} from \"./utils/TimeController\";\nimport { UniformsController } from \"./utils/UniformsController\";\nimport { ViewersRegister } from \"./utils/ViewersRegister\";\nimport { SceneWebGLController } from \"./utils/WebGLController\";\nimport { WindowController } from \"./utils/WindowController\";\nimport { SceneAssetsController } from \"./utils/AssetsController\";\nimport { SceneTraverserController } from \"./utils/SceneTraverser\";\nimport { CoreString } from \"../../core/String\";\nimport { SceneRenderersRegister } from \"./utils/SceneRenderersRegister\";\nimport { Poly } from \"../Poly\";\nimport { SceneWebXRController } from \"./utils/WebXREventsController\";\nexport class PolyScene {\n  //\n  //\n  // constructor\n  //\n  //\n  constructor(options) {\n    this._cooker = new Cooker(this);\n    this.cookController = new SceneCookController();\n    this._graph = new CoreGraph();\n    this.lifecycleController = new SceneLifeCycleController(this);\n    this.loadingController = new LoadingController(this);\n    this.missingExpressionReferencesController = new MissingReferencesController(this);\n    this.expressionsController = new SceneExpressionsController();\n    this.nodesController = new NodesController(this);\n    this.graphNodesController = new GraphNodesController(this);\n    this.renderersRegister = new SceneRenderersRegister(this);\n    this._objectsController = new ObjectsController(this);\n    this._referencesController = new ReferencesController(this);\n    this.perfMonitor = new ScenePerformanceMonitor(this);\n    this.sceneTraverser = new SceneTraverserController(this);\n    //\n    //\n    // time\n    //\n    //\n    this.timeController = new TimeController(this);\n    this._disposed = false;\n    this._graph.setScene(this);\n    this._paramSerializerClass = options == null ? void 0 : options.paramsSerializerClass;\n    this.nodesController.createRoot(options == null ? void 0 : options.root);\n    Poly.scenesRegister.registerScene(this);\n  }\n  /**\n   * Returns the THREE.Scene.\n   *\n   * @remarks\n   *\n   * Read more about how to use a THREE.Scene on [THREE's documentation](https://threejs.org/docs/?q=scene#api/en/scenes/Scene)\n   *\n   */\n  threejsScene() {\n    return this.root().object;\n  }\n  setUuid(uuid) {\n    return this._uuid = uuid;\n  }\n  get uuid() {\n    return this._uuid;\n  }\n  setName(newName) {\n    return this._name = PolyScene.sanitizeName(newName);\n  }\n  static sanitizeName(newName) {\n    newName = CoreString.sanitizeName(newName);\n    newName = newName.toLowerCase();\n    return newName;\n  }\n  name() {\n    return this._name;\n  }\n  get camerasController() {\n    return this._camerasController = this._camerasController || new SceneCamerasController(this);\n  }\n  /**\n   * Returns the camera object that has been set as main\n   *\n   */\n  mainCamera() {\n    return this.camerasController.mainCamera();\n  }\n  get cooker() {\n    return this._cooker;\n  }\n  get actorsManager() {\n    return this._actorsManager = this._actorsManager || new ActorsManager(this);\n  }\n  get assets() {\n    return this._assetsController = this._assetsController || new SceneAssetsController();\n  }\n  /**\n   * Returns a promise to wait for all nodes to have cooked when loading a scene.\n   *\n   */\n  async waitForCooksCompleted() {\n    return await this.cookController.waitForCooksCompleted();\n  }\n  get dispatchController() {\n    return this._dispatchController = this._dispatchController || new DispatchController(this);\n  }\n  get eventsDispatcher() {\n    return this._eventsDispatcher = this._eventsDispatcher || new SceneEventsDispatcher(this);\n  }\n  get webXR() {\n    return this._webXRController = this._webXRController || new SceneWebXRController(this);\n  }\n  /**\n   * When using Polygonjs viewers, a raycaster is created to use mouse events and detect if there are any object under the cursor.\n   * But if no viewer is created, such as when [importing a scene in react three fiber](/docs/integrations/react_three_fiber),\n   * It is then useful to give a raycaster.\n   *\n   */\n  setRaycaster(raycaster) {\n    this.eventsDispatcher.setRaycaster(raycaster);\n  }\n  get graph() {\n    return this._graph;\n  }\n  createNode(nodeClass, options) {\n    return this.root().createNode(nodeClass, options);\n  }\n  /**\n   * returns all nodes with a given type\n   *\n   * - polyScene.nodesByType('box'): returns all BoxSopNodes\n   */\n  nodesByType(type) {\n    return this.nodesController.nodesByType(type);\n  }\n  get objectsController() {\n    return this._objectsController;\n  }\n  /**\n   * returns a THREE.Object3D whose name matches the mask\n   *\n   */\n  findObjectByMask(mask) {\n    return this._objectsController.findObjectByMask(mask);\n  }\n  /**\n   * returns a list THREE.Object3Ds whose names matche the mask\n   *\n   */\n  objectsByMask(mask, parent) {\n    return this._objectsController.objectsByMask(mask, parent);\n  }\n  get referencesController() {\n    return this._referencesController;\n  }\n  get performance() {\n    return this._performance = this._performance || new CorePerformance();\n  }\n  get viewersRegister() {\n    return this._viewersRegister = this._viewersRegister || new ViewersRegister(this);\n  }\n  /**\n   * updates Polygonjs scene internals. This is called automatically when using Polygonjs viewers,\n   * but you would need to call it yourself in the render loop when adding your scene to threejs or react-three-fiber.\n   * See [https://polygonjs.com/docs/integrations](https://polygonjs.com/docs/integrations)\n   *\n   */\n  update(delta, state) {\n    this.timeController.setDelta(delta);\n    this.timeController.incrementTimeIfPlaying(TIME_CONTROLLER_UPDATE_TIME_OPTIONS_DEFAULT);\n    this.sceneTraverser.traverseScene(state == null ? void 0 : state.scene);\n  }\n  /**\n   * sets the current frame\n   *\n   */\n  setFrame(frame) {\n    this.timeController.setFrame(frame);\n  }\n  setFrameToStart() {\n    this.timeController.setFrameToStart();\n  }\n  /**\n   * returns the current frame\n   *\n   */\n  frame() {\n    return this.timeController.frame();\n  }\n  /**\n   * returns the current time\n   *\n   */\n  time() {\n    return this.timeController.time();\n  }\n  maxFrame() {\n    return this.timeController.maxFrame();\n  }\n  /**\n   * starts playing the scene\n   *\n   */\n  play() {\n    this.timeController.play();\n  }\n  /**\n   * pauses the scene\n   *\n   */\n  pause() {\n    this.timeController.pause();\n  }\n  /**\n   * increments the time\n   *\n   */\n  incrementTime(options) {\n    this.timeController.incrementTime(options);\n  }\n  /**\n   * increments the time if the scene is playing()\n   *\n   */\n  incrementTimeIfPlaying(options) {\n    this.timeController.incrementTimeIfPlaying(options);\n  }\n  /**\n   * registers a renderer\n   *\n   */\n  registerRenderer(renderer, options) {\n    return this.renderersRegister.registerRenderer(renderer, options);\n  }\n  get uniformsController() {\n    return this._uniformsController = this._uniformsController || new UniformsController(this);\n  }\n  get webglController() {\n    return this._webglController = this._webglController || new SceneWebGLController();\n  }\n  get windowController() {\n    return this._windowController = this._windowController || new WindowController(this);\n  }\n  dispose() {\n    if (this._disposed == true) {\n      return;\n    }\n    this._disposed = true;\n    this.batchUpdates(() => {\n      this.nodesController.traverseNodes((node) => {\n        var _a;\n        (_a = node.parent()) == null ? void 0 : _a.removeNode(node);\n      });\n    });\n    if (this._windowController) {\n      this._windowController.dispose();\n      this._windowController = void 0;\n    }\n    this.timeController.dispose();\n    this.renderersRegister.dispose();\n    this.camerasController.dispose();\n    this.root().dispose();\n    Poly.scenesRegister.deregisterScene(this);\n  }\n  disposed() {\n    return this._disposed;\n  }\n  paramSerializerClass() {\n    return this._paramSerializerClass;\n  }\n  //\n  //\n  // cooker\n  //\n  //\n  /**\n   * batchUpdates can be useful to set multiple parameter values without triggering a recook for each update.\n   *\n   */\n  async batchUpdates(callback) {\n    this._cooker.block();\n    await callback();\n    this._cooker.unblock();\n  }\n  //\n  //\n  // nodes\n  //\n  //\n  /**\n   * returns a node based on its path\n   *\n   * - polyScene.node('/geo1')\n   *\n   */\n  node(path) {\n    return this.nodesController.node(path);\n  }\n  /**\n   * returns the root node\n   *\n   */\n  root() {\n    return this.nodesController.root();\n  }\n  /**\n   * traverse all nodes and runs a callback for each\n   *\n   */\n  traverseNodes(callback) {\n    this.nodesController.traverseNodes(callback);\n  }\n  //\n  //\n  // CALLBACKS\n  //\n  //\n  /**\n   * registers a BeforeTick callback. BeforeTick callbacks are run before updating the frame (and therefore before any time dependent node has changed)\n   *\n   */\n  registerOnBeforeTick(callbackName, callback) {\n    this.timeController.registerOnBeforeTick(callbackName, callback);\n  }\n  /**\n   * unregisters BeforeTick callback\n   *\n   */\n  unRegisterOnBeforeTick(callbackName) {\n    this.timeController.unRegisterOnBeforeTick(callbackName);\n  }\n  /**\n   * Returns the list registered BeforeTick callback names\n   *\n   */\n  registeredBeforeTickCallbacks() {\n    return this.timeController.registeredBeforeTickCallbacks();\n  }\n  /**\n   * return true if a callback is registered with that name\n   *\n   */\n  hasBeforeTickCallback(callbackName) {\n    return this.timeController.hasBeforeTickCallback(callbackName);\n  }\n  /**\n   * registers AfterTick callback. AfterTick callbacks are run after updating the frame (and therefore after any time dependent node has changed)\n   *\n   */\n  registerOnAfterTick(callbackName, callback) {\n    this.timeController.registerOnAfterTick(callbackName, callback);\n  }\n  /**\n   * unregisters AfterTick callback\n   *\n   */\n  unRegisterOnAfterTick(callbackName) {\n    this.timeController.unRegisterOnAfterTick(callbackName);\n  }\n  /**\n   * Returns the list registered AfterTick callback names\n   *\n   */\n  registeredAfterTickCallbacks() {\n    return this.timeController.registeredAfterTickCallbacks();\n  }\n  /**\n   * return true if a callback is registered with that name\n   *\n   */\n  hasAfterTickCallback(callbackName) {\n    return this.timeController.hasAfterTickCallback(callbackName);\n  }\n}\n", "\"use strict\";\nimport { Vector2 } from \"three\";\nimport { Poly } from \"../../../Poly\";\nimport { CoreType, isString } from \"../../../../core/Type\";\nconst COMPLEX_PARAM_DATA_KEYS = [\"overriden_options\", \"type\"];\nexport class NodeJsonImporter {\n  constructor(_node, dispatcher, nodesImporter) {\n    this._node = _node;\n    this.dispatcher = dispatcher;\n    this.nodesImporter = nodesImporter;\n  }\n  process_data(scene_importer, data) {\n    if (this._node.sceneReadonly()) {\n      scene_importer.report.markAsLoadedWithoutAssemblers();\n    }\n    this.set_connection_points(data[\"connection_points\"]);\n    if (this._node.childrenAllowed()) {\n      this.create_nodes(scene_importer, data[\"nodes\"], data);\n    }\n    if (this._node.io.inputs.overrideClonedStateAllowed()) {\n      const override = data[\"cloned_state_overriden\"];\n      if (override) {\n        this._node.io.inputs.overrideClonedState(override);\n      }\n    }\n    this.set_flags(data);\n    this.set_params(data);\n    if (data.persisted_config) {\n      const shadersData = scene_importer.shadersData();\n      const jsFunctionBodiesData = scene_importer.jsFunctionBodiesData();\n      if (shadersData) {\n        let shaders = shadersData[this._node.path()];\n        if (!shaders) {\n          shaders = {};\n        }\n        data.persisted_config.shaders = shaders;\n      }\n      if (jsFunctionBodiesData) {\n        const jsFunctionBodyData = jsFunctionBodiesData[this._node.path()];\n        if (jsFunctionBodyData) {\n          if (isString(jsFunctionBodyData)) {\n            data.persisted_config.functionBody = jsFunctionBodyData;\n          } else {\n            data.persisted_config.functionBody = jsFunctionBodyData;\n          }\n        }\n      }\n      this.set_persisted_config(data.persisted_config);\n    }\n    this.setCustomData(data);\n  }\n  process_inputs_data(scene_importer, data) {\n    const maxInputsCount = data.maxInputsCount;\n    if (maxInputsCount != null) {\n      const minCount = this._node.io.inputs.minCount();\n      this._node.io.inputs.setCount(minCount, maxInputsCount);\n    }\n    try {\n      this.setInputs(data[\"inputs\"]);\n    } catch (err) {\n      const message = err.message || `failed connecting inputs of node ${data[\"type\"]}`;\n      scene_importer.report.addWarning(message);\n      console.warn(data[\"inputs\"]);\n    }\n  }\n  process_ui_data(scene_importer, data) {\n    if (!data) {\n      return;\n    }\n    if (Poly.playerMode()) {\n      return;\n    }\n    const ui_data = this._node.uiData;\n    const pos = data[\"pos\"];\n    if (pos) {\n      const vector = new Vector2().fromArray(pos);\n      ui_data.setPosition(vector);\n    }\n    const comment = data[\"comment\"];\n    if (comment) {\n      ui_data.setComment(comment);\n    }\n    const selection = data[\"selection\"];\n    if (selection) {\n      this.set_selection(selection);\n    }\n    if (this._node.childrenAllowed()) {\n      const nodesData = data[\"nodes\"];\n      if (nodesData) {\n        this.processNodesUiData(scene_importer, nodesData);\n      }\n    }\n  }\n  create_nodes(scene_importer, data, nodeData) {\n    if (!data) {\n      return;\n    }\n    this.nodesImporter.process_data(scene_importer, data);\n  }\n  set_selection(data) {\n    if (this._node.childrenAllowed() && this._node.childrenController) {\n      if (data && data.length > 0) {\n        const selected_nodes = [];\n        data.forEach((node_name) => {\n          const node = this._node.node(node_name);\n          if (node) {\n            selected_nodes.push(node);\n          }\n        });\n        this._node.childrenController.selection.set(selected_nodes);\n      }\n    }\n  }\n  set_flags(data) {\n    var _a, _b, _c, _d, _e, _f;\n    const flags = data[\"flags\"];\n    if (flags) {\n      const bypass = flags[\"bypass\"];\n      if (bypass != null) {\n        (_b = (_a = this._node.flags) == null ? void 0 : _a.bypass) == null ? void 0 : _b.set(bypass);\n      }\n      const display = flags[\"display\"];\n      if (display != null) {\n        (_d = (_c = this._node.flags) == null ? void 0 : _c.display) == null ? void 0 : _d.set(display);\n      }\n      const optimize = flags[\"optimize\"];\n      if (optimize != null) {\n        (_f = (_e = this._node.flags) == null ? void 0 : _e.optimize) == null ? void 0 : _f.set(optimize);\n      }\n    }\n  }\n  set_connection_points(connection_points_data) {\n    if (!connection_points_data) {\n      return;\n    }\n    if (connection_points_data[\"in\"]) {\n      this._node.io.saved_connection_points_data.set_in(connection_points_data[\"in\"]);\n    }\n    if (connection_points_data[\"out\"]) {\n      this._node.io.saved_connection_points_data.set_out(connection_points_data[\"out\"]);\n    }\n    if (this._node.io.has_connection_points_controller) {\n      this._node.io.connection_points.update_signature_if_required();\n    }\n  }\n  setInputs(inputsData) {\n    if (!inputsData) {\n      return;\n    }\n    let inputData;\n    for (let i = 0; i < inputsData.length; i++) {\n      inputData = inputsData[i];\n      if (inputData && this._node.parent()) {\n        if (CoreType.isString(inputData)) {\n          const inputNodeName = inputData;\n          const inputNode = this._node.nodeSibling(inputNodeName);\n          this._node.setInput(i, inputNode);\n        } else {\n          const inputNode = this._node.nodeSibling(inputData[\"node\"]);\n          let inputIndex = inputData[\"index\"];\n          const inputName = inputData[\"inputName\"];\n          let outputName = inputData[\"output\"];\n          if (inputName != null) {\n            const connectionPoints = this._node.io.inputs.namedInputConnectionPoints();\n            if (connectionPoints) {\n              const connectionPointIndex = connectionPoints.map((point) => point == null ? void 0 : point.name().toLowerCase()).indexOf(inputName.toLowerCase());\n              if (connectionPointIndex >= 0) {\n                inputIndex = connectionPointIndex;\n              }\n            }\n          }\n          if (inputNode != null && outputName != null) {\n            const connectionPoints = inputNode.io.outputs.namedOutputConnectionPoints();\n            if (connectionPoints) {\n              for (let connectionPoint of connectionPoints) {\n                if (connectionPoint) {\n                  if (connectionPoint.name().toLowerCase() == outputName.toLowerCase()) {\n                    outputName = connectionPoint.name();\n                  }\n                }\n              }\n            }\n          }\n          if (inputIndex != null) {\n            this._node.setInput(inputIndex, inputNode, outputName);\n          }\n        }\n      }\n    }\n  }\n  processNodesUiData(scene_importer, data) {\n    if (!data) {\n      return;\n    }\n    if (Poly.playerMode()) {\n      return;\n    }\n    const node_names = Object.keys(data);\n    for (let node_name of node_names) {\n      const node = this._node.node(node_name);\n      if (node) {\n        const node_data = data[node_name];\n        this.dispatcher.dispatchNode(node).process_ui_data(scene_importer, node_data);\n      }\n    }\n  }\n  //\n  //\n  // PARAMS\n  //\n  //\n  set_params(nodeData) {\n    const data = nodeData[\"params\"];\n    if (!data) {\n      return;\n    }\n    const param_names = Object.keys(data);\n    const params_update_options = {};\n    for (let param_name of param_names) {\n      const param_data = data[param_name];\n      if (param_data != null) {\n        const options = param_data[\"options\"];\n        let param_type = param_data[\"type\"];\n        const has_param = this._node.params.has_param(param_name);\n        let has_param_and_same_type = false;\n        let param;\n        if (has_param) {\n          param = this._node.params.get(param_name);\n          if (param && param.type() == param_type || param_type == null) {\n            has_param_and_same_type = true;\n          }\n        }\n        if (has_param_and_same_type) {\n          if (this._is_param_data_complex(param_data)) {\n            this._process_param_data_complex(param_name, param_data);\n          } else {\n            this._process_param_data_simple(\n              param_name,\n              param_data\n            );\n          }\n        } else {\n          params_update_options.namesToDelete = params_update_options.namesToDelete || [];\n          params_update_options.namesToDelete.push(param_name);\n          params_update_options.toAdd = params_update_options.toAdd || [];\n          params_update_options.toAdd.push({\n            name: param_name,\n            type: param_type,\n            initValue: param_data[\"default_value\"],\n            rawInput: param_data[\"raw_input\"],\n            options\n          });\n        }\n      }\n    }\n    const params_delete_required = params_update_options.namesToDelete && params_update_options.namesToDelete.length > 0;\n    const params_add_required = params_update_options.toAdd && params_update_options.toAdd.length > 0;\n    if (params_delete_required || params_add_required) {\n      this._node.params.updateParams(params_update_options);\n      for (let spare_param of this._node.params.spare) {\n        const param_data = data[spare_param.name()];\n        if (!spare_param.parentParam() && param_data) {\n          if (this._is_param_data_complex(param_data)) {\n            this._process_param_data_complex(spare_param.name(), param_data);\n          } else {\n            this._process_param_data_simple(\n              spare_param.name(),\n              param_data\n            );\n          }\n        }\n      }\n    }\n    this._node.params.runOnSceneLoadHooks();\n  }\n  _process_param_data_simple(param_name, param_data) {\n    var _a;\n    (_a = this._node.params.get(param_name)) == null ? void 0 : _a.set(param_data);\n  }\n  _process_param_data_complex(param_name, param_data) {\n    const param = this._node.params.get(param_name);\n    if (param) {\n      this.dispatcher.dispatchParam(param).process_data(param_data);\n    }\n  }\n  _is_param_data_complex(param_data) {\n    if (CoreType.isString(param_data) || CoreType.isNumber(param_data) || CoreType.isArray(param_data) || CoreType.isBoolean(param_data)) {\n      return false;\n    }\n    if (CoreType.isObject(param_data)) {\n      const keys = Object.keys(param_data);\n      for (let complex_key of COMPLEX_PARAM_DATA_KEYS) {\n        if (keys.includes(complex_key)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  set_persisted_config(persisted_config_data) {\n    if (this._node.persisted_config) {\n      this._node.persisted_config.load(persisted_config_data);\n    }\n  }\n  setCustomData(data) {\n  }\n}\n", "\"use strict\";\nexport class ParamJsonImporter {\n  constructor(_param) {\n    this._param = _param;\n  }\n  process_data(data) {\n    const raw_input = data[\"raw_input\"];\n    if (raw_input !== void 0) {\n      this._param.set(raw_input);\n    }\n    this.add_main(data);\n  }\n  add_main(data) {\n  }\n  static spare_params_data(params_data) {\n    return this.params_data(true, params_data);\n  }\n  static non_spare_params_data_value(params_data) {\n    return this.params_data_value(false, params_data);\n  }\n  static params_data(spare, params_data) {\n    let non_spare_params_data;\n    if (params_data) {\n      non_spare_params_data = {};\n      const param_names = Object.keys(params_data);\n      let param_data;\n      for (let param_name of param_names) {\n        param_data = params_data[param_name];\n        if (param_data) {\n          non_spare_params_data[param_name] = params_data;\n        }\n      }\n    }\n    return non_spare_params_data;\n  }\n  static params_data_value(spare, params_data) {\n    let non_spare_params_data;\n    if (params_data) {\n      non_spare_params_data = {};\n      const param_names = Object.keys(params_data);\n      let param_data;\n      for (let param_name of param_names) {\n        param_data = params_data[param_name];\n        if (param_data != null) {\n          const options = param_data.options;\n          const overriden_options = param_data.overriden_options;\n          if (options || overriden_options) {\n            const complex_data = param_data;\n            if (options && options.spare == spare) {\n              if (complex_data.raw_input != null) {\n                non_spare_params_data[param_name] = { complex_data };\n              }\n            } else {\n              if (overriden_options) {\n                non_spare_params_data[param_name] = { complex_data };\n              }\n            }\n          } else {\n            const simple_data = param_data;\n            if (overriden_options || simple_data != null) {\n              non_spare_params_data[param_name] = {\n                simple_data\n              };\n            }\n          }\n        }\n      }\n    }\n    return non_spare_params_data;\n  }\n}\n", "\"use strict\";\nimport { ParamJsonImporter } from \"../Param\";\nexport class ParamMultipleJsonImporter extends ParamJsonImporter {\n  add_main(data) {\n  }\n}\n", "\"use strict\";\nimport { ParamJsonImporter } from \"../Param\";\nconst LINE_BREAK_REGEXP = /\\\\n+/g;\nexport class ParamStringJsonImporter extends ParamJsonImporter {\n  add_main(data) {\n    let raw_input = data[\"raw_input\"];\n    if (raw_input !== void 0) {\n      raw_input = raw_input.replace(LINE_BREAK_REGEXP, \"\\n\");\n      this._param.set(raw_input);\n    }\n  }\n}\n", "\"use strict\";\nimport { ParamJsonImporter } from \"../Param\";\nexport class ParamRampJsonImporter extends ParamJsonImporter {\n  add_main(data) {\n    const raw_input = data[\"raw_input\"];\n    if (raw_input) {\n      this._param.set(raw_input);\n    }\n  }\n}\n", "\"use strict\";\nimport { NodeJsonImporter } from \"../Node\";\nexport class PolyNodeJsonImporter extends NodeJsonImporter {\n  create_nodes(scene_importer, data, nodeData) {\n    const node = this._node;\n    const polyNodeController = node.polyNodeController;\n    polyNodeController.setLockedState(false);\n    if (this._isDataLocked(nodeData)) {\n      polyNodeController.createChildNodesFromDefinition();\n    } else {\n      super.create_nodes(scene_importer, data, nodeData);\n    }\n  }\n  setCustomData(data) {\n    if (this._node.polyNodeController) {\n      this._node.polyNodeController.setLockedState(this._isDataLocked(data));\n    }\n  }\n  _isDataLocked(data) {\n    if (data[\"polyNode\"]) {\n      return data[\"polyNode\"][\"locked\"];\n    } else {\n      return false;\n    }\n  }\n}\n", "\"use strict\";\nimport { ParamJsonImporter } from \"./Param\";\nimport { Poly } from \"../../../Poly\";\nimport { OPERATIONS_COMPOSER_NODE_TYPE } from \"../../../operations/_Base\";\nimport { CoreType } from \"../../../../core/Type\";\nexport class OptimizedNodesJsonImporter {\n  constructor(_node) {\n    this._node = _node;\n    this._nodes = [];\n    this._optimized_root_node_names = /* @__PURE__ */ new Set();\n    this._operation_containers_by_name = /* @__PURE__ */ new Map();\n    this._node_inputs = [];\n  }\n  nodes() {\n    return this._nodes;\n  }\n  process_data(scene_importer, data) {\n    var _a, _b, _c;\n    if (!data) {\n      return;\n    }\n    if (!(this._node.childrenAllowed() && this._node.childrenController)) {\n      return;\n    }\n    const { optimized_names } = OptimizedNodesJsonImporter.child_names_by_optimized_state(data);\n    this._nodes = [];\n    this._optimized_root_node_names = /* @__PURE__ */ new Set();\n    for (let node_name of optimized_names) {\n      if (OptimizedNodesJsonImporter.is_optimized_root_node(data, node_name)) {\n        this._optimized_root_node_names.add(node_name);\n      }\n    }\n    for (let nodeName of this._optimized_root_node_names) {\n      const node_data = data[nodeName];\n      const nodeCreateOptions = {\n        nodeName\n      };\n      const node = this._node.createNode(OPERATIONS_COMPOSER_NODE_TYPE, nodeCreateOptions);\n      if (node) {\n        this._nodes.push(node);\n        if ((_a = node_data.flags) == null ? void 0 : _a.display) {\n          (_c = (_b = node.flags) == null ? void 0 : _b.display) == null ? void 0 : _c.set(true);\n        }\n        const operation_container = this._createOperationContainer(\n          scene_importer,\n          node,\n          node_data,\n          node.name()\n        );\n        node.setOutputOperationContainer(\n          operation_container\n        );\n      }\n    }\n    for (let node of this._nodes) {\n      const operation_container = node.outputOperationContainer();\n      if (operation_container) {\n        this._node_inputs = [];\n        this._add_optimized_node_inputs(\n          scene_importer,\n          node,\n          data,\n          node.name(),\n          operation_container\n        );\n        node.io.inputs.setCount(this._node_inputs.length);\n        for (let i = 0; i < this._node_inputs.length; i++) {\n          node.setInput(i, this._node_inputs[i]);\n        }\n      }\n    }\n  }\n  _add_optimized_node_inputs(scene_importer, node, data, node_name, current_operation_container) {\n    var _a;\n    const node_data = data[node_name];\n    const inputs_data = node_data[\"inputs\"];\n    if (!inputs_data) {\n      return;\n    }\n    for (let input_data of inputs_data) {\n      if (CoreType.isString(input_data)) {\n        const input_node_data = data[input_data];\n        if (input_node_data) {\n          if (OptimizedNodesJsonImporter.is_node_optimized(input_node_data) && !this._optimized_root_node_names.has(input_data)) {\n            let operation_container = this._operation_containers_by_name.get(input_data);\n            if (!operation_container) {\n              operation_container = this._createOperationContainer(\n                scene_importer,\n                node,\n                input_node_data,\n                input_data\n              );\n              if (operation_container) {\n                this._add_optimized_node_inputs(\n                  scene_importer,\n                  node,\n                  data,\n                  input_data,\n                  operation_container\n                );\n              }\n            }\n            current_operation_container.addInput(operation_container);\n          } else {\n            const input_node = (_a = node.parent()) == null ? void 0 : _a.node(input_data);\n            if (input_node) {\n              this._node_inputs.push(input_node);\n              const node_input_index = this._node_inputs.length - 1;\n              node.addInputConfig(current_operation_container, {\n                operation_input_index: current_operation_container.currentInputIndex(),\n                node_input_index\n              });\n              current_operation_container.incrementInputIndex();\n            }\n          }\n        }\n      }\n    }\n    if (node_data.cloned_state_overriden == true) {\n      current_operation_container.overrideInputCloneState(node_data.cloned_state_overriden);\n    }\n  }\n  static child_names_by_optimized_state(data) {\n    const node_names = Object.keys(data);\n    const optimized_names = [];\n    const non_optimized_names = [];\n    for (let node_name of node_names) {\n      const node_data = data[node_name];\n      const optimized_state = Poly.playerMode() && this.is_node_optimized(node_data);\n      if (optimized_state) {\n        optimized_names.push(node_name);\n      } else {\n        non_optimized_names.push(node_name);\n      }\n    }\n    return { optimized_names, non_optimized_names };\n  }\n  // private _optimized_names_for_root(\n  // \tdata: PolyDictionary<NodeJsonExporterData>,\n  // \tcurrent_node_name: string,\n  // \tcurrent_node_data: NodeJsonExporterData,\n  // \tinput_names: string[] = []\n  // ) {\n  // \tinput_names.push(current_node_name);\n  // \tconst inputs = current_node_data['inputs'];\n  // \tif (inputs) {\n  // \t\tfor (let input_data of inputs) {\n  // \t\t\tif (CoreType.isString(input_data)) {\n  // \t\t\t\tconst input_node_name = input_data;\n  // \t\t\t\t// if (input_node_name != current_node_name) {\n  // \t\t\t\tconst input_node_data = data[input_node_name];\n  // \t\t\t\tif (input_node_data) {\n  // \t\t\t\t\tif (\n  // \t\t\t\t\t\tOptimizedNodesJsonImporter.is_node_optimized(input_node_data) &&\n  // \t\t\t\t\t\t!this._is_optimized_root_node(data, input_node_name, input_node_data)\n  // \t\t\t\t\t) {\n  // \t\t\t\t\t\tthis._optimized_names_for_root(data, input_node_name, input_node_data, input_names);\n  // \t\t\t\t\t}\n  // \t\t\t\t}\n  // \t\t\t\t// }\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // \treturn input_names;\n  // }\n  // a node will be considered optimized root node if:\n  // - it has no output\n  // - at least one output is not optimized (as it if it has 2 outputs, and only 1 is optimized, it will not be considered root)\n  static is_optimized_root_node_generic(data) {\n    if (data.outputs_count == 0) {\n      return true;\n    }\n    if (data.non_optimized_count > 0) {\n      return true;\n    }\n    return false;\n  }\n  static is_optimized_root_node(data, current_node_name) {\n    const output_names = this.node_outputs(data, current_node_name);\n    let non_optimized_count = 0;\n    output_names.forEach((node_name) => {\n      const node_data = data[node_name];\n      if (!this.is_node_optimized(node_data)) {\n        non_optimized_count++;\n      }\n    });\n    return this.is_optimized_root_node_generic({\n      outputs_count: output_names.size,\n      non_optimized_count\n    });\n  }\n  // same algo as is_optimized_root_node, but for a node\n  static is_optimized_root_node_from_node(node) {\n    var _a, _b, _c, _d;\n    if (!((_b = (_a = node.flags) == null ? void 0 : _a.optimize) == null ? void 0 : _b.active())) {\n      return false;\n    }\n    const outputConnections = [];\n    node.io.connections.outputConnections(outputConnections);\n    const outputNodes = outputConnections.map((c) => c.nodeDest());\n    let non_optimized_count = 0;\n    for (let output_node of outputNodes) {\n      if (!((_d = (_c = output_node.flags) == null ? void 0 : _c.optimize) == null ? void 0 : _d.active())) {\n        non_optimized_count++;\n      }\n    }\n    return this.is_optimized_root_node_generic({\n      outputs_count: outputNodes.length,\n      non_optimized_count\n    });\n  }\n  static node_outputs(data, current_node_name) {\n    const node_names = Object.keys(data);\n    const output_node_names = /* @__PURE__ */ new Set();\n    for (let node_name of node_names) {\n      if (node_name != current_node_name) {\n        const node_data = data[node_name];\n        const inputs = node_data[\"inputs\"];\n        if (inputs) {\n          for (let input_data of inputs) {\n            if (CoreType.isString(input_data)) {\n              const input_node_name = input_data;\n              if (input_node_name == current_node_name) {\n                output_node_names.add(node_name);\n              }\n            }\n          }\n        }\n      }\n    }\n    return output_node_names;\n  }\n  _createOperationContainer(scene_importer, node, node_data, node_name) {\n    const paramsInitValueOverrides = ParamJsonImporter.non_spare_params_data_value(node_data[\"params\"]);\n    const operation_type = OptimizedNodesJsonImporter.operation_type(node_data);\n    const createOptions = { paramsInitValueOverrides };\n    const operation_container = this._node.createOperationContainer(\n      operation_type,\n      node_name,\n      createOptions\n    );\n    if (operation_container) {\n      this._operation_containers_by_name.set(node_name, operation_container);\n      if (operation_container.pathParamResolveRequired()) {\n        node.addOperationContainerWithPathParamResolveRequired(operation_container);\n        scene_importer.add_operations_composer_node_with_path_param_resolve_required(node);\n      }\n    }\n    return operation_container;\n  }\n  static operation_type(node_data) {\n    if (OptimizedNodesJsonImporter.is_node_bypassed(node_data)) {\n      return \"null\";\n    }\n    return node_data[\"type\"];\n  }\n  static is_node_optimized(node_data) {\n    const node_flags = node_data[\"flags\"];\n    if (node_flags && node_flags[\"optimize\"]) {\n      return true;\n    }\n    return false;\n  }\n  static is_node_bypassed(node_data) {\n    const node_flags = node_data[\"flags\"];\n    if (node_flags && node_flags[\"bypass\"]) {\n      return true;\n    }\n    return false;\n  }\n}\n", "\"use strict\";\nimport { NodeContext } from \"../../../poly/NodeContext\";\nimport { ParamJsonImporter } from \"./Param\";\nimport { OptimizedNodesJsonImporter } from \"./OptimizedNodes\";\nimport { Poly } from \"../../../Poly\";\nimport { CoreString } from \"../../../../core/String\";\nexport class NodesJsonImporter {\n  constructor(_node, dispatcher) {\n    this._node = _node;\n    this.dispatcher = dispatcher;\n  }\n  process_data(sceneImporter, data) {\n    var _a;\n    if (!data) {\n      return;\n    }\n    if (!(this._node.childrenAllowed() && this._node.childrenController)) {\n      return;\n    }\n    const { optimized_names, non_optimized_names } = OptimizedNodesJsonImporter.child_names_by_optimized_state(data);\n    const nonOptimizedNodes = [];\n    const migrateHelper = sceneImporter.migrateHelper();\n    for (let nodeName of non_optimized_names) {\n      const node_data = data[nodeName];\n      const nodeType = migrateHelper ? migrateHelper.migrateNodeType(this._node, node_data) : node_data.type;\n      migrateHelper == null ? void 0 : migrateHelper.migrateParams(this._node, node_data);\n      const paramsInitValueOverrides = ParamJsonImporter.non_spare_params_data_value(node_data[\"params\"]);\n      const nodeCreateOptions = {\n        paramsInitValueOverrides,\n        nodeName\n      };\n      const loadNodeAttempt = (nodeType2, nodeCreateOptions2) => {\n        try {\n          const node2 = this._node.createNode(nodeType2, nodeCreateOptions2);\n          if (node2) {\n            return node2;\n          }\n        } catch (e) {\n          console.error(`error importing node: cannot create with type ${nodeType2}`, e);\n        }\n      };\n      let node = loadNodeAttempt(nodeType, nodeCreateOptions);\n      if (!node) {\n        const nodeTypeCamelCase = CoreString.camelCase(nodeType);\n        node = loadNodeAttempt(nodeTypeCamelCase, nodeCreateOptions);\n      }\n      if (!node) {\n        const nodeTypeWithNetwork = `${nodeType}Network`;\n        node = loadNodeAttempt(nodeTypeWithNetwork, nodeCreateOptions);\n      }\n      if (node) {\n        nonOptimizedNodes.push(node);\n      } else {\n        const message = `failed to create node with type '${nodeType}' (in '${this._node.path()}')`;\n        sceneImporter.report.addWarning(message);\n        Poly.warn(message);\n      }\n    }\n    if (optimized_names.length > 0) {\n      const optimized_nodes_importer = new OptimizedNodesJsonImporter(this._node);\n      optimized_nodes_importer.process_data(sceneImporter, data);\n      if (this._node.childrenController.context == NodeContext.SOP) {\n        const nodeNames = Object.keys(data);\n        let nodeNameWithDisplayFlag = void 0;\n        for (let nodeName of nodeNames) {\n          const nodeData = data[nodeName];\n          if ((_a = nodeData.flags) == null ? void 0 : _a.display) {\n            nodeNameWithDisplayFlag = nodeName;\n          }\n        }\n        if (nodeNameWithDisplayFlag) {\n          const existingNodeNames = nonOptimizedNodes.map((n) => n.name());\n          const optimizedNodes = optimized_nodes_importer.nodes();\n          for (let optimizedNode of optimizedNodes) {\n            existingNodeNames.push(optimizedNode.name());\n          }\n          if (!existingNodeNames.includes(nodeNameWithDisplayFlag)) {\n            const parentFullPath = this._node.path();\n            const nodeFullPath = `${parentFullPath}/${nodeNameWithDisplayFlag}`;\n            const message = `node '${nodeFullPath}' with display flag has been optimized and does not exist in player mode`;\n            console.error(message);\n          }\n        }\n      }\n    }\n    const importers_by_node_name = /* @__PURE__ */ new Map();\n    for (let node of nonOptimizedNodes) {\n      const child_data = data[node.name()];\n      if (child_data) {\n        const importer = this.dispatcher.dispatchNode(node);\n        importers_by_node_name.set(node.name(), importer);\n        importer.process_data(sceneImporter, data[node.name()]);\n      } else {\n        Poly.warn(`possible import error for node ${node.name()}`);\n        Poly.log(\"available names are\", Object.keys(data).sort(), data);\n      }\n    }\n    for (let node of nonOptimizedNodes) {\n      const importer = importers_by_node_name.get(node.name());\n      if (importer) {\n        importer.process_inputs_data(sceneImporter, data[node.name()]);\n      }\n    }\n  }\n}\n", "\"use strict\";\nimport { NodeJsonImporter } from \"./Node\";\nimport { ParamJsonImporter } from \"./Param\";\nimport { ParamMultipleJsonImporter } from \"./param/Multiple\";\nimport { ParamStringJsonImporter } from \"./param/String\";\nimport { ParamRampJsonImporter } from \"./param/Ramp\";\nimport { TypedMultipleParam } from \"../../../params/_Multiple\";\nimport { StringParam } from \"../../../params/String\";\nimport { RampParam } from \"../../../params/Ramp\";\nimport { PolyNodeJsonImporter } from \"./nodes/Poly\";\nimport { NodesJsonImporter } from \"./Nodes\";\nexport class JsonImportDispatcher {\n  dispatchNode(node) {\n    if (node.polyNodeController) {\n      return this._dispatchPolyNode(node);\n    }\n    return this.dispatchNonPolyNode(node);\n  }\n  _dispatchPolyNode(node) {\n    const nodesImporter = new NodesJsonImporter(node, this);\n    return new PolyNodeJsonImporter(node, this, nodesImporter);\n  }\n  dispatchNonPolyNode(node) {\n    const nodesImporter = new NodesJsonImporter(node, this);\n    return new NodeJsonImporter(node, this, nodesImporter);\n  }\n  dispatchParam(param) {\n    if (param instanceof TypedMultipleParam) {\n      return new ParamMultipleJsonImporter(param);\n    }\n    if (param instanceof StringParam) {\n      return new ParamStringJsonImporter(param);\n    }\n    if (param instanceof RampParam) {\n      return new ParamRampJsonImporter(param);\n    }\n    return new ParamJsonImporter(param);\n  }\n}\n", "\"use strict\";\nimport { CoreFeaturesController } from \"./../../../../core/FeaturesController\";\nexport class ImportReport {\n  constructor(_sceneImporter) {\n    this._warnings = [];\n    this._readonly = false;\n    this._loadedWithoutAssemblers = false;\n  }\n  warnings() {\n    return this._warnings;\n  }\n  readonly() {\n    return this._readonly;\n  }\n  loadedWithoutAssemblers() {\n    return this._loadedWithoutAssemblers;\n  }\n  reset() {\n    this._warnings = [];\n  }\n  markAsLoadedWithoutAssemblers() {\n    this._readonly = true;\n    this._loadedWithoutAssemblers = true;\n  }\n  addWarning(message) {\n    this._warnings.push(message);\n    if (CoreFeaturesController.debugLoadProgress()) {\n      console.warn(message);\n    }\n  }\n}\n", "\"use strict\";\nimport { CoreFeaturesController } from \"./../../../../core/FeaturesController\";\nimport { PolyNodeController } from \"./../../../nodes/utils/poly/PolyNodeController\";\nimport { PolyScene } from \"../../../scene/PolyScene\";\nimport { JsonImportDispatcher } from \"./Dispatcher\";\nimport { ImportReport } from \"./ImportReport\";\nimport { TimeController } from \"../../../scene/utils/TimeController\";\nimport { ParamJsonImporter } from \"./Param\";\nimport { ROOT_NODE_NAME } from \"../../../nodes/manager/Root\";\nexport class SceneJsonImporter {\n  constructor(_data, _options) {\n    this._data = _data;\n    this._options = _options;\n    this.report = new ImportReport(this);\n  }\n  static async loadData(data, options) {\n    const importer = new SceneJsonImporter(data, options);\n    return await importer.scene(options == null ? void 0 : options.serializers);\n  }\n  setMigrateHelper(migrateHelper) {\n    this._migrateHelper = migrateHelper;\n  }\n  migrateHelper() {\n    return this._migrateHelper;\n  }\n  oldPolygonjsSceneVersion() {\n    var _a;\n    const properties = this._data[\"properties\"];\n    if (properties) {\n      return (_a = properties.versions) == null ? void 0 : _a.polygonjs;\n    }\n  }\n  scene(options) {\n    if (this._migrateHelper) {\n      this._data = this._migrateHelper.migrateData(this._data);\n    }\n    if (CoreFeaturesController.debugLoadProgress()) {\n      console.log(`polygonjs version:${this.oldPolygonjsSceneVersion()}`);\n    }\n    const rootData = this._data[\"root\"];\n    const paramsInitValueOverrides = ParamJsonImporter.non_spare_params_data_value(rootData[\"params\"]);\n    const nodeCreateOptions = {\n      paramsInitValueOverrides,\n      nodeName: ROOT_NODE_NAME,\n      serializerClass: options == null ? void 0 : options.nodeSerializerClass\n    };\n    const embeddedPolyNodes = this._data.embeddedPolyNodes;\n    if (embeddedPolyNodes) {\n      const keys = Object.keys(embeddedPolyNodes);\n      for (let key of keys) {\n        const elements = key.split(\"/\");\n        const nodeContext = elements[0];\n        const nodeType = elements[1];\n        const data = embeddedPolyNodes[key];\n        PolyNodeController.createNodeClassAndRegister({\n          node_context: nodeContext,\n          node_type: nodeType,\n          data\n        });\n      }\n    }\n    const scene = new PolyScene({ root: nodeCreateOptions, paramsSerializerClass: options == null ? void 0 : options.paramsSerializerClass });\n    if (this._options) {\n      if (this._options.sceneName) {\n        scene.setName(this._options.sceneName);\n      }\n      if (this._options.measurePerformanceOnLoad == true) {\n        scene.performance.start();\n      }\n    }\n    scene.loadingController.markAsLoading();\n    const properties = this._data[\"properties\"];\n    if (properties) {\n      const maxFrame = properties[\"maxFrame\"] || 600;\n      scene.timeController.setMaxFrame(maxFrame);\n      const maxFrameLocked = properties[\"maxFrameLocked\"];\n      if (maxFrameLocked) {\n        scene.timeController.setMaxFrameLocked(maxFrameLocked);\n      }\n      const realtimeState = properties[\"realtimeState\"];\n      if (realtimeState != null) {\n        scene.timeController.setRealtimeState(realtimeState);\n      }\n      scene.setFrame(properties[\"frame\"] || TimeController.START_FRAME);\n      const mainCameraPath = properties[\"mainCameraNodePath\"] || properties[\"mainCameraPath\"];\n      if (mainCameraPath) {\n        scene.camerasController.setMainCameraPath(mainCameraPath);\n      }\n    }\n    scene.cooker.block();\n    this._base_operations_composer_nodes_with_resolve_required = void 0;\n    const dispatcher = new JsonImportDispatcher();\n    const importer = dispatcher.dispatchNode(scene.root());\n    if (rootData) {\n      importer.process_data(this, rootData);\n    }\n    const uiData = this._data[\"ui\"];\n    if (uiData) {\n      importer.process_ui_data(this, uiData);\n    }\n    this._resolve_operation_containers_with_path_param_resolve();\n    if (this._options) {\n      if (this._options.nodeCookWatcher) {\n        this._options.nodeCookWatcher(scene);\n      }\n      if (this._options.configureScene) {\n        this._options.configureScene(scene);\n      }\n    }\n    scene.loadingController.markAsLoaded();\n    scene.cooker.unblock();\n    return scene;\n  }\n  shadersData() {\n    return this._data[\"shaders\"];\n  }\n  jsFunctionBodiesData() {\n    return this._data[\"jsFunctionBodies\"];\n  }\n  //\n  //\n  // OPERATION CONTAINER RESOLVE\n  //\n  //\n  add_operations_composer_node_with_path_param_resolve_required(operations_composer_node) {\n    if (!this._base_operations_composer_nodes_with_resolve_required) {\n      this._base_operations_composer_nodes_with_resolve_required = [];\n    }\n    this._base_operations_composer_nodes_with_resolve_required.push(operations_composer_node);\n  }\n  _resolve_operation_containers_with_path_param_resolve() {\n    if (!this._base_operations_composer_nodes_with_resolve_required) {\n      return;\n    }\n    for (let operations_composer_node of this._base_operations_composer_nodes_with_resolve_required) {\n      operations_composer_node.resolveOperationContainersPathParams();\n    }\n  }\n}\n", "\"use strict\";\nimport { CoreString } from \"../../../../core/String\";\nexport function sanitizeExportedString(word) {\n  word = word.replace(/'/g, \"'\");\n  word = CoreString.escapeLineBreaks(word);\n  return word;\n}\n", "\"use strict\";\nimport { sanitizeExportedString } from \"./sanitize\";\nimport { isString } from \"../../../../core/Type\";\nexport class NodeJsonExporter {\n  // = {} as NodeJsonExporterData;\n  constructor(_node, dispatcher) {\n    this._node = _node;\n    this.dispatcher = dispatcher;\n  }\n  async data(options) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!this._isRoot()) {\n      this._node.scene().nodesController.registerNodeContextSignature(this._node);\n    }\n    this._data = {\n      type: this._node.type()\n    };\n    if (this._node.polyNodeController) {\n      this._data[\"polyNode\"] = {\n        locked: this._node.polyNodeController.locked()\n      };\n    }\n    const nodes_data = await this.nodes_data(options);\n    if (Object.keys(nodes_data).length > 0) {\n      this._data[\"nodes\"] = nodes_data;\n    }\n    const params_data = this.params_data();\n    if (Object.keys(params_data).length > 0) {\n      this._data[\"params\"] = params_data;\n    }\n    if (!this._isRoot()) {\n      if (this._node.io.inputs.maxInputsCountOverriden()) {\n        this._data[\"maxInputsCount\"] = this._node.io.inputs.maxInputsCount();\n      }\n      const inputs_data = this.inputs_data();\n      if (inputs_data.length > 0) {\n        this._data[\"inputs\"] = inputs_data;\n      }\n      const connection_points_data = this.connection_points_data();\n      if (connection_points_data) {\n        this._data[\"connection_points\"] = connection_points_data;\n      }\n    }\n    if (this._node.flags) {\n      const flags_data = {};\n      if (this._node.flags.hasBypass() || this._node.flags.hasDisplay() || this._node.flags.hasOptimize()) {\n        if (this._node.flags.hasBypass()) {\n          if ((_a = this._node.flags.bypass) == null ? void 0 : _a.active()) {\n            flags_data[\"bypass\"] = this._node.flags.bypass.active();\n          }\n        }\n        if (this._node.flags.hasDisplay()) {\n          if (((_b = this._node.flags.display) == null ? void 0 : _b.active()) || !((_c = this._node.parent()) == null ? void 0 : _c.displayNodeController)) {\n            flags_data[\"display\"] = (_d = this._node.flags.display) == null ? void 0 : _d.active();\n          }\n        }\n        if (this._node.flags.hasOptimize()) {\n          if ((_e = this._node.flags.optimize) == null ? void 0 : _e.active()) {\n            flags_data[\"optimize\"] = (_f = this._node.flags.optimize) == null ? void 0 : _f.active();\n          }\n        }\n      }\n      if (Object.keys(flags_data).length > 0) {\n        this._data[\"flags\"] = flags_data;\n      }\n    }\n    if (this._node.io.inputs.overrideClonedStateAllowed()) {\n      const overriden = this._node.io.inputs.clonedStateOverriden();\n      if (overriden) {\n        this._data[\"cloned_state_overriden\"] = overriden;\n      }\n    }\n    const withPersistedConfig = options.withPersistedConfig == null ? true : options.withPersistedConfig;\n    if (withPersistedConfig == true) {\n      const persisted_config = this._node.persisted_config;\n      if (persisted_config) {\n        const persisted_config_data = options.showPolyNodesData ? await persisted_config.toData() : await persisted_config.toDataWithoutShaders();\n        if (persisted_config_data) {\n          this._data.persisted_config = persisted_config_data;\n        }\n      }\n    }\n    this.add_custom();\n    return this._data;\n  }\n  uiData(options) {\n    const data = this.ui_data_without_children();\n    const children = this._node.children();\n    if (children.length > 0) {\n      const nodesData = {};\n      for (let child of children) {\n        const node_exporter = this.dispatcher.dispatchNode(child);\n        nodesData[child.name()] = node_exporter.uiData(options);\n      }\n      data[\"nodes\"] = nodesData;\n    }\n    return data;\n  }\n  ui_data_without_children() {\n    var _a;\n    const data = {};\n    if (!this._isRoot()) {\n      const ui_data = this._node.uiData;\n      data[\"pos\"] = ui_data.position().toArray();\n      const comment = ui_data.comment();\n      if (comment) {\n        data[\"comment\"] = sanitizeExportedString(comment);\n      }\n      if (this._node.childrenAllowed()) {\n        const selection = (_a = this._node.childrenController) == null ? void 0 : _a.selection;\n        if (selection && this._node.children().length > 0) {\n          const selected_children = [];\n          const selected_ids = {};\n          const selectedNodes = [];\n          selection.nodes(selectedNodes);\n          for (const selected_node of selectedNodes) {\n            selected_ids[selected_node.graphNodeId()] = true;\n          }\n          for (const child of this._node.children()) {\n            if (child.graphNodeId() in selected_ids) {\n              selected_children.push(child);\n            }\n          }\n          const selection_data = selected_children.map((n) => n.name());\n          if (selection_data.length > 0) {\n            data[\"selection\"] = selection_data;\n          }\n        }\n      }\n    }\n    return data;\n  }\n  async persistedConfigData(shadersData, jsFunctionBodiesData, options) {\n    const children = this._node.children();\n    if (children.length > 0) {\n      for (let child of children) {\n        const node_exporter = this.dispatcher.dispatchNode(child);\n        await node_exporter.persistedConfigData(shadersData, jsFunctionBodiesData, options);\n      }\n    }\n    if (this._node.persisted_config) {\n      const persisted_config_data = await this._node.persisted_config.toData();\n      if (persisted_config_data) {\n        if (persisted_config_data.shaders) {\n          shadersData[this._node.path()] = persisted_config_data.shaders;\n          return;\n        }\n        if (persisted_config_data.functionBody != null) {\n          if (isString(persisted_config_data.functionBody)) {\n            jsFunctionBodiesData[this._node.path()] = persisted_config_data.functionBody;\n            return;\n          } else {\n            const dict = {};\n            const keys = Object.keys(persisted_config_data.functionBody);\n            for (let key of keys) {\n              dict[key] = persisted_config_data.functionBody[key];\n            }\n            jsFunctionBodiesData[this._node.path()] = dict;\n            return;\n          }\n        }\n        console.warn(`persisted config data not handled`, persisted_config_data);\n      }\n    }\n  }\n  // async jsFunctionBodies(data: NodeJSONFunctionBodiesData, options: JSONExporterDataRequestOption = {}): Promise<void> {\n  // \tconst children = this._node.children();\n  // \tif (children.length > 0) {\n  // \t\tfor (let child of children) {\n  // \t\t\tconst node_exporter = this.dispatcher.dispatchNode(child);\n  // \t\t\tawait node_exporter.jsFunctionBodies(data);\n  // \t\t}\n  // \t}\n  // \tif (this._node.persisted_config) {\n  // \t\tconst persisted_config_data = await this._node.persisted_config.toData();\n  // \t\tif (persisted_config_data && persisted_config_data.functionBody) {\n  // \t\t\tdata[this._node.path()] = persisted_config_data.functionBody\n  // \t\t}\n  // \t}\n  // }\n  _isRoot() {\n    return this._node.parent() === null && this._node.graphNodeId() == this._node.root().graphNodeId();\n  }\n  inputs_data() {\n    const data = [];\n    this._node.io.inputs.inputs().forEach((input, input_index) => {\n      var _a, _b;\n      if (input) {\n        const connection = this._node.io.connections.inputConnection(input_index);\n        if (this._node.io.inputs.hasNamedInputs()) {\n          const inputConnectionPoints = this._node.io.inputs.namedInputConnectionPoints();\n          const outputConnectionPoints = input.io.outputs.namedOutputConnectionPoints();\n          if (inputConnectionPoints && outputConnectionPoints) {\n            const inputName = (_a = inputConnectionPoints[input_index]) == null ? void 0 : _a.name();\n            const output_index = connection.outputIndex();\n            const output_name = (_b = outputConnectionPoints[output_index]) == null ? void 0 : _b.name();\n            if (output_name) {\n              data[input_index] = {\n                index: input_index,\n                inputName,\n                node: input.name(),\n                output: output_name\n              };\n            }\n          }\n        } else {\n          data[input_index] = input.name();\n        }\n      }\n    });\n    return data;\n  }\n  connection_points_data() {\n    if (!this._node.io.has_connection_points_controller) {\n      return;\n    }\n    if (!this._node.io.connection_points.initialized()) {\n      return;\n    }\n    if (this._node.io.inputs.hasNamedInputs() || this._node.io.outputs.hasNamedOutputs()) {\n      const data = {};\n      if (this._node.io.inputs.hasNamedInputs()) {\n        data[\"in\"] = [];\n        const connectionPoints = this._node.io.inputs.namedInputConnectionPoints();\n        if (connectionPoints) {\n          for (let cp of connectionPoints) {\n            if (cp) {\n              data[\"in\"].push(cp.toJSON());\n            }\n          }\n        }\n      }\n      if (this._node.io.outputs.hasNamedOutputs()) {\n        data[\"out\"] = [];\n        const connectionPoints = this._node.io.outputs.namedOutputConnectionPoints();\n        if (connectionPoints) {\n          for (let cp of connectionPoints) {\n            if (cp) {\n              data[\"out\"].push(cp.toJSON());\n            }\n          }\n        }\n      }\n      return data;\n    }\n  }\n  params_data() {\n    const data = {};\n    for (let param_name of this._node.params.names) {\n      const param = this._node.params.get(param_name);\n      if (param && !param.parentParam()) {\n        const param_exporter = this.dispatcher.dispatchParam(param);\n        if (param_exporter.required()) {\n          const params_data = param_exporter.data();\n          data[param.name()] = params_data;\n        }\n      }\n    }\n    return data;\n  }\n  async nodes_data(options) {\n    const data = {};\n    for (let child of this._node.children()) {\n      const node_exporter = this.dispatcher.dispatchNode(child);\n      data[child.name()] = await node_exporter.data(options);\n    }\n    return data;\n  }\n  add_custom() {\n  }\n}\n", "\"use strict\";\nimport { CoreType } from \"../../../../core/Type\";\nexport class ParamJsonExporter {\n  constructor(_param) {\n    this._param = _param;\n    // protected _simple_data: SimpleParamJsonExporterData<ParamType>=0;\n    this._complex_data = {};\n  }\n  required() {\n    const is_spare_and_not_component = this._param.options.isSpare() && !this._param.parentParam();\n    const value_changed = !this._param.isDefault();\n    return is_spare_and_not_component || value_changed || this._param.options.hasOptionsOverridden();\n  }\n  data() {\n    if (this._param.parentParam()) {\n      console.warn(\"no component should be saved\");\n      throw \"no component should be saved\";\n    }\n    if (this._require_data_complex()) {\n      return this._data_complex();\n    } else {\n      return this._data_simple();\n    }\n  }\n  _data_simple() {\n    return this._param.rawInputSerialized();\n  }\n  _data_complex() {\n    this._complex_data = {};\n    if (this._param.options.isSpare() && !this._param.parentParam()) {\n      this._complex_data[\"type\"] = this._param.type();\n      this._complex_data[\"default_value\"] = this._param.defaultValueSerialized();\n      this._complex_data[\"options\"] = this._param.options.current();\n    }\n    if (!this._param.isDefault()) {\n      this._complex_data[\"raw_input\"] = this._param.rawInputSerialized();\n    }\n    if (this._param.options.hasOptionsOverridden()) {\n      const overridden_options = {};\n      const options_overridden = this._param.options.overriddenOptions();\n      for (let option_name of Object.keys(options_overridden)) {\n        const option_value = options_overridden[option_name];\n        if (CoreType.isString(option_value) || CoreType.isNumber(option_value)) {\n          overridden_options[option_name] = option_value;\n        } else {\n          overridden_options[option_name] = JSON.stringify(option_value);\n        }\n      }\n      this._complex_data[\"overriden_options\"] = overridden_options;\n    }\n    return this._complex_data;\n  }\n  _require_data_complex() {\n    if (this._param.options.isSpare()) {\n      return true;\n    }\n    if (this._param.options.hasOptionsOverridden()) {\n      return true;\n    }\n    return false;\n  }\n  // default_value(): ParamValueSerialized {\n  // \treturn this._param.defaultValueSerialized();\n  // }\n  // cannot remember why this is useful, but it messes up\n  // with gl nodes like the noise node, as the default value\n  // gets saved as a string '[1,1]' instead of an array [1,1] (should be without quotes)\n  // protected default_value(){\n  // \tlet default_value = this._param.default_value()\n  // \tif(CoreType.isString(default_value)){\n  // \t\tdefault_value = `'${default_value}'`\n  // \t}\n  // \tif (CoreType.isArray(default_value)){\n  // \t\tdefault_value = `[${default_value}]`\n  // \t}\n  // \treturn default_value\n  // }\n  add_main() {\n  }\n}\n", "\"use strict\";\nimport { ParamJsonExporter } from \"../Param\";\nexport class ParamNumericJsonExporter extends ParamJsonExporter {\n  add_main() {\n    if (this._require_data_complex()) {\n      this._complex_data[\"raw_input\"] = this._param.rawInputSerialized();\n    } else {\n      return this._param.rawInputSerialized();\n    }\n  }\n}\n", "\"use strict\";\nimport { ParamJsonExporter } from \"../Param\";\nimport { sanitizeExportedString } from \"../sanitize\";\nexport class ParamNodePathJsonExporter extends ParamJsonExporter {\n  add_main() {\n    let val = this._param.rawInput();\n    val = sanitizeExportedString(val);\n    if (this._require_data_complex()) {\n      this._complex_data[\"raw_input\"] = val;\n    } else {\n      return val;\n    }\n  }\n}\n", "\"use strict\";\nimport { ParamJsonExporter } from \"../Param\";\nimport { sanitizeExportedString } from \"../sanitize\";\nexport class ParamParamPathJsonExporter extends ParamJsonExporter {\n  add_main() {\n    let val = this._param.rawInput();\n    val = sanitizeExportedString(val);\n    if (this._require_data_complex()) {\n      this._complex_data[\"raw_input\"] = val;\n    } else {\n      return val;\n    }\n  }\n}\n", "\"use strict\";\nimport { ParamJsonExporter } from \"../Param\";\nimport { sanitizeExportedString } from \"../sanitize\";\nexport class ParamStringJsonExporter extends ParamJsonExporter {\n  add_main() {\n    let val = this._param.rawInput();\n    val = sanitizeExportedString(val);\n    if (this._require_data_complex()) {\n      this._complex_data[\"raw_input\"] = val;\n    } else {\n      return val;\n    }\n  }\n}\n", "\"use strict\";\nimport { ParamJsonExporter } from \"../Param\";\nexport class ParamRampJsonExporter extends ParamJsonExporter {\n  add_main() {\n    if (this._require_data_complex()) {\n      this._complex_data[\"raw_input\"] = this._param.rawInputSerialized();\n    } else {\n      return this._param.rawInputSerialized();\n    }\n  }\n}\n", "\"use strict\";\nimport { NodeJsonExporter } from \"../Node\";\nexport class PolyNodeJsonExporter extends NodeJsonExporter {\n  async nodes_data(options) {\n    var _a;\n    if (options.showPolyNodesData || !((_a = this._node.polyNodeController) == null ? void 0 : _a.locked())) {\n      return await super.nodes_data(options);\n    }\n    return {};\n  }\n  uiData(options) {\n    var _a;\n    if (options.showPolyNodesData || !((_a = this._node.polyNodeController) == null ? void 0 : _a.locked())) {\n      return super.uiData(options);\n    } else {\n      return this.ui_data_without_children();\n    }\n  }\n  async persistedConfigData(shadersData, jsFunctionBodiesData, options) {\n    var _a;\n    if (options.showPolyNodesData || !((_a = this._node.polyNodeController) == null ? void 0 : _a.locked())) {\n      return await super.persistedConfigData(shadersData, jsFunctionBodiesData, options);\n    }\n  }\n}\n", "\"use strict\";\nimport { NodeJsonExporter } from \"./Node\";\nimport { ParamJsonExporter } from \"./Param\";\nimport { ParamNumericJsonExporter } from \"./param/Numeric\";\nimport { ParamNodePathJsonExporter } from \"./param/NodePath\";\nimport { ParamParamPathJsonExporter } from \"./param/ParamPath\";\nimport { ParamStringJsonExporter } from \"./param/String\";\nimport { ParamRampJsonExporter } from \"./param/Ramp\";\nimport { TypedNumericParam } from \"../../../params/_Numeric\";\nimport { NodePathParam } from \"../../../params/NodePath\";\nimport { ParamPathParam } from \"../../../params/ParamPath\";\nimport { StringParam } from \"../../../params/String\";\nimport { RampParam } from \"../../../params/Ramp\";\nimport { PolyNodeJsonExporter } from \"./nodes/Poly\";\nexport class JsonExportDispatcher {\n  dispatchNode(node) {\n    if (node.polyNodeController) {\n      return new PolyNodeJsonExporter(node, this);\n    }\n    return new NodeJsonExporter(node, this);\n  }\n  dispatchParam(param) {\n    if (param instanceof TypedNumericParam) {\n      return new ParamNumericJsonExporter(param);\n    }\n    if (param instanceof NodePathParam) {\n      return new ParamNodePathJsonExporter(param);\n    }\n    if (param instanceof ParamPathParam) {\n      return new ParamParamPathJsonExporter(param);\n    }\n    if (param instanceof StringParam) {\n      return new ParamStringJsonExporter(param);\n    }\n    if (param instanceof RampParam) {\n      return new ParamRampJsonExporter(param);\n    }\n    return new ParamJsonExporter(param);\n  }\n}\n", "\"use strict\";\nimport { NodeEvent } from \"./../../../poly/NodeEvent\";\nimport { SceneJsonImporter } from \"../../../io/json/import/Scene\";\nimport { JsonExportDispatcher } from \"../../../io/json/export/Dispatcher\";\nimport { ParamTemplate } from \"../params/ParamsConfig\";\nimport { Poly } from \"../../../Poly\";\nimport { arrayCompact } from \"../../../../core/ArrayUtils\";\nimport { JsonImportDispatcher } from \"../../../io/json/import/Dispatcher\";\nconst _PolyNodeController = class {\n  constructor(node, _definition) {\n    this.node = node;\n    this._definition = _definition;\n    this._locked = true;\n  }\n  static registerCreatePolyNodeFunctionForContext(context, createPolyNodeFunction) {\n    this._createPolyNodeFunctionByContext.set(context, createPolyNodeFunction);\n  }\n  initializeNode() {\n    this._initInputs();\n    this.node.lifecycle.onAfterCreated(() => {\n      this.createChildNodesFromDefinition();\n    });\n  }\n  locked() {\n    return this._locked;\n  }\n  setLockedState(state) {\n    if (state == this._locked) {\n      return;\n    }\n    this._locked = state;\n    this.node.emit(NodeEvent.POLY_NODE_LOCK_STATE_UPDATED);\n  }\n  _initInputs() {\n    const inputsData = this._definition.inputs;\n    if (!inputsData) {\n      return;\n    }\n    const simpleData = inputsData.simple;\n    if (simpleData) {\n      this.node.io.inputs.setCount(simpleData.min, simpleData.max);\n    }\n  }\n  // private _createParamsFromDefinition() {\n  // \tconst paramsData = this._definition.params;\n  // \tif (!paramsData) {\n  // \t\treturn;\n  // \t}\n  // \tfor (let paramData of paramsData) {\n  // \t\tparamData.options = paramData.options || {};\n  // \t\tparamData.options.spare = true;\n  // \t}\n  // \tthis.node.params.updateParams({toAdd: paramsData});\n  // }\n  static setupParamsConfig(paramsConfig, data) {\n    if (!data.params) {\n      return;\n    }\n    for (const paramData of data.params) {\n      const paramName = paramData.name;\n      const paramType = paramData.type;\n      const initValue = paramData.initValue;\n      const options = paramData.options;\n      paramsConfig[paramName] = new ParamTemplate(paramType, initValue, options);\n    }\n  }\n  createChildNodesFromDefinition() {\n    const childrenData = this._definition.nodes;\n    if (!childrenData) {\n      return;\n    }\n    const currentSceneLoadedState = this.node.scene().loadingController.loaded();\n    if (currentSceneLoadedState) {\n      this.node.scene().loadingController.markAsLoading();\n    }\n    const oldLockedState = this.locked();\n    this.setLockedState(false);\n    const sceneImporter = new SceneJsonImporter({});\n    const dispatcher = new JsonImportDispatcher();\n    const nodeImporter = dispatcher.dispatchNonPolyNode(this.node);\n    const exporterData = {\n      // ...this._definition,\n      type: this.node.type(),\n      polyNode: {\n        locked: true\n      }\n    };\n    nodeImporter.create_nodes(sceneImporter, childrenData, exporterData);\n    const uiData = this._definition.ui;\n    if (uiData) {\n      nodeImporter.processNodesUiData(sceneImporter, uiData);\n    }\n    if (currentSceneLoadedState) {\n      this.node.scene().loadingController.markAsLoaded();\n    }\n    this.setLockedState(oldLockedState);\n  }\n  static inputsData(node) {\n    if (node.io.inputs.hasNamedInputs()) {\n      const inputs = node.io.inputs;\n      const connectionPoints = [];\n      const namedInputConnectionPoints = inputs.namedInputConnectionPoints();\n      if (namedInputConnectionPoints) {\n        arrayCompact(namedInputConnectionPoints, connectionPoints);\n      }\n      return {\n        typed: {\n          types: connectionPoints.map((cp) => {\n            return {\n              name: cp.name(),\n              type: cp.type()\n            };\n          })\n        }\n      };\n    } else {\n      return {\n        simple: {\n          min: node.io.inputs.minCount(),\n          max: node.io.inputs.maxInputsCount(),\n          names: node.displayedInputNames()\n        }\n      };\n    }\n  }\n  static async polyNodeData(node, inputsData) {\n    const dispatcher = new JsonExportDispatcher();\n    const rootExporter = dispatcher.dispatchNode(node);\n    const nodesData = await rootExporter.data({ showPolyNodesData: true });\n    const uiData = rootExporter.uiData({ showPolyNodesData: true });\n    const nodeInputsData = inputsData || this.inputsData(node);\n    const data = {\n      metadata: {\n        version: {\n          polygonjs: \"1\"\n        },\n        createdAt: 1\n      },\n      nodeContext: node.context(),\n      inputs: nodeInputsData,\n      params: node.params.non_spare.filter((p) => p.parentParam() == null).map((param) => {\n        const paramData = {\n          name: param.name(),\n          type: param.type(),\n          initValue: param.defaultValueSerialized(),\n          rawInput: param.rawInputSerialized(),\n          options: param.options.current()\n        };\n        return paramData;\n      }),\n      nodes: nodesData.nodes,\n      ui: uiData.nodes\n    };\n    return data;\n  }\n  static _createNodeClass(nodeContext, nodeType, data) {\n    const createFunction = this._createPolyNodeFunctionByContext.get(nodeContext);\n    if (!createFunction) {\n      return;\n    }\n    return createFunction(nodeType, data, _PolyNodeController);\n  }\n  static createNodeClassAndRegister(dataRegister) {\n    const { node_context, node_type, data } = dataRegister;\n    const nodeClass = this._createNodeClass(node_context, node_type, data);\n    if (nodeClass) {\n      let registerMapForContext = this._definitionRegister.get(node_context);\n      if (!registerMapForContext) {\n        registerMapForContext = /* @__PURE__ */ new Map();\n        this._definitionRegister.set(node_context, registerMapForContext);\n      }\n      registerMapForContext.set(node_type, data);\n      Poly.registerNode(nodeClass, \"polyNodes\", { polyNode: true });\n    } else {\n      console.warn(\"failed to create node from definition\", node_context, node_type, data);\n    }\n  }\n  static definition(context, type) {\n    var _a;\n    return (_a = this._definitionRegister.get(context)) == null ? void 0 : _a.get(type);\n  }\n  static register() {\n    return this._definitionRegister;\n  }\n};\nexport let PolyNodeController = _PolyNodeController;\nPolyNodeController._createPolyNodeFunctionByContext = /* @__PURE__ */ new Map();\nPolyNodeController._definitionRegister = /* @__PURE__ */ new Map();\n"],
  "mappings": "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",
  "names": ["_buttonConfig", "_buttonConfig", "_buttonConfig", "_buttonConfig", "_buttonsConfig", "hasPropertiesWithCursorMoveLessThan", "hasPropertiesWithCursorMoveLessThan", "_buttonsConfig", "_buttonConfig", "hasPropertiesWithCursorMoveLessThan", "_buttonConfig", "hasPropertiesWithCursorMoveLessThan", "_buttonConfig", "_cursorDelta", "_buttonConfig", "ref", "CallbackOptions", "CallbackOptions", "CallbackOptions", "CALLBACK_NAME", "CallbackOptions", "CallbackOptions"]
}
