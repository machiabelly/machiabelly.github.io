{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder.js"],
  "sourcesContent": ["\"use strict\";\nimport { NodeParamsConfig } from \"../utils/params/ParamsConfig\";\nimport {\n  UniformsTransparencyParamConfig,\n  UniformsTransparencyController\n} from \"./utils/UniformsTransparencyController\";\nimport {\n  AdvancedCommonController,\n  AdvancedCommonParamConfig\n} from \"./utils/AdvancedCommonController\";\nimport { MapParamConfig, TextureMapController } from \"./utils/TextureMapController\";\nimport {\n  AlphaMapParamConfig,\n  TextureAlphaMapController\n} from \"./utils/TextureAlphaMapController\";\nimport {\n  TextureBumpMapController,\n  BumpMapParamConfig\n} from \"./utils/TextureBumpMapController\";\nimport {\n  TextureEmissiveMapController,\n  EmissiveMapParamConfig\n} from \"./utils/TextureEmissiveMapController\";\nimport { TextureEnvMapController, EnvMapParamConfig } from \"./utils/TextureEnvMapController\";\nimport { TextureAOMapController, AOMapParamConfig } from \"./utils/TextureAOMapController\";\nimport {\n  TextureNormalMapController,\n  NormalMapParamConfig\n} from \"./utils/TextureNormalMapController\";\nimport {\n  TextureMetalnessRoughnessMapController,\n  MetalnessRoughnessMapParamConfig\n} from \"./utils/TextureMetalnessRoughnessMapController\";\nimport {\n  TextureLightMapController,\n  LightMapParamConfig\n} from \"./utils/TextureLightMapController\";\nimport {\n  TextureDisplacementMapController,\n  DisplacementMapParamConfig\n} from \"./utils/TextureDisplacementMapController\";\nimport { BaseBuilderParamConfig, TypedBuilderMatNode } from \"./_BaseBuilder\";\nimport { AssemblerName } from \"../../poly/registers/assemblers/_BaseRegister\";\nimport { Poly } from \"../../Poly\";\nimport { FogParamConfig, UniformFogController } from \"./utils/UniformsFogController\";\nimport {\n  WireframeShaderMaterialController,\n  WireframeShaderMaterialParamsConfig\n} from \"./utils/WireframeShaderMaterialController\";\nimport { DefaultFolderParamConfig } from \"./utils/DefaultFolder\";\nimport { TexturesFolderParamConfig } from \"./utils/TexturesFolder\";\nimport { AdvancedFolderParamConfig } from \"./utils/AdvancedFolder\";\nimport { PCSSController, PCSSParamConfig } from \"./utils/PCSSController\";\nimport {\n  CustomMaterialMeshParamConfig,\n  materialMeshAssemblerCustomMaterialRequested\n} from \"./utils/customMaterials/CustomMaterialMesh\";\nimport { MatType } from \"../../poly/registers/nodes/types/Mat\";\nclass MeshStandardBuilderMatParamsConfig extends CustomMaterialMeshParamConfig(\n  PCSSParamConfig(\n    FogParamConfig(\n      WireframeShaderMaterialParamsConfig(\n        AdvancedCommonParamConfig(\n          BaseBuilderParamConfig(\n            /* advanced */\n            AdvancedFolderParamConfig(\n              MetalnessRoughnessMapParamConfig(\n                NormalMapParamConfig(\n                  LightMapParamConfig(\n                    EnvMapParamConfig(\n                      EmissiveMapParamConfig(\n                        DisplacementMapParamConfig(\n                          BumpMapParamConfig(\n                            AOMapParamConfig(\n                              AlphaMapParamConfig(\n                                MapParamConfig(\n                                  /* textures */\n                                  TexturesFolderParamConfig(\n                                    UniformsTransparencyParamConfig(\n                                      DefaultFolderParamConfig(NodeParamsConfig)\n                                    )\n                                  )\n                                )\n                              )\n                            )\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n) {\n}\nconst ParamsConfig = new MeshStandardBuilderMatParamsConfig();\nexport class MeshStandardBuilderMatNode extends TypedBuilderMatNode {\n  constructor() {\n    super(...arguments);\n    this.paramsConfig = ParamsConfig;\n    this.controllers = {\n      advancedCommon: new AdvancedCommonController(this),\n      alphaMap: new TextureAlphaMapController(this),\n      aoMap: new TextureAOMapController(this),\n      bumpMap: new TextureBumpMapController(this),\n      displacementMap: new TextureDisplacementMapController(this),\n      emissiveMap: new TextureEmissiveMapController(this),\n      envMap: new TextureEnvMapController(this),\n      lightMap: new TextureLightMapController(this),\n      map: new TextureMapController(this),\n      metalnessRoughnessMap: new TextureMetalnessRoughnessMapController(this),\n      normalMap: new TextureNormalMapController(this),\n      PCSS: new PCSSController(this),\n      uniformFog: new UniformFogController(this),\n      uniformTransparency: new UniformsTransparencyController(this),\n      wireframeShader: new WireframeShaderMaterialController(this)\n    };\n    this.controllersList = Object.values(this.controllers);\n  }\n  static type() {\n    return MatType.MESH_STANDARD_BUILDER;\n  }\n  usedAssembler() {\n    return AssemblerName.GL_MESH_STANDARD;\n  }\n  _createAssemblerController() {\n    return Poly.assemblersRegister.assembler(this, this.usedAssembler());\n  }\n  customMaterialRequested(customName) {\n    return materialMeshAssemblerCustomMaterialRequested(this, customName);\n  }\n  async cook() {\n    this._material = this._material || this.createMaterial();\n    await Promise.all(this.controllersPromises(this._material));\n    this.compileIfRequired(this._material);\n    this.setMaterial(this._material);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,IAAM,qCAAN,cAAiD;AAAA,EAC/C;AAAA,IACE;AAAA,MACE;AAAA,QACE;AAAA,UACE;AAAA;AAAA,YAEE;AAAA,cACE;AAAA,gBACE;AAAA,kBACE;AAAA,oBACE;AAAA,sBACE;AAAA,wBACE;AAAA,0BACE;AAAA,4BACE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA,kCAEE;AAAA,oCACE;AAAA,sCACE,yBAAyB,gBAAgB;AAAA,oCAC3C;AAAA,kCACF;AAAA,gCACF;AAAA,8BACF;AAAA,4BACF;AAAA,0BACF;AAAA,wBACF;AAAA,sBACF;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,EAAE;AACF;AACA,IAAM,eAAe,IAAI,mCAAmC;AACrD,IAAM,6BAAN,cAAyC,oBAAoB;AAAA,EAClE,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,SAAK,eAAe;AACpB,SAAK,cAAc;AAAA,MACjB,gBAAgB,IAAI,yBAAyB,IAAI;AAAA,MACjD,UAAU,IAAI,0BAA0B,IAAI;AAAA,MAC5C,OAAO,IAAI,uBAAuB,IAAI;AAAA,MACtC,SAAS,IAAI,yBAAyB,IAAI;AAAA,MAC1C,iBAAiB,IAAI,iCAAiC,IAAI;AAAA,MAC1D,aAAa,IAAI,6BAA6B,IAAI;AAAA,MAClD,QAAQ,IAAI,wBAAwB,IAAI;AAAA,MACxC,UAAU,IAAI,0BAA0B,IAAI;AAAA,MAC5C,KAAK,IAAI,qBAAqB,IAAI;AAAA,MAClC,uBAAuB,IAAI,uCAAuC,IAAI;AAAA,MACtE,WAAW,IAAI,2BAA2B,IAAI;AAAA,MAC9C,MAAM,IAAI,eAAe,IAAI;AAAA,MAC7B,YAAY,IAAI,qBAAqB,IAAI;AAAA,MACzC,qBAAqB,IAAI,+BAA+B,IAAI;AAAA,MAC5D,iBAAiB,IAAI,kCAAkC,IAAI;AAAA,IAC7D;AACA,SAAK,kBAAkB,OAAO,OAAO,KAAK,WAAW;AAAA,EACvD;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,QAAQ;AAAA,EACjB;AAAA,EACA,gBAAgB;AACd,WAAO,cAAc;AAAA,EACvB;AAAA,EACA,6BAA6B;AAC3B,WAAO,KAAK,mBAAmB,UAAU,MAAM,KAAK,cAAc,CAAC;AAAA,EACrE;AAAA,EACA,wBAAwB,YAAY;AAClC,WAAO,6CAA6C,MAAM,UAAU;AAAA,EACtE;AAAA,EACA,MAAM,OAAO;AACX,SAAK,YAAY,KAAK,aAAa,KAAK,eAAe;AACvD,UAAM,QAAQ,IAAI,KAAK,oBAAoB,KAAK,SAAS,CAAC;AAC1D,SAAK,kBAAkB,KAAK,SAAS;AACrC,SAAK,YAAY,KAAK,SAAS;AAAA,EACjC;AACF;",
  "names": []
}
