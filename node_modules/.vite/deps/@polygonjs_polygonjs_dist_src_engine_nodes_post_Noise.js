import {
  PostParamOptions,
  TypedPostNode
} from "./chunk-XZUXL6QV.js";
import {
  EffectPass,
  NoiseEffect
} from "./chunk-XZSUAFIT.js";
import "./chunk-ALDW4QX7.js";
import {
  NodeParamsConfig,
  ParamConfig
} from "./chunk-FUAFRKQ7.js";
import "./chunk-RVFV2LA3.js";
import "./chunk-O564GFGZ.js";
import {
  Vector2
} from "./chunk-6OBTIB4K.js";
import "./chunk-PQDBXNT6.js";
import "./chunk-UXIASGQL.js";

// node_modules/@polygonjs/polygonjs/dist/src/engine/nodes/post/Noise.js
var NoisePostParamsConfig = class extends NodeParamsConfig {
  constructor() {
    super(...arguments);
    this.strength = ParamConfig.FLOAT(1, {
      range: [0, 1],
      rangeLocked: [true, false],
      ...PostParamOptions
    });
    this.premultiply = ParamConfig.BOOLEAN(1, {
      ...PostParamOptions
    });
  }
};
var ParamsConfig = new NoisePostParamsConfig();
var NoisePostNode = class extends TypedPostNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
    this._rendererSize = new Vector2();
  }
  static type() {
    return "noise";
  }
  createPass(context) {
    context.renderer.getSize(this._rendererSize);
    const effect = new NoiseEffect({});
    const pass = new EffectPass(context.camera, effect);
    this.updatePass(pass);
    return pass;
  }
  updatePass(pass) {
    const effect = pass.effects[0];
    effect.premultiply = this.pv.premultiply;
    effect.blendMode.opacity.value = this.pv.strength;
  }
};
export {
  NoisePostNode
};
//# sourceMappingURL=@polygonjs_polygonjs_dist_src_engine_nodes_post_Noise.js.map
