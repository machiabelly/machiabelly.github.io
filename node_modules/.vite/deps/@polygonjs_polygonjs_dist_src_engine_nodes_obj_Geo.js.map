{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/ChildrenDisplayControllerSpecialized.js", "../../@polygonjs/polygonjs/dist/src/core/geometry/modules/cad/utils/TesselationParamsConfig.js", "../../@polygonjs/polygonjs/dist/src/core/geometry/modules/csg/utils/TesselationParamsConfig.js", "../../@polygonjs/polygonjs/dist/src/core/geometry/modules/quad/utils/TesselationParamsConfig.js", "../../@polygonjs/polygonjs/dist/src/core/geometry/modules/tet/utils/TesselationParamsConfig.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/TesselationParams.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo.js"],
  "sourcesContent": ["\"use strict\";\nimport { ObjChildrenDisplayController } from \"./ObjChildrenDisplayController\";\nimport { Poly } from \"../../../Poly\";\nexport class ChildrenDisplayControllerSpecialized extends ObjChildrenDisplayController {\n  constructor(node) {\n    super(node);\n    this.node = node;\n  }\n  _addSpecializedObjects(displayNode, coreGroup, newObjects) {\n    const _newObjectsAreDifferent = Poly.specializedChildren.runHooks(\n      displayNode,\n      coreGroup,\n      newObjects,\n      this.node.pv\n    );\n    if (_newObjectsAreDifferent) {\n      this._newObjectsAreDifferent = _newObjectsAreDifferent;\n    }\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../../../engine/nodes/utils/params/ParamsConfig\";\nconst DEFAULT = {\n  edgesColor: [0.1, 0.7, 0.2]\n};\nexport function SOPCADTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param linear Tolerance */\n      this.linearTolerance = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param angular Tolerance */\n      this.angularTolerance = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param curve Abscissa */\n      this.curveAbscissa = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param curve Tolerance */\n      this.curveTolerance = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param display edges */\n      this.displayEdges = ParamConfig.BOOLEAN(true, {\n        separatorBefore: true\n      });\n      /** @param edges color */\n      this.edgesColor = ParamConfig.COLOR(DEFAULT.edgesColor, {\n        visibleIf: {\n          displayEdges: true\n        }\n      });\n      /** @param display meshes */\n      this.displayMeshes = ParamConfig.BOOLEAN(true);\n      /** @param meshes color */\n      this.meshesColor = ParamConfig.COLOR([1, 1, 1], {\n        visibleIf: {\n          displayMeshes: true\n        }\n      });\n      /** @param wireframe */\n      this.wireframe = ParamConfig.BOOLEAN(false, {\n        visibleIf: {\n          displayMeshes: true\n        }\n      });\n    }\n  };\n}\nexport function OBJCADTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param linear Tolerance */\n      this.CADLinearTolerance = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param angular Tolerance */\n      this.CADAngularTolerance = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param curve Abscissa */\n      this.CADCurveAbscissa = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param curve Tolerance */\n      this.CADCurveTolerance = ParamConfig.FLOAT(0.1, {\n        range: [1e-3, 1],\n        rangeLocked: [true, false]\n      });\n      /** @param display edges */\n      this.CADDisplayEdges = ParamConfig.BOOLEAN(true, {\n        separatorBefore: true\n      });\n      /** @param edges color */\n      this.CADEdgesColor = ParamConfig.COLOR(DEFAULT.edgesColor, {\n        visibleIf: {\n          CADDisplayEdges: true\n        }\n      });\n      /** @param display meshes */\n      this.CADDisplayMeshes = ParamConfig.BOOLEAN(true);\n      /** @param meshes color */\n      this.CADMeshesColor = ParamConfig.COLOR([1, 1, 1], {\n        visibleIf: {\n          CADDisplayMeshes: true\n        }\n      });\n      /** @param wireframe */\n      this.CADWireframe = ParamConfig.BOOLEAN(false, {\n        visibleIf: {\n          CADDisplayMeshes: true\n        }\n      });\n    }\n  };\n}\nexport const TESSELATION_PARAM_NAMES = /* @__PURE__ */ new Set([\n  \"CADLinearTolerance\",\n  \"CADAngularTolerance\",\n  \"CADCurveAbscissa\",\n  \"CADCurveTolerance\",\n  \"CADDisplayEdges\",\n  \"CADEdgesColor\",\n  \"CADDisplayMeshes\",\n  \"CADMeshesColor\",\n  \"CADWireframe\"\n]);\nexport function addCADTesselationParamsCallback(node, callback) {\n  node.params.onParamsCreated(\"CADtesselationParamsHooks\", () => {\n    const params = node.params.all;\n    for (const param of params) {\n      if (TESSELATION_PARAM_NAMES.has(param.name())) {\n        param.options.setOption(\"callback\", callback);\n      }\n    }\n  });\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../../../engine/nodes/utils/params/ParamsConfig\";\nconst DEFAULT = {\n  facetAngle: 45,\n  linesColor: [0.4, 0.1, 0.6]\n};\nexport function SOPCSGTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param linear Tolerance */\n      this.facetAngle = ParamConfig.FLOAT(DEFAULT.facetAngle, {\n        range: [0, 180],\n        rangeLocked: [true, false]\n      });\n      /** @param edges color */\n      this.linesColor = ParamConfig.COLOR(DEFAULT.linesColor);\n      /** @param meshes color */\n      this.meshesColor = ParamConfig.COLOR([1, 1, 1]);\n      /** @param wireframe */\n      this.wireframe = ParamConfig.BOOLEAN(false);\n    }\n  };\n}\nexport function OBJCSGTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param linear Tolerance */\n      this.CSGFacetAngle = ParamConfig.FLOAT(DEFAULT.facetAngle, {\n        range: [0, 180],\n        rangeLocked: [true, false]\n      });\n      /** @param edges color */\n      this.CSGLinesColor = ParamConfig.COLOR(DEFAULT.linesColor);\n      /** @param meshes color */\n      this.CSGMeshesColor = ParamConfig.COLOR([1, 1, 1]);\n      /** @param wireframe */\n      this.CSGWireframe = ParamConfig.BOOLEAN(false);\n    }\n  };\n}\nexport const TESSELATION_PARAM_NAMES = /* @__PURE__ */ new Set([\n  \"CSGFacetAngle\",\n  \"CSGLinesColor\",\n  \"CSGMeshesColor\",\n  \"CSGWireframe\"\n]);\nexport function addCSGTesselationParamsCallback(node, callback) {\n  node.params.onParamsCreated(\"CSGtesselationParamsHooks\", () => {\n    const params = node.params.all;\n    for (const param of params) {\n      if (TESSELATION_PARAM_NAMES.has(param.name())) {\n        param.options.setOption(\"callback\", callback);\n      }\n    }\n  });\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../../../engine/nodes/utils/params/ParamsConfig\";\nexport function SOPQUADTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param triangles */\n      this.triangles = ParamConfig.BOOLEAN(true);\n      /** @param wireframe */\n      this.wireframe = ParamConfig.BOOLEAN(true, {\n        separatorBefore: true\n      });\n      /** @param unsharedEdges */\n      this.unsharedEdges = ParamConfig.BOOLEAN(false, {\n        visibleIf: { wireframe: true }\n      });\n      /** @param wireframe color */\n      this.wireframeColor = ParamConfig.COLOR([0, 0, 0], {\n        visibleIf: { wireframe: true }\n      });\n      /** @param center */\n      this.center = ParamConfig.BOOLEAN(false, {\n        separatorBefore: true\n      });\n      /** @param innerRadius */\n      this.innerRadius = ParamConfig.BOOLEAN(false, {\n        visibleIf: { center: true }\n      });\n      /** @param outerRadius */\n      this.outerRadius = ParamConfig.BOOLEAN(false, {\n        visibleIf: { center: true }\n      });\n      /** @param split quads */\n      this.splitQuads = ParamConfig.BOOLEAN(false, {\n        separatorBefore: true,\n        visibleIf: [{ triangles: true }, { wireframe: true }]\n      });\n      /** @param pointAttributes */\n      this.pointAttributes = ParamConfig.STRING(\"*\", {\n        visibleIf: [{ triangles: true }]\n      });\n      /** @param primitiveAttributes */\n      this.primitiveAttributes = ParamConfig.STRING(\"*\");\n    }\n  };\n}\nexport function OBJQUADTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param wireframe */\n      this.QUADTriangles = ParamConfig.BOOLEAN(true);\n      /** @param wireframe */\n      this.QUADWireframe = ParamConfig.BOOLEAN(true, {\n        separatorBefore: true\n      });\n      /** @param unsharedEdges */\n      this.QUADUnsharedEdges = ParamConfig.BOOLEAN(false, {\n        visibleIf: { wireframe: true }\n      });\n      /** @param wireframe color */\n      this.QUADWireframeColor = ParamConfig.COLOR([0, 0, 0], {\n        visibleIf: { QUADWireframe: true }\n      });\n      /** @param center */\n      this.QUADCenter = ParamConfig.BOOLEAN(false, {\n        separatorBefore: true\n      });\n      /** @param QUADInnerRadius */\n      this.QUADInnerRadius = ParamConfig.BOOLEAN(false, {\n        visibleIf: { QUADCenter: true }\n      });\n      /** @param QUADOuterRadius */\n      this.QUADOuterRadius = ParamConfig.BOOLEAN(false, {\n        visibleIf: { QUADCenter: true }\n      });\n      /** @param split quads */\n      this.QUADSplitQuads = ParamConfig.BOOLEAN(false, {\n        separatorBefore: true,\n        visibleIf: [{ QUADTriangles: true }, { QUADWireframe: true }]\n      });\n      /** @param pointAttributes */\n      this.QUADPointAttributes = ParamConfig.STRING(\"*\", {\n        visibleIf: [{ QUADTriangles: true }]\n      });\n      /** @param primitiveAttributes */\n      this.QUADPrimitiveAttributes = ParamConfig.STRING(\"*\");\n    }\n  };\n}\nexport const TESSELATION_PARAM_NAMES = /* @__PURE__ */ new Set([\"QUADTriangles\", \"QUADWireframe\"]);\nexport function addQUADTesselationParamsCallback(node, callback) {\n  node.params.onParamsCreated(\"QUADtesselationParamsHooks\", () => {\n    const params = node.params.all;\n    for (const param of params) {\n      if (TESSELATION_PARAM_NAMES.has(param.name())) {\n        param.options.setOption(\"callback\", callback);\n      }\n    }\n  });\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../../../../engine/nodes/utils/params/ParamsConfig\";\nexport const DEFAULT = {\n  scale: 1,\n  displayOuterMesh: false,\n  displayTetMesh: true,\n  displayLines: false,\n  displaySharedFaces: false,\n  displayPoints: false,\n  displayCenter: false,\n  displaySphere: false\n};\nexport function SOPTetTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param tet scale */\n      this.scale = ParamConfig.FLOAT(DEFAULT.scale, {\n        range: [0, 1],\n        rangeLocked: [true, true]\n      });\n      /** @param display outer mesh */\n      this.displayOuterMesh = ParamConfig.BOOLEAN(DEFAULT.displayOuterMesh);\n      /** @param display tet mesh */\n      this.displayTetMesh = ParamConfig.BOOLEAN(DEFAULT.displayTetMesh);\n      /** @param display lines */\n      this.displayLines = ParamConfig.BOOLEAN(DEFAULT.displayLines);\n      /** @param display shared faces */\n      this.displaySharedFaces = ParamConfig.BOOLEAN(DEFAULT.displaySharedFaces);\n      /** @param display points */\n      this.displayPoints = ParamConfig.BOOLEAN(DEFAULT.displayCenter);\n      /** @param display center */\n      this.displayCenter = ParamConfig.BOOLEAN(DEFAULT.displayCenter);\n      /** @param display sphere */\n      this.displaySphere = ParamConfig.BOOLEAN(DEFAULT.displaySphere);\n    }\n  };\n}\nexport function OBJTetTesselationParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param tet scale */\n      this.TetScale = ParamConfig.FLOAT(DEFAULT.scale, {\n        range: [0, 1],\n        rangeLocked: [true, true]\n      });\n      /** @param display outer mesh */\n      this.TetDisplayOuterMesh = ParamConfig.BOOLEAN(DEFAULT.displayOuterMesh);\n      /** @param display tet mesh */\n      this.TetDisplayTetMesh = ParamConfig.BOOLEAN(DEFAULT.displayTetMesh);\n      /** @param display lines */\n      this.TetDisplayLines = ParamConfig.BOOLEAN(DEFAULT.displayLines);\n      /** @param display lines */\n      this.TetDisplaySharedFaces = ParamConfig.BOOLEAN(DEFAULT.displaySharedFaces);\n      /** @param display points */\n      this.TetDisplayPoints = ParamConfig.BOOLEAN(DEFAULT.displayPoints);\n      /** @param display center */\n      this.TetDisplayCenter = ParamConfig.BOOLEAN(DEFAULT.displayCenter);\n      /** @param display sphere */\n      this.TetDisplaySphere = ParamConfig.BOOLEAN(DEFAULT.displaySphere);\n    }\n  };\n}\nexport const TESSELATION_PARAM_NAMES = /* @__PURE__ */ new Set([\n  \"TetScale\",\n  \"TetDisplayMesh\",\n  \"TetDisplayLines\",\n  \"TetDisplaySharedFaces\",\n  \"TetDisplayPoints\",\n  \"TetDisplayCenter\",\n  \"TetDisplaySphere\"\n]);\nexport function addTetTesselationParamsCallback(node, callback) {\n  node.params.onParamsCreated(\"TettesselationParamsHooks\", () => {\n    const params = node.params.all;\n    for (const param of params) {\n      if (TESSELATION_PARAM_NAMES.has(param.name())) {\n        param.options.setOption(\"callback\", callback);\n      }\n    }\n  });\n}\n", "\"use strict\";\nimport { TypedObjNode } from \"../_Base\";\nimport { NodeParamsConfig, ParamConfig } from \"../../utils/params/ParamsConfig\";\nimport { OBJCADTesselationParamConfig } from \"../../../../core/geometry/modules/cad/utils/TesselationParamsConfig\";\nimport { OBJCSGTesselationParamConfig } from \"../../../../core/geometry/modules/csg/utils/TesselationParamsConfig\";\nimport { OBJQUADTesselationParamConfig } from \"../../../../core/geometry/modules/quad/utils/TesselationParamsConfig\";\nimport { OBJTetTesselationParamConfig } from \"../../../../core/geometry/modules/tet/utils/TesselationParamsConfig\";\nexport function ObjCADTesselationFolderParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.CAD = ParamConfig.FOLDER();\n    }\n  };\n}\nexport function ObjCSGTesselationFolderParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.CSG = ParamConfig.FOLDER();\n    }\n  };\n}\nexport function ObjQUADTesselationFolderParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.QUAD = ParamConfig.FOLDER();\n    }\n  };\n}\nexport function ObjTetTesselationFolderParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.TET = ParamConfig.FOLDER();\n    }\n  };\n}\nexport function ObjTesselationParamConfig(Base) {\n  return class Mixin extends OBJTetTesselationParamConfig(\n    ObjTetTesselationFolderParamConfig(\n      OBJQUADTesselationParamConfig(\n        ObjQUADTesselationFolderParamConfig(\n          OBJCSGTesselationParamConfig(\n            ObjCSGTesselationFolderParamConfig(\n              OBJCADTesselationParamConfig(ObjCADTesselationFolderParamConfig(Base))\n            )\n          )\n        )\n        //\t\t)\n        //)\n      )\n    )\n  ) {\n  };\n}\nclass TesselationParamParamsConfig extends ObjTesselationParamConfig(NodeParamsConfig) {\n}\nexport class TesselationParamsObjNode extends TypedObjNode {\n}\n", "\"use strict\";\nimport { TypedObjNode } from \"./_Base\";\nimport { Group } from \"three\";\nimport { DisplayNodeController } from \"../utils/DisplayNodeController\";\nimport { NodeContext } from \"../../poly/NodeContext\";\nimport { FlagsControllerD } from \"../utils/FlagsController\";\nimport { HierarchyController } from \"./utils/HierarchyController\";\nimport { NodeParamsConfig, ParamConfig } from \"../utils/params/ParamsConfig\";\nimport { ChildrenDisplayControllerSpecialized } from \"./utils/ChildrenDisplayControllerSpecialized\";\nimport { isBooleanTrue } from \"../../../core/BooleanValue\";\nimport { ObjType } from \"../../poly/registers/nodes/types/Obj\";\nimport { TransformedParamConfig, TransformController } from \"./utils/TransformController\";\nimport { ObjTesselationParamConfig } from \"./utils/TesselationParams\";\nimport { addCADTesselationParamsCallback } from \"../../../core/geometry/modules/cad/utils/TesselationParamsConfig\";\nimport { addCSGTesselationParamsCallback } from \"../../../core/geometry/modules/csg/utils/TesselationParamsConfig\";\nimport { addQUADTesselationParamsCallback } from \"../../../core/geometry/modules/quad/utils/TesselationParamsConfig\";\nimport { addTetTesselationParamsCallback } from \"../../../core/geometry/modules/tet/utils/TesselationParamsConfig\";\nexport function GeoParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param toggle off to hide */\n      this.display = ParamConfig.BOOLEAN(1);\n      /** @param set render order */\n      this.renderOrder = ParamConfig.INTEGER(0, {\n        range: [0, 10],\n        rangeLocked: [true, false]\n      });\n    }\n  };\n}\nclass GeoObjParamConfig extends ObjTesselationParamConfig(GeoParamConfig(TransformedParamConfig(NodeParamsConfig))) {\n}\nconst ParamsConfig = new GeoObjParamConfig();\nexport class GeoObjNode extends TypedObjNode {\n  constructor() {\n    super(...arguments);\n    this.paramsConfig = ParamsConfig;\n    this.hierarchyController = new HierarchyController(this);\n    this.transformController = new TransformController(this);\n    this.flags = new FlagsControllerD(this);\n    // display_node and children_display controllers\n    this.childrenDisplayController = new ChildrenDisplayControllerSpecialized(this);\n    this.displayNodeController = new DisplayNodeController(\n      this,\n      this.childrenDisplayController.displayNodeControllerCallbacks()\n    );\n    //\n    this._childrenControllerContext = NodeContext.SOP;\n    this._onChildAddBound = this._onChildAdd.bind(this);\n  }\n  static type() {\n    return ObjType.GEO;\n  }\n  createObject() {\n    const group = new Group();\n    group.matrixAutoUpdate = false;\n    return group;\n  }\n  initializeNode() {\n    this.lifecycle.onChildAdd(this._onChildAddBound);\n    this.hierarchyController.initializeNode();\n    this.transformController.initializeNode();\n    this.childrenDisplayController.initializeNode();\n    const _updateSpecializedChildren = () => {\n      this.childrenDisplayController.requestDisplayNodeContainer();\n    };\n    addCADTesselationParamsCallback(this, _updateSpecializedChildren);\n    addCSGTesselationParamsCallback(this, _updateSpecializedChildren);\n    addQUADTesselationParamsCallback(this, _updateSpecializedChildren);\n    addTetTesselationParamsCallback(this, _updateSpecializedChildren);\n  }\n  createNode(node_class, options) {\n    return super.createNode(node_class, options);\n  }\n  children() {\n    return super.children();\n  }\n  nodesByType(type) {\n    return super.nodesByType(type);\n  }\n  //\n  //\n  // HOOK\n  //\n  //\n  _onChildAdd(node) {\n    var _a, _b;\n    if (this.scene().loadingController.loaded()) {\n      if (this.children().length == 1) {\n        (_b = (_a = node.flags) == null ? void 0 : _a.display) == null ? void 0 : _b.set(true);\n      }\n    }\n  }\n  //\n  //\n  // COOK\n  //\n  //\n  cook() {\n    this.transformController.update();\n    this.object.visible = isBooleanTrue(this.pv.display);\n    this.object.renderOrder = this.pv.renderOrder;\n    this.cookController.endCook();\n  }\n}\n"],
  "mappings": "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",
  "names": ["DEFAULT", "DEFAULT", "TESSELATION_PARAM_NAMES", "TESSELATION_PARAM_NAMES", "DEFAULT", "DEFAULT", "TESSELATION_PARAM_NAMES"]
}
