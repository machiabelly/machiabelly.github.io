{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/engine/poly/registers/nodes/types/Obj.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/TransformController.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/HierarchyController.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/ObjChildrenDisplayController.js"],
  "sourcesContent": ["\"use strict\";\nexport var ObjType = /* @__PURE__ */ ((ObjType2) => {\n  ObjType2[\"GEO\"] = \"geo\";\n  ObjType2[\"CUBE_CAMERA\"] = \"cubeCamera\";\n  ObjType2[\"AUDIO_LISTENER\"] = \"audioListener\";\n  ObjType2[\"POSITIONAL_AUDIO\"] = \"positionalAudio\";\n  ObjType2[\"SCENE\"] = \"scene\";\n  return ObjType2;\n})(ObjType || {});\n", "\"use strict\";\nimport { TypedObjNode } from \"../_Base\";\nimport { Matrix4 } from \"three\";\nimport { CoreTransform, ROTATION_ORDERS, RotationOrder } from \"../../../../core/Transform\";\nimport { NodeParamsConfig, ParamConfig } from \"../../utils/params/ParamsConfig\";\nimport { isBooleanTrue } from \"../../../../core/BooleanValue\";\nimport { Poly } from \"../../../Poly\";\nexport function TransformedParamConfig(Base, default_params) {\n  const matrixAutoUpdate = (default_params == null ? void 0 : default_params.matrixAutoUpdate) || false;\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.transform = ParamConfig.FOLDER();\n      /** @param toggle on to keep world position when adding a parent or removing from one */\n      this.keepPosWhenParenting = ParamConfig.BOOLEAN(0);\n      /** @param rotation order */\n      this.rotationOrder = ParamConfig.INTEGER(ROTATION_ORDERS.indexOf(RotationOrder.XYZ), {\n        menu: {\n          entries: ROTATION_ORDERS.map((order, v) => {\n            return { name: order, value: v };\n          })\n        }\n      });\n      /** @param translate */\n      this.t = ParamConfig.VECTOR3([0, 0, 0]);\n      /** @param rotation */\n      this.r = ParamConfig.VECTOR3([0, 0, 0]);\n      /** @param scale */\n      this.s = ParamConfig.VECTOR3([1, 1, 1]);\n      /** @param scale */\n      this.scale = ParamConfig.FLOAT(1);\n      // pivot = ParamConfig.VECTOR3([0, 0, 0]);\n      /** @param set for the matrix to be updated every frame */\n      this.matrixAutoUpdate = ParamConfig.BOOLEAN(matrixAutoUpdate ? 1 : 0);\n      this.updateTransformFromObject = ParamConfig.BUTTON(null, {\n        callback: (node) => {\n          TransformController.PARAM_CALLBACK_update_transform_from_object(node);\n        }\n      });\n    }\n    // tlookAt = ParamConfig.BOOLEAN(0);\n    // lookAtPos = ParamConfig.VECTOR3([0, 0, 0], {\n    // \tvisibleIf: {tlookAt: 1},\n    // });\n    // look_at = ParamConfig.OPERATOR_PATH('', {\n    // \tvisibleIf: {tlookAt: 1},\n    // \tnodeSelection: {context: NodeContext.OBJ},\n    // });\n    // up = ParamConfig.VECTOR3([0, 1, 0], {\n    // \tvisibleIf: {tlookAt: 1},\n    // });\n  };\n}\nclass TransformedParamsConfig extends TransformedParamConfig(NodeParamsConfig) {\n}\nexport class TransformedObjNode extends TypedObjNode {\n  constructor() {\n    super(...arguments);\n    this.transformController = new TransformController(this);\n  }\n}\nconst HOOK_NAME = \"_cook_main_without_inputs_when_dirty\";\nexport class TransformController {\n  constructor(node) {\n    this.node = node;\n    // TODO: this will have to be checked via the parent, when I will have obj managers at lower levels than root\n    this._cook_main_without_inputs_when_dirty_bound = this._cook_main_without_inputs_when_dirty.bind(this);\n    this._core_transform = new CoreTransform();\n    // private _keep_pos_when_parenting_t = new Vector3();\n    // private _keep_pos_when_parenting_q = new Quaternion();\n    // private _keep_pos_when_parenting_s = new Vector3();\n    this._keep_pos_when_parenting_m_object = new Matrix4();\n    this._keep_pos_when_parenting_m_new_parent_inv = new Matrix4();\n  }\n  initializeNode() {\n    if (!this.node.dirtyController.hasHook(HOOK_NAME)) {\n      this.node.dirtyController.addPostDirtyHook(HOOK_NAME, this._cook_main_without_inputs_when_dirty_bound);\n    }\n  }\n  async _cook_main_without_inputs_when_dirty() {\n    await this.node.cookController.cookMainWithoutInputs();\n  }\n  update() {\n    this.update_transform_with_matrix();\n    const object = this.node.object;\n    object.matrixAutoUpdate = isBooleanTrue(this.node.pv.matrixAutoUpdate);\n    Poly.onSceneUpdatedHooks.runHooks();\n  }\n  update_transform_with_matrix(matrix) {\n    const object = this.node.object;\n    if (matrix != null && !matrix.equals(object.matrix)) {\n      object.matrix.copy(matrix);\n      object.dispatchEvent({ type: \"change\" });\n    } else {\n      this._update_matrix_from_params_with_core_transform();\n    }\n  }\n  _update_matrix_from_params_with_core_transform() {\n    const object = this.node.object;\n    let prev_auto_update = object.matrixAutoUpdate;\n    if (prev_auto_update) {\n      object.matrixAutoUpdate = false;\n    }\n    const matrix = this._core_transform.matrix(\n      this.node.pv.t,\n      this.node.pv.r,\n      this.node.pv.s,\n      this.node.pv.scale,\n      ROTATION_ORDERS[this.node.pv.rotationOrder]\n    );\n    object.matrix.identity();\n    object.applyMatrix4(matrix);\n    this._apply_look_at();\n    object.updateMatrix();\n    if (prev_auto_update) {\n      object.matrixAutoUpdate = true;\n    }\n    object.dispatchEvent({ type: \"change\" });\n  }\n  // private _look_at_target_t = new Vector3();\n  // private _look_at_target_q = new Quaternion();\n  // private _look_at_target_s = new Vector3();\n  _apply_look_at() {\n  }\n  set_params_from_matrix(matrix, options = {}) {\n    CoreTransform.setParamsFromMatrix(matrix, this.node, options);\n  }\n  //\n  //\n  // KEEP POS WHEN PARENTING\n  //\n  //\n  static update_node_transform_params_if_required(node, new_parent_object) {\n    node.transformController.update_node_transform_params_if_required(new_parent_object);\n  }\n  update_node_transform_params_if_required(new_parent_object) {\n    if (!isBooleanTrue(this.node.pv.keepPosWhenParenting)) {\n      return;\n    }\n    if (!this.node.scene().loadingController.loaded()) {\n      return;\n    }\n    if (new_parent_object == this.node.object.parent) {\n      return;\n    }\n    const object = this.node.object;\n    object.updateMatrixWorld(true);\n    new_parent_object.updateMatrixWorld(true);\n    this._keep_pos_when_parenting_m_object.copy(object.matrixWorld);\n    this._keep_pos_when_parenting_m_new_parent_inv.copy(new_parent_object.matrixWorld);\n    this._keep_pos_when_parenting_m_new_parent_inv.invert();\n    this._keep_pos_when_parenting_m_object.premultiply(this._keep_pos_when_parenting_m_new_parent_inv);\n    CoreTransform.setParamsFromMatrix(this._keep_pos_when_parenting_m_object, this.node, { scale: true });\n  }\n  update_node_transform_params_from_object(update_matrix = false) {\n    const object = this.node.object;\n    if (update_matrix) {\n      object.updateMatrix();\n    }\n    CoreTransform.setParamsFromMatrix(object.matrix, this.node, { scale: true });\n  }\n  //\n  //\n  // CALLBACK\n  //\n  //\n  static PARAM_CALLBACK_update_transform_from_object(node) {\n    node.transformController.update_node_transform_params_from_object();\n  }\n}\n", "\"use strict\";\nimport { NodeParamsConfig } from \"../../utils/params/ParamsConfig\";\nimport { TypedObjNode } from \"../_Base\";\nimport { TransformController } from \"./TransformController\";\nclass HierarchyParamsConfig extends NodeParamsConfig {\n}\nexport class HierarchyObjNode extends TypedObjNode {\n  constructor() {\n    super(...arguments);\n    this.hierarchyController = new HierarchyController(this);\n  }\n}\nexport class HierarchyController {\n  constructor(node) {\n    this.node = node;\n  }\n  initializeNode() {\n    this.node.io.inputs.setCount(0, 1);\n    this.node.io.inputs.setDependsOnInputs(false);\n    this.node.io.outputs.setHasOneOutput();\n    this.node.io.inputs.add_on_set_input_hook(\"on_input_updated:update_parent\", () => {\n      this.on_input_updated();\n    });\n  }\n  static on_input_updated(node) {\n    const parent_object = node.root().getParentForNode(node);\n    if (node.transformController && parent_object) {\n      TransformController.update_node_transform_params_if_required(node, parent_object);\n    }\n    if (node.io.inputs.input(0) != null) {\n      node.root().addToParentTransform(node);\n    } else {\n      node.root().removeFromParentTransform(node);\n    }\n  }\n  on_input_updated() {\n    HierarchyController.on_input_updated(this.node);\n  }\n}\n", "\"use strict\";\nimport { Group } from \"three\";\nimport { Poly } from \"../../../Poly\";\nconst DISPLAY_PARAM_NAME = \"display\";\nexport class ObjChildrenDisplayController {\n  constructor(node) {\n    this.node = node;\n    this._childrenUuids = /* @__PURE__ */ new Set();\n    this._sopGroup = this._createSopGroup();\n    this._newSpecializedObjects = [];\n    this._newObjectsAreDifferent = false;\n    this._scene = this.node.scene();\n  }\n  _createSopGroup() {\n    const group = new Group();\n    group.matrixAutoUpdate = false;\n    return group;\n  }\n  sopGroup() {\n    return this._sopGroup;\n  }\n  setSopGroupName() {\n    this._sopGroup.name = `${this.node.name()}:sopGroup`;\n  }\n  dispose() {\n    this._clearHooks();\n  }\n  displayNodeControllerCallbacks() {\n    return {\n      onDisplayNodeRemove: () => {\n        this.removeChildren();\n      },\n      onDisplayNodeSet: () => {\n        setTimeout(() => {\n          this.requestDisplayNodeContainer();\n        }, 0);\n      },\n      onDisplayNodeUpdate: () => {\n        if (!this.node.scene().loadingController.loaded()) {\n          return;\n        }\n        this.requestDisplayNodeContainer();\n      }\n    };\n  }\n  initializeNode() {\n    var _a;\n    this.node.object.add(this.sopGroup());\n    this.node.nameController.add_post_set_fullPath_hook(this.setSopGroupName.bind(this));\n    this._createSopGroup();\n    const displayFlag = (_a = this.node.flags) == null ? void 0 : _a.display;\n    if (displayFlag) {\n      displayFlag.onUpdate(() => {\n        this._updateSopGroupHierarchy();\n        if (displayFlag.active()) {\n          this.requestDisplayNodeContainer();\n        }\n      });\n    }\n  }\n  _updateSopGroupHierarchy() {\n    var _a;\n    const displayFlag = (_a = this.node.flags) == null ? void 0 : _a.display;\n    if (displayFlag) {\n      const sopGroup = this.sopGroup();\n      if (this.usedInScene()) {\n        sopGroup.visible = true;\n        this.node.object.add(sopGroup);\n        sopGroup.updateMatrix();\n      } else {\n        sopGroup.visible = false;\n        this.node.object.remove(sopGroup);\n      }\n      Poly.onSceneUpdatedHooks.runHooks();\n    }\n  }\n  usedInScene() {\n    var _a, _b;\n    const node = this.node;\n    if (node.disposed() == true) {\n      return false;\n    }\n    const usedInScene = node.usedInScene();\n    if (!usedInScene) {\n      return false;\n    }\n    const displayFlagOn = ((_b = (_a = node.flags) == null ? void 0 : _a.display) == null ? void 0 : _b.active()) || false;\n    if (!displayFlagOn) {\n      return false;\n    }\n    const params = node.params;\n    const hasActiveParam = params.has(DISPLAY_PARAM_NAME);\n    const isActiveParamOn = node.params.boolean(DISPLAY_PARAM_NAME);\n    const paramActiveOn = !hasActiveParam || isActiveParamOn;\n    return paramActiveOn;\n  }\n  async requestDisplayNodeContainer() {\n    if (!this._scene.loadingController.loaded()) {\n      return;\n    }\n    if (this.usedInScene()) {\n      await this._setContentUnderSopGroup();\n    }\n  }\n  removeChildren() {\n    if (this._sopGroup.children.length == 0) {\n      return;\n    }\n    let child;\n    Poly.onObjectsAddRemoveHooks.runOnRemoveHooks(this._scene, this._sopGroup);\n    while (child = this._sopGroup.children[0]) {\n      this._sopGroup.remove(child);\n    }\n    this._childrenUuids.clear();\n    this._notifyCamerasController();\n  }\n  async _setContentUnderSopGroup() {\n    var _a;\n    const displayNode = this.node.displayNodeController.displayNode();\n    if (displayNode && ((_a = displayNode.parent()) == null ? void 0 : _a.graphNodeId()) == this.node.graphNodeId()) {\n      const container = await displayNode.compute();\n      const coreGroup = container.coreContent();\n      if (coreGroup) {\n        const newObjects = coreGroup.threejsObjects();\n        const _checkObjectsHaveChanged = () => {\n          const objectsCountChanged = newObjects.length != this._childrenUuids.size;\n          if (objectsCountChanged) {\n            return true;\n          }\n          for (const object of newObjects) {\n            if (!this._childrenUuids.has(object.uuid)) {\n              return true;\n            }\n          }\n          return false;\n        };\n        this._newObjectsAreDifferent = _checkObjectsHaveChanged();\n        this._newSpecializedObjects.length = 0;\n        this._addSpecializedObjects(displayNode, coreGroup, this._newSpecializedObjects);\n        if (this._newObjectsAreDifferent) {\n          this.removeChildren();\n          const addObject = (object) => {\n            this._sopGroup.add(object);\n            object.updateMatrix();\n            this._childrenUuids.add(object.uuid);\n          };\n          for (const object of newObjects) {\n            addObject(object);\n          }\n          for (const object of this._newSpecializedObjects) {\n            addObject(object);\n          }\n        }\n        this._notifyCamerasController();\n        this._runOnSopGroupUpdatedHooks();\n        if (this._scene.loadingController.loaded()) {\n          Poly.onObjectsAddRemoveHooks.runOnAddHooks(this._scene, this._sopGroup);\n          Poly.onSceneUpdatedHooks.runHooks();\n        }\n        return;\n      }\n    }\n    this.removeChildren();\n    this._runOnSopGroupUpdatedHooks();\n    if (this._scene.loadingController.loaded()) {\n      Poly.onSceneUpdatedHooks.runHooks();\n    }\n  }\n  _notifyCamerasController() {\n    this._scene.camerasController.updateFromChangeInObject(this._sopGroup);\n  }\n  _addSpecializedObjects(displayNode, coreGroup, newObjects) {\n  }\n  registerOnSopGroupUpdated(callbackName, callback) {\n    this._onSopGroupUpdatedHookNames = this._onSopGroupUpdatedHookNames || [];\n    this._onSopGroupUpdatedHooks = this._onSopGroupUpdatedHooks || [];\n    this._onSopGroupUpdatedHookNames.push(callbackName);\n    this._onSopGroupUpdatedHooks.push(callback);\n  }\n  _clearHooks() {\n    if (!this._onSopGroupUpdatedHookNames || !this._onSopGroupUpdatedHooks) {\n      return;\n    }\n    for (const hookName of this._onSopGroupUpdatedHookNames) {\n      this.deregisterOnSopGroupUpdated(hookName);\n    }\n  }\n  deregisterOnSopGroupUpdated(callbackName) {\n    var _a;\n    if (!this._onSopGroupUpdatedHookNames || !this._onSopGroupUpdatedHooks) {\n      return;\n    }\n    const index = (_a = this._onSopGroupUpdatedHookNames) == null ? void 0 : _a.indexOf(callbackName);\n    this._onSopGroupUpdatedHookNames.splice(index, 1);\n    this._onSopGroupUpdatedHooks.splice(index, 1);\n    if (this._onSopGroupUpdatedHookNames.length == 0) {\n      this._onSopGroupUpdatedHookNames = void 0;\n    }\n    if (this._onSopGroupUpdatedHooks.length == 0) {\n      this._onSopGroupUpdatedHooks = void 0;\n    }\n  }\n  _runOnSopGroupUpdatedHooks() {\n    if (this._onSopGroupUpdatedHooks) {\n      const hooks = [...this._onSopGroupUpdatedHooks];\n      for (const hook of hooks) {\n        hook();\n      }\n    }\n  }\n  onSopGroupUpdatedCallbackNames() {\n    return this._onSopGroupUpdatedHookNames;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
