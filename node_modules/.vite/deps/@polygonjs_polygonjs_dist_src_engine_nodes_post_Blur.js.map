{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/core/post/KernelSize.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/post/Blur.js"],
  "sourcesContent": ["\"use strict\";\nimport { KernelSize } from \"postprocessing\";\nexport const KERNEL_SIZES = [\n  KernelSize.VERY_SMALL,\n  KernelSize.SMALL,\n  KernelSize.MEDIUM,\n  KernelSize.LARGE,\n  KernelSize.VERY_LARGE,\n  KernelSize.HUGE\n];\nconst KERNAL_NAME_BY_SIZE = {\n  [KernelSize.VERY_SMALL]: \"VERY_SMALL\",\n  [KernelSize.SMALL]: \"SMALL\",\n  [KernelSize.MEDIUM]: \"MEDIUM\",\n  [KernelSize.LARGE]: \"LARGE\",\n  [KernelSize.VERY_LARGE]: \"VERY_LARGE\",\n  [KernelSize.HUGE]: \"HUGE\"\n};\nexport const KERNEL_SIZE_MENU_OPTIONS = {\n  menu: {\n    entries: KERNEL_SIZES.map((value) => {\n      return {\n        name: KERNAL_NAME_BY_SIZE[value],\n        value\n      };\n    })\n  }\n};\n", "\"use strict\";\nimport { TypedPostNode, PostParamOptions } from \"./_Base\";\nimport { NodeParamsConfig, ParamConfig } from \"../utils/params/ParamsConfig\";\nimport { KawaseBlurPass, KernelSize } from \"postprocessing\";\nimport { KERNEL_SIZES, KERNEL_SIZE_MENU_OPTIONS } from \"../../../core/post/KernelSize\";\nclass BlurPostParamsConfig extends NodeParamsConfig {\n  constructor() {\n    super(...arguments);\n    /** @param amount */\n    this.amount = ParamConfig.FLOAT(1, {\n      range: [0, 2],\n      rangeLocked: [true, false],\n      step: 0.01,\n      ...PostParamOptions\n    });\n    /** @param kernel size */\n    this.kernelSize = ParamConfig.INTEGER(KernelSize.LARGE, {\n      ...PostParamOptions,\n      ...KERNEL_SIZE_MENU_OPTIONS\n    });\n  }\n}\nconst ParamsConfig = new BlurPostParamsConfig();\nexport class BlurPostNode extends TypedPostNode {\n  constructor() {\n    super(...arguments);\n    this.paramsConfig = ParamsConfig;\n  }\n  static type() {\n    return \"blur\";\n  }\n  createPass(context) {\n    const pass = new KawaseBlurPass();\n    this.updatePass(pass);\n    return pass;\n  }\n  updatePass(pass) {\n    pass.scale = this.pv.amount;\n    pass.blurMaterial.kernelSize = KERNEL_SIZES[this.pv.kernelSize];\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAEO,IAAM,eAAe;AAAA,EAC1B,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AACb;AACA,IAAM,sBAAsB;AAAA,EAC1B,CAAC,WAAW,UAAU,GAAG;AAAA,EACzB,CAAC,WAAW,KAAK,GAAG;AAAA,EACpB,CAAC,WAAW,MAAM,GAAG;AAAA,EACrB,CAAC,WAAW,KAAK,GAAG;AAAA,EACpB,CAAC,WAAW,UAAU,GAAG;AAAA,EACzB,CAAC,WAAW,IAAI,GAAG;AACrB;AACO,IAAM,2BAA2B;AAAA,EACtC,MAAM;AAAA,IACJ,SAAS,aAAa,IAAI,CAAC,UAAU;AACnC,aAAO;AAAA,QACL,MAAM,oBAAoB,KAAK;AAAA,QAC/B;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ACtBA,IAAM,uBAAN,cAAmC,iBAAiB;AAAA,EAClD,cAAc;AACZ,UAAM,GAAG,SAAS;AAElB,SAAK,SAAS,YAAY,MAAM,GAAG;AAAA,MACjC,OAAO,CAAC,GAAG,CAAC;AAAA,MACZ,aAAa,CAAC,MAAM,KAAK;AAAA,MACzB,MAAM;AAAA,MACN,GAAG;AAAA,IACL,CAAC;AAED,SAAK,aAAa,YAAY,QAAQ,WAAW,OAAO;AAAA,MACtD,GAAG;AAAA,MACH,GAAG;AAAA,IACL,CAAC;AAAA,EACH;AACF;AACA,IAAM,eAAe,IAAI,qBAAqB;AACvC,IAAM,eAAN,cAA2B,cAAc;AAAA,EAC9C,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,OAAO,OAAO;AACZ,WAAO;AAAA,EACT;AAAA,EACA,WAAW,SAAS;AAClB,UAAM,OAAO,IAAI,eAAe;AAChC,SAAK,WAAW,IAAI;AACpB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,MAAM;AACf,SAAK,QAAQ,KAAK,GAAG;AACrB,SAAK,aAAa,aAAa,aAAa,KAAK,GAAG,UAAU;AAAA,EAChE;AACF;",
  "names": []
}
