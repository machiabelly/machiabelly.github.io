{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/LayersController.js", "../../@polygonjs/polygonjs/dist/src/engine/poly/registers/nodes/types/Rop.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/cameras/RenderController.js", "../../@polygonjs/polygonjs/dist/src/core/helpers/CameraHelper.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/utils/cameras/PostProcessParamOptions.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraControls.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraRenderer.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraCSSRenderer.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraPostProcess.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraRenderScene.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraFrameMode.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraFrameMode.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/_BaseCamera.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/utils/ViewerCamerasController.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/utils/ViewerControlsController.js", "../../@polygonjs/polygonjs/dist/src/core/event/CanvasKeyFocus.js", "../../@polygonjs/polygonjs/dist/src/core/event/WindowEventType.js", "../../@polygonjs/polygonjs/dist/src/core/event/EventEmitter.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/utils/ViewerEventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/utils/ViewerWebglController.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/utils/ViewerAudioController.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/utils/ViewerRaycastersController.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/utils/ViewerPerformanceMonitor.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/_Base.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/rop/_Base.js", "../../@polygonjs/polygonjs/dist/src/core/render/defaultPixelRatio.js", "../../@polygonjs/polygonjs/dist/src/core/cop/ColorSpace.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/rop/WebGLRenderer.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraRendererController.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraCSSRendererController.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraViewerCodeController.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraControlsController.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraRenderSceneController.js", "../../@polygonjs/polygonjs/dist/src/core/webXR/Common.js", "../../@polygonjs/polygonjs/dist/src/core/webXR/webXRVR/CommonVR.js", "../../@polygonjs/polygonjs/dist/src/core/webXR/webXRAR/CommonAR.js", "../../@polygonjs/polygonjs/dist/src/core/camera/webXR/CoreCameraWebXR.js", "../../@polygonjs/polygonjs/dist/src/core/webXR/markerTracking/Common.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraWebXRARMarkerTracking.js", "../../@polygonjs/polygonjs/dist/src/core/camera/webXR/CoreCameraMarkerTracking.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/CameraFPS.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraFPS.js", "../../@polygonjs/polygonjs/dist/src/engine/viewers/Threejs.js", "../../@polygonjs/polygonjs/dist/src/core/camera/frameMode/_BaseCoreCameraFrameMode.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreCameraViewOffset.js", "../../@polygonjs/polygonjs/dist/src/core/camera/frameMode/CoreCameraOrthographicFrameMode.js", "../../@polygonjs/polygonjs/dist/src/core/camera/CoreOrthographicCamera.js", "../../@polygonjs/polygonjs/dist/src/engine/operations/sop/OrthographicCamera.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/obj/OrthographicCamera.js"],
  "sourcesContent": ["\"use strict\";\nconst PARAM_NAME = \"layer\";\nimport { ParamConfig } from \"../../utils/params/ParamsConfig\";\nexport function LayerParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.layer = ParamConfig.INTEGER(0, {\n        range: [0, 31],\n        rangeLocked: [true, true]\n      });\n    }\n  };\n}\nexport class LayersController {\n  constructor(node) {\n    this.node = node;\n  }\n  update() {\n    const object = this.node.object;\n    object.layers.set(0);\n    object.layers.enable(this.node.params.integer(PARAM_NAME));\n  }\n}\n", "\"use strict\";\nexport var RopType = /* @__PURE__ */ ((RopType2) => {\n  RopType2[\"CSS2D\"] = \"CSS2DRenderer\";\n  RopType2[\"CSS3D\"] = \"CSS3DRenderer\";\n  RopType2[\"WEBGL\"] = \"WebGLRenderer\";\n  RopType2[\"WEBGPU\"] = \"WebGPURenderer\";\n  RopType2[\"PATH_TRACING\"] = \"pathTracingRenderer\";\n  return RopType2;\n})(RopType || {});\n", "\"use strict\";\nimport { NodeContext } from \"../../../../poly/NodeContext\";\nimport { RopType } from \"../../../../poly/registers/nodes/types/Rop\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nimport { ObjType } from \"../../../../poly/registers/nodes/types/Obj\";\nexport function CameraRenderParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.render = ParamConfig.FOLDER();\n      /** @param toggle on to override rendered scene */\n      this.setScene = ParamConfig.BOOLEAN(0);\n      /** @param override rendered scene */\n      this.scene = ParamConfig.NODE_PATH(\"\", {\n        visibleIf: { setScene: 1 },\n        nodeSelection: {\n          context: NodeContext.OBJ,\n          types: [ObjType.SCENE]\n        }\n      });\n      /** @param toggle on to override the renderer */\n      this.setRenderer = ParamConfig.BOOLEAN(0);\n      /** @param override renderer used */\n      this.renderer = ParamConfig.NODE_PATH(\"\", {\n        visibleIf: { setRenderer: 1 },\n        nodeSelection: {\n          context: NodeContext.ROP,\n          types: [RopType.WEBGL]\n        },\n        dependentOnFoundNode: true\n      });\n      /** @param toggle on to add a CSSRenderer to have html elements on top of the 3D objects */\n      this.setCSSRenderer = ParamConfig.BOOLEAN(0);\n      /** @param add a css renderer */\n      this.CSSRenderer = ParamConfig.NODE_PATH(\"\", {\n        visibleIf: { setCSSRenderer: 1 },\n        nodeSelection: {\n          context: NodeContext.ROP,\n          types: [RopType.CSS2D, RopType.CSS3D]\n        },\n        dependentOnFoundNode: true\n      });\n    }\n  };\n}\n", "\"use strict\";\nimport {\n  PerspectiveCamera,\n  Vector3,\n  LineSegments,\n  Color,\n  LineBasicMaterial,\n  BufferGeometry,\n  Float32BufferAttribute\n} from \"three\";\nconst _vector = /* @__PURE__ */ new Vector3();\nconst _camera = /* @__PURE__ */ new PerspectiveCamera();\nfunction _createGeometry() {\n  const geometry = new BufferGeometry();\n  const colorFrustum = new Color(16755200);\n  const colorCone = new Color(16711680);\n  const colorUp = new Color(43775);\n  const colorTarget = new Color(16777215);\n  const colorCross = new Color(3355443);\n  const vertices = [];\n  const colors = [];\n  const pointMap = {};\n  function addLine(a, b, color) {\n    addPoint(a, color);\n    addPoint(b, color);\n  }\n  function addPoint(id, color) {\n    vertices.push(0, 0, 0);\n    colors.push(color.r, color.g, color.b);\n    if (pointMap[id] === void 0) {\n      pointMap[id] = [];\n    }\n    pointMap[id].push(vertices.length / 3 - 1);\n  }\n  addLine(\"n1\", \"n2\", colorFrustum);\n  addLine(\"n2\", \"n4\", colorFrustum);\n  addLine(\"n4\", \"n3\", colorFrustum);\n  addLine(\"n3\", \"n1\", colorFrustum);\n  addLine(\"f1\", \"f2\", colorFrustum);\n  addLine(\"f2\", \"f4\", colorFrustum);\n  addLine(\"f4\", \"f3\", colorFrustum);\n  addLine(\"f3\", \"f1\", colorFrustum);\n  addLine(\"n1\", \"f1\", colorFrustum);\n  addLine(\"n2\", \"f2\", colorFrustum);\n  addLine(\"n3\", \"f3\", colorFrustum);\n  addLine(\"n4\", \"f4\", colorFrustum);\n  addLine(\"p\", \"n1\", colorCone);\n  addLine(\"p\", \"n2\", colorCone);\n  addLine(\"p\", \"n3\", colorCone);\n  addLine(\"p\", \"n4\", colorCone);\n  addLine(\"u1\", \"u2\", colorUp);\n  addLine(\"u2\", \"u3\", colorUp);\n  addLine(\"u3\", \"u1\", colorUp);\n  addLine(\"c\", \"t\", colorTarget);\n  addLine(\"p\", \"c\", colorCross);\n  addLine(\"cn1\", \"cn2\", colorCross);\n  addLine(\"cn3\", \"cn4\", colorCross);\n  addLine(\"cf1\", \"cf2\", colorCross);\n  addLine(\"cf3\", \"cf4\", colorCross);\n  geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n  geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n  return { geometry, pointMap };\n}\nfunction _createMaterial() {\n  return new LineBasicMaterial({ color: 16777215, vertexColors: true, toneMapped: false });\n}\nclass CameraHelper extends LineSegments {\n  constructor(camera) {\n    super();\n    this._pointMap = {};\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) {\n      this.camera.updateProjectionMatrix();\n    }\n    this.name = \"CameraHelper\";\n    this.type = \"CameraHelper\";\n    this.matrixAutoUpdate = false;\n    const { geometry, pointMap } = _createGeometry();\n    this.geometry = geometry;\n    this._pointMap = pointMap;\n    this.material = _createMaterial();\n  }\n  // private setCamera(camera: Camera) {\n  // \tthis._camera = camera;\n  // \tif ((this._camera as PerspectiveCamera).updateProjectionMatrix) {\n  // \t\t(this._camera as PerspectiveCamera).updateProjectionMatrix();\n  // \t}\n  // \tthis.update();\n  // }\n  clone() {\n    const helper = new CameraHelper(this.camera);\n    return helper;\n  }\n  update() {\n    const geometry = this.geometry;\n    const pointMap = this._pointMap;\n    const w = 1, h = 1;\n    _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);\n    setPoint(\"c\", pointMap, geometry, _camera, 0, 0, -1);\n    setPoint(\"t\", pointMap, geometry, _camera, 0, 0, 1);\n    setPoint(\"n1\", pointMap, geometry, _camera, -w, -h, -1);\n    setPoint(\"n2\", pointMap, geometry, _camera, w, -h, -1);\n    setPoint(\"n3\", pointMap, geometry, _camera, -w, h, -1);\n    setPoint(\"n4\", pointMap, geometry, _camera, w, h, -1);\n    setPoint(\"f1\", pointMap, geometry, _camera, -w, -h, 1);\n    setPoint(\"f2\", pointMap, geometry, _camera, w, -h, 1);\n    setPoint(\"f3\", pointMap, geometry, _camera, -w, h, 1);\n    setPoint(\"f4\", pointMap, geometry, _camera, w, h, 1);\n    setPoint(\"u1\", pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n    setPoint(\"u2\", pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n    setPoint(\"u3\", pointMap, geometry, _camera, 0, h * 2, -1);\n    setPoint(\"cf1\", pointMap, geometry, _camera, -w, 0, 1);\n    setPoint(\"cf2\", pointMap, geometry, _camera, w, 0, 1);\n    setPoint(\"cf3\", pointMap, geometry, _camera, 0, -h, 1);\n    setPoint(\"cf4\", pointMap, geometry, _camera, 0, h, 1);\n    setPoint(\"cn1\", pointMap, geometry, _camera, -w, 0, -1);\n    setPoint(\"cn2\", pointMap, geometry, _camera, w, 0, -1);\n    setPoint(\"cn3\", pointMap, geometry, _camera, 0, -h, -1);\n    setPoint(\"cn4\", pointMap, geometry, _camera, 0, h, -1);\n    geometry.getAttribute(\"position\").needsUpdate = true;\n  }\n}\nfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n  _vector.set(x, y, z).unproject(camera);\n  const points = pointMap[point];\n  if (points !== void 0) {\n    const position = geometry.getAttribute(\"position\");\n    for (let i = 0, l = points.length; i < l; i++) {\n      position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n    }\n  }\n}\nexport { CameraHelper };\n", "\"use strict\";\nimport { NetworkNodeType } from \"../../../../poly/NodeContext\";\nimport { ParamConfig } from \"../../../utils/params/ParamsConfig\";\nexport function CameraPostProcessParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.doPostProcess = ParamConfig.BOOLEAN(0);\n      this.postProcessNode = ParamConfig.NODE_PATH(\"\", {\n        visibleIf: {\n          doPostProcess: 1\n        },\n        nodeSelection: {\n          types: [NetworkNodeType.POST]\n        },\n        // cook: false,\n        // ...POST_PROCESS_PARAM_OPTIONS,\n        dependentOnFoundNode: false\n      });\n    }\n    // prepend_render_pass = ParamConfig.BOOLEAN(1, {\n    // \tvisibleIf: {\n    // \t\tdoPostProcess: 1,\n    // \t},\n    // });\n    // use_render_target = ParamConfig.BOOLEAN(0, {\n    // \tvisibleIf: {\n    // \t\tdoPostProcess: 1,\n    // \t},\n    // \t...POST_PROCESS_PARAM_OPTIONS,\n    // });\n  };\n}\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { TypedNodePathParamValue } from \"../../../core/Walker\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nconst _CameraControlsSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.CONTROLS;\n  }\n  cook(inputCoreGroups, params) {\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    if (this._node) {\n      _CameraControlsSopOperation.updateObject({\n        objects,\n        params,\n        node: this._node,\n        active: true,\n        errorIfNodeNotFound: true\n      });\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params, node, active, errorIfNodeNotFound } = options;\n    const relativeOrAbsolutePath = params.node.path();\n    const foundNode = node.node(relativeOrAbsolutePath);\n    if (foundNode && active) {\n      const nodeId = foundNode.graphNodeId();\n      for (let object of objects) {\n        ThreejsCoreObject.addAttribute(object, CameraAttribute.CONTROLS_NODE_ID, nodeId);\n      }\n    } else {\n      for (let object of objects) {\n        ThreejsCoreObject.deleteAttribute(object, CameraAttribute.CONTROLS_NODE_ID);\n      }\n      if (errorIfNodeNotFound) {\n        node.states.error.set(\"controls node not found\");\n      }\n    }\n  }\n};\nexport let CameraControlsSopOperation = _CameraControlsSopOperation;\nCameraControlsSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  node: new TypedNodePathParamValue(\"\")\n};\nCameraControlsSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { TypedNodePathParamValue } from \"../../../core/Walker\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nconst _CameraRendererSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.RENDERER;\n  }\n  cook(inputCoreGroups, params) {\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    if (this._node) {\n      _CameraRendererSopOperation.updateObject({ objects, params, node: this._node, active: true });\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params, node, active } = options;\n    const relativeOrAbsolutePath = params.node.path();\n    const foundNode = node.node(relativeOrAbsolutePath);\n    if (foundNode && active) {\n      const nodeId = foundNode.graphNodeId();\n      for (let object of objects) {\n        ThreejsCoreObject.addAttribute(object, CameraAttribute.RENDERER_NODE_ID, nodeId);\n      }\n    } else {\n      for (let object of objects) {\n        ThreejsCoreObject.deleteAttribute(object, CameraAttribute.RENDERER_NODE_ID);\n      }\n    }\n  }\n};\nexport let CameraRendererSopOperation = _CameraRendererSopOperation;\nCameraRendererSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  node: new TypedNodePathParamValue(\"\")\n};\nCameraRendererSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { TypedNodePathParamValue } from \"../../../core/Walker\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nconst _CameraCSSRendererSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.CSS_RENDERER;\n  }\n  cook(inputCoreGroups, params) {\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    if (this._node) {\n      _CameraCSSRendererSopOperation.updateObject({ objects, params, node: this._node, active: true });\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params, node, active } = options;\n    const relativeOrAbsolutePath = params.node.path();\n    const foundNode = node.node(relativeOrAbsolutePath);\n    if (foundNode && active) {\n      const nodeId = foundNode.graphNodeId();\n      for (let object of objects) {\n        ThreejsCoreObject.addAttribute(object, CameraAttribute.CSS_RENDERER_NODE_ID, nodeId);\n      }\n    } else {\n      for (let object of objects) {\n        ThreejsCoreObject.deleteAttribute(object, CameraAttribute.CSS_RENDERER_NODE_ID);\n      }\n    }\n  }\n};\nexport let CameraCSSRendererSopOperation = _CameraCSSRendererSopOperation;\nCameraCSSRendererSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  node: new TypedNodePathParamValue(\"\")\n};\nCameraCSSRendererSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { TypedNodePathParamValue } from \"../../../core/Walker\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { isBooleanTrue } from \"../../../core/Type\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nexport class CameraPostProcessSopOperation extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.POST_PROCESS;\n  }\n  cook(inputCoreGroups, params) {\n    var _a;\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    const relativeOrAbsolutePath = params.node.path();\n    const node = isBooleanTrue(params.useOtherNode) ? (_a = this._node) == null ? void 0 : _a.node(relativeOrAbsolutePath) : this._node;\n    if (node) {\n      const nodeId = node.graphNodeId();\n      for (let object of objects) {\n        ThreejsCoreObject.addAttribute(object, CameraAttribute.POST_PROCESS_NODE_ID, nodeId);\n      }\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params, node, active } = options;\n    const relativeOrAbsolutePath = params.node.path();\n    const foundNode = node.node(relativeOrAbsolutePath);\n    if (foundNode && active) {\n      const nodeId = foundNode.graphNodeId();\n      for (let object of objects) {\n        ThreejsCoreObject.addAttribute(object, CameraAttribute.POST_PROCESS_NODE_ID, nodeId);\n      }\n    } else {\n      for (let object of objects) {\n        ThreejsCoreObject.deleteAttribute(object, CameraAttribute.POST_PROCESS_NODE_ID);\n      }\n    }\n  }\n}\nCameraPostProcessSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  useOtherNode: false,\n  node: new TypedNodePathParamValue(\"\")\n};\nCameraPostProcessSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { TypedNodePathParamValue } from \"../../../core/Walker\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nconst _CameraRenderSceneSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.RENDER_SCENE;\n  }\n  cook(inputCoreGroups, params) {\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    if (this._node) {\n      _CameraRenderSceneSopOperation.updateObject({ objects, params, node: this._node, active: true });\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params, node, active } = options;\n    const relativeOrAbsolutePath = params.node.path();\n    const foundNode = node.node(relativeOrAbsolutePath);\n    if (foundNode && active) {\n      const nodeId = foundNode.graphNodeId();\n      for (let object of objects) {\n        ThreejsCoreObject.addAttribute(object, CameraAttribute.RENDER_SCENE_NODE_ID, nodeId);\n      }\n    } else {\n      for (let object of objects) {\n        ThreejsCoreObject.deleteAttribute(object, CameraAttribute.RENDER_SCENE_NODE_ID);\n      }\n    }\n  }\n};\nexport let CameraRenderSceneSopOperation = _CameraRenderSceneSopOperation;\nCameraRenderSceneSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  node: new TypedNodePathParamValue(\"\")\n};\nCameraRenderSceneSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { ParamConfig } from \"../../engine/nodes/utils/params/ParamsConfig\";\nexport var CameraFrameMode = /* @__PURE__ */ ((CameraFrameMode2) => {\n  CameraFrameMode2[\"DEFAULT\"] = \"default\";\n  CameraFrameMode2[\"COVER\"] = \"cover\";\n  CameraFrameMode2[\"CONTAIN\"] = \"contain\";\n  return CameraFrameMode2;\n})(CameraFrameMode || {});\nexport const CAMERA_FRAME_MODES = [\n  \"default\" /* DEFAULT */,\n  \"cover\" /* COVER */,\n  \"contain\" /* CONTAIN */\n];\nexport function CoreCameraFrameParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param fov adjust mode */\n      this.frameMode = ParamConfig.INTEGER(CAMERA_FRAME_MODES.indexOf(\"default\" /* DEFAULT */), {\n        menu: {\n          entries: CAMERA_FRAME_MODES.map((name, value) => {\n            return { name, value };\n          })\n        }\n      });\n      /** @param expected aspect ratio */\n      this.expectedAspectRatio = ParamConfig.FLOAT(\"16/9\", {\n        visibleIf: [\n          { frameMode: CAMERA_FRAME_MODES.indexOf(\"cover\" /* COVER */) },\n          { frameMode: CAMERA_FRAME_MODES.indexOf(\"contain\" /* CONTAIN */) }\n        ],\n        range: [0, 2],\n        rangeLocked: [true, false]\n      });\n    }\n    // vertical_fov_range = ParamConfig.VECTOR2([0, 100], {visibleIf: {lock_width: 1}});\n    // horizontal_fov_range = ParamConfig.VECTOR2([0, 100], {visibleIf: {lock_width: 0}});\n  };\n}\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { CameraFrameMode, CAMERA_FRAME_MODES } from \"../../../core/camera/CoreCameraFrameMode\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nconst _CameraFrameModeSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.FRAME_MODE;\n  }\n  cook(inputCoreGroups, params) {\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    if (this._node) {\n      _CameraFrameModeSopOperation.updateObject({ objects, params });\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params } = options;\n    for (let object of objects) {\n      ThreejsCoreObject.addAttribute(object, CameraAttribute.FRAME_MODE, params.frameMode);\n      ThreejsCoreObject.addAttribute(\n        object,\n        CameraAttribute.FRAME_MODE_EXPECTED_ASPECT_RATIO,\n        params.expectedAspectRatio\n      );\n    }\n  }\n};\nexport let CameraFrameModeSopOperation = _CameraFrameModeSopOperation;\nCameraFrameModeSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  frameMode: CAMERA_FRAME_MODES.indexOf(CameraFrameMode.DEFAULT),\n  expectedAspectRatio: 16 / 9\n};\nCameraFrameModeSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { CoreTransform } from \"../../../core/Transform\";\nimport { ObjNodeRenderOrder } from \"./_Base\";\nimport { LayersController, LayerParamConfig } from \"./utils/LayersController\";\nimport { CameraRenderParamConfig } from \"./utils/cameras/RenderController\";\nimport { TransformedParamConfig, TransformController } from \"./utils/TransformController\";\nimport { ObjChildrenDisplayController } from \"./utils/ObjChildrenDisplayController\";\nimport { DisplayNodeController } from \"../utils/DisplayNodeController\";\nimport { NodeContext } from \"../../poly/NodeContext\";\nimport { FlagsControllerD } from \"../utils/FlagsController\";\nimport { TypedObjNode } from \"./_Base\";\nimport { HierarchyController } from \"./utils/HierarchyController\";\nimport { CameraHelper } from \"../../../core/helpers/CameraHelper\";\nimport { ParamConfig, NodeParamsConfig } from \"../utils/params/ParamsConfig\";\nimport { isBooleanTrue } from \"../../../core/BooleanValue\";\nimport { CameraPostProcessParamConfig } from \"./utils/cameras/PostProcessParamOptions\";\nimport { Poly } from \"../../Poly\";\nimport { CORE_CAMERA_DEFAULT } from \"../../../core/camera/CoreCamera\";\nimport { CameraControlsSopOperation } from \"../../operations/sop/CameraControls\";\nimport { CameraRendererSopOperation } from \"../../operations/sop/CameraRenderer\";\nimport { CameraCSSRendererSopOperation } from \"../../operations/sop/CameraCSSRenderer\";\nimport { CameraPostProcessSopOperation } from \"../../operations/sop/CameraPostProcess\";\nimport { CameraRenderSceneSopOperation } from \"../../operations/sop/CameraRenderScene\";\nimport { CameraFrameModeSopOperation } from \"../../operations/sop/CameraFrameMode\";\nimport { CoreCameraFrameParamConfig } from \"../../../core/camera/CoreCameraFrameMode\";\nimport { CorePath } from \"../../../core/geometry/CorePath\";\nconst EVENT_CHANGE = { type: \"change\" };\nexport function CameraMainCameraParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.setMainCamera = ParamConfig.BUTTON(null, {\n        callback: (node, param) => {\n          BaseCameraObjNodeClass.PARAM_CALLBACK_setMainCamera(node);\n        }\n      });\n    }\n  };\n}\nexport function ThreejsCameraTransformParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      this.camera = ParamConfig.FOLDER();\n      /** @param controls node to allow the camera to be moved by user input */\n      this.controls = ParamConfig.NODE_PATH(\"\", {\n        nodeSelection: {\n          context: NodeContext.EVENT\n        },\n        dependentOnFoundNode: true\n      });\n      /** @param near */\n      this.near = ParamConfig.FLOAT(CORE_CAMERA_DEFAULT.near, {\n        range: [0.1, 100],\n        cook: false,\n        computeOnDirty: true,\n        callback: (node, param) => {\n          BaseThreejsCameraObjNodeClass.PARAM_CALLBACK_update_near_far_from_param(\n            node,\n            param\n          );\n        }\n      });\n      /** @param far */\n      this.far = ParamConfig.FLOAT(CORE_CAMERA_DEFAULT.far, {\n        range: [0, 100],\n        cook: false,\n        computeOnDirty: true,\n        callback: (node, param) => {\n          BaseThreejsCameraObjNodeClass.PARAM_CALLBACK_update_near_far_from_param(\n            node,\n            param\n          );\n        }\n      });\n      // aspect = ParamConfig.FLOAT(1);\n      // lock_width = ParamConfig.BOOLEAN(1);\n      // look_at = ParamConfig.OPERATOR_PATH('');\n      /** @param display */\n      this.display = ParamConfig.BOOLEAN(1);\n      /** @param show helper */\n      this.showHelper = ParamConfig.BOOLEAN(0);\n    }\n  };\n}\nexport class BaseCameraObjParamsConfig extends CameraMainCameraParamConfig(NodeParamsConfig) {\n}\nexport class BaseThreejsCameraObjParamsConfig extends CameraPostProcessParamConfig(\n  CameraRenderParamConfig(\n    CoreCameraFrameParamConfig(\n      TransformedParamConfig(\n        LayerParamConfig(ThreejsCameraTransformParamConfig(CameraMainCameraParamConfig(NodeParamsConfig)))\n      )\n    )\n  )\n) {\n}\nexport class TypedCameraObjNode extends TypedObjNode {\n  constructor() {\n    super(...arguments);\n    // public readonly flags: FlagsControllerD = new FlagsControllerD(this);\n    this.renderOrder = ObjNodeRenderOrder.CAMERA;\n    this._aspect = -1;\n  }\n  get object() {\n    return this._object;\n  }\n  async cook() {\n    this.updateCamera();\n    this._object.dispatchEvent(EVENT_CHANGE);\n    this.cookController.endCook();\n  }\n  // prepareRaycaster(mouse: Vector2, raycaster: Raycaster) {}\n  camera() {\n    return this._object;\n  }\n  updateCamera() {\n  }\n  static PARAM_CALLBACK_setMainCamera(node) {\n    node.setAsMainCamera();\n  }\n  setAsMainCamera() {\n    const path = CorePath.objectPath(this.object);\n    this.scene().camerasController.setMainCameraPath(path);\n  }\n  setupForAspectRatio(aspect) {\n  }\n  // protected _updateForAspectRatio(): void {}\n  update_transform_params_from_object() {\n    CoreTransform.setParamsFromObject(this._object, this);\n  }\n  static PARAM_CALLBACK_update_from_param(node, param) {\n    node.object[param.name()] = node.pv[param.name()];\n  }\n}\nexport class TypedThreejsCameraObjNode extends TypedCameraObjNode {\n  constructor() {\n    super(...arguments);\n    this.flags = new FlagsControllerD(this);\n    this.hierarchyController = new HierarchyController(this);\n    this.transformController = new TransformController(this);\n    // protected _renderController: RenderController | undefined;\n    // renderController(): RenderController {\n    // \treturn (this._renderController = this._renderController || new RenderController(this));\n    // }\n    // protected _postProcessController: PostProcessController | undefined;\n    // postProcessController(): PostProcessController {\n    // \treturn (this._postProcessController = this._postProcessController || new PostProcessController(this));\n    // }\n    // display_node and children_display controllers\n    this.childrenDisplayController = new ObjChildrenDisplayController(\n      this\n    );\n    this.displayNodeController = new DisplayNodeController(\n      this,\n      this.childrenDisplayController.displayNodeControllerCallbacks()\n    );\n    //\n    this._childrenControllerContext = NodeContext.SOP;\n  }\n  _layersController() {\n    return this.__layersController__ = this.__layersController__ || new LayersController(this);\n  }\n  initializeBaseNode() {\n    super.initializeBaseNode();\n    this.io.outputs.setHasOneOutput();\n    this.hierarchyController.initializeNode();\n    this.transformController.initializeNode();\n    this.childrenDisplayController.initializeNode();\n    this.initHelperHook();\n  }\n  createNode(node_class, options) {\n    return super.createNode(node_class, options);\n  }\n  children() {\n    return super.children();\n  }\n  nodesByType(type) {\n    return super.nodesByType(type);\n  }\n  // override prepareRaycaster(mouse: Vector2, raycaster: Raycaster) {\n  // \traycaster.setFromCamera(mouse, this._object);\n  // }\n  async cook() {\n    this.transformController.update();\n    this._layersController().update();\n    this.updateNearFar();\n    this.updateCamera();\n    this._updateHelper();\n    const objects = [this._object];\n    const node = this;\n    const hierachyParams = {\n      group: \"\"\n    };\n    CameraControlsSopOperation.updateObject({\n      objects,\n      params: {\n        node: this.pv.controls,\n        ...hierachyParams\n      },\n      node,\n      active: true,\n      errorIfNodeNotFound: false\n    });\n    CameraRendererSopOperation.updateObject({\n      objects,\n      params: {\n        node: this.pv.renderer,\n        ...hierachyParams\n      },\n      node,\n      active: this.pv.setRenderer\n    });\n    CameraCSSRendererSopOperation.updateObject({\n      objects,\n      params: {\n        node: this.pv.CSSRenderer,\n        ...hierachyParams\n      },\n      node,\n      active: this.pv.setCSSRenderer\n    });\n    CameraPostProcessSopOperation.updateObject({\n      objects,\n      params: {\n        node: this.pv.postProcessNode,\n        useOtherNode: false,\n        ...hierachyParams\n      },\n      node,\n      active: this.pv.doPostProcess\n    });\n    CameraRenderSceneSopOperation.updateObject({\n      objects,\n      params: {\n        node: this.pv.scene,\n        ...hierachyParams\n      },\n      node,\n      active: this.pv.setScene\n    });\n    CameraFrameModeSopOperation.updateObject({\n      objects,\n      params: {\n        frameMode: this.pv.frameMode,\n        expectedAspectRatio: this.pv.expectedAspectRatio,\n        ...hierachyParams\n      }\n    });\n    this._object.dispatchEvent(EVENT_CHANGE);\n    this.scene().camerasController.updateFromChangeInObject(this.object);\n    this.cookController.endCook();\n  }\n  static PARAM_CALLBACK_update_near_far_from_param(node, param) {\n    node.updateNearFar();\n  }\n  updateNearFar() {\n    if (this._object.near != this.pv.near || this._object.far != this.pv.far) {\n      this._object.near = this.pv.near;\n      this._object.far = this.pv.far;\n      this._object.updateProjectionMatrix();\n      this._updateHelper();\n    }\n  }\n  // override setupForAspectRatio(aspect: number) {\n  // \tif (CoreType.isNaN(aspect)) {\n  // \t\treturn;\n  // \t}\n  // \tif (aspect && this._aspect != aspect) {\n  // \t\tthis._aspect = aspect;\n  // \t\tthis._updateForAspectRatio();\n  // \t}\n  // }\n  async createViewer(options) {\n    if (this.isDirty()) {\n      await this.compute();\n    }\n    const viewer = Poly.camerasRegister.createViewer({ camera: this.object, scene: this.scene() });\n    let element;\n    let updateAutoRenderOnIntersectionChange;\n    if (options && options instanceof HTMLElement) {\n      element = options;\n    } else {\n      element = options == null ? void 0 : options.element;\n      updateAutoRenderOnIntersectionChange = options == null ? void 0 : options.updateAutoRenderOnIntersectionChange;\n    }\n    if (viewer) {\n      if (element) {\n        viewer.mount(element, {\n          updateAutoRenderOnIntersectionChange\n        });\n      }\n    }\n    return viewer;\n  }\n  initHelperHook() {\n    this.flags.display.onUpdate(() => {\n      this._updateHelper();\n    });\n  }\n  helperVisible() {\n    return this.flags.display.active() && isBooleanTrue(this.pv.showHelper);\n  }\n  _createHelper() {\n    const helper = new CameraHelper(this.object);\n    helper.update();\n    return helper;\n  }\n  _updateHelper() {\n    if (this.helperVisible()) {\n      if (!this._helper) {\n        this._helper = this._createHelper();\n      }\n      if (this._helper) {\n        this.object.add(this._helper);\n        this._helper.update();\n      }\n    } else {\n      if (this._helper) {\n        this.object.remove(this._helper);\n      }\n    }\n  }\n}\nexport class BaseCameraObjNodeClass extends TypedCameraObjNode {\n}\nexport class BaseThreejsCameraObjNodeClass extends TypedThreejsCameraObjNode {\n  PARAM_CALLBACK_update_effects_composer(node) {\n  }\n}\n", "\"use strict\";\nimport { Vector2 } from \"three\";\nexport class ViewerCamerasController {\n  constructor(_viewer) {\n    this._viewer = _viewer;\n    // private _is_active: boolean = false;\n    // private _camera_node: BaseThreejsCameraObjNodeType | undefined;\n    // private _camera: Camera;\n    this._size = new Vector2(100, 100);\n    this._aspect = 1;\n  }\n  camera() {\n    return this._viewer.camera();\n  }\n  get size() {\n    return this._size;\n  }\n  get aspect() {\n    return this._aspect;\n  }\n  computeSizeAndAspect(pixelRatio) {\n    this._updateSize();\n    this._viewer.scene().uniformsController.updateResolution(this._size, pixelRatio);\n    this._aspect = this._getAspect();\n  }\n  _updateSize() {\n    var _a, _b;\n    this._size.x = ((_a = this._viewer.domElement()) == null ? void 0 : _a.offsetWidth) || 0;\n    this._size.y = ((_b = this._viewer.domElement()) == null ? void 0 : _b.offsetHeight) || 0;\n  }\n  _getAspect() {\n    return this._size.x / this._size.y;\n  }\n  updateCameraAspect() {\n    this._viewer.updateCameraAspect(this._aspect, this._size);\n  }\n  async prepareCurrentCamera() {\n    await this._updateFromCameraContainer();\n  }\n  async _updateFromCameraContainer() {\n    this.updateCameraAspect();\n  }\n}\n", "\"use strict\";\nimport { EventDispatcher } from \"three\";\nexport var CameraControlsEvent = /* @__PURE__ */ ((CameraControlsEvent2) => {\n  CameraControlsEvent2[\"start\"] = \"start\";\n  CameraControlsEvent2[\"end\"] = \"end\";\n  return CameraControlsEvent2;\n})(CameraControlsEvent || {});\nexport const CAMERA_CONTROLS_EVENTS = [\"start\" /* start */, \"end\" /* end */];\nconst START_EVENT = { type: \"start\" /* start */ };\nconst END_EVENT = { type: \"end\" /* end */ };\nexport class ViewerControlsController extends EventDispatcher {\n  constructor(viewer) {\n    super();\n    this.viewer = viewer;\n    this._active = false;\n    this._mounted = false;\n    this._boundEventHandler = {\n      [\"start\" /* start */]: () => this.dispatchEvent(START_EVENT),\n      [\"end\" /* end */]: () => this.dispatchEvent(END_EVENT)\n    };\n  }\n  controls() {\n    return this._controls;\n  }\n  mount() {\n    if (this._mounted) {\n      return;\n    }\n    this._mounted = true;\n    const controlsNode = this.viewer.controlsNode();\n    const camera = this.viewer.camera();\n    if (!(controlsNode && camera)) {\n      return;\n    }\n    controlsNode.applyControls(camera, this.viewer).then((controls) => {\n      this._controls = controls;\n      this._updateControlsFunc = controls ? (delta) => controls.update(delta) : void 0;\n      for (const eventName of CAMERA_CONTROLS_EVENTS) {\n        controls.addEventListener(eventName, this._boundEventHandler[eventName]);\n      }\n      if (!this._mounted) {\n        this._disposeControls();\n      }\n    });\n  }\n  unmount() {\n    if (!this._mounted) {\n      return;\n    }\n    this._mounted = false;\n    this._disposeControls();\n  }\n  _disposeControls() {\n    if (this._controls) {\n      for (const eventName of CAMERA_CONTROLS_EVENTS) {\n        this._controls.removeEventListener(eventName, this._boundEventHandler[eventName]);\n      }\n      this._controls.dispose();\n    }\n    this._updateControlsFunc = void 0;\n  }\n  update(delta) {\n    if (this._updateControlsFunc) {\n      this._updateControlsFunc(delta);\n    }\n  }\n  setActive(active) {\n    if (active) {\n      this.mount();\n    } else {\n      this.unmount();\n    }\n  }\n  setTarget(target) {\n    if (!this._controls) {\n      return;\n    }\n    const orbitControls = this._controls;\n    if (!orbitControls.target) {\n      return;\n    }\n    orbitControls.target.copy(target);\n  }\n}\n", "\"use strict\";\nexport function allowCanvasKeyEventsListener(canvas) {\n  canvas.setAttribute(\"tabindex\", \"0\");\n}\n", "\"use strict\";\nexport var WindowEventType = /* @__PURE__ */ ((WindowEventType2) => {\n  WindowEventType2[\"resize\"] = \"resize\";\n  return WindowEventType2;\n})(WindowEventType || {});\nexport const ACCEPTED_WINDOW_EVENT_TYPES = [\"resize\" /* resize */];\n", "\"use strict\";\nimport { CoreEventEmitter } from \"./CoreEventEmitter\";\nimport { WindowEventType } from \"./WindowEventType\";\nfunction elementFromEmitterType(emitter, canvas) {\n  return emitter == CoreEventEmitter.CANVAS ? canvas : document;\n}\nexport function getEventEmitter(eventData, canvas) {\n  if (eventData.type == WindowEventType.resize) {\n    return window;\n  } else {\n    return elementFromEmitterType(eventData.emitter, canvas);\n  }\n}\n", "\"use strict\";\nimport { EVENT_EMITTERS } from \"../../../core/event/CoreEventEmitter\";\nimport { ACCEPTED_KEYBOARD_EVENT_TYPES } from \"../../../core/event/KeyboardEventType\";\nimport { allowCanvasKeyEventsListener } from \"../../../core/event/CanvasKeyFocus\";\nimport { getEventEmitter } from \"../../../core/event/EventEmitter\";\nconst DEBUG = false;\nexport class ViewerEventsController {\n  constructor(viewer) {\n    this.viewer = viewer;\n    this._boundListenerMapByEventControllerType = /* @__PURE__ */ new Map();\n  }\n  updateEvents(eventsController) {\n    if (DEBUG) {\n      console.log(\"------------ updateEvents START:\", eventsController);\n    }\n    const canvas = this.canvas();\n    if (!canvas) {\n      console.warn(\"no canvas found\");\n      return;\n    }\n    const controllerType = eventsController.type();\n    let map = this._boundListenerMapByEventControllerType.get(controllerType);\n    if (!map) {\n      map = /* @__PURE__ */ new Map();\n      this._boundListenerMapByEventControllerType.set(controllerType, map);\n    }\n    map.forEach((listenerWithData, eventType) => {\n      for (let emitter of EVENT_EMITTERS) {\n        const eventEmitter = getEventEmitter({ emitter, type: eventType }, canvas);\n        eventEmitter.removeEventListener(eventType, listenerWithData.listener);\n      }\n    });\n    map.clear();\n    for (let eventData of eventsController.activeEventDatas()) {\n      const eventEmitter = getEventEmitter(eventData, canvas);\n      const eventType = eventData.type;\n      const _processEvent = (event, controller) => {\n        const eventContext = {\n          viewer: this.viewer,\n          event,\n          emitter: eventData.emitter\n          // camera: this.camera(),\n        };\n        controller.processEvent(eventContext);\n      };\n      const listener = (event) => {\n        _processEvent(\n          event,\n          eventsController\n          /*, canvas*/\n        );\n      };\n      if (DEBUG) {\n        console.log(\"- add event:\", eventType, eventEmitter);\n      }\n      eventEmitter.addEventListener(eventType, listener, { passive: true });\n      if (eventEmitter != document) {\n        if (ACCEPTED_KEYBOARD_EVENT_TYPES.includes(eventData.type)) {\n          allowCanvasKeyEventsListener(eventEmitter);\n        }\n      }\n      map.set(eventData.type, { listener, data: eventData });\n    }\n    if (DEBUG) {\n      console.log(\"------------ updateEvents DONE:\");\n    }\n  }\n  camera() {\n    return this.viewer.camera();\n  }\n  canvas() {\n    return this.viewer.canvas();\n  }\n  init() {\n    if (!this.canvas()) {\n      console.warn(\"no canvas found for eventsController\");\n      return;\n    }\n    this.viewer.scene().eventsDispatcher.traverseControllers((controller) => {\n      this.updateEvents(controller);\n    });\n  }\n  registeredEventTypes() {\n    const list = [];\n    this._boundListenerMapByEventControllerType.forEach((map) => {\n      map.forEach((listener, eventType) => {\n        list.push(eventType);\n      });\n    });\n    return list;\n  }\n  dispose() {\n    const canvas = this.canvas();\n    this._boundListenerMapByEventControllerType.forEach((map) => {\n      if (canvas) {\n        map.forEach((listenerWithData, eventType) => {\n          const eventOwner = getEventEmitter(listenerWithData.data, canvas);\n          eventOwner.removeEventListener(eventType, listenerWithData.listener);\n        });\n      }\n    });\n  }\n}\n", "\"use strict\";\nexport class ViewerWebGLController {\n  constructor(viewer) {\n    this.viewer = viewer;\n  }\n  init() {\n    const canvas = this.viewer.canvas();\n    if (canvas) {\n      canvas.onwebglcontextlost = this._on_webglcontextlost.bind(this);\n      canvas.onwebglcontextrestored = this._on_webglcontextrestored.bind(this);\n    }\n  }\n  _on_webglcontextlost() {\n    console.warn(\"context lost at frame\", this.viewer.scene().frame());\n    if (this.request_animation_frame_id) {\n      cancelAnimationFrame(this.request_animation_frame_id);\n    } else {\n      console.warn(\"request_animation_frame_id not initialized\");\n    }\n    console.warn(\"not canceled\", this.request_animation_frame_id);\n  }\n  _on_webglcontextrestored() {\n    console.log(\"context restored\");\n  }\n}\n", "\"use strict\";\nimport { isBooleanTrue } from \"../../../core/Type\";\nconst ICON = {\n  ON: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"soundOn h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\n  </svg>`,\n  OFF: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"soundOff h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clip-rule=\"evenodd\" />\n\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" />\n  </svg>`\n};\nexport class ViewerAudioController {\n  constructor(_viewer) {\n    this._viewer = _viewer;\n  }\n  update() {\n    const root = this._viewer.scene().root();\n    if (isBooleanTrue(root.pv.displayAudioIcon)) {\n      this._showIcon();\n      this._updateIcon(root);\n    } else {\n      this._hideIcon();\n    }\n  }\n  unmount() {\n    var _a;\n    if (this.__iconContainer) {\n      (_a = this.__iconContainer.parentElement) == null ? void 0 : _a.removeChild(this.__iconContainer);\n      this.__iconContainer = void 0;\n    }\n    this._onIcon = void 0;\n    this._offIcon = void 0;\n  }\n  _showIcon() {\n    const element = this._iconContainer();\n    if (element) {\n      element.style.display = \"block\";\n    }\n  }\n  _hideIcon() {\n    if (this.__iconContainer) {\n      this.__iconContainer.style.display = \"none\";\n    }\n  }\n  _iconContainer() {\n    const createIconContainer = () => {\n      const element = this._createIconContainer();\n      const domElement = this._viewer.domElement();\n      if (!domElement) {\n        return;\n      }\n      domElement.append(element);\n      return element;\n    };\n    return this.__iconContainer = this.__iconContainer || createIconContainer();\n  }\n  _createIconContainer() {\n    const element = document.createElement(\"div\");\n    element.addEventListener(\"pointerdown\", (event) => {\n      this._toggleSound();\n      event.preventDefault();\n      event.stopPropagation();\n      return false;\n    });\n    return element;\n  }\n  _setIconContainerStyle(element, root) {\n    const style = root.pv.audioIconStyle;\n    element.setAttribute(\"style\", style);\n    element.style.color = root.pv.audioIconColor.getStyle();\n  }\n  offIcon() {\n    function createIcon() {\n      const icon = document.createElement(\"div\");\n      icon.innerHTML = ICON.OFF;\n      return icon.children[0];\n    }\n    return this._offIcon = this._offIcon || createIcon();\n  }\n  onIcon() {\n    function createIcon() {\n      const icon = document.createElement(\"div\");\n      icon.innerHTML = ICON.ON;\n      return icon.children[0];\n    }\n    return this._onIcon = this._onIcon || createIcon();\n  }\n  _toggleSound() {\n    const root = this._viewer.scene().root();\n    root.audioController.toggleSound();\n    this._updateIcon(root);\n  }\n  _updateIcon(root) {\n    var _a, _b;\n    const container = this._iconContainer();\n    if (!container) {\n      return;\n    }\n    this._setIconContainerStyle(container, root);\n    const onIcon = this.onIcon();\n    const offIcon = this.offIcon();\n    if (this._viewer.scene().root().audioController.soundOn()) {\n      container.appendChild(onIcon);\n      (_a = offIcon.parentElement) == null ? void 0 : _a.removeChild(offIcon);\n    } else {\n      container.appendChild(offIcon);\n      (_b = onIcon.parentElement) == null ? void 0 : _b.removeChild(onIcon);\n    }\n  }\n}\n", "\"use strict\";\nexport class ViewerRaycastersController {\n  constructor(viewer) {\n    this.viewer = viewer;\n    const scene = this.viewer.scene();\n    this.pointerEventsController = scene.eventsDispatcher.pointerEventsController;\n    this.pointerEventsController.setRaycaster(viewer.createRaycaster());\n  }\n  setCursor0(cursor) {\n    this.pointerEventsController.cursor().value.set(cursor.x, cursor.y);\n  }\n  raycaster0() {\n    return this.pointerEventsController.raycaster().value;\n  }\n  updateRaycasters() {\n    this.pointerEventsController.raycaster().value.setFromCamera(this.pointerEventsController.cursor().value, this.viewer.camera());\n  }\n}\n", "\"use strict\";\nimport { DESIRED_FPS } from \"../../scene/utils/TimeController\";\nfunction _round(perf) {\n  return Math.round(perf * 10);\n}\nexport class ViewerPerformanceMonitor {\n  constructor(viewer) {\n    this.viewer = viewer;\n    this._accumulatedDelta = 0;\n    this._framesCount = 0;\n    this._lastRoundedPerf = _round(1);\n  }\n  measurePerformance(delta) {\n    this._accumulatedDelta += delta;\n    if (this._accumulatedDelta >= 1) {\n      const perf = this._framesCount / DESIRED_FPS;\n      const roundedPerf = _round(perf);\n      if (roundedPerf != this._lastRoundedPerf) {\n        this._lastRoundedPerf = roundedPerf;\n        this.viewer.scene().perfMonitor.onPerformanceChange(perf);\n      }\n      this._framesCount = 0;\n      this._accumulatedDelta = 0;\n    }\n    this._framesCount++;\n  }\n}\n", "\"use strict\";\nimport { createRaycaster } from \"./../../core/RaycastHelper\";\nimport { ViewerCamerasController } from \"./utils/ViewerCamerasController\";\nimport { ViewerControlsController } from \"./utils/ViewerControlsController\";\nimport { ViewerEventsController } from \"./utils/ViewerEventsController\";\nimport { ViewerWebGLController } from \"./utils/ViewerWebglController\";\nimport { ViewerAudioController } from \"./utils/ViewerAudioController\";\nimport { Vector2 } from \"three\";\nimport { Poly } from \"../Poly\";\nimport { ViewerRaycastersController } from \"./utils/ViewerRaycastersController\";\nimport { ViewerPerformanceMonitor } from \"./utils/ViewerPerformanceMonitor\";\nconst HOVERED_CLASS_NAME = \"hovered\";\nconst _TypedViewer = class {\n  constructor(options) {\n    this._active = false;\n    this._doRender = true;\n    this._mounted = false;\n    this._controlsController = new ViewerControlsController(this);\n    this.performanceMonitor = new ViewerPerformanceMonitor(this);\n    this._size = new Vector2();\n    this._onBeforeTickCallbacks = [];\n    this._onAfterTickCallbacks = [];\n    this._onBeforeRenderCallbacks = [];\n    this._onAfterRenderCallbacks = [];\n    this._id = _TypedViewer._nextId();\n    this._camera = options.camera;\n    this._scene = options.scene;\n    this._canvas = options.canvas;\n    if (options.autoRender != null) {\n      this._doRender = options.autoRender;\n    }\n    this.updateCameraAspect = options.updateCameraAspect;\n    this.scene().viewersRegister.registerViewer(this);\n    this.raycastersController = new ViewerRaycastersController(this);\n  }\n  static _nextId() {\n    return `${_TypedViewer._nextViewerId++}`;\n  }\n  createRaycaster() {\n    return createRaycaster();\n  }\n  /**\n   * mounts the viewer onto an element\n   *\n   *\n   */\n  mount(element, options) {\n    let updateAutoRenderOnIntersectionChange = true;\n    if (options && options.updateAutoRenderOnIntersectionChange != null) {\n      updateAutoRenderOnIntersectionChange = options.updateAutoRenderOnIntersectionChange;\n    }\n    this._domElement = element;\n    this._domElement.viewer = this;\n    this._domElement.scene = this._scene;\n    this._domElement.Poly = Poly;\n    if (updateAutoRenderOnIntersectionChange) {\n      this.updateAutoRenderOnIntersectionChange({ playPauseScene: true });\n    }\n    this.controlsController().mount();\n    this._mounted = true;\n  }\n  /**\n   * unmounts the viewer\n   *\n   *\n   */\n  unmount() {\n    var _a;\n    if (!this._domElement) {\n      return;\n    }\n    (_a = this._audioController) == null ? void 0 : _a.unmount();\n    this._domElement.removeChild(this.canvas());\n    this.controlsController().unmount();\n    this._mounted = false;\n  }\n  static _canvasIdPrefix() {\n    return \"TypedViewer\";\n  }\n  static createCanvas(id) {\n    id = id || _TypedViewer._nextId();\n    const canvas = document.createElement(\"canvas\");\n    canvas.id = `${this._canvasIdPrefix()}_${id}`;\n    canvas.style.display = \"block\";\n    canvas.style.outline = \"none\";\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"100%\";\n    canvas.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n    });\n    return canvas;\n  }\n  controlsNode() {\n    return this._controlsNode;\n  }\n  /**\n   * return the canvas and create one if none yet\n   *\n   *\n   */\n  canvas() {\n    return this._canvas = this._canvas || _TypedViewer.createCanvas(this._id);\n  }\n  _tickAndRender(delta) {\n    this._tick(delta);\n    this.render(delta);\n    this._postRender(delta);\n  }\n  _tick(delta) {\n    this.controlsController().update(delta);\n    this.raycastersController.updateRaycasters();\n    this._runOnBeforeTickCallbacks(delta);\n    this.scene().update(delta);\n    this._runOnAfterTickCallbacks(delta);\n  }\n  render(delta) {\n    if (!this._doRender) {\n      return;\n    }\n    const renderer = this._renderer;\n    if (!renderer) {\n      console.error(\"render: no renderer\");\n      return;\n    }\n    this._runOnBeforeRenderCallbacks(delta, renderer);\n    if (this._renderFunc) {\n      this._renderFunc(delta);\n    }\n    if (this._renderCSSFunc) {\n      this._renderCSSFunc();\n    }\n    this._runOnAfterRenderCallbacks(delta, renderer);\n  }\n  _postRender(delta) {\n    this._scene.viewersRegister.markViewerAsRendered(this);\n    if (this.scene().timeController.playing()) {\n      this.performanceMonitor.measurePerformance(delta);\n    }\n  }\n  setRenderObjectOverride(object) {\n    if (object) {\n      this._renderObjectOverride = object;\n    } else {\n      this._renderObjectOverride = void 0;\n    }\n  }\n  active() {\n    return this._active;\n  }\n  activate() {\n    this._active = true;\n  }\n  deactivate() {\n    this._active = false;\n  }\n  camerasController() {\n    return this._camerasController = this._camerasController || new ViewerCamerasController(this);\n  }\n  controlsController() {\n    return this._controlsController;\n  }\n  eventsController() {\n    return this._eventsController = this._eventsController || new ViewerEventsController(this);\n  }\n  webglController() {\n    return this._webGLController = this._webGLController || new ViewerWebGLController(this);\n  }\n  audioController() {\n    return this._audioController = this._audioController || new ViewerAudioController(this);\n  }\n  domElement() {\n    return this._domElement;\n  }\n  scene() {\n    return this._scene;\n  }\n  /**\n   * return the camera the viewer was created with\n   *\n   *\n   */\n  camera() {\n    return this._camera;\n  }\n  // cameraControlsController(): ThreejsCameraControlsController | undefined {\n  // \treturn undefined;\n  // }\n  id() {\n    return this._id;\n  }\n  size(target) {\n    target.copy(this._size);\n  }\n  updateSize() {\n  }\n  /**\n   * disposes the viewer\n   *\n   *\n   */\n  dispose() {\n    this._scene.viewersRegister.unregisterViewer(this);\n    this.eventsController().dispose();\n    this.controlsController().unmount();\n    if (!this._domElement) {\n      return;\n    }\n    let child;\n    while (child = this._domElement.children[0]) {\n      this._domElement.removeChild(child);\n    }\n  }\n  // html container class\n  resetContainerClass() {\n    var _a;\n    (_a = this.domElement()) == null ? void 0 : _a.classList.remove(HOVERED_CLASS_NAME);\n  }\n  setContainerClassHovered() {\n    var _a;\n    (_a = this.domElement()) == null ? void 0 : _a.classList.add(HOVERED_CLASS_NAME);\n  }\n  markAsReady() {\n  }\n  /**\n   * sets auto render state. If falls, the viewer will not render.\n   *\n   *\n   */\n  setAutoRender(state = true) {\n    this._doRender = state;\n  }\n  autoRenderState() {\n    return this._doRender;\n  }\n  /**\n   * This sets the viewer to detect if it is visible, and to pause/unpause itself when its visibility changes.\n   * This can be very useful to improve performance.\n   *\n   */\n  updateAutoRenderOnIntersectionChange(_options) {\n    if (!this._domElement) {\n      console.warn(\"cannot apply\");\n      return;\n    }\n    let { threshold, root, rootMargin, playPauseScene, onChange } = _options;\n    if (threshold == null) {\n      threshold = 0.01;\n    }\n    const observerOptions = {\n      root,\n      rootMargin,\n      threshold\n    };\n    const onObserverChange = (entries, observer) => {\n      if (!this._scene.loadingController.loaded()) {\n        return;\n      }\n      entries.forEach((entry) => {\n        const isVisible = entry.isIntersecting;\n        this.setAutoRender(isVisible);\n        if (playPauseScene) {\n          if (isVisible) {\n            this._scene.play();\n          } else {\n            this._scene.pause();\n          }\n        }\n        if (onChange) {\n          onChange(isVisible);\n        }\n      });\n    };\n    this.disableUpdateAutoRenderOnIntersectionChange();\n    this._observer = new IntersectionObserver(onObserverChange, observerOptions);\n    this._observer.observe(this._domElement);\n  }\n  /**\n   * Cancels the listening of the viewer's visibility.\n   *\n   */\n  disableUpdateAutoRenderOnIntersectionChange() {\n    if (!this._domElement) {\n      return;\n    }\n    if (!this._observer) {\n      return;\n    }\n    this._observer.unobserve(this._domElement);\n  }\n  // onBeforeTick\n  /**\n   * registers a BeforeTick callback. BeforeTick callbacks are run before updating the frame (and therefore before any time dependent node has changed)\n   *\n   */\n  registerOnBeforeTick(callbackName, callback, options = {}) {\n    this._registerCallback(callbackName, callback, this.registeredBeforeTickCallbacks(), options);\n  }\n  /**\n   * unregisters BeforeTick callback\n   *\n   */\n  unRegisterOnBeforeTick(callbackName) {\n    this._unregisterCallback(callbackName, this._onBeforeTickCallbacksMap);\n  }\n  /**\n   * Returns the list registered BeforeTick callback names\n   *\n   */\n  registeredBeforeTickCallbacks() {\n    return this._onBeforeTickCallbacksMap = this._onBeforeTickCallbacksMap || /* @__PURE__ */ new Map();\n  }\n  // onAfterTick\n  /**\n   * registers AfterTick callback. AfterTick callbacks are run after updating the frame (and therefore after any time dependent node has changed)\n   *\n   */\n  registerOnAfterTick(callbackName, callback, options = {}) {\n    this._registerCallback(callbackName, callback, this.registeredAfterTickCallbacks(), options);\n  }\n  /**\n   * unregisters AfterTick callback\n   *\n   */\n  unRegisterOnAfterTick(callbackName) {\n    this._unregisterCallback(callbackName, this._onAfterTickCallbacksMap);\n  }\n  /**\n   * Returns the list registered AfterTick callback names\n   *\n   */\n  registeredAfterTickCallbacks() {\n    return this._onAfterTickCallbacksMap = this._onAfterTickCallbacksMap || /* @__PURE__ */ new Map();\n  }\n  // onBeforeRender\n  /**\n   * registers a BeforeRender callback. BeforeRender callbacks are run before the frame is rendered\n   *\n   */\n  registerOnBeforeRender(callbackName, callback, options = {}) {\n    this._registerCallback(callbackName, callback, this.registeredBeforeRenderCallbacks(), options);\n  }\n  /**\n   * unregisters BeforeRender callback\n   *\n   */\n  unRegisterOnBeforeRender(callbackName) {\n    this._unregisterCallback(callbackName, this._onBeforeRenderCallbacksMap);\n  }\n  /**\n   * Returns the list registered BeforeRender callback names\n   *\n   */\n  registeredBeforeRenderCallbacks() {\n    return this._onBeforeRenderCallbacksMap = this._onBeforeRenderCallbacksMap || /* @__PURE__ */ new Map();\n  }\n  // onAfterRender\n  /**\n   * registers a AfterRender callback. AfterRender callbacks are run after the frame is rendered\n   *\n   */\n  registerOnAfterRender(callbackName, callback, options = {}) {\n    this._registerCallback(callbackName, callback, this.registeredAfterRenderCallbacks(), options);\n  }\n  /**\n   * unregisters AfterRender callback\n   *\n   */\n  unRegisterOnAfterRender(callbackName) {\n    this._unregisterCallback(callbackName, this._onAfterRenderCallbacksMap);\n  }\n  /**\n   * Returns the list AfterRender BeforeRender callback names\n   *\n   */\n  registeredAfterRenderCallbacks() {\n    return this._onAfterRenderCallbacksMap = this._onAfterRenderCallbacksMap || /* @__PURE__ */ new Map();\n  }\n  _registerCallback(callbackName, callback, map, options = {}) {\n    if (map.has(callbackName)) {\n      console.warn(`callback ${callbackName} already registered`);\n      return;\n    }\n    map.set(callbackName, { callback, options });\n    this._updateCallbacks();\n  }\n  _unregisterCallback(callbackName, map) {\n    if (!map) {\n      return;\n    }\n    const callbackContainer = map.get(callbackName);\n    if (!callbackContainer) {\n      return;\n    }\n    const options = callbackContainer.options;\n    if (options.persistent == true) {\n      return;\n    }\n    map.delete(callbackName);\n    this._updateCallbacks();\n  }\n  _updateCallbacks() {\n    var _a, _b, _c, _d;\n    this._onBeforeTickCallbacks = [];\n    (_a = this._onBeforeTickCallbacksMap) == null ? void 0 : _a.forEach((callbackContainer) => {\n      this._onBeforeTickCallbacks.push(callbackContainer.callback);\n    });\n    this._onAfterTickCallbacks = [];\n    (_b = this._onAfterTickCallbacksMap) == null ? void 0 : _b.forEach((callbackContainer) => {\n      this._onAfterTickCallbacks.push(callbackContainer.callback);\n    });\n    this._onBeforeRenderCallbacks = [];\n    (_c = this._onBeforeRenderCallbacksMap) == null ? void 0 : _c.forEach((callbackContainer) => {\n      this._onBeforeRenderCallbacks.push(callbackContainer.callback);\n    });\n    this._onAfterRenderCallbacks = [];\n    (_d = this._onAfterRenderCallbacksMap) == null ? void 0 : _d.forEach((callbackContainer) => {\n      this._onAfterRenderCallbacks.push(callbackContainer.callback);\n    });\n  }\n  _runTickCallbacks(callbacks, delta) {\n    for (const callback of callbacks) {\n      callback(delta);\n    }\n  }\n  _runRenderCallbacks(callbacks, delta, renderer) {\n    for (const callback of callbacks) {\n      callback(delta, renderer);\n    }\n  }\n  _runOnBeforeTickCallbacks(delta) {\n    this._runTickCallbacks(this._onBeforeTickCallbacks, delta);\n  }\n  _runOnAfterTickCallbacks(delta) {\n    this._runTickCallbacks(this._onAfterTickCallbacks, delta);\n  }\n  _runOnBeforeRenderCallbacks(delta, renderer) {\n    this._runRenderCallbacks(this._onBeforeRenderCallbacks, delta, renderer);\n  }\n  _runOnAfterRenderCallbacks(delta, renderer) {\n    this._runRenderCallbacks(this._onAfterRenderCallbacks, delta, renderer);\n  }\n};\nexport let TypedViewer = _TypedViewer;\nTypedViewer._nextViewerId = 0;\n", "\"use strict\";\nimport { TypedNode } from \"../_Base\";\nimport { NodeContext } from \"../../poly/NodeContext\";\nimport { FlagsController } from \"../utils/FlagsController\";\nexport class TypedRopNode extends TypedNode {\n  constructor() {\n    super(...arguments);\n    this.flags = new FlagsController(this);\n  }\n  static context() {\n    return NodeContext.ROP;\n  }\n  initializeBaseNode() {\n    this.dirtyController.addPostDirtyHook(\"cook_immediately\", () => {\n      this.cookController.cookMainWithoutInputs();\n    });\n  }\n  cook() {\n    this.cookController.endCook();\n  }\n}\nexport class BaseRopNodeClass extends TypedRopNode {\n}\n", "\"use strict\";\nexport function defaultPixelRatio() {\n  return 2;\n}\n", "\"use strict\";\nimport {\n  NoColorSpace,\n  SRGBColorSpace,\n  LinearSRGBColorSpace,\n  DisplayP3ColorSpace,\n  LinearDisplayP3ColorSpace\n} from \"three\";\nexport const COLOR_SPACES = [\n  NoColorSpace,\n  SRGBColorSpace,\n  LinearSRGBColorSpace,\n  DisplayP3ColorSpace,\n  LinearDisplayP3ColorSpace\n];\nexport const COLOR_SPACES_BY_NAME = [\n  { Linear: NoColorSpace },\n  { sRGB: SRGBColorSpace },\n  { LinearSRGB: LinearSRGBColorSpace },\n  { DisplayP3: DisplayP3ColorSpace },\n  { LinearDisplayP3: LinearDisplayP3ColorSpace }\n];\nconst COLOR_SPACE_NAME_BY_COLOR_SPACE = {\n  [NoColorSpace]: Object.keys(COLOR_SPACES_BY_NAME[0])[0],\n  [SRGBColorSpace]: Object.keys(COLOR_SPACES_BY_NAME[1])[0],\n  [LinearSRGBColorSpace]: Object.keys(COLOR_SPACES_BY_NAME[2])[0],\n  [DisplayP3ColorSpace]: Object.keys(COLOR_SPACES_BY_NAME[3])[0],\n  [LinearDisplayP3ColorSpace]: Object.keys(COLOR_SPACES_BY_NAME[4])[0]\n};\nexport { COLOR_SPACE_NAME_BY_COLOR_SPACE };\n", "\"use strict\";\nimport { TypedRopNode } from \"./_Base\";\nimport { RopType } from \"../../poly/registers/nodes/types/Rop\";\nimport {\n  NoColorSpace,\n  SRGBColorSpace,\n  LinearSRGBColorSpace,\n  DisplayP3ColorSpace,\n  NoToneMapping,\n  LinearToneMapping,\n  ReinhardToneMapping,\n  CineonToneMapping,\n  ACESFilmicToneMapping,\n  BasicShadowMap,\n  PCFShadowMap,\n  PCFSoftShadowMap,\n  VSMShadowMap\n} from \"three\";\nimport { NodeParamsConfig, ParamConfig } from \"../utils/params/ParamsConfig\";\nimport { CoreType } from \"../../../core/Type\";\nimport { Poly } from \"../../Poly\";\nimport { isBooleanTrue } from \"../../../core/BooleanValue\";\nimport { defaultPixelRatio } from \"../../../core/render/defaultPixelRatio\";\nimport {\n  PowerPreference,\n  POWER_PREFERENCES,\n  RENDERER_PRECISIONS,\n  RendererPrecision,\n  WEBGL_RENDERER_DEFAULT_PARAMS\n} from \"../../../core/render/Common\";\nimport { COLOR_SPACE_NAME_BY_COLOR_SPACE } from \"../../../core/cop/ColorSpace\";\nconst COLOR_SPACES = [NoColorSpace, SRGBColorSpace, LinearSRGBColorSpace, DisplayP3ColorSpace];\nexport const DEFAULT_OUTPUT_COLOR_SPACE = SRGBColorSpace;\nvar ToneMappingName = /* @__PURE__ */ ((ToneMappingName2) => {\n  ToneMappingName2[\"No\"] = \"No\";\n  ToneMappingName2[\"Linear\"] = \"Linear\";\n  ToneMappingName2[\"Reinhard\"] = \"Reinhard\";\n  ToneMappingName2[\"Cineon\"] = \"Cineon\";\n  ToneMappingName2[\"ACESFilmic\"] = \"ACESFilmic\";\n  return ToneMappingName2;\n})(ToneMappingName || {});\nvar ToneMappingValue = /* @__PURE__ */ ((ToneMappingValue2) => {\n  ToneMappingValue2[ToneMappingValue2[\"No\"] = NoToneMapping] = \"No\";\n  ToneMappingValue2[ToneMappingValue2[\"Linear\"] = LinearToneMapping] = \"Linear\";\n  ToneMappingValue2[ToneMappingValue2[\"Reinhard\"] = ReinhardToneMapping] = \"Reinhard\";\n  ToneMappingValue2[ToneMappingValue2[\"Cineon\"] = CineonToneMapping] = \"Cineon\";\n  ToneMappingValue2[ToneMappingValue2[\"ACESFilmic\"] = ACESFilmicToneMapping] = \"ACESFilmic\";\n  return ToneMappingValue2;\n})(ToneMappingValue || {});\nconst TONE_MAPPING_NAMES = [\n  \"No\" /* No */,\n  \"Linear\" /* Linear */,\n  \"Reinhard\" /* Reinhard */,\n  \"Cineon\" /* Cineon */,\n  \"ACESFilmic\" /* ACESFilmic */\n];\nconst TONE_MAPPING_VALUES = [\n  ToneMappingValue.No,\n  ToneMappingValue.Linear,\n  ToneMappingValue.Reinhard,\n  ToneMappingValue.Cineon,\n  ToneMappingValue.ACESFilmic\n];\nexport const DEFAULT_TONE_MAPPING = ToneMappingValue.ACESFilmic;\nconst TONE_MAPPING_MENU_ENTRIES = TONE_MAPPING_NAMES.map((name, i) => {\n  return {\n    name,\n    value: TONE_MAPPING_VALUES[i]\n  };\n});\nvar ShadowMapTypeName = /* @__PURE__ */ ((ShadowMapTypeName2) => {\n  ShadowMapTypeName2[\"Basic\"] = \"Basic\";\n  ShadowMapTypeName2[\"PCF\"] = \"PCF\";\n  ShadowMapTypeName2[\"PCFSoft\"] = \"PCFSoft\";\n  ShadowMapTypeName2[\"VSM\"] = \"VSM\";\n  return ShadowMapTypeName2;\n})(ShadowMapTypeName || {});\nvar ShadowMapTypeValue = /* @__PURE__ */ ((ShadowMapTypeValue2) => {\n  ShadowMapTypeValue2[ShadowMapTypeValue2[\"Basic\"] = BasicShadowMap] = \"Basic\";\n  ShadowMapTypeValue2[ShadowMapTypeValue2[\"PCF\"] = PCFShadowMap] = \"PCF\";\n  ShadowMapTypeValue2[ShadowMapTypeValue2[\"PCFSoft\"] = PCFSoftShadowMap] = \"PCFSoft\";\n  ShadowMapTypeValue2[ShadowMapTypeValue2[\"VSM\"] = VSMShadowMap] = \"VSM\";\n  return ShadowMapTypeValue2;\n})(ShadowMapTypeValue || {});\nconst SHADOW_MAP_TYPE_NAMES = [\n  \"Basic\" /* Basic */,\n  \"PCF\" /* PCF */,\n  \"PCFSoft\" /* PCFSoft */,\n  \"VSM\" /* VSM */\n];\nconst SHADOW_MAP_TYPE_VALUES = [\n  ShadowMapTypeValue.Basic,\n  ShadowMapTypeValue.PCF,\n  ShadowMapTypeValue.PCFSoft,\n  ShadowMapTypeValue.VSM\n];\nexport const SHADOW_MAP_TYPES = [BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, VSMShadowMap];\nexport const DEFAULT_SHADOW_MAP_TYPE = ShadowMapTypeValue.PCFSoft;\nclass WebGLRendererRopParamsConfig extends NodeParamsConfig {\n  constructor() {\n    super(...arguments);\n    //\n    //\n    //\n    //\n    //\n    this.common = ParamConfig.FOLDER();\n    /** @param tone mapping */\n    this.toneMapping = ParamConfig.INTEGER(DEFAULT_TONE_MAPPING, {\n      menu: {\n        entries: TONE_MAPPING_MENU_ENTRIES\n      },\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateToneMapping(node);\n      }\n    });\n    /** @param tone mapping exposure */\n    this.toneMappingExposure = ParamConfig.FLOAT(1, {\n      range: [0, 2],\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateToneMappingExposure(node);\n      }\n    });\n    /** @param output color space */\n    this.outputColorSpace = ParamConfig.STRING(DEFAULT_OUTPUT_COLOR_SPACE, {\n      menuString: {\n        entries: COLOR_SPACES.map((colorSpace) => ({\n          name: COLOR_SPACE_NAME_BY_COLOR_SPACE[colorSpace],\n          value: colorSpace\n        }))\n      },\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateOutputColorSpace(node);\n      }\n    });\n    /** @param sort objects, which can be necessary when rendering transparent objects */\n    this.sortObjects = ParamConfig.BOOLEAN(1, {\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateSortObjects(node);\n      }\n    });\n    /** @param toggle to override the default pixel ratio, which is 1 for mobile devices, and Math.max(2, window.devicePixelRatio) for other devices */\n    this.tpixelRatio = ParamConfig.BOOLEAN(0, {\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updatePixelRatio(node);\n      }\n    });\n    /** @param higher pixelRatio improves render sharpness but reduces performance */\n    this.pixelRatio = ParamConfig.FLOAT(2, {\n      visibleIf: { tpixelRatio: true },\n      range: [0.1, 4],\n      rangeLocked: [true, false],\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updatePixelRatio(node);\n      }\n    });\n    //\n    //\n    //\n    //\n    //\n    this.shadow = ParamConfig.FOLDER();\n    /** @param toggle on to have shadow maps */\n    this.tshadowMap = ParamConfig.BOOLEAN(1, {\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateShadow(node);\n      }\n    });\n    /** @param toggle on to recompute the shadow maps on every frame. If all objects are static, you may want to turn this off */\n    this.shadowMapAutoUpdate = ParamConfig.BOOLEAN(1, {\n      visibleIf: { tshadowMap: 1 },\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateShadow(node);\n      }\n    });\n    /** @param toggle on to trigger shadows update */\n    this.shadowMapNeedsUpdate = ParamConfig.BOOLEAN(0, {\n      visibleIf: { tshadowMap: 1 },\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateShadow(node);\n      }\n    });\n    /** @param shadows type */\n    this.shadowMapType = ParamConfig.INTEGER(DEFAULT_SHADOW_MAP_TYPE, {\n      visibleIf: { tshadowMap: 1 },\n      menu: {\n        entries: SHADOW_MAP_TYPE_NAMES.map((name, i) => {\n          return {\n            name,\n            value: SHADOW_MAP_TYPE_VALUES[i]\n          };\n        })\n      },\n      cook: false,\n      callback: (node) => {\n        WebGLRendererRopNode.PARAM_CALLBACK_updateShadow(node);\n      }\n    });\n    //\n    //\n    //\n    //\n    //\n    this.advanced = ParamConfig.FOLDER();\n    /** @param toggle on to have alpha on (change requires page reload) */\n    this.alpha = ParamConfig.BOOLEAN(1);\n    /** @param toggle on to have antialias on (change requires page reload) */\n    this.antialias = ParamConfig.BOOLEAN(1);\n    /** @param premultipliedAlpha */\n    this.premultipliedAlpha = ParamConfig.BOOLEAN(1);\n    /** @param stencil */\n    this.stencil = ParamConfig.BOOLEAN(1);\n    /** @param depth */\n    this.depth = ParamConfig.BOOLEAN(1);\n    /** @param localClippingEnabled */\n    this.localClippingEnabled = ParamConfig.BOOLEAN(0);\n    /** @param logarithmicDepthBuffer */\n    this.logarithmicDepthBuffer = ParamConfig.BOOLEAN(0);\n    /** @param preserveDrawingBuffer */\n    this.preserveDrawingBuffer = ParamConfig.BOOLEAN(0);\n    /** @param toggle on to set the precision */\n    this.tprecision = ParamConfig.BOOLEAN(0);\n    /** @param set the precision */\n    this.precision = ParamConfig.INTEGER(RENDERER_PRECISIONS.indexOf(RendererPrecision.HIGH), {\n      visibleIf: { tprecision: 1 },\n      menu: {\n        entries: RENDERER_PRECISIONS.map((name, value) => {\n          return { value, name };\n        })\n      }\n    });\n    /** @param toggle on to set the power preferenc */\n    this.tpowerPreference = ParamConfig.BOOLEAN(0);\n    /** @param set the precision */\n    this.powerPreference = ParamConfig.INTEGER(POWER_PREFERENCES.indexOf(PowerPreference.HIGH), {\n      visibleIf: { tpowerPreference: 1 },\n      menu: {\n        entries: POWER_PREFERENCES.map((name, value) => {\n          return { value, name };\n        })\n      }\n    });\n  }\n  // preserve_drawing_buffer = ParamConfig.BOOLEAN(0);\n}\nconst ParamsConfig = new WebGLRendererRopParamsConfig();\nexport class WebGLRendererRopNode extends TypedRopNode {\n  constructor() {\n    super(...arguments);\n    this.paramsConfig = ParamsConfig;\n    this._rendererByCanvas = /* @__PURE__ */ new Map();\n  }\n  static type() {\n    return RopType.WEBGL;\n  }\n  // private _renderersbyCamera: Map<Camera, WebGLRenderer> = new Map();\n  createRenderer(canvas, gl) {\n    const params = {};\n    const keys = Object.keys(WEBGL_RENDERER_DEFAULT_PARAMS);\n    let k;\n    for (k of keys) {\n      params[k] = WEBGL_RENDERER_DEFAULT_PARAMS[k];\n    }\n    if (isBooleanTrue(this.pv.tprecision)) {\n      const precision = RENDERER_PRECISIONS[this.pv.precision];\n      params.precision = precision;\n    }\n    if (isBooleanTrue(this.pv.tpowerPreference)) {\n      const powerPreference = POWER_PREFERENCES[this.pv.powerPreference];\n      params.powerPreference = powerPreference;\n    }\n    params.antialias = isBooleanTrue(this.pv.antialias);\n    params.alpha = isBooleanTrue(this.pv.alpha);\n    params.premultipliedAlpha = isBooleanTrue(this.pv.premultipliedAlpha);\n    params.depth = isBooleanTrue(this.pv.depth);\n    params.stencil = isBooleanTrue(this.pv.stencil);\n    params.logarithmicDepthBuffer = isBooleanTrue(this.pv.logarithmicDepthBuffer);\n    params.canvas = canvas;\n    params.context = gl;\n    params.preserveDrawingBuffer = this.pv.preserveDrawingBuffer;\n    const renderer = Poly.renderersController.createWebGLRenderer(params);\n    renderer.localClippingEnabled = isBooleanTrue(this.pv.localClippingEnabled);\n    this._rendererByCanvas.set(canvas, renderer);\n    if (Poly.renderersController.printDebug()) {\n      Poly.renderersController.printDebugMessage(`create renderer from node '${this.path()}'`);\n      Poly.renderersController.printDebugMessage({\n        params\n      });\n    }\n    this._updateRenderer(renderer);\n    return renderer;\n  }\n  cook() {\n    this._traverseSceneAndUpdateMaterials();\n    this.cookController.endCook();\n  }\n  _updateRenderer(renderer) {\n    this._updateRendererOutputColorSpace(renderer);\n    this._updateRendererToneMapping(renderer);\n    this._updateRendererToneMappingExposure(renderer);\n    this._updateRendererShadow(renderer);\n    this._updateRendererSortObjects(renderer);\n    this._updateRendererPixelRatio(renderer);\n  }\n  _traverseSceneAndUpdateMaterials() {\n    this.scene().threejsScene().traverse((object) => {\n      const material = object.material;\n      if (material) {\n        if (CoreType.isArray(material)) {\n          for (const mat of material) {\n            mat.needsUpdate = true;\n          }\n        } else {\n          material.needsUpdate = true;\n        }\n      }\n    });\n  }\n  //\n  //\n  static PARAM_CALLBACK_updateToneMapping(node) {\n    node._rendererByCanvas.forEach((renderer, canvas) => {\n      node._updateRendererToneMapping(renderer);\n    });\n  }\n  static PARAM_CALLBACK_updateToneMappingExposure(node) {\n    node._rendererByCanvas.forEach((renderer, canvas) => {\n      node._updateRendererToneMappingExposure(renderer);\n    });\n  }\n  static PARAM_CALLBACK_updateOutputColorSpace(node) {\n    node._rendererByCanvas.forEach((renderer, canvas) => {\n      node._updateRendererOutputColorSpace(renderer);\n    });\n  }\n  static PARAM_CALLBACK_updateShadow(node) {\n    node._rendererByCanvas.forEach((renderer, canvas) => {\n      node._updateRendererShadow(renderer);\n    });\n  }\n  static PARAM_CALLBACK_updateSortObjects(node) {\n    node._rendererByCanvas.forEach((renderer, canvas) => {\n      node._updateRendererSortObjects(renderer);\n    });\n  }\n  static PARAM_CALLBACK_updatePixelRatio(node) {\n    node._rendererByCanvas.forEach((renderer, canvas) => {\n      node._updateRendererPixelRatio(renderer);\n    });\n    window.dispatchEvent(new Event(\"resize\"));\n  }\n  //\n  //\n  _updateRendererToneMapping(renderer) {\n    renderer.toneMapping = this.pv.toneMapping;\n  }\n  _updateRendererToneMappingExposure(renderer) {\n    renderer.toneMappingExposure = this.pv.toneMappingExposure;\n  }\n  _updateRendererOutputColorSpace(renderer) {\n    renderer.outputColorSpace = this.pv.outputColorSpace;\n  }\n  _updateRendererShadow(renderer) {\n    renderer.shadowMap.enabled = this.pv.tshadowMap;\n    renderer.shadowMap.autoUpdate = this.pv.shadowMapAutoUpdate;\n    renderer.shadowMap.needsUpdate = this.pv.shadowMapNeedsUpdate;\n    renderer.shadowMap.type = this.pv.shadowMapType;\n  }\n  _updateRendererSortObjects(renderer) {\n    renderer.sortObjects = this.pv.sortObjects;\n  }\n  _updateRendererPixelRatio(renderer) {\n    const pixelRatio = this.pv.tpixelRatio ? this.pv.pixelRatio : defaultPixelRatio();\n    if (Poly.renderersController.printDebug()) {\n      Poly.renderersController.printDebugMessage(`set renderer pixelRatio from '${this.path()}'`);\n      Poly.renderersController.printDebugMessage({\n        pixelRatio\n      });\n    }\n    renderer.setPixelRatio(pixelRatio);\n  }\n  setToneMapping(toneMapping) {\n    this.p.toneMapping.set(toneMapping);\n  }\n}\n", "\"use strict\";\nimport { Poly } from \"../../engine/Poly\";\nimport {\n  DEFAULT_OUTPUT_COLOR_SPACE,\n  DEFAULT_SHADOW_MAP_TYPE,\n  DEFAULT_TONE_MAPPING\n} from \"../../engine/nodes/rop/WebGLRenderer\";\nimport { defaultPixelRatio } from \"../render/defaultPixelRatio\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { CoreType } from \"../Type\";\nimport { RopType } from \"../../engine/poly/registers/nodes/types/Rop\";\nimport { NodeContext } from \"../../engine/poly/NodeContext\";\nimport { TypedNode } from \"../../engine/nodes/_Base\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nconst UPDATE_STYLE = false;\nconst SIZE_MULT = 1;\nconst _CoreCameraRendererController = class {\n  // private static _superSamplingSize = new Vector2();\n  // static canvasResolution(canvas: HTMLCanvasElement) {\n  // \treturn this._resolutionByCanvasId.get(canvas.id);\n  // }\n  static renderer(canvas) {\n    return this._renderersByCanvas.get(canvas);\n  }\n  static rendererNode(options) {\n    const { scene, camera } = options;\n    const rendererROPId = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.RENDERER_NODE_ID);\n    if (rendererROPId && CoreType.isNumber(rendererROPId)) {\n      const rendererROP = scene.graph.nodeFromId(rendererROPId);\n      return rendererROP;\n    }\n  }\n  static rendererConfig(options) {\n    const { canvas, scene } = options;\n    const gl = Poly.renderersController.getRenderingContext(canvas);\n    if (!gl) {\n      console.error(\"failed to create webgl context\");\n      return;\n    }\n    let renderer;\n    let rendererNode;\n    const rendererROP = this.rendererNode(options);\n    if (rendererROP != null && rendererROP instanceof TypedNode && rendererROP.context() == NodeContext.ROP) {\n      const type = rendererROP.type();\n      switch (type) {\n        case RopType.WEBGL: {\n          renderer = rendererROP.createRenderer(canvas, gl);\n          rendererNode = rendererROP;\n          break;\n        }\n        case RopType.PATH_TRACING: {\n          renderer = rendererROP.renderer(canvas, gl);\n          rendererNode = rendererROP;\n          break;\n        }\n      }\n    }\n    if (!renderer) {\n      renderer = this._defaultRendererByContext.get(gl);\n      if (!renderer) {\n        renderer = _CoreCameraRendererController.createDefaultRenderer(canvas, gl);\n        this._defaultRendererByContext.set(gl, renderer);\n      }\n    }\n    scene.renderersRegister.registerRenderer(renderer);\n    this._renderersByCanvas.set(canvas, renderer);\n    if (!renderer) {\n      return;\n    }\n    const renderConfig = {\n      renderer,\n      rendererNode\n    };\n    return renderConfig;\n  }\n  static setRendererSize(canvas, size) {\n    const renderer = this.renderer(canvas);\n    if (renderer) {\n      renderer.setSize(SIZE_MULT * size.x, SIZE_MULT * size.y, UPDATE_STYLE);\n    }\n  }\n  static createDefaultRenderer(canvas, gl) {\n    const renderer = Poly.renderersController.defaultWebGLRendererForCanvas(canvas);\n    const pixelRatio = defaultPixelRatio();\n    renderer.setPixelRatio(pixelRatio);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = DEFAULT_SHADOW_MAP_TYPE;\n    renderer.toneMapping = DEFAULT_TONE_MAPPING;\n    renderer.toneMappingExposure = 1;\n    renderer.outputColorSpace = DEFAULT_OUTPUT_COLOR_SPACE;\n    if (Poly.renderersController.printDebug()) {\n      Poly.renderersController.printDebugMessage(\"create default renderer\");\n    }\n    return renderer;\n  }\n};\nexport let CoreCameraRendererController = _CoreCameraRendererController;\n// private static _resolutionByCanvas: Map<HTMLCanvasElement, Vector2> = new Map();\nCoreCameraRendererController._defaultRendererByContext = /* @__PURE__ */ new Map();\nCoreCameraRendererController._renderersByCanvas = /* @__PURE__ */ new Map();\n", "\"use strict\";\nimport { RopType } from \"../../engine/poly/registers/nodes/types/Rop\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { CoreType } from \"../Type\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nexport class CoreCameraCSSRendererController {\n  static isCSSRendererNode(node) {\n    return node.type() == RopType.CSS2D || node.type() == RopType.CSS3D;\n  }\n  static cssRendererConfig(options) {\n    const { canvas, scene, camera } = options;\n    const nodeId = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.CSS_RENDERER_NODE_ID);\n    if (nodeId == null) {\n      return;\n    }\n    if (!CoreType.isNumber(nodeId)) {\n      return;\n    }\n    const foundNode = scene.graph.nodeFromId(nodeId);\n    if (!foundNode) {\n      return;\n    }\n    if (!this.isCSSRendererNode(foundNode)) {\n      return;\n    }\n    const cssRendererNode = foundNode;\n    cssRendererNode.compute();\n    const cssRenderer = cssRendererNode.renderer(canvas);\n    return { cssRenderer, cssRendererNode };\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../engine/nodes/utils/params/ParamsConfig\";\nimport { StringParamLanguage } from \"../../engine/params/utils/OptionsController\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nexport function CoreCameraViewerCodeParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param viewerId */\n      this.viewerId = ParamConfig.STRING(\"my-viewer\");\n      /** @param shadow root */\n      // shadowRoot = ParamConfig.BOOLEAN(false);\n      /** @param HTML */\n      this.html = ParamConfig.STRING(\"\", {\n        language: StringParamLanguage.HTML\n      });\n    }\n  };\n}\nexport class ViewerCodeConfig {\n  constructor(options) {\n    this.options = options;\n  }\n  createViewerElement(options) {\n    const { viewerId, html } = this.options;\n    const { domElement, canvas, CSSClass } = options;\n    const _container = document.createElement(\"div\");\n    const container = _container;\n    container.style.height = \"100%\";\n    container.innerHTML = html;\n    domElement == null ? void 0 : domElement.appendChild(container);\n    container.classList.add(CSSClass);\n    const viewerElement = container.querySelector(`#${viewerId}`);\n    if (!viewerElement) {\n      console.error(`failed to find element with id ${viewerId}`);\n      return;\n    }\n    viewerElement.appendChild(canvas);\n    function executeScriptElements(containerElement) {\n      const scriptElements = containerElement.querySelectorAll(\"script\");\n      Array.from(scriptElements).forEach((scriptElement) => {\n        var _a;\n        const clonedElement = document.createElement(\"script\");\n        Array.from(scriptElement.attributes).forEach((attribute) => {\n          clonedElement.setAttribute(attribute.name, attribute.value);\n        });\n        clonedElement.text = scriptElement.text;\n        (_a = scriptElement.parentNode) == null ? void 0 : _a.replaceChild(clonedElement, scriptElement);\n      });\n    }\n    executeScriptElements(container);\n    return viewerElement;\n  }\n}\nexport class CoreCameraViewerCodeController {\n  static viewerCodeConfig(options) {\n    const { camera } = options;\n    const coreObjectClass = coreObjectClassFactory(camera);\n    const viewerId = coreObjectClass.attribValue(camera, CameraAttribute.VIEWER_ID);\n    const html = coreObjectClass.attribValue(camera, CameraAttribute.VIEWER_HTML);\n    if (viewerId == null || html == null) {\n      return;\n    }\n    return new ViewerCodeConfig({ viewerId, html });\n  }\n}\n", "\"use strict\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { CoreType } from \"../Type\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nexport class CoreCameraControlsController {\n  // static isCameraControlsNode(node: BaseNodeType) {\n  // \treturn CAMERA_CONTROLS_NODE_TYPES.includes(node.type());\n  // }\n  static controlsNode(options) {\n    const { scene, camera } = options;\n    let controlsNode;\n    const foundNodeId = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.CONTROLS_NODE_ID);\n    if (foundNodeId && CoreType.isNumber(foundNodeId)) {\n      const foundNode = scene.graph.nodeFromId(foundNodeId);\n      if (foundNode && foundNode.applyControls) {\n        controlsNode = foundNode;\n      }\n    }\n    return controlsNode;\n  }\n}\n", "\"use strict\";\nimport { TypedNode } from \"../../engine/nodes/_Base\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { CoreType } from \"../Type\";\nimport { ObjType } from \"../../engine/poly/registers/nodes/types/Obj\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nexport class CoreCameraRenderSceneController {\n  static isRenderSceneNode(node) {\n    return node.type() == ObjType.SCENE;\n  }\n  static renderScene(options) {\n    const { scene, camera } = options;\n    let sceneNode;\n    const foundNodeId = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.RENDER_SCENE_NODE_ID);\n    if (foundNodeId && CoreType.isNumber(foundNodeId)) {\n      const foundNode = scene.graph.nodeFromId(foundNodeId);\n      if (foundNode && foundNode instanceof TypedNode && this.isRenderSceneNode(foundNode)) {\n        sceneNode = foundNode;\n        return sceneNode.object;\n      }\n    }\n  }\n}\n", "\"use strict\";\nexport var BaseXRSessionEventName = /* @__PURE__ */ ((BaseXRSessionEventName2) => {\n  BaseXRSessionEventName2[\"CONNECTED\"] = \"connected\";\n  BaseXRSessionEventName2[\"DISCONNECTED\"] = \"disconnected\";\n  BaseXRSessionEventName2[\"SELECT\"] = \"select\";\n  BaseXRSessionEventName2[\"SELECT_START\"] = \"selectstart\";\n  BaseXRSessionEventName2[\"SELECT_END\"] = \"selectend\";\n  return BaseXRSessionEventName2;\n})(BaseXRSessionEventName || {});\nexport const BASE_XR_SESSION_EVENT_NAMES = [\n  \"connected\" /* CONNECTED */,\n  \"disconnected\" /* DISCONNECTED */,\n  \"select\" /* SELECT */,\n  \"selectstart\" /* SELECT_START */,\n  \"selectend\" /* SELECT_END */\n];\nfunction _buildEventIndices() {\n  const map = /* @__PURE__ */ new Map();\n  let i = 0;\n  for (const eventName of BASE_XR_SESSION_EVENT_NAMES) {\n    map.set(eventName, i);\n    i++;\n  }\n  return map;\n}\nexport const BASE_XR_EVENT_INDICES = _buildEventIndices();\nexport const WEBXR_REFERENCE_SPACE_TYPES = [\n  \"viewer\",\n  \"local\",\n  \"local-floor\",\n  \"bounded-floor\",\n  \"unbounded\"\n];\nexport const DEFAULT_WEBXR_REFERENCE_SPACE_TYPE = \"local-floor\";\nexport var WebXRFeatureStatus = /* @__PURE__ */ ((WebXRFeatureStatus2) => {\n  WebXRFeatureStatus2[\"NOT_USED\"] = \"not used\";\n  WebXRFeatureStatus2[\"OPTIONAL\"] = \"optional\";\n  WebXRFeatureStatus2[\"REQUIRED\"] = \"required\";\n  return WebXRFeatureStatus2;\n})(WebXRFeatureStatus || {});\nexport const WEBXR_FEATURE_STATUSES = [\n  \"not used\" /* NOT_USED */,\n  \"optional\" /* OPTIONAL */,\n  \"required\" /* REQUIRED */\n];\nexport const WEBXR_FEATURE_STATUS_OPTIONAL_INDEX = WEBXR_FEATURE_STATUSES.indexOf(\"optional\" /* OPTIONAL */);\nexport const WEBXR_FEATURE_PARAM_OPTIONS = {\n  menu: {\n    entries: WEBXR_FEATURE_STATUSES.map((name, value) => ({ name, value }))\n  }\n};\n", "\"use strict\";\nexport var WebXRVRFeature = /* @__PURE__ */ ((WebXRVRFeature2) => {\n  WebXRVRFeature2[\"LOCAL_FLOOR\"] = \"local-floor\";\n  WebXRVRFeature2[\"BOUNDED_FLOOR\"] = \"bounded-floor\";\n  WebXRVRFeature2[\"HAND_TRACKING\"] = \"hand-tracking\";\n  WebXRVRFeature2[\"LAYERS\"] = \"layers\";\n  return WebXRVRFeature2;\n})(WebXRVRFeature || {});\nexport const WEBXR_VR_FEATURES = [\n  \"local-floor\" /* LOCAL_FLOOR */,\n  \"bounded-floor\" /* BOUNDED_FLOOR */,\n  \"hand-tracking\" /* HAND_TRACKING */,\n  \"layers\" /* LAYERS */\n];\n", "\"use strict\";\nexport var WebXRARFeature = /* @__PURE__ */ ((WebXRARFeature2) => {\n  WebXRARFeature2[\"HIT_TEST\"] = \"hit-test\";\n  WebXRARFeature2[\"LIGHT_ESTIMATION\"] = \"light-estimation\";\n  return WebXRARFeature2;\n})(WebXRARFeature || {});\nexport const WEBXR_AR_FEATURES = [\n  \"hit-test\" /* HIT_TEST */,\n  \"light-estimation\" /* LIGHT_ESTIMATION */\n  // WebXRARFeature.CAMERA_ACCESS,\n];\n", "\"use strict\";\nimport { CameraAttribute } from \"../CoreCamera\";\nimport {\n  WEBXR_REFERENCE_SPACE_TYPES\n} from \"../../webXR/Common\";\nimport { WEBXR_VR_FEATURES } from \"../../webXR/webXRVR/CommonVR\";\nimport { WEBXR_AR_FEATURES } from \"../../webXR/webXRAR/CommonAR\";\nimport { coreObjectClassFactory } from \"../../geometry/CoreObjectFactory\";\nfunction getFeatures(camera, attribName, existingFeatures) {\n  const features = [];\n  const featuresStr = coreObjectClassFactory(camera).attribValue(camera, attribName);\n  const featuresStrings = featuresStr == null ? void 0 : featuresStr.split(\" \");\n  if (featuresStrings) {\n    for (const featuresString of featuresStrings) {\n      if (existingFeatures.includes(featuresString)) {\n        features.push(featuresString);\n      }\n    }\n  }\n  return features;\n}\nfunction _getRequiredAndOptionalFeatures(camera, existingFeatures, attribNames) {\n  const optionalFeatures = getFeatures(camera, attribNames.optional, existingFeatures);\n  const requiredFeatures = getFeatures(camera, attribNames.required, existingFeatures);\n  return { requiredFeatures, optionalFeatures };\n}\nfunction _getReferenceSpaceType(camera, options) {\n  const coreObjectClass = coreObjectClassFactory(camera);\n  let overrideReferenceSpaceType = coreObjectClass.attribValue(camera, options.override);\n  let referenceSpaceType = coreObjectClass.attribValue(camera, options.type);\n  if (!(referenceSpaceType && WEBXR_REFERENCE_SPACE_TYPES.includes(referenceSpaceType))) {\n    overrideReferenceSpaceType = false;\n    referenceSpaceType = void 0;\n  }\n  return { overrideReferenceSpaceType, referenceSpaceType };\n}\nexport class CoreCameraWebXRController {\n  static process(options) {\n    const { camera, scene, renderer, canvas } = options;\n    const controllers = [];\n    const subMountFunctions = [];\n    const subUnmountFunctions = [];\n    const mountFunction = () => {\n      for (const subFunc of subMountFunctions) {\n        subFunc();\n      }\n    };\n    const unmountFunction = () => {\n      for (const subFunc of subUnmountFunctions) {\n        subFunc();\n      }\n    };\n    const coreObjectClass = coreObjectClassFactory(camera);\n    const isWebAR = coreObjectClass.attribValue(camera, CameraAttribute.WEBXR_AR);\n    if (isWebAR == true) {\n      const createFunction = scene.webXR.ARControllerCreateFunction();\n      if (createFunction) {\n        const { overrideReferenceSpaceType, referenceSpaceType } = _getReferenceSpaceType(camera, {\n          type: CameraAttribute.WEBXR_AR_OVERRIDE_REFERENCE_SPACE_TYPE,\n          override: CameraAttribute.WEBXR_AR_REFERENCE_SPACE_TYPE\n        });\n        const { requiredFeatures, optionalFeatures } = _getRequiredAndOptionalFeatures(\n          camera,\n          WEBXR_AR_FEATURES,\n          {\n            optional: CameraAttribute.WEBXR_AR_FEATURES_OPTIONAL,\n            required: CameraAttribute.WEBXR_AR_FEATURES_REQUIRED\n          }\n        );\n        const controller = createFunction(renderer, camera, canvas, {\n          overrideReferenceSpaceType: overrideReferenceSpaceType || false,\n          referenceSpaceType,\n          requiredFeatures,\n          optionalFeatures\n        });\n        controllers.push(controller);\n      }\n    }\n    const isWebVR = coreObjectClass.attribValue(camera, CameraAttribute.WEBXR_VR);\n    if (isWebVR == true) {\n      const createFunction = scene.webXR.VRControllerCreateFunction();\n      if (createFunction) {\n        const { overrideReferenceSpaceType, referenceSpaceType } = _getReferenceSpaceType(camera, {\n          type: CameraAttribute.WEBXR_VR_OVERRIDE_REFERENCE_SPACE_TYPE,\n          override: CameraAttribute.WEBXR_VR_REFERENCE_SPACE_TYPE\n        });\n        const { requiredFeatures, optionalFeatures } = _getRequiredAndOptionalFeatures(\n          camera,\n          WEBXR_VR_FEATURES,\n          {\n            optional: CameraAttribute.WEBXR_VR_FEATURES_OPTIONAL,\n            required: CameraAttribute.WEBXR_VR_FEATURES_REQUIRED\n          }\n        );\n        const controller = createFunction(renderer, camera, canvas, {\n          overrideReferenceSpaceType: overrideReferenceSpaceType || false,\n          referenceSpaceType,\n          requiredFeatures,\n          optionalFeatures\n        });\n        controllers.push(controller);\n      }\n    }\n    for (const controller of controllers) {\n      subMountFunctions.push(() => controller.mount());\n      subUnmountFunctions.push(() => controller.unmount());\n    }\n    return { mountFunction, unmountFunction };\n  }\n}\n", "\"use strict\";\nexport var MarkerTrackingSourceMode = /* @__PURE__ */ ((MarkerTrackingSourceMode2) => {\n  MarkerTrackingSourceMode2[\"WEBCAM\"] = \"webcam\";\n  MarkerTrackingSourceMode2[\"IMAGE\"] = \"image\";\n  MarkerTrackingSourceMode2[\"VIDEO\"] = \"video\";\n  return MarkerTrackingSourceMode2;\n})(MarkerTrackingSourceMode || {});\nexport const MARKER_TRACKING_SOURCE_MODES = [\n  \"webcam\" /* WEBCAM */,\n  \"image\" /* IMAGE */,\n  \"video\" /* VIDEO */\n];\nexport var MarkerTrackingTransformMode = /* @__PURE__ */ ((MarkerTrackingTransformMode2) => {\n  MarkerTrackingTransformMode2[\"CAMERA\"] = \"camera\";\n  MarkerTrackingTransformMode2[\"MARKER\"] = \"marker\";\n  return MarkerTrackingTransformMode2;\n})(MarkerTrackingTransformMode || {});\nexport const MARKER_TRACKING_TRANSFORM_MODES = [\n  \"camera\" /* CAMERA */,\n  \"marker\" /* MARKER */\n];\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../poly/InputCloneMode\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport {\n  MarkerTrackingTransformMode,\n  MARKER_TRACKING_TRANSFORM_MODES,\n  MarkerTrackingSourceMode,\n  MARKER_TRACKING_SOURCE_MODES\n} from \"../../../core/webXR/markerTracking/Common\";\nimport { Poly } from \"../../Poly\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nconst _CameraWebXRARMarkerTrackingSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.WEBXR_AR_MARKER_TRACKING;\n  }\n  cook(inputCoreGroups, params) {\n    var _a;\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    if (Poly.thirdParty.markerTracking().hasController()) {\n      if (this._node) {\n        _CameraWebXRARMarkerTrackingSopOperation.updateObject({\n          scene: this._node.scene(),\n          objects,\n          params,\n          active: true\n        });\n      }\n    } else {\n      (_a = this._node) == null ? void 0 : _a.states.error.set(\n        \"This node requires the plugin-marker-tracking. See [https://github.com/polygonjs/plugin-marker-tracking](https://github.com/polygonjs/plugin-marker-tracking)\"\n      );\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params, active } = options;\n    for (let object of objects) {\n      ThreejsCoreObject.addAttribute(object, CameraAttribute.WEBXR_AR_MARKER_TRACKING, active);\n      const sourceMode = MARKER_TRACKING_SOURCE_MODES[params.sourceMode];\n      ThreejsCoreObject.addAttribute(object, CameraAttribute.WEBXR_AR_MARKER_TRACKING_SOURCE_MODE, sourceMode);\n      ThreejsCoreObject.addAttribute(\n        object,\n        CameraAttribute.WEBXR_AR_MARKER_TRACKING_SOURCE_URL,\n        params.sourceUrl\n      );\n      const transformMode = MARKER_TRACKING_TRANSFORM_MODES[params.transformMode];\n      ThreejsCoreObject.addAttribute(\n        object,\n        CameraAttribute.WEBXR_AR_MARKER_TRACKING_TRANSFORM_MODE,\n        transformMode\n      );\n      ThreejsCoreObject.addAttribute(object, CameraAttribute.WEBXR_AR_MARKER_TRACKING_SMOOTH, params.smooth);\n      ThreejsCoreObject.addAttribute(\n        object,\n        CameraAttribute.WEBXR_AR_MARKER_TRACKING_SMOOTH_COUNT,\n        params.smoothCount\n      );\n      ThreejsCoreObject.addAttribute(\n        object,\n        CameraAttribute.WEBXR_AR_MARKER_TRACKING_BAR_CODE_TYPE,\n        params.barCodeType\n      );\n      ThreejsCoreObject.addAttribute(\n        object,\n        CameraAttribute.WEBXR_AR_MARKER_TRACKING_BAR_CODE_VALUE,\n        params.barCodeValue\n      );\n    }\n  }\n};\nexport let CameraWebXRARMarkerTrackingSopOperation = _CameraWebXRARMarkerTrackingSopOperation;\nCameraWebXRARMarkerTrackingSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  sourceMode: MARKER_TRACKING_SOURCE_MODES.indexOf(MarkerTrackingSourceMode.WEBCAM),\n  sourceUrl: \"\",\n  transformMode: MARKER_TRACKING_TRANSFORM_MODES.indexOf(MarkerTrackingTransformMode.CAMERA),\n  smooth: true,\n  smoothCount: 5,\n  barCodeType: Poly.thirdParty.markerTracking().barCodeTypes()[0] || \"\",\n  barCodeValue: 0\n};\nCameraWebXRARMarkerTrackingSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { ParamConfig } from \"../../../engine/nodes/utils/params/ParamsConfig\";\nimport {\n  MarkerTrackingSourceMode,\n  MARKER_TRACKING_SOURCE_MODES,\n  MARKER_TRACKING_TRANSFORM_MODES\n} from \"../../webXR/markerTracking/Common\";\nimport { CameraAttribute } from \"../CoreCamera\";\nimport { CameraWebXRARMarkerTrackingSopOperation } from \"../../../engine/operations/sop/CameraWebXRARMarkerTracking\";\nimport { CoreType } from \"../../Type\";\nimport { Poly } from \"../../../engine/Poly\";\nimport { EXTENSIONS_BY_NODE_TYPE_BY_CONTEXT } from \"../../loader/FileExtensionRegister\";\nimport { CameraSopNodeType, NodeContext } from \"../../../engine/poly/NodeContext\";\nimport { coreObjectClassFactory } from \"../../geometry/CoreObjectFactory\";\nconst DEFAULT = CameraWebXRARMarkerTrackingSopOperation.DEFAULT_PARAMS;\nexport function CoreCameraMarkerTrackingParamConfig(Base) {\n  const defaultBarCodeType = Poly.thirdParty.markerTracking().barCodeTypes()[0];\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param select if you want to use the webcam or an image/video as tracking source */\n      this.sourceMode = ParamConfig.INTEGER(DEFAULT.sourceMode, {\n        menu: {\n          entries: MARKER_TRACKING_SOURCE_MODES.map((name, value) => ({ name, value }))\n        }\n      });\n      /** @param image or video url */\n      this.sourceUrl = ParamConfig.STRING(DEFAULT.sourceUrl, {\n        fileBrowse: {\n          extensions: EXTENSIONS_BY_NODE_TYPE_BY_CONTEXT[NodeContext.COP][CameraSopNodeType.WEBXR_AR_MARKER_TRACKING]\n        },\n        visibleIf: [\n          { sourceMode: MARKER_TRACKING_SOURCE_MODES.indexOf(MarkerTrackingSourceMode.IMAGE) },\n          { sourceMode: MARKER_TRACKING_SOURCE_MODES.indexOf(MarkerTrackingSourceMode.VIDEO) }\n        ]\n      });\n      /** @param transformMode */\n      this.transformMode = ParamConfig.INTEGER(DEFAULT.transformMode, {\n        menu: {\n          entries: MARKER_TRACKING_TRANSFORM_MODES.map((name, value) => ({ name, value }))\n        }\n      });\n      /** @param smooth */\n      this.smooth = ParamConfig.BOOLEAN(DEFAULT.smooth, {\n        separatorBefore: true\n      });\n      /** @param  smooth count */\n      this.smoothCount = ParamConfig.INTEGER(DEFAULT.smoothCount, {\n        range: [0, 10],\n        rangeLocked: [true, false]\n      });\n      /** @param barcode type */\n      this.barCodeType = ParamConfig.STRING(defaultBarCodeType, {\n        separatorBefore: true,\n        menuString: {\n          entries: Poly.thirdParty.markerTracking().barCodeTypes().map((name, value) => ({ name, value: name }))\n        }\n      });\n      /** @param barcode value */\n      this.barCodeValue = ParamConfig.INTEGER(DEFAULT.barCodeValue, {\n        range: [0, 511],\n        rangeLocked: [true, true]\n      });\n    }\n  };\n}\nexport class CoreCameraMarkerTrackingController {\n  static process(options) {\n    const { canvas, scene, camera, onError } = options;\n    const coreObjectClass = coreObjectClassFactory(camera);\n    const isARjsTrackMarker = coreObjectClass.attribValue(camera, CameraAttribute.WEBXR_AR_MARKER_TRACKING);\n    if (!isARjsTrackMarker) {\n      return;\n    }\n    const sourceMode = coreObjectClass.attribValue(\n      camera,\n      CameraAttribute.WEBXR_AR_MARKER_TRACKING_SOURCE_MODE\n    );\n    const sourceUrl = coreObjectClass.attribValue(camera, CameraAttribute.WEBXR_AR_MARKER_TRACKING_SOURCE_URL);\n    const barCodeType = coreObjectClass.attribValue(\n      camera,\n      CameraAttribute.WEBXR_AR_MARKER_TRACKING_BAR_CODE_TYPE\n    );\n    const barCodeValue = coreObjectClass.attribValue(\n      camera,\n      CameraAttribute.WEBXR_AR_MARKER_TRACKING_BAR_CODE_VALUE\n    );\n    const transformMode = coreObjectClass.attribValue(\n      camera,\n      CameraAttribute.WEBXR_AR_MARKER_TRACKING_TRANSFORM_MODE\n    );\n    if (sourceMode == null || barCodeType == null || barCodeValue == null || transformMode == null) {\n      return;\n    }\n    if (!MARKER_TRACKING_SOURCE_MODES.includes(sourceMode)) {\n      return;\n    }\n    if ([MarkerTrackingSourceMode.IMAGE, MarkerTrackingSourceMode.VIDEO].includes(sourceMode) && sourceUrl == null) {\n      return;\n    }\n    if (!CoreType.isString(barCodeType)) {\n      return;\n    }\n    if (!CoreType.isString(transformMode)) {\n      return;\n    }\n    if (!Poly.thirdParty.markerTracking().barCodeTypes().includes(barCodeType)) {\n      return;\n    }\n    if (!MARKER_TRACKING_TRANSFORM_MODES.includes(transformMode)) {\n      return;\n    }\n    if (!CoreType.isNumber(barCodeValue)) {\n      return;\n    }\n    const smooth = coreObjectClass.attribValue(camera, CameraAttribute.WEBXR_AR_MARKER_TRACKING_SMOOTH) || false;\n    const smoothCount = coreObjectClass.attribValue(camera, CameraAttribute.WEBXR_AR_MARKER_TRACKING_SMOOTH_COUNT) || 0;\n    try {\n      const controller = Poly.thirdParty.markerTracking().createController({\n        sourceMode,\n        sourceUrl,\n        canvas,\n        camera,\n        scene: scene.threejsScene(),\n        transformMode,\n        barCode: {\n          type: barCodeType,\n          value: barCodeValue\n        },\n        smooth: {\n          active: smooth,\n          count: smoothCount\n        }\n      });\n      const errorMessage = controller == null ? void 0 : controller.errorMessage();\n      if (errorMessage) {\n        onError(errorMessage);\n      } else {\n        if (!controller) {\n          onError(\n            \"failed to create the MarkerTracking controller. Make sure you have loaded the plugin. See: `https://polygonjs.com/markerTracking`\"\n          );\n        }\n      }\n      return controller == null ? void 0 : controller.config();\n    } catch (err) {\n      onError(\"There was an unknown error while using the MarkerTracking plugin\");\n    }\n  }\n}\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { CameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { CameraSopNodeType } from \"../../poly/NodeContext\";\nimport { CoreMask } from \"../../../core/geometry/Mask\";\nconst _CameraFPSSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraSopNodeType.FPS;\n  }\n  cook(inputCoreGroups, params) {\n    const coreGroup = inputCoreGroups[0];\n    const objects = CoreMask.filterObjects(coreGroup, {\n      group: params.group\n    });\n    if (this._node) {\n      _CameraFPSSopOperation.updateObject({ objects, params });\n    }\n    return coreGroup;\n  }\n  static updateObject(options) {\n    const { objects, params } = options;\n    for (let object of objects) {\n      ThreejsCoreObject.addAttribute(object, CameraAttribute.MAX_FPS, params.maxFPS);\n      ThreejsCoreObject.addAttribute(object, CameraAttribute.MAX_FPS_DYNAMIC_CHANGE, params.allowDynamicChange);\n    }\n  }\n};\nexport let CameraFPSSopOperation = _CameraFPSSopOperation;\nCameraFPSSopOperation.DEFAULT_PARAMS = {\n  group: \"\",\n  maxFPS: 60,\n  allowDynamicChange: false\n};\nCameraFPSSopOperation.INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;\n", "\"use strict\";\nimport { ParamConfig } from \"../../engine/nodes/utils/params/ParamsConfig\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { CameraFPSSopOperation } from \"../../engine/operations/sop/CameraFPS\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nconst DEFAULT = CameraFPSSopOperation.DEFAULT_PARAMS;\nexport function CoreCameraFPSParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param expected FPS */\n      this.maxFPS = ParamConfig.INTEGER(DEFAULT.maxFPS, {\n        range: [0, 120],\n        rangeLocked: [true, false]\n      });\n      /** @param allow dynamic change. If this is true, the viewer will check the attribute on the camera at every frame, before adapting the FPS. This allows to change the FPS at a later stage */\n      this.allowDynamicChange = ParamConfig.BOOLEAN(DEFAULT.allowDynamicChange);\n    }\n  };\n}\nconst _getMinDelta = (fps) => {\n  return 1 / fps;\n};\nconst SAFETY_THRESHOLD = 0.1;\nexport function isDeltaValid(accumulatedDelta, condig) {\n  const minDelta = condig.minDelta();\n  if (accumulatedDelta > minDelta) {\n    return true;\n  }\n  const deltaDeltas = minDelta - accumulatedDelta;\n  if (deltaDeltas > 0 && deltaDeltas / minDelta > SAFETY_THRESHOLD) {\n    return false;\n  }\n  return true;\n}\nexport class CoreCameraViewerFPSController {\n  static viewerFPSConfig(options) {\n    const { camera } = options;\n    const _getMaxFPSIfPreset = () => {\n      return coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.MAX_FPS);\n    };\n    const maxFPS = _getMaxFPSIfPreset();\n    if (maxFPS == null) {\n      return;\n    }\n    const _minDelta = _getMinDelta(maxFPS);\n    const allowDynamicChange = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.MAX_FPS_DYNAMIC_CHANGE) || false;\n    if (allowDynamicChange) {\n      const defaultMinDelta = _getMinDelta(60);\n      const config = {\n        minDelta: () => {\n          const maxFPS2 = _getMaxFPSIfPreset();\n          if (maxFPS2 == null) {\n            return defaultMinDelta;\n          }\n          return _getMinDelta(maxFPS2);\n        }\n      };\n      return config;\n    } else {\n      const config = {\n        minDelta: () => _minDelta\n      };\n      return config;\n    }\n  }\n}\n", "\"use strict\";\nimport { WebGLRenderer } from \"three\";\nimport { TypedViewer } from \"./_Base\";\nimport { CoreCameraRendererController } from \"../../core/camera/CoreCameraRendererController\";\nimport { CoreCameraPostProcessController } from \"../../core/camera/CoreCameraPostProcessController\";\nimport { CoreCameraCSSRendererController } from \"../../core/camera/CoreCameraCSSRendererController\";\nimport { CoreCameraViewerCodeController } from \"../../core/camera/CoreCameraViewerCodeController\";\nimport { CoreCameraControlsController } from \"../../core/camera/CoreCameraControlsController\";\nimport { CoreCameraRenderSceneController } from \"../../core/camera/CoreCameraRenderSceneController\";\nimport { CoreCameraWebXRController } from \"../../core/camera/webXR/CoreCameraWebXR\";\nimport { CoreCameraMarkerTrackingController } from \"../../core/camera/webXR/CoreCameraMarkerTracking\";\nimport { CoreCameraViewerFPSController, isDeltaValid } from \"../../core/camera/CoreCameraFPS\";\nconst CSS_CLASS = \"CoreThreejsViewer\";\nexport class ThreejsViewer extends TypedViewer {\n  constructor(options) {\n    super(options);\n    this._animateWebBound = this._animateWeb.bind(this);\n    this._accumulatedDelta = 0;\n    //\n    //\n    // resize\n    //\n    //\n    this._onResizeBound = this.onResize.bind(this);\n    this._setupFunctions(options);\n  }\n  static _canvasIdPrefix() {\n    return \"ThreejsViewer\";\n  }\n  rendererConfig() {\n    return this._rendererConfig;\n  }\n  _setupFunctions(options) {\n    var _a;\n    const camera = this.camera();\n    const scene = this.scene();\n    const canvas = this.canvas();\n    const threejsScene = scene.threejsScene();\n    this._errorMessage = void 0;\n    this._renderer = options.renderer;\n    if (!this._renderer) {\n      this._rendererConfig = CoreCameraRendererController.rendererConfig({\n        camera,\n        scene,\n        canvas\n      });\n      if (this._rendererConfig) {\n        this._renderer = this._rendererConfig.renderer;\n      }\n    }\n    const renderer = this._renderer;\n    if (!renderer) {\n      console.error(\"no renderer\");\n    }\n    if (renderer) {\n      const rendererScene = CoreCameraRenderSceneController.renderScene({ camera, scene });\n      const renderScene = rendererScene || threejsScene;\n      this._effectComposer = CoreCameraPostProcessController.createComposer({\n        camera,\n        scene,\n        renderScene,\n        renderer,\n        viewer: this\n      });\n      const effectComposer = this._effectComposer;\n      if (renderer instanceof WebGLRenderer) {\n        this._webXRConfig = CoreCameraWebXRController.process({\n          camera,\n          scene,\n          renderer,\n          canvas: this.canvas()\n        });\n        this._markerTrackingConfig = CoreCameraMarkerTrackingController.process({\n          canvas,\n          camera,\n          scene,\n          onError: (errorMessage) => {\n            this._errorMessage = errorMessage;\n          }\n        });\n      }\n      this._codeConfig = CoreCameraViewerCodeController.viewerCodeConfig({ camera });\n      this._cssRendererConfig = CoreCameraCSSRendererController.cssRendererConfig({ scene, camera, canvas });\n      const cssRenderer = (_a = this._cssRendererConfig) == null ? void 0 : _a.cssRenderer;\n      this._renderCSSFunc = cssRenderer ? () => cssRenderer.render(renderScene, camera) : void 0;\n      this._controlsNode = CoreCameraControlsController.controlsNode({ camera, scene });\n      this._FPSConfig = CoreCameraViewerFPSController.viewerFPSConfig({ camera });\n      if (effectComposer) {\n        this._renderFunc = (delta) => effectComposer.render(delta);\n      } else {\n        this._renderFunc = () => renderer.render(renderScene, camera);\n      }\n      return { renderer, renderScene, camera };\n    }\n  }\n  /**\n   * mounts the viewer onto an element\n   *\n   *\n   */\n  mount(element, options) {\n    var _a, _b, _c;\n    super.mount(element, options);\n    const canvas = this.canvas();\n    const _appendCanvasWithViewerCodeConfig = (config) => {\n      if (!this._domElement) {\n        return;\n      }\n      return config.createViewerElement({ domElement: this._domElement, canvas, CSSClass: CSS_CLASS });\n    };\n    const _appendCanvasWithoutViewerCodeConfig = () => {\n      var _a2, _b2;\n      (_a2 = this._domElement) == null ? void 0 : _a2.appendChild(canvas);\n      (_b2 = this._domElement) == null ? void 0 : _b2.classList.add(CSS_CLASS);\n      return this._domElement;\n    };\n    const viewerContainerElement = this._codeConfig ? _appendCanvasWithViewerCodeConfig(this._codeConfig) : _appendCanvasWithoutViewerCodeConfig();\n    const cssRendererNode = (_a = this._cssRendererConfig) == null ? void 0 : _a.cssRendererNode;\n    if (cssRendererNode) {\n      cssRendererNode.mountRenderer(canvas);\n    }\n    (_b = this._webXRConfig) == null ? void 0 : _b.mountFunction();\n    (_c = this._markerTrackingConfig) == null ? void 0 : _c.mountFunction();\n    this._build();\n    this._setEvents();\n    const canvasParent = canvas.parentElement;\n    if (canvasParent) {\n      this._createResizeObserver(canvasParent);\n    }\n    this.onResize();\n    if (this._errorMessage) {\n      const errorElement = document.createElement(\"div\");\n      errorElement.style.position = \"absolute\";\n      errorElement.style.top = \"0px\";\n      errorElement.style.width = \"100%\";\n      errorElement.style.color = \"red\";\n      errorElement.style.backgroundColor = \"white\";\n      errorElement.style.padding = \"20px\";\n      errorElement.style.textAlign = \"center\";\n      errorElement.style.opacity = \"90%\";\n      errorElement.innerText = this._errorMessage;\n      viewerContainerElement == null ? void 0 : viewerContainerElement.append(errorElement);\n    }\n  }\n  _build() {\n    this._initDisplay();\n    this.activate();\n  }\n  /**\n   * disposes the viewer\n   *\n   *\n   */\n  dispose() {\n    var _a, _b, _c;\n    const canvas = this.canvas();\n    const cssRendererNode = (_a = this._cssRendererConfig) == null ? void 0 : _a.cssRendererNode;\n    if (cssRendererNode) {\n      cssRendererNode.unmountRenderer(canvas);\n    }\n    this._cssRendererConfig = void 0;\n    (_b = this._webXRConfig) == null ? void 0 : _b.unmountFunction();\n    (_c = this._markerTrackingConfig) == null ? void 0 : _c.unmountFunction();\n    this._effectComposer = void 0;\n    this.setAutoRender(false);\n    this._cancelAnimate();\n    this._unlistenToWindowResize();\n    this._disposeResizeObserver();\n    super.dispose();\n  }\n  _setEvents() {\n    this.eventsController().init();\n    this.webglController().init();\n    this._unlistenToWindowResize();\n    this._listenToWindowResize();\n  }\n  _initDisplay() {\n    if (!this._canvas) {\n      console.warn(\"no canvas found for viewer\");\n      return;\n    }\n    if (!this._renderer) {\n      return;\n    }\n    const pixelRatio = this._renderer.getPixelRatio();\n    this.camerasController().computeSizeAndAspect(pixelRatio);\n    this.audioController().update();\n    this._startAnimate();\n  }\n  /**\n   * setAutoRender to false will stop the rendering. This can be useful if you know that nothing has changed in the scene, or if the renderer is currently not visible.\n   *\n   *\n   */\n  setAutoRender(state = true, options) {\n    super.setAutoRender(state);\n    if (this._doRender && this._requestAnimationFrameId == null) {\n      this._startAnimate();\n    }\n    if (!this._doRender) {\n      if (options && options.cancelAnimate == true) {\n        this._cancelAnimate();\n      }\n    }\n  }\n  isXR() {\n    if (!this._renderer) {\n      return false;\n    }\n    return this._renderer instanceof WebGLRenderer && this._renderer.xr.enabled;\n  }\n  _startAnimate() {\n    if (this.isXR()) {\n      const renderer = this._renderer;\n      if (!renderer) {\n        return;\n      }\n      const webXRController = this.scene().webXR;\n      const xrCallback = (timestamp, frame) => {\n        var _a;\n        (_a = webXRController.activeXRController()) == null ? void 0 : _a.process(frame);\n        this._animateWebXR();\n      };\n      renderer.setAnimationLoop(xrCallback);\n    } else {\n      this._animateWeb();\n    }\n  }\n  _cancelAnimate() {\n    var _a;\n    if (this.isXR()) {\n      (_a = this._renderer) == null ? void 0 : _a.setAnimationLoop(null);\n    } else {\n      this._cancelAnimateCommon();\n    }\n  }\n  _animateWeb() {\n    this._requestAnimationFrameId = requestAnimationFrame(this._animateWebBound);\n    this.__animateCommon__();\n  }\n  _animateWebXR() {\n    this.__animateCommon__();\n  }\n  __animateCommon__() {\n    const delta = this._scene.timeController.updateClockDelta();\n    if (this._FPSConfig) {\n      this._accumulatedDelta += delta;\n      if (!isDeltaValid(this._accumulatedDelta, this._FPSConfig)) {\n        return;\n      }\n      this._accumulatedDelta = 0;\n    }\n    this._tickAndRender(delta);\n  }\n  _cancelAnimateCommon() {\n    this._doRender = false;\n    if (this._requestAnimationFrameId != null) {\n      cancelAnimationFrame(this._requestAnimationFrameId);\n      this._requestAnimationFrameId = void 0;\n    }\n    if (this._canvas) {\n    }\n  }\n  _tick(delta) {\n    var _a;\n    super._tick(delta);\n    (_a = this._markerTrackingConfig) == null ? void 0 : _a.renderFunction();\n  }\n  /**\n   * returns the current renderer\n   *\n   *\n   */\n  renderer() {\n    return this._renderer;\n  }\n  effectComposer() {\n    return this._effectComposer;\n  }\n  preCompile() {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.compile(this._scene.threejsScene(), this._camera);\n  }\n  markAsReady() {\n    this.preCompile();\n    this.setAutoRender(true);\n  }\n  // private _resizeRequired = false;\n  onResize() {\n    const renderUpdateRequired = this.updateSize();\n    if (!renderUpdateRequired) {\n      return;\n    }\n    if (this._renderFunc) {\n      this._updateRendererSize();\n      this._renderFunc(this.scene().timeController.delta());\n    }\n    return;\n  }\n  updateSize() {\n    const renderer = this._renderer;\n    if (!renderer) {\n      return false;\n    }\n    const pixelRatio = renderer.getPixelRatio();\n    this.camerasController().computeSizeAndAspect(pixelRatio);\n    const size = this.camerasController().size;\n    if (this._size.equals(size)) {\n      return false;\n    }\n    this._size.copy(size);\n    this._scene.viewersRegister.markViewerAsSizeUpdated(this);\n    return true;\n  }\n  // private _rendererSizeUpdateRequired = false;\n  _updateRendererSize() {\n    var _a, _b;\n    const canvas = this._canvas;\n    if (!canvas) {\n      return;\n    }\n    CoreCameraRendererController.setRendererSize(canvas, this._size);\n    (_a = this._cssRendererConfig) == null ? void 0 : _a.cssRenderer.setSize(this._size.x, this._size.y);\n    (_b = this._effectComposer) == null ? void 0 : _b.setSize(this._size.x, this._size.y);\n    this.camerasController().updateCameraAspect();\n  }\n  _listenToWindowResize() {\n  }\n  _unlistenToWindowResize() {\n  }\n  _createResizeObserver(canvasElementParent) {\n    this._disposeResizeObserver();\n    this._resizeObserver = new ResizeObserver(this._onResizeBound);\n    this._resizeObserver.observe(canvasElementParent, { box: \"border-box\" });\n  }\n  _disposeResizeObserver() {\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n      this._resizeObserver = void 0;\n    }\n  }\n}\n", "\"use strict\";\nimport { CoreType } from \"../../Type\";\nimport { CameraAttribute } from \"../CoreCamera\";\nimport { CameraFrameMode, CAMERA_FRAME_MODES } from \"../CoreCameraFrameMode\";\nimport { coreObjectClassFactory } from \"../../geometry/CoreObjectFactory\";\nexport class BaseCoreCameraFrameMode {\n  static frameMode(camera) {\n    return this._getFrameMode(camera) || CameraFrameMode.DEFAULT;\n  }\n  static expectedAspectRatio(camera) {\n    return coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.FRAME_MODE_EXPECTED_ASPECT_RATIO);\n  }\n  static _getFrameMode(camera) {\n    const frameModeAttribVal = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.FRAME_MODE);\n    if (!frameModeAttribVal) {\n      return;\n    }\n    if (!CoreType.isNumber(frameModeAttribVal)) {\n      return;\n    }\n    return CAMERA_FRAME_MODES[frameModeAttribVal];\n  }\n}\n", "\"use strict\";\nimport { ParamConfig } from \"../../engine/nodes/utils/params/ParamsConfig\";\nimport { Vector2 } from \"three\";\nimport { CameraAttribute } from \"./CoreCamera\";\nimport { coreObjectClassFactory } from \"../geometry/CoreObjectFactory\";\nexport function CoreCameraViewOffsetParamConfig(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param min */\n      this.min = ParamConfig.VECTOR2([0, 0]);\n      /** @param max */\n      this.max = ParamConfig.VECTOR2([1, 1]);\n    }\n  };\n}\nfunction cameraViewOffsetMin(coreObjectClass, camera, target) {\n  target.set(0, 0);\n  coreObjectClass.attribValue(camera, CameraAttribute.VIEW_OFFSET_MIN, 0, target);\n}\nfunction cameraViewOffsetMax(coreObjectClass, camera, target) {\n  target.set(1, 1);\n  coreObjectClass.attribValue(camera, CameraAttribute.VIEW_OFFSET_MAX, 0, target);\n}\nconst _min = new Vector2();\nconst _max = new Vector2();\nexport function cameraSetViewOffset(camera, resolution) {\n  const coreObjectClass = coreObjectClassFactory(camera);\n  const hasMin = coreObjectClass.hasAttribute(camera, CameraAttribute.VIEW_OFFSET_MIN);\n  const hasMax = coreObjectClass.hasAttribute(camera, CameraAttribute.VIEW_OFFSET_MAX);\n  if (!(hasMin && hasMax)) {\n    return;\n  }\n  cameraViewOffsetMin(coreObjectClass, camera, _min);\n  cameraViewOffsetMax(coreObjectClass, camera, _max);\n  camera.setViewOffset(\n    resolution.x,\n    resolution.y,\n    _min.x * resolution.x,\n    _min.y * resolution.y,\n    _max.x * resolution.x,\n    _max.y * resolution.y\n  );\n}\n", "\"use strict\";\nimport { OrthographicCamera } from \"three\";\nimport { OrthographicCameraAttribute } from \"../CoreCamera\";\nimport { CameraFrameMode } from \"../CoreCameraFrameMode\";\nimport { ORTHOGRAPHIC_CAMERA_DEFAULT } from \"../CoreOrthographicCamera\";\nimport { BaseCoreCameraFrameMode } from \"./_BaseCoreCameraFrameMode\";\nimport { cameraSetViewOffset } from \"../CoreCameraViewOffset\";\nimport { coreObjectClassFactory } from \"../../geometry/CoreObjectFactory\";\nOrthographicCamera;\nexport class CoreCameraOrthographicFrameMode {\n  static updateCameraAspect(camera, aspect, options) {\n    const cameraWithAttributes = (options == null ? void 0 : options.cameraWithAttributes) || camera;\n    const frameMode = BaseCoreCameraFrameMode.frameMode(cameraWithAttributes);\n    const expectedAspectRatio = BaseCoreCameraFrameMode.expectedAspectRatio(cameraWithAttributes);\n    const size = coreObjectClassFactory(cameraWithAttributes).attribValue(\n      cameraWithAttributes,\n      OrthographicCameraAttribute.SIZE\n    );\n    if (size != null) {\n      this._update({\n        mode: frameMode,\n        camera,\n        size,\n        aspect,\n        expectedAspectRatio\n      });\n    }\n    if (options && options.resolution) {\n      cameraSetViewOffset(camera, options.resolution);\n    }\n    camera.updateProjectionMatrix();\n  }\n  static _update(options) {\n    const mode = options.mode;\n    if (mode == CameraFrameMode.DEFAULT || options.expectedAspectRatio == null) {\n      this._adjustFOVFromModeDefault(options);\n    } else {\n      const { expectedAspectRatio } = options;\n      if (mode == CameraFrameMode.COVER) {\n        this._adjustFOVFromModeCover({ ...options, expectedAspectRatio });\n      } else {\n        this._adjustFOVFromModeContain({ ...options, expectedAspectRatio });\n      }\n    }\n  }\n  static _adjustFOVFromModeDefault(options) {\n    this._adjustFOVFromSize(options.size || 1, options);\n  }\n  static _adjustFOVFromModeCover(options) {\n    const size = options.size || 1;\n    if (options.aspect > options.expectedAspectRatio) {\n      this._adjustFOVFromSize(options.expectedAspectRatio * size / options.aspect, options);\n    } else {\n      this._adjustFOVFromSize(size, options);\n    }\n  }\n  static _adjustFOVFromModeContain(options) {\n    const size = options.size || 1;\n    if (options.aspect > options.expectedAspectRatio) {\n      this._adjustFOVFromSize(size, options);\n    } else {\n      this._adjustFOVFromSize(options.expectedAspectRatio * size / options.aspect, options);\n    }\n  }\n  static _adjustFOVFromSize(size, options) {\n    const horizontalSize = size * options.aspect;\n    const zoom = 1;\n    options.camera.left = ORTHOGRAPHIC_CAMERA_DEFAULT.left * horizontalSize * zoom;\n    options.camera.right = ORTHOGRAPHIC_CAMERA_DEFAULT.right * horizontalSize * zoom;\n    options.camera.top = ORTHOGRAPHIC_CAMERA_DEFAULT.top * size * zoom;\n    options.camera.bottom = ORTHOGRAPHIC_CAMERA_DEFAULT.bottom * size * zoom;\n  }\n}\n", "\"use strict\";\nimport { OrthographicCamera } from \"three\";\nimport { ParamConfig } from \"../../engine/nodes/utils/params/ParamsConfig\";\nimport { CameraNodeType } from \"../../engine/poly/NodeContext\";\nimport { ThreejsViewer } from \"../../engine/viewers/Threejs\";\nimport { CoreCameraOrthographicFrameMode } from \"./frameMode/CoreCameraOrthographicFrameMode\";\nexport const ORTHOGRAPHIC_CAMERA_DEFAULT = {\n  left: -0.5,\n  right: 0.5,\n  top: 0.5,\n  bottom: -0.5\n};\nexport function OrthographicCameraParamConfigMixin(Base) {\n  return class Mixin extends Base {\n    constructor() {\n      super(...arguments);\n      /** @param size */\n      this.size = ParamConfig.FLOAT(1);\n    }\n  };\n}\nexport const registerOrthographicCamera = (poly) => {\n  poly.registerCameraNodeType(CameraNodeType.ORTHOGRAPHIC);\n  poly.registerCamera(\n    OrthographicCamera,\n    (options) => {\n      const viewer = new ThreejsViewer({\n        ...options,\n        updateCameraAspect: (aspect, resolution) => {\n          CoreCameraOrthographicFrameMode.updateCameraAspect(options.camera, aspect, { resolution });\n        }\n      });\n      return viewer;\n    }\n  );\n};\n", "\"use strict\";\nimport { BaseSopOperation } from \"./_Base\";\nimport { MathUtils, OrthographicCamera, Vector3 } from \"three\";\nimport { InputCloneMode } from \"../../../engine/poly/InputCloneMode\";\nimport { CameraNodeType } from \"../../poly/NodeContext\";\nimport { CameraAttribute, CORE_CAMERA_DEFAULT, OrthographicCameraAttribute } from \"../../../core/camera/CoreCamera\";\nimport { isBooleanTrue } from \"../../../core/Type\";\nimport { CameraHelper } from \"../../../core/helpers/CameraHelper\";\nimport { ORTHOGRAPHIC_CAMERA_DEFAULT, registerOrthographicCamera } from \"../../../core/camera/CoreOrthographicCamera\";\nimport { ThreejsCoreObject } from \"../../../core/geometry/modules/three/ThreejsCoreObject\";\nimport { ObjectType, registerObjectType } from \"../../../core/geometry/Constant\";\nconst _OrthographicCameraSopOperation = class extends BaseSopOperation {\n  static type() {\n    return CameraNodeType.ORTHOGRAPHIC;\n  }\n  cook(inputCoreGroups, params) {\n    const camera = _OrthographicCameraSopOperation.createCamera(params, this._node);\n    camera.left = ORTHOGRAPHIC_CAMERA_DEFAULT.left * params.size;\n    camera.right = ORTHOGRAPHIC_CAMERA_DEFAULT.right * params.size;\n    camera.top = ORTHOGRAPHIC_CAMERA_DEFAULT.top * params.size;\n    camera.bottom = ORTHOGRAPHIC_CAMERA_DEFAULT.bottom * params.size;\n    camera.name = params.name || CameraNodeType.ORTHOGRAPHIC;\n    camera.position.copy(params.position);\n    camera.rotation.set(\n      MathUtils.degToRad(params.rotation.x),\n      MathUtils.degToRad(params.rotation.y),\n      MathUtils.degToRad(params.rotation.z)\n    );\n    _OrthographicCameraSopOperation.setCameraAttributes(camera, params);\n    camera.updateWorldMatrix(false, false);\n    camera.updateProjectionMatrix();\n    camera.matrixAutoUpdate = params.matrixAutoUpdate;\n    const objects = [camera];\n    if (isBooleanTrue(params.showHelper)) {\n      const helper = new CameraHelper(camera);\n      helper.update();\n      camera.add(helper);\n    }\n    return this.createCoreGroupFromObjects(objects);\n  }\n  static createCamera(params, nodeGenerator) {\n    registerObjectType({\n      type: ObjectType.ORTHOGRAPHIC_CAMERA,\n      checkFunc: (o) => {\n        if (o.isOrthographicCamera) {\n          return ObjectType.ORTHOGRAPHIC_CAMERA;\n        }\n      },\n      ctor: OrthographicCamera,\n      humanName: \"OrthographicCamera\"\n    });\n    const camera = new OrthographicCamera(\n      params.size * 2,\n      params.size * 2,\n      params.size * 2,\n      params.size * 2,\n      params.near,\n      params.far\n    );\n    if (nodeGenerator) {\n      ThreejsCoreObject.addAttribute(camera, CameraAttribute.NODE_ID, nodeGenerator.graphNodeId());\n    }\n    return camera;\n  }\n  static setCameraAttributes(camera, options) {\n    ThreejsCoreObject.addAttribute(camera, OrthographicCameraAttribute.SIZE, options.size);\n  }\n};\nexport let OrthographicCameraSopOperation = _OrthographicCameraSopOperation;\nOrthographicCameraSopOperation.DEFAULT_PARAMS = {\n  size: 1,\n  near: CORE_CAMERA_DEFAULT.near,\n  far: CORE_CAMERA_DEFAULT.far,\n  position: new Vector3(0, 0, 0),\n  rotation: new Vector3(0, 0, 0),\n  showHelper: false,\n  matrixAutoUpdate: true,\n  name: CameraNodeType.ORTHOGRAPHIC\n};\nOrthographicCameraSopOperation.INPUT_CLONED_STATE = InputCloneMode.NEVER;\nOrthographicCameraSopOperation.onRegister = registerOrthographicCamera;\n", "\"use strict\";\nimport { TypedThreejsCameraObjNode, ThreejsCameraTransformParamConfig, CameraMainCameraParamConfig } from \"./_BaseCamera\";\nimport { NodeParamsConfig } from \"../utils/params/ParamsConfig\";\nimport { CameraRenderParamConfig } from \"./utils/cameras/RenderController\";\nimport { LayerParamConfig } from \"./utils/LayersController\";\nimport { TransformedParamConfig } from \"./utils/TransformController\";\nimport { CameraNodeType } from \"../../poly/NodeContext\";\nimport { CameraPostProcessParamConfig } from \"./utils/cameras/PostProcessParamOptions\";\nimport {\n  OrthographicCameraParamConfigMixin,\n  ORTHOGRAPHIC_CAMERA_DEFAULT,\n  registerOrthographicCamera\n} from \"../../../core/camera/CoreOrthographicCamera\";\nimport { CORE_CAMERA_DEFAULT } from \"../../../core/camera/CoreCamera\";\nimport { CoreCameraFrameParamConfig } from \"../../../core/camera/CoreCameraFrameMode\";\nimport { OrthographicCameraSopOperation } from \"../../operations/sop/OrthographicCamera\";\nclass OrthographicCameraObjParamConfig extends CameraPostProcessParamConfig(\n  CameraRenderParamConfig(\n    LayerParamConfig(\n      CameraMainCameraParamConfig(\n        CoreCameraFrameParamConfig(\n          OrthographicCameraParamConfigMixin(\n            ThreejsCameraTransformParamConfig(\n              TransformedParamConfig(NodeParamsConfig, { matrixAutoUpdate: true })\n            )\n          )\n        )\n      )\n    )\n  )\n) {\n}\nconst ParamsConfig = new OrthographicCameraObjParamConfig();\nexport class OrthographicCameraObjNode extends TypedThreejsCameraObjNode {\n  constructor() {\n    super(...arguments);\n    this.paramsConfig = ParamsConfig;\n  }\n  static type() {\n    return CameraNodeType.ORTHOGRAPHIC;\n  }\n  createObject() {\n    const camera = OrthographicCameraSopOperation.createCamera(\n      {\n        size: this.pv.size,\n        ...CORE_CAMERA_DEFAULT\n      },\n      this\n    );\n    OrthographicCameraSopOperation.setCameraAttributes(camera, { size: this.pv.size });\n    return camera;\n  }\n  updateCamera() {\n    const { size } = this.pv;\n    this._object.left = ORTHOGRAPHIC_CAMERA_DEFAULT.left * size;\n    this._object.right = ORTHOGRAPHIC_CAMERA_DEFAULT.right * size;\n    this._object.top = ORTHOGRAPHIC_CAMERA_DEFAULT.top * size;\n    this._object.bottom = ORTHOGRAPHIC_CAMERA_DEFAULT.bottom * size;\n    OrthographicCameraSopOperation.setCameraAttributes(this._object, this.pv);\n    this._object.updateProjectionMatrix();\n  }\n  // protected override _updateForAspectRatio() {\n  // \tCoreCameraOrthographicFrameMode.updateCameraAspect(this._object, this._aspect);\n  // }\n}\nOrthographicCameraObjNode.onRegister = registerOrthographicCamera;\n"],
  "mappings": "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",
  "names": ["DEFAULT", "ParamsConfig"]
}
