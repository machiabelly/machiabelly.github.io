{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/core/reactivity/ParamReactivity.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/js/code/utils/JsParamConfig.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/js/code/assemblers/_BaseJsPersistedConfigUtils.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/js/code/assemblers/_BaseJsPersistedConfig.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/js/code/assemblers/actor/ActorPersistedConfig.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/sop/_BaseActor.js", "../../@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor.js"],
  "sourcesContent": ["\"use strict\";\nimport { incrementRefSafely, ref } from \"../../core/reactivity/CoreReactivity\";\nconst refByNodePathByParamName = /* @__PURE__ */ new Map();\nexport function getOrCreateParamRef(node, paramName) {\n  return getParamRef(node, paramName) || createParamRef(node, paramName);\n}\nexport function getParamRef(node, paramName) {\n  var _a;\n  return (_a = refByNodePathByParamName.get(node.path())) == null ? void 0 : _a.get(paramName);\n}\nexport function createParamRef(node, paramName) {\n  let mapForNode = refByNodePathByParamName.get(node.path());\n  if (!mapForNode) {\n    mapForNode = /* @__PURE__ */ new Map();\n    refByNodePathByParamName.set(node.path(), mapForNode);\n  }\n  let refForParam = mapForNode.get(paramName);\n  if (!refForParam) {\n    refForParam = ref(0);\n    mapForNode.set(paramName, refForParam);\n  }\n  return refForParam;\n}\nexport function touchParamRef(node, paramName) {\n  const _ref = getParamRef(node, paramName);\n  if (!_ref) {\n    return;\n  }\n  incrementRefSafely(_ref);\n}\nexport function touchParamRefFromParam(param) {\n  if (!param.node) {\n    return;\n  }\n  const _ref = getParamRef(param.node, param.name());\n  if (!_ref) {\n    return;\n  }\n  incrementRefSafely(_ref);\n}\n", "\"use strict\";\nimport { BaseParamConfig } from \"../../../utils/code/configs/BaseParamConfig\";\nimport { touchParamRef } from \"../../../../../core/reactivity/ParamReactivity\";\nexport class JsParamConfig extends BaseParamConfig {\n  // private _uniform: IUniform | undefined;\n  constructor(_type, _name, _defaultValue, _uniformName) {\n    super(_type, _name, _defaultValue);\n    this._uniformName = _uniformName;\n  }\n  toJSON() {\n    return {\n      type: this._type,\n      name: this._name,\n      defaultValue: this._defaultValue,\n      uniformName: this._uniformName\n    };\n  }\n  static fromJSON(json) {\n    return new JsParamConfig(json.type, json.name, json.defaultValue, json.uniformName);\n  }\n  uniformName() {\n    return this._uniformName;\n  }\n  // override applyToNode(node: BaseNodeType) {\n  // \tconsole.warn('not needed in js context');\n  // }\n  // uniform() {\n  // \treturn (this._uniform = this._uniform || this._createUniform());\n  // }\n  // private _createUniform() {\n  // \treturn JsParamConfig.uniformByType(this._type);\n  // }\n  _callback(node, param) {\n    JsParamConfig.callback(node, param.name());\n  }\n  static callback(node, paramName) {\n    touchParamRef(node, paramName);\n  }\n  // TODO: refactor that to use the default values map?\n  // static uniformByType(type: ParamType): IUniform {\n  // \tswitch (type) {\n  // \t\tcase ParamType.BOOLEAN:\n  // \t\t\treturn {value: 0};\n  // \t\tcase ParamType.BUTTON:\n  // \t\t\treturn {value: 0};\n  // \t\tcase ParamType.COLOR:\n  // \t\t\treturn {value: new Color(0, 0, 0)};\n  // \t\tcase ParamType.FLOAT:\n  // \t\t\treturn {value: 0};\n  // \t\tcase ParamType.FOLDER:\n  // \t\t\treturn {value: 0};\n  // \t\tcase ParamType.INTEGER:\n  // \t\t\treturn {value: 0};\n  // \t\t// case ParamType.OPERATOR_PATH:\n  // \t\t// \treturn {value: 0};\n  // \t\tcase ParamType.NODE_PATH:\n  // \t\t\treturn {value: 0};\n  // \t\tcase ParamType.PARAM_PATH:\n  // \t\t\treturn {value: 0};\n  // \t\t// case ParamType.STRING: return {type: 't', value: null} // new Texture()}\n  // \t\tcase ParamType.RAMP:\n  // \t\t\treturn {value: null}; // new Texture()}\n  // \t\tcase ParamType.STRING:\n  // \t\t\treturn {value: null};\n  // \t\tcase ParamType.VECTOR2:\n  // \t\t\treturn {value: new Vector2(0, 0)};\n  // \t\tcase ParamType.VECTOR3:\n  // \t\t\treturn {value: new Vector3(0, 0, 0)};\n  // \t\tcase ParamType.VECTOR4:\n  // \t\t\treturn {value: new Vector4(0, 0, 0, 0)};\n  // \t}\n  // \tTypeAssert.unreachable(type);\n  // }\n  // private static set_uniform_value_from_texture(param: OperatorPathParam, uniform: IUniform) {\n  // \tconst found_node = param.found_node();\n  // \tif (found_node) {\n  // \t\tif (found_node.isDirty()) {\n  // \t\t\tfound_node.compute().then((container) => {\n  // \t\t\t\tconst texture = container.texture();\n  // \t\t\t\tuniform.value = texture;\n  // \t\t\t});\n  // \t\t} else {\n  // \t\t\tconst container = found_node.containerController.container();\n  // \t\t\tconst texture = container.texture();\n  // \t\t\tuniform.value = texture;\n  // \t\t}\n  // \t} else {\n  // \t\tuniform.value = null;\n  // \t}\n  // }\n  // private static async setUniformValueFromTextureFromNodePathParam(param: NodePathParam, uniform: IUniform) {\n  // \tif (param.isDirty()) {\n  // \t\tawait param.compute();\n  // \t}\n  // \tconst node = param.value.nodeWithContext(NodeContext.COP);\n  // \tif (node) {\n  // \t\tif (node.isDirty()) {\n  // \t\t\tawait node.compute();\n  // \t\t}\n  // \t\tconst container = node.containerController.container();\n  // \t\tconst texture = container.texture();\n  // \t\tuniform.value = texture;\n  // \t} else {\n  // \t\tuniform.value = null;\n  // \t}\n  // }\n}\n", "\"use strict\";\nimport {\n  Box3,\n  Color,\n  Vector2,\n  Vector3,\n  Vector4,\n  Plane,\n  Ray,\n  Sphere,\n  Quaternion,\n  Matrix4,\n  Euler\n} from \"three\";\nimport { CoreType } from \"../../../../../core/Type\";\nimport { TypeAssert } from \"../../../../poly/Assert\";\nimport {\n  JsConnectionPointType,\n  JsConnectionPointTypeFromArrayTypeMap\n} from \"../../../utils/io/connections/Js\";\nexport class PrimitiveArray {\n  constructor(_elements) {\n    this._elements = _elements;\n    this.isPrimitiveArray = true;\n  }\n  elements() {\n    return this._elements;\n  }\n  clone() {\n    return this._elements.map((v) => v);\n  }\n}\nexport class VectorArray {\n  constructor(_elements) {\n    this._elements = _elements;\n    this.isVectorArray = true;\n  }\n  elements() {\n    return this._elements;\n  }\n  clone() {\n    return this._elements.map((v) => v.clone());\n  }\n}\nexport function createVariable(type) {\n  switch (type) {\n    case JsConnectionPointType.BOOLEAN:\n    case JsConnectionPointType.INT:\n    case JsConnectionPointType.FLOAT:\n    case JsConnectionPointType.STRING: {\n      return null;\n    }\n    case JsConnectionPointType.COLOR: {\n      return new Color();\n    }\n    case JsConnectionPointType.EULER: {\n      return new Euler();\n    }\n    case JsConnectionPointType.MATRIX4: {\n      return new Matrix4();\n    }\n    case JsConnectionPointType.QUATERNION: {\n      return new Quaternion();\n    }\n    case JsConnectionPointType.VECTOR2: {\n      return new Vector2();\n    }\n    case JsConnectionPointType.VECTOR3: {\n      return new Vector3();\n    }\n    case JsConnectionPointType.VECTOR4: {\n      return new Vector4();\n    }\n    case JsConnectionPointType.BOX3: {\n      return new Box3();\n    }\n    case JsConnectionPointType.PLANE: {\n      return new Plane();\n    }\n    case JsConnectionPointType.RAY: {\n      return new Ray();\n    }\n    case JsConnectionPointType.SPHERE: {\n      return new Sphere();\n    }\n    case JsConnectionPointType.BOOLEAN_ARRAY:\n    case JsConnectionPointType.FLOAT_ARRAY:\n    case JsConnectionPointType.INT_ARRAY:\n    case JsConnectionPointType.STRING_ARRAY: {\n      return createPrimitiveArray(type);\n    }\n    case JsConnectionPointType.MATRIX4_ARRAY:\n    case JsConnectionPointType.QUATERNION_ARRAY:\n    case JsConnectionPointType.TEXTURE_ARRAY:\n    case JsConnectionPointType.COLOR_ARRAY:\n    case JsConnectionPointType.EULER_ARRAY:\n    case JsConnectionPointType.OBJECT_3D_ARRAY:\n    case JsConnectionPointType.VECTOR2_ARRAY:\n    case JsConnectionPointType.VECTOR3_ARRAY:\n    case JsConnectionPointType.VECTOR4_ARRAY: {\n      return createVectorArray(type);\n    }\n    case JsConnectionPointType.ANIMATION_MIXER:\n    case JsConnectionPointType.ANIMATION_ACTION:\n    case JsConnectionPointType.CAMERA:\n    case JsConnectionPointType.CATMULL_ROM_CURVE3:\n    case JsConnectionPointType.INTERSECTION:\n    case JsConnectionPointType.INTERSECTION_ARRAY:\n    case JsConnectionPointType.MATERIAL:\n    case JsConnectionPointType.NODE:\n    case JsConnectionPointType.OBJECT_3D:\n    case JsConnectionPointType.PARAM:\n    case JsConnectionPointType.TEXTURE:\n    case JsConnectionPointType.TEXTURE_ARRAY:\n    case JsConnectionPointType.TRIGGER: {\n      return null;\n    }\n  }\n  console.warn(\"createVariable not implemented with type\", type);\n  TypeAssert.unreachable(type);\n}\nexport function createPrimitiveArray(type) {\n  type = JsConnectionPointTypeFromArrayTypeMap[type];\n  switch (type) {\n    case JsConnectionPointType.BOOLEAN: {\n      return new PrimitiveArray([false]);\n    }\n    case JsConnectionPointType.INT: {\n      return new PrimitiveArray([0]);\n    }\n    case JsConnectionPointType.FLOAT: {\n      return new PrimitiveArray([0]);\n    }\n    case JsConnectionPointType.STRING: {\n      return new PrimitiveArray([\"\"]);\n    }\n  }\n  console.warn(\"createPrimitiveArray not implemented for type:\", type);\n  return new PrimitiveArray([0]);\n}\nexport function createVectorArray(type) {\n  type = JsConnectionPointTypeFromArrayTypeMap[type];\n  switch (type) {\n    case JsConnectionPointType.COLOR: {\n      return new VectorArray([new Color()]);\n    }\n    case JsConnectionPointType.EULER: {\n      return new VectorArray([new Euler()]);\n    }\n    case JsConnectionPointType.MATRIX4: {\n      return new VectorArray([new Matrix4()]);\n    }\n    case JsConnectionPointType.QUATERNION: {\n      return new VectorArray([new Quaternion()]);\n    }\n    case JsConnectionPointType.VECTOR2: {\n      return new VectorArray([new Vector2()]);\n    }\n    case JsConnectionPointType.VECTOR3: {\n      return new VectorArray([new Vector3()]);\n    }\n    case JsConnectionPointType.VECTOR4: {\n      return new VectorArray([new Vector4()]);\n    }\n  }\n  console.warn(\"createVectorArray not implemented for type:\", type);\n  return new VectorArray([new Vector4()]);\n}\nexport var SerializedVariableType = /* @__PURE__ */ ((SerializedVariableType2) => {\n  SerializedVariableType2[\"Box3\"] = \"Box3\";\n  SerializedVariableType2[\"Color\"] = \"Color\";\n  SerializedVariableType2[\"Euler\"] = \"Euler\";\n  SerializedVariableType2[\"Matrix4\"] = \"Matrix4\";\n  SerializedVariableType2[\"Plane\"] = \"Plane\";\n  SerializedVariableType2[\"Quaternion\"] = \"Quaternion\";\n  SerializedVariableType2[\"Ray\"] = \"Ray\";\n  SerializedVariableType2[\"Sphere\"] = \"Sphere\";\n  SerializedVariableType2[\"Vector2\"] = \"Vector2\";\n  SerializedVariableType2[\"Vector3\"] = \"Vector3\";\n  SerializedVariableType2[\"Vector4\"] = \"Vector4\";\n  SerializedVariableType2[\"boolean_Array\"] = \"boolean[]\";\n  SerializedVariableType2[\"number_Array\"] = \"number[]\";\n  SerializedVariableType2[\"string_Array\"] = \"string[]\";\n  SerializedVariableType2[\"Color_Array\"] = \"Color[]\";\n  SerializedVariableType2[\"Euler_Array\"] = \"Euler[]\";\n  SerializedVariableType2[\"Matrix4_Array\"] = \"Matrix4[]\";\n  SerializedVariableType2[\"Quaternion_Array\"] = \"Quaternion[]\";\n  SerializedVariableType2[\"Vector2_Array\"] = \"Vector2[]\";\n  SerializedVariableType2[\"Vector3_Array\"] = \"Vector3[]\";\n  SerializedVariableType2[\"Vector4_Array\"] = \"Vector4[]\";\n  return SerializedVariableType2;\n})(SerializedVariableType || {});\nexport function isVariableSerializable(variable) {\n  if (variable instanceof Box3 || variable instanceof Color || variable instanceof Euler || variable instanceof Matrix4 || variable instanceof Plane || variable instanceof Quaternion || variable instanceof Ray || variable instanceof Sphere || variable instanceof Vector2 || variable instanceof Vector3 || variable instanceof Vector4 || variable instanceof PrimitiveArray || variable instanceof VectorArray) {\n    return true;\n  } else {\n    console.warn(\"not serializable\", variable);\n    return false;\n  }\n}\nexport function serializeVariable(variable) {\n  if (variable instanceof Box3) {\n    const data2 = {\n      type: \"Box3\" /* Box3 */,\n      data: {\n        min: variable.min.toArray(),\n        max: variable.min.toArray()\n      }\n    };\n    return data2;\n  }\n  if (variable instanceof Color) {\n    const data2 = {\n      type: \"Color\" /* Color */,\n      data: variable.toArray()\n    };\n    return data2;\n  }\n  if (variable instanceof Euler) {\n    const data2 = {\n      type: \"Euler\" /* Euler */,\n      data: {\n        rotation: variable.toArray(),\n        rotationOrder: variable.order\n      }\n    };\n    return data2;\n  }\n  if (variable instanceof Matrix4) {\n    const data2 = {\n      type: \"Matrix4\" /* Matrix4 */,\n      data: variable.toArray()\n    };\n    return data2;\n  }\n  if (variable instanceof Plane) {\n    const data2 = {\n      type: \"Plane\" /* Plane */,\n      data: {\n        normal: variable.normal.toArray(),\n        constant: variable.constant\n      }\n    };\n    return data2;\n  }\n  if (variable instanceof Quaternion) {\n    const data2 = {\n      type: \"Quaternion\" /* Quaternion */,\n      data: variable.toArray()\n    };\n    return data2;\n  }\n  if (variable instanceof Ray) {\n    const data2 = {\n      type: \"Ray\" /* Ray */,\n      data: {\n        origin: variable.origin.toArray(),\n        direction: variable.direction.toArray()\n      }\n    };\n    return data2;\n  }\n  if (variable instanceof Sphere) {\n    const data2 = {\n      type: \"Sphere\" /* Sphere */,\n      data: {\n        center: variable.center.toArray(),\n        radius: variable.radius\n      }\n    };\n    return data2;\n  }\n  if (variable instanceof Vector2) {\n    const data2 = {\n      type: \"Vector2\" /* Vector2 */,\n      data: variable.toArray()\n    };\n    return data2;\n  }\n  if (variable instanceof Vector3) {\n    const data2 = {\n      type: \"Vector3\" /* Vector3 */,\n      data: variable.toArray()\n    };\n    return data2;\n  }\n  if (variable instanceof Vector4) {\n    const data2 = {\n      type: \"Vector4\" /* Vector4 */,\n      data: variable.toArray()\n    };\n    return data2;\n  }\n  if (variable.isPrimitiveArray) {\n    const elements = variable.elements();\n    const firstElement = elements[0];\n    if (CoreType.isBoolean(firstElement)) {\n      const data2 = {\n        type: \"boolean[]\" /* boolean_Array */,\n        data: elements.map((v) => v)\n      };\n      return data2;\n    }\n    if (CoreType.isNumber(firstElement)) {\n      const data2 = {\n        type: \"number[]\" /* number_Array */,\n        data: elements.map((v) => v)\n      };\n      return data2;\n    }\n    if (CoreType.isString(firstElement)) {\n      const data2 = {\n        type: \"string[]\" /* string_Array */,\n        data: elements.map((v) => v)\n      };\n      return data2;\n    }\n  }\n  if (variable.isVectorArray) {\n    const elements = variable.elements();\n    const firstElement = elements[0];\n    if (firstElement instanceof Color) {\n      const data2 = {\n        type: \"Color[]\" /* Color_Array */,\n        data: elements.map((v) => v.toArray())\n      };\n      return data2;\n    }\n    if (firstElement instanceof Euler) {\n      const data2 = {\n        type: \"Euler[]\" /* Euler_Array */,\n        data: elements.map((v) => ({\n          rotation: v.toArray(),\n          rotationOrder: v.order\n        }))\n      };\n      return data2;\n    }\n    if (firstElement instanceof Matrix4) {\n      const data2 = {\n        type: \"Matrix4[]\" /* Matrix4_Array */,\n        data: elements.map((v) => v.toArray())\n      };\n      return data2;\n    }\n    if (firstElement instanceof Quaternion) {\n      const data2 = {\n        type: \"Quaternion[]\" /* Quaternion_Array */,\n        data: elements.map((v) => v.toArray())\n      };\n      return data2;\n    }\n    if (firstElement instanceof Vector2) {\n      const data2 = {\n        type: \"Vector2[]\" /* Vector2_Array */,\n        data: elements.map((v) => v.toArray())\n      };\n      return data2;\n    }\n    if (firstElement instanceof Vector3) {\n      const data2 = {\n        type: \"Vector3[]\" /* Vector3_Array */,\n        data: elements.map((v) => v.toArray())\n      };\n      return data2;\n    }\n    if (firstElement instanceof Vector4) {\n      const data2 = {\n        type: \"Vector4[]\" /* Vector4_Array */,\n        data: elements.map((v) => v.toArray())\n      };\n      return data2;\n    }\n    console.log(\"array variable serialization not implemeted\", variable, firstElement);\n  }\n  console.log(\"variable serialization not implemeted\", variable);\n  const data = {\n    type: \"Vector3\" /* Vector3 */,\n    data: new Vector3().toArray()\n  };\n  return data;\n}\nexport function deserializeVariable(serialized) {\n  const type = serialized.type;\n  switch (type) {\n    case \"Box3\" /* Box3 */: {\n      const data = serialized.data;\n      const box3 = new Box3();\n      box3.min.set(data.min[0], data.min[1], data.min[2]);\n      box3.max.set(data.max[0], data.max[1], data.max[2]);\n      return box3;\n    }\n    case \"Color\" /* Color */: {\n      const data = serialized.data;\n      const color = new Color();\n      color.r = data[0];\n      color.g = data[1];\n      color.b = data[2];\n      return color;\n    }\n    case \"Euler\" /* Euler */: {\n      const data = serialized.data;\n      const euler = new Euler(data.rotation[0], data.rotation[1], data.rotation[2], data.rotationOrder);\n      return euler;\n    }\n    case \"Matrix4\" /* Matrix4 */: {\n      const data = serialized.data;\n      const matrix = new Matrix4();\n      matrix.set(...data);\n      return matrix;\n    }\n    case \"Plane\" /* Plane */: {\n      const data = serialized.data;\n      const plane = new Plane();\n      plane.normal.set(...data.normal);\n      plane.constant = data.constant;\n      return plane;\n    }\n    case \"Quaternion\" /* Quaternion */: {\n      const data = serialized.data;\n      const vector = new Quaternion();\n      vector.set(...data);\n      return vector;\n    }\n    case \"Ray\" /* Ray */: {\n      const data = serialized.data;\n      const ray = new Ray();\n      ray.origin.set(...data.origin);\n      ray.direction.set(...data.direction);\n      return ray;\n    }\n    case \"Sphere\" /* Sphere */: {\n      const data = serialized.data;\n      const sphere = new Sphere();\n      sphere.center.set(...data.center);\n      sphere.radius = data.radius;\n      return sphere;\n    }\n    case \"Vector2\" /* Vector2 */: {\n      const data = serialized.data;\n      const vector = new Vector2();\n      vector.set(...data);\n      return vector;\n    }\n    case \"Vector3\" /* Vector3 */: {\n      const data = serialized.data;\n      const vector = new Vector3();\n      vector.set(...data);\n      return vector;\n    }\n    case \"Vector4\" /* Vector4 */: {\n      const data = serialized.data;\n      const vector = new Vector4();\n      vector.set(...data);\n      return vector;\n    }\n    case \"boolean[]\" /* boolean_Array */: {\n      const data = serialized.data;\n      const values = [...data];\n      const numberArray = new PrimitiveArray(values);\n      return numberArray;\n    }\n    case \"number[]\" /* number_Array */: {\n      const data = serialized.data;\n      const values = [...data];\n      const numberArray = new PrimitiveArray(values);\n      return numberArray;\n    }\n    case \"string[]\" /* string_Array */: {\n      const data = serialized.data;\n      const values = [...data];\n      const numberArray = new PrimitiveArray(values);\n      return numberArray;\n    }\n    case \"Color[]\" /* Color_Array */: {\n      const data = serialized.data;\n      const vectors = data.map((d) => {\n        const color = new Color();\n        color.r = d[0];\n        color.g = d[1];\n        color.b = d[2];\n        return color;\n      });\n      const vectorArray = new VectorArray(vectors);\n      return vectorArray;\n    }\n    case \"Euler[]\" /* Euler_Array */: {\n      const data = serialized.data;\n      const eulers = data.map((d) => {\n        const euler = new Euler(d.rotation[0], d.rotation[1], d.rotation[2], d.rotationOrder);\n        return euler;\n      });\n      const vectorArray = new VectorArray(eulers);\n      return vectorArray;\n    }\n    case \"Matrix4[]\" /* Matrix4_Array */: {\n      const data = serialized.data;\n      const vectors = data.map((d) => {\n        const v = new Matrix4();\n        v.set(...d);\n        return v;\n      });\n      const vectorArray = new VectorArray(vectors);\n      return vectorArray;\n    }\n    case \"Quaternion[]\" /* Quaternion_Array */: {\n      const data = serialized.data;\n      const vectors = data.map((d) => {\n        const v = new Quaternion();\n        v.set(...d);\n        return v;\n      });\n      const vectorArray = new VectorArray(vectors);\n      return vectorArray;\n    }\n    case \"Vector2[]\" /* Vector2_Array */: {\n      const data = serialized.data;\n      const vectors = data.map((d) => {\n        const v = new Vector2();\n        v.set(...d);\n        return v;\n      });\n      const vectorArray = new VectorArray(vectors);\n      return vectorArray;\n    }\n    case \"Vector3[]\" /* Vector3_Array */: {\n      const data = serialized.data;\n      const vectors = data.map((d) => {\n        const v = new Vector3();\n        v.set(...d);\n        return v;\n      });\n      const vectorArray = new VectorArray(vectors);\n      return vectorArray;\n    }\n    case \"Vector4[]\" /* Vector4_Array */: {\n      const data = serialized.data;\n      const vectors = data.map((d) => {\n        const v = new Vector4();\n        v.set(...d);\n        return v;\n      });\n      const vectorArray = new VectorArray(vectors);\n      return vectorArray;\n    }\n  }\n  TypeAssert.unreachable(type);\n}\n", "\"use strict\";\nimport {\n  isVariableSerializable,\n  serializeVariable,\n  deserializeVariable\n} from \"./_BaseJsPersistedConfigUtils\";\nimport { Poly } from \"../../../../Poly\";\nexport function serializedVariablesFromFunctionData(functionData) {\n  const { variableNames, variablesByName } = functionData;\n  const serializedVariables = [];\n  for (const variableName of variableNames) {\n    const variable = variablesByName[variableName];\n    if (variable != null && isVariableSerializable(variable)) {\n      const serialized = serializeVariable(variable);\n      serializedVariables.push(serialized);\n    }\n  }\n  return serializedVariables;\n}\nexport function variablesByNameFromPersistedConfigData(data) {\n  const { variableNames, variables } = data;\n  const variablesByName = {};\n  let i = 0;\n  for (const variableName of variableNames) {\n    const serialized = variables[i];\n    const deserialized = deserializeVariable(serialized);\n    variablesByName[variableName] = deserialized;\n    i++;\n  }\n  return variablesByName;\n}\nexport function functionsByNameFromPersistedConfigData(data, node) {\n  const { functionNames } = data;\n  const functionsByName = {};\n  for (const functionName of functionNames) {\n    const namedFunction = Poly.namedFunctionsRegister.getFunction(functionName, node);\n    if (namedFunction) {\n      functionsByName[functionName] = namedFunction.func.bind(namedFunction);\n    }\n  }\n  return functionsByName;\n}\n", "\"use strict\";\nimport { BasePersistedConfig } from \"../../../../utils/BasePersistedConfig\";\nimport { JsParamConfig } from \"../../utils/JsParamConfig\";\nimport {\n  serializedVariablesFromFunctionData,\n  variablesByNameFromPersistedConfigData,\n  functionsByNameFromPersistedConfigData\n} from \"../_BaseJsPersistedConfig\";\nexport class ActorPersistedConfig extends BasePersistedConfig {\n  constructor(node) {\n    super(node);\n    this.node = node;\n  }\n  async toData() {\n    await this.node.compilationController.compileIfRequired();\n    const assemblerController = this.node.assemblerController();\n    if (!assemblerController) {\n      return;\n    }\n    const functionData = this.node.compilationController.functionData();\n    if (!functionData) {\n      return;\n    }\n    const { functionBody, variableNames, functionNames, paramConfigs, eventDatas } = functionData;\n    const data = {\n      functionBody,\n      variableNames,\n      variables: serializedVariablesFromFunctionData(functionData),\n      functionNames,\n      serializedParamConfigs: paramConfigs.map((p) => p.toJSON()),\n      eventDatas\n    };\n    return data;\n  }\n  load(data) {\n    const assemblerController = this.node.assemblerController();\n    if (assemblerController) {\n      return;\n    }\n    const { functionBody, variableNames, functionNames, serializedParamConfigs, eventDatas } = data;\n    const functionData = {\n      functionBody,\n      variableNames,\n      variablesByName: variablesByNameFromPersistedConfigData(data),\n      functionNames,\n      functionsByName: functionsByNameFromPersistedConfigData(data, this.node),\n      paramConfigs: serializedParamConfigs.map((json) => JsParamConfig.fromJSON(json)),\n      eventDatas\n    };\n    this.node.compilationController.updateFromFunctionData(functionData);\n  }\n}\n", "\"use strict\";\nimport { TypedSopNode } from \"./_Base\";\nimport { NodeContext } from \"../../poly/NodeContext\";\nimport { AssemblerName } from \"../../poly/registers/assemblers/_BaseRegister\";\nimport { Poly } from \"../../Poly\";\nimport { ActorPersistedConfig } from \"../js/code/assemblers/actor/ActorPersistedConfig\";\nimport { ActorCompilationController } from \"../../../core/actor/ActorCompilationController\";\nexport class TypedActorSopNode extends TypedSopNode {\n  constructor() {\n    super(...arguments);\n    //\n    // CHILDREN\n    //\n    this._childrenControllerContext = NodeContext.JS;\n    //\n    // ASSEMBLERS\n    //\n    this.persisted_config = new ActorPersistedConfig(this);\n    this._assemblerController = this._createAssemblerController();\n    //\n    // compilation\n    //\n    this.compilationController = new ActorCompilationController(this);\n  }\n  createNode(node_class, options) {\n    return super.createNode(node_class, options);\n  }\n  children() {\n    return super.children();\n  }\n  nodesByType(type) {\n    return super.nodesByType(type);\n  }\n  childrenAllowed() {\n    if (this.assemblerController()) {\n      return super.childrenAllowed();\n    }\n    return false;\n  }\n  sceneReadonly() {\n    return this.assemblerController() == null;\n  }\n  assemblerController() {\n    return this._assemblerController;\n  }\n  usedAssembler() {\n    return AssemblerName.JS_ACTOR;\n  }\n  _createAssemblerController() {\n    return Poly.assemblersRegister.assembler(this, this.usedAssembler());\n  }\n  compile() {\n    this.compilationController.compile();\n  }\n  functionData() {\n    return this.compilationController.functionData();\n  }\n  //\n  // clean\n  //\n  updateObjectOnRemove(object, parent) {\n    this.compilationController.evaluatorGenerator().disposeEvaluator(object);\n  }\n}\n", "\"use strict\";\nimport { NodeParamsConfig, ParamConfig } from \"../utils/params/ParamsConfig\";\nimport { NetworkNodeType } from \"../../poly/NodeContext\";\nimport { filterObjectsWithGroup } from \"../../../core/geometry/Mask\";\nimport { SopType } from \"../../poly/registers/nodes/types/Sop\";\nimport { TypedActorSopNode } from \"./_BaseActor\";\nimport { isBooleanTrue } from \"../../../core/Type\";\nimport { InputCloneMode } from \"../../poly/InputCloneMode\";\nclass ActorSopParamsConfig extends NodeParamsConfig {\n  constructor() {\n    super(...arguments);\n    /** @param select which objects this applies the actor behavior to */\n    this.group = ParamConfig.STRING(\"\", {\n      objectMask: true\n    });\n    /** @param build actor from child nodes */\n    this.useThisNode = ParamConfig.BOOLEAN(1, {\n      separatorAfter: true\n    });\n    /** @param actor node */\n    this.node = ParamConfig.NODE_PATH(\"\", {\n      visibleIf: { useThisNode: 0 },\n      nodeSelection: {\n        types: [NetworkNodeType.ACTOR]\n      },\n      dependentOnFoundNode: false,\n      separatorAfter: true\n    });\n  }\n}\nconst ParamsConfig = new ActorSopParamsConfig();\nexport class ActorSopNode extends TypedActorSopNode {\n  constructor() {\n    super(...arguments);\n    this.paramsConfig = ParamsConfig;\n  }\n  static type() {\n    return SopType.ACTOR;\n  }\n  initializeNode() {\n    this.io.inputs.setCount(1);\n    this.io.inputs.initInputsClonedState(InputCloneMode.FROM_NODE);\n  }\n  async cook(inputCoreGroups) {\n    this.compilationController.compileIfRequired();\n    const coreGroup = inputCoreGroups[0];\n    const objects = filterObjectsWithGroup(coreGroup, this.pv);\n    const actorNode = await this._findActorNode();\n    if (actorNode) {\n      for (const object of objects) {\n        this.scene().actorsManager.assignActorBuilder(object, actorNode);\n      }\n    }\n    this.setCoreGroup(coreGroup);\n  }\n  async _findActorNode() {\n    if (isBooleanTrue(this.pv.useThisNode)) {\n      return this;\n    } else {\n      const node = this.pv.node.node();\n      if (node) {\n        await node.compute();\n      }\n      return node;\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
