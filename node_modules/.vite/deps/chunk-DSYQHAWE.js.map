{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/engine/poly/SceneEvent.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/events/SceneEventsController.js", "../../@polygonjs/polygonjs/dist/src/engine/scene/utils/TimeController.js", "../../@polygonjs/polygonjs/dist/src/core/RaycastHelper.js", "../../@polygonjs/polygonjs/dist/src/core/event/CoreEventEmitter.js", "../../@polygonjs/polygonjs/dist/src/core/event/KeyboardEventType.js"],
  "sourcesContent": ["\"use strict\";\nexport var SceneEvent = /* @__PURE__ */ ((SceneEvent2) => {\n  SceneEvent2[\"MAX_FRAME_UPDATED\"] = \"scene_maxFrameUpdated\";\n  SceneEvent2[\"REALTIME_STATUS_UPDATED\"] = \"scene_realtime_status_updated\";\n  SceneEvent2[\"FRAME_UPDATED\"] = \"scene_frame_updated\";\n  SceneEvent2[\"PLAY_STATE_UPDATED\"] = \"scene_play_state_updated\";\n  return SceneEvent2;\n})(SceneEvent || {});\n", "\"use strict\";\nimport { MapUtils } from \"../../../../core/MapUtils\";\nimport { PolyEventName } from \"../../../poly/utils/PolyEventName\";\nexport class PolySceneEvent extends Event {\n  constructor(type) {\n    super(type);\n  }\n  get type() {\n    return super.type;\n  }\n}\nexport const SCENE_EVENT_CREATED_EVENT_CONTEXT = {\n  event: new PolySceneEvent(PolyEventName.SCENE_CREATED)\n};\nexport const SCENE_EVENT_READY_EVENT_CONTEXT = {\n  event: new PolySceneEvent(PolyEventName.SCENE_READY)\n};\nexport const SCENE_EVENT_PLAY_EVENT_CONTEXT = {\n  event: new PolySceneEvent(PolyEventName.SCENE_PLAY)\n};\nexport const SCENE_EVENT_PAUSE_EVENT_CONTEXT = {\n  event: new PolySceneEvent(PolyEventName.SCENE_PAUSE)\n};\nexport class SceneEventsController {\n  constructor() {\n    this._observersByEventType = /* @__PURE__ */ new Map();\n  }\n  dispatch(eventContext) {\n    const event = eventContext.event;\n    if (!event) {\n      return;\n    }\n    const set = this._observersByEventType.get(event.type);\n    if (!set) {\n      return;\n    }\n    set.forEach((node) => {\n      node.processEvent(eventContext);\n    });\n  }\n  removeObserverFromAllEventTypes(eventNode) {\n    this._observersByEventType.forEach((nodes, eventType) => {\n      nodes.delete(eventNode);\n    });\n  }\n  addObserver(eventNode, eventType) {\n    MapUtils.addToSetAtEntry(this._observersByEventType, eventType, eventNode);\n  }\n}\n", "\"use strict\";\nimport { CoreGraphNode } from \"../../../core/graph/CoreGraphNode\";\nimport { SceneEvent } from \"../../poly/SceneEvent\";\nimport { Clock } from \"three\";\nimport { SCENE_EVENT_PLAY_EVENT_CONTEXT, SCENE_EVENT_PAUSE_EVENT_CONTEXT } from \"./events/SceneEventsController\";\nimport { ref } from \"../../../core/reactivity/CoreReactivity\";\nimport { Poly } from \"../../Poly\";\nconst FPS = 60;\nexport const DESIRED_FPS = 60;\nconst MAX_DELTA = 0.1;\nexport const TIME_CONTROLLER_UPDATE_TIME_OPTIONS_DEFAULT = {\n  updateClockDelta: false\n};\nconst _TimeController = class {\n  // private _delta: number = 0;\n  // private _PLAY_EVENT_CONTEXT: EventContext<SceneEvent> | undefined;\n  // private _PAUSE_EVENT_CONTEXT: EventContext<SceneEvent> | undefined;\n  // private _TICK_EVENT_CONTEXT: EventContext<SceneEvent> | undefined;\n  // get PLAY_EVENT_CONTEXT() {\n  // \treturn (this._PLAY_EVENT_CONTEXT = this._PLAY_EVENT_CONTEXT || {event: new SceneEvent(SceneEventType.PLAY)});\n  // }\n  // get PAUSE_EVENT_CONTEXT() {\n  // \treturn (this._PAUSE_EVENT_CONTEXT = this._PAUSE_EVENT_CONTEXT || {event: new SceneEvent(SceneEventType.PAUSE)});\n  // }\n  // get TICK_EVENT_CONTEXT() {\n  // \treturn (this._TICK_EVENT_CONTEXT = this._TICK_EVENT_CONTEXT || {event: new SceneEvent(SceneEventType.TICK)});\n  // }\n  constructor(scene) {\n    this.scene = scene;\n    this._frame = 0;\n    this._timeUniform = ref(0);\n    this._timeDeltaUniform = ref(0);\n    this._realtimeState = true;\n    this._maxFrame = 600;\n    this._maxFrameLocked = false;\n    this._playing = false;\n    this._clock = new Clock();\n    this._playAllowedWithoutAllNodesCooked = true;\n    this._onBeforeTickCallbacks = [];\n    this._onAfterTickCallbacks = [];\n    this._onPlayingStateChangeCallbacks = [];\n    this._graphNode = new CoreGraphNode(scene, \"timeController\");\n  }\n  get graphNode() {\n    return this._graphNode;\n  }\n  dispose() {\n    this._graphNode.dispose();\n  }\n  updateClockDelta() {\n    const delta = this._clock.getDelta();\n    const clampedDelta = delta > MAX_DELTA ? MAX_DELTA : delta;\n    return this.setDelta(clampedDelta);\n  }\n  delta() {\n    return this._timeDeltaUniform.value;\n  }\n  setDelta(delta) {\n    return this._timeDeltaUniform.value = delta;\n  }\n  frame() {\n    return this._frame;\n  }\n  timeUniform() {\n    return this._timeUniform;\n  }\n  timeDeltaUniform() {\n    return this._timeDeltaUniform;\n  }\n  time() {\n    return this._timeUniform.value;\n  }\n  // timeDelta() {\n  // \treturn this._timeDeltaUniform.value;\n  // }\n  maxFrame() {\n    return this._maxFrame;\n  }\n  maxFrameLocked() {\n    return this._maxFrameLocked;\n  }\n  realtimeState() {\n    return this._realtimeState;\n  }\n  setMaxFrame(maxFrame) {\n    this._maxFrame = Math.floor(maxFrame);\n    this.scene.dispatchController.dispatch(this._graphNode, SceneEvent.MAX_FRAME_UPDATED);\n  }\n  setMaxFrameLocked(state) {\n    this._maxFrameLocked = state;\n    this.scene.dispatchController.dispatch(this._graphNode, SceneEvent.MAX_FRAME_UPDATED);\n  }\n  setRealtimeState(state) {\n    this._realtimeState = state;\n    this.scene.dispatchController.dispatch(this._graphNode, SceneEvent.REALTIME_STATUS_UPDATED);\n  }\n  setTime(time, updateFrame = true) {\n    if (time == this._timeUniform.value) {\n      return;\n    }\n    this._timeUniform.value = time;\n    this.scene.cooker.block();\n    const delta = this.delta();\n    for (const callback of this._onBeforeTickCallbacks) {\n      callback(delta);\n    }\n    if (this._playing == true && time > 0) {\n      this.scene.actorsManager.tick();\n    }\n    if (updateFrame) {\n      const newFrame = Math.floor(this._timeUniform.value * FPS);\n      const boundedFrame = this._ensureFrameWithinBounds(newFrame);\n      if (newFrame != boundedFrame) {\n        this.setFrame(boundedFrame, true);\n      } else {\n        this._frame = newFrame;\n      }\n    }\n    this.scene.dispatchController.dispatch(this._graphNode, SceneEvent.FRAME_UPDATED);\n    this.graphNode.setSuccessorsDirty();\n    this.scene.cooker.unblock();\n    for (const callback of this._onAfterTickCallbacks) {\n      callback(delta);\n    }\n  }\n  setFrame(frame, updateTime = true) {\n    if (frame == this._frame) {\n      return;\n    }\n    frame = this._ensureFrameWithinBounds(frame);\n    if (frame == this._frame) {\n      return;\n    }\n    this._frame = frame;\n    if (this._frame == _TimeController.START_FRAME) {\n      this.scene.actorsManager.runOnEventSceneReset();\n    }\n    if (updateTime) {\n      this.setTime(this._frame / FPS, false);\n    }\n  }\n  setFrameToStart() {\n    this.setFrame(_TimeController.START_FRAME, true);\n  }\n  incrementTimeIfPlaying(options) {\n    if (this._playing) {\n      if (!this.scene.root().areChildrenCooking()) {\n        this.incrementTime(options);\n      }\n    }\n  }\n  incrementTime(options) {\n    if (!((options == null ? void 0 : options.updateClockDelta) == false)) {\n      this.updateClockDelta();\n    }\n    if (this._realtimeState) {\n      const newTime = this._timeUniform.value + this.delta();\n      this.setTime(newTime, false);\n      this.setFrame(this._frame + 1, false);\n    } else {\n      this.setFrame(this.frame() + 1);\n    }\n  }\n  _ensureFrameWithinBounds(frame) {\n    if (this._playing) {\n      if (this._maxFrameLocked && frame > this._maxFrame) {\n        return _TimeController.START_FRAME;\n      }\n    } else {\n      if (this._maxFrameLocked && frame > this._maxFrame) {\n        return this._maxFrame;\n      }\n      if (frame < _TimeController.START_FRAME) {\n        return _TimeController.START_FRAME;\n      }\n    }\n    return frame;\n  }\n  playing() {\n    return this._playing === true;\n  }\n  pause() {\n    if (this._playing == false) {\n      return;\n    }\n    this._playing = false;\n    this.scene.dispatchController.dispatch(this._graphNode, SceneEvent.PLAY_STATE_UPDATED);\n    this.scene.actorsManager.runOnEventScenePause();\n    this.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_PAUSE_EVENT_CONTEXT);\n    for (const callback of this._onPlayingStateChangeCallbacks) {\n      callback();\n    }\n  }\n  play() {\n    if (!this._playAllowedWithoutAllNodesCooked) {\n      if (!this.scene.cookController.allNodesHaveCookedAtLeastOnce()) {\n        Poly.warn(\"play not allowed, some nodes have not completed cooking\");\n        return;\n      }\n    }\n    if (this._playing == true) {\n      return;\n    }\n    this._playing = true;\n    this.scene.actorsManager.runOnEventScenePlay();\n    this.scene.dispatchController.dispatch(this._graphNode, SceneEvent.PLAY_STATE_UPDATED);\n    this.scene.eventsDispatcher.sceneEventsController.dispatch(SCENE_EVENT_PLAY_EVENT_CONTEXT);\n    for (const callback of this._onPlayingStateChangeCallbacks) {\n      callback();\n    }\n  }\n  togglePlayPause() {\n    if (this.playing()) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n  forbidPlayUntilAllNodesCooked() {\n    this._playAllowedWithoutAllNodesCooked = false;\n  }\n  registerOnBeforeTick(callbackName, callback) {\n    this._registerCallback(callbackName, callback, this.registeredBeforeTickCallbacks());\n  }\n  unRegisterOnBeforeTick(callbackName) {\n    this._unregisterCallback(callbackName, this._onBeforeTickCallbacksMap);\n  }\n  registeredBeforeTickCallbacks() {\n    return this._onBeforeTickCallbacksMap = this._onBeforeTickCallbacksMap || /* @__PURE__ */ new Map();\n  }\n  hasBeforeTickCallback(callbackName) {\n    var _a;\n    return ((_a = this._onBeforeTickCallbacksMap) == null ? void 0 : _a.has(callbackName)) || false;\n  }\n  registerOnAfterTick(callbackName, callback) {\n    this._registerCallback(callbackName, callback, this.registeredAfterTickCallbacks());\n  }\n  unRegisterOnAfterTick(callbackName) {\n    this._unregisterCallback(callbackName, this._onAfterTickCallbacksMap);\n  }\n  registeredAfterTickCallbacks() {\n    return this._onAfterTickCallbacksMap = this._onAfterTickCallbacksMap || /* @__PURE__ */ new Map();\n  }\n  hasAfterTickCallback(callbackName) {\n    var _a;\n    return ((_a = this._onAfterTickCallbacksMap) == null ? void 0 : _a.has(callbackName)) || false;\n  }\n  onPlayingStateChange(callback) {\n    this._onPlayingStateChangeCallbacksMap = this._onPlayingStateChangeCallbacksMap || /* @__PURE__ */ new Set();\n    this._onPlayingStateChangeCallbacksMap.add(callback);\n    this._updateOnPlayingStateChangeCallbacks();\n  }\n  removeOnPlayingStateChange(callback) {\n    if (this._onPlayingStateChangeCallbacksMap) {\n      this._onPlayingStateChangeCallbacksMap.delete(callback);\n      this._updateOnPlayingStateChangeCallbacks();\n    }\n  }\n  _updateOnPlayingStateChangeCallbacks() {\n    this._onPlayingStateChangeCallbacks = [];\n    if (this._onPlayingStateChangeCallbacksMap) {\n      this._onPlayingStateChangeCallbacksMap.forEach((callback) => {\n        this._onPlayingStateChangeCallbacks.push(callback);\n      });\n    }\n  }\n  _registerCallback(callbackName, callback, map) {\n    if (map.has(callbackName)) {\n      console.warn(`callback ${callbackName} already registered`);\n      return;\n    }\n    map.set(callbackName, callback);\n    this._updateCallbacks();\n  }\n  _unregisterCallback(callbackName, map) {\n    if (!map) {\n      return;\n    }\n    map.delete(callbackName);\n    this._updateCallbacks();\n  }\n  _updateCallbacks() {\n    var _a, _b;\n    this._onBeforeTickCallbacks.length = 0;\n    (_a = this._onBeforeTickCallbacksMap) == null ? void 0 : _a.forEach((callback) => {\n      this._onBeforeTickCallbacks.push(callback);\n    });\n    this._onAfterTickCallbacks.length = 0;\n    (_b = this._onAfterTickCallbacksMap) == null ? void 0 : _b.forEach((callback) => {\n      this._onAfterTickCallbacks.push(callback);\n    });\n  }\n};\nexport let TimeController = _TimeController;\nTimeController.START_FRAME = 0;\n", "\"use strict\";\nimport { Raycaster } from \"three\";\nimport { ThreeMeshBVHHelper } from \"./geometry/bvh/ThreeMeshBVHHelper\";\nexport function createRaycaster() {\n  const raycaster = new Raycaster();\n  ThreeMeshBVHHelper.updateRaycaster(raycaster);\n  return raycaster;\n}\n", "\"use strict\";\nexport var CoreEventEmitter = /* @__PURE__ */ ((CoreEventEmitter2) => {\n  CoreEventEmitter2[\"CANVAS\"] = \"canvas\";\n  CoreEventEmitter2[\"DOCUMENT\"] = \"document\";\n  return CoreEventEmitter2;\n})(CoreEventEmitter || {});\nexport const EVENT_EMITTERS = [\"canvas\" /* CANVAS */, \"document\" /* DOCUMENT */];\nexport const EVENT_EMITTER_PARAM_MENU_OPTIONS = {\n  menu: {\n    entries: EVENT_EMITTERS.map((name, value) => {\n      return { name, value };\n    })\n  }\n};\n", "\"use strict\";\nexport var KeyboardEventType = /* @__PURE__ */ ((KeyboardEventType2) => {\n  KeyboardEventType2[\"keydown\"] = \"keydown\";\n  KeyboardEventType2[\"keypress\"] = \"keypress\";\n  KeyboardEventType2[\"keyup\"] = \"keyup\";\n  return KeyboardEventType2;\n})(KeyboardEventType || {});\nexport const ACCEPTED_KEYBOARD_EVENT_TYPES = [\n  \"keydown\" /* keydown */,\n  \"keypress\" /* keypress */,\n  \"keyup\" /* keyup */\n];\n"],
  "mappings": "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",
  "names": []
}
