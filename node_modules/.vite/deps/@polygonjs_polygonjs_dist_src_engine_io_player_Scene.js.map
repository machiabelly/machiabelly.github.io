{
  "version": 3,
  "sources": ["../../@polygonjs/polygonjs/dist/src/engine/io/player/Scene.js"],
  "sourcesContent": ["\"use strict\";\nimport { RootLoadProgressController } from \"./../../nodes/manager/utils/Scene/LoadProgress\";\nimport { CoreType } from \"../../../core/Type\";\nimport { TimeController } from \"../../scene/utils/TimeController\";\nimport { PolyEventsDispatcher } from \"../common/EventsDispatcher\";\nimport { PolyEventName } from \"../../poly/utils/PolyEventName\";\nimport { PROGRESS_RATIO } from \"../common/Progress\";\nimport { SceneJsonImporter } from \"../json/import/Scene\";\nexport class ScenePlayerImporter {\n  // private _cameraCreatorNode: BaseNodeType | null = null;\n  constructor(options) {\n    this.options = options;\n    this._onLoadCompleteCalled = false;\n    this._progress = 0;\n    this._viewerMarkedAsReady = false;\n    this._sceneMarkedAsReady = false;\n    this._debug2(\"new ScenePlayerImporter\", options);\n  }\n  static async loadSceneData(options) {\n    const scenePlayerImporter = new ScenePlayerImporter(options);\n    const scene = await scenePlayerImporter.loadScene(options.serializers);\n    return {\n      scene,\n      viewer: scenePlayerImporter._viewer\n    };\n  }\n  async _onLoadComplete(scene) {\n    if (this._onLoadCompleteCalled == true) {\n      return;\n    }\n    this._onLoadCompleteCalled = true;\n    if (this._viewer) {\n      this._markViewerAsReady(this._viewer);\n    }\n    await this._markSceneAsReady(scene);\n  }\n  _markViewerAsReady(viewer) {\n    if (this._viewerMarkedAsReady) {\n      return;\n    }\n    this._viewerMarkedAsReady = true;\n    viewer.markAsReady();\n    this._dispatchEvent(PolyEventName.VIEWER_READY);\n  }\n  async _markSceneAsReady(scene) {\n    if (this._sceneMarkedAsReady) {\n      return;\n    }\n    this._sceneMarkedAsReady = true;\n    await scene.cookController.waitForCooksCompleted();\n    scene.setFrame(TimeController.START_FRAME);\n    if (this.options.autoPlay != false) {\n      scene.play();\n    }\n    scene.loadingController.dispatchReadyEvent();\n    this._dispatchEvent(PolyEventName.SCENE_READY);\n  }\n  _onNodesCookProgress(nodesCookProgress, args) {\n    const progressRatio = PROGRESS_RATIO.nodes;\n    const onProgress = (_ratio, args2) => {\n      var _a;\n      const progress = progressRatio.start + progressRatio.mult * _ratio;\n      this._progress = progress;\n      if (this.options.onProgress) {\n        this.options.onProgress(progress, args2);\n      }\n      PolyEventsDispatcher.dispatchProgressEvent(progress, (_a = this._scene) == null ? void 0 : _a.name());\n    };\n    onProgress(nodesCookProgress, args);\n    if (nodesCookProgress >= 1) {\n      this._onLoadComplete(args.scene);\n    }\n  }\n  async _watchNodesProgress(scene) {\n    scene.root().loadProgress.watchNodesProgress((nodesCookProgress, args) => {\n      this._onNodesCookProgress(nodesCookProgress, args);\n    });\n  }\n  async loadScene(options) {\n    const createSceneAndWaitForCameraCreatorNode = () => {\n      return new Promise(async (resolve) => {\n        const configureScene = this.options.configureScene;\n        const importer = new SceneJsonImporter(this.options.sceneData, {\n          sceneName: this.options.sceneName,\n          configureScene,\n          nodeCookWatcher: (scene3) => {\n            this._watchNodesProgress(scene3);\n          }\n        });\n        const scene2 = importer.scene(options);\n        scene2.timeController.forbidPlayUntilAllNodesCooked();\n        this._scene = scene2;\n        this._dispatchEvent(PolyEventName.SCENE_CREATED);\n        if (this.options.renderer) {\n          scene2.renderersRegister.registerRenderer(this.options.renderer);\n        }\n        const onCameraUpdated = async () => {\n          const camera = await scene2.camerasController.mainCamera({\n            findAnyCamera: false,\n            printCameraNotFoundError: this._progress >= 1,\n            // we display a warning if progress is 1\n            cameraMaskOverride: this.options.cameraMaskOverride\n          });\n          this._debug2(\"scene.camerasController:\", {\n            camera,\n            cameraPath: scene2.root().mainCameraController.rawCameraPath()\n          });\n          if (camera) {\n            if (this._onCameraCreatorNodeLoadedResolve) {\n              this._onCameraCreatorNodeLoadedResolve();\n            }\n          }\n        };\n        this._onCameraCreatorNodeLoadedResolve = () => {\n          scene2.camerasController.removeOnCameraObjectsUpdated(onCameraUpdated);\n          resolve(scene2);\n        };\n        scene2.camerasController.onCameraObjectsUpdated(onCameraUpdated);\n      });\n    };\n    this._scene = await createSceneAndWaitForCameraCreatorNode();\n    const scene = this._scene;\n    const createViewer = async () => {\n      const domElement = this._domElement();\n      let createViewer2 = false;\n      if (this.options.createViewer != null) {\n        createViewer2 = this.options.createViewer;\n      }\n      if (domElement || createViewer2) {\n        this._viewer = await scene.camerasController.createMainViewer({\n          autoRender: false,\n          renderer: this.options.renderer,\n          cameraMaskOverride: this.options.cameraMaskOverride\n        });\n        if (this._viewer) {\n          if (domElement) {\n            this._viewer.mount(domElement);\n          }\n          if (this._sceneMarkedAsReady == true) {\n            this._markViewerAsReady(this._viewer);\n          }\n          this._dispatchEvent(PolyEventName.VIEWER_MOUNTED);\n        }\n      }\n    };\n    await createViewer();\n    return scene;\n  }\n  _domElement() {\n    const domElement = this.options.domElement;\n    if (domElement) {\n      if (CoreType.isString(domElement)) {\n        const element = document.getElementById(domElement);\n        if (element) {\n          return element;\n        }\n      } else {\n        return domElement;\n      }\n    }\n  }\n  _dispatchEvent(eventName) {\n    this._debug2(\"_dispatchEvent\", { eventName, scene: this._scene, viewer: this._viewer });\n    const elements = [this._domElement(), document];\n    if (!this._scene) {\n      console.warn(`no event emitted as no scene preset`);\n      return;\n    }\n    const detail = {\n      scene: this._scene,\n      viewer: this._viewer\n    };\n    const createEvent = (customEventName) => {\n      return new CustomEvent(customEventName, {\n        detail\n      });\n    };\n    for (let element of elements) {\n      if (element) {\n        element.dispatchEvent(createEvent(eventName));\n        if (this._scene) {\n          element.dispatchEvent(createEvent(`${eventName}-${this._scene.name()}`));\n        }\n      }\n    }\n  }\n  _debug(arg0) {\n    ScenePlayerImporter._debug(arg0);\n  }\n  _debug2(arg0, arg1) {\n    ScenePlayerImporter._debug2(arg0, arg1);\n  }\n  static _debug(arg0) {\n    RootLoadProgressController.debug(arg0);\n  }\n  static _debug2(arg0, arg1) {\n    RootLoadProgressController.debug2(arg0, arg1);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
