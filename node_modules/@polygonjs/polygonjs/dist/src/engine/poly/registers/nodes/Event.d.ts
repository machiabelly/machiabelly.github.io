import { AnimationEventNode } from '../../../nodes/event/Animation';
import { AnyEventNode } from '../../../nodes/event/Any';
import { AudioEventNode } from '../../../nodes/event/Audio';
import { BlockEventNode } from '../../../nodes/event/Block';
import { ButtonEventNode } from '../../../nodes/event/Button';
import { CameraMapControlsEventNode } from '../../../nodes/event/CameraMapControls';
import { CameraOrbitControlsEventNode } from '../../../nodes/event/CameraOrbitControls';
import { CameraPanZoomControlsEventNode } from '../../../nodes/event/CameraPanZoomControls';
import { DebounceEventNode } from '../../../nodes/event/Debounce';
import { DelayEventNode } from '../../../nodes/event/Delay';
import { CodeEventNode } from '../../../nodes/event/Code';
import { DragEventNode } from '../../../nodes/event/Drag';
import { FirstPersonControlsEventNode } from '../../../nodes/event/FirstPersonControls';
import { IntersectDataEventNode } from '../../../nodes/event/IntersectData';
import { KeyboardEventNode } from '../../../nodes/event/Keyboard';
import { LimitEventNode } from '../../../nodes/event/Limit';
import { MessageEventNode } from '../../../nodes/event/Message';
import { MobileJoystickControlsEventNode } from '../../../nodes/event/MobileJoystickControls';
import { MouseEventNode } from '../../../nodes/event/Mouse';
import { NodeCookEventNode } from '../../../nodes/event/NodeCook';
import { NullEventNode } from '../../../nodes/event/Null';
import { ParamEventNode } from '../../../nodes/event/Param';
import { PointerEventNode } from '../../../nodes/event/Pointer';
import { RaycastEventNode } from '../../../nodes/event/Raycast';
import { SceneEventNode } from '../../../nodes/event/Scene';
import { ScrollTriggerEventNode } from '../../../nodes/event/ScrollTrigger';
import { SetFlagEventNode } from '../../../nodes/event/SetFlag';
import { SetParamEventNode } from '../../../nodes/event/SetParam';
import { SequenceEventNode } from '../../../nodes/event/Sequence';
import { ThrottleEventNode } from '../../../nodes/event/Throttle';
import { TimerEventNode } from '../../../nodes/event/Timer';
import { TouchEventNode } from '../../../nodes/event/Touch';
import { ViewerEventNode } from '../../../nodes/event/Viewer';
import { WindowEventNode } from '../../../nodes/event/Window';
import { ActorsNetworkEventNode } from '../../../nodes/event/ActorsNetwork';
import { AnimationsNetworkEventNode } from '../../../nodes/event/AnimationsNetwork';
import { AudioNetworkEventNode } from '../../../nodes/event/AudioNetwork';
import { CopNetworkEventNode } from '../../../nodes/event/CopNetwork';
import { EventsNetworkEventNode } from '../../../nodes/event/EventsNetwork';
import { MaterialsNetworkEventNode } from '../../../nodes/event/MaterialsNetwork';
import { PostProcessNetworkEventNode } from '../../../nodes/event/PostProcessNetwork';
import { RenderersNetworkEventNode } from '../../../nodes/event/RenderersNetwork';
export interface EventNodeChildrenMap {
    audio: AudioEventNode;
    animation: AnimationEventNode;
    any: AnyEventNode;
    block: BlockEventNode;
    button: ButtonEventNode;
    cameraMapControls: CameraOrbitControlsEventNode;
    cameraOrbitControls: CameraMapControlsEventNode;
    cameraPanZoomControls: CameraPanZoomControlsEventNode;
    debounce: DebounceEventNode;
    delay: DelayEventNode;
    drag: DragEventNode;
    code: CodeEventNode;
    firstPersonControls: FirstPersonControlsEventNode;
    intersectData: IntersectDataEventNode;
    keyboard: KeyboardEventNode;
    limit: LimitEventNode;
    message: MessageEventNode;
    mobileJoystickControls: MobileJoystickControlsEventNode;
    mouse: MouseEventNode;
    nodeCook: NodeCookEventNode;
    null: NullEventNode;
    param: ParamEventNode;
    pointer: PointerEventNode;
    raycast: RaycastEventNode;
    scene: SceneEventNode;
    scrollTrigger: ScrollTriggerEventNode;
    setFlag: SetFlagEventNode;
    setParam: SetParamEventNode;
    sequence: SequenceEventNode;
    throttle: ThrottleEventNode;
    timer: TimerEventNode;
    touch: TouchEventNode;
    viewer: ViewerEventNode;
    window: WindowEventNode;
    actorsNetwork: ActorsNetworkEventNode;
    animationsNetwork: AnimationsNetworkEventNode;
    audioNetwork: AudioNetworkEventNode;
    copNetwork: CopNetworkEventNode;
    eventsNetwork: EventsNetworkEventNode;
    materialsNetwork: MaterialsNetworkEventNode;
    postProcessNetwork: PostProcessNetworkEventNode;
    renderersNetwork: RenderersNetworkEventNode;
}
import { PolyEngine } from '../../../Poly';
export declare class EventRegister {
    static run(poly: PolyEngine): void;
}
