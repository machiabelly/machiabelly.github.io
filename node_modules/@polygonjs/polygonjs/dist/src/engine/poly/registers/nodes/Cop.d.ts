import { AudioAnalyserCopNode } from '../../../nodes/cop/AudioAnalyser';
import { BuilderCopNode } from '../../../nodes/cop/Builder';
import { Builder2DArrayCopNode } from '../../../nodes/cop/Builder2DArray';
import { CanvasCopNode } from '../../../nodes/cop/Canvas';
import { ColorCopNode } from '../../../nodes/cop/Color';
import { CubeMapCopNode } from '../../../nodes/cop/CubeMap';
import { CubeCameraCopNode } from '../../../nodes/cop/CubeCamera';
import { CubeMapFromSceneCopNode } from '../../../nodes/cop/CubeMapFromScene';
import { EnvMapCopNode } from '../../../nodes/cop/EnvMap';
import { GeometryAttributeCopNode } from '../../../nodes/cop/GeometryAttribute';
import { GifCopNode } from '../../../nodes/cop/Gif';
import { ImageCopNode } from '../../../nodes/cop/Image';
import { ImageEXRCopNode } from '../../../nodes/cop/ImageEXR';
import { ImageHDRCopNode } from '../../../nodes/cop/ImageHDR';
import { ImageKTX2CopNode } from '../../../nodes/cop/ImageKTX2';
import { LightMapCopNode } from '../../../nodes/cop/LightMap';
import { LutCopNode } from '../../../nodes/cop/Lut';
import { MapboxElevationCopNode } from '../../../nodes/cop/MapboxElevation';
import { MapboxSatelliteCopNode } from '../../../nodes/cop/MapboxSatellite';
import { NullCopNode } from '../../../nodes/cop/Null';
import { PaletteCopNode } from '../../../nodes/cop/Palette';
import { FetchCopNode } from '../../../nodes/cop/Fetch';
import { RenderCopNode } from '../../../nodes/cop/Render';
import { SDFBlurCopNode } from '../../../nodes/cop/SDFBlur';
import { SDFExporterCopNode } from '../../../nodes/cop/SDFExporter';
import { SDFFromObjectCopNode } from '../../../nodes/cop/SDFFromObject';
import { SDFFromUrlCopNode } from '../../../nodes/cop/SDFFromUrl';
import { SnapshotCopNode } from '../../../nodes/cop/Snapshot';
import { SwitchCopNode } from '../../../nodes/cop/Switch';
import { TextCopNode } from '../../../nodes/cop/Text';
import { TexturePropertiesCopNode } from '../../../nodes/cop/TextureProperties';
import { VideoCopNode } from '../../../nodes/cop/Video';
import { WebCamCopNode } from '../../../nodes/cop/WebCam';
import { ActorsNetworkCopNode } from '../../../nodes/cop/ActorsNetwork';
import { AnimationsNetworkCopNode } from '../../../nodes/cop/AnimationsNetwork';
import { AudioNetworkCopNode } from '../../../nodes/cop/AudioNetwork';
import { EventsNetworkCopNode } from '../../../nodes/cop/EventsNetwork';
import { CopNetworkCopNode } from '../../../nodes/cop/CopNetwork';
import { MaterialsNetworkCopNode } from '../../../nodes/cop/MaterialsNetwork';
import { PostProcessNetworkCopNode } from '../../../nodes/cop/PostProcessNetwork';
import { RenderersNetworkCopNode } from '../../../nodes/cop/RenderersNetwork';
export interface CopNodeChildrenMap {
    audioAnalyser: AudioAnalyserCopNode;
    builder: BuilderCopNode;
    builder2DArray: Builder2DArrayCopNode;
    canvas: CanvasCopNode;
    color: ColorCopNode;
    cubeMap: CubeMapCopNode;
    cubeCamera: CubeCameraCopNode;
    cubeMapFromScene: CubeMapFromSceneCopNode;
    envMap: EnvMapCopNode;
    geometryAttribute: GeometryAttributeCopNode;
    gif: GifCopNode;
    image: ImageCopNode;
    imageEXR: ImageEXRCopNode;
    imageHDR: ImageHDRCopNode;
    imageKTX2: ImageKTX2CopNode;
    lightMap: LightMapCopNode;
    lut: LutCopNode;
    mapboxElevation: MapboxElevationCopNode;
    mapboxSatellite: MapboxSatelliteCopNode;
    null: NullCopNode;
    palette: PaletteCopNode;
    fetch: FetchCopNode;
    render: RenderCopNode;
    SDFBlur: SDFBlurCopNode;
    SDFExporter: SDFExporterCopNode;
    SDFFromObject: SDFFromObjectCopNode;
    SDFFromUrl: SDFFromUrlCopNode;
    snapshot: SnapshotCopNode;
    switch: SwitchCopNode;
    text: TextCopNode;
    textureProperties: TexturePropertiesCopNode;
    video: VideoCopNode;
    webCam: WebCamCopNode;
    actorsNetwork: ActorsNetworkCopNode;
    animationsNetwork: AnimationsNetworkCopNode;
    audioNetwork: AudioNetworkCopNode;
    copNetwork: CopNetworkCopNode;
    eventsNetwork: EventsNetworkCopNode;
    materialsNetwork: MaterialsNetworkCopNode;
    postProcessNetwork: PostProcessNetworkCopNode;
    renderersNetwork: RenderersNetworkCopNode;
}
import { PolyEngine } from '../../../Poly';
export declare class CopRegister {
    static run(poly: PolyEngine): void;
}
