import { PolyScene } from '../PolyScene';
import { Object3D } from 'three';
import { CorePathObjCallback } from '../../../core/geometry/CorePath';
import { CoreObjectType, ObjectContent } from '../../../core/geometry/ObjectContent';
export declare const ROOT_NAME = "/";
export declare class ObjectsController {
    private scene;
    constructor(scene: PolyScene);
    findObjectByMask<T extends CoreObjectType>(mask: string): ObjectContent<T> | undefined;
    objectsByMask<T extends CoreObjectType>(mask: string, parent?: ObjectContent<T>): ObjectContent<T>[];
    traverseObjectsWithMask<T extends CoreObjectType>(mask: string, callback: CorePathObjCallback<T>, object: Object3D | undefined, invertMask?: boolean): void;
}
