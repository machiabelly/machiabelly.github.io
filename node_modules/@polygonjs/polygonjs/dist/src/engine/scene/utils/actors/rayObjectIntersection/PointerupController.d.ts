import { Object3D } from 'three';
import { ConvertToStrings } from '../../../../../types/GlobalTypes';
import { BaseUserInputController } from './_BaseUserInputController';
interface PointerupOptions {
    callback: () => void;
}
export interface ObjectToPointerupOptions {
    pointerup: PointerupOptions;
}
export interface ObjectToPointerupOptionsAsString {
    pointerup: ConvertToStrings<PointerupOptions>;
}
export declare class PointerupController extends BaseUserInputController {
    protected _propertiesListByObject: Map<Object3D, ObjectToPointerupOptions[]>;
    protected _intersectedStateByObject: Map<Object3D, boolean>;
    onPointerup(event: Readonly<PointerEvent | MouseEvent | TouchEvent>): void;
}
export {};
