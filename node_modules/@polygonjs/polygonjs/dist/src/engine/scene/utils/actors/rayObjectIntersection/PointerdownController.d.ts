import { Object3D } from 'three';
import { ConvertToStrings } from '../../../../../types/GlobalTypes';
import { BaseUserInputController } from './_BaseUserInputController';
interface PointerdownOptions {
    callback: () => void;
}
export interface ObjectToPointerdownOptions {
    pointerdown: PointerdownOptions;
}
export interface ObjectToPointerdownOptionsAsString {
    pointerdown: ConvertToStrings<PointerdownOptions>;
}
export declare class PointerdownController extends BaseUserInputController {
    protected _propertiesListByObject: Map<Object3D, ObjectToPointerdownOptions[]>;
    protected _intersectedStateByObject: Map<Object3D, boolean>;
    onPointerdown(event: Readonly<PointerEvent | MouseEvent | TouchEvent>): void;
}
export {};
