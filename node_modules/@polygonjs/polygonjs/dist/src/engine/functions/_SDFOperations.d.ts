import { Vector3 } from 'three';
import { NamedFunction2, NamedFunction3, NamedFunction4 } from './_Base';
export declare class SDFUnion extends NamedFunction2<[number, number]> {
    static type(): string;
    func(d1: number, d2: number): number;
}
export declare class SDFSubtract extends NamedFunction2<[number, number]> {
    static type(): string;
    func(d1: number, d2: number): number;
}
export declare class SDFIntersect extends NamedFunction2<[number, number]> {
    static type(): string;
    func(d1: number, d2: number): number;
}
export declare class SDFSmoothUnion extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(d1: number, d2: number, k: number): number;
}
export declare class SDFSmoothSubtract extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(d1: number, d2: number, k: number): number;
}
export declare class SDFSmoothIntersect extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(d1: number, d2: number, k: number): number;
}
export declare class SDFElongateFast extends NamedFunction4<[Vector3, Vector3, Vector3, Vector3]> {
    static type(): string;
    func(p: Vector3, center: Vector3, h: Vector3, target: Vector3): Vector3;
}
export declare class SDFElongateSlow extends NamedFunction4<[Vector3, Vector3, Vector3, Vector3]> {
    static type(): string;
    func(p: Vector3, center: Vector3, h: Vector3, target: Vector3): Vector3;
}
export declare class SDFOnion extends NamedFunction2<[number, number]> {
    static type(): string;
    func(sdf: number, thickness: number): number;
}
export declare class SDFTransform extends NamedFunction4<[Vector3, Vector3, Vector3, Vector3]> {
    static type(): string;
    func(p: Vector3, t: Vector3, r: Vector3, target: Vector3): Vector3;
}
