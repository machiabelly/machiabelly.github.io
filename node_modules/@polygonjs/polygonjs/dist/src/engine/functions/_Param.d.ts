import { Color, Vector2, Vector3, Vector4 } from 'three';
import { NamedFunction1, NamedFunction2, NamedFunction3 } from './_Base';
import { BaseParamType } from '../params/_Base';
import type { BooleanParam } from '../params/Boolean';
import type { ColorParam } from '../params/Color';
import type { FloatParam } from '../params/Float';
import type { IntegerParam } from '../params/Integer';
import type { StringParam } from '../params/String';
import type { Vector2Param } from '../params/Vector2';
import type { Vector3Param } from '../params/Vector3';
import type { Vector4Param } from '../params/Vector4';
import type { ButtonParam } from '../params/Button';
export declare function dummyReadRefVal(value: number | null): void;
export declare class getParam extends NamedFunction1<[string]> {
    static type(): string;
    func(paramPath: string): BaseParamType;
}
export declare class setParamBoolean extends NamedFunction2<[BooleanParam, boolean]> {
    static type(): string;
    func(param: BooleanParam, value: boolean): void;
}
export declare class setParamBooleanToggle extends NamedFunction1<[BooleanParam]> {
    static type(): string;
    func(param: BooleanParam): void;
}
export declare class setParamColor extends NamedFunction3<[ColorParam, Color, number]> {
    static type(): string;
    func(param: ColorParam, value: Color, lerp: number): void;
}
export declare class setParamFloat extends NamedFunction3<[FloatParam, number, number]> {
    static type(): string;
    func(param: FloatParam, value: number, lerp: number): void;
}
export declare class setParamInteger extends NamedFunction3<[IntegerParam, number, number]> {
    static type(): string;
    func(param: IntegerParam, value: number, lerp: number): void;
}
export declare class setParamString extends NamedFunction2<[StringParam, string]> {
    static type(): string;
    func(param: StringParam, value: string): void;
}
export declare class setParamVector2 extends NamedFunction3<[Vector2Param, Vector2, number]> {
    static type(): string;
    func(param: Vector2Param, value: Vector2, lerp: number): void;
}
export declare class setParamVector3 extends NamedFunction3<[Vector3Param, Vector3, number]> {
    static type(): string;
    func(param: Vector3Param, value: Vector3, lerp: number): void;
}
export declare class setParamVector4 extends NamedFunction3<[Vector4Param, Vector4, number]> {
    static type(): string;
    func(param: Vector4Param, value: Vector4, lerp: number): void;
}
export declare class pressButtonParam extends NamedFunction1<[ButtonParam]> {
    static type(): string;
    func(param: ButtonParam): void;
}
