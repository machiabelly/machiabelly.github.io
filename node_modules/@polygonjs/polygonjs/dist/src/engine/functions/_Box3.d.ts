import { Box3, Object3D, Vector3 } from 'three';
import { NamedFunction2, NamedFunction3, ObjectNamedFunction2 } from './_Base';
export declare class box3Set extends NamedFunction3<[Vector3, Vector3, Box3]> {
    static type(): string;
    func(min: Vector3, max: Vector3, target: Box3): Box3;
}
export declare class box3SetFromObject extends ObjectNamedFunction2<[boolean, Box3]> {
    static type(): string;
    func(object: Object3D, precise: boolean, target: Box3): Box3;
}
export declare class box3ContainsPoint extends NamedFunction2<[Box3, Vector3]> {
    static type(): string;
    func(box3: Box3, point: Vector3): boolean;
}
export declare class box3IntersectsBox3 extends NamedFunction2<[Box3, Box3]> {
    static type(): string;
    func(box3a: Box3, box3b: Box3): boolean;
}
export declare class getBox3Center extends NamedFunction2<[Box3, Vector3]> {
    static type(): string;
    func(box3: Box3, target: Vector3): Vector3;
}
export declare class getBox3Min extends NamedFunction2<[Box3, Vector3]> {
    static type(): string;
    func(box3: Box3, target: Vector3): Vector3;
}
export declare class getBox3Max extends NamedFunction2<[Box3, Vector3]> {
    static type(): string;
    func(box3: Box3, target: Vector3): Vector3;
}
