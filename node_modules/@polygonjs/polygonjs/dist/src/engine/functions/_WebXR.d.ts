import { NamedFunction0, NamedFunction1, ObjectNamedFunction1, ObjectNamedFunction2 } from './_Base';
import { Matrix4, Object3D, Quaternion, Ray, Vector3 } from 'three';
export declare class getWebXRARHitDetected extends NamedFunction0 {
    static type(): string;
    func(): boolean;
}
export declare class getWebXRARHitMatrix extends NamedFunction1<[Matrix4]> {
    static type(): string;
    func(target: Matrix4): Matrix4;
}
export declare class getWebXRARHitPosition extends NamedFunction1<[Vector3]> {
    static type(): string;
    func(target: Vector3): Vector3;
}
export declare class getWebXRARHitQuaternion extends NamedFunction1<[Quaternion]> {
    static type(): string;
    func(target: Quaternion): Quaternion;
}
export declare class getWebXRControllerObject extends ObjectNamedFunction1<[number]> {
    static type(): string;
    func(object3D: Object3D, controllerIndex: number): Object3D;
}
export declare class getWebXRControllerRay extends ObjectNamedFunction2<[number, Ray]> {
    static type(): string;
    func(object3D: Object3D, controllerIndex: number, target: Ray): Ray;
}
export declare class getWebXRControllerHasAngularVelocity extends ObjectNamedFunction1<[number]> {
    static type(): string;
    func(object3D: Object3D, controllerIndex: number): boolean;
}
export declare class getWebXRControllerAngularVelocity extends ObjectNamedFunction2<[number, Vector3]> {
    static type(): string;
    func(object3D: Object3D, controllerIndex: number, target: Vector3): Vector3;
}
export declare class getWebXRControllerHasLinearVelocity extends ObjectNamedFunction1<[number]> {
    static type(): string;
    func(object3D: Object3D, controllerIndex: number): boolean;
}
export declare class getWebXRControllerLinearVelocity extends ObjectNamedFunction2<[number, Vector3]> {
    static type(): string;
    func(object3D: Object3D, controllerIndex: number, target: Vector3): Vector3;
}
export declare class getWebXRTrackedMarkerMatrix extends NamedFunction1<[Matrix4]> {
    static type(): string;
    func(target: Matrix4): Matrix4;
}
