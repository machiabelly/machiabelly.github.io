import { Object3D } from 'three';
import { NamedFunction3, ObjectNamedFunction1, ObjectNamedFunction3 } from './_Base';
import type { ActorEvaluator } from '../nodes/js/code/assemblers/actor/ActorEvaluator';
export declare const AUDIO_ATTRIB_NAME_LAST_INSTRUMENT_TYPE = "__lastInstrumentType__";
export declare const AUDIO_ATTRIB_NAME_LAST_NOTE = "__lastNote__";
type Listener = () => void;
export declare class addAudioStopEventListener extends NamedFunction3<[string, Listener, ActorEvaluator]> {
    static type(): string;
    func(nodePath: string, listener: Listener, evaluator: ActorEvaluator): void;
}
export declare class playAudioSource extends ObjectNamedFunction1<[string]> {
    static type(): string;
    func(object3D: Object3D, nodePath: string): void;
}
export declare class pauseAudioSource extends ObjectNamedFunction1<[string]> {
    static type(): string;
    func(object3D: Object3D, nodePath: string): void;
}
export declare class playInstrumentNote extends ObjectNamedFunction3<[string, string, number]> {
    static type(): string;
    func(object3D: Object3D, nodePath: string, note: string, duration: number): void;
}
export {};
