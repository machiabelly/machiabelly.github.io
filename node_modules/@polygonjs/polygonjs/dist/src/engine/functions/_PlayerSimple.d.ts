import { Object3D, Vector3 } from 'three';
import { ObjectNamedFunction0, ObjectNamedFunction1 } from './_Base';
interface PlayerUpdateOptions {
    collider: Object3D;
    speed: number;
    runAllowed: boolean;
    runSpeedMult: number;
    jumpAllowed: boolean;
    jumpStrength: number;
    physicsSteps: number;
    gravity: Vector3;
    capsuleRadius: number;
    capsuleHeight: number;
    left: boolean;
    right: boolean;
    backward: boolean;
    forward: boolean;
    run: boolean;
    jump: boolean;
}
export declare class playerSimpleUpdate extends ObjectNamedFunction1<[PlayerUpdateOptions]> {
    static type(): string;
    func(object3D: Object3D, options: PlayerUpdateOptions): void;
}
export declare class getPlayerSimplePropertyOnGround extends ObjectNamedFunction0 {
    static type(): string;
    func(object3D: Object3D): boolean;
}
export declare class getPlayerSimplePropertyVelocity extends ObjectNamedFunction1<[Vector3]> {
    static type(): string;
    func(object3D: Object3D, target: Vector3): Vector3;
}
export {};
