import { Vector3, EventListener } from 'three';
import { NamedFunction2, NamedFunction3 } from './_Base';
import { ActorEvaluator } from '../nodes/js/code/assemblers/actor/ActorEvaluator';
import { CameraControlsEvent } from '../viewers/utils/ViewerControlsController';
export declare class setViewer extends NamedFunction2<[string, boolean]> {
    static type(): string;
    func(className: string, addClass: boolean): void;
}
export declare class setViewerControls extends NamedFunction3<[boolean, boolean, Vector3]> {
    static type(): string;
    func(active: boolean, updateTarget: boolean, controlsTarget: Vector3): void;
}
type CallbackByCameraControlsEvent = Record<CameraControlsEvent, EventListener<any, any, any>>;
export declare class onViewerControlsEvent extends NamedFunction2<[CallbackByCameraControlsEvent, ActorEvaluator]> {
    static type(): string;
    func(callbacks: CallbackByCameraControlsEvent, evaluator: ActorEvaluator): void;
}
export {};
