import { Euler, Vector3, Quaternion } from 'three';
import { NamedFunction2, NamedFunction3, NamedFunction4 } from './_Base';
export declare class quaternionSetFromEuler extends NamedFunction2<[Euler, Quaternion]> {
    static type(): string;
    func(euler: Euler, target: Quaternion): Quaternion;
}
export declare class quaternionSetFromAxisAngle extends NamedFunction3<[Vector3, number, Quaternion]> {
    static type(): string;
    func(axis: Vector3, angle: number, target: Quaternion): Quaternion;
}
export declare class quaternionAngleTo extends NamedFunction2<[Quaternion, Quaternion]> {
    static type(): string;
    func(src: Quaternion, to: Quaternion): number;
}
export declare class quaternionSlerp extends NamedFunction4<[Quaternion, Quaternion, number, Quaternion]> {
    static type(): string;
    func(q1: Quaternion, q2: Quaternion, lerp: number, target: Quaternion): Quaternion;
}
export declare class rotateWithAxisAngle extends NamedFunction4<[Vector3, Vector3, number, Vector3]> {
    static type(): string;
    func(vector: Vector3, axis: Vector3, angle: number, target: Vector3): Vector3;
}
export declare class rotateWithQuaternion extends NamedFunction3<[Vector3, Quaternion, Vector3]> {
    static type(): string;
    func(vector: Vector3, quat: Quaternion, target: Vector3): Vector3;
}
