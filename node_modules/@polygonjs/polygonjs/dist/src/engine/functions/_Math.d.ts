import { NamedFunction0, NamedFunction1, NamedFunction2, NamedFunction3, NamedFunction4, NamedFunction5 } from './_Base';
export declare class clamp extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(value: number, min: number, max: number): number;
}
export declare class complement extends NamedFunction1<[number]> {
    static type(): string;
    func(value: number): number;
}
export declare class degToRad extends NamedFunction1<[number]> {
    static type(): string;
    func(value: number): number;
}
export declare class radToDeg extends NamedFunction1<[number]> {
    static type(): string;
    func(value: number): number;
}
export declare class fit extends NamedFunction5<[number, number, number, number, number]> {
    static type(): string;
    func(value: number, srcMin: number, srcMax: number, destMin: number, destMax: number): number;
}
export declare class fitClamp extends NamedFunction5<[number, number, number, number, number]> {
    static type(): string;
    func(value: number, srcMin: number, srcMax: number, destMin: number, destMax: number): number;
}
export declare class mix extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(value0: number, value1: number, blend: number): number;
}
export declare class mod extends NamedFunction2<[number, number]> {
    static type(): string;
    func(v1: number, v2: number): number;
}
export declare class multAdd extends NamedFunction4<[number, number, number, number]> {
    static type(): string;
    func(value: number, preAdd: number, mult: number, postAdd: number): number;
}
export declare class negate<T extends number | boolean> extends NamedFunction1<[T]> {
    static type(): string;
    func(value: T): T;
}
export declare class rand extends NamedFunction2<[number, number]> {
    static type(): string;
    func(value0: number, value1: number): number;
}
export declare class random extends NamedFunction0 {
    static type(): string;
    func(): number;
}
export declare class smoothstep extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(value: number, min: number, max: number): number;
}
export declare class smootherstep extends NamedFunction3<[number, number, number]> {
    static type(): string;
    func(value: number, min: number, max: number): number;
}
