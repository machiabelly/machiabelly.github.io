import { NamedFunction3 } from './_Base';
import { Color, Vector2, Vector3, Vector4 } from 'three';
export declare class previousValuePrimitive<T extends boolean | number | string> extends NamedFunction3<[string, number, T]> {
    static type(): string;
    func(nodePath: string, offset: number, newValue: T): T;
}
export declare class previousValueColor extends NamedFunction3<[string, number, Color]> {
    static type(): string;
    func(nodePath: string, offset: number, newValue: Color): Color;
}
export declare class previousValueVector2 extends NamedFunction3<[string, number, Vector2]> {
    static type(): string;
    func(nodePath: string, offset: number, newValue: Vector2): Vector2;
}
export declare class previousValueVector3 extends NamedFunction3<[string, number, Vector3]> {
    static type(): string;
    func(nodePath: string, offset: number, newValue: Vector3): Vector3;
}
export declare class previousValueVector4 extends NamedFunction3<[string, number, Vector4]> {
    static type(): string;
    func(nodePath: string, offset: number, newValue: Vector4): Vector4;
}
