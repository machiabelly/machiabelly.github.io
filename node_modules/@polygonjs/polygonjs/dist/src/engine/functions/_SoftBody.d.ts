import { Object3D, Vector3 } from 'three';
import { ObjectNamedFunction0, ObjectNamedFunction2, ObjectNamedFunction1, ObjectNamedFunction3, NamedFunction5, ObjectNamedFunction4 } from './_Base';
import { Ref } from '@vue/reactivity';
export declare class softBodySolverReset extends ObjectNamedFunction0 {
    static type(): string;
    func(object3D: Object3D): void;
}
export declare class softBodySolverStepSimulation extends ObjectNamedFunction4<[number, number, number, boolean]> {
    static type(): string;
    func(object3D: Object3D, stepsCount: number, edgeCompliance: number, volumeCompliance: number, preciseCollisions: boolean): void;
}
export declare class computeVelocity extends NamedFunction5<[Vector3, Vector3, number, number, Vector3]> {
    static type(): string;
    func(velocity: Vector3, forces: Vector3, dt: number, drag: number, target: Vector3): Vector3;
}
export declare class softBodySetPosition extends ObjectNamedFunction2<[Vector3, number]> {
    static type(): string;
    func(object3D: Object3D, position: Vector3, lerp: number): void;
}
export declare class softBodyMultiplyVelocity extends ObjectNamedFunction1<[number]> {
    static type(): string;
    func(object3D: Object3D, mult: number): void;
}
export declare class softBodyConstraintCreate extends ObjectNamedFunction2<[number, Ref<number>]> {
    static type(): string;
    func(object3D: Object3D, index: number, constraintIdRef: Ref<number>): void;
}
export declare class softBodyConstraintSetPosition extends ObjectNamedFunction3<[number, Vector3, number]> {
    static type(): string;
    func(object3D: Object3D, constraintId: number, position: Vector3, lerp: number): void;
}
export declare class softBodyConstraintDelete extends ObjectNamedFunction1<[number]> {
    static type(): string;
    func(object3D: Object3D, constraintId: number): void;
}
