import { TypedAnimNode } from './_Base';
import { AnimCopyStamp } from './utils/CopyStamp';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TimelineBuilder } from '../../../core/animation/TimelineBuilder';
import { AnimType } from '../../poly/registers/nodes/types/Anim';
declare class CopyAnimParamsConfig extends NodeParamsConfig {
    count: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class CopyAnimNode extends TypedAnimNode<CopyAnimParamsConfig> {
    readonly paramsConfig: CopyAnimParamsConfig;
    static type(): AnimType;
    private _stampNode;
    initializeNode(): void;
    cook(input_contents: TimelineBuilder[]): Promise<void>;
    stampValue(attrib_name?: string): import("../../../types/GlobalTypes").AttribValue | undefined;
    stampNode(): AnimCopyStamp;
    private _createStampNode;
}
export {};
