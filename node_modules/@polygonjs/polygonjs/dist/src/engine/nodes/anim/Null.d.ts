/**
 * shows controls to play and pause animation properties
 *
 */
import { TypedAnimNode } from './_Base';
import { TimelineBuilder } from '../../../core/animation/TimelineBuilder';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class NullAnimParamsConfig extends NodeParamsConfig {
    /** @param play the animations */
    play: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BUTTON>;
    /** @param pause the animations */
    pause: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BUTTON>;
    /** @param sets if the animations created can be stopped when a new animation in generated on the same property */
    stoppable: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param toggle to see debug infos printed in the console */
    debug: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class NullAnimNode extends TypedAnimNode<NullAnimParamsConfig> {
    paramsConfig: NullAnimParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputContents: TimelineBuilder[]): void;
    private _timeline;
    timelineBuilder(): Promise<TimelineBuilder | undefined>;
    play(): Promise<void>;
    pause(): Promise<void>;
    static PARAM_CALLBACK_play(node: NullAnimNode): void;
    static PARAM_CALLBACK_pause(node: NullAnimNode): void;
}
export {};
