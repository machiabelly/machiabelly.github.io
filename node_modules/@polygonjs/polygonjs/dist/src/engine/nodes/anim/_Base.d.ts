import { TypedNode } from '../_Base';
import { NodeContext } from '../../poly/NodeContext';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { FlagsControllerB } from '../utils/FlagsController';
import { TimelineBuilder } from '../../../core/animation/TimelineBuilder';
import { ModuleName } from '../../poly/registers/modules/Common';
/**
 *
 *
 * TypedAnimNode is the base class for all nodes that process animations. This inherits from [TypedNode](/docs/api/TypedNode).
 *
 */
export declare class TypedAnimNode<K extends NodeParamsConfig> extends TypedNode<NodeContext.ANIM, K> {
    readonly flags: FlagsControllerB;
    static context(): NodeContext;
    requiredModules(): ModuleName[];
    initializeBaseNode(): void;
    protected setTimelineBuilder(timeline_builder: TimelineBuilder): void;
}
export type BaseAnimNodeType = TypedAnimNode<NodeParamsConfig>;
export declare class BaseAnimNodeClass extends TypedAnimNode<NodeParamsConfig> {
}
