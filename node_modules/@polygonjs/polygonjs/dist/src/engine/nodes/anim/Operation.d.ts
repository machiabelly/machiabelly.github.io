/**
 * Sets how the animation is applied
 *
 * @remarks
 * The animation can be set to:
 *
 * - set: the animation override the current value
 * - add: the animation adds to the current value
 * - subtract: the animation subtracts from the current value
 *
 */
import { TypedAnimNode } from './_Base';
import { TimelineBuilder } from '../../../core/animation/TimelineBuilder';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class OperationAnimParamsConfig extends NodeParamsConfig {
    /** @param sets the operation (set, add or subtract) */
    operation: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class OperationAnimNode extends TypedAnimNode<OperationAnimParamsConfig> {
    paramsConfig: OperationAnimParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(input_contents: TimelineBuilder[]): void;
}
export {};
