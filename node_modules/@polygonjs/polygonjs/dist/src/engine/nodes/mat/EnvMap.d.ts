/**
 * Updates the envMap properties of the input material
 *

 *
 */
import { Material, MeshStandardMaterial } from 'three';
import { UpdateMatNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TextureEnvMapController } from './utils/TextureEnvMapController';
interface EnvMapControllers {
    envMap: TextureEnvMapController;
}
declare const EnvMapMatParamsConfig_base: {
    new (...args: any[]): {
        useEnvMap: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        envMap: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.NODE_PATH>;
        envMapIntensity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    };
} & typeof NodeParamsConfig;
declare class EnvMapMatParamsConfig extends EnvMapMatParamsConfig_base {
}
export declare class EnvMapMatNode extends UpdateMatNode<MeshStandardMaterial, EnvMapMatParamsConfig> {
    paramsConfig: EnvMapMatParamsConfig;
    static type(): string;
    readonly controllers: EnvMapControllers;
    cook(inputMaterials: Material[]): Promise<void>;
}
export {};
