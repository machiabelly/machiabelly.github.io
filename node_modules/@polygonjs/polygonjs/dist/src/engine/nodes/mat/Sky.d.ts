/**
 * Creates a Sky Material
 *
 * @remarks
 *
 * For best result, assign this material to a very large box.
 *
 */
import { ShaderMaterial } from 'three';
import { PrimitiveMatNode } from './_Base';
import { Vector3 } from 'three';
import { MatType } from '../../poly/registers/nodes/types/Mat';
interface ShaderMaterialWithSkyUniforms extends ShaderMaterial {
    uniforms: {
        turbidity: {
            value: number;
        };
        rayleigh: {
            value: number;
        };
        mieCoefficient: {
            value: number;
        };
        mieDirectionalG: {
            value: number;
        };
        sunPosition: {
            value: Vector3;
        };
        up: {
            value: Vector3;
        };
    };
}
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class SkyMatParamsConfig extends NodeParamsConfig {
    /** @param turbidity */
    turbidity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param rayleigh */
    rayleigh: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param mieCoefficient */
    mieCoefficient: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param mieDirectional */
    mieDirectional: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param inclination */
    inclination: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param azimuth */
    azimuth: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param up */
    up: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
}
export declare class SkyMatNode extends PrimitiveMatNode<ShaderMaterialWithSkyUniforms, SkyMatParamsConfig> {
    paramsConfig: SkyMatParamsConfig;
    static type(): MatType;
    createMaterial(): ShaderMaterialWithSkyUniforms;
    cook(): Promise<void>;
}
export {};
