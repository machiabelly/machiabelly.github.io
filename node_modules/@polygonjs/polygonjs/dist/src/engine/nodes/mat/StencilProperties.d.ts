/**
 * Updates stencil properties
 *
 *
 */
import { Material, ShaderMaterial } from 'three';
import { UpdateMatNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class StencilPropertiesMatParamsConfig extends NodeParamsConfig {
    /** @param stencilWrite */
    stencilWrite: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param stencilFunc */
    stencilFunc: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param stencilWriteMask */
    stencilWriteMask: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param stencilWriteMask */
    stencilFuncMask: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param stencilRef */
    stencilRef: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param stencilFail */
    stencilFail: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param stencilZFail */
    stencilZFail: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param stencilZPass */
    stencilZPass: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class StencilPropertiesMatNode extends UpdateMatNode<ShaderMaterial, StencilPropertiesMatParamsConfig> {
    paramsConfig: StencilPropertiesMatParamsConfig;
    static type(): string;
    cook(inputMaterials: Material[]): Promise<void>;
}
export {};
