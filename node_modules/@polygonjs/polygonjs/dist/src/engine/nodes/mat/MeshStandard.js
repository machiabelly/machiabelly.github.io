"use strict";
import { MeshStandardMaterial } from "three";
import { FrontSide } from "three";
import { PrimitiveMatNode } from "./_Base";
import { NodeParamsConfig } from "../utils/params/ParamsConfig";
import { ColorsController, ColorParamConfig } from "./utils/ColorsController";
import {
  AdvancedCommonController,
  AdvancedCommonParamConfig
} from "./utils/AdvancedCommonController";
import { TextureMapController, MapParamConfig } from "./utils/TextureMapController";
import {
  TextureAlphaMapController,
  AlphaMapParamConfig
} from "./utils/TextureAlphaMapController";
import { TextureEnvMapController, EnvMapParamConfig } from "./utils/TextureEnvMapController";
import {
  TextureBumpMapController,
  BumpMapParamConfig
} from "./utils/TextureBumpMapController";
import {
  TextureNormalMapController,
  NormalMapParamConfig
} from "./utils/TextureNormalMapController";
import {
  TextureEmissiveMapController,
  EmissiveMapParamConfig
} from "./utils/TextureEmissiveMapController";
import {
  TextureMetalnessRoughnessMapController,
  MetalnessRoughnessMapParamConfig
} from "./utils/TextureMetalnessRoughnessMapController";
import {
  TextureLightMapController,
  LightMapParamConfig
} from "./utils/TextureLightMapController";
import {
  TextureDisplacementMapController,
  DisplacementMapParamConfig
} from "./utils/TextureDisplacementMapController";
import { FlatShadingController, FlatShadingParamConfig } from "./utils/FlatShadingController";
import { TextureAOMapController, AOMapParamConfig } from "./utils/TextureAOMapController";
import { WireframeController, WireframeParamConfig } from "./utils/WireframeController";
import { FogController, FogParamConfig } from "./utils/FogController";
import { DefaultFolderParamConfig } from "./utils/DefaultFolder";
import { TexturesFolderParamConfig } from "./utils/TexturesFolder";
import { AdvancedFolderParamConfig } from "./utils/AdvancedFolder";
import { MatType } from "../../poly/registers/nodes/types/Mat";
class MeshStandardMatParamsConfig extends FogParamConfig(
  WireframeParamConfig(
    AdvancedCommonParamConfig(
      FlatShadingParamConfig(
        /* advanced */
        AdvancedFolderParamConfig(
          MetalnessRoughnessMapParamConfig(
            NormalMapParamConfig(
              LightMapParamConfig(
                EnvMapParamConfig(
                  EmissiveMapParamConfig(
                    DisplacementMapParamConfig(
                      BumpMapParamConfig(
                        AOMapParamConfig(
                          AlphaMapParamConfig(
                            MapParamConfig(
                              /* textures */
                              TexturesFolderParamConfig(
                                ColorParamConfig(
                                  DefaultFolderParamConfig(NodeParamsConfig)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
) {
}
const ParamsConfig = new MeshStandardMatParamsConfig();
export class MeshStandardMatNode extends PrimitiveMatNode {
  constructor() {
    super(...arguments);
    this.paramsConfig = ParamsConfig;
    this.controllers = {
      colors: new ColorsController(this),
      advancedCommon: new AdvancedCommonController(this),
      alphaMap: new TextureAlphaMapController(this),
      aoMap: new TextureAOMapController(this),
      bumpMap: new TextureBumpMapController(this),
      displacementMap: new TextureDisplacementMapController(this),
      emissiveMap: new TextureEmissiveMapController(this),
      envMap: new TextureEnvMapController(this),
      fog: new FogController(this),
      flatShading: new FlatShadingController(this),
      lightMap: new TextureLightMapController(this),
      map: new TextureMapController(this),
      metalnessRoughnessMap: new TextureMetalnessRoughnessMapController(this),
      normalMap: new TextureNormalMapController(this),
      wireframe: new WireframeController(this)
    };
    this.controllersList = Object.values(this.controllers);
  }
  static type() {
    return MatType.MESH_STANDARD;
  }
  createMaterial() {
    return new MeshStandardMaterial({
      vertexColors: false,
      side: FrontSide,
      color: 16777215,
      opacity: 1,
      metalness: 1,
      roughness: 0
    });
  }
  async cook() {
    this._material = this._material || this.createMaterial();
    await Promise.all(this.controllersPromises(this._material));
    this.setMaterial(this._material);
  }
}
