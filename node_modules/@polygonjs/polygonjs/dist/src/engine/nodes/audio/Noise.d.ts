/**
 * Noise is a noise generator. It uses looped noise buffers to save on performance.
 * Noise supports the noise types: "pink", "white", and "brown". Read more about
 * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).
 *
 * See description on [Tone.js](https://tonejs.github.io/)
 */
import { TypedAudioNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { AudioBuilder } from '../../../core/audio/AudioBuilder';
export declare const NOISE_DEFAULTS: {
    fadeIn: number;
    fadeOut: number;
    mute: boolean;
    playbackRate: number;
};
declare class NoiseAudioParamsConfig extends NodeParamsConfig {
    /** @param Noise type */
    type: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** playbackRate */
    playbackRate: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** fadeIn */
    fadeIn: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** fadeOut */
    fadeOut: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** play */
    play: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class NoiseAudioNode extends TypedAudioNode<NoiseAudioParamsConfig> {
    paramsConfig: NoiseAudioParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputContents: AudioBuilder[]): void;
    private __noise__;
    private _noise;
    private _createEffect;
    static PARAM_CALLBACK_updateNoise(node: NoiseAudioNode): void;
    private _updateNoise;
}
export {};
