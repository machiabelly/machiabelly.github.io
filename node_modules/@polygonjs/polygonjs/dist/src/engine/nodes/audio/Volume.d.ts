/**
 * creates a Synth
 *
 *
 */
import { TypedAudioNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { AudioBuilder } from '../../../core/audio/AudioBuilder';
declare class VolumeAudioParamsConfig extends NodeParamsConfig {
    /** @param volume */
    volume: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class VolumeAudioNode extends TypedAudioNode<VolumeAudioParamsConfig> {
    paramsConfig: VolumeAudioParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputContents: AudioBuilder[]): void;
    private __effect__;
    private _effect;
    private _createEffect;
    static PARAM_CALLBACK_updateEffect(node: VolumeAudioNode): void;
    private _updateEffect;
}
export {};
