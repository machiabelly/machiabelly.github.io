/**
 * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.
 * Setting the LFO rate and depth allows for control over the filter modulation rate
 * and depth.
 *
 *
 */
import { TypedAudioNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { AudioBuilder } from '../../../core/audio/AudioBuilder';
declare class AutoFilterAudioParamsConfig extends NodeParamsConfig {
    /** @param baseFrequency */
    baseFrequency: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param octaves */
    octaves: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class AutoFilterAudioNode extends TypedAudioNode<AutoFilterAudioParamsConfig> {
    paramsConfig: AutoFilterAudioParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputContents: AudioBuilder[]): void;
    private __effect__;
    private _effect;
    private _createEffect;
    static PARAM_CALLBACK_updateEffect(node: AutoFilterAudioNode): void;
    private _updateEffect;
}
export {};
