/**
 * AutoWah connects a [[Follower]] to a [[Filter]].
 * The frequency of the filter, follows the input amplitude curve.
 *
 *
 */
import { TypedAudioNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { AudioBuilder } from '../../../core/audio/AudioBuilder';
declare class AutoWahAudioParamsConfig extends NodeParamsConfig {
    /** @param baseFrequency */
    baseFrequency: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param octaves */
    octaves: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param sensitivity */
    sensitivity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param follower */
    follower: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class AutoWahAudioNode extends TypedAudioNode<AutoWahAudioParamsConfig> {
    paramsConfig: AutoWahAudioParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputContents: AudioBuilder[]): void;
    private __effect__;
    private _effect;
    private _createEffect;
    static PARAM_CALLBACK_updateEffect(node: AutoWahAudioNode): void;
    private _updateEffect;
}
export {};
