/**
 * applies a Distortion
 *
 *
 */
import { TypedAudioNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { AudioBuilder } from '../../../core/audio/AudioBuilder';
declare class DistortionAudioParamsConfig extends NodeParamsConfig {
    /** @param distortion */
    distortion: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param oversample */
    oversample: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class DistortionAudioNode extends TypedAudioNode<DistortionAudioParamsConfig> {
    paramsConfig: DistortionAudioParamsConfig;
    static type(): string;
    initializeNode(): void;
    cook(inputContents: AudioBuilder[]): void;
    private __effect__;
    private _effect;
    private _createEffect;
    static PARAM_CALLBACK_updateEffect(node: DistortionAudioNode): void;
    private _updateEffect;
}
export {};
