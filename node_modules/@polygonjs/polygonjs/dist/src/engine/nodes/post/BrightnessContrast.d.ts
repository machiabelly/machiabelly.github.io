/**
 * Adds a brightness/contrast
 *
 *
 */
import { TypedPostNode, TypedPostNodeContext } from './_Base';
import { EffectPass } from 'postprocessing';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class BrightnessContrastPostParamsConfig extends NodeParamsConfig {
    /** @param brightness */
    brightness: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param contrast */
    contrast: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param effect opacity */
    opacity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param render mode */
    blendFunction: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class BrightnessContrastPostNode extends TypedPostNode<EffectPass, BrightnessContrastPostParamsConfig> {
    paramsConfig: BrightnessContrastPostParamsConfig;
    static type(): string;
    createPass(context: TypedPostNodeContext): EffectPass;
    updatePass(pass: EffectPass): void;
}
export {};
