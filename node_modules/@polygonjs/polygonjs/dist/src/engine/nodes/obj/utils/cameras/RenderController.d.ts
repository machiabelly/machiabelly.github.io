import { Constructor } from '../../../../../types/GlobalTypes';
export declare function CameraRenderParamConfig<TBase extends Constructor>(Base: TBase): {
    new (...args: any[]): {
        render: import("../../../utils/params/ParamsConfig").ParamTemplate<import("../../../../index_all").ParamType.FOLDER>;
        /** @param toggle on to override rendered scene */
        setScene: import("../../../utils/params/ParamsConfig").ParamTemplate<import("../../../../index_all").ParamType.BOOLEAN>;
        /** @param override rendered scene */
        scene: import("../../../utils/params/ParamsConfig").ParamTemplate<import("../../../../index_all").ParamType.NODE_PATH>;
        /** @param toggle on to override the renderer */
        setRenderer: import("../../../utils/params/ParamsConfig").ParamTemplate<import("../../../../index_all").ParamType.BOOLEAN>;
        /** @param override renderer used */
        renderer: import("../../../utils/params/ParamsConfig").ParamTemplate<import("../../../../index_all").ParamType.NODE_PATH>;
        /** @param toggle on to add a CSSRenderer to have html elements on top of the 3D objects */
        setCSSRenderer: import("../../../utils/params/ParamsConfig").ParamTemplate<import("../../../../index_all").ParamType.BOOLEAN>;
        /** @param add a css renderer */
        CSSRenderer: import("../../../utils/params/ParamsConfig").ParamTemplate<import("../../../../index_all").ParamType.NODE_PATH>;
    };
} & TBase;
