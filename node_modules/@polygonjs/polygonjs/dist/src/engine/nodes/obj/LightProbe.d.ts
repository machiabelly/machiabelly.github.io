/**
 * Creates a light probe.
 *
 *
 */
import { LightProbe } from 'three';
import { TypedLightObjNode } from './_BaseLight';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { LightType } from '../../poly/registers/nodes/types/Light';
declare const LightProbeObjParamsConfig_base: {
    new (...args: any[]): {
        cubeMap: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.NODE_PATH>;
        intensity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        name: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    };
} & typeof NodeParamsConfig;
declare class LightProbeObjParamsConfig extends LightProbeObjParamsConfig_base {
}
export declare class LightProbeObjNode extends TypedLightObjNode<LightProbe, LightProbeObjParamsConfig> {
    paramsConfig: LightProbeObjParamsConfig;
    static type(): LightType;
    private __operation__;
    private _operation;
    createLight(): LightProbe;
    protected updateLightParams(): Promise<void>;
}
export {};
