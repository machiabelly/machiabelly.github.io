/**
 * A subnet to create COP nodes
 *
 */
import { ParamLessBaseNetworkCopNode } from './_BaseManager';
import { NodeContext, NetworkNodeType } from '../../poly/NodeContext';
import { CopNodeChildrenMap } from '../../poly/registers/nodes/Cop';
import { BaseCopNodeType } from './_Base';
import { Constructor, valueof } from '../../../types/GlobalTypes';
import { NodeCreateOptions } from '../utils/hierarchy/ChildrenController';
export declare class CopNetworkCopNode extends ParamLessBaseNetworkCopNode {
    static type(): NetworkNodeType;
    protected _childrenControllerContext: NodeContext;
    createNode<S extends keyof CopNodeChildrenMap>(node_class: S, options?: NodeCreateOptions): CopNodeChildrenMap[S];
    createNode<K extends valueof<CopNodeChildrenMap>>(node_class: Constructor<K>, options?: NodeCreateOptions): K;
    children(): BaseCopNodeType[];
    nodesByType<K extends keyof CopNodeChildrenMap>(type: K): CopNodeChildrenMap[K][];
}
