/**
 * Reads an attribute from a geometry and fills a texture with the values.
 *
 * @remarks
 *
 * This can be used to lookup geometry attributes inside a shader.
 *
 *
 */
import { TypedCopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class GeometryAttributeCopParamsConfig extends NodeParamsConfig {
    /** @param sop node */
    node: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.NODE_PATH>;
    /** @param group to read the material from */
    group: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param attribute name */
    attribute: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class GeometryAttributeCopNode extends TypedCopNode<GeometryAttributeCopParamsConfig> {
    paramsConfig: GeometryAttributeCopParamsConfig;
    static type(): 'geometryAttribute';
    cook(): Promise<void>;
    private _textureFromGeometry;
}
export {};
