/**
 * Generates a color
 *
 *
 */
import { TypedCopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class ColorCopParamsConfig extends NodeParamsConfig {
    /** @param texture resolution */
    resolution: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
    /** @param color to generate */
    color: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
    /** @param alpha */
    alpha: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class ColorCopNode extends TypedCopNode<ColorCopParamsConfig> {
    paramsConfig: ColorCopParamsConfig;
    static type(): string;
    private _dataTexture;
    cook(): void;
    private _createDataTexture;
    private _createPixelBuffer;
    static PARAM_CALLBACK_reset(node: ColorCopNode): void;
    private _reset;
}
export {};
