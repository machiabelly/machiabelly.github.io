import { TypedGlNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
import { ParamType } from '../../poly/ParamType';
import { GlType } from '../../poly/registers/nodes/types/Gl';
declare class VertexAnimationTextureInterpolatedGlParamsConfig extends NodeParamsConfig {
    frame: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.FLOAT>;
    framesCount: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.FLOAT>;
    uv: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.VECTOR2>;
    paddedRatio: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.VECTOR2>;
    textureP: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.STRING>;
    textureP2: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.STRING>;
    textureN: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.STRING>;
    speed: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.FLOAT>;
    boundMin: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.FLOAT>;
    boundMax: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.FLOAT>;
    Poffset: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.VECTOR3>;
}
export declare class VertexAnimationTextureInterpolatedGlNode extends TypedGlNode<VertexAnimationTextureInterpolatedGlParamsConfig> {
    paramsConfig: VertexAnimationTextureInterpolatedGlParamsConfig;
    static type(): GlType;
    initializeNode(): void;
    setLines(shadersCollectionController: ShadersCollectionController): void;
    paramsGenerating(): boolean;
    setParamConfigs(): void;
    private _uniformName;
}
export {};
