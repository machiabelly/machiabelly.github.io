export default "\nfloat __SUB_FUNCTION__NAME__(\n	vec2 particleUv,\n	vec2 textureSize,\n	sampler2D textureAttribute,\n	float currentAttributeValue,\n	float deltaThreshold,\n	float smoothAmount,\n	vec2 textureOffset,\n	float dist\n){\n	float otherAttribute = texture2D(\n		textureAttribute,\n		particleUv + (textureOffset / textureSize)\n	).__COMPONENT_ATTRIB__;\n\n	float delta = (otherAttribute - currentAttributeValue) / dist;\n\n	float excess = abs(delta) - deltaThreshold;\n\n	return excess > 0.0 ? (excess * smoothAmount * sign(delta)) : 0.;\n}\n\nfloat __FUNCTION__NAME__(\n	vec2 particleUv,\n	vec2 textureSize,\n	// attribSmooth\n	sampler2D textureAttribute,\n	float currentAttributeValue,\n	float deltaThreshold,\n	float smoothAmount\n	){\n\n	float sqrt2 = 1.4142135623730951;\n\n	float offset = __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(-1., 0.), 1.);\n	offset += __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(-1., -1.), sqrt2);\n	offset += __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(0., -1.), 1.);\n	offset += __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(1., -1.), sqrt2);\n	offset += __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(1., 0.), 1.);\n	offset += __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(1., 1.), sqrt2);\n	offset += __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(0., 1.), 1.);\n	offset += __SUB_FUNCTION__NAME__( particleUv, textureSize, textureAttribute, currentAttributeValue, deltaThreshold, smoothAmount, vec2(-1., 1.), sqrt2);\n\n	return currentAttributeValue + offset;\n}";
