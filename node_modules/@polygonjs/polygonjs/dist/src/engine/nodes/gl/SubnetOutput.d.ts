/**
 * a subnet output is the output of a... subnet!
 *
 *
 *
 */
import { TypedGlNode } from './_Base';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { NetworkChildNodeType } from '../../poly/NodeContext';
import { SubnetGlNode } from './Subnet';
declare class SubnetOutputGlParamsConfig extends NodeParamsConfig {
}
export declare class SubnetOutputGlNode extends TypedGlNode<SubnetOutputGlParamsConfig> {
    paramsConfig: SubnetOutputGlParamsConfig;
    static type(): Readonly<NetworkChildNodeType.OUTPUT>;
    initializeNode(): void;
    parent(): SubnetGlNode | null;
    protected _expected_input_name(index: number): string;
    protected _expected_input_types(): import("../utils/io/connections/Gl").GlConnectionPointType[];
    setLines(shadersCollectionController: ShadersCollectionController): void;
}
export {};
