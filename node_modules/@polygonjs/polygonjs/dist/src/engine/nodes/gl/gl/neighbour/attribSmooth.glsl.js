export default "\n\nfloat __FUNCTION__NAME__(\n	sampler2D texturePosition,\n	vec2 particleUv,\n	vec3 currentPosition,\n	// attribSmooth\n	sampler2D textureAttribute,\n	float currentAttributeValue,\n	float maxDist,\n	float deltaThreshold,\n	float smoothAmount\n	){\n\n	vec3 otherPosition;\n	float dist, delta, otherAttribute;\n	float neighbourCount = 0.0;\n	float offset = 0.0;\n\n	const float width = resolution.x;\n	const float height = resolution.y;\n	for ( float y = 0.0; y < height; y++ ) {\n		for ( float x = 0.0; x < width; x++ ) {\n\n			// ignore if this is self\n			if(x == particleUv.x && y == particleUv.y) continue;\n\n			vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;\n			otherPosition = texture2D( texturePosition, ref ).__COMPONENT__;\n			otherAttribute = texture2D( textureAttribute, ref ).__COMPONENT_ATTRIB__;\n			dist = distance( otherPosition, currentPosition );\n\n			if(dist < maxDist){\n				delta = (otherAttribute - currentAttributeValue) / dist;\n				float excess = abs(delta) - deltaThreshold;\n\n				if(excess > 0.0){\n					offset += (excess * smoothAmount * sign(delta)) * (1.0 - (dist / maxDist));\n					neighbourCount++;\n				}\n			}\n		}\n	}\n	offset = neighbourCount >= 1.0 ? (offset / neighbourCount) : 0.0;\n	return currentAttributeValue + offset;\n\n}";
