export default "const vec4 ditherVec0 = vec4(0.0,  8.0,  2.0,  10.0);\nconst vec4 ditherVec1 = vec4(12.0, 4.0,  14.0, 6.0);\nconst vec4 ditherVec2 = vec4(3.0,  11.0, 1.0,  9.0);\nconst vec4 ditherVec3 = vec4(15.0, 7.0,  13.0, 5.0);\nfloat vec4Component(vec4 v, int y){\n	if(y == 0){\n		return v.x;\n	} else if(y == 1){\n		return v.y;\n	} else if(y == 2){\n		return v.z;\n	}\n	return v.w;\n}\nfloat indexValue() {\n	int x = int(mod(gl_FragCoord.x, 4.0));\n	int y = int(mod(gl_FragCoord.y, 4.0));\n	if(x == 0){\n		return vec4Component(ditherVec0, y);\n	} else if(x == 1){\n		return vec4Component(ditherVec1, y);\n	} else if(x == 2){\n		return vec4Component(ditherVec2, y);\n	}\n	return vec4Component(ditherVec3, y);\n}\nfloat computeDither(float alpha, float alphaTest) {\n	float closestColor = (alpha < alphaTest) ? 0.0 : 1.0;\n	float secondClosestColor = 1.0 - closestColor;\n	float d = indexValue();\n	float distance = abs(closestColor - alpha);\n	return (distance < d) ? closestColor : secondClosestColor;\n}\nfloat dither(float alpha, float alphaTest) {\n	if( alpha <= 0.0 ){ discard; }\n	if( alpha < 1.0 ) { alpha = computeDither(alpha, alphaTest); }\n	if( alpha < 0.5 ) { discard; }\n	return alpha;\n}";
