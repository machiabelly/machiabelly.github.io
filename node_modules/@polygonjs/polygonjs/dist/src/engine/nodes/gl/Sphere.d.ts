/**
 * the function of a sphere
 *
 *
 *
 */
import { TypedGlNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { ShadersCollectionController } from './code/utils/ShadersCollectionController';
declare class SphereGlParamsConfig extends NodeParamsConfig {
    position: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    center: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    radius: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    feather: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class SphereGlNode extends TypedGlNode<SphereGlParamsConfig> {
    paramsConfig: SphereGlParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(shaders_collection_controller: ShadersCollectionController): void;
}
export {};
