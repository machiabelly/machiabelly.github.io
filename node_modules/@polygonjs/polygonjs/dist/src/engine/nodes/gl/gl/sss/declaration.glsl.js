export default "struct SSSModel {\n	bool isActive;\n	vec3 color;\n	float thickness;\n	float power;\n	float scale;\n	float distortion;\n	float ambient;\n	float attenuation;\n};\n\nvoid RE_Direct_Scattering(\n	const in IncidentLight directLight,\n	const in vec3 geometryNormal,\n	const in vec3 geometryViewDir,\n	const in SSSModel sssModel,\n	inout ReflectedLight reflectedLight\n	){\n	vec3 scatteringHalf = normalize(directLight.direction + (geometryNormal * sssModel.distortion));\n	float scatteringDot = pow(saturate(dot(geometryViewDir, -scatteringHalf)), sssModel.power) * sssModel.scale;\n	vec3 scatteringIllu = (scatteringDot + sssModel.ambient) * (sssModel.color * (1.0-sssModel.thickness));\n	reflectedLight.directDiffuse += scatteringIllu * sssModel.attenuation * directLight.color;\n}";
