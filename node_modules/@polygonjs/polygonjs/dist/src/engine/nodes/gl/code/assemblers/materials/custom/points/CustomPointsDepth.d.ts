import { DepthPackingStrategies } from 'three';
import { ShaderMaterial } from 'three';
import { ShaderAssemblerMaterial } from '../../_BaseMaterial';
import { ShaderName } from '../../../../../../utils/shaders/ShaderName';
export declare class ShaderAssemblerCustomPointsDepth extends ShaderAssemblerMaterial {
    templateShader(): {
        vertexShader: string;
        fragmentShader: string;
        uniforms: any;
    };
    protected insertDefineAfter(shader_name: ShaderName): string | undefined;
    protected insertBodyAfter(shader_name: ShaderName): string | undefined;
    protected depthPacking(): DepthPackingStrategies;
    createMaterial(): ShaderMaterial;
}
export declare class ShaderAssemblerCustomPointsDepthForRender extends ShaderAssemblerCustomPointsDepth {
    protected depthPacking(): 3200;
}
