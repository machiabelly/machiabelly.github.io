/**
 * forwards any input trigger
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsConnectionPointType } from '../utils/io/connections/Js';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class AnyTriggerJsParamsConfig extends NodeParamsConfig {
    /** @param audio node */
    condition: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class AnyTriggerJsNode extends TypedJsNode<AnyTriggerJsParamsConfig> {
    readonly paramsConfig: AnyTriggerJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    protected _expectedInputTypes(): any[];
    protected _expectedOutputTypes(): JsConnectionPointType[];
    protected _expectedInputName(index: number): string;
    protected _expectedOutputName(index: number): string;
    setTriggerableLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
