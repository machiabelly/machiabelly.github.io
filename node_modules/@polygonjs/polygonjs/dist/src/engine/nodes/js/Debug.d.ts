/**
 * displays the input value
 *
 *
 *
 */
import { JsConnectionPointType } from '../utils/io/connections/Js';
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class DebugJsParamsConfig extends NodeParamsConfig {
    displayValue: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    displayFrame: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    displayTime: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    displayNodePath: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    message: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    bundleByObject: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class DebugJsNode extends TypedJsNode<DebugJsParamsConfig> {
    readonly paramsConfig: DebugJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    protected _expectedInputTypes(): [JsConnectionPointType];
    protected _expectedInputName(index: number): string;
    protected _expectedOutputName(index: number): string;
    protected _expectedOutputTypes(): [JsConnectionPointType];
    setLines(linesController: JsLinesCollectionController): void;
    setTriggerableLines(linesController: JsLinesCollectionController): void;
    private _function;
}
export {};
