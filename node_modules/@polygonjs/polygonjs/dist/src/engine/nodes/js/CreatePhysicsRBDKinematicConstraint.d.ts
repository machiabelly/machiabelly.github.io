/**
 * Create an RBD constraint.
 *
 *
 */
import { BaseTriggerAndObjectJsNode } from './_BaseTriggerAndObject';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsConnectionPoint, JsConnectionPointType } from '../utils/io/connections/Js';
declare class CreatePhysicsRBDKinematicConstraintJsParamsConfig extends NodeParamsConfig {
    anchor: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
}
export declare class CreatePhysicsRBDKinematicConstraintJsNode extends BaseTriggerAndObjectJsNode<CreatePhysicsRBDKinematicConstraintJsParamsConfig> {
    readonly paramsConfig: CreatePhysicsRBDKinematicConstraintJsParamsConfig;
    static type(): string;
    protected _additionalOutputs(): JsConnectionPoint<JsConnectionPointType>[];
    setLines(linesController: JsLinesCollectionController): void;
    setTriggerableLines(linesController: JsLinesCollectionController): void;
    private _addRBDIdRef;
}
export {};
