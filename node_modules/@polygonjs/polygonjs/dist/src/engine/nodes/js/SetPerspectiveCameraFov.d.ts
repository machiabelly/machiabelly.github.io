/**
 * Update the camera fov
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class SetPerspectiveCameraFovJsParamsConfig extends NodeParamsConfig {
    /** @param focal length */
    fov: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param lerp factor */
    lerp: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param sets if the projection matrix should be updated as the animation progresses */
    updateProjectionMatrix: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class SetPerspectiveCameraFovJsNode extends TypedJsNode<SetPerspectiveCameraFovJsParamsConfig> {
    readonly paramsConfig: SetPerspectiveCameraFovJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(linesController: JsLinesCollectionController): void;
    setTriggerableLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
