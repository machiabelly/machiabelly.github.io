import { BaseJsNodeType } from './_Base';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { BooleanParam } from '../../params/Boolean';
import { FloatParam } from '../../params/Float';
import { IntegerParam } from '../../params/Integer';
import { StringParam } from '../../params/String';
import { Vector2Param } from '../../params/Vector2';
import { Vector3Param } from '../../params/Vector3';
import { Vector4Param } from '../../params/Vector4';
export declare function defaultObject(linesController: JsLinesCollectionController): string;
export declare function defaultPrimitiveGraph(linesController: JsLinesCollectionController): string;
export declare function inputObject3D(node: BaseJsNodeType, linesController: JsLinesCollectionController): string;
export declare function inputObject3DMaterial(node: BaseJsNodeType, linesController: JsLinesCollectionController): string;
export declare function inputPointIndex(node: BaseJsNodeType, linesController: JsLinesCollectionController): string;
export declare function setObject3DMaterialOutputLine(node: BaseJsNodeType, linesController: JsLinesCollectionController): void;
export declare function setObject3DOutputLine(node: BaseJsNodeType, linesController: JsLinesCollectionController): void;
export declare function inputParam(node: BaseJsNodeType, linesController: JsLinesCollectionController): string;
export declare function inputNode(jsNode: BaseJsNodeType, linesController: JsLinesCollectionController): string;
export declare function vector2OutputFromParam(node: BaseJsNodeType, param: Vector2Param, linesController: JsLinesCollectionController): void;
export declare function vector2OutputFromInput(node: BaseJsNodeType, inputName: string, linesController: JsLinesCollectionController): void;
export declare function vector3OutputFromParam(node: BaseJsNodeType, param: Vector3Param, linesController: JsLinesCollectionController): void;
export declare function vector3OutputFromInput(node: BaseJsNodeType, inputName: string, linesController: JsLinesCollectionController): void;
export declare function vector4OutputFromParam(node: BaseJsNodeType, param: Vector4Param, linesController: JsLinesCollectionController): void;
export declare function vector4OutputFromInput(node: BaseJsNodeType, inputName: string, linesController: JsLinesCollectionController): void;
export declare function floatOutputFromParam(node: BaseJsNodeType, param: FloatParam, linesController: JsLinesCollectionController): void;
export declare function floatOutputFromInput(node: BaseJsNodeType, inputName: string, linesController: JsLinesCollectionController): void;
export declare function integerOutputFromParam(node: BaseJsNodeType, param: IntegerParam, linesController: JsLinesCollectionController): void;
export declare function integerOutputFromInput(node: BaseJsNodeType, inputName: string, linesController: JsLinesCollectionController): void;
export declare function stringOutputFromParam(node: BaseJsNodeType, param: StringParam, linesController: JsLinesCollectionController): void;
export declare function stringOutputFromInput(node: BaseJsNodeType, inputName: string, linesController: JsLinesCollectionController): void;
export declare function booleanOutputFromParam(node: BaseJsNodeType, param: BooleanParam, linesController: JsLinesCollectionController): void;
export declare function anyTypeOutputFromInput(node: BaseJsNodeType, inputName: string, linesController: JsLinesCollectionController): void;
