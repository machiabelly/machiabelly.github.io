/**
 * Update a point attribute
 *
 *
 */
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
import { JsType } from '../../poly/registers/nodes/types/Js';
import { PointAttributeJsType } from '../utils/io/connections/Js';
import { TypedJsNode } from './_Base';
export declare enum SetPointAttributeInputName {
    ptnum = "ptnum",
    attribName = "attribName",
    lerp = "lerp",
    val = "val"
}
declare class SetPointAttributeJsParamsConfig extends NodeParamsConfig {
    /** @param attribute type */
    type: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param attribName */
    attribName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param point index */
    ptnum: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param lerp factor */
    lerp: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class SetPointAttributeJsNode extends TypedJsNode<SetPointAttributeJsParamsConfig> {
    readonly paramsConfig: SetPointAttributeJsParamsConfig;
    static type(): JsType;
    initializeNode(): void;
    private _expectedInputType;
    private _expectedOutputTypes;
    private _expectedInputName;
    private _expectedOutputName;
    private _currentConnectionType;
    setAttribType(type: PointAttributeJsType): void;
    setAttribName(attribName: string): void;
    setLines(linesController: JsLinesCollectionController): void;
    setTriggerableLines(linesController: JsLinesCollectionController): void;
    private _functionName;
}
export {};
