/**
 * converts a float to a vector3
 *
 *
 */
import { TypedJsNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { JsLinesCollectionController } from './code/utils/JsLinesCollectionController';
declare class IntToBoolJsParamsConfig extends NodeParamsConfig {
    int: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class IntToBoolJsNode extends TypedJsNode<IntToBoolJsParamsConfig> {
    paramsConfig: IntToBoolJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
declare class BoolToIntJsParamsConfig extends NodeParamsConfig {
    bool: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class BoolToIntJsNode extends TypedJsNode<BoolToIntJsParamsConfig> {
    paramsConfig: BoolToIntJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
declare class IntToFloatJsParamsConfig extends NodeParamsConfig {
    int: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class IntToFloatJsNode extends TypedJsNode<IntToFloatJsParamsConfig> {
    paramsConfig: IntToFloatJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
declare class FloatToIntJsParamsConfig extends NodeParamsConfig {
    float: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class FloatToIntJsNode extends TypedJsNode<FloatToIntJsParamsConfig> {
    paramsConfig: FloatToIntJsParamsConfig;
    static type(): string;
    initializeNode(): void;
    setLines(shadersCollectionController: JsLinesCollectionController): void;
}
export {};
