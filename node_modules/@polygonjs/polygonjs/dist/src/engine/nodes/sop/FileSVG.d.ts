import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopTypeFile } from '../../poly/registers/nodes/types/Sop';
declare class FileSVGSopParamsConfig extends NodeParamsConfig {
    /** @param url to load the geometry from */
    url: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param reload the geometry */
    reload: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BUTTON>;
    /** @param toggle on to draw the fillShapes */
    drawFillShapes: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param toggle on to draw the fillShapes as wireframe */
    fillShapesWireframe: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param toggle on to draw the strokes */
    drawStrokes: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param toggle on to draw the strokes as wireframe */
    strokesWireframe: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param style override */
    tStyleOverride: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param stroke width */
    strokeWidth: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param advanced */
    tadvanced: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param is counter clock wise: defines the vertex order when parsing the font */
    isCCW: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class FileSVGSopNode extends TypedSopNode<FileSVGSopParamsConfig> {
    paramsConfig: FileSVGSopParamsConfig;
    static type(): SopTypeFile;
    dispose(): void;
    private _operation;
    cook(inputCoreGroups: CoreGroup[]): Promise<void>;
    static PARAM_CALLBACK_reload(node: FileSVGSopNode): void;
    private param_callback_reload;
}
export {};
