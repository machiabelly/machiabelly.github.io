/**
 * Caches the input geometry.
 *
 * @remarks
 * The cache node can be very handy when the input geometry takes a long time to compute and does not need to be updated frequently.
 *
 */
import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { BaseParamType } from '../../params/_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CacheSopParamsConfig extends NodeParamsConfig {
    /** @param content of the cache (hidden) */
    cache: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param clears the cache */
    reset: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BUTTON>;
}
export declare class CacheSopNode extends TypedSopNode<CacheSopParamsConfig> {
    paramsConfig: CacheSopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
    static PARAM_CALLBACK_reset(node: CacheSopNode, param: BaseParamType): void;
    param_callback_PARAM_CALLBACK_reset(): Promise<void>;
}
export {};
