/**
 * Deletes an attribute from the input
 *
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { AttribClass } from '../../../core/geometry/Constant';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class AttribDeleteSopParamsConfig extends NodeParamsConfig {
    /** @param the group this applies to */
    group: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param attribute class (geometry or object) */
    class: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param attribute name to delete */
    name: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class AttribDeleteSopNode extends TypedSopNode<AttribDeleteSopParamsConfig> {
    paramsConfig: AttribDeleteSopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    setAttribClass(attribClass: AttribClass): void;
    attribClass(): AttribClass;
    private _operation;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
