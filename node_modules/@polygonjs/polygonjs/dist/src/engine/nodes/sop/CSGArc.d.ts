/**
 * Creates a CSG arc.
 *
 *
 */
import { CSGSopNode } from './_BaseCSG';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CSGArcSopParamsConfig extends NodeParamsConfig {
    /** @param radius */
    radius: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param segments */
    segments: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param center */
    center: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
    /** @param make tangents */
    makeTangent: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param start angle */
    startAngle: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param end angle */
    endAngle: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class CSGArcSopNode extends CSGSopNode<CSGArcSopParamsConfig> {
    paramsConfig: CSGArcSopParamsConfig;
    static type(): SopType;
    private _center;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
