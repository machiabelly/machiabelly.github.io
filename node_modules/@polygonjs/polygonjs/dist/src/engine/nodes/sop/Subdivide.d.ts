/**
 * Subdivides a geometry
 *
 *
 */
import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class SubdivideSopParamsConfig extends NodeParamsConfig {
    /** @param number of subdivisions */
    subdivisions: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param merge vertices */
    mergeVertices: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class SubdivideSopNode extends TypedSopNode<SubdivideSopParamsConfig> {
    paramsConfig: SubdivideSopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    private _operation;
    cook(input_contents: CoreGroup[]): void;
}
export {};
