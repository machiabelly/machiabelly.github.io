/**
 * Creates a quad plane.
 *
 *
 */
import { QuadSopNode } from './_BaseQuad';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class QuadrangulateSopParamsConfig extends NodeParamsConfig {
    /** @param quadsCount */
    /** @param regular */
    regular: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param test */
    granular: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param irregularAmount */
    irregularAmount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param subdivide */
    subdivide: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param seed */
    seed: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class QuadrangulateSopNode extends QuadSopNode<QuadrangulateSopParamsConfig> {
    paramsConfig: QuadrangulateSopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
    private _processGeometry;
}
export {};
