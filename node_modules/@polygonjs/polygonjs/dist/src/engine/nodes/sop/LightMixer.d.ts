/**
 * Mixes the input lights
 *
 * @remarks
 * Note that if the input lights have helpers, those will not update to reflect correctly the new light color and intensity. Only the actual lighting on the scene will be as expected.
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { ParamType } from '../../poly/ParamType';
declare class LightMixerParamsConfig extends NodeParamsConfig {
    /** @param size of the box */
    setup: import("../utils/params/ParamsConfig").ParamTemplate<ParamType.BUTTON>;
}
export declare class LightMixerSopNode extends TypedSopNode<LightMixerParamsConfig> {
    readonly paramsConfig: LightMixerParamsConfig;
    static type(): string;
    protected initializeNode(): void;
    private _lightsByName;
    cook(inputCoreGroups: CoreGroup[]): void;
    private _findLights;
    static PARAM_CALLBACK_setup(node: LightMixerSopNode): void;
    private _paramCallbackSetup;
}
export {};
