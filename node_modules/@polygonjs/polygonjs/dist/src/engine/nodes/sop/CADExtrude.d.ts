/**
 * extrudes CAD primitives
 *
 *
 */
import { CADSopNode } from './_BaseCAD';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CADExtrudeSopParamsConfig extends NodeParamsConfig {
    /** @param direction */
    dir: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param height */
    height: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param create caps */
    cap: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param convert caps to faces */
    capsAsFaces: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class CADExtrudeSopNode extends CADSopNode<CADExtrudeSopParamsConfig> {
    paramsConfig: CADExtrudeSopParamsConfig;
    static type(): SopType;
    protected initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
    private _processObject;
    private _processVertexObject;
    private _processEdgeObject;
    private _processWireObject;
    private _processWire;
    private _processFaceObject;
    private _processFace;
    private _processShellObject;
}
export {};
