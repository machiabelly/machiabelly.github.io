/**
 * Adds attribute containing information about connected points.
 *
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class AdjacencySopParamsConfig extends NodeParamsConfig {
    /** @param select which objects this add adjacency attributes to */
    group: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param name of attribute with count of adjacency attributes */
    adjacencyCountName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param name of adjacency attribute */
    adjacencyBaseName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class AdjacencySopNode extends TypedSopNode<AdjacencySopParamsConfig> {
    paramsConfig: AdjacencySopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    private _operation;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
