import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
declare class FaceSopParamsConfig extends NodeParamsConfig {
    /** @param makes faces unique */
    makeFacesUnique: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param adds a vector3 attribute that represents the center of a face */
    addFaceCenterAttribute: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param add an id attribute for each face */
    addFaceId: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param allows to transform each face */
    transform: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param scales the faces indepedently */
    scale: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class FaceSopNode extends TypedSopNode<FaceSopParamsConfig> {
    paramsConfig: FaceSopParamsConfig;
    static type(): string;
    initializeNode(): void;
    private _face;
    private _points;
    cook(input_contents: CoreGroup[]): void;
    private _makeFacesUnique;
    private _addFaceCenterAttribute;
    private _addFaceId;
    private _transformFaces;
}
export {};
