/**
 * Creates an area light.
 *
 * @remarks
 * This is very similar to the [object level AreaLight](https://polygonjs.com/docs/nodes/obj/AreaLight), but can be more useful if you want to instanciate it or process it using other SOP nodes.
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { LightType } from '../../poly/registers/nodes/types/Light';
declare const AreaLightSopParamsConfig_base: {
    new (...args: any[]): {
        light: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FOLDER>;
        color: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.COLOR>;
        intensity: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        width: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        height: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
        showHelper: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
        name: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    };
} & typeof NodeParamsConfig;
declare class AreaLightSopParamsConfig extends AreaLightSopParamsConfig_base {
}
export declare class AreaLightSopNode extends TypedSopNode<AreaLightSopParamsConfig> {
    paramsConfig: AreaLightSopParamsConfig;
    static type(): LightType;
    initializeNode(): void;
    private _operation;
    cook(input_contents: CoreGroup[]): void;
}
export {};
