/**
 * sets the controls used by the camera
 *
 *
 */
import { TypedSopNode } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { HierarchyParamConfigAll } from '../utils/params/ParamsConfig';
import { CameraSopNodeType } from '../../poly/NodeContext';
declare const CameraFrameModeSopParamsConfig_base: {
    new (...args: any[]): {
        frameMode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
        expectedAspectRatio: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    };
} & typeof HierarchyParamConfigAll;
declare class CameraFrameModeSopParamsConfig extends CameraFrameModeSopParamsConfig_base {
}
export declare class CameraFrameModeSopNode extends TypedSopNode<CameraFrameModeSopParamsConfig> {
    readonly paramsConfig: CameraFrameModeSopParamsConfig;
    static type(): CameraSopNodeType;
    protected initializeNode(): void;
    private _operation;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
