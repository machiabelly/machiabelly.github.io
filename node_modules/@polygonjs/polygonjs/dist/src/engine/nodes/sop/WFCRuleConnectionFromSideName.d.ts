/**
 * creates rules used by the WFCSolver
 *
 *
 */
import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class WFCRuleConnectionFromSideNameSopParamsConfig extends NodeParamsConfig {
    /** @param src tile id */
    srcTileId: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param dest tile id */
    destTileId: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
    /** @param side name */
    sideName: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.STRING>;
}
export declare class WFCRuleConnectionFromSideNameSopNode extends TypedSopNode<WFCRuleConnectionFromSideNameSopParamsConfig> {
    paramsConfig: WFCRuleConnectionFromSideNameSopParamsConfig;
    static type(): SopType;
    initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): Promise<void>;
}
export {};
