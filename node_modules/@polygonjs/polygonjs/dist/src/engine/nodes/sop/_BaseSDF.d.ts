import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TypedSopNode } from './_Base';
import { SDFGeometry } from '../../../core/geometry/modules/sdf/SDFCommon';
import { SDFObject } from '../../../core/geometry/modules/sdf/SDFObject';
import { ModuleName } from '../../poly/registers/modules/Common';
export declare class SDFSopNode<K extends NodeParamsConfig> extends TypedSopNode<K> {
    dataType(): string;
    requiredModules(): ModuleName[];
    setSDFGeometry(geometry: SDFGeometry): void;
    setSDFObjects(objects: SDFObject[]): void;
    protected _setContainerSDFObjects(objects: SDFObject[]): void;
}
export type BaseSDFSopNodeType = SDFSopNode<NodeParamsConfig>;
export declare class BaseSDFSopNodeClass extends SDFSopNode<NodeParamsConfig> {
}
