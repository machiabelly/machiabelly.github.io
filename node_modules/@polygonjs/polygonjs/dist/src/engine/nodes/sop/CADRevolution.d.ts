/**
 * Applies a CAD revolution operation
 *
 *
 */
import { CADSopNode } from './_BaseCAD';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CADRevolutionSopParamsConfig extends NodeParamsConfig {
    /** @param axis */
    axis: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param closed */
    closed: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param thetaMin */
    /** @param thetaMax */
    /** @param phi */
    phi: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
}
export declare class CADRevolutionSopNode extends CADSopNode<CADRevolutionSopParamsConfig> {
    paramsConfig: CADRevolutionSopParamsConfig;
    static type(): SopType;
    protected initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
