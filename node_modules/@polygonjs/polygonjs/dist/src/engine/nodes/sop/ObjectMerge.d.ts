/**
 * Imports an object from another geometry OBJ node.
 *
 * @remarks
 * It can still be used to keep a copy of the input geometry, in case downstream nodes were to process it without cloning.
 *
 */
import { TypedSopNode, BaseSopNodeType } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { GeometryContainer } from '../../containers/Geometry';
declare class ObjectMergeSopParamsConfig extends NodeParamsConfig {
    /** @param which SOP node to import from */
    geometry: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.NODE_PATH>;
}
export declare class ObjectMergeSopNode extends TypedSopNode<ObjectMergeSopParamsConfig> {
    paramsConfig: ObjectMergeSopParamsConfig;
    static type(): string;
    cook(input_containers: CoreGroup[]): Promise<void>;
    importInput(geometry_node: BaseSopNodeType, container: GeometryContainer): void;
}
export {};
