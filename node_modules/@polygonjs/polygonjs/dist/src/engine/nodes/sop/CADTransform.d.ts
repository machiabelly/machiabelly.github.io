/**
 * Transform input CAD geometries or objects.
 *
 *
 *
 */
import { CADSopNode } from './_BaseCAD';
import { CoreGroup } from '../../../core/geometry/Group';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class CADTransformSopParamConfig extends NodeParamsConfig {
    /** @param translate */
    t: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param rotation */
    r: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param scale (as a float) */
    s: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param pivot */
    pivot: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
}
export declare class CADTransformSopNode extends CADSopNode<CADTransformSopParamConfig> {
    paramsConfig: CADTransformSopParamConfig;
    static type(): SopType;
    initializeNode(): void;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
