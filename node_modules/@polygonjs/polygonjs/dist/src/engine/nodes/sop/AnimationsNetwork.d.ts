/**
 * A subnet to create animation nodes
 *
 */
import { ParamLessBaseNetworkSopNode } from './_BaseManager';
import { NodeContext, NetworkNodeType } from '../../poly/NodeContext';
import { AnimNodeChildrenMap } from '../../poly/registers/nodes/Anim';
import { BaseAnimNodeType } from '../anim/_Base';
import { Constructor, valueof } from '../../../types/GlobalTypes';
import { NodeCreateOptions } from '../utils/hierarchy/ChildrenController';
export declare class AnimationsNetworkSopNode extends ParamLessBaseNetworkSopNode {
    static type(): NetworkNodeType;
    protected _childrenControllerContext: NodeContext;
    createNode<S extends keyof AnimNodeChildrenMap>(node_class: S, options?: NodeCreateOptions): AnimNodeChildrenMap[S];
    createNode<K extends valueof<AnimNodeChildrenMap>>(node_class: Constructor<K>, options?: NodeCreateOptions): K;
    children(): BaseAnimNodeType[];
    nodesByType<K extends keyof AnimNodeChildrenMap>(type: K): AnimNodeChildrenMap[K][];
}
