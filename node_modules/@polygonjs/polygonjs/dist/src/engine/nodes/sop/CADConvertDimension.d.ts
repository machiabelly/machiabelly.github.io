/**
 * converts points and curves from 2D to 3D and vice-versa
 *
 *
 */
import { CADSopNode } from './_BaseCAD';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
export declare enum ConversionMode {
    TO_2D = "to 2D",
    TO_3D = "to 3D"
}
export declare const CONVERSION_MODES: ConversionMode[];
declare class CADConvertDimensionSopParamsConfig extends NodeParamsConfig {
    /** @param mode */
    mode: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
}
export declare class CADConvertDimensionSopNode extends CADSopNode<CADConvertDimensionSopParamsConfig> {
    paramsConfig: CADConvertDimensionSopParamsConfig;
    static type(): SopType;
    protected initializeNode(): void;
    setMode(mode: ConversionMode): void;
    cook(inputCoreGroups: CoreGroup[]): void;
}
export {};
