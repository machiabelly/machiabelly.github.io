/**
 * Creates a quad plane.
 *
 *
 */
import { QuadSopNode } from './_BaseQuad';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { CoreGroup } from '../../../core/geometry/Group';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class QuadPlaneSopParamsConfig extends NodeParamsConfig {
    /** @param sizes */
    size: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
    /** @param defines if the plane resolution is sets via the number of segments or via the step size */
    useSegmentsCount: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param step size */
    stepSize: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param segments count */
    segments: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR2>;
    /** @param axis perpendicular to the plane */
    direction: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
    /** @param center of the plane */
    center: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
}
export declare class QuadPlaneSopNode extends QuadSopNode<QuadPlaneSopParamsConfig> {
    paramsConfig: QuadPlaneSopParamsConfig;
    static type(): SopType;
    cook(inputCoreGroups: CoreGroup[]): void;
    private _createWithStepSize;
    private _createWithSegmentsCount;
    private _createQuadPlane;
}
export {};
