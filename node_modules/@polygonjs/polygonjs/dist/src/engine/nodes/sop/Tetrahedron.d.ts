/**
 * Creates a tetrahedron
 *
 *
 *
 */
import { TypedSopNode } from './_Base';
import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { SopType } from '../../poly/registers/nodes/types/Sop';
declare class TetrahedronSopParamsConfig extends NodeParamsConfig {
    /** @param radius of the tetrahedron */
    radius: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.FLOAT>;
    /** @param resolution of the tetrahedron */
    detail: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param sets to create only points */
    pointsOnly: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param center of the tetrahedron */
    center: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.VECTOR3>;
}
export declare class TetrahedronSopNode extends TypedSopNode<TetrahedronSopParamsConfig> {
    paramsConfig: TetrahedronSopParamsConfig;
    static type(): SopType;
    cook(): void;
}
export {};
