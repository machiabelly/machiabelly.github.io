import { NodeParamsConfig } from '../utils/params/ParamsConfig';
import { TypedInputEventNode } from './_BaseInput';
import { EventContext } from '../../scene/utils/events/_BaseEventsController';
import { EventInputType } from '../../poly/registers/nodes/types/Event';
declare class DragEventParamsConfig extends NodeParamsConfig {
    /** @param toggle on to allow any event to be listened to */
    active: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param set which element triggers the event */
    element: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.INTEGER>;
    /** @param toggle on to listen to dragover events */
    dragover: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param requires ctrlKey */
    ctrlKey: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param requires altKey */
    altKey: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param requires shiftKey */
    shiftKey: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
    /** @param requires metaKey */
    metaKey: import("../utils/params/ParamsConfig").ParamTemplate<import("../../index_all").ParamType.BOOLEAN>;
}
export declare class DragEventNode extends TypedInputEventNode<DragEventParamsConfig> {
    paramsConfig: DragEventParamsConfig;
    static type(): EventInputType;
    protected acceptedEventTypes(): Set<import("../../../core/event/DragEventType").DragEventType>;
    initializeNode(): void;
    processEvent(eventContext: EventContext<DragEvent>): void;
}
export {};
