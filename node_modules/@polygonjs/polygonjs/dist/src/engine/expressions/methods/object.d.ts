/**
 * Returns the value of an object attribute
 *
 * @remarks
 * It takes 3 arguments.
 *
 * `object(input_index_or_node_path, attrib_name, object_index)`
 *
 * - `input_index_or_node_path` is a number or a string
 * - `attrib_name` is a string, the name of the attribute
 * - `object_index` index of the object to fetch
 *
 * ## Usage
 *
 * - `object(0, 'pscale', 0)` - returns the pscale attribute value of the first object of the first input
 *
 */
import { BaseMethodFindDependencyArgs } from './_Base';
import { BaseMethod } from './_Base';
import { MethodDependency } from '../MethodDependency';
import { GeometryContainer } from '../../containers/Geometry';
export declare class ObjectExpression extends BaseMethod {
    static requiredArguments(): string[][];
    findDependency(args: BaseMethodFindDependencyArgs): MethodDependency | null;
    processArguments(args: any[]): Promise<any>;
    _get_value_from_container(container: GeometryContainer, attrib_name: string, point_index: number): string | number | boolean | import("../../index_all").Number3 | import("../../index_all").Number2 | import("../../../types/GlobalTypes").Vector2Like | import("../../../types/GlobalTypes").ColorLike | import("../../index_all").Number4 | null | undefined;
}
