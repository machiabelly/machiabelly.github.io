import { BaseSopOperation } from './_Base';
import { CoreGroup } from '../../../core/geometry/Group';
import { InputCloneMode } from '../../../engine/poly/InputCloneMode';
import { DefaultOperationParams } from '../../../core/operations/_Base';
interface HierarchySopParams extends DefaultOperationParams {
    mode: number;
    levels: number;
    objectMask: string;
    addChildMode: number;
}
export declare enum HierarchyMode {
    ADD_PARENT = "add parent",
    REMOVE_PARENT = "remove parent",
    ADD_CHILD = "add child"
}
export declare const HIERARCHY_MODES: Array<HierarchyMode>;
export declare enum AddChildMode {
    ONE_CHILD_PER_PARENT = "one child per parent",
    ALL_CHILDREN_UNDER_FIRST_PARENT = "all children under first parent",
    ALL_CHILDREN_UNDER_ALL_PARENTS = "all children under all parents"
}
export declare const ADD_CHILD_MODES: Array<AddChildMode>;
export declare class HierarchySopOperation extends BaseSopOperation {
    static readonly DEFAULT_PARAMS: HierarchySopParams;
    static readonly INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;
    static type(): Readonly<'hierarchy'>;
    cook(inputCoreGroups: CoreGroup[], params: HierarchySopParams): CoreGroup;
}
export {};
