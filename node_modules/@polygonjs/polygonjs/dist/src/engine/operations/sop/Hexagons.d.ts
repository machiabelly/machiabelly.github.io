import { BaseSopOperation } from './_Base';
import { Vector2, Vector3 } from 'three';
import { CoreGroup } from '../../../core/geometry/Group';
import { InputCloneMode } from '../../poly/InputCloneMode';
import { DefaultOperationParams } from '../../../core/operations/_Base';
interface HexagonsSopParams extends DefaultOperationParams {
    size: Vector2;
    hexagonRadius: number;
    direction: Vector3;
    pointsOnly: boolean;
}
export declare class HexagonsSopOperation extends BaseSopOperation {
    static readonly DEFAULT_PARAMS: HexagonsSopParams;
    static readonly INPUT_CLONED_STATE = InputCloneMode.NEVER;
    static type(): Readonly<'hexagons'>;
    cook(inputCoreGroups: CoreGroup[], params: HexagonsSopParams): CoreGroup;
    private _cookWithoutInput;
    private _cookWithInput;
    private _createHexagonsObjects;
    private _createHexagons;
}
export {};
