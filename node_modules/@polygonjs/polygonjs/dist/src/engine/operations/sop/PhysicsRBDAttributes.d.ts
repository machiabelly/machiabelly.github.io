import { BaseSopOperation } from './_Base';
import { InputCloneMode } from '../../../engine/poly/InputCloneMode';
import { DefaultOperationParams } from '../../../core/operations/_Base';
import { Vector3 } from 'three';
export declare enum SizeComputationMethod {
    AUTO = "auto",
    MANUAL = "manual"
}
export declare const SIZE_COMPUTATION_METHODS: SizeComputationMethod[];
export declare const SIZE_COMPUTATION_METHOD_MENU_ENTRIES: {
    name: SizeComputationMethod;
    value: number;
}[];
interface PhysicsRBDAttributesSopParams extends DefaultOperationParams {
    RBDType: number;
    colliderType: number;
    taddId: boolean;
    id: string;
    sizeMethod: number;
    borderRadius: number;
    sizes: Vector3;
    size: number;
    radius: number;
    height: number;
    rows: number;
    cols: number;
    density: number;
    friction: number;
    restitution: number;
    linearDamping: number;
    angularDamping: number;
    linearVelocity: Vector3;
    angularVelocity: Vector3;
    gravityScale: number;
    canSleep: boolean;
}
export declare class PhysicsRBDAttributesSopOperation extends BaseSopOperation {
    static readonly DEFAULT_PARAMS: PhysicsRBDAttributesSopParams;
    static readonly INPUT_CLONED_STATE = InputCloneMode.FROM_NODE;
    static type(): Readonly<'physicsRBDAttributes'>;
}
export {};
