import { DefaultOperationParams } from '../../../core/operations/_Base';
import { GLTFLoaderHandler } from '../../../core/loader/geometry/GLTF';
import { SopTypeFile } from '../../poly/registers/nodes/types/Sop';
import { BaseFileSopOperation, BaseFileSopParams } from './utils/File/_BaseFileOperation';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
interface FileGLTFSopParams extends DefaultOperationParams {
    url: string;
    draco: boolean;
    ktx2: boolean;
    matrixAutoUpdate: boolean;
}
export declare class FileGLTFSopOperation extends BaseFileSopOperation<GLTF> {
    static readonly DEFAULT_PARAMS: FileGLTFSopParams;
    static type(): Readonly<SopTypeFile.FILE_GLTF>;
    protected _createGeoLoaderHandler(params: BaseFileSopParams): GLTFLoaderHandler;
    protected _load(loader: GLTFLoaderHandler, params: FileGLTFSopParams): Promise<import("three").Object3D<import("three").Object3DEventMap>[] | undefined>;
}
export {};
