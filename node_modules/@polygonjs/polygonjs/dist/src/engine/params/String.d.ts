import { ParamType } from '../poly/ParamType';
import { ParamInitValuesTypeMap } from './types/ParamInitValuesTypeMap';
import { ParamValuesTypeMap } from './types/ParamValuesTypeMap';
import { TypedStringParam } from './_BaseString';
export declare class StringParam extends TypedStringParam<ParamType.STRING> {
    static type(): ParamType;
    defaultValueSerialized(): string;
    protected _cloneRawInput(raw_input: ParamInitValuesTypeMap[ParamType.STRING]): string;
    rawInputSerialized(): string;
    valueSerialized(): string;
    protected _copyValue(param: StringParam): void;
    static areRawInputEqual(raw_input1: ParamInitValuesTypeMap[ParamType.STRING], raw_input2: ParamInitValuesTypeMap[ParamType.STRING]): boolean;
    static areValuesEqual(val1: ParamValuesTypeMap[ParamType.STRING], val2: ParamValuesTypeMap[ParamType.STRING]): boolean;
    isDefault(): boolean;
    convert(rawVal: any): string;
    rawInput(): string;
    protected _assignValue(value: string): void;
    protected processRawInputWithoutExpression(): Promise<void>;
}
