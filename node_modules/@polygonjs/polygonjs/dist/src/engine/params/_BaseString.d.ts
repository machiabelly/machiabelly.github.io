import { ParamValuesTypeMap } from './types/ParamValuesTypeMap';
import { TypedParam } from './_Base';
import { ParamType } from '../poly/ParamType';
export declare abstract class TypedStringParam<T extends ParamType.STRING | ParamType.NODE_PATH | ParamType.PARAM_PATH> extends TypedParam<T> {
    protected abstract _assignValue(value: ParamValuesTypeMap[T] | string): void;
    expressionParsedAsString(): boolean;
    protected processRawInput(): void;
    protected abstract processRawInputWithoutExpression(): void;
    protected processComputation(): Promise<void>;
}
