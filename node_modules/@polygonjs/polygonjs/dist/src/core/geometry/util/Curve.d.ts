import { BaseCorePoint } from '../entities/point/CorePoint';
import { BufferGeometry, TypedArray } from 'three';
import { PolyDictionary } from '../../../types/GlobalTypes';
import { CoreObjectType, ObjectContent } from '../ObjectContent';
export declare class CoreGeometryUtilCurve {
    static accumulatedCurvePointIndices(indices: TypedArray): number[][];
    static create_line_segment_geometry(points: BaseCorePoint[], indices: number[], attrib_names: string[], attrib_sizes_by_name: PolyDictionary<number>): BufferGeometry<import("three").NormalBufferAttributes>;
    static line_segment_to_geometries<T extends CoreObjectType>(object: ObjectContent<T>): BufferGeometry<import("three").NormalBufferAttributes>[] | undefined;
}
