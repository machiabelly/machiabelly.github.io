"use strict";
import { CadGeometryType, CAD_GEOMETRY_TYPES_SET, CAD_GEOMETRY_TYPES_SET_SHAPE } from "./CadCommon";
import { CoreType } from "../../../Type";
export function isCADObject(o) {
  return CAD_GEOMETRY_TYPES_SET.has(o.type);
}
export class CoreCadType {
  static isPoint2d(object) {
    return object.type == CadGeometryType.POINT_2D;
  }
  static isGeom2dCurve(object) {
    return object.type == CadGeometryType.CURVE_2D;
  }
  static isVertex(object) {
    return object.type == CadGeometryType.VERTEX;
  }
  static isEdge(object) {
    return object.type == CadGeometryType.EDGE;
  }
  static isWire(object) {
    return object.type == CadGeometryType.WIRE;
  }
  static isFace(object) {
    return object.type == CadGeometryType.FACE;
  }
  static isShell(object) {
    return object.type == CadGeometryType.SHELL;
  }
  static isSolid(object) {
    return object.type == CadGeometryType.SOLID;
  }
  static isCompsolid(object) {
    return object.type == CadGeometryType.COMPSOLID;
  }
  static isCompound(object) {
    return object.type == CadGeometryType.COMPOUND;
  }
  static isShape(object) {
    return CAD_GEOMETRY_TYPES_SET_SHAPE.has(object.type);
  }
  static isGeometryShape(geometry) {
    return CoreType.isFunction(geometry.ShapeType);
  }
}
