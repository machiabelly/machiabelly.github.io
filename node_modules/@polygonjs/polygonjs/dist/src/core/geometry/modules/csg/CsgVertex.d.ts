import { Vector3 } from 'three';
import { CoreVertex } from '../../entities/vertex/CoreVertex';
import { CoreObjectType, ObjectContent } from '../../ObjectContent';
import { VertexAttributesDict } from '../../entities/vertex/Common';
import { CsgObject } from './CsgObject';
import { CsgGeometryType } from './CsgCommon';
export declare class CsgVertex<T extends CsgGeometryType> extends CoreVertex<CoreObjectType.CSG> {
    constructor(object: CsgObject<T>, index: number);
    geometry(): undefined;
    static attributes<T extends CoreObjectType>(object: ObjectContent<T>): VertexAttributesDict | undefined;
    static entitiesCount<T extends CoreObjectType>(object: ObjectContent<T>): number;
    position(target: Vector3): Vector3;
    normal(target: Vector3): Vector3;
}
