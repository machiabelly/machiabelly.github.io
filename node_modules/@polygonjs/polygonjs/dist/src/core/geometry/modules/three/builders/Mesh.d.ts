import { BufferGeometry } from 'three';
import { CoreGeometryBuilderBase } from './_Base';
import { BaseCorePoint } from '../../../entities/point/CorePoint';
import { PolyDictionary } from '../../../../../types/GlobalTypes';
import { CoreObjectType, ObjectBuilder } from '../../../ObjectContent';
export declare class CoreGeometryBuilderMesh extends CoreGeometryBuilderBase {
    protected _filterPoints(points: BaseCorePoint[]): BaseCorePoint[];
    protected _indicesFromPoints(new_index_by_old_index: PolyDictionary<number>, old_geometry: BufferGeometry): number[] | undefined;
}
export declare const threeMeshFromPrimitives: ObjectBuilder<CoreObjectType.THREEJS>;
