"use strict";
import { watch } from "@vue-reactivity/watch";
import { ThreejsCoreObject } from "./ThreejsCoreObject";
export class CoreObjectHelper {
  constructor(options) {
    this.options = options;
    this._watchStopHandles = [];
    this.object = options.object;
  }
  dispose() {
    for (const watchStopHandle of this._watchStopHandles) {
      watchStopHandle();
    }
  }
  onAttributeUpdate(attribName, attribType, defaultValue, callback) {
    const attributeRef = ThreejsCoreObject.attributeRef(this.object, attribName, attribType, defaultValue);
    if (attributeRef == null) {
      console.error(`attrib not found:'${attribName}'`);
      return;
    }
    const watchStopHandle = watch(attributeRef.current, callback);
    this._watchStopHandles.push(watchStopHandle);
  }
}
export async function objectFromNode(node, objectName, creatFunction) {
  const container = await node.compute();
  const coreGroup = container.coreContent();
  if (!coreGroup) {
    console.error("no core group");
    console.log(node.states.error.message());
    return;
  }
  const objects = coreGroup.threejsObjects();
  const object = objects.find((o) => o.name == objectName);
  if (!object) {
    console.error("no click target");
    return;
  }
  return creatFunction({ object });
}
