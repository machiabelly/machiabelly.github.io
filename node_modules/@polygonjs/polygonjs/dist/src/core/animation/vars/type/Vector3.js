"use strict";
import { Vector3 } from "three";
import { Poly } from "../../../../engine/Poly";
import { NodeParamProxiesRegister } from "../../NodeParamProxiesRegister";
import { animBuilderCommonVars } from "../Common";
import { animBuilderStartTimeline } from "../StartTimeline";
import { AnimBuilderWithOp } from "../WithOp";
export function populateVarsForParamVector3(param, targetValue, options) {
  if (!(targetValue instanceof Vector3)) {
    Poly.warn(
      `TimelineBuilderProperty error: cannot animate vector3 param '${param.path()}' with targetValue`,
      targetValue
    );
    return;
  }
  const proxy = NodeParamProxiesRegister.paramProxy(param);
  if (!proxy) {
    return;
  }
  const vars = animBuilderCommonVars(options.timelineBuilder);
  vars.onUpdate = () => {
    proxy.update();
  };
  const operation = options.timelineBuilder.operation();
  vars.x = AnimBuilderWithOp(param.value.x, targetValue.x, operation);
  vars.y = AnimBuilderWithOp(param.value.y, targetValue.y, operation);
  vars.z = AnimBuilderWithOp(param.value.z, targetValue.z, operation);
  animBuilderStartTimeline({ ...options, vars, target: proxy.proxyValue, registerableProp: param });
}
