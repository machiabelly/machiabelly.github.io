import { Object3D } from 'three';
import { SoftBodyController } from './SoftBodyController';
import type { PolyScene } from '../../engine/scene/PolyScene';
import type { TetSoftBodySolverSopNode } from '../../engine/nodes/sop/TetSoftBodySolver';
import { SoftBody } from './SoftBody';
import { TetEmbed } from './Common';
interface CreateOrFindSoftBodyControllerOptions {
    tetEmbed: TetEmbed;
    threejsObjectInSceneTree: Object3D;
}
export declare function createOrFindSoftBodyController(scene: PolyScene, node: TetSoftBodySolverSopNode, options: CreateOrFindSoftBodyControllerOptions): {
    controller: SoftBodyController;
};
export declare function createOrFindSoftBody(node: TetSoftBodySolverSopNode, tetEmbed: TetEmbed): {
    softBody: SoftBody;
};
export declare function softBodyControllerNodeIdFromObject(softBodyObject: Object3D): number | undefined;
export declare function softBodyControllerFromObject(softBodyObject: Object3D): SoftBodyController | undefined;
export declare function softBodyFromObject(softBodyObject: Object3D): SoftBody | undefined;
export {};
