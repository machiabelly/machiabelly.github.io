import { VideoTexture, LoadingManager, Loader } from 'three';
import { CoreBaseLoader } from './../_Base';
type OnLoad = (texture: VideoTexture) => void;
type OnProgress = (progress: number) => void;
type OnError = (error: Error) => void;
declare class VideoTextureLoader extends Loader<VideoTexture> {
    protected originalUrls: string[];
    constructor(manager: LoadingManager, originalUrls: string[]);
    loadMultipleUrls(urls: string[], onLoad: OnLoad, onProgress?: OnProgress, onError?: OnError): void;
}
export declare class CoreVideoTextureLoader extends CoreBaseLoader<string[]> {
    loadVideo(): Promise<VideoTexture>;
    protected _getLoader(): Promise<VideoTextureLoader>;
}
export {};
