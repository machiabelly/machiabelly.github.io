import { Shape } from 'three';
import { PolyDictionary } from '../../../types/GlobalTypes';
interface Glyph {
    _cachedOutline: any[];
    ha: number;
    o: string;
}
export interface FontData {
    resolution: number;
    boundingBox: {
        yMax: number;
        yMin: number;
    };
    underlineThickness: number;
    glyphs: PolyDictionary<Glyph>;
    familyName: string;
}
export interface FontGenerateShapesOptions {
    size?: number;
    isCCW?: boolean;
}
export declare class Font {
    private data;
    readonly isFont = true;
    readonly type = "font";
    constructor(data: FontData);
    generateShapes(text: string, options?: FontGenerateShapesOptions): Shape[][];
}
export {};
