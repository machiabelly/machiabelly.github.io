import { BufferGeometry } from 'three';
import { CoreBaseLoader } from '../_Base';
import { BaseNodeType } from '../../../engine/nodes/_Base';
export interface JsonDataLoaderOptions {
    dataKeysPrefix?: string;
    skipEntries?: string;
    doConvert?: boolean;
    convertToNumeric?: string;
}
export declare class JsonDataLoader extends CoreBaseLoader<string> {
    protected _node?: BaseNodeType | undefined;
    private _parser;
    constructor(url: string, options?: JsonDataLoaderOptions, _node?: BaseNodeType | undefined);
    load(success_callback: (geometry: BufferGeometry) => void, progress_callback: (() => void) | undefined, error_callback: (error: ErrorEvent) => void | undefined): Promise<void>;
}
