"use strict";
import { LDrawLoader } from "three/examples/jsm/loaders/LDrawLoader";
import { BaseObject3DLoaderHandler } from "./_BaseLoaderHandler";
import { ThreejsCoreObject } from "../../geometry/modules/three/ThreejsCoreObject";
import { CoreType } from "../../Type";
export class MPDLoaderHandler extends BaseObject3DLoaderHandler {
  async _getLoader() {
    return this._loader = this._loader || await new LDrawLoader(this.loadingManager);
  }
  _onLoadSuccess(o) {
    o.rotation.x = Math.PI;
    o.updateMatrix();
    o.traverse((child) => {
      const attribNames = Object.keys(child.userData);
      for (const attribName of attribNames) {
        const value = child.userData[attribName];
        if (value != null) {
          if (CoreType.isString(value) || CoreType.isNumber(value)) {
            ThreejsCoreObject.setAttribute(child, attribName, value);
          } else {
            if (CoreType.isArray(value)) {
              const stringElements = value.filter((item) => CoreType.isString(item));
              const jointedStrings = stringElements.join(" ");
              ThreejsCoreObject.setAttribute(child, attribName, jointedStrings);
            }
          }
        }
      }
    });
    return [o];
  }
}
