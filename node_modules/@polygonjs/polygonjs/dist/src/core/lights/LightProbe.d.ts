import { Constructor } from '../../types/GlobalTypes';
import { DefaultOperationParams } from '../operations/_Base';
import { TypedNodePathParamValue } from '../Walker';
export interface LightProbeParams extends DefaultOperationParams {
    cubeMap: TypedNodePathParamValue;
    intensity: number;
    name: string;
}
export declare const DEFAULT_LIGHT_PROBE_PARAMS: LightProbeParams;
export declare function LightProbeParamConfig<TBase extends Constructor>(Base: TBase): {
    new (...args: any[]): {
        /** @param cubeMap */
        cubeMap: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.NODE_PATH>;
        /** @param light intensity */
        intensity: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.FLOAT>;
        /** @param light name */
        name: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.STRING>;
    };
} & TBase;
