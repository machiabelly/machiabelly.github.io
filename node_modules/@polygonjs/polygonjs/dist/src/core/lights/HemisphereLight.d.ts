import { Constructor } from '../../types/GlobalTypes';
import { Vector3, Color } from 'three';
import { DefaultOperationParams } from '../operations/_Base';
export interface HemisphereLightParams extends DefaultOperationParams {
    skyColor: Color;
    groundColor: Color;
    intensity: number;
    position: Vector3;
    name: string;
}
export declare const DEFAULT_HEMISPHERE_LIGHT_PARAMS: HemisphereLightParams;
export declare function HemisphereLightParamConfig<TBase extends Constructor>(Base: TBase): {
    new (...args: any[]): {
        /** @param sky color */
        skyColor: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.COLOR>;
        /** @param ground color */
        groundColor: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.COLOR>;
        /** @param light intensity */
        intensity: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.FLOAT>;
        /** @param light position */
        position: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.VECTOR3>;
        /** @param light name */
        name: import("../../engine/nodes/utils/params/ParamsConfig").ParamTemplate<import("../../engine/index_all").ParamType.STRING>;
    };
} & TBase;
