import { Camera } from 'three';
import { PolyScene } from '../../engine/scene/PolyScene';
import type { CSS2DRendererRopNode } from '../../engine/nodes/rop/CSS2DRenderer';
import type { CSS3DRendererRopNode } from '../../engine/nodes/rop/CSS3DRenderer';
import type { BaseNodeType } from '../../engine/nodes/_Base';
import { CSS3DRenderer } from '../render/CSSRenderers/CSS3DRenderer';
import { CSS2DRenderer } from '../render/CSSRenderers/CSS2DRenderer';
interface CreateCSSRendererOptions {
    scene: PolyScene;
    camera: Camera;
    canvas: HTMLCanvasElement;
}
type CSSRendererRopNode = CSS3DRendererRopNode | CSS2DRendererRopNode;
type CSSRenderer = CSS3DRenderer | CSS2DRenderer;
export interface CSSRendererConfig {
    cssRenderer: CSSRenderer;
    cssRendererNode: CSSRendererRopNode;
}
export declare class CoreCameraCSSRendererController {
    static isCSSRendererNode(node: BaseNodeType): boolean;
    static cssRendererConfig(options: CreateCSSRendererOptions): CSSRendererConfig | undefined;
}
export {};
