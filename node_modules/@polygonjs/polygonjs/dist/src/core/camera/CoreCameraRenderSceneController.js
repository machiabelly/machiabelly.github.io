"use strict";
import { TypedNode } from "../../engine/nodes/_Base";
import { CameraAttribute } from "./CoreCamera";
import { CoreType } from "../Type";
import { ObjType } from "../../engine/poly/registers/nodes/types/Obj";
import { coreObjectClassFactory } from "../geometry/CoreObjectFactory";
export class CoreCameraRenderSceneController {
  static isRenderSceneNode(node) {
    return node.type() == ObjType.SCENE;
  }
  static renderScene(options) {
    const { scene, camera } = options;
    let sceneNode;
    const foundNodeId = coreObjectClassFactory(camera).attribValue(camera, CameraAttribute.RENDER_SCENE_NODE_ID);
    if (foundNodeId && CoreType.isNumber(foundNodeId)) {
      const foundNode = scene.graph.nodeFromId(foundNodeId);
      if (foundNode && foundNode instanceof TypedNode && this.isRenderSceneNode(foundNode)) {
        sceneNode = foundNode;
        return sceneNode.object;
      }
    }
  }
}
