import { Object3D, Vector2 } from 'three';
export declare enum ParticlesAttribute {
    PARTICLES_NODE_ID = "particles_nodeId",
    MATERIAL_NODE_ID = "particles_materialNodeId",
    DATA_TYPE = "particles_dataType",
    PRE_ROLL_FRAMES_COUNT = "particles_preRollFramesCount"
}
export declare class CoreParticlesBaseAttribute {
    protected static _setVector2(object: Object3D, attribName: ParticlesAttribute, value: Vector2): void;
    protected static _getVector2(object: Object3D, attribName: ParticlesAttribute, target: Vector2): void;
    protected static _setNumber(object: Object3D, attribName: ParticlesAttribute, value: number): void;
    protected static _setBoolean(object: Object3D, attribName: ParticlesAttribute, value: boolean): void;
    protected static _getNumber(object: Object3D, attribName: ParticlesAttribute, defaultValue: number): number;
    protected static _getBoolean(object: Object3D, attribName: ParticlesAttribute, defaultValue: boolean): boolean;
}
export declare class CoreParticlesAttribute extends CoreParticlesBaseAttribute {
    static setParticlesNodeId(object: Object3D, value: number): void;
    static getMaterialNodeId(object: Object3D): number;
    static setMaterialNodeId(object: Object3D, value: number): void;
    static getParticlesNodeId(object: Object3D): number;
    static setDataType(object: Object3D, value: number): void;
    static getDataType(object: Object3D): number;
    static setPreRollFramesCount(object: Object3D, value: number): void;
    static getPreRollFramesCount(object: Object3D): number;
}
