{"version":3,"file":"sceneDataLoader.js","mappings":"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","sources":["webpack://@polygonjs/polygonjs/./src/core/UrlHelper.ts","webpack://@polygonjs/polygonjs/./src/engine/index_sceneDataLoader.ts","webpack://@polygonjs/polygonjs/./src/engine/io/common/EventsDispatcher.ts","webpack://@polygonjs/polygonjs/./src/engine/io/common/Progress.ts","webpack://@polygonjs/polygonjs/./src/engine/io/self_contained/Common.ts","webpack://@polygonjs/polygonjs/./src/engine/io/manifest/import/SceneData.ts","webpack://@polygonjs/polygonjs/./src/engine/poly/utils/PolyEventName.ts"],"sourcesContent":["export function sanitizeUrl(url: string) {\n\treturn url.replace(/([^:]\\/)\\/+/g, '$1').replace(/^\\/+/, '/');\n}\n","import {SceneDataManifestImporter} from './io/manifest/import/SceneData';\nexport {SceneDataManifestImporter};\n","import {PolyEventName} from '../../poly/utils/PolyEventName';\n\nexport class PolyEventsDispatcher {\n\tstatic dispatchProgressEvent(progress: number, sceneName?: string) {\n\t\tconst createEvent = (eventName: string) => {\n\t\t\treturn new CustomEvent(eventName, {\n\t\t\t\tdetail: {\n\t\t\t\t\tprogress,\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t\tdocument.dispatchEvent(createEvent(PolyEventName.POLY_PROGRESS));\n\t\tdocument.dispatchEvent(createEvent(`${PolyEventName.POLY_PROGRESS}-${sceneName}`));\n\t}\n}\n","export const PROGRESS_RATIO = {\n\tsceneData: {start: 0, mult: 0.25},\n\tassets: {start: 0.25, mult: 0.0},\n\tnodes: {start: 0.25, mult: 0.75},\n};\n","export enum SelfContainedFileName {\n\tEXPORT_MANIFEST = 'scene/export_manifest.json',\n\t// SCENE_MANIFEST = 'scene/scene_manifest.json',\n\tCODE_PREFIX = 'scene/code',\n\tPROPERTIES = 'scene/code/properties.json',\n\tEDITOR = 'scene/editor.json',\n\tASSETS = 'scene/assets.json',\n\tPOLYGONJS = 'js/all.js',\n\tSCENE_DATA_LOADER = 'js/sceneDataLoader.js',\n\tPOLY_CONFIG = 'js/polyConfig.js',\n\tJS_FILES = 'scene/js_files.json',\n\tPOSTER = 'images/poster.png',\n}\nexport type JsFilesManifest = {\n\tmodules: string[];\n};\nexport interface SelfContainedManifestContent {\n\tsource: string;\n\tuseConfigureScene: boolean;\n\tversion: {\n\t\tpolygonjs: string;\n\t\teditor: string;\n\t};\n}\n","import {NodeJSONShadersData, NodeJSONFunctionBodiesData} from './../../json/export/Node';\nimport {sanitizeUrl} from '../../../../core/UrlHelper';\nimport {PolyDictionary} from '../../../../types/GlobalTypes';\nimport {PolyEventsDispatcher} from '../../common/EventsDispatcher';\nimport {PROGRESS_RATIO} from '../../common/Progress';\nimport {NodeJsonExporterData, NodeJsonExporterUIData} from '../../json/export/Node';\nimport {SceneJsonExporterData, SceneJsonExporterDataProperties} from '../../json/export/Scene';\nimport {SelfContainedFileName} from '../../self_contained/Common';\n\nexport type ManifestNodesData = PolyDictionary<string>;\nexport type NodeJSONShadersTimestampData = PolyDictionary<PolyDictionary<string>>;\nexport type JsFunctionBodyDataTimestampData = PolyDictionary<string>;\nexport interface ManifestContent {\n\tproperties: string;\n\troot: string;\n\tnodes: ManifestNodesData;\n\tshaders: NodeJSONShadersTimestampData;\n\tjsFunctionBodies: JsFunctionBodyDataTimestampData;\n}\n\ntype ProgressCallback = (ratio: number) => void;\ninterface ImportData {\n\tsceneName?: string;\n\turlPrefix?: string;\n\tmanifest: ManifestContent;\n\teditorMode?: boolean;\n\tonProgress?: ProgressCallback;\n}\n\nexport interface SceneDataElements {\n\troot: NodeJsonExporterData;\n\tproperties: SceneJsonExporterDataProperties;\n\tui?: NodeJsonExporterUIData;\n\tshaders?: NodeJSONShadersData;\n\tjsFunctionBodies?: NodeJSONFunctionBodiesData;\n}\n\ninterface ShaderUrlOptionsBasic {\n\tnodePath: string;\n\tshaderName: string;\n\ttimestamp: string;\n}\ninterface JsFunctionBodyUrlOptionsBasic {\n\tnodePath: string;\n\ttimestamp: string;\n}\ninterface ShaderUrlOptions extends ShaderUrlOptionsBasic {\n\turlPrefix: string;\n}\ninterface JsFunctionBodyUrlOptions extends JsFunctionBodyUrlOptionsBasic {\n\turlPrefix: string;\n}\nfunction _shaderUrl(options: ShaderUrlOptions) {\n\tconst {urlPrefix, nodePath, shaderName, timestamp} = options;\n\treturn `${urlPrefix}/root/${nodePath}.${shaderName}.glsl?t=${timestamp}`;\n}\nfunction _jsFunctionBodyUrl(options: JsFunctionBodyUrlOptions) {\n\tconst {urlPrefix, nodePath, timestamp} = options;\n\treturn `${urlPrefix}/root/${nodePath}.txt?t=${timestamp}`;\n}\nfunction _iterateShaders(manifest: ManifestContent, callback: (options: ShaderUrlOptionsBasic) => void) {\n\tconst shaderNodePaths = Object.keys(manifest.shaders);\n\tfor (let nodePath of shaderNodePaths) {\n\t\tconst nodeShaders = manifest.shaders[nodePath];\n\t\tconst nodeShaderNames = Object.keys(nodeShaders);\n\t\tfor (let shaderName of nodeShaderNames) {\n\t\t\tconst timestamp = nodeShaders[shaderName];\n\t\t\tcallback({nodePath, shaderName, timestamp});\n\t\t}\n\t}\n}\nfunction _iterateFunctionBodies(manifest: ManifestContent, callback: (options: JsFunctionBodyUrlOptionsBasic) => void) {\n\tconst nodePaths = Object.keys(manifest.jsFunctionBodies);\n\tfor (let nodePath of nodePaths) {\n\t\tconst timestamp = manifest.jsFunctionBodies[nodePath];\n\t\tcallback({nodePath, timestamp});\n\t}\n}\n\nexport class SceneDataManifestImporter {\n\tstatic async importSceneData(importData: ImportData): Promise<SceneJsonExporterData> {\n\t\tif (importData.editorMode == null) {\n\t\t\timportData.editorMode = false;\n\t\t}\n\t\tconst manifest = importData.manifest;\n\t\tconst urlPrefix = importData.urlPrefix || SelfContainedFileName.CODE_PREFIX;\n\t\tconst nodePaths = Object.keys(manifest.nodes);\n\t\tconst nodeUrls: string[] = [];\n\t\tfor (let node_path of nodePaths) {\n\t\t\tconst timestamp = manifest.nodes[node_path];\n\t\t\tconst url = `${urlPrefix}/root/${node_path}.json?t=${timestamp}`;\n\t\t\tnodeUrls.push(url);\n\t\t}\n\t\tconst root_url = `${urlPrefix}/root.json?t=${manifest.root}`;\n\t\tconst properties_url = `${urlPrefix}/properties.json?t=${manifest.properties}`;\n\t\tconst allUrls = [root_url, properties_url];\n\n\t\t// add editor urls if needed\n\t\tif (importData.editorMode) {\n\t\t\tconst now = Date.now();\n\t\t\tallUrls.push(`${urlPrefix}/ui.json?t=${now}`);\n\t\t\t//all_urls.push(`${url_prefix}/editor.json?t=${now}`);\n\t\t}\n\n\t\t// add all nodes\n\t\tfor (let nodeUrl of nodeUrls) {\n\t\t\tallUrls.push(nodeUrl);\n\t\t}\n\t\t// add all shaders\n\t\tconst shaderUrls: string[] = [];\n\t\t_iterateShaders(manifest, (options) => {\n\t\t\tconst shaderUrl = _shaderUrl({urlPrefix, ...options});\n\t\t\tallUrls.push(shaderUrl);\n\t\t\tshaderUrls.push(shaderUrl);\n\t\t});\n\t\t// add all function bodies\n\t\tconst jsFunctionBodiesUrls: string[] = [];\n\t\t_iterateFunctionBodies(manifest, (options) => {\n\t\t\tconst jsFunctionBodyUrl = _jsFunctionBodyUrl({urlPrefix, ...options});\n\t\t\tallUrls.push(jsFunctionBodyUrl);\n\t\t\tjsFunctionBodiesUrls.push(jsFunctionBodyUrl);\n\t\t});\n\n\t\tlet count = 0;\n\t\tconst jsonPayloadsCount = allUrls.length - (shaderUrls.length + jsFunctionBodiesUrls.length);\n\t\tconst total = allUrls.length;\n\n\t\tfunction _incrementCount() {\n\t\t\tcount++;\n\t\t\tconst ratio = count / total;\n\t\t\tconst progressRatio = PROGRESS_RATIO.sceneData;\n\t\t\tconst progress = progressRatio.start + progressRatio.mult * ratio;\n\t\t\tif (importData.onProgress) {\n\t\t\t\timportData.onProgress(progress);\n\t\t\t}\n\t\t\tPolyEventsDispatcher.dispatchProgressEvent(progress, importData.sceneName);\n\t\t}\n\n\t\tconst sanitizedUrls = allUrls.map((url) => sanitizeUrl(url));\n\t\tconst promises = sanitizedUrls.map((url) => fetch(url));\n\t\tconst responses = await Promise.all(promises);\n\t\tconst jsonResponses = responses.slice(0, jsonPayloadsCount);\n\t\tconst textResponses = responses.slice(jsonPayloadsCount);\n\t\tconst results = await Promise.all([\n\t\t\t...jsonResponses.map((response) => {\n\t\t\t\t_incrementCount();\n\t\t\t\treturn response.json();\n\t\t\t}),\n\t\t\t...textResponses.map((response) => {\n\t\t\t\t_incrementCount();\n\t\t\t\treturn response.text();\n\t\t\t}),\n\t\t]);\n\t\tconst jsons = results.slice(0, jsonPayloadsCount);\n\t\tconst texts = results.slice(jsonPayloadsCount);\n\t\tlet textIndex = 0;\n\t\tconst shadersData: NodeJSONShadersData = {};\n\t\t_iterateShaders(manifest, (options) => {\n\t\t\tconst text = texts[textIndex];\n\t\t\tconst {nodePath, shaderName} = options;\n\t\t\tshadersData[nodePath] = shadersData[nodePath] || {};\n\t\t\tshadersData[nodePath][shaderName] = text;\n\t\t\ttextIndex++;\n\t\t});\n\t\tconst jsFunctionBodiesData: NodeJSONFunctionBodiesData = {};\n\t\t_iterateFunctionBodies(manifest, (options) => {\n\t\t\tconst text = texts[textIndex];\n\t\t\tconst {nodePath} = options;\n\t\t\tjsFunctionBodiesData[nodePath] = text;\n\t\t\ttextIndex++;\n\t\t});\n\n\t\tconst assembleData: SceneDataElements = {\n\t\t\troot: jsons[0],\n\t\t\tproperties: jsons[1],\n\t\t\tshaders: shadersData,\n\t\t\tjsFunctionBodies: jsFunctionBodiesData,\n\t\t};\n\t\tlet responseOffset = 2;\n\t\tif (importData.editorMode) {\n\t\t\tassembleData['ui'] = jsons[2];\n\t\t\tresponseOffset += 1;\n\t\t}\n\n\t\tconst jsonByName: PolyDictionary<object> = {};\n\t\tconst manifestNodes = Object.keys(manifest.nodes);\n\t\tfor (let i = 0; i < manifestNodes.length; i++) {\n\t\t\tconst manifestName = manifestNodes[i];\n\t\t\tconst json = jsons[i + responseOffset];\n\t\t\tjsonByName[manifestName] = json;\n\t\t}\n\n\t\treturn this.assemble(assembleData, manifestNodes, jsonByName);\n\t}\n\n\tstatic async assemble(\n\t\tassembleData: SceneDataElements,\n\t\tmanifestNodes: string[],\n\t\tjsonByName: PolyDictionary<object>\n\t) {\n\t\tconst sceneData: SceneJsonExporterData = {\n\t\t\troot: assembleData.root,\n\t\t\tproperties: assembleData.properties,\n\t\t\tui: assembleData.ui,\n\t\t\tshaders: assembleData.shaders,\n\t\t\tjsFunctionBodies: assembleData.jsFunctionBodies,\n\t\t};\n\n\t\tfor (let i = 0; i < manifestNodes.length; i++) {\n\t\t\tconst manifestName = manifestNodes[i];\n\t\t\tconst json = jsonByName[manifestName];\n\t\t\tthis._insertChildData(sceneData.root, manifestName, json);\n\t\t}\n\t\treturn sceneData;\n\t}\n\n\tprivate static _insertChildData(data: any, path: string, json: object) {\n\t\tconst elements = path.split('/');\n\t\tif (elements.length == 1) {\n\t\t\tif (!data.nodes) {\n\t\t\t\tdata.nodes = {};\n\t\t\t}\n\t\t\tdata.nodes[path] = json;\n\t\t} else {\n\t\t\tconst parentName: string = elements.shift() as string;\n\t\t\tconst pathWithoutParent: string = elements.join('/');\n\t\t\tconst parentData = data.nodes[parentName];\n\t\t\tthis._insertChildData(parentData, pathWithoutParent, json);\n\t\t}\n\t}\n}\n","export enum PolyEventName {\n\tPOLY_PROGRESS = 'POLYProgress',\n\t// scene\n\tSCENE_CREATED = 'POLYSceneCreated',\n\tSCENE_READY = 'POLYSceneReady',\n\tSCENE_PLAY = 'POLYScenePlay',\n\tSCENE_PAUSE = 'POLYScenePause',\n\t// viewer\n\tVIEWER_MOUNTED = 'POLYViewerMounted',\n\tVIEWER_READY = 'POLYViewerReady',\n}\n"],"names":[],"sourceRoot":""}